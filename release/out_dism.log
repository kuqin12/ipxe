
bin-x86_64-efi/8086100e.efidrv.tmp:     file format elf64-x86-64


Disassembly of section .text:

0000000000001000 <config_exec>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	41 54                	push   %r12
    1006:	48 8d 15 63 3b 02 00 	lea    0x23b63(%rip),%rdx        # 24b70 <config_cmd>
    100d:	55                   	push   %rbp
    100e:	89 fd                	mov    %edi,%ebp
    1010:	53                   	push   %rbx
    1011:	48 89 f3             	mov    %rsi,%rbx
    1014:	48 83 ec 20          	sub    $0x20,%rsp
    1018:	48 8b 05 31 90 02 00 	mov    0x29031(%rip),%rax        # 2a050 <__stack_chk_guard>
    101f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1024:	31 c0                	xor    %eax,%eax
    1026:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
    102b:	e8 5b e2 00 00       	call   f28b <parse_options>
    1030:	41 89 c4             	mov    %eax,%r12d
    1033:	85 c0                	test   %eax,%eax
    1035:	75 50                	jne    1087 <config_exec+0x87>
    1037:	48 63 05 4a 90 02 00 	movslq 0x2904a(%rip),%rax        # 2a088 <optind>
    103e:	48 8d 3d 6f 34 02 00 	lea    0x2346f(%rip),%rdi        # 244b4 <.LC0>
    1045:	39 c5                	cmp    %eax,%ebp
    1047:	7e 04                	jle    104d <config_exec+0x4d>
    1049:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    104d:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    1052:	e8 92 de 00 00       	call   eee9 <parse_settings>
    1057:	41 89 c4             	mov    %eax,%r12d
    105a:	85 c0                	test   %eax,%eax
    105c:	75 29                	jne    1087 <config_exec+0x87>
    105e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    1063:	e8 1f 24 01 00       	call   13487 <settings_ui>
    1068:	41 89 c4             	mov    %eax,%r12d
    106b:	85 c0                	test   %eax,%eax
    106d:	74 18                	je     1087 <config_exec+0x87>
    106f:	89 c7                	mov    %eax,%edi
    1071:	e8 02 28 01 00       	call   13878 <strerror>
    1076:	48 8d 3d 04 17 02 00 	lea    0x21704(%rip),%rdi        # 22781 <.LC1>
    107d:	48 89 c6             	mov    %rax,%rsi
    1080:	31 c0                	xor    %eax,%eax
    1082:	e8 f3 61 01 00       	call   1727a <printf>
    1087:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    108c:	48 2b 05 bd 8f 02 00 	sub    0x28fbd(%rip),%rax        # 2a050 <__stack_chk_guard>
    1093:	74 05                	je     109a <config_exec+0x9a>
    1095:	e8 c6 19 00 00       	call   2a60 <__stack_chk_fail>
    109a:	48 83 c4 20          	add    $0x20,%rsp
    109e:	44 89 e0             	mov    %r12d,%eax
    10a1:	5b                   	pop    %rbx
    10a2:	5d                   	pop    %rbp
    10a3:	41 5c                	pop    %r12
    10a5:	c3                   	ret    

00000000000010a6 <cpuid_exec>:
    10a6:	f3 0f 1e fa          	endbr64 
    10aa:	53                   	push   %rbx
    10ab:	48 8d 15 ee 3a 02 00 	lea    0x23aee(%rip),%rdx        # 24ba0 <cpuid_cmd>
    10b2:	48 89 f3             	mov    %rsi,%rbx
    10b5:	48 83 ec 40          	sub    $0x40,%rsp
    10b9:	48 8b 05 90 8f 02 00 	mov    0x28f90(%rip),%rax        # 2a050 <__stack_chk_guard>
    10c0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    10c5:	31 c0                	xor    %eax,%eax
    10c7:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    10cc:	e8 ba e1 00 00       	call   f28b <parse_options>
    10d1:	85 c0                	test   %eax,%eax
    10d3:	75 57                	jne    112c <cpuid_exec+0x86>
    10d5:	48 63 05 ac 8f 02 00 	movslq 0x28fac(%rip),%rax        # 2a088 <optind>
    10dc:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
    10e1:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    10e5:	e8 64 dc 00 00       	call   ed4e <parse_integer>
    10ea:	85 c0                	test   %eax,%eax
    10ec:	75 3e                	jne    112c <cpuid_exec+0x86>
    10ee:	48 8d 5c 24 28       	lea    0x28(%rsp),%rbx
    10f3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    10f7:	48 89 df             	mov    %rbx,%rdi
    10fa:	e8 44 83 01 00       	call   19443 <x86_features>
    10ff:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
    1104:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
    1109:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    110d:	48 0f 44 d3          	cmove  %rbx,%rdx
    1111:	83 7c 24 24 00       	cmpl   $0x0,0x24(%rsp)
    1116:	8b 4a 04             	mov    0x4(%rdx),%ecx
    1119:	0f 45 0a             	cmovne (%rdx),%ecx
    111c:	89 ca                	mov    %ecx,%edx
    111e:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    1122:	0f a3 ca             	bt     %ecx,%edx
    1125:	72 05                	jb     112c <cpuid_exec+0x86>
    1127:	b8 72 1f 7f d2       	mov    $0xd27f1f72,%eax
    112c:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    1131:	48 2b 15 18 8f 02 00 	sub    0x28f18(%rip),%rdx        # 2a050 <__stack_chk_guard>
    1138:	74 05                	je     113f <cpuid_exec+0x99>
    113a:	e8 21 19 00 00       	call   2a60 <__stack_chk_fail>
    113f:	48 83 c4 40          	add    $0x40,%rsp
    1143:	5b                   	pop    %rbx
    1144:	c3                   	ret    

0000000000001145 <probe_devices>:
    1145:	f3 0f 1e fa          	endbr64 
    1149:	55                   	push   %rbp
    114a:	48 8d 2d a7 7e 02 00 	lea    0x27ea7(%rip),%rbp        # 28ff8 <ipv4_routing_family>
    1151:	53                   	push   %rbx
    1152:	48 8d 1d 7f 7d 02 00 	lea    0x27d7f(%rip),%rbx        # 28ed8 <efi_root_device>
    1159:	52                   	push   %rdx
    115a:	48 39 eb             	cmp    %rbp,%rbx
    115d:	73 44                	jae    11a3 <probe_devices+0x5e>
    115f:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    1163:	48 8d 35 a6 3a 02 00 	lea    0x23aa6(%rip),%rsi        # 24c10 <devices>
    116a:	e8 22 b0 00 00       	call   c191 <extern_list_add>
    116f:	48 8d 43 68          	lea    0x68(%rbx),%rax
    1173:	48 89 df             	mov    %rbx,%rdi
    1176:	48 89 43 68          	mov    %rax,0x68(%rbx)
    117a:	48 89 43 70          	mov    %rax,0x70(%rbx)
    117e:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
    1185:	ff 10                	call   *(%rax)
    1187:	85 c0                	test   %eax,%eax
    1189:	74 0f                	je     119a <probe_devices+0x55>
    118b:	48 8b 53 58          	mov    0x58(%rbx),%rdx
    118f:	48 8b 43 60          	mov    0x60(%rbx),%rax
    1193:	48 89 42 08          	mov    %rax,0x8(%rdx)
    1197:	48 89 10             	mov    %rdx,(%rax)
    119a:	48 81 c3 90 00 00 00 	add    $0x90,%rbx
    11a1:	eb b7                	jmp    115a <probe_devices+0x15>
    11a3:	58                   	pop    %rax
    11a4:	5b                   	pop    %rbx
    11a5:	5d                   	pop    %rbp
    11a6:	c3                   	ret    

00000000000011a7 <identify_device>:
    11a7:	f3 0f 1e fa          	endbr64 
    11ab:	41 54                	push   %r12
    11ad:	48 8d 35 f3 ff ff ff 	lea    -0xd(%rip),%rsi        # 11a7 <identify_device>
    11b4:	45 31 e4             	xor    %r12d,%r12d
    11b7:	53                   	push   %rbx
    11b8:	48 83 ec 18          	sub    $0x18,%rsp
    11bc:	48 8b 05 8d 8e 02 00 	mov    0x28e8d(%rip),%rax        # 2a050 <__stack_chk_guard>
    11c3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    11c8:	31 c0                	xor    %eax,%eax
    11ca:	48 89 e2             	mov    %rsp,%rdx
    11cd:	e8 03 87 00 00       	call   98d5 <intf_get_dest_op_untyped>
    11d2:	48 8b 3c 24          	mov    (%rsp),%rdi
    11d6:	48 89 c3             	mov    %rax,%rbx
    11d9:	e8 a1 86 00 00       	call   987f <intf_object>
    11de:	48 85 db             	test   %rbx,%rbx
    11e1:	74 08                	je     11eb <identify_device+0x44>
    11e3:	48 89 c7             	mov    %rax,%rdi
    11e6:	ff d3                	call   *%rbx
    11e8:	49 89 c4             	mov    %rax,%r12
    11eb:	48 8b 3c 24          	mov    (%rsp),%rdi
    11ef:	e8 1c 86 00 00       	call   9810 <intf_put>
    11f4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    11f9:	48 2b 05 50 8e 02 00 	sub    0x28e50(%rip),%rax        # 2a050 <__stack_chk_guard>
    1200:	74 05                	je     1207 <identify_device+0x60>
    1202:	e8 59 18 00 00       	call   2a60 <__stack_chk_fail>
    1207:	48 83 c4 18          	add    $0x18,%rsp
    120b:	4c 89 e0             	mov    %r12,%rax
    120e:	5b                   	pop    %rbx
    120f:	41 5c                	pop    %r12
    1211:	c3                   	ret    

0000000000001212 <remove_devices>:
    1212:	f3 0f 1e fa          	endbr64 
    1216:	83 3d 8b 89 02 00 00 	cmpl   $0x0,0x2898b(%rip)        # 29ba8 <device_keep_count>
    121d:	75 54                	jne    1273 <remove_devices+0x61>
    121f:	48 8b 05 ea 39 02 00 	mov    0x239ea(%rip),%rax        # 24c10 <devices>
    1226:	41 54                	push   %r12
    1228:	4c 8d 25 e1 39 02 00 	lea    0x239e1(%rip),%r12        # 24c10 <devices>
    122f:	55                   	push   %rbp
    1230:	53                   	push   %rbx
    1231:	48 8b 28             	mov    (%rax),%rbp
    1234:	48 8d 58 a8          	lea    -0x58(%rax),%rbx
    1238:	48 83 ed 58          	sub    $0x58,%rbp
    123c:	48 8d 43 58          	lea    0x58(%rbx),%rax
    1240:	4c 39 e0             	cmp    %r12,%rax
    1243:	74 29                	je     126e <remove_devices+0x5c>
    1245:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
    124c:	48 89 df             	mov    %rbx,%rdi
    124f:	ff 50 08             	call   *0x8(%rax)
    1252:	48 8b 43 60          	mov    0x60(%rbx),%rax
    1256:	48 8b 53 58          	mov    0x58(%rbx),%rdx
    125a:	48 89 eb             	mov    %rbp,%rbx
    125d:	48 89 42 08          	mov    %rax,0x8(%rdx)
    1261:	48 89 10             	mov    %rdx,(%rax)
    1264:	48 8b 45 58          	mov    0x58(%rbp),%rax
    1268:	48 8d 68 a8          	lea    -0x58(%rax),%rbp
    126c:	eb ce                	jmp    123c <remove_devices+0x2a>
    126e:	5b                   	pop    %rbx
    126f:	5d                   	pop    %rbp
    1270:	41 5c                	pop    %r12
    1272:	c3                   	ret    
    1273:	c3                   	ret    

0000000000001274 <pxebs_exec>:
    1274:	f3 0f 1e fa          	endbr64 
    1278:	41 54                	push   %r12
    127a:	48 8d 15 9f 39 02 00 	lea    0x2399f(%rip),%rdx        # 24c20 <pxebs_cmd>
    1281:	53                   	push   %rbx
    1282:	48 89 f3             	mov    %rsi,%rbx
    1285:	48 83 ec 28          	sub    $0x28,%rsp
    1289:	48 8b 05 c0 8d 02 00 	mov    0x28dc0(%rip),%rax        # 2a050 <__stack_chk_guard>
    1290:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1295:	31 c0                	xor    %eax,%eax
    1297:	48 8d 4c 24 0b       	lea    0xb(%rsp),%rcx
    129c:	e8 ea df 00 00       	call   f28b <parse_options>
    12a1:	41 89 c4             	mov    %eax,%r12d
    12a4:	85 c0                	test   %eax,%eax
    12a6:	75 6f                	jne    1317 <pxebs_exec+0xa3>
    12a8:	48 63 05 d9 8d 02 00 	movslq 0x28dd9(%rip),%rax        # 2a088 <optind>
    12af:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    12b4:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    12b8:	e8 44 db 00 00       	call   ee01 <parse_netdev>
    12bd:	41 89 c4             	mov    %eax,%r12d
    12c0:	85 c0                	test   %eax,%eax
    12c2:	75 53                	jne    1317 <pxebs_exec+0xa3>
    12c4:	48 63 05 bd 8d 02 00 	movslq 0x28dbd(%rip),%rax        # 2a088 <optind>
    12cb:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    12d0:	48 8b 7c c3 08       	mov    0x8(%rbx,%rax,8),%rdi
    12d5:	e8 74 da 00 00       	call   ed4e <parse_integer>
    12da:	41 89 c4             	mov    %eax,%r12d
    12dd:	85 c0                	test   %eax,%eax
    12df:	75 36                	jne    1317 <pxebs_exec+0xa3>
    12e1:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    12e5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    12ea:	e8 46 00 00 00       	call   1335 <pxebs>
    12ef:	41 89 c4             	mov    %eax,%r12d
    12f2:	85 c0                	test   %eax,%eax
    12f4:	74 21                	je     1317 <pxebs_exec+0xa3>
    12f6:	89 c7                	mov    %eax,%edi
    12f8:	e8 7b 25 01 00       	call   13878 <strerror>
    12fd:	48 8d 3d cb 14 02 00 	lea    0x214cb(%rip),%rdi        # 227cf <.LC0>
    1304:	48 89 c2             	mov    %rax,%rdx
    1307:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    130c:	48 8d 70 34          	lea    0x34(%rax),%rsi
    1310:	31 c0                	xor    %eax,%eax
    1312:	e8 63 5f 01 00       	call   1727a <printf>
    1317:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    131c:	48 2b 05 2d 8d 02 00 	sub    0x28d2d(%rip),%rax        # 2a050 <__stack_chk_guard>
    1323:	74 05                	je     132a <pxebs_exec+0xb6>
    1325:	e8 36 17 00 00       	call   2a60 <__stack_chk_fail>
    132a:	48 83 c4 28          	add    $0x28,%rsp
    132e:	44 89 e0             	mov    %r12d,%eax
    1331:	5b                   	pop    %rbx
    1332:	41 5c                	pop    %r12
    1334:	c3                   	ret    

0000000000001335 <pxebs>:
    1335:	f3 0f 1e fa          	endbr64 
    1339:	41 54                	push   %r12
    133b:	41 89 f4             	mov    %esi,%r12d
    133e:	31 c0                	xor    %eax,%eax
    1340:	48 8d 77 34          	lea    0x34(%rdi),%rsi
    1344:	55                   	push   %rbp
    1345:	44 89 e2             	mov    %r12d,%edx
    1348:	48 89 fd             	mov    %rdi,%rbp
    134b:	48 8d 3d c7 14 02 00 	lea    0x214c7(%rip),%rdi        # 22819 <.LC0>
    1352:	41 50                	push   %r8
    1354:	e8 21 5f 01 00       	call   1727a <printf>
    1359:	44 89 e2             	mov    %r12d,%edx
    135c:	48 89 ee             	mov    %rbp,%rsi
    135f:	48 8d 3d 9a 55 02 00 	lea    0x2559a(%rip),%rdi        # 26900 <monojob>
    1366:	e8 95 8f 01 00       	call   1a300 <start_pxebs>
    136b:	85 c0                	test   %eax,%eax
    136d:	75 12                	jne    1381 <pxebs+0x4c>
    136f:	59                   	pop    %rcx
    1370:	31 f6                	xor    %esi,%esi
    1372:	48 8d 3d 3b 31 02 00 	lea    0x2313b(%rip),%rdi        # 244b4 <.LC0>
    1379:	5d                   	pop    %rbp
    137a:	41 5c                	pop    %r12
    137c:	e9 86 bf 00 00       	jmp    d307 <monojob_wait>
    1381:	5a                   	pop    %rdx
    1382:	5d                   	pop    %rbp
    1383:	41 5c                	pop    %r12
    1385:	c3                   	ret    

0000000000001386 <dns_label>:
    1386:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    138a:	48 89 f0             	mov    %rsi,%rax
    138d:	48 8d 70 01          	lea    0x1(%rax),%rsi
    1391:	48 39 ce             	cmp    %rcx,%rsi
    1394:	76 02                	jbe    1398 <dns_label+0x12>
    1396:	eb 3a                	jmp    13d2 <dns_label+0x4c>
    1398:	4c 8b 07             	mov    (%rdi),%r8
    139b:	49 01 c0             	add    %rax,%r8
    139e:	41 0f b6 10          	movzbl (%r8),%edx
    13a2:	f6 c2 c0             	test   $0xc0,%dl
    13a5:	74 23                	je     13ca <dns_label+0x44>
    13a7:	48 8d 50 02          	lea    0x2(%rax),%rdx
    13ab:	48 39 d1             	cmp    %rdx,%rcx
    13ae:	73 02                	jae    13b2 <dns_label+0x2c>
    13b0:	eb 20                	jmp    13d2 <dns_label+0x4c>
    13b2:	66 41 8b 10          	mov    (%r8),%dx
    13b6:	86 d6                	xchg   %dl,%dh
    13b8:	81 e2 ff 3f 00 00    	and    $0x3fff,%edx
    13be:	48 39 d0             	cmp    %rdx,%rax
    13c1:	76 05                	jbe    13c8 <dns_label+0x42>
    13c3:	48 89 d0             	mov    %rdx,%rax
    13c6:	eb c5                	jmp    138d <dns_label+0x7>
    13c8:	eb 08                	jmp    13d2 <dns_label+0x4c>
    13ca:	48 01 f2             	add    %rsi,%rdx
    13cd:	48 39 d1             	cmp    %rdx,%rcx
    13d0:	73 05                	jae    13d7 <dns_label+0x51>
    13d2:	b8 7e 9f ee e3       	mov    $0xe3ee9f7e,%eax
    13d7:	c3                   	ret    

00000000000013d8 <dns_done>:
    13d8:	f3 0f 1e fa          	endbr64 
    13dc:	55                   	push   %rbp
    13dd:	89 f5                	mov    %esi,%ebp
    13df:	53                   	push   %rbx
    13e0:	48 89 fb             	mov    %rdi,%rbx
    13e3:	48 8d 7f 50          	lea    0x50(%rdi),%rdi
    13e7:	50                   	push   %rax
    13e8:	e8 bf ef 00 00       	call   103ac <stop_timer>
    13ed:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    13f1:	89 ee                	mov    %ebp,%esi
    13f3:	e8 a7 85 00 00       	call   999f <intf_shutdown>
    13f8:	5a                   	pop    %rdx
    13f9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    13fd:	89 ee                	mov    %ebp,%esi
    13ff:	5b                   	pop    %rbx
    1400:	5d                   	pop    %rbp
    1401:	e9 99 85 00 00       	jmp    999f <intf_shutdown>

0000000000001406 <dns_xfer_close>:
    1406:	f3 0f 1e fa          	endbr64 
    140a:	85 f6                	test   %esi,%esi
    140c:	75 05                	jne    1413 <dns_xfer_close+0xd>
    140e:	be 6b 9f ee f2       	mov    $0xf2ee9f6b,%esi
    1413:	e9 c0 ff ff ff       	jmp    13d8 <dns_done>

0000000000001418 <dns_send_packet.isra.0>:
    1418:	41 54                	push   %r12
    141a:	55                   	push   %rbp
    141b:	48 8d af c2 00 00 00 	lea    0xc2(%rdi),%rbp
    1422:	53                   	push   %rbx
    1423:	48 89 fb             	mov    %rdi,%rbx
    1426:	48 83 c7 50          	add    $0x50,%rdi
    142a:	48 83 ec 50          	sub    $0x50,%rsp
    142e:	48 8b 05 1b 8c 02 00 	mov    0x28c1b(%rip),%rax        # 2a050 <__stack_chk_guard>
    1435:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    143a:	31 c0                	xor    %eax,%eax
    143c:	e8 3d ef 00 00       	call   1037e <start_timer>
    1441:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
    1446:	b9 20 00 00 00       	mov    $0x20,%ecx
    144b:	31 c0                	xor    %eax,%eax
    144d:	4c 89 c7             	mov    %r8,%rdi
    1450:	f3 aa                	rep stos %al,%es:(%rdi)
    1452:	8b 0d 94 87 02 00    	mov    0x28794(%rip),%ecx        # 29bec <dns_count>
    1458:	66 c7 44 24 2c 00 35 	movw   $0x3500,0x2c(%rsp)
    145f:	85 c9                	test   %ecx,%ecx
    1461:	75 05                	jne    1468 <dns_send_packet.isra.0+0x50>
    1463:	e9 8a 00 00 00       	jmp    14f2 <dns_send_packet.isra.0+0xda>
    1468:	8b 05 7a 87 02 00    	mov    0x2877a(%rip),%eax        # 29be8 <dns_index>
    146e:	31 d2                	xor    %edx,%edx
    1470:	f7 f1                	div    %ecx
    1472:	8b 05 80 87 02 00    	mov    0x28780(%rip),%eax        # 29bf8 <dns6+0x8>
    1478:	39 c2                	cmp    %eax,%edx
    147a:	73 1f                	jae    149b <dns_send_packet.isra.0+0x83>
    147c:	89 d6                	mov    %edx,%esi
    147e:	66 c7 44 24 28 02 00 	movw   $0x2,0x28(%rsp)
    1485:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    148a:	48 c1 e6 04          	shl    $0x4,%rsi
    148e:	48 03 35 5b 87 02 00 	add    0x2875b(%rip),%rsi        # 29bf0 <dns6>
    1495:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1496:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1497:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1498:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1499:	eb 17                	jmp    14b2 <dns_send_packet.isra.0+0x9a>
    149b:	29 c2                	sub    %eax,%edx
    149d:	48 8b 05 5c 87 02 00 	mov    0x2875c(%rip),%rax        # 29c00 <dns4>
    14a4:	66 c7 44 24 28 01 00 	movw   $0x1,0x28(%rsp)
    14ab:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    14ae:	89 44 24 30          	mov    %eax,0x30(%rsp)
    14b2:	49 89 e4             	mov    %rsp,%r12
    14b5:	b9 28 00 00 00       	mov    $0x28,%ecx
    14ba:	31 c0                	xor    %eax,%eax
    14bc:	4c 89 e7             	mov    %r12,%rdi
    14bf:	f3 aa                	rep stos %al,%es:(%rdi)
    14c1:	66 83 bb c2 00 00 00 	cmpw   $0x0,0xc2(%rbx)
    14c8:	00 
    14c9:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    14ce:	75 0c                	jne    14dc <dns_send_packet.isra.0+0xc4>
    14d0:	e8 48 e6 00 00       	call   fb1d <random>
    14d5:	66 89 83 c2 00 00 00 	mov    %ax,0xc2(%rbx)
    14dc:	48 8b 93 f8 01 00 00 	mov    0x1f8(%rbx),%rdx
    14e3:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    14e7:	4c 89 e1             	mov    %r12,%rcx
    14ea:	48 89 ee             	mov    %rbp,%rsi
    14ed:	e8 00 63 01 00       	call   177f2 <xfer_deliver_raw_meta>
    14f2:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    14f7:	48 2b 05 52 8b 02 00 	sub    0x28b52(%rip),%rax        # 2a050 <__stack_chk_guard>
    14fe:	74 05                	je     1505 <dns_send_packet.isra.0+0xed>
    1500:	e8 5b 15 00 00       	call   2a60 <__stack_chk_fail>
    1505:	48 83 c4 50          	add    $0x50,%rsp
    1509:	5b                   	pop    %rbx
    150a:	5d                   	pop    %rbp
    150b:	41 5c                	pop    %r12
    150d:	c3                   	ret    

000000000000150e <dns_timer_expired>:
    150e:	f3 0f 1e fa          	endbr64 
    1512:	4c 8d 47 b0          	lea    -0x50(%rdi),%r8
    1516:	85 f6                	test   %esi,%esi
    1518:	74 0d                	je     1527 <dns_timer_expired+0x19>
    151a:	be 6e 9f ee b3       	mov    $0xb3ee9f6e,%esi
    151f:	4c 89 c7             	mov    %r8,%rdi
    1522:	e9 b1 fe ff ff       	jmp    13d8 <dns_done>
    1527:	66 83 7f 72 00       	cmpw   $0x0,0x72(%rdi)
    152c:	74 06                	je     1534 <dns_timer_expired+0x26>
    152e:	ff 05 b4 86 02 00    	incl   0x286b4(%rip)        # 29be8 <dns_index>
    1534:	4c 89 c7             	mov    %r8,%rdi
    1537:	e9 dc fe ff ff       	jmp    1418 <dns_send_packet.isra.0>

000000000000153c <dns_encode>:
    153c:	f3 0f 1e fa          	endbr64 
    1540:	48 8b 0e             	mov    (%rsi),%rcx
    1543:	4c 8b 46 08          	mov    0x8(%rsi),%r8
    1547:	31 d2                	xor    %edx,%edx
    1549:	49 01 c8             	add    %rcx,%r8
    154c:	48 03 4e 10          	add    0x10(%rsi),%rcx
    1550:	4c 89 c0             	mov    %r8,%rax
    1553:	40 8a 37             	mov    (%rdi),%sil
    1556:	48 ff c7             	inc    %rdi
    1559:	40 84 f6             	test   %sil,%sil
    155c:	74 44                	je     15a2 <dns_encode+0x66>
    155e:	40 80 fe 2e          	cmp    $0x2e,%sil
    1562:	75 1c                	jne    1580 <dns_encode+0x44>
    1564:	48 85 d2             	test   %rdx,%rdx
    1567:	75 07                	jne    1570 <dns_encode+0x34>
    1569:	4c 39 c0             	cmp    %r8,%rax
    156c:	74 02                	je     1570 <dns_encode+0x34>
    156e:	eb 0a                	jmp    157a <dns_encode+0x3e>
    1570:	80 3f 00             	cmpb   $0x0,(%rdi)
    1573:	74 2d                	je     15a2 <dns_encode+0x66>
    1575:	48 85 d2             	test   %rdx,%rdx
    1578:	75 11                	jne    158b <dns_encode+0x4f>
    157a:	b8 7e 9f ee e3       	mov    $0xe3ee9f7e,%eax
    157f:	c3                   	ret    
    1580:	48 ff c2             	inc    %rdx
    1583:	48 83 fa 40          	cmp    $0x40,%rdx
    1587:	75 04                	jne    158d <dns_encode+0x51>
    1589:	eb ef                	jmp    157a <dns_encode+0x3e>
    158b:	31 d2                	xor    %edx,%edx
    158d:	48 ff c0             	inc    %rax
    1590:	48 39 c1             	cmp    %rax,%rcx
    1593:	76 be                	jbe    1553 <dns_encode+0x17>
    1595:	40 88 30             	mov    %sil,(%rax)
    1598:	48 89 c6             	mov    %rax,%rsi
    159b:	48 29 d6             	sub    %rdx,%rsi
    159e:	88 16                	mov    %dl,(%rsi)
    15a0:	eb b1                	jmp    1553 <dns_encode+0x17>
    15a2:	48 83 fa 01          	cmp    $0x1,%rdx
    15a6:	48 83 d8 ff          	sbb    $0xffffffffffffffff,%rax
    15aa:	48 39 c8             	cmp    %rcx,%rax
    15ad:	73 03                	jae    15b2 <dns_encode+0x76>
    15af:	c6 00 00             	movb   $0x0,(%rax)
    15b2:	48 ff c0             	inc    %rax
    15b5:	44 29 c0             	sub    %r8d,%eax
    15b8:	c3                   	ret    

00000000000015b9 <apply_dns_settings>:
    15b9:	f3 0f 1e fa          	endbr64 
    15bd:	55                   	push   %rbp
    15be:	53                   	push   %rbx
    15bf:	48 83 ec 18          	sub    $0x18,%rsp
    15c3:	48 8b 3d 36 86 02 00 	mov    0x28636(%rip),%rdi        # 29c00 <dns4>
    15ca:	48 8b 05 7f 8a 02 00 	mov    0x28a7f(%rip),%rax        # 2a050 <__stack_chk_guard>
    15d1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    15d6:	31 c0                	xor    %eax,%eax
    15d8:	e8 45 b1 00 00       	call   c722 <free>
    15dd:	48 8b 3d 0c 86 02 00 	mov    0x2860c(%rip),%rdi        # 29bf0 <dns6>
    15e4:	e8 39 b1 00 00       	call   c722 <free>
    15e9:	31 ff                	xor    %edi,%edi
    15eb:	48 8d 15 0e 86 02 00 	lea    0x2860e(%rip),%rdx        # 29c00 <dns4>
    15f2:	48 8d 35 67 7e 02 00 	lea    0x27e67(%rip),%rsi        # 29460 <dns_setting>
    15f9:	48 c7 05 fc 85 02 00 	movq   $0x0,0x285fc(%rip)        # 29c00 <dns4>
    1600:	00 00 00 00 
    1604:	48 c7 05 e1 85 02 00 	movq   $0x0,0x285e1(%rip)        # 29bf0 <dns6>
    160b:	00 00 00 00 
    160f:	c7 05 ef 85 02 00 00 	movl   $0x0,0x285ef(%rip)        # 29c08 <dns4+0x8>
    1616:	00 00 00 
    1619:	c7 05 d5 85 02 00 00 	movl   $0x0,0x285d5(%rip)        # 29bf8 <dns6+0x8>
    1620:	00 00 00 
    1623:	e8 92 08 01 00       	call   11eba <fetch_raw_setting_copy>
    1628:	85 c0                	test   %eax,%eax
    162a:	78 0c                	js     1638 <apply_dns_settings+0x7f>
    162c:	48 98                	cltq   
    162e:	48 c1 e8 02          	shr    $0x2,%rax
    1632:	89 05 d0 85 02 00    	mov    %eax,0x285d0(%rip)        # 29c08 <dns4+0x8>
    1638:	31 ff                	xor    %edi,%edi
    163a:	48 8d 15 af 85 02 00 	lea    0x285af(%rip),%rdx        # 29bf0 <dns6>
    1641:	48 8d 35 40 7e 02 00 	lea    0x27e40(%rip),%rsi        # 29488 <dns6_setting>
    1648:	e8 6d 08 01 00       	call   11eba <fetch_raw_setting_copy>
    164d:	85 c0                	test   %eax,%eax
    164f:	78 0c                	js     165d <apply_dns_settings+0xa4>
    1651:	48 98                	cltq   
    1653:	48 c1 e8 04          	shr    $0x4,%rax
    1657:	89 05 9b 85 02 00    	mov    %eax,0x2859b(%rip)        # 29bf8 <dns6+0x8>
    165d:	48 8b 3d 6c 85 02 00 	mov    0x2856c(%rip),%rdi        # 29bd0 <dns_search>
    1664:	8b 05 8e 85 02 00    	mov    0x2858e(%rip),%eax        # 29bf8 <dns6+0x8>
    166a:	48 8d 2d 5f 85 02 00 	lea    0x2855f(%rip),%rbp        # 29bd0 <dns_search>
    1671:	03 05 91 85 02 00    	add    0x28591(%rip),%eax        # 29c08 <dns4+0x8>
    1677:	89 05 6f 85 02 00    	mov    %eax,0x2856f(%rip)        # 29bec <dns_count>
    167d:	e8 a0 b0 00 00       	call   c722 <free>
    1682:	48 89 ef             	mov    %rbp,%rdi
    1685:	31 c0                	xor    %eax,%eax
    1687:	ab                   	stos   %eax,%es:(%rdi)
    1688:	ab                   	stos   %eax,%es:(%rdi)
    1689:	ab                   	stos   %eax,%es:(%rdi)
    168a:	ab                   	stos   %eax,%es:(%rdi)
    168b:	ab                   	stos   %eax,%es:(%rdi)
    168c:	ab                   	stos   %eax,%es:(%rdi)
    168d:	31 ff                	xor    %edi,%edi
    168f:	48 89 ea             	mov    %rbp,%rdx
    1692:	48 8d 35 17 7e 02 00 	lea    0x27e17(%rip),%rsi        # 294b0 <dnssl_setting>
    1699:	e8 1c 08 01 00       	call   11eba <fetch_raw_setting_copy>
    169e:	85 c0                	test   %eax,%eax
    16a0:	78 0b                	js     16ad <apply_dns_settings+0xf4>
    16a2:	48 98                	cltq   
    16a4:	48 89 05 35 85 02 00 	mov    %rax,0x28535(%rip)        # 29be0 <dns_search+0x10>
    16ab:	eb 59                	jmp    1706 <apply_dns_settings+0x14d>
    16ad:	31 ff                	xor    %edi,%edi
    16af:	48 89 e2             	mov    %rsp,%rdx
    16b2:	48 8d 35 1f 7e 02 00 	lea    0x27e1f(%rip),%rsi        # 294d8 <domain_setting>
    16b9:	e8 0c 08 01 00       	call   11eca <fetch_string_setting_copy>
    16be:	48 8b 3c 24          	mov    (%rsp),%rdi
    16c2:	48 85 ff             	test   %rdi,%rdi
    16c5:	74 3f                	je     1706 <apply_dns_settings+0x14d>
    16c7:	48 89 ee             	mov    %rbp,%rsi
    16ca:	e8 6d fe ff ff       	call   153c <dns_encode>
    16cf:	85 c0                	test   %eax,%eax
    16d1:	78 2a                	js     16fd <apply_dns_settings+0x144>
    16d3:	48 63 d8             	movslq %eax,%rbx
    16d6:	48 89 df             	mov    %rbx,%rdi
    16d9:	e8 37 b0 00 00       	call   c715 <malloc>
    16de:	48 89 05 eb 84 02 00 	mov    %rax,0x284eb(%rip)        # 29bd0 <dns_search>
    16e5:	48 85 c0             	test   %rax,%rax
    16e8:	74 13                	je     16fd <apply_dns_settings+0x144>
    16ea:	48 8b 3c 24          	mov    (%rsp),%rdi
    16ee:	48 89 ee             	mov    %rbp,%rsi
    16f1:	48 89 1d e8 84 02 00 	mov    %rbx,0x284e8(%rip)        # 29be0 <dns_search+0x10>
    16f8:	e8 3f fe ff ff       	call   153c <dns_encode>
    16fd:	48 8b 3c 24          	mov    (%rsp),%rdi
    1701:	e8 1c b0 00 00       	call   c722 <free>
    1706:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    170b:	48 2b 05 3e 89 02 00 	sub    0x2893e(%rip),%rax        # 2a050 <__stack_chk_guard>
    1712:	74 05                	je     1719 <apply_dns_settings+0x160>
    1714:	e8 47 13 00 00       	call   2a60 <__stack_chk_fail>
    1719:	48 83 c4 18          	add    $0x18,%rsp
    171d:	31 c0                	xor    %eax,%eax
    171f:	5b                   	pop    %rbx
    1720:	5d                   	pop    %rbp
    1721:	c3                   	ret    

0000000000001722 <dns_decode>:
    1722:	f3 0f 1e fa          	endbr64 
    1726:	41 57                	push   %r15
    1728:	45 31 c9             	xor    %r9d,%r9d
    172b:	41 56                	push   %r14
    172d:	41 55                	push   %r13
    172f:	49 89 d5             	mov    %rdx,%r13
    1732:	41 54                	push   %r12
    1734:	55                   	push   %rbp
    1735:	48 89 fd             	mov    %rdi,%rbp
    1738:	53                   	push   %rbx
    1739:	48 89 f3             	mov    %rsi,%rbx
    173c:	48 83 ec 28          	sub    $0x28,%rsp
    1740:	44 8b 77 10          	mov    0x10(%rdi),%r14d
    1744:	8b 77 08             	mov    0x8(%rdi),%esi
    1747:	45 85 f6             	test   %r14d,%r14d
    174a:	0f 84 a3 00 00 00    	je     17f3 <dns_decode+0xd1>
    1750:	48 63 f6             	movslq %esi,%rsi
    1753:	48 89 ef             	mov    %rbp,%rdi
    1756:	e8 2b fc ff ff       	call   1386 <dns_label>
    175b:	41 89 c4             	mov    %eax,%r12d
    175e:	85 c0                	test   %eax,%eax
    1760:	0f 88 93 00 00 00    	js     17f9 <dns_decode+0xd7>
    1766:	48 98                	cltq   
    1768:	48 03 45 00          	add    0x0(%rbp),%rax
    176c:	44 0f b6 00          	movzbl (%rax),%r8d
    1770:	48 8d 70 01          	lea    0x1(%rax),%rsi
    1774:	4c 89 c1             	mov    %r8,%rcx
    1777:	4d 85 c0             	test   %r8,%r8
    177a:	75 0d                	jne    1789 <dns_decode+0x67>
    177c:	4d 39 e9             	cmp    %r13,%r9
    177f:	73 03                	jae    1784 <dns_decode+0x62>
    1781:	c6 03 00             	movb   $0x0,(%rbx)
    1784:	45 89 cc             	mov    %r9d,%r12d
    1787:	eb 70                	jmp    17f9 <dns_decode+0xd7>
    1789:	45 31 d2             	xor    %r10d,%r10d
    178c:	4d 85 c9             	test   %r9,%r9
    178f:	74 0f                	je     17a0 <dns_decode+0x7e>
    1791:	4d 8d 51 01          	lea    0x1(%r9),%r10
    1795:	4d 39 e9             	cmp    %r13,%r9
    1798:	73 06                	jae    17a0 <dns_decode+0x7e>
    179a:	c6 03 2e             	movb   $0x2e,(%rbx)
    179d:	48 ff c3             	inc    %rbx
    17a0:	31 c0                	xor    %eax,%eax
    17a2:	4d 39 ea             	cmp    %r13,%r10
    17a5:	73 06                	jae    17ad <dns_decode+0x8b>
    17a7:	4c 89 e8             	mov    %r13,%rax
    17aa:	4c 29 d0             	sub    %r10,%rax
    17ad:	4c 39 c0             	cmp    %r8,%rax
    17b0:	48 89 df             	mov    %rbx,%rdi
    17b3:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    17b8:	49 0f 47 c0          	cmova  %r8,%rax
    17bc:	88 4c 24 17          	mov    %cl,0x17(%rsp)
    17c0:	41 ff ce             	dec    %r14d
    17c3:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    17c8:	48 89 c2             	mov    %rax,%rdx
    17cb:	49 89 c7             	mov    %rax,%r15
    17ce:	e8 16 5c 01 00       	call   173e9 <__memcpy>
    17d3:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    17d8:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    17dd:	4c 01 fb             	add    %r15,%rbx
    17e0:	0f b6 4c 24 17       	movzbl 0x17(%rsp),%ecx
    17e5:	4f 8d 0c 02          	lea    (%r10,%r8,1),%r9
    17e9:	41 8d 74 0c 01       	lea    0x1(%r12,%rcx,1),%esi
    17ee:	e9 54 ff ff ff       	jmp    1747 <dns_decode+0x25>
    17f3:	41 bc 7e 9f ee e3    	mov    $0xe3ee9f7e,%r12d
    17f9:	48 83 c4 28          	add    $0x28,%rsp
    17fd:	44 89 e0             	mov    %r12d,%eax
    1800:	5b                   	pop    %rbx
    1801:	5d                   	pop    %rbp
    1802:	41 5c                	pop    %r12
    1804:	41 5d                	pop    %r13
    1806:	41 5e                	pop    %r14
    1808:	41 5f                	pop    %r15
    180a:	c3                   	ret    

000000000000180b <dns_progress>:
    180b:	f3 0f 1e fa          	endbr64 
    180f:	53                   	push   %rbx
    1810:	48 81 c7 d8 01 00 00 	add    $0x1d8,%rdi
    1817:	48 89 f3             	mov    %rsi,%rbx
    181a:	ba 1f 00 00 00       	mov    $0x1f,%edx
    181f:	48 83 c6 10          	add    $0x10,%rsi
    1823:	e8 fa fe ff ff       	call   1722 <dns_decode>
    1828:	85 c0                	test   %eax,%eax
    182a:	79 04                	jns    1830 <dns_progress+0x25>
    182c:	c6 43 10 00          	movb   $0x0,0x10(%rbx)
    1830:	31 c0                	xor    %eax,%eax
    1832:	5b                   	pop    %rbx
    1833:	c3                   	ret    

0000000000001834 <dns_compare>:
    1834:	f3 0f 1e fa          	endbr64 
    1838:	41 54                	push   %r12
    183a:	55                   	push   %rbp
    183b:	48 89 f5             	mov    %rsi,%rbp
    183e:	53                   	push   %rbx
    183f:	44 8b 5f 10          	mov    0x10(%rdi),%r11d
    1843:	48 89 fb             	mov    %rdi,%rbx
    1846:	44 8b 4f 08          	mov    0x8(%rdi),%r9d
    184a:	44 8b 56 08          	mov    0x8(%rsi),%r10d
    184e:	45 85 db             	test   %r11d,%r11d
    1851:	0f 84 92 00 00 00    	je     18e9 <dns_compare+0xb5>
    1857:	49 63 f1             	movslq %r9d,%rsi
    185a:	48 89 df             	mov    %rbx,%rdi
    185d:	e8 24 fb ff ff       	call   1386 <dns_label>
    1862:	41 89 c1             	mov    %eax,%r9d
    1865:	85 c0                	test   %eax,%eax
    1867:	0f 88 8c 00 00 00    	js     18f9 <dns_compare+0xc5>
    186d:	49 63 f2             	movslq %r10d,%rsi
    1870:	48 89 ef             	mov    %rbp,%rdi
    1873:	e8 0e fb ff ff       	call   1386 <dns_label>
    1878:	85 c0                	test   %eax,%eax
    187a:	78 75                	js     18f1 <dns_compare+0xbd>
    187c:	49 63 c9             	movslq %r9d,%rcx
    187f:	48 63 f8             	movslq %eax,%rdi
    1882:	48 03 0b             	add    (%rbx),%rcx
    1885:	48 03 7d 00          	add    0x0(%rbp),%rdi
    1889:	0f b6 31             	movzbl (%rcx),%esi
    188c:	40 3a 37             	cmp    (%rdi),%sil
    188f:	74 02                	je     1893 <dns_compare+0x5f>
    1891:	eb 37                	jmp    18ca <dns_compare+0x96>
    1893:	48 85 f6             	test   %rsi,%rsi
    1896:	74 5e                	je     18f6 <dns_compare+0xc2>
    1898:	31 d2                	xor    %edx,%edx
    189a:	44 0f b6 44 11 01    	movzbl 0x1(%rcx,%rdx,1),%r8d
    18a0:	45 8d 50 bf          	lea    -0x41(%r8),%r10d
    18a4:	41 83 fa 19          	cmp    $0x19,%r10d
    18a8:	77 04                	ja     18ae <dns_compare+0x7a>
    18aa:	41 83 c0 20          	add    $0x20,%r8d
    18ae:	44 0f b6 54 17 01    	movzbl 0x1(%rdi,%rdx,1),%r10d
    18b4:	45 8d 62 bf          	lea    -0x41(%r10),%r12d
    18b8:	41 83 fc 19          	cmp    $0x19,%r12d
    18bc:	77 04                	ja     18c2 <dns_compare+0x8e>
    18be:	41 83 c2 20          	add    $0x20,%r10d
    18c2:	48 ff c2             	inc    %rdx
    18c5:	45 39 c2             	cmp    %r8d,%r10d
    18c8:	74 08                	je     18d2 <dns_compare+0x9e>
    18ca:	41 b9 72 9f ee d2    	mov    $0xd2ee9f72,%r9d
    18d0:	eb 27                	jmp    18f9 <dns_compare+0xc5>
    18d2:	48 39 d6             	cmp    %rdx,%rsi
    18d5:	75 c3                	jne    189a <dns_compare+0x66>
    18d7:	48 ff c6             	inc    %rsi
    18da:	41 ff cb             	dec    %r11d
    18dd:	41 01 f1             	add    %esi,%r9d
    18e0:	44 8d 14 30          	lea    (%rax,%rsi,1),%r10d
    18e4:	e9 65 ff ff ff       	jmp    184e <dns_compare+0x1a>
    18e9:	41 b9 7e 9f ee e3    	mov    $0xe3ee9f7e,%r9d
    18ef:	eb 08                	jmp    18f9 <dns_compare+0xc5>
    18f1:	41 89 c1             	mov    %eax,%r9d
    18f4:	eb 03                	jmp    18f9 <dns_compare+0xc5>
    18f6:	45 31 c9             	xor    %r9d,%r9d
    18f9:	5b                   	pop    %rbx
    18fa:	44 89 c8             	mov    %r9d,%eax
    18fd:	5d                   	pop    %rbp
    18fe:	41 5c                	pop    %r12
    1900:	c3                   	ret    

0000000000001901 <dns_copy>:
    1901:	f3 0f 1e fa          	endbr64 
    1905:	41 57                	push   %r15
    1907:	41 56                	push   %r14
    1909:	49 89 f6             	mov    %rsi,%r14
    190c:	41 55                	push   %r13
    190e:	49 89 fd             	mov    %rdi,%r13
    1911:	41 54                	push   %r12
    1913:	55                   	push   %rbp
    1914:	53                   	push   %rbx
    1915:	48 83 ec 18          	sub    $0x18,%rsp
    1919:	8b 5f 10             	mov    0x10(%rdi),%ebx
    191c:	44 8b 67 08          	mov    0x8(%rdi),%r12d
    1920:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
    1924:	85 db                	test   %ebx,%ebx
    1926:	74 63                	je     198b <dns_copy+0x8a>
    1928:	49 63 f4             	movslq %r12d,%rsi
    192b:	4c 89 ef             	mov    %r13,%rdi
    192e:	e8 53 fa ff ff       	call   1386 <dns_label>
    1933:	41 89 c4             	mov    %eax,%r12d
    1936:	85 c0                	test   %eax,%eax
    1938:	78 57                	js     1991 <dns_copy+0x90>
    193a:	48 63 f0             	movslq %eax,%rsi
    193d:	49 03 75 00          	add    0x0(%r13),%rsi
    1941:	49 8b 46 10          	mov    0x10(%r14),%rax
    1945:	31 d2                	xor    %edx,%edx
    1947:	0f b6 0e             	movzbl (%rsi),%ecx
    194a:	4c 8d 79 01          	lea    0x1(%rcx),%r15
    194e:	48 39 e8             	cmp    %rbp,%rax
    1951:	76 06                	jbe    1959 <dns_copy+0x58>
    1953:	48 29 e8             	sub    %rbp,%rax
    1956:	48 89 c2             	mov    %rax,%rdx
    1959:	4c 39 fa             	cmp    %r15,%rdx
    195c:	49 8b 3e             	mov    (%r14),%rdi
    195f:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    1964:	49 0f 47 d7          	cmova  %r15,%rdx
    1968:	45 01 fc             	add    %r15d,%r12d
    196b:	ff cb                	dec    %ebx
    196d:	48 01 ef             	add    %rbp,%rdi
    1970:	4c 01 fd             	add    %r15,%rbp
    1973:	e8 71 5a 01 00       	call   173e9 <__memcpy>
    1978:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    197d:	48 85 c9             	test   %rcx,%rcx
    1980:	75 a2                	jne    1924 <dns_copy+0x23>
    1982:	41 89 ec             	mov    %ebp,%r12d
    1985:	45 2b 66 08          	sub    0x8(%r14),%r12d
    1989:	eb 06                	jmp    1991 <dns_copy+0x90>
    198b:	41 bc 7e 9f ee e3    	mov    $0xe3ee9f7e,%r12d
    1991:	48 83 c4 18          	add    $0x18,%rsp
    1995:	44 89 e0             	mov    %r12d,%eax
    1998:	5b                   	pop    %rbx
    1999:	5d                   	pop    %rbp
    199a:	41 5c                	pop    %r12
    199c:	41 5d                	pop    %r13
    199e:	41 5e                	pop    %r14
    19a0:	41 5f                	pop    %r15
    19a2:	c3                   	ret    

00000000000019a3 <dns_question>:
    19a3:	53                   	push   %rbx
    19a4:	48 89 fb             	mov    %rdi,%rbx
    19a7:	48 8b 87 18 02 00 00 	mov    0x218(%rdi),%rax
    19ae:	48 8d bf 08 02 00 00 	lea    0x208(%rdi),%rdi
    19b5:	48 39 83 10 02 00 00 	cmp    %rax,0x210(%rbx)
    19bc:	75 07                	jne    19c5 <dns_question+0x22>
    19be:	48 8d 3d 7b 32 02 00 	lea    0x2327b(%rip),%rdi        # 24c40 <search_root.0>
    19c5:	48 8b 83 00 02 00 00 	mov    0x200(%rbx),%rax
    19cc:	48 8d b3 d8 01 00 00 	lea    0x1d8(%rbx),%rsi
    19d3:	48 89 83 e0 01 00 00 	mov    %rax,0x1e0(%rbx)
    19da:	e8 22 ff ff ff       	call   1901 <dns_copy>
    19df:	85 c0                	test   %eax,%eax
    19e1:	78 58                	js     1a3b <dns_question+0x98>
    19e3:	48 98                	cltq   
    19e5:	48 03 83 e0 01 00 00 	add    0x1e0(%rbx),%rax
    19ec:	48 39 83 e8 01 00 00 	cmp    %rax,0x1e8(%rbx)
    19f3:	73 07                	jae    19fc <dns_question+0x59>
    19f5:	b8 7e 9f ee e3       	mov    $0xe3ee9f7e,%eax
    19fa:	eb 3f                	jmp    1a3b <dns_question+0x98>
    19fc:	8b 8b c0 00 00 00    	mov    0xc0(%rbx),%ecx
    1a02:	48 8d 94 03 c2 00 00 	lea    0xc2(%rbx,%rax,1),%rdx
    1a09:	00 
    1a0a:	48 83 c0 04          	add    $0x4,%rax
    1a0e:	48 89 93 f0 01 00 00 	mov    %rdx,0x1f0(%rbx)
    1a15:	66 89 0a             	mov    %cx,(%rdx)
    1a18:	66 c7 42 02 00 01    	movw   $0x100,0x2(%rdx)
    1a1e:	48 c7 83 e0 01 00 00 	movq   $0xc,0x1e0(%rbx)
    1a25:	0c 00 00 00 
    1a29:	66 c7 83 c2 00 00 00 	movw   $0x0,0xc2(%rbx)
    1a30:	00 00 
    1a32:	48 89 83 f8 01 00 00 	mov    %rax,0x1f8(%rbx)
    1a39:	31 c0                	xor    %eax,%eax
    1a3b:	5b                   	pop    %rbx
    1a3c:	c3                   	ret    

0000000000001a3d <dns_resolv>:
    1a3d:	f3 0f 1e fa          	endbr64 
    1a41:	83 3d a4 81 02 00 00 	cmpl   $0x0,0x281a4(%rip)        # 29bec <dns_count>
    1a48:	75 06                	jne    1a50 <dns_resolv+0x13>
    1a4a:	b8 72 9d ee c1       	mov    $0xc1ee9d72,%eax
    1a4f:	c3                   	ret    
    1a50:	41 57                	push   %r15
    1a52:	49 89 d7             	mov    %rdx,%r15
    1a55:	41 56                	push   %r14
    1a57:	45 31 f6             	xor    %r14d,%r14d
    1a5a:	41 55                	push   %r13
    1a5c:	49 89 fd             	mov    %rdi,%r13
    1a5f:	41 54                	push   %r12
    1a61:	49 89 f4             	mov    %rsi,%r12
    1a64:	be 2e 00 00 00       	mov    $0x2e,%esi
    1a69:	55                   	push   %rbp
    1a6a:	4c 89 e7             	mov    %r12,%rdi
    1a6d:	48 83 ec 10          	sub    $0x10,%rsp
    1a71:	e8 ad 1f 01 00       	call   13a23 <strchr>
    1a76:	48 85 c0             	test   %rax,%rax
    1a79:	75 07                	jne    1a82 <dns_resolv+0x45>
    1a7b:	4c 8b 35 5e 81 02 00 	mov    0x2815e(%rip),%r14        # 29be0 <dns_search+0x10>
    1a82:	49 8d be 28 02 00 00 	lea    0x228(%r14),%rdi
    1a89:	e8 a8 ac 00 00       	call   c736 <zalloc>
    1a8e:	48 89 c5             	mov    %rax,%rbp
    1a91:	48 85 c0             	test   %rax,%rax
    1a94:	75 0a                	jne    1aa0 <dns_resolv+0x63>
    1a96:	b8 77 9f ee ce       	mov    $0xceee9f77,%eax
    1a9b:	e9 39 01 00 00       	jmp    1bd9 <dns_resolv+0x19c>
    1aa0:	48 8d 05 19 4a 02 00 	lea    0x24a19(%rip),%rax        # 264c0 <null_intf>
    1aa7:	48 8d 15 b2 31 02 00 	lea    0x231b2(%rip),%rdx        # 24c60 <dns_resolv_desc>
    1aae:	4c 89 fe             	mov    %r15,%rsi
    1ab1:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
    1ab5:	48 89 45 10          	mov    %rax,0x10(%rbp)
    1ab9:	48 8d bd a0 00 00 00 	lea    0xa0(%rbp),%rdi
    1ac0:	48 89 45 30          	mov    %rax,0x30(%rbp)
    1ac4:	48 8d 05 d5 31 02 00 	lea    0x231d5(%rip),%rax        # 24ca0 <dns_socket_desc>
    1acb:	48 89 55 20          	mov    %rdx,0x20(%rbp)
    1acf:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    1ad3:	ba 20 00 00 00       	mov    $0x20,%edx
    1ad8:	48 89 45 40          	mov    %rax,0x40(%rbp)
    1adc:	48 89 45 48          	mov    %rax,0x48(%rbp)
    1ae0:	48 8d 05 27 fa ff ff 	lea    -0x5d9(%rip),%rax        # 150e <dns_timer_expired>
    1ae7:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
    1aeb:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    1af2:	48 89 ad 98 00 00 00 	mov    %rbp,0x98(%rbp)
    1af9:	e8 eb 58 01 00       	call   173e9 <__memcpy>
    1afe:	48 8b 35 cb 80 02 00 	mov    0x280cb(%rip),%rsi        # 29bd0 <dns_search>
    1b05:	4c 89 f2             	mov    %r14,%rdx
    1b08:	48 8d bd 28 02 00 00 	lea    0x228(%rbp),%rdi
    1b0f:	48 89 bd 08 02 00 00 	mov    %rdi,0x208(%rbp)
    1b16:	4c 89 b5 18 02 00 00 	mov    %r14,0x218(%rbp)
    1b1d:	e8 c7 58 01 00       	call   173e9 <__memcpy>
    1b22:	83 3d cf 80 02 00 01 	cmpl   $0x1,0x280cf(%rip)        # 29bf8 <dns6+0x8>
    1b29:	48 8d b5 d8 01 00 00 	lea    0x1d8(%rbp),%rsi
    1b30:	4c 89 e7             	mov    %r12,%rdi
    1b33:	c7 85 c4 00 00 00 01 	movl   $0x1000001,0xc4(%rbp)
    1b3a:	00 00 01 
    1b3d:	19 c0                	sbb    %eax,%eax
    1b3f:	48 c7 85 e0 01 00 00 	movq   $0xc,0x1e0(%rbp)
    1b46:	0c 00 00 00 
    1b4a:	66 25 00 e5          	and    $0xe500,%ax
    1b4e:	48 c7 85 e8 01 00 00 	movq   $0x10b,0x1e8(%rbp)
    1b55:	0b 01 00 00 
    1b59:	66 05 00 1c          	add    $0x1c00,%ax
    1b5d:	66 89 85 c0 00 00 00 	mov    %ax,0xc0(%rbp)
    1b64:	48 8d 85 c2 00 00 00 	lea    0xc2(%rbp),%rax
    1b6b:	48 89 85 d8 01 00 00 	mov    %rax,0x1d8(%rbp)
    1b72:	e8 c5 f9 ff ff       	call   153c <dns_encode>
    1b77:	85 c0                	test   %eax,%eax
    1b79:	78 4e                	js     1bc9 <dns_resolv+0x18c>
    1b7b:	4c 63 e0             	movslq %eax,%r12
    1b7e:	48 89 ef             	mov    %rbp,%rdi
    1b81:	49 83 c4 0b          	add    $0xb,%r12
    1b85:	4c 89 a5 00 02 00 00 	mov    %r12,0x200(%rbp)
    1b8c:	e8 12 fe ff ff       	call   19a3 <dns_question>
    1b91:	85 c0                	test   %eax,%eax
    1b93:	75 34                	jne    1bc9 <dns_resolv+0x18c>
    1b95:	8b 35 a5 2a 02 00    	mov    0x22aa5(%rip),%esi        # 24640 <udp_sock_dgram>
    1b9b:	31 c9                	xor    %ecx,%ecx
    1b9d:	31 d2                	xor    %edx,%edx
    1b9f:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    1ba3:	e8 ee cf 00 00       	call   eb96 <xfer_open_socket>
    1ba8:	85 c0                	test   %eax,%eax
    1baa:	75 1d                	jne    1bc9 <dns_resolv+0x18c>
    1bac:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    1bb0:	31 f6                	xor    %esi,%esi
    1bb2:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    1bb6:	e8 83 e7 00 00       	call   1033e <start_timer_fixed>
    1bbb:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    1bbf:	4c 89 ee             	mov    %r13,%rsi
    1bc2:	e8 7a 7c 00 00       	call   9841 <intf_plug_plug>
    1bc7:	eb 04                	jmp    1bcd <dns_resolv+0x190>
    1bc9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    1bcd:	48 89 ef             	mov    %rbp,%rdi
    1bd0:	e8 45 e3 00 00       	call   ff1a <ref_decrement>
    1bd5:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    1bd9:	48 83 c4 10          	add    $0x10,%rsp
    1bdd:	5d                   	pop    %rbp
    1bde:	41 5c                	pop    %r12
    1be0:	41 5d                	pop    %r13
    1be2:	41 5e                	pop    %r14
    1be4:	41 5f                	pop    %r15
    1be6:	c3                   	ret    

0000000000001be7 <dns_skip>:
    1be7:	f3 0f 1e fa          	endbr64 
    1beb:	44 8b 57 10          	mov    0x10(%rdi),%r10d
    1bef:	44 8b 4f 08          	mov    0x8(%rdi),%r9d
    1bf3:	45 85 d2             	test   %r10d,%r10d
    1bf6:	74 30                	je     1c28 <dns_skip+0x41>
    1bf8:	4d 63 d9             	movslq %r9d,%r11
    1bfb:	4c 89 de             	mov    %r11,%rsi
    1bfe:	e8 83 f7 ff ff       	call   1386 <dns_label>
    1c03:	85 c0                	test   %eax,%eax
    1c05:	78 29                	js     1c30 <dns_skip+0x49>
    1c07:	41 39 c1             	cmp    %eax,%r9d
    1c0a:	74 06                	je     1c12 <dns_skip+0x2b>
    1c0c:	41 83 c1 02          	add    $0x2,%r9d
    1c10:	eb 21                	jmp    1c33 <dns_skip+0x4c>
    1c12:	48 8b 07             	mov    (%rdi),%rax
    1c15:	41 ff ca             	dec    %r10d
    1c18:	42 0f b6 14 18       	movzbl (%rax,%r11,1),%edx
    1c1d:	45 8d 4c 11 01       	lea    0x1(%r9,%rdx,1),%r9d
    1c22:	84 d2                	test   %dl,%dl
    1c24:	75 cd                	jne    1bf3 <dns_skip+0xc>
    1c26:	eb 0b                	jmp    1c33 <dns_skip+0x4c>
    1c28:	41 b9 7e 9f ee e3    	mov    $0xe3ee9f7e,%r9d
    1c2e:	eb 03                	jmp    1c33 <dns_skip+0x4c>
    1c30:	41 89 c1             	mov    %eax,%r9d
    1c33:	44 89 c8             	mov    %r9d,%eax
    1c36:	c3                   	ret    

0000000000001c37 <dns_skip_search>:
    1c37:	e8 ab ff ff ff       	call   1be7 <dns_skip>
    1c3c:	85 c0                	test   %eax,%eax
    1c3e:	78 1b                	js     1c5b <dns_skip_search+0x24>
    1c40:	8b 77 10             	mov    0x10(%rdi),%esi
    1c43:	48 63 d0             	movslq %eax,%rdx
    1c46:	39 c6                	cmp    %eax,%esi
    1c48:	7e 11                	jle    1c5b <dns_skip_search+0x24>
    1c4a:	48 8b 0f             	mov    (%rdi),%rcx
    1c4d:	8a 0c 11             	mov    (%rcx,%rdx,1),%cl
    1c50:	48 ff c2             	inc    %rdx
    1c53:	84 c9                	test   %cl,%cl
    1c55:	75 04                	jne    1c5b <dns_skip_search+0x24>
    1c57:	ff c0                	inc    %eax
    1c59:	eb eb                	jmp    1c46 <dns_skip_search+0xf>
    1c5b:	c3                   	ret    

0000000000001c5c <format_dnssl_setting>:
    1c5c:	f3 0f 1e fa          	endbr64 
    1c60:	41 56                	push   %r14
    1c62:	41 55                	push   %r13
    1c64:	49 89 cd             	mov    %rcx,%r13
    1c67:	41 54                	push   %r12
    1c69:	4d 89 c4             	mov    %r8,%r12
    1c6c:	55                   	push   %rbp
    1c6d:	48 89 d5             	mov    %rdx,%rbp
    1c70:	53                   	push   %rbx
    1c71:	31 db                	xor    %ebx,%ebx
    1c73:	48 83 ec 20          	sub    $0x20,%rsp
    1c77:	48 8b 05 d2 83 02 00 	mov    0x283d2(%rip),%rax        # 2a050 <__stack_chk_guard>
    1c7e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1c83:	31 c0                	xor    %eax,%eax
    1c85:	48 89 34 24          	mov    %rsi,(%rsp)
    1c89:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    1c90:	00 00 
    1c92:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    1c97:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
    1c9c:	73 4a                	jae    1ce8 <format_dnssl_setting+0x8c>
    1c9e:	31 d2                	xor    %edx,%edx
    1ca0:	4c 39 e3             	cmp    %r12,%rbx
    1ca3:	73 06                	jae    1cab <format_dnssl_setting+0x4f>
    1ca5:	4c 89 e2             	mov    %r12,%rdx
    1ca8:	48 29 da             	sub    %rbx,%rdx
    1cab:	49 89 e6             	mov    %rsp,%r14
    1cae:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    1cb3:	4c 89 f7             	mov    %r14,%rdi
    1cb6:	e8 67 fa ff ff       	call   1722 <dns_decode>
    1cbb:	85 c0                	test   %eax,%eax
    1cbd:	78 2b                	js     1cea <format_dnssl_setting+0x8e>
    1cbf:	48 98                	cltq   
    1cc1:	4c 89 f7             	mov    %r14,%rdi
    1cc4:	48 01 c3             	add    %rax,%rbx
    1cc7:	e8 6b ff ff ff       	call   1c37 <dns_skip_search>
    1ccc:	48 98                	cltq   
    1cce:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1cd3:	48 39 e8             	cmp    %rbp,%rax
    1cd6:	74 bf                	je     1c97 <format_dnssl_setting+0x3b>
    1cd8:	49 39 dc             	cmp    %rbx,%r12
    1cdb:	76 06                	jbe    1ce3 <format_dnssl_setting+0x87>
    1cdd:	41 c6 44 1d 00 20    	movb   $0x20,0x0(%r13,%rbx,1)
    1ce3:	48 ff c3             	inc    %rbx
    1ce6:	eb af                	jmp    1c97 <format_dnssl_setting+0x3b>
    1ce8:	89 d8                	mov    %ebx,%eax
    1cea:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    1cef:	48 2b 15 5a 83 02 00 	sub    0x2835a(%rip),%rdx        # 2a050 <__stack_chk_guard>
    1cf6:	74 05                	je     1cfd <format_dnssl_setting+0xa1>
    1cf8:	e8 63 0d 00 00       	call   2a60 <__stack_chk_fail>
    1cfd:	48 83 c4 20          	add    $0x20,%rsp
    1d01:	5b                   	pop    %rbx
    1d02:	5d                   	pop    %rbp
    1d03:	41 5c                	pop    %r12
    1d05:	41 5d                	pop    %r13
    1d07:	41 5e                	pop    %r14
    1d09:	c3                   	ret    

0000000000001d0a <dns_xfer_deliver>:
    1d0a:	f3 0f 1e fa          	endbr64 
    1d0e:	41 57                	push   %r15
    1d10:	41 56                	push   %r14
    1d12:	41 55                	push   %r13
    1d14:	41 54                	push   %r12
    1d16:	55                   	push   %rbp
    1d17:	48 89 f5             	mov    %rsi,%rbp
    1d1a:	53                   	push   %rbx
    1d1b:	48 83 ec 58          	sub    $0x58,%rsp
    1d1f:	48 8b 56 18          	mov    0x18(%rsi),%rdx
    1d23:	48 8b 05 26 83 02 00 	mov    0x28326(%rip),%rax        # 2a050 <__stack_chk_guard>
    1d2a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    1d2f:	31 c0                	xor    %eax,%eax
    1d31:	48 8b 87 f0 01 00 00 	mov    0x1f0(%rdi),%rax
    1d38:	66 44 8b 28          	mov    (%rax),%r13w
    1d3c:	48 8b 46 20          	mov    0x20(%rsi),%rax
    1d40:	48 29 d0             	sub    %rdx,%rax
    1d43:	48 83 f8 0b          	cmp    $0xb,%rax
    1d47:	77 05                	ja     1d4e <dns_xfer_deliver+0x44>
    1d49:	e9 a5 02 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1d4e:	66 8b 9f c2 00 00 00 	mov    0xc2(%rdi),%bx
    1d55:	49 89 fe             	mov    %rdi,%r14
    1d58:	66 39 1a             	cmp    %bx,(%rdx)
    1d5b:	74 05                	je     1d62 <dns_xfer_deliver+0x58>
    1d5d:	e9 91 02 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1d62:	66 81 7a 04 00 01    	cmpw   $0x100,0x4(%rdx)
    1d68:	74 05                	je     1d6f <dns_xfer_deliver+0x65>
    1d6a:	e9 84 02 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1d6f:	48 8d 5c 24 30       	lea    0x30(%rsp),%rbx
    1d74:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    1d79:	48 89 df             	mov    %rbx,%rdi
    1d7c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    1d81:	48 c7 44 24 38 0c 00 	movq   $0xc,0x38(%rsp)
    1d88:	00 00 
    1d8a:	e8 58 fe ff ff       	call   1be7 <dns_skip>
    1d8f:	4c 63 e0             	movslq %eax,%r12
    1d92:	45 85 e4             	test   %r12d,%r12d
    1d95:	0f 88 5e 02 00 00    	js     1ff9 <dns_xfer_deliver+0x2ef>
    1d9b:	49 8d 44 24 04       	lea    0x4(%r12),%rax
    1da0:	4d 8d be d8 01 00 00 	lea    0x1d8(%r14),%r15
    1da7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1dac:	49 89 c2             	mov    %rax,%r10
    1daf:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    1db4:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
    1db9:	49 39 f2             	cmp    %rsi,%r10
    1dbc:	0f 84 74 01 00 00    	je     1f36 <dns_xfer_deliver+0x22c>
    1dc2:	48 89 df             	mov    %rbx,%rdi
    1dc5:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    1dca:	e8 18 fe ff ff       	call   1be7 <dns_skip>
    1dcf:	41 89 c4             	mov    %eax,%r12d
    1dd2:	85 c0                	test   %eax,%eax
    1dd4:	0f 88 1f 02 00 00    	js     1ff9 <dns_xfer_deliver+0x2ef>
    1dda:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    1ddf:	4c 63 c8             	movslq %eax,%r9
    1de2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    1de7:	4c 01 ca             	add    %r9,%rdx
    1dea:	49 83 c1 0a          	add    $0xa,%r9
    1dee:	49 39 f1             	cmp    %rsi,%r9
    1df1:	76 05                	jbe    1df8 <dns_xfer_deliver+0xee>
    1df3:	e9 fb 01 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1df8:	66 8b 4a 08          	mov    0x8(%rdx),%cx
    1dfc:	86 cd                	xchg   %cl,%ch
    1dfe:	0f b7 c9             	movzwl %cx,%ecx
    1e01:	4e 8d 14 09          	lea    (%rcx,%r9,1),%r10
    1e05:	49 39 f2             	cmp    %rsi,%r10
    1e08:	76 05                	jbe    1e0f <dns_xfer_deliver+0x105>
    1e0a:	e9 e4 01 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1e0f:	4c 89 fe             	mov    %r15,%rsi
    1e12:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    1e17:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    1e1c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    1e21:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    1e26:	e8 09 fa ff ff       	call   1834 <dns_compare>
    1e2b:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    1e30:	85 c0                	test   %eax,%eax
    1e32:	41 89 c4             	mov    %eax,%r12d
    1e35:	0f 85 74 ff ff ff    	jne    1daf <dns_xfer_deliver+0xa5>
    1e3b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    1e40:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    1e45:	66 8b 02             	mov    (%rdx),%ax
    1e48:	66 3d 00 05          	cmp    $0x500,%ax
    1e4c:	74 73                	je     1ec1 <dns_xfer_deliver+0x1b7>
    1e4e:	66 3d 00 1c          	cmp    $0x1c00,%ax
    1e52:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    1e57:	74 0c                	je     1e65 <dns_xfer_deliver+0x15b>
    1e59:	66 3d 00 01          	cmp    $0x100,%ax
    1e5d:	0f 85 4c ff ff ff    	jne    1daf <dns_xfer_deliver+0xa5>
    1e63:	eb 26                	jmp    1e8b <dns_xfer_deliver+0x181>
    1e65:	48 83 f9 0f          	cmp    $0xf,%rcx
    1e69:	77 05                	ja     1e70 <dns_xfer_deliver+0x166>
    1e6b:	e9 83 01 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1e70:	66 41 c7 86 a0 00 00 	movw   $0x2,0xa0(%r14)
    1e77:	00 02 00 
    1e7a:	49 8d be a8 00 00 00 	lea    0xa8(%r14),%rdi
    1e81:	48 8d 72 0a          	lea    0xa(%rdx),%rsi
    1e85:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1e86:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1e87:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1e88:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1e89:	eb 1f                	jmp    1eaa <dns_xfer_deliver+0x1a0>
    1e8b:	48 83 f9 03          	cmp    $0x3,%rcx
    1e8f:	77 05                	ja     1e96 <dns_xfer_deliver+0x18c>
    1e91:	e9 5d 01 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1e96:	66 41 c7 86 a0 00 00 	movw   $0x1,0xa0(%r14)
    1e9d:	00 01 00 
    1ea0:	8b 42 0a             	mov    0xa(%rdx),%eax
    1ea3:	41 89 86 a8 00 00 00 	mov    %eax,0xa8(%r14)
    1eaa:	49 8d b6 a0 00 00 00 	lea    0xa0(%r14),%rsi
    1eb1:	49 8d 7e 10          	lea    0x10(%r14),%rdi
    1eb5:	e8 a4 e0 00 00       	call   ff5e <resolv_done>
    1eba:	31 f6                	xor    %esi,%esi
    1ebc:	e9 1b 01 00 00       	jmp    1fdc <dns_xfer_deliver+0x2d2>
    1ec1:	41 8b 86 20 02 00 00 	mov    0x220(%r14),%eax
    1ec8:	ff c0                	inc    %eax
    1eca:	41 89 86 20 02 00 00 	mov    %eax,0x220(%r14)
    1ed1:	83 f8 20             	cmp    $0x20,%eax
    1ed4:	76 18                	jbe    1eee <dns_xfer_deliver+0x1e4>
    1ed6:	be 76 9f ee df       	mov    $0xdfee9f76,%esi
    1edb:	4c 89 f7             	mov    %r14,%rdi
    1ede:	41 bc 76 9f ee df    	mov    $0xdfee9f76,%r12d
    1ee4:	e8 ef f4 ff ff       	call   13d8 <dns_done>
    1ee9:	e9 0b 01 00 00       	jmp    1ff9 <dns_xfer_deliver+0x2ef>
    1eee:	49 8b 86 18 02 00 00 	mov    0x218(%r14),%rax
    1ef5:	4c 89 fe             	mov    %r15,%rsi
    1ef8:	48 89 df             	mov    %rbx,%rdi
    1efb:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
    1f00:	49 89 86 10 02 00 00 	mov    %rax,0x210(%r14)
    1f07:	e8 f5 f9 ff ff       	call   1901 <dns_copy>
    1f0c:	4c 89 f7             	mov    %r14,%rdi
    1f0f:	48 98                	cltq   
    1f11:	48 83 c0 0b          	add    $0xb,%rax
    1f15:	49 89 86 00 02 00 00 	mov    %rax,0x200(%r14)
    1f1c:	e8 82 fa ff ff       	call   19a3 <dns_question>
    1f21:	41 89 c4             	mov    %eax,%r12d
    1f24:	85 c0                	test   %eax,%eax
    1f26:	0f 85 ad 00 00 00    	jne    1fd9 <dns_xfer_deliver+0x2cf>
    1f2c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    1f31:	e9 79 fe ff ff       	jmp    1daf <dns_xfer_deliver+0xa5>
    1f36:	49 8d 7e 50          	lea    0x50(%r14),%rdi
    1f3a:	e8 6d e4 00 00       	call   103ac <stop_timer>
    1f3f:	66 41 81 fd 00 05    	cmp    $0x500,%r13w
    1f45:	74 30                	je     1f77 <dns_xfer_deliver+0x26d>
    1f47:	66 41 81 fd 00 1c    	cmp    $0x1c00,%r13w
    1f4d:	74 1a                	je     1f69 <dns_xfer_deliver+0x25f>
    1f4f:	66 41 81 fd 00 01    	cmp    $0x100,%r13w
    1f55:	0f 85 8b 00 00 00    	jne    1fe6 <dns_xfer_deliver+0x2dc>
    1f5b:	49 8b 86 f0 01 00 00 	mov    0x1f0(%r14),%rax
    1f62:	66 c7 00 00 05       	movw   $0x500,(%rax)
    1f67:	eb 1a                	jmp    1f83 <dns_xfer_deliver+0x279>
    1f69:	49 8b 86 f0 01 00 00 	mov    0x1f0(%r14),%rax
    1f70:	66 c7 00 00 01       	movw   $0x100,(%rax)
    1f75:	eb 0c                	jmp    1f83 <dns_xfer_deliver+0x279>
    1f77:	66 41 81 be c0 00 00 	cmpw   $0x500,0xc0(%r14)
    1f7e:	00 00 05 
    1f81:	75 0d                	jne    1f90 <dns_xfer_deliver+0x286>
    1f83:	4c 89 f7             	mov    %r14,%rdi
    1f86:	45 31 e4             	xor    %r12d,%r12d
    1f89:	e8 8a f4 ff ff       	call   1418 <dns_send_packet.isra.0>
    1f8e:	eb 69                	jmp    1ff9 <dns_xfer_deliver+0x2ef>
    1f90:	49 8b 86 18 02 00 00 	mov    0x218(%r14),%rax
    1f97:	49 39 86 10 02 00 00 	cmp    %rax,0x210(%r14)
    1f9e:	75 15                	jne    1fb5 <dns_xfer_deliver+0x2ab>
    1fa0:	be 72 9e ee c1       	mov    $0xc1ee9e72,%esi
    1fa5:	4c 89 f7             	mov    %r14,%rdi
    1fa8:	41 bc 72 9e ee c1    	mov    $0xc1ee9e72,%r12d
    1fae:	e8 25 f4 ff ff       	call   13d8 <dns_done>
    1fb3:	eb 44                	jmp    1ff9 <dns_xfer_deliver+0x2ef>
    1fb5:	49 8d be 08 02 00 00 	lea    0x208(%r14),%rdi
    1fbc:	e8 76 fc ff ff       	call   1c37 <dns_skip_search>
    1fc1:	4c 89 f7             	mov    %r14,%rdi
    1fc4:	48 98                	cltq   
    1fc6:	49 89 86 10 02 00 00 	mov    %rax,0x210(%r14)
    1fcd:	e8 d1 f9 ff ff       	call   19a3 <dns_question>
    1fd2:	41 89 c4             	mov    %eax,%r12d
    1fd5:	85 c0                	test   %eax,%eax
    1fd7:	74 aa                	je     1f83 <dns_xfer_deliver+0x279>
    1fd9:	44 89 e6             	mov    %r12d,%esi
    1fdc:	4c 89 f7             	mov    %r14,%rdi
    1fdf:	e8 f4 f3 ff ff       	call   13d8 <dns_done>
    1fe4:	eb 13                	jmp    1ff9 <dns_xfer_deliver+0x2ef>
    1fe6:	be 7e 9f ee e3       	mov    $0xe3ee9f7e,%esi
    1feb:	4c 89 f7             	mov    %r14,%rdi
    1fee:	e8 e5 f3 ff ff       	call   13d8 <dns_done>
    1ff3:	41 bc 7e 9f ee e3    	mov    $0xe3ee9f7e,%r12d
    1ff9:	48 89 ef             	mov    %rbp,%rdi
    1ffc:	e8 65 7d 00 00       	call   9d66 <free_iob>
    2001:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    2006:	48 2b 05 43 80 02 00 	sub    0x28043(%rip),%rax        # 2a050 <__stack_chk_guard>
    200d:	74 05                	je     2014 <dns_xfer_deliver+0x30a>
    200f:	e8 4c 0a 00 00       	call   2a60 <__stack_chk_fail>
    2014:	48 83 c4 58          	add    $0x58,%rsp
    2018:	44 89 e0             	mov    %r12d,%eax
    201b:	5b                   	pop    %rbx
    201c:	5d                   	pop    %rbp
    201d:	41 5c                	pop    %r12
    201f:	41 5d                	pop    %r13
    2021:	41 5e                	pop    %r14
    2023:	41 5f                	pop    %r15
    2025:	c3                   	ret    

0000000000002026 <efi_handle_cup>:
    2026:	f3 0f 1e fa          	endbr64 
    202a:	48 83 ec 28          	sub    $0x28,%rsp
    202e:	8b 32                	mov    (%rdx),%esi
    2030:	8b 52 04             	mov    0x4(%rdx),%edx
    2033:	31 c9                	xor    %ecx,%ecx
    2035:	48 8b 05 3c 80 02 00 	mov    0x2803c(%rip),%rax        # 2a078 <efi_systab>
    203c:	44 8d 46 ff          	lea    -0x1(%rsi),%r8d
    2040:	45 85 c0             	test   %r8d,%r8d
    2043:	48 8b 40 40          	mov    0x40(%rax),%rax
    2047:	44 0f 48 c1          	cmovs  %ecx,%r8d
    204b:	ff ca                	dec    %edx
    204d:	0f 48 d1             	cmovs  %ecx,%edx
    2050:	48 89 c1             	mov    %rax,%rcx
    2053:	4d 63 c0             	movslq %r8d,%r8
    2056:	48 63 d2             	movslq %edx,%rdx
    2059:	ff 50 38             	call   *0x38(%rax)
    205c:	48 83 c4 28          	add    $0x28,%rsp
    2060:	c3                   	ret    

0000000000002061 <efi_handle_ed>:
    2061:	f3 0f 1e fa          	endbr64 
    2065:	48 83 ec 28          	sub    $0x28,%rsp
    2069:	48 8b 05 08 80 02 00 	mov    0x28008(%rip),%rax        # 2a078 <efi_systab>
    2070:	48 8b 40 40          	mov    0x40(%rax),%rax
    2074:	48 89 c1             	mov    %rax,%rcx
    2077:	ff 50 30             	call   *0x30(%rax)
    207a:	48 83 c4 28          	add    $0x28,%rsp
    207e:	c3                   	ret    

000000000000207f <efi_handle_sgr>:
    207f:	f3 0f 1e fa          	endbr64 
    2083:	48 8b 05 ee 7f 02 00 	mov    0x27fee(%rip),%rax        # 2a078 <efi_systab>
    208a:	53                   	push   %rbx
    208b:	41 89 f0             	mov    %esi,%r8d
    208e:	49 89 d1             	mov    %rdx,%r9
    2091:	31 f6                	xor    %esi,%esi
    2093:	31 c9                	xor    %ecx,%ecx
    2095:	4c 8d 1d 7c 03 02 00 	lea    0x2037c(%rip),%r11        # 22418 <efi_attr_bcols.0>
    209c:	4c 8b 50 40          	mov    0x40(%rax),%r10
    20a0:	8b 05 ba 24 02 00    	mov    0x224ba(%rip),%eax        # 24560 <efi_attr>
    20a6:	48 8d 1d 7b 03 02 00 	lea    0x2037b(%rip),%rbx        # 22428 <efi_attr_fcols.1>
    20ad:	41 39 f0             	cmp    %esi,%r8d
    20b0:	76 55                	jbe    2107 <efi_handle_sgr+0x88>
    20b2:	41 8b 14 b1          	mov    (%r9,%rsi,4),%edx
    20b6:	85 d2                	test   %edx,%edx
    20b8:	74 41                	je     20fb <efi_handle_sgr+0x7c>
    20ba:	83 fa 01             	cmp    $0x1,%edx
    20bd:	75 05                	jne    20c4 <efi_handle_sgr+0x45>
    20bf:	83 c8 08             	or     $0x8,%eax
    20c2:	eb 33                	jmp    20f7 <efi_handle_sgr+0x78>
    20c4:	83 fa 16             	cmp    $0x16,%edx
    20c7:	75 05                	jne    20ce <efi_handle_sgr+0x4f>
    20c9:	83 e0 f7             	and    $0xfffffff7,%eax
    20cc:	eb 29                	jmp    20f7 <efi_handle_sgr+0x78>
    20ce:	8d 7a e2             	lea    -0x1e(%rdx),%edi
    20d1:	83 ff 09             	cmp    $0x9,%edi
    20d4:	77 0c                	ja     20e2 <efi_handle_sgr+0x63>
    20d6:	48 63 ff             	movslq %edi,%rdi
    20d9:	83 e0 f8             	and    $0xfffffff8,%eax
    20dc:	0f b6 14 3b          	movzbl (%rbx,%rdi,1),%edx
    20e0:	eb 13                	jmp    20f5 <efi_handle_sgr+0x76>
    20e2:	83 ea 28             	sub    $0x28,%edx
    20e5:	83 fa 09             	cmp    $0x9,%edx
    20e8:	77 18                	ja     2102 <efi_handle_sgr+0x83>
    20ea:	48 63 d2             	movslq %edx,%rdx
    20ed:	83 e0 8f             	and    $0xffffff8f,%eax
    20f0:	41 0f b6 14 13       	movzbl (%r11,%rdx,1),%edx
    20f5:	09 d0                	or     %edx,%eax
    20f7:	b1 01                	mov    $0x1,%cl
    20f9:	eb 07                	jmp    2102 <efi_handle_sgr+0x83>
    20fb:	b1 01                	mov    $0x1,%cl
    20fd:	b8 07 00 00 00       	mov    $0x7,%eax
    2102:	48 ff c6             	inc    %rsi
    2105:	eb a6                	jmp    20ad <efi_handle_sgr+0x2e>
    2107:	84 c9                	test   %cl,%cl
    2109:	74 06                	je     2111 <efi_handle_sgr+0x92>
    210b:	89 05 4f 24 02 00    	mov    %eax,0x2244f(%rip)        # 24560 <efi_attr>
    2111:	48 83 ec 20          	sub    $0x20,%rsp
    2115:	8b 15 45 24 02 00    	mov    0x22445(%rip),%edx        # 24560 <efi_attr>
    211b:	4c 89 d1             	mov    %r10,%rcx
    211e:	41 ff 52 28          	call   *0x28(%r10)
    2122:	48 83 c4 20          	add    $0x20,%rsp
    2126:	5b                   	pop    %rbx
    2127:	c3                   	ret    

0000000000002128 <efi_handle_dectcem_set>:
    2128:	f3 0f 1e fa          	endbr64 
    212c:	48 83 ec 28          	sub    $0x28,%rsp
    2130:	48 8b 05 41 7f 02 00 	mov    0x27f41(%rip),%rax        # 2a078 <efi_systab>
    2137:	ba 01 00 00 00       	mov    $0x1,%edx
    213c:	48 8b 40 40          	mov    0x40(%rax),%rax
    2140:	48 89 c1             	mov    %rax,%rcx
    2143:	ff 50 40             	call   *0x40(%rax)
    2146:	48 83 c4 28          	add    $0x28,%rsp
    214a:	c3                   	ret    

000000000000214b <efi_handle_dectcem_reset>:
    214b:	f3 0f 1e fa          	endbr64 
    214f:	48 83 ec 28          	sub    $0x28,%rsp
    2153:	48 8b 05 1e 7f 02 00 	mov    0x27f1e(%rip),%rax        # 2a078 <efi_systab>
    215a:	31 d2                	xor    %edx,%edx
    215c:	48 8b 40 40          	mov    0x40(%rax),%rax
    2160:	48 89 c1             	mov    %rax,%rcx
    2163:	ff 50 40             	call   *0x40(%rax)
    2166:	48 83 c4 28          	add    $0x28,%rsp
    216a:	c3                   	ret    

000000000000216b <efi_getchar>:
    216b:	f3 0f 1e fa          	endbr64 
    216f:	48 83 ec 18          	sub    $0x18,%rsp
    2173:	48 8b 15 26 2c 02 00 	mov    0x22c26(%rip),%rdx        # 24da0 <ansi_input>
    217a:	48 8b 05 cf 7e 02 00 	mov    0x27ecf(%rip),%rax        # 2a050 <__stack_chk_guard>
    2181:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2186:	48 8b 05 eb 7e 02 00 	mov    0x27eeb(%rip),%rax        # 2a078 <efi_systab>
    218d:	48 8b 48 30          	mov    0x30(%rax),%rcx
    2191:	0f be 02             	movsbl (%rdx),%eax
    2194:	84 c0                	test   %al,%al
    2196:	74 0c                	je     21a4 <efi_getchar+0x39>
    2198:	48 ff c2             	inc    %rdx
    219b:	48 89 15 fe 2b 02 00 	mov    %rdx,0x22bfe(%rip)        # 24da0 <ansi_input>
    21a2:	eb 4b                	jmp    21ef <efi_getchar+0x84>
    21a4:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    21a9:	48 83 ec 20          	sub    $0x20,%rsp
    21ad:	ff 51 08             	call   *0x8(%rcx)
    21b0:	48 83 c4 20          	add    $0x20,%rsp
    21b4:	48 85 c0             	test   %rax,%rax
    21b7:	74 04                	je     21bd <efi_getchar+0x52>
    21b9:	31 c0                	xor    %eax,%eax
    21bb:	eb 32                	jmp    21ef <efi_getchar+0x84>
    21bd:	0f b7 44 24 06       	movzwl 0x6(%rsp),%eax
    21c2:	66 85 c0             	test   %ax,%ax
    21c5:	75 28                	jne    21ef <efi_getchar+0x84>
    21c7:	0f b7 54 24 04       	movzwl 0x4(%rsp),%edx
    21cc:	31 c0                	xor    %eax,%eax
    21ce:	83 fa 17             	cmp    $0x17,%edx
    21d1:	77 1c                	ja     21ef <efi_getchar+0x84>
    21d3:	48 8d 0d 06 2b 02 00 	lea    0x22b06(%rip),%rcx        # 24ce0 <ansi_sequences>
    21da:	48 8b 14 d1          	mov    (%rcx,%rdx,8),%rdx
    21de:	48 85 d2             	test   %rdx,%rdx
    21e1:	74 0c                	je     21ef <efi_getchar+0x84>
    21e3:	48 89 15 b6 2b 02 00 	mov    %rdx,0x22bb6(%rip)        # 24da0 <ansi_input>
    21ea:	b8 1b 00 00 00       	mov    $0x1b,%eax
    21ef:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    21f4:	48 2b 15 55 7e 02 00 	sub    0x27e55(%rip),%rdx        # 2a050 <__stack_chk_guard>
    21fb:	74 05                	je     2202 <efi_getchar+0x97>
    21fd:	e8 5e 08 00 00       	call   2a60 <__stack_chk_fail>
    2202:	48 83 c4 18          	add    $0x18,%rsp
    2206:	c3                   	ret    

0000000000002207 <efi_iskey>:
    2207:	f3 0f 1e fa          	endbr64 
    220b:	48 8b 15 8e 2b 02 00 	mov    0x22b8e(%rip),%rdx        # 24da0 <ansi_input>
    2212:	80 3a 00             	cmpb   $0x0,(%rdx)
    2215:	75 28                	jne    223f <efi_iskey+0x38>
    2217:	48 83 ec 28          	sub    $0x28,%rsp
    221b:	48 8b 05 56 7e 02 00 	mov    0x27e56(%rip),%rax        # 2a078 <efi_systab>
    2222:	48 8b 50 30          	mov    0x30(%rax),%rdx
    2226:	48 8b 40 60          	mov    0x60(%rax),%rax
    222a:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    222e:	ff 50 78             	call   *0x78(%rax)
    2231:	48 85 c0             	test   %rax,%rax
    2234:	0f 94 c0             	sete   %al
    2237:	48 83 c4 28          	add    $0x28,%rsp
    223b:	0f b6 c0             	movzbl %al,%eax
    223e:	c3                   	ret    
    223f:	b8 01 00 00 00       	mov    $0x1,%eax
    2244:	c3                   	ret    

0000000000002245 <efi_putchar>:
    2245:	f3 0f 1e fa          	endbr64 
    2249:	53                   	push   %rbx
    224a:	89 fe                	mov    %edi,%esi
    224c:	48 83 ec 10          	sub    $0x10,%rsp
    2250:	48 8b 05 f9 7d 02 00 	mov    0x27df9(%rip),%rax        # 2a050 <__stack_chk_guard>
    2257:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    225c:	48 8b 05 15 7e 02 00 	mov    0x27e15(%rip),%rax        # 2a078 <efi_systab>
    2263:	66 89 7c 24 04       	mov    %di,0x4(%rsp)
    2268:	48 8d 3d 51 2b 02 00 	lea    0x22b51(%rip),%rdi        # 24dc0 <efi_ansiesc_ctx>
    226f:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
    2276:	48 8b 58 40          	mov    0x40(%rax),%rbx
    227a:	e8 37 5b 01 00       	call   17db6 <ansiesc_process>
    227f:	85 c0                	test   %eax,%eax
    2281:	78 13                	js     2296 <efi_putchar+0x51>
    2283:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    2288:	48 83 ec 20          	sub    $0x20,%rsp
    228c:	48 89 d9             	mov    %rbx,%rcx
    228f:	ff 53 08             	call   *0x8(%rbx)
    2292:	48 83 c4 20          	add    $0x20,%rsp
    2296:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    229b:	48 2b 05 ae 7d 02 00 	sub    0x27dae(%rip),%rax        # 2a050 <__stack_chk_guard>
    22a2:	74 05                	je     22a9 <efi_putchar+0x64>
    22a4:	e8 b7 07 00 00       	call   2a60 <__stack_chk_fail>
    22a9:	48 83 c4 10          	add    $0x10,%rsp
    22ad:	5b                   	pop    %rbx
    22ae:	c3                   	ret    

00000000000022af <efi_console_init>:
    22af:	f3 0f 1e fa          	endbr64 
    22b3:	48 83 ec 18          	sub    $0x18,%rsp
    22b7:	48 8b 05 92 7d 02 00 	mov    0x27d92(%rip),%rax        # 2a050 <__stack_chk_guard>
    22be:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    22c3:	48 8b 05 4e 79 02 00 	mov    0x2794e(%rip),%rax        # 29c18 <conctrl>
    22ca:	48 85 c0             	test   %rax,%rax
    22cd:	74 36                	je     2305 <efi_console_init+0x56>
    22cf:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    22d4:	48 83 ec 20          	sub    $0x20,%rsp
    22d8:	45 31 c9             	xor    %r9d,%r9d
    22db:	45 31 c0             	xor    %r8d,%r8d
    22de:	48 89 c1             	mov    %rax,%rcx
    22e1:	ff 10                	call   *(%rax)
    22e3:	48 83 c4 20          	add    $0x20,%rsp
    22e7:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
    22ec:	74 17                	je     2305 <efi_console_init+0x56>
    22ee:	48 8b 05 23 79 02 00 	mov    0x27923(%rip),%rax        # 29c18 <conctrl>
    22f5:	48 83 ec 20          	sub    $0x20,%rsp
    22f9:	31 d2                	xor    %edx,%edx
    22fb:	48 89 c1             	mov    %rax,%rcx
    22fe:	ff 50 08             	call   *0x8(%rax)
    2301:	48 83 c4 20          	add    $0x20,%rsp
    2305:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    230a:	48 2b 05 3f 7d 02 00 	sub    0x27d3f(%rip),%rax        # 2a050 <__stack_chk_guard>
    2311:	74 05                	je     2318 <efi_console_init+0x69>
    2313:	e8 48 07 00 00       	call   2a60 <__stack_chk_fail>
    2318:	48 83 c4 18          	add    $0x18,%rsp
    231c:	c3                   	ret    

000000000000231d <efi_image_probe>:
    231d:	f3 0f 1e fa          	endbr64 
    2321:	41 54                	push   %r12
    2323:	4c 8d 05 3a 22 02 00 	lea    0x2223a(%rip),%r8        # 24564 <empty_path.0>
    232a:	31 c9                	xor    %ecx,%ecx
    232c:	53                   	push   %rbx
    232d:	48 83 ec 18          	sub    $0x18,%rsp
    2331:	4c 8b 4f 40          	mov    0x40(%rdi),%r9
    2335:	48 8b 15 2c 7d 02 00 	mov    0x27d2c(%rip),%rdx        # 2a068 <efi_image_handle>
    233c:	48 8b 05 0d 7d 02 00 	mov    0x27d0d(%rip),%rax        # 2a050 <__stack_chk_guard>
    2343:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2348:	48 8b 05 29 7d 02 00 	mov    0x27d29(%rip),%rax        # 2a078 <efi_systab>
    234f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    2356:	00 
    2357:	48 8b 58 60          	mov    0x60(%rax),%rbx
    235b:	48 89 e0             	mov    %rsp,%rax
    235e:	50                   	push   %rax
    235f:	ff 77 48             	push   0x48(%rdi)
    2362:	48 83 ec 20          	sub    $0x20,%rsp
    2366:	ff 93 c8 00 00 00    	call   *0xc8(%rbx)
    236c:	48 83 c4 30          	add    $0x30,%rsp
    2370:	48 85 c0             	test   %rax,%rax
    2373:	74 3c                	je     23b1 <efi_image_probe+0x94>
    2375:	48 ba 1a 00 00 00 00 	movabs $0x800000000000001a,%rdx
    237c:	00 00 80 
    237f:	49 89 c4             	mov    %rax,%r12
    2382:	49 c1 ec 38          	shr    $0x38,%r12
    2386:	41 09 c4             	or     %eax,%r12d
    2389:	45 0f b6 e4          	movzbl %r12b,%r12d
    238d:	41 81 cc 00 81 04 7f 	or     $0x7f048100,%r12d
    2394:	41 f7 dc             	neg    %r12d
    2397:	48 39 d0             	cmp    %rdx,%rax
    239a:	75 2b                	jne    23c7 <efi_image_probe+0xaa>
    239c:	48 83 ec 20          	sub    $0x20,%rsp
    23a0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    23a5:	ff 93 e0 00 00 00    	call   *0xe0(%rbx)
    23ab:	48 83 c4 20          	add    $0x20,%rsp
    23af:	eb 16                	jmp    23c7 <efi_image_probe+0xaa>
    23b1:	48 83 ec 20          	sub    $0x20,%rsp
    23b5:	45 31 e4             	xor    %r12d,%r12d
    23b8:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    23bd:	ff 93 e0 00 00 00    	call   *0xe0(%rbx)
    23c3:	48 83 c4 20          	add    $0x20,%rsp
    23c7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    23cc:	48 2b 05 7d 7c 02 00 	sub    0x27c7d(%rip),%rax        # 2a050 <__stack_chk_guard>
    23d3:	74 05                	je     23da <efi_image_probe+0xbd>
    23d5:	e8 86 06 00 00       	call   2a60 <__stack_chk_fail>
    23da:	48 83 c4 18          	add    $0x18,%rsp
    23de:	44 89 e0             	mov    %r12d,%eax
    23e1:	5b                   	pop    %rbx
    23e2:	41 5c                	pop    %r12
    23e4:	c3                   	ret    

00000000000023e5 <efi_image_exec>:
    23e5:	f3 0f 1e fa          	endbr64 
    23e9:	41 57                	push   %r15
    23eb:	41 56                	push   %r14
    23ed:	41 55                	push   %r13
    23ef:	49 89 fd             	mov    %rdi,%r13
    23f2:	41 54                	push   %r12
    23f4:	55                   	push   %rbp
    23f5:	53                   	push   %rbx
    23f6:	48 83 ec 48          	sub    $0x48,%rsp
    23fa:	48 8b 05 4f 7c 02 00 	mov    0x27c4f(%rip),%rax        # 2a050 <__stack_chk_guard>
    2401:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2406:	48 8b 05 6b 7c 02 00 	mov    0x27c6b(%rip),%rax        # 2a078 <efi_systab>
    240d:	4c 8b 78 60          	mov    0x60(%rax),%r15
    2411:	e8 75 36 00 00       	call   5a8b <last_opened_snpdev>
    2416:	48 85 c0             	test   %rax,%rax
    2419:	75 0b                	jne    2426 <efi_image_exec+0x41>
    241b:	41 bc 79 7f fb d3    	mov    $0xd3fb7f79,%r12d
    2421:	e9 d8 02 00 00       	jmp    26fe <efi_image_exec+0x319>
    2426:	48 8b 78 20          	mov    0x20(%rax),%rdi
    242a:	48 89 c5             	mov    %rax,%rbp
    242d:	e8 38 a4 01 00       	call   1c86a <efi_file_install>
    2432:	41 89 c4             	mov    %eax,%r12d
    2435:	85 c0                	test   %eax,%eax
    2437:	0f 85 c1 02 00 00    	jne    26fe <efi_image_exec+0x319>
    243d:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    2441:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    2445:	e8 43 1d 00 00       	call   418d <efi_pxe_install>
    244a:	41 89 c4             	mov    %eax,%r12d
    244d:	85 c0                	test   %eax,%eax
    244f:	0f 85 a0 02 00 00    	jne    26f5 <efi_image_exec+0x310>
    2455:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    2459:	e8 61 98 01 00       	call   1bcbf <efi_download_install>
    245e:	41 89 c4             	mov    %eax,%r12d
    2461:	85 c0                	test   %eax,%eax
    2463:	0f 85 83 02 00 00    	jne    26ec <efi_image_exec+0x307>
    2469:	48 8b b5 90 05 00 00 	mov    0x590(%rbp),%rsi
    2470:	48 89 f7             	mov    %rsi,%rdi
    2473:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    2478:	e8 0d 46 00 00       	call   6a8a <efi_devpath_len>
    247d:	49 8b 7d 28          	mov    0x28(%r13),%rdi
    2481:	48 89 c3             	mov    %rax,%rbx
    2484:	e8 8d 15 01 00       	call   13a16 <strlen>
    2489:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    248e:	48 83 c0 03          	add    $0x3,%rax
    2492:	48 01 c0             	add    %rax,%rax
    2495:	48 8d 7c 03 04       	lea    0x4(%rbx,%rax,1),%rdi
    249a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    249f:	e8 92 a2 00 00       	call   c736 <zalloc>
    24a4:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    24a9:	48 85 c0             	test   %rax,%rax
    24ac:	49 89 c6             	mov    %rax,%r14
    24af:	75 0b                	jne    24bc <efi_image_exec+0xd7>
    24b1:	41 bc 77 7f fb ce    	mov    $0xcefb7f77,%r12d
    24b7:	e9 27 02 00 00       	jmp    26e3 <efi_image_exec+0x2fe>
    24bc:	48 89 da             	mov    %rbx,%rdx
    24bf:	48 89 c7             	mov    %rax,%rdi
    24c2:	4c 01 f3             	add    %r14,%rbx
    24c5:	e8 1f 4f 01 00       	call   173e9 <__memcpy>
    24ca:	8b 44 24 08          	mov    0x8(%rsp),%eax
    24ce:	66 c7 03 04 04       	movw   $0x404,(%rbx)
    24d3:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
    24d7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    24dc:	49 8b 4d 28          	mov    0x28(%r13),%rcx
    24e0:	48 8d 15 1a 12 02 00 	lea    0x2121a(%rip),%rdx        # 23701 <.LC0>
    24e7:	66 89 43 02          	mov    %ax,0x2(%rbx)
    24eb:	31 c0                	xor    %eax,%eax
    24ed:	48 ff c6             	inc    %rsi
    24f0:	e8 1f 45 00 00       	call   6a14 <efi_snprintf>
    24f5:	49 8b 7d 38          	mov    0x38(%r13),%rdi
    24f9:	48 03 5c 24 08       	add    0x8(%rsp),%rbx
    24fe:	66 c7 03 7f ff       	movw   $0xff7f,(%rbx)
    2503:	c6 43 02 04          	movb   $0x4,0x2(%rbx)
    2507:	31 db                	xor    %ebx,%ebx
    2509:	48 85 ff             	test   %rdi,%rdi
    250c:	74 09                	je     2517 <efi_image_exec+0x132>
    250e:	e8 03 15 01 00       	call   13a16 <strlen>
    2513:	48 8d 58 01          	lea    0x1(%rax),%rbx
    2517:	49 8b 7d 28          	mov    0x28(%r13),%rdi
    251b:	e8 f6 14 01 00       	call   13a16 <strlen>
    2520:	48 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%rsi
    2525:	48 8d 3c 36          	lea    (%rsi,%rsi,1),%rdi
    2529:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    252e:	e8 03 a2 00 00       	call   c736 <zalloc>
    2533:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    2538:	48 85 c0             	test   %rax,%rax
    253b:	48 89 c3             	mov    %rax,%rbx
    253e:	75 0b                	jne    254b <efi_image_exec+0x166>
    2540:	41 bc 77 7f fb ce    	mov    $0xcefb7f77,%r12d
    2546:	e9 90 01 00 00       	jmp    26db <efi_image_exec+0x2f6>
    254b:	4d 8b 4d 38          	mov    0x38(%r13),%r9
    254f:	4c 8d 05 e0 14 02 00 	lea    0x214e0(%rip),%r8        # 23a36 <.LC1>
    2556:	4d 85 c9             	test   %r9,%r9
    2559:	75 0a                	jne    2565 <efi_image_exec+0x180>
    255b:	4c 8d 0d 52 1f 02 00 	lea    0x21f52(%rip),%r9        # 244b4 <.LC0>
    2562:	4d 89 c8             	mov    %r9,%r8
    2565:	49 8b 4d 28          	mov    0x28(%r13),%rcx
    2569:	48 8d 15 34 03 02 00 	lea    0x20334(%rip),%rdx        # 228a4 <.LC3>
    2570:	48 89 df             	mov    %rbx,%rdi
    2573:	31 c0                	xor    %eax,%eax
    2575:	e8 9a 44 00 00       	call   6a14 <efi_snprintf>
    257a:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    257f:	4d 8b 4d 40          	mov    0x40(%r13),%r9
    2583:	31 c9                	xor    %ecx,%ecx
    2585:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    258c:	00 00 
    258e:	48 8b 15 d3 7a 02 00 	mov    0x27ad3(%rip),%rdx        # 2a068 <efi_image_handle>
    2595:	4d 89 f0             	mov    %r14,%r8
    2598:	50                   	push   %rax
    2599:	41 ff 75 48          	push   0x48(%r13)
    259d:	48 83 ec 20          	sub    $0x20,%rsp
    25a1:	41 ff 97 c8 00 00 00 	call   *0xc8(%r15)
    25a8:	48 83 c4 30          	add    $0x30,%rsp
    25ac:	48 85 c0             	test   %rax,%rax
    25af:	74 30                	je     25e1 <efi_image_exec+0x1fc>
    25b1:	48 ba 1a 00 00 00 00 	movabs $0x800000000000001a,%rdx
    25b8:	00 00 80 
    25bb:	49 89 c4             	mov    %rax,%r12
    25be:	49 c1 ec 38          	shr    $0x38,%r12
    25c2:	41 09 c4             	or     %eax,%r12d
    25c5:	45 0f b6 e4          	movzbl %r12b,%r12d
    25c9:	41 81 cc 00 81 04 7f 	or     $0x7f048100,%r12d
    25d0:	41 f7 dc             	neg    %r12d
    25d3:	48 39 d0             	cmp    %rdx,%rax
    25d6:	0f 85 f7 00 00 00    	jne    26d3 <efi_image_exec+0x2ee>
    25dc:	e9 de 00 00 00       	jmp    26bf <efi_image_exec+0x2da>
    25e1:	6a 02                	push   $0x2
    25e3:	4c 8b 0d 7e 7a 02 00 	mov    0x27a7e(%rip),%r9        # 2a068 <efi_image_handle>
    25ea:	48 8d 15 cf 23 02 00 	lea    0x223cf(%rip),%rdx        # 249c0 <efi_loaded_image_protocol_guid>
    25f1:	6a 00                	push   $0x0
    25f3:	48 83 ec 20          	sub    $0x20,%rsp
    25f7:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
    25fc:	4c 8d 44 24 58       	lea    0x58(%rsp),%r8
    2601:	41 ff 97 18 01 00 00 	call   *0x118(%r15)
    2608:	48 83 c4 30          	add    $0x30,%rsp
    260c:	48 85 c0             	test   %rax,%rax
    260f:	74 1d                	je     262e <efi_image_exec+0x249>
    2611:	49 89 c4             	mov    %rax,%r12
    2614:	49 c1 ec 38          	shr    $0x38,%r12
    2618:	41 09 c4             	or     %eax,%r12d
    261b:	45 0f b6 e4          	movzbl %r12b,%r12d
    261f:	41 81 cc 00 80 04 7f 	or     $0x7f048000,%r12d
    2626:	41 f7 dc             	neg    %r12d
    2629:	e9 91 00 00 00       	jmp    26bf <efi_image_exec+0x2da>
    262e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2633:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
    2638:	75 08                	jne    2642 <efi_image_exec+0x25d>
    263a:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    263e:	48 89 50 18          	mov    %rdx,0x18(%rax)
    2642:	48 89 58 38          	mov    %rbx,0x38(%rax)
    2646:	48 89 df             	mov    %rbx,%rdi
    2649:	e8 96 4c 01 00       	call   172e4 <wcslen>
    264e:	83 cf ff             	or     $0xffffffff,%edi
    2651:	8d 54 00 02          	lea    0x2(%rax,%rax,1),%edx
    2655:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    265a:	89 50 30             	mov    %edx,0x30(%rax)
    265d:	e8 45 34 00 00       	call   5aa7 <efi_snp_add_claim>
    2662:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    2667:	e8 23 45 00 00       	call   6b8f <efi_wrap>
    266c:	31 ff                	xor    %edi,%edi
    266e:	e8 0d 6d 01 00       	call   19380 <console_configure>
    2673:	48 83 ec 20          	sub    $0x20,%rsp
    2677:	45 31 c0             	xor    %r8d,%r8d
    267a:	31 d2                	xor    %edx,%edx
    267c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    2681:	41 ff 97 d0 00 00 00 	call   *0xd0(%r15)
    2688:	48 83 c4 20          	add    $0x20,%rsp
    268c:	48 85 c0             	test   %rax,%rax
    268f:	75 0c                	jne    269d <efi_image_exec+0x2b8>
    2691:	bf 01 00 00 00       	mov    $0x1,%edi
    2696:	e8 0c 34 00 00       	call   5aa7 <efi_snp_add_claim>
    269b:	eb 36                	jmp    26d3 <efi_image_exec+0x2ee>
    269d:	49 89 c4             	mov    %rax,%r12
    26a0:	bf 01 00 00 00       	mov    $0x1,%edi
    26a5:	49 c1 ec 38          	shr    $0x38,%r12
    26a9:	41 09 c4             	or     %eax,%r12d
    26ac:	45 0f b6 e4          	movzbl %r12b,%r12d
    26b0:	41 81 cc 00 82 04 7f 	or     $0x7f048200,%r12d
    26b7:	41 f7 dc             	neg    %r12d
    26ba:	e8 e8 33 00 00       	call   5aa7 <efi_snp_add_claim>
    26bf:	48 83 ec 20          	sub    $0x20,%rsp
    26c3:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    26c8:	41 ff 97 e0 00 00 00 	call   *0xe0(%r15)
    26cf:	48 83 c4 20          	add    $0x20,%rsp
    26d3:	48 89 df             	mov    %rbx,%rdi
    26d6:	e8 47 a0 00 00       	call   c722 <free>
    26db:	4c 89 f7             	mov    %r14,%rdi
    26de:	e8 3f a0 00 00       	call   c722 <free>
    26e3:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    26e7:	e8 31 96 01 00       	call   1bd1d <efi_download_uninstall>
    26ec:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    26f0:	e8 b2 1c 00 00       	call   43a7 <efi_pxe_uninstall>
    26f5:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    26f9:	e8 ab a2 01 00       	call   1c9a9 <efi_file_uninstall>
    26fe:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2703:	48 2b 05 46 79 02 00 	sub    0x27946(%rip),%rax        # 2a050 <__stack_chk_guard>
    270a:	74 05                	je     2711 <efi_image_exec+0x32c>
    270c:	e8 4f 03 00 00       	call   2a60 <__stack_chk_fail>
    2711:	48 83 c4 48          	add    $0x48,%rsp
    2715:	44 89 e0             	mov    %r12d,%eax
    2718:	5b                   	pop    %rbx
    2719:	5d                   	pop    %rbp
    271a:	41 5c                	pop    %r12
    271c:	41 5d                	pop    %r13
    271e:	41 5e                	pop    %r14
    2720:	41 5f                	pop    %r15
    2722:	c3                   	ret    

0000000000002723 <efi_unload>:
    2723:	f3 0f 1e fa          	endbr64 
    2727:	57                   	push   %rdi
    2728:	31 ff                	xor    %edi,%edi
    272a:	56                   	push   %rsi
    272b:	53                   	push   %rbx
    272c:	48 83 ec 20          	sub    $0x20,%rsp
    2730:	48 8b 05 41 79 02 00 	mov    0x27941(%rip),%rax        # 2a078 <efi_systab>
    2737:	48 8b 58 60          	mov    0x60(%rax),%rbx
    273b:	e8 68 67 00 00       	call   8ea8 <shutdown>
    2740:	e8 ad 9b 01 00       	call   1c2f2 <efi_driver_disconnect_all>
    2745:	e8 63 9b 01 00       	call   1c2ad <efi_driver_uninstall>
    274a:	48 8b 0d df 74 02 00 	mov    0x274df(%rip),%rcx        # 29c30 <efi_shutdown_event>
    2751:	ff 53 70             	call   *0x70(%rbx)
    2754:	48 8b 0d 15 79 02 00 	mov    0x27915(%rip),%rcx        # 2a070 <efi_loaded_image_path>
    275b:	ff 53 48             	call   *0x48(%rbx)
    275e:	48 83 c4 20          	add    $0x20,%rsp
    2762:	31 c0                	xor    %eax,%eax
    2764:	5b                   	pop    %rbx
    2765:	5e                   	pop    %rsi
    2766:	5f                   	pop    %rdi
    2767:	c3                   	ret    

0000000000002768 <efi_shutdown_hook>:
    2768:	f3 0f 1e fa          	endbr64 
    276c:	57                   	push   %rdi
    276d:	bf 01 00 00 00       	mov    $0x1,%edi
    2772:	56                   	push   %rsi
    2773:	50                   	push   %rax
    2774:	c7 05 da 78 02 00 01 	movl   $0x1,0x278da(%rip)        # 2a058 <efi_shutdown_in_progress>
    277b:	00 00 00 
    277e:	e8 25 67 00 00       	call   8ea8 <shutdown>
    2783:	5a                   	pop    %rdx
    2784:	5e                   	pop    %rsi
    2785:	5f                   	pop    %rdi
    2786:	c3                   	ret    

0000000000002787 <efi_stack_cookie>:
    2787:	f3 0f 1e fa          	endbr64 
    278b:	50                   	push   %rax
    278c:	48 c1 c7 10          	rol    $0x10,%rdi
    2790:	48 89 e0             	mov    %rsp,%rax
    2793:	48 31 c7             	xor    %rax,%rdi
    2796:	48 c1 c7 10          	rol    $0x10,%rdi
    279a:	0f 31                	rdtsc  
    279c:	48 c1 e2 20          	shl    $0x20,%rdx
    27a0:	89 c0                	mov    %eax,%eax
    27a2:	48 09 d0             	or     %rdx,%rax
    27a5:	48 31 f8             	xor    %rdi,%rax
    27a8:	48 c1 c0 10          	rol    $0x10,%rax
    27ac:	48 33 05 ad 23 02 00 	xor    0x223ad(%rip),%rax        # 24b60 <build_id>
    27b3:	5a                   	pop    %rdx
    27b4:	48 c1 e0 08          	shl    $0x8,%rax
    27b8:	c3                   	ret    

00000000000027b9 <efi_init>:
    27b9:	f3 0f 1e fa          	endbr64 
    27bd:	41 57                	push   %r15
    27bf:	41 56                	push   %r14
    27c1:	41 55                	push   %r13
    27c3:	41 54                	push   %r12
    27c5:	55                   	push   %rbp
    27c6:	53                   	push   %rbx
    27c7:	48 83 ec 38          	sub    $0x38,%rsp
    27cb:	48 89 3d 96 78 02 00 	mov    %rdi,0x27896(%rip)        # 2a068 <efi_image_handle>
    27d2:	48 8b 05 77 78 02 00 	mov    0x27877(%rip),%rax        # 2a050 <__stack_chk_guard>
    27d9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    27de:	31 c0                	xor    %eax,%eax
    27e0:	48 89 35 91 78 02 00 	mov    %rsi,0x27891(%rip)        # 2a078 <efi_systab>
    27e7:	48 85 f6             	test   %rsi,%rsi
    27ea:	75 0f                	jne    27fb <efi_init+0x42>
    27ec:	49 bc 02 00 00 00 00 	movabs $0xa000000000000002,%r12
    27f3:	00 00 a0 
    27f6:	e9 40 02 00 00       	jmp    2a3b <efi_init+0x282>
    27fb:	48 83 7e 40 00       	cmpq   $0x0,0x40(%rsi)
    2800:	74 ea                	je     27ec <efi_init+0x33>
    2802:	48 8b 5e 60          	mov    0x60(%rsi),%rbx
    2806:	48 85 db             	test   %rbx,%rbx
    2809:	74 e1                	je     27ec <efi_init+0x33>
    280b:	48 83 7e 58 00       	cmpq   $0x0,0x58(%rsi)
    2810:	74 da                	je     27ec <efi_init+0x33>
    2812:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
    2819:	48 89 fd             	mov    %rdi,%rbp
    281c:	4c 8d 2d 95 60 02 00 	lea    0x26095(%rip),%r13        # 288b8 <__EFI_CONSOLE_CONTROL_PROTOCOL>
    2823:	4c 8d 35 ee 60 02 00 	lea    0x260ee(%rip),%r14        # 28918 <http_errors>
    282a:	48 89 05 f7 73 02 00 	mov    %rax,0x273f7(%rip)        # 29c28 <efi_exit>
    2831:	4d 39 f5             	cmp    %r14,%r13
    2834:	73 30                	jae    2866 <efi_init+0xad>
    2836:	48 83 ec 20          	sub    $0x20,%rsp
    283a:	4d 8b 45 10          	mov    0x10(%r13),%r8
    283e:	31 d2                	xor    %edx,%edx
    2840:	4c 89 e9             	mov    %r13,%rcx
    2843:	ff 93 40 01 00 00    	call   *0x140(%rbx)
    2849:	48 83 c4 20          	add    $0x20,%rsp
    284d:	49 89 c4             	mov    %rax,%r12
    2850:	48 85 c0             	test   %rax,%rax
    2853:	74 0b                	je     2860 <efi_init+0xa7>
    2855:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
    285a:	0f 85 db 01 00 00    	jne    2a3b <efi_init+0x282>
    2860:	49 83 c5 20          	add    $0x20,%r13
    2864:	eb cb                	jmp    2831 <efi_init+0x78>
    2866:	4c 8d 3d eb 5f 02 00 	lea    0x25feb(%rip),%r15        # 28858 <__ACPI_10_TABLE>
    286d:	48 8d 05 24 60 02 00 	lea    0x26024(%rip),%rax        # 28898 <efipci_driver>
    2874:	49 39 c7             	cmp    %rax,%r15
    2877:	73 6d                	jae    28e6 <efi_init+0x12d>
    2879:	4c 8b 0d f8 77 02 00 	mov    0x277f8(%rip),%r9        # 2a078 <efi_systab>
    2880:	4d 8b 6f 10          	mov    0x10(%r15),%r13
    2884:	45 31 f6             	xor    %r14d,%r14d
    2887:	49 8b 41 68          	mov    0x68(%r9),%rax
    288b:	48 89 04 24          	mov    %rax,(%rsp)
    288f:	45 89 f4             	mov    %r14d,%r12d
    2892:	4c 3b 24 24          	cmp    (%rsp),%r12
    2896:	73 32                	jae    28ca <efi_init+0x111>
    2898:	4d 6b e4 18          	imul   $0x18,%r12,%r12
    289c:	4d 03 61 70          	add    0x70(%r9),%r12
    28a0:	ba 10 00 00 00       	mov    $0x10,%edx
    28a5:	4c 89 fe             	mov    %r15,%rsi
    28a8:	4c 89 e7             	mov    %r12,%rdi
    28ab:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    28b0:	e8 7b 10 01 00       	call   13930 <memcmp>
    28b5:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    28ba:	85 c0                	test   %eax,%eax
    28bc:	75 07                	jne    28c5 <efi_init+0x10c>
    28be:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    28c3:	eb 07                	jmp    28cc <efi_init+0x113>
    28c5:	41 ff c6             	inc    %r14d
    28c8:	eb c5                	jmp    288f <efi_init+0xd6>
    28ca:	31 c0                	xor    %eax,%eax
    28cc:	49 89 45 00          	mov    %rax,0x0(%r13)
    28d0:	48 85 c0             	test   %rax,%rax
    28d3:	75 0b                	jne    28e0 <efi_init+0x127>
    28d5:	41 83 7f 18 00       	cmpl   $0x0,0x18(%r15)
    28da:	0f 85 0c ff ff ff    	jne    27ec <efi_init+0x33>
    28e0:	49 83 c7 20          	add    $0x20,%r15
    28e4:	eb 87                	jmp    286d <efi_init+0xb4>
    28e6:	6a 02                	push   $0x2
    28e8:	49 89 e9             	mov    %rbp,%r9
    28eb:	48 8d 15 ce 20 02 00 	lea    0x220ce(%rip),%rdx        # 249c0 <efi_loaded_image_protocol_guid>
    28f2:	48 89 e9             	mov    %rbp,%rcx
    28f5:	6a 00                	push   $0x0
    28f7:	48 83 ec 20          	sub    $0x20,%rsp
    28fb:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    2900:	ff 93 18 01 00 00    	call   *0x118(%rbx)
    2906:	48 83 c4 30          	add    $0x30,%rsp
    290a:	49 89 c4             	mov    %rax,%r12
    290d:	48 85 c0             	test   %rax,%rax
    2910:	74 05                	je     2917 <efi_init+0x15e>
    2912:	e9 24 01 00 00       	jmp    2a3b <efi_init+0x282>
    2917:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    291c:	49 89 e9             	mov    %rbp,%r9
    291f:	48 8d 15 6a 21 02 00 	lea    0x2216a(%rip),%rdx        # 24a90 <efi_device_path_protocol_guid>
    2926:	48 8b 48 18          	mov    0x18(%rax),%rcx
    292a:	6a 02                	push   $0x2
    292c:	6a 00                	push   $0x0
    292e:	48 89 05 2b 77 02 00 	mov    %rax,0x2772b(%rip)        # 2a060 <efi_loaded_image>
    2935:	48 83 ec 20          	sub    $0x20,%rsp
    2939:	4c 8d 44 24 48       	lea    0x48(%rsp),%r8
    293e:	ff 93 18 01 00 00    	call   *0x118(%rbx)
    2944:	48 83 c4 30          	add    $0x30,%rsp
    2948:	49 89 c4             	mov    %rax,%r12
    294b:	48 85 c0             	test   %rax,%rax
    294e:	74 05                	je     2955 <efi_init+0x19c>
    2950:	e9 e6 00 00 00       	jmp    2a3b <efi_init+0x282>
    2955:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    295a:	e8 2b 41 00 00       	call   6a8a <efi_devpath_len>
    295f:	48 83 ec 20          	sub    $0x20,%rsp
    2963:	b9 04 00 00 00       	mov    $0x4,%ecx
    2968:	4c 8d 68 04          	lea    0x4(%rax),%r13
    296c:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    2971:	4c 89 ea             	mov    %r13,%rdx
    2974:	ff 53 40             	call   *0x40(%rbx)
    2977:	48 83 c4 20          	add    $0x20,%rsp
    297b:	49 89 c4             	mov    %rax,%r12
    297e:	48 85 c0             	test   %rax,%rax
    2981:	74 05                	je     2988 <efi_init+0x1cf>
    2983:	e9 b3 00 00 00       	jmp    2a3b <efi_init+0x282>
    2988:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    298d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    2992:	4c 89 ea             	mov    %r13,%rdx
    2995:	e8 4f 4a 01 00       	call   173e9 <__memcpy>
    299a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    299f:	45 31 c9             	xor    %r9d,%r9d
    29a2:	4c 8d 05 bf fd ff ff 	lea    -0x241(%rip),%r8        # 2768 <efi_shutdown_hook>
    29a9:	ba 08 00 00 00       	mov    $0x8,%edx
    29ae:	b9 01 02 00 00       	mov    $0x201,%ecx
    29b3:	48 89 05 b6 76 02 00 	mov    %rax,0x276b6(%rip)        # 2a070 <efi_loaded_image_path>
    29ba:	50                   	push   %rax
    29bb:	48 8d 05 6e 72 02 00 	lea    0x2726e(%rip),%rax        # 29c30 <efi_shutdown_event>
    29c2:	50                   	push   %rax
    29c3:	48 83 ec 20          	sub    $0x20,%rsp
    29c7:	ff 53 50             	call   *0x50(%rbx)
    29ca:	48 83 c4 30          	add    $0x30,%rsp
    29ce:	49 89 c4             	mov    %rax,%r12
    29d1:	48 85 c0             	test   %rax,%rax
    29d4:	74 02                	je     29d8 <efi_init+0x21f>
    29d6:	eb 51                	jmp    2a29 <efi_init+0x270>
    29d8:	e8 47 98 01 00       	call   1c224 <efi_driver_install>
    29dd:	89 c2                	mov    %eax,%edx
    29df:	85 c0                	test   %eax,%eax
    29e1:	74 32                	je     2a15 <efi_init+0x25c>
    29e3:	f7 da                	neg    %edx
    29e5:	b9 01 00 00 00       	mov    $0x1,%ecx
    29ea:	48 83 ec 20          	sub    $0x20,%rsp
    29ee:	48 89 d0             	mov    %rdx,%rax
    29f1:	48 c1 e1 3f          	shl    $0x3f,%rcx
    29f5:	83 e2 7f             	and    $0x7f,%edx
    29f8:	48 c1 e0 38          	shl    $0x38,%rax
    29fc:	48 21 c8             	and    %rcx,%rax
    29ff:	48 8b 0d 2a 72 02 00 	mov    0x2722a(%rip),%rcx        # 29c30 <efi_shutdown_event>
    2a06:	48 09 d0             	or     %rdx,%rax
    2a09:	49 89 c4             	mov    %rax,%r12
    2a0c:	ff 53 70             	call   *0x70(%rbx)
    2a0f:	48 83 c4 20          	add    $0x20,%rsp
    2a13:	eb 14                	jmp    2a29 <efi_init+0x270>
    2a15:	48 8b 05 44 76 02 00 	mov    0x27644(%rip),%rax        # 2a060 <efi_loaded_image>
    2a1c:	48 8d 3d 00 fd ff ff 	lea    -0x300(%rip),%rdi        # 2723 <efi_unload>
    2a23:	48 89 78 58          	mov    %rdi,0x58(%rax)
    2a27:	eb 12                	jmp    2a3b <efi_init+0x282>
    2a29:	48 83 ec 20          	sub    $0x20,%rsp
    2a2d:	48 8b 0d 3c 76 02 00 	mov    0x2763c(%rip),%rcx        # 2a070 <efi_loaded_image_path>
    2a34:	ff 53 48             	call   *0x48(%rbx)
    2a37:	48 83 c4 20          	add    $0x20,%rsp
    2a3b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2a40:	48 2b 05 09 76 02 00 	sub    0x27609(%rip),%rax        # 2a050 <__stack_chk_guard>
    2a47:	74 05                	je     2a4e <efi_init+0x295>
    2a49:	e8 12 00 00 00       	call   2a60 <__stack_chk_fail>
    2a4e:	48 83 c4 38          	add    $0x38,%rsp
    2a52:	4c 89 e0             	mov    %r12,%rax
    2a55:	5b                   	pop    %rbx
    2a56:	5d                   	pop    %rbp
    2a57:	41 5c                	pop    %r12
    2a59:	41 5d                	pop    %r13
    2a5b:	41 5e                	pop    %r14
    2a5d:	41 5f                	pop    %r15
    2a5f:	c3                   	ret    

0000000000002a60 <__stack_chk_fail>:
    2a60:	f3 0f 1e fa          	endbr64 
    2a64:	50                   	push   %rax
    2a65:	58                   	pop    %rax
    2a66:	50                   	push   %rax
    2a67:	48 8b 05 ba 71 02 00 	mov    0x271ba(%rip),%rax        # 29c28 <efi_exit>
    2a6e:	48 85 c0             	test   %rax,%rax
    2a71:	74 21                	je     2a94 <__stack_chk_fail+0x34>
    2a73:	48 83 ec 20          	sub    $0x20,%rsp
    2a77:	48 8b 0d ea 75 02 00 	mov    0x275ea(%rip),%rcx        # 2a068 <efi_image_handle>
    2a7e:	45 31 c9             	xor    %r9d,%r9d
    2a81:	45 31 c0             	xor    %r8d,%r8d
    2a84:	48 ba 21 00 00 00 00 	movabs $0x8000000000000021,%rdx
    2a8b:	00 00 80 
    2a8e:	ff d0                	call   *%rax
    2a90:	48 83 c4 20          	add    $0x20,%rsp
    2a94:	eb fe                	jmp    2a94 <__stack_chk_fail+0x34>

0000000000002a96 <efi_local_check_volume_name>:
    2a96:	f3 0f 1e fa          	endbr64 
    2a9a:	41 56                	push   %r14
    2a9c:	4c 8d 35 2d 1d 02 00 	lea    0x21d2d(%rip),%r14        # 247d0 <efi_file_system_info_id>
    2aa3:	45 31 c9             	xor    %r9d,%r9d
    2aa6:	41 55                	push   %r13
    2aa8:	49 89 cd             	mov    %rcx,%r13
    2aab:	41 54                	push   %r12
    2aad:	49 89 d4             	mov    %rdx,%r12
    2ab0:	4c 89 f2             	mov    %r14,%rdx
    2ab3:	55                   	push   %rbp
    2ab4:	4c 89 e1             	mov    %r12,%rcx
    2ab7:	48 83 ec 38          	sub    $0x38,%rsp
    2abb:	48 8b 05 8e 75 02 00 	mov    0x2758e(%rip),%rax        # 2a050 <__stack_chk_guard>
    2ac2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2ac7:	31 c0                	xor    %eax,%eax
    2ac9:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
    2ace:	48 83 ec 20          	sub    $0x20,%rsp
    2ad2:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    2ad9:	00 00 
    2adb:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    2ae0:	41 ff 54 24 40       	call   *0x40(%r12)
    2ae5:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    2aea:	48 83 c4 20          	add    $0x20,%rsp
    2aee:	e8 22 9c 00 00       	call   c715 <malloc>
    2af3:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    2af8:	48 85 c0             	test   %rax,%rax
    2afb:	75 0b                	jne    2b08 <efi_local_check_volume_name+0x72>
    2afd:	41 bc 77 1f b2 ce    	mov    $0xceb21f77,%r12d
    2b03:	e9 88 00 00 00       	jmp    2b90 <efi_local_check_volume_name+0xfa>
    2b08:	48 83 ec 20          	sub    $0x20,%rsp
    2b0c:	48 89 c5             	mov    %rax,%rbp
    2b0f:	49 89 c1             	mov    %rax,%r9
    2b12:	4c 89 f2             	mov    %r14,%rdx
    2b15:	4c 89 e1             	mov    %r12,%rcx
    2b18:	41 ff 54 24 40       	call   *0x40(%r12)
    2b1d:	48 83 c4 20          	add    $0x20,%rsp
    2b21:	48 85 c0             	test   %rax,%rax
    2b24:	74 1a                	je     2b40 <efi_local_check_volume_name+0xaa>
    2b26:	49 89 c4             	mov    %rax,%r12
    2b29:	49 c1 ec 38          	shr    $0x38,%r12
    2b2d:	41 09 c4             	or     %eax,%r12d
    2b30:	45 0f b6 e4          	movzbl %r12b,%r12d
    2b34:	41 81 cc 00 e0 4d 7f 	or     $0x7f4de000,%r12d
    2b3b:	41 f7 dc             	neg    %r12d
    2b3e:	eb 48                	jmp    2b88 <efi_local_check_volume_name+0xf2>
    2b40:	31 c0                	xor    %eax,%eax
    2b42:	48 8d 55 24          	lea    0x24(%rbp),%rdx
    2b46:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    2b4b:	48 8d 35 5d fd 01 00 	lea    0x1fd5d(%rip),%rsi        # 228af <.LC0>
    2b52:	e8 28 56 01 00       	call   1817f <asprintf>
    2b57:	85 c0                	test   %eax,%eax
    2b59:	79 08                	jns    2b63 <efi_local_check_volume_name+0xcd>
    2b5b:	41 bc 77 1f b2 ce    	mov    $0xceb21f77,%r12d
    2b61:	eb 25                	jmp    2b88 <efi_local_check_volume_name+0xf2>
    2b63:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    2b68:	4c 89 ef             	mov    %r13,%rdi
    2b6b:	4c 89 f6             	mov    %r14,%rsi
    2b6e:	e8 56 0e 01 00       	call   139c9 <strcasecmp>
    2b73:	41 89 c4             	mov    %eax,%r12d
    2b76:	85 c0                	test   %eax,%eax
    2b78:	74 06                	je     2b80 <efi_local_check_volume_name+0xea>
    2b7a:	41 bc 72 1f b2 d2    	mov    $0xd2b21f72,%r12d
    2b80:	4c 89 f7             	mov    %r14,%rdi
    2b83:	e8 9a 9b 00 00       	call   c722 <free>
    2b88:	48 89 ef             	mov    %rbp,%rdi
    2b8b:	e8 92 9b 00 00       	call   c722 <free>
    2b90:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2b95:	48 2b 05 b4 74 02 00 	sub    0x274b4(%rip),%rax        # 2a050 <__stack_chk_guard>
    2b9c:	74 05                	je     2ba3 <efi_local_check_volume_name+0x10d>
    2b9e:	e8 bd fe ff ff       	call   2a60 <__stack_chk_fail>
    2ba3:	48 83 c4 38          	add    $0x38,%rsp
    2ba7:	44 89 e0             	mov    %r12d,%eax
    2baa:	5d                   	pop    %rbp
    2bab:	41 5c                	pop    %r12
    2bad:	41 5d                	pop    %r13
    2baf:	41 5e                	pop    %r14
    2bb1:	c3                   	ret    

0000000000002bb2 <efi_local_close>:
    2bb2:	f3 0f 1e fa          	endbr64 
    2bb6:	53                   	push   %rbx
    2bb7:	48 89 fb             	mov    %rdi,%rbx
    2bba:	48 83 c7 30          	add    $0x30,%rdi
    2bbe:	48 83 ec 10          	sub    $0x10,%rsp
    2bc2:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    2bc6:	e8 95 ce 00 00       	call   fa60 <process_del>
    2bcb:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    2bcf:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    2bd3:	e8 c7 6d 00 00       	call   999f <intf_shutdown>
    2bd8:	48 8b 43 58          	mov    0x58(%rbx),%rax
    2bdc:	48 85 c0             	test   %rax,%rax
    2bdf:	74 16                	je     2bf7 <efi_local_close+0x45>
    2be1:	48 83 ec 20          	sub    $0x20,%rsp
    2be5:	48 89 c1             	mov    %rax,%rcx
    2be8:	ff 50 10             	call   *0x10(%rax)
    2beb:	48 c7 43 58 00 00 00 	movq   $0x0,0x58(%rbx)
    2bf2:	00 
    2bf3:	48 83 c4 20          	add    $0x20,%rsp
    2bf7:	48 8b 43 50          	mov    0x50(%rbx),%rax
    2bfb:	48 85 c0             	test   %rax,%rax
    2bfe:	74 16                	je     2c16 <efi_local_close+0x64>
    2c00:	48 83 ec 20          	sub    $0x20,%rsp
    2c04:	48 89 c1             	mov    %rax,%rcx
    2c07:	ff 50 10             	call   *0x10(%rax)
    2c0a:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
    2c11:	00 
    2c12:	48 83 c4 20          	add    $0x20,%rsp
    2c16:	48 83 c4 10          	add    $0x10,%rsp
    2c1a:	5b                   	pop    %rbx
    2c1b:	c3                   	ret    

0000000000002c1c <efi_local_step>:
    2c1c:	f3 0f 1e fa          	endbr64 
    2c20:	41 57                	push   %r15
    2c22:	41 56                	push   %r14
    2c24:	41 55                	push   %r13
    2c26:	4c 8d 6f 10          	lea    0x10(%rdi),%r13
    2c2a:	41 54                	push   %r12
    2c2c:	55                   	push   %rbp
    2c2d:	48 89 fd             	mov    %rdi,%rbp
    2c30:	53                   	push   %rbx
    2c31:	48 83 ec 28          	sub    $0x28,%rsp
    2c35:	4c 8b 77 58          	mov    0x58(%rdi),%r14
    2c39:	4c 89 ef             	mov    %r13,%rdi
    2c3c:	48 8b 05 0d 74 02 00 	mov    0x2740d(%rip),%rax        # 2a050 <__stack_chk_guard>
    2c43:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2c48:	31 c0                	xor    %eax,%eax
    2c4a:	e8 c5 48 01 00       	call   17514 <xfer_window>
    2c4f:	48 85 c0             	test   %rax,%rax
    2c52:	0f 84 cc 00 00 00    	je     2d24 <efi_local_step+0x108>
    2c58:	48 8b 5d 60          	mov    0x60(%rbp),%rbx
    2c5c:	4c 89 ef             	mov    %r13,%rdi
    2c5f:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    2c64:	48 89 de             	mov    %rbx,%rsi
    2c67:	e8 06 4c 01 00       	call   17872 <xfer_seek>
    2c6c:	31 f6                	xor    %esi,%esi
    2c6e:	4c 89 ef             	mov    %r13,%rdi
    2c71:	e8 fc 4b 01 00       	call   17872 <xfer_seek>
    2c76:	48 85 db             	test   %rbx,%rbx
    2c79:	0f 84 8a 00 00 00    	je     2d09 <efi_local_step+0xed>
    2c7f:	41 bc 00 10 00 00    	mov    $0x1000,%r12d
    2c85:	4c 89 ef             	mov    %r13,%rdi
    2c88:	4c 39 e3             	cmp    %r12,%rbx
    2c8b:	4c 0f 46 e3          	cmovbe %rbx,%r12
    2c8f:	4c 89 e6             	mov    %r12,%rsi
    2c92:	e8 e0 49 01 00       	call   17677 <xfer_alloc_iob>
    2c97:	48 89 c7             	mov    %rax,%rdi
    2c9a:	48 85 c0             	test   %rax,%rax
    2c9d:	75 07                	jne    2ca6 <efi_local_step+0x8a>
    2c9f:	be 77 1f b2 ce       	mov    $0xceb21f77,%esi
    2ca4:	eb 69                	jmp    2d0f <efi_local_step+0xf3>
    2ca6:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    2cab:	48 83 ec 20          	sub    $0x20,%rsp
    2caf:	4c 8b 40 18          	mov    0x18(%rax),%r8
    2cb3:	4c 89 fa             	mov    %r15,%rdx
    2cb6:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2cbb:	4c 89 f1             	mov    %r14,%rcx
    2cbe:	41 ff 56 20          	call   *0x20(%r14)
    2cc2:	48 83 c4 20          	add    $0x20,%rsp
    2cc6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    2ccb:	48 85 c0             	test   %rax,%rax
    2cce:	74 17                	je     2ce7 <efi_local_step+0xcb>
    2cd0:	48 89 c6             	mov    %rax,%rsi
    2cd3:	48 c1 ee 38          	shr    $0x38,%rsi
    2cd7:	09 c6                	or     %eax,%esi
    2cd9:	40 0f b6 f6          	movzbl %sil,%esi
    2cdd:	81 ce 00 e0 4d 7f    	or     $0x7f4de000,%esi
    2ce3:	f7 de                	neg    %esi
    2ce5:	eb 28                	jmp    2d0f <efi_local_step+0xf3>
    2ce7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2cec:	48 01 47 20          	add    %rax,0x20(%rdi)
    2cf0:	48 89 fe             	mov    %rdi,%rsi
    2cf3:	4c 89 ef             	mov    %r13,%rdi
    2cf6:	e8 e7 4a 01 00       	call   177e2 <xfer_deliver_iob>
    2cfb:	89 c6                	mov    %eax,%esi
    2cfd:	85 c0                	test   %eax,%eax
    2cff:	75 0c                	jne    2d0d <efi_local_step+0xf1>
    2d01:	4c 29 e3             	sub    %r12,%rbx
    2d04:	e9 6d ff ff ff       	jmp    2c76 <efi_local_step+0x5a>
    2d09:	31 f6                	xor    %esi,%esi
    2d0b:	eb 0f                	jmp    2d1c <efi_local_step+0x100>
    2d0d:	31 ff                	xor    %edi,%edi
    2d0f:	89 74 24 08          	mov    %esi,0x8(%rsp)
    2d13:	e8 4e 70 00 00       	call   9d66 <free_iob>
    2d18:	8b 74 24 08          	mov    0x8(%rsp),%esi
    2d1c:	48 89 ef             	mov    %rbp,%rdi
    2d1f:	e8 8e fe ff ff       	call   2bb2 <efi_local_close>
    2d24:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2d29:	48 2b 05 20 73 02 00 	sub    0x27320(%rip),%rax        # 2a050 <__stack_chk_guard>
    2d30:	74 05                	je     2d37 <efi_local_step+0x11b>
    2d32:	e8 29 fd ff ff       	call   2a60 <__stack_chk_fail>
    2d37:	48 83 c4 28          	add    $0x28,%rsp
    2d3b:	5b                   	pop    %rbx
    2d3c:	5d                   	pop    %rbp
    2d3d:	41 5c                	pop    %r12
    2d3f:	41 5d                	pop    %r13
    2d41:	41 5e                	pop    %r14
    2d43:	41 5f                	pop    %r15
    2d45:	c3                   	ret    

0000000000002d46 <efi_local_open>:
    2d46:	f3 0f 1e fa          	endbr64 
    2d4a:	55                   	push   %rbp
    2d4b:	48 89 e5             	mov    %rsp,%rbp
    2d4e:	41 57                	push   %r15
    2d50:	41 56                	push   %r14
    2d52:	41 55                	push   %r13
    2d54:	41 54                	push   %r12
    2d56:	53                   	push   %rbx
    2d57:	48 83 ec 78          	sub    $0x78,%rsp
    2d5b:	48 8b 5e 30          	mov    0x30(%rsi),%rbx
    2d5f:	48 89 bd 70 ff ff ff 	mov    %rdi,-0x90(%rbp)
    2d66:	48 8b 05 e3 72 02 00 	mov    0x272e3(%rip),%rax        # 2a050 <__stack_chk_guard>
    2d6d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2d71:	31 c0                	xor    %eax,%eax
    2d73:	48 85 db             	test   %rbx,%rbx
    2d76:	74 07                	je     2d7f <efi_local_open+0x39>
    2d78:	80 3b 00             	cmpb   $0x0,(%rbx)
    2d7b:	75 02                	jne    2d7f <efi_local_open+0x39>
    2d7d:	31 db                	xor    %ebx,%ebx
    2d7f:	48 8b 46 18          	mov    0x18(%rsi),%rax
    2d83:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    2d87:	48 85 c0             	test   %rax,%rax
    2d8a:	75 08                	jne    2d94 <efi_local_open+0x4e>
    2d8c:	48 8b 46 40          	mov    0x40(%rsi),%rax
    2d90:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    2d94:	bf 68 00 00 00       	mov    $0x68,%edi
    2d99:	e8 98 99 00 00       	call   c736 <zalloc>
    2d9e:	49 89 c4             	mov    %rax,%r12
    2da1:	48 85 c0             	test   %rax,%rax
    2da4:	75 0b                	jne    2db1 <efi_local_open+0x6b>
    2da6:	41 bd 77 1f b2 ce    	mov    $0xceb21f77,%r13d
    2dac:	e9 d7 04 00 00       	jmp    3288 <efi_local_open+0x542>
    2db1:	48 8d 05 08 37 02 00 	lea    0x23708(%rip),%rax        # 264c0 <null_intf>
    2db8:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    2dbd:	4d 89 64 24 18       	mov    %r12,0x18(%r12)
    2dc2:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    2dc7:	48 8d 05 b2 20 02 00 	lea    0x220b2(%rip),%rax        # 24e80 <efi_local_xfer_desc>
    2dce:	4c 8d 35 2b 1b 02 00 	lea    0x21b2b(%rip),%r14        # 24900 <efi_simple_file_system_protocol_guid>
    2dd5:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    2dda:	49 89 44 24 28       	mov    %rax,0x28(%r12)
    2ddf:	48 8d 05 7a 20 02 00 	lea    0x2207a(%rip),%rax        # 24e60 <efi_local_process_desc>
    2de6:	49 89 44 24 40       	mov    %rax,0x40(%r12)
    2deb:	49 89 7c 24 30       	mov    %rdi,0x30(%r12)
    2df0:	49 89 7c 24 38       	mov    %rdi,0x38(%r12)
    2df5:	4d 89 64 24 48       	mov    %r12,0x48(%r12)
    2dfa:	e8 0e cc 00 00       	call   fa0d <process_add>
    2dff:	48 8b 05 72 72 02 00 	mov    0x27272(%rip),%rax        # 2a078 <efi_systab>
    2e06:	48 85 db             	test   %rbx,%rbx
    2e09:	48 8b 40 60          	mov    0x60(%rax),%rax
    2e0d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    2e11:	74 35                	je     2e48 <efi_local_open+0x102>
    2e13:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    2e17:	51                   	push   %rcx
    2e18:	4c 8d 4d b8          	lea    -0x48(%rbp),%r9
    2e1c:	45 31 c0             	xor    %r8d,%r8d
    2e1f:	50                   	push   %rax
    2e20:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2e24:	4c 89 f2             	mov    %r14,%rdx
    2e27:	b9 02 00 00 00       	mov    $0x2,%ecx
    2e2c:	4c 8d 3d 63 fc ff ff 	lea    -0x39d(%rip),%r15        # 2a96 <efi_local_check_volume_name>
    2e33:	48 83 ec 20          	sub    $0x20,%rsp
    2e37:	ff 90 38 01 00 00    	call   *0x138(%rax)
    2e3d:	48 83 c4 30          	add    $0x30,%rsp
    2e41:	48 85 c0             	test   %rax,%rax
    2e44:	74 5e                	je     2ea4 <efi_local_open+0x15e>
    2e46:	eb 30                	jmp    2e78 <efi_local_open+0x132>
    2e48:	4c 8d 6d b0          	lea    -0x50(%rbp),%r13
    2e4c:	48 83 ec 20          	sub    $0x20,%rsp
    2e50:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    2e54:	4c 89 f1             	mov    %r14,%rcx
    2e57:	48 8b 05 12 72 02 00 	mov    0x27212(%rip),%rax        # 2a070 <efi_loaded_image_path>
    2e5e:	4d 89 e8             	mov    %r13,%r8
    2e61:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    2e65:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2e69:	ff 90 b8 00 00 00    	call   *0xb8(%rax)
    2e6f:	48 83 c4 20          	add    $0x20,%rsp
    2e73:	48 85 c0             	test   %rax,%rax
    2e76:	74 1d                	je     2e95 <efi_local_open+0x14f>
    2e78:	49 89 c5             	mov    %rax,%r13
    2e7b:	49 c1 ed 38          	shr    $0x38,%r13
    2e7f:	41 09 c5             	or     %eax,%r13d
    2e82:	45 0f b6 ed          	movzbl %r13b,%r13d
    2e86:	41 81 cd 00 e0 4d 7f 	or     $0x7f4de000,%r13d
    2e8d:	41 f7 dd             	neg    %r13d
    2e90:	e9 e1 03 00 00       	jmp    3276 <efi_local_open+0x530>
    2e95:	4c 89 6d a8          	mov    %r13,-0x58(%rbp)
    2e99:	45 31 ff             	xor    %r15d,%r15d
    2e9c:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    2ea3:	00 
    2ea4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    2ea8:	45 31 ed             	xor    %r13d,%r13d
    2eab:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    2eb2:	4c 3b 6d b8          	cmp    -0x48(%rbp),%r13
    2eb6:	0f 83 17 01 00 00    	jae    2fd3 <efi_local_open+0x28d>
    2ebc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2ec0:	4c 8b 0d a1 71 02 00 	mov    0x271a1(%rip),%r9        # 2a068 <efi_image_handle>
    2ec7:	4c 89 f2             	mov    %r14,%rdx
    2eca:	4c 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%r8
    2ed1:	4e 8b 14 e8          	mov    (%rax,%r13,8),%r10
    2ed5:	48 8b 05 9c 71 02 00 	mov    0x2719c(%rip),%rax        # 2a078 <efi_systab>
    2edc:	48 8b 40 60          	mov    0x60(%rax),%rax
    2ee0:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    2ee4:	4c 89 d1             	mov    %r10,%rcx
    2ee7:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    2eee:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    2ef5:	6a 02                	push   $0x2
    2ef7:	41 52                	push   %r10
    2ef9:	4c 89 95 60 ff ff ff 	mov    %r10,-0xa0(%rbp)
    2f00:	48 83 ec 20          	sub    $0x20,%rsp
    2f04:	ff 90 18 01 00 00    	call   *0x118(%rax)
    2f0a:	48 83 c4 30          	add    $0x30,%rsp
    2f0e:	4c 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%r10
    2f15:	48 85 c0             	test   %rax,%rax
    2f18:	74 05                	je     2f1f <efi_local_open+0x1d9>
    2f1a:	e9 ac 00 00 00       	jmp    2fcb <efi_local_open+0x285>
    2f1f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2f23:	48 83 ec 20          	sub    $0x20,%rsp
    2f27:	4c 89 95 60 ff ff ff 	mov    %r10,-0xa0(%rbp)
    2f2e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    2f32:	48 89 c1             	mov    %rax,%rcx
    2f35:	ff 50 08             	call   *0x8(%rax)
    2f38:	48 83 c4 20          	add    $0x20,%rsp
    2f3c:	31 f6                	xor    %esi,%esi
    2f3e:	4c 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%r10
    2f45:	48 85 c0             	test   %rax,%rax
    2f48:	74 15                	je     2f5f <efi_local_open+0x219>
    2f4a:	48 89 c6             	mov    %rax,%rsi
    2f4d:	48 c1 ee 38          	shr    $0x38,%rsi
    2f51:	09 c6                	or     %eax,%esi
    2f53:	40 0f b6 f6          	movzbl %sil,%esi
    2f57:	81 ce 00 e0 4d 7f    	or     $0x7f4de000,%esi
    2f5d:	f7 de                	neg    %esi
    2f5f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    2f66:	4d 89 d1             	mov    %r10,%r9
    2f69:	4c 89 f2             	mov    %r14,%rdx
    2f6c:	4c 89 d1             	mov    %r10,%rcx
    2f6f:	89 b5 60 ff ff ff    	mov    %esi,-0xa0(%rbp)
    2f75:	48 83 ec 20          	sub    $0x20,%rsp
    2f79:	4c 8b 05 e8 70 02 00 	mov    0x270e8(%rip),%r8        # 2a068 <efi_image_handle>
    2f80:	ff 90 20 01 00 00    	call   *0x120(%rax)
    2f86:	8b b5 60 ff ff ff    	mov    -0xa0(%rbp),%esi
    2f8c:	48 83 c4 20          	add    $0x20,%rsp
    2f90:	85 f6                	test   %esi,%esi
    2f92:	75 37                	jne    2fcb <efi_local_open+0x285>
    2f94:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    2f98:	4d 85 ff             	test   %r15,%r15
    2f9b:	75 0b                	jne    2fa8 <efi_local_open+0x262>
    2f9d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2fa1:	49 89 44 24 50       	mov    %rax,0x50(%r12)
    2fa6:	eb 2b                	jmp    2fd3 <efi_local_open+0x28d>
    2fa8:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    2fac:	48 89 d9             	mov    %rbx,%rcx
    2faf:	4c 89 e7             	mov    %r12,%rdi
    2fb2:	41 ff d7             	call   *%r15
    2fb5:	85 c0                	test   %eax,%eax
    2fb7:	74 e4                	je     2f9d <efi_local_open+0x257>
    2fb9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2fbd:	48 83 ec 20          	sub    $0x20,%rsp
    2fc1:	48 89 c1             	mov    %rax,%rcx
    2fc4:	ff 50 10             	call   *0x10(%rax)
    2fc7:	48 83 c4 20          	add    $0x20,%rsp
    2fcb:	49 ff c5             	inc    %r13
    2fce:	e9 df fe ff ff       	jmp    2eb2 <efi_local_open+0x16c>
    2fd3:	48 85 db             	test   %rbx,%rbx
    2fd6:	74 13                	je     2feb <efi_local_open+0x2a5>
    2fd8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2fdc:	48 83 ec 20          	sub    $0x20,%rsp
    2fe0:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    2fe4:	ff 50 48             	call   *0x48(%rax)
    2fe7:	48 83 c4 20          	add    $0x20,%rsp
    2feb:	49 83 7c 24 50 00    	cmpq   $0x0,0x50(%r12)
    2ff1:	74 22                	je     3015 <efi_local_open+0x2cf>
    2ff3:	48 8b 05 66 70 02 00 	mov    0x27066(%rip),%rax        # 2a060 <efi_loaded_image>
    2ffa:	49 89 e6             	mov    %rsp,%r14
    2ffd:	31 db                	xor    %ebx,%ebx
    2fff:	4c 8b 68 20          	mov    0x20(%rax),%r13
    3003:	4d 85 ed             	test   %r13,%r13
    3006:	74 18                	je     3020 <efi_local_open+0x2da>
    3008:	4c 89 ef             	mov    %r13,%rdi
    300b:	e8 7a 3a 00 00       	call   6a8a <efi_devpath_len>
    3010:	48 89 c3             	mov    %rax,%rbx
    3013:	eb 0b                	jmp    3020 <efi_local_open+0x2da>
    3015:	41 bd 72 1f b2 d2    	mov    $0xd2b21f72,%r13d
    301b:	e9 56 02 00 00       	jmp    3276 <efi_local_open+0x530>
    3020:	48 d1 eb             	shr    %rbx
    3023:	48 89 e1             	mov    %rsp,%rcx
    3026:	48 8d 53 0f          	lea    0xf(%rbx),%rdx
    302a:	48 89 d0             	mov    %rdx,%rax
    302d:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    3034:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    3038:	48 29 d1             	sub    %rdx,%rcx
    303b:	48 39 cc             	cmp    %rcx,%rsp
    303e:	74 12                	je     3052 <efi_local_open+0x30c>
    3040:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    3047:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    304e:	00 00 
    3050:	eb e9                	jmp    303b <efi_local_open+0x2f5>
    3052:	25 ff 0f 00 00       	and    $0xfff,%eax
    3057:	48 29 c4             	sub    %rax,%rsp
    305a:	48 85 c0             	test   %rax,%rax
    305d:	74 06                	je     3065 <efi_local_open+0x31f>
    305f:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    3065:	49 89 e7             	mov    %rsp,%r15
    3068:	48 89 e7             	mov    %rsp,%rdi
    306b:	48 89 d9             	mov    %rbx,%rcx
    306e:	31 c0                	xor    %eax,%eax
    3070:	f3 aa                	rep stos %al,%es:(%rdi)
    3072:	48 89 e7             	mov    %rsp,%rdi
    3075:	48 8d 15 33 f8 01 00 	lea    0x1f833(%rip),%rdx        # 228af <.LC0>
    307c:	4d 85 ed             	test   %r13,%r13
    307f:	74 2f                	je     30b0 <efi_local_open+0x36a>
    3081:	41 80 7d 00 7f       	cmpb   $0x7f,0x0(%r13)
    3086:	74 28                	je     30b0 <efi_local_open+0x36a>
    3088:	49 8d 4d 04          	lea    0x4(%r13),%rcx
    308c:	48 89 de             	mov    %rbx,%rsi
    308f:	31 c0                	xor    %eax,%eax
    3091:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
    3095:	e8 c3 40 01 00       	call   1715d <snprintf>
    309a:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    309e:	48 98                	cltq   
    30a0:	48 01 c7             	add    %rax,%rdi
    30a3:	48 29 c3             	sub    %rax,%rbx
    30a6:	41 0f b7 45 02       	movzwl 0x2(%r13),%eax
    30ab:	49 01 c5             	add    %rax,%r13
    30ae:	eb c5                	jmp    3075 <efi_local_open+0x32f>
    30b0:	4c 89 f8             	mov    %r15,%rax
    30b3:	8a 10                	mov    (%rax),%dl
    30b5:	84 d2                	test   %dl,%dl
    30b7:	74 0d                	je     30c6 <efi_local_open+0x380>
    30b9:	80 fa 5c             	cmp    $0x5c,%dl
    30bc:	75 03                	jne    30c1 <efi_local_open+0x37b>
    30be:	c6 00 2f             	movb   $0x2f,(%rax)
    30c1:	48 ff c0             	inc    %rax
    30c4:	eb ed                	jmp    30b3 <efi_local_open+0x36d>
    30c6:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    30ca:	4c 89 ff             	mov    %r15,%rdi
    30cd:	e8 25 38 01 00       	call   168f7 <resolve_path>
    30d2:	49 89 c7             	mov    %rax,%r15
    30d5:	48 85 c0             	test   %rax,%rax
    30d8:	75 13                	jne    30ed <efi_local_open+0x3a7>
    30da:	4c 89 f4             	mov    %r14,%rsp
    30dd:	e9 2f 01 00 00       	jmp    3211 <efi_local_open+0x4cb>
    30e2:	80 fa 2f             	cmp    $0x2f,%dl
    30e5:	75 03                	jne    30ea <efi_local_open+0x3a4>
    30e7:	c6 00 5c             	movb   $0x5c,(%rax)
    30ea:	48 ff c0             	inc    %rax
    30ed:	8a 10                	mov    (%rax),%dl
    30ef:	84 d2                	test   %dl,%dl
    30f1:	75 ef                	jne    30e2 <efi_local_open+0x39c>
    30f3:	4c 89 ff             	mov    %r15,%rdi
    30f6:	48 89 65 88          	mov    %rsp,-0x78(%rbp)
    30fa:	e8 17 09 01 00       	call   13a16 <strlen>
    30ff:	48 89 e1             	mov    %rsp,%rcx
    3102:	48 8d 70 01          	lea    0x1(%rax),%rsi
    3106:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
    310a:	48 83 c0 0f          	add    $0xf,%rax
    310e:	48 89 c2             	mov    %rax,%rdx
    3111:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    3117:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
    311b:	48 29 c1             	sub    %rax,%rcx
    311e:	48 39 cc             	cmp    %rcx,%rsp
    3121:	74 12                	je     3135 <efi_local_open+0x3ef>
    3123:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    312a:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    3131:	00 00 
    3133:	eb e9                	jmp    311e <efi_local_open+0x3d8>
    3135:	48 89 d0             	mov    %rdx,%rax
    3138:	25 ff 0f 00 00       	and    $0xfff,%eax
    313d:	48 29 c4             	sub    %rax,%rsp
    3140:	48 85 c0             	test   %rax,%rax
    3143:	74 06                	je     314b <efi_local_open+0x405>
    3145:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    314b:	49 89 e0             	mov    %rsp,%r8
    314e:	48 8d 15 ac 05 02 00 	lea    0x205ac(%rip),%rdx        # 23701 <.LC0>
    3155:	4c 89 f9             	mov    %r15,%rcx
    3158:	31 c0                	xor    %eax,%eax
    315a:	4c 89 c7             	mov    %r8,%rdi
    315d:	4c 89 45 80          	mov    %r8,-0x80(%rbp)
    3161:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
    3165:	e8 aa 38 00 00       	call   6a14 <efi_snprintf>
    316a:	49 8b 44 24 50       	mov    0x50(%r12),%rax
    316f:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    3175:	52                   	push   %rdx
    3176:	48 89 da             	mov    %rbx,%rdx
    3179:	4c 8b 45 80          	mov    -0x80(%rbp),%r8
    317d:	6a 00                	push   $0x0
    317f:	48 89 c1             	mov    %rax,%rcx
    3182:	48 83 ec 20          	sub    $0x20,%rsp
    3186:	ff 50 08             	call   *0x8(%rax)
    3189:	48 83 c4 30          	add    $0x30,%rsp
    318d:	48 85 c0             	test   %rax,%rax
    3190:	74 1a                	je     31ac <efi_local_open+0x466>
    3192:	49 89 c5             	mov    %rax,%r13
    3195:	49 c1 ed 38          	shr    $0x38,%r13
    3199:	41 09 c5             	or     %eax,%r13d
    319c:	45 0f b6 ed          	movzbl %r13b,%r13d
    31a0:	41 81 cd 00 e0 4d 7f 	or     $0x7f4de000,%r13d
    31a7:	41 f7 dd             	neg    %r13d
    31aa:	eb 0c                	jmp    31b8 <efi_local_open+0x472>
    31ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    31b0:	45 31 ed             	xor    %r13d,%r13d
    31b3:	49 89 44 24 58       	mov    %rax,0x58(%r12)
    31b8:	48 8b 65 88          	mov    -0x78(%rbp),%rsp
    31bc:	4c 89 ff             	mov    %r15,%rdi
    31bf:	e8 5e 95 00 00       	call   c722 <free>
    31c4:	4c 89 f4             	mov    %r14,%rsp
    31c7:	45 85 ed             	test   %r13d,%r13d
    31ca:	0f 85 a6 00 00 00    	jne    3276 <efi_local_open+0x530>
    31d0:	4d 8b 7c 24 58       	mov    0x58(%r12),%r15
    31d5:	48 83 ec 20          	sub    $0x20,%rsp
    31d9:	45 31 c9             	xor    %r9d,%r9d
    31dc:	49 89 d8             	mov    %rbx,%r8
    31df:	48 8d 15 fa 15 02 00 	lea    0x215fa(%rip),%rdx        # 247e0 <efi_file_info_id>
    31e6:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    31ed:	00 
    31ee:	4c 89 f9             	mov    %r15,%rcx
    31f1:	41 ff 57 40          	call   *0x40(%r15)
    31f5:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    31f9:	48 83 c4 20          	add    $0x20,%rsp
    31fd:	e8 13 95 00 00       	call   c715 <malloc>
    3202:	48 8d 15 d7 15 02 00 	lea    0x215d7(%rip),%rdx        # 247e0 <efi_file_info_id>
    3209:	48 85 c0             	test   %rax,%rax
    320c:	49 89 c6             	mov    %rax,%r14
    320f:	75 08                	jne    3219 <efi_local_open+0x4d3>
    3211:	41 bd 77 1f b2 ce    	mov    $0xceb21f77,%r13d
    3217:	eb 5d                	jmp    3276 <efi_local_open+0x530>
    3219:	48 83 ec 20          	sub    $0x20,%rsp
    321d:	49 89 c1             	mov    %rax,%r9
    3220:	49 89 d8             	mov    %rbx,%r8
    3223:	4c 89 f9             	mov    %r15,%rcx
    3226:	41 ff 57 40          	call   *0x40(%r15)
    322a:	48 83 c4 20          	add    $0x20,%rsp
    322e:	48 85 c0             	test   %rax,%rax
    3231:	74 1a                	je     324d <efi_local_open+0x507>
    3233:	49 89 c5             	mov    %rax,%r13
    3236:	49 c1 ed 38          	shr    $0x38,%r13
    323a:	41 09 c5             	or     %eax,%r13d
    323d:	45 0f b6 ed          	movzbl %r13b,%r13d
    3241:	41 81 cd 00 e0 4d 7f 	or     $0x7f4de000,%r13d
    3248:	41 f7 dd             	neg    %r13d
    324b:	eb 09                	jmp    3256 <efi_local_open+0x510>
    324d:	49 8b 46 08          	mov    0x8(%r14),%rax
    3251:	49 89 44 24 60       	mov    %rax,0x60(%r12)
    3256:	4c 89 f7             	mov    %r14,%rdi
    3259:	e8 c4 94 00 00       	call   c722 <free>
    325e:	45 85 ed             	test   %r13d,%r13d
    3261:	75 13                	jne    3276 <efi_local_open+0x530>
    3263:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
    326a:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    326f:	e8 cd 65 00 00       	call   9841 <intf_plug_plug>
    3274:	eb 0a                	jmp    3280 <efi_local_open+0x53a>
    3276:	31 f6                	xor    %esi,%esi
    3278:	4c 89 e7             	mov    %r12,%rdi
    327b:	e8 32 f9 ff ff       	call   2bb2 <efi_local_close>
    3280:	4c 89 e7             	mov    %r12,%rdi
    3283:	e8 92 cc 00 00       	call   ff1a <ref_decrement>
    3288:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    328c:	48 2b 05 bd 6d 02 00 	sub    0x26dbd(%rip),%rax        # 2a050 <__stack_chk_guard>
    3293:	74 05                	je     329a <efi_local_open+0x554>
    3295:	e8 c6 f7 ff ff       	call   2a60 <__stack_chk_fail>
    329a:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    329e:	44 89 e8             	mov    %r13d,%eax
    32a1:	5b                   	pop    %rbx
    32a2:	41 5c                	pop    %r12
    32a4:	41 5d                	pop    %r13
    32a6:	41 5e                	pop    %r14
    32a8:	41 5f                	pop    %r15
    32aa:	5d                   	pop    %rbp
    32ab:	c3                   	ret    

00000000000032ac <efi_pxe_buf_realloc>:
    32ac:	f3 0f 1e fa          	endbr64 
    32b0:	b8 7b 1f b5 b9       	mov    $0xb9b51f7b,%eax
    32b5:	c3                   	ret    

00000000000032b6 <efi_pxe_tftp_window>:
    32b6:	f3 0f 1e fa          	endbr64 
    32ba:	48 8b 87 c0 29 00 00 	mov    0x29c0(%rdi),%rax
    32c1:	c3                   	ret    

00000000000032c2 <efi_pxe_arp>:
    32c2:	f3 0f 1e fa          	endbr64 
    32c6:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    32cd:	00 00 80 
    32d0:	c3                   	ret    

00000000000032d1 <efi_pxe_set_parameters>:
    32d1:	f3 0f 1e fa          	endbr64 
    32d5:	48 89 c8             	mov    %rcx,%rax
    32d8:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    32dd:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    32e2:	48 85 d2             	test   %rdx,%rdx
    32e5:	74 05                	je     32ec <efi_pxe_set_parameters+0x1b>
    32e7:	8a 12                	mov    (%rdx),%dl
    32e9:	88 50 76             	mov    %dl,0x76(%rax)
    32ec:	4d 85 c0             	test   %r8,%r8
    32ef:	74 06                	je     32f7 <efi_pxe_set_parameters+0x26>
    32f1:	41 8a 10             	mov    (%r8),%dl
    32f4:	88 50 77             	mov    %dl,0x77(%rax)
    32f7:	4d 85 c9             	test   %r9,%r9
    32fa:	74 09                	je     3305 <efi_pxe_set_parameters+0x34>
    32fc:	41 8a 11             	mov    (%r9),%dl
    32ff:	88 90 81 00 00 00    	mov    %dl,0x81(%rax)
    3305:	4d 85 d2             	test   %r10,%r10
    3308:	74 09                	je     3313 <efi_pxe_set_parameters+0x42>
    330a:	41 8a 12             	mov    (%r10),%dl
    330d:	88 90 82 00 00 00    	mov    %dl,0x82(%rax)
    3313:	48 85 c9             	test   %rcx,%rcx
    3316:	74 08                	je     3320 <efi_pxe_set_parameters+0x4f>
    3318:	8a 11                	mov    (%rcx),%dl
    331a:	88 90 80 00 00 00    	mov    %dl,0x80(%rax)
    3320:	31 c0                	xor    %eax,%eax
    3322:	c3                   	ret    

0000000000003323 <efi_pxe_set_station_ip>:
    3323:	f3 0f 1e fa          	endbr64 
    3327:	57                   	push   %rdi
    3328:	48 89 c8             	mov    %rcx,%rax
    332b:	56                   	push   %rsi
    332c:	48 85 d2             	test   %rdx,%rdx
    332f:	74 0e                	je     333f <efi_pxe_set_station_ip+0x1c>
    3331:	48 89 d6             	mov    %rdx,%rsi
    3334:	48 8d b9 84 00 00 00 	lea    0x84(%rcx),%rdi
    333b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    333c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    333d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    333e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    333f:	4d 85 c0             	test   %r8,%r8
    3342:	74 0e                	je     3352 <efi_pxe_set_station_ip+0x2f>
    3344:	48 8d b8 94 00 00 00 	lea    0x94(%rax),%rdi
    334b:	4c 89 c6             	mov    %r8,%rsi
    334e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    334f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    3350:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    3351:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    3352:	31 c0                	xor    %eax,%eax
    3354:	5e                   	pop    %rsi
    3355:	5f                   	pop    %rdi
    3356:	c3                   	ret    

0000000000003357 <efi_pxe_ip>:
    3357:	53                   	push   %rbx
    3358:	48 83 ec 10          	sub    $0x10,%rsp
    335c:	48 8b 05 ed 6c 02 00 	mov    0x26ced(%rip),%rax        # 2a050 <__stack_chk_guard>
    3363:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3368:	31 c0                	xor    %eax,%eax
    336a:	80 bf ab 00 00 00 00 	cmpb   $0x0,0xab(%rdi)
    3371:	74 07                	je     337a <efi_pxe_ip+0x23>
    3373:	b8 7d 1f b5 c3       	mov    $0xc3b51f7d,%eax
    3378:	eb 6a                	jmp    33e4 <efi_pxe_ip+0x8d>
    337a:	48 8b 47 10          	mov    0x10(%rdi),%rax
    337e:	48 89 fb             	mov    %rdi,%rbx
    3381:	48 89 e2             	mov    %rsp,%rdx
    3384:	48 8d 35 85 60 02 00 	lea    0x26085(%rip),%rsi        # 29410 <ip_setting>
    338b:	48 8d b8 68 01 00 00 	lea    0x168(%rax),%rdi
    3392:	e8 a1 eb 00 00       	call   11f38 <fetch_ipv4_setting>
    3397:	48 8b 43 10          	mov    0x10(%rbx),%rax
    339b:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    33a0:	48 8d 35 91 60 02 00 	lea    0x26091(%rip),%rsi        # 29438 <netmask_setting>
    33a7:	48 8d b8 68 01 00 00 	lea    0x168(%rax),%rdi
    33ae:	e8 85 eb 00 00       	call   11f38 <fetch_ipv4_setting>
    33b3:	31 d2                	xor    %edx,%edx
    33b5:	48 8d bb bc 00 00 00 	lea    0xbc(%rbx),%rdi
    33bc:	89 d0                	mov    %edx,%eax
    33be:	ab                   	stos   %eax,%es:(%rdi)
    33bf:	ab                   	stos   %eax,%es:(%rdi)
    33c0:	ab                   	stos   %eax,%es:(%rdi)
    33c1:	ab                   	stos   %eax,%es:(%rdi)
    33c2:	8b 04 24             	mov    (%rsp),%eax
    33c5:	48 8d bb cc 00 00 00 	lea    0xcc(%rbx),%rdi
    33cc:	89 83 bc 00 00 00    	mov    %eax,0xbc(%rbx)
    33d2:	89 d0                	mov    %edx,%eax
    33d4:	ab                   	stos   %eax,%es:(%rdi)
    33d5:	ab                   	stos   %eax,%es:(%rdi)
    33d6:	ab                   	stos   %eax,%es:(%rdi)
    33d7:	ab                   	stos   %eax,%es:(%rdi)
    33d8:	8b 44 24 04          	mov    0x4(%rsp),%eax
    33dc:	89 83 cc 00 00 00    	mov    %eax,0xcc(%rbx)
    33e2:	31 c0                	xor    %eax,%eax
    33e4:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    33e9:	48 2b 15 60 6c 02 00 	sub    0x26c60(%rip),%rdx        # 2a050 <__stack_chk_guard>
    33f0:	74 05                	je     33f7 <efi_pxe_ip+0xa0>
    33f2:	e8 69 f6 ff ff       	call   2a60 <__stack_chk_fail>
    33f7:	48 83 c4 10          	add    $0x10,%rsp
    33fb:	5b                   	pop    %rbx
    33fc:	c3                   	ret    

00000000000033fd <efi_pxe_tftp_close>:
    33fd:	f3 0f 1e fa          	endbr64 
    3401:	55                   	push   %rbp
    3402:	89 f5                	mov    %esi,%ebp
    3404:	53                   	push   %rbx
    3405:	48 89 fb             	mov    %rdi,%rbx
    3408:	48 8d bf a0 29 00 00 	lea    0x29a0(%rdi),%rdi
    340f:	50                   	push   %rax
    3410:	e8 03 65 00 00       	call   9918 <intf_restart>
    3415:	89 ab c8 29 00 00    	mov    %ebp,0x29c8(%rbx)
    341b:	5a                   	pop    %rdx
    341c:	5b                   	pop    %rbx
    341d:	5d                   	pop    %rbp
    341e:	c3                   	ret    

000000000000341f <efi_pxe_tftp_deliver>:
    341f:	f3 0f 1e fa          	endbr64 
    3423:	55                   	push   %rbp
    3424:	48 89 fd             	mov    %rdi,%rbp
    3427:	48 81 c7 80 29 00 00 	add    $0x2980,%rdi
    342e:	48 83 ec 10          	sub    $0x10,%rsp
    3432:	e8 57 46 01 00       	call   17a8e <xferbuf_deliver>
    3437:	85 c0                	test   %eax,%eax
    3439:	74 12                	je     344d <efi_pxe_tftp_deliver+0x2e>
    343b:	89 c6                	mov    %eax,%esi
    343d:	48 89 ef             	mov    %rbp,%rdi
    3440:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3444:	e8 b4 ff ff ff       	call   33fd <efi_pxe_tftp_close>
    3449:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    344d:	48 83 c4 10          	add    $0x10,%rsp
    3451:	5d                   	pop    %rbp
    3452:	c3                   	ret    

0000000000003453 <efi_pxe_free>:
    3453:	f3 0f 1e fa          	endbr64 
    3457:	55                   	push   %rbp
    3458:	48 89 fd             	mov    %rdi,%rbp
    345b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    345f:	e8 b6 ca 00 00       	call   ff1a <ref_decrement>
    3464:	48 89 ef             	mov    %rbp,%rdi
    3467:	5d                   	pop    %rbp
    3468:	e9 b5 92 00 00       	jmp    c722 <free>

000000000000346d <efi_pxe_ip_sockaddr>:
    346d:	55                   	push   %rbp
    346e:	48 89 fd             	mov    %rdi,%rbp
    3471:	b9 20 00 00 00       	mov    $0x20,%ecx
    3476:	48 89 d7             	mov    %rdx,%rdi
    3479:	53                   	push   %rbx
    347a:	48 89 d3             	mov    %rdx,%rbx
    347d:	50                   	push   %rax
    347e:	31 c0                	xor    %eax,%eax
    3480:	f3 aa                	rep stos %al,%es:(%rdi)
    3482:	48 8b 85 70 29 00 00 	mov    0x2970(%rbp),%rax
    3489:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    348d:	8b 40 08             	mov    0x8(%rax),%eax
    3490:	66 89 02             	mov    %ax,(%rdx)
    3493:	48 8b 85 78 29 00 00 	mov    0x2978(%rbp),%rax
    349a:	0f b6 50 1a          	movzbl 0x1a(%rax),%edx
    349e:	e8 46 3f 01 00       	call   173e9 <__memcpy>
    34a3:	48 8b 45 10          	mov    0x10(%rbp),%rax
    34a7:	8b 40 30             	mov    0x30(%rax),%eax
    34aa:	66 89 43 06          	mov    %ax,0x6(%rbx)
    34ae:	5a                   	pop    %rdx
    34af:	5b                   	pop    %rbx
    34b0:	5d                   	pop    %rbp
    34b1:	c3                   	ret    

00000000000034b2 <efi_pxe_mtftp>:
    34b2:	f3 0f 1e fa          	endbr64 
    34b6:	41 57                	push   %r15
    34b8:	83 e2 fb             	and    $0xfffffffb,%edx
    34bb:	41 56                	push   %r14
    34bd:	41 55                	push   %r13
    34bf:	41 54                	push   %r12
    34c1:	55                   	push   %rbp
    34c2:	48 89 cd             	mov    %rcx,%rbp
    34c5:	57                   	push   %rdi
    34c6:	56                   	push   %rsi
    34c7:	53                   	push   %rbx
    34c8:	48 83 ec 48          	sub    $0x48,%rsp
    34cc:	48 8b 0d 7d 6b 02 00 	mov    0x26b7d(%rip),%rcx        # 2a050 <__stack_chk_guard>
    34d3:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    34d8:	31 c9                	xor    %ecx,%ecx
    34da:	4c 8b b4 24 b0 00 00 	mov    0xb0(%rsp),%r14
    34e1:	00 
    34e2:	4c 8b ac 24 b8 00 00 	mov    0xb8(%rsp),%r13
    34e9:	00 
    34ea:	4c 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%r15
    34f1:	00 
    34f2:	4c 8b a4 24 c8 00 00 	mov    0xc8(%rsp),%r12
    34f9:	00 
    34fa:	8b 84 24 d8 00 00 00 	mov    0xd8(%rsp),%eax
    3501:	83 fa 02             	cmp    $0x2,%edx
    3504:	74 0a                	je     3510 <efi_pxe_mtftp+0x5e>
    3506:	bb 7d 1f b5 c3       	mov    $0xc3b51f7d,%ebx
    350b:	e9 bf 00 00 00       	jmp    35cf <efi_pxe_mtftp+0x11d>
    3510:	bf 01 00 00 00       	mov    $0x1,%edi
    3515:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3519:	4c 89 c3             	mov    %r8,%rbx
    351c:	e8 86 25 00 00       	call   5aa7 <efi_snp_add_claim>
    3521:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3525:	84 c0                	test   %al,%al
    3527:	74 0b                	je     3534 <efi_pxe_mtftp+0x82>
    3529:	4d 85 ed             	test   %r13,%r13
    352c:	74 06                	je     3534 <efi_pxe_mtftp+0x82>
    352e:	49 8b 45 00          	mov    0x0(%r13),%rax
    3532:	eb 04                	jmp    3538 <efi_pxe_mtftp+0x86>
    3534:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
    3538:	48 89 85 88 29 00 00 	mov    %rax,0x2988(%rbp)
    353f:	49 8b 06             	mov    (%r14),%rax
    3542:	4c 8d 6d c8          	lea    -0x38(%rbp),%r13
    3546:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
    354b:	48 89 9d 48 29 00 00 	mov    %rbx,0x2948(%rbp)
    3552:	4c 89 f2             	mov    %r14,%rdx
    3555:	4c 89 fe             	mov    %r15,%rsi
    3558:	4c 89 ef             	mov    %r13,%rdi
    355b:	48 89 85 50 29 00 00 	mov    %rax,0x2950(%rbp)
    3562:	e8 06 ff ff ff       	call   346d <efi_pxe_ip_sockaddr>
    3567:	4c 89 e6             	mov    %r12,%rsi
    356a:	4c 89 f7             	mov    %r14,%rdi
    356d:	e8 9a 35 01 00       	call   16b0c <pxe_uri>
    3572:	49 89 c4             	mov    %rax,%r12
    3575:	48 85 c0             	test   %rax,%rax
    3578:	75 07                	jne    3581 <efi_pxe_mtftp+0xcf>
    357a:	bb 7d 1f b5 c3       	mov    $0xc3b51f7d,%ebx
    357f:	eb 46                	jmp    35c7 <efi_pxe_mtftp+0x115>
    3581:	48 8d bd 68 29 00 00 	lea    0x2968(%rbp),%rdi
    3588:	48 89 c6             	mov    %rax,%rsi
    358b:	e8 5f b5 00 00       	call   eaef <xfer_open_uri>
    3590:	4c 89 e7             	mov    %r12,%rdi
    3593:	89 c3                	mov    %eax,%ebx
    3595:	e8 80 c9 00 00       	call   ff1a <ref_decrement>
    359a:	85 db                	test   %ebx,%ebx
    359c:	75 29                	jne    35c7 <efi_pxe_mtftp+0x115>
    359e:	c7 85 90 29 00 00 6c 	movl   $0xe5b51f6c,0x2990(%rbp)
    35a5:	1f b5 e5 
    35a8:	8b 9d 90 29 00 00    	mov    0x2990(%rbp),%ebx
    35ae:	81 fb 6c 1f b5 e5    	cmp    $0xe5b51f6c,%ebx
    35b4:	75 07                	jne    35bd <efi_pxe_mtftp+0x10b>
    35b6:	e8 cd c4 00 00       	call   fa88 <step>
    35bb:	eb eb                	jmp    35a8 <efi_pxe_mtftp+0xf6>
    35bd:	89 de                	mov    %ebx,%esi
    35bf:	4c 89 ef             	mov    %r13,%rdi
    35c2:	e8 36 fe ff ff       	call   33fd <efi_pxe_tftp_close>
    35c7:	83 cf ff             	or     $0xffffffff,%edi
    35ca:	e8 d8 24 00 00       	call   5aa7 <efi_snp_add_claim>
    35cf:	f7 db                	neg    %ebx
    35d1:	ba 01 00 00 00       	mov    $0x1,%edx
    35d6:	48 89 d8             	mov    %rbx,%rax
    35d9:	48 c1 e2 3f          	shl    $0x3f,%rdx
    35dd:	83 e3 7f             	and    $0x7f,%ebx
    35e0:	48 c1 e0 38          	shl    $0x38,%rax
    35e4:	48 21 d0             	and    %rdx,%rax
    35e7:	48 09 d8             	or     %rbx,%rax
    35ea:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    35ef:	48 2b 15 5a 6a 02 00 	sub    0x26a5a(%rip),%rdx        # 2a050 <__stack_chk_guard>
    35f6:	74 05                	je     35fd <efi_pxe_mtftp+0x14b>
    35f8:	e8 63 f4 ff ff       	call   2a60 <__stack_chk_fail>
    35fd:	48 83 c4 48          	add    $0x48,%rsp
    3601:	5b                   	pop    %rbx
    3602:	5e                   	pop    %rsi
    3603:	5f                   	pop    %rdi
    3604:	5d                   	pop    %rbp
    3605:	41 5c                	pop    %r12
    3607:	41 5d                	pop    %r13
    3609:	41 5e                	pop    %r14
    360b:	41 5f                	pop    %r15
    360d:	c3                   	ret    

000000000000360e <efi_pxe_buf_write>:
    360e:	f3 0f 1e fa          	endbr64 
    3612:	49 89 d0             	mov    %rdx,%r8
    3615:	48 03 37             	add    (%rdi),%rsi
    3618:	48 89 ca             	mov    %rcx,%rdx
    361b:	48 89 f7             	mov    %rsi,%rdi
    361e:	4c 89 c6             	mov    %r8,%rsi
    3621:	e9 c3 3d 01 00       	jmp    173e9 <__memcpy>

0000000000003626 <efi_pxe_set_ip_filter>:
    3626:	f3 0f 1e fa          	endbr64 
    362a:	57                   	push   %rdi
    362b:	48 8d b9 24 23 00 00 	lea    0x2324(%rcx),%rdi
    3632:	56                   	push   %rsi
    3633:	48 89 d6             	mov    %rdx,%rsi
    3636:	ba 84 00 00 00       	mov    $0x84,%edx
    363b:	50                   	push   %rax
    363c:	e8 a8 3d 01 00       	call   173e9 <__memcpy>
    3641:	5a                   	pop    %rdx
    3642:	31 c0                	xor    %eax,%eax
    3644:	5e                   	pop    %rsi
    3645:	5f                   	pop    %rdi
    3646:	c3                   	ret    

0000000000003647 <efi_pxe_set_packets>:
    3647:	f3 0f 1e fa          	endbr64 
    364b:	48 89 d0             	mov    %rdx,%rax
    364e:	41 57                	push   %r15
    3650:	41 56                	push   %r14
    3652:	41 55                	push   %r13
    3654:	41 54                	push   %r12
    3656:	55                   	push   %rbp
    3657:	57                   	push   %rdi
    3658:	56                   	push   %rsi
    3659:	53                   	push   %rbx
    365a:	48 89 cb             	mov    %rcx,%rbx
    365d:	41 52                	push   %r10
    365f:	4c 8b 54 24 70       	mov    0x70(%rsp),%r10
    3664:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    3669:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    3670:	00 
    3671:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    3678:	00 
    3679:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
    3680:	00 
    3681:	4c 8b b4 24 98 00 00 	mov    0x98(%rsp),%r14
    3688:	00 
    3689:	4c 8b ac 24 a0 00 00 	mov    0xa0(%rsp),%r13
    3690:	00 
    3691:	4c 8b a4 24 a8 00 00 	mov    0xa8(%rsp),%r12
    3698:	00 
    3699:	48 8b ac 24 b0 00 00 	mov    0xb0(%rsp),%rbp
    36a0:	00 
    36a1:	48 85 c0             	test   %rax,%rax
    36a4:	74 05                	je     36ab <efi_pxe_set_packets+0x64>
    36a6:	8a 00                	mov    (%rax),%al
    36a8:	88 43 78             	mov    %al,0x78(%rbx)
    36ab:	4d 85 c0             	test   %r8,%r8
    36ae:	74 06                	je     36b6 <efi_pxe_set_packets+0x6f>
    36b0:	41 8a 00             	mov    (%r8),%al
    36b3:	88 43 79             	mov    %al,0x79(%rbx)
    36b6:	4d 85 c9             	test   %r9,%r9
    36b9:	74 06                	je     36c1 <efi_pxe_set_packets+0x7a>
    36bb:	41 8a 01             	mov    (%r9),%al
    36be:	88 43 7a             	mov    %al,0x7a(%rbx)
    36c1:	4d 85 d2             	test   %r10,%r10
    36c4:	74 06                	je     36cc <efi_pxe_set_packets+0x85>
    36c6:	41 8a 02             	mov    (%r10),%al
    36c9:	88 43 7b             	mov    %al,0x7b(%rbx)
    36cc:	48 85 c9             	test   %rcx,%rcx
    36cf:	74 05                	je     36d6 <efi_pxe_set_packets+0x8f>
    36d1:	8a 01                	mov    (%rcx),%al
    36d3:	88 43 7c             	mov    %al,0x7c(%rbx)
    36d6:	48 85 d2             	test   %rdx,%rdx
    36d9:	74 05                	je     36e0 <efi_pxe_set_packets+0x99>
    36db:	8a 02                	mov    (%rdx),%al
    36dd:	88 43 7d             	mov    %al,0x7d(%rbx)
    36e0:	48 85 f6             	test   %rsi,%rsi
    36e3:	74 11                	je     36f6 <efi_pxe_set_packets+0xaf>
    36e5:	48 8d bb a4 00 00 00 	lea    0xa4(%rbx),%rdi
    36ec:	ba c0 05 00 00       	mov    $0x5c0,%edx
    36f1:	e8 f3 3c 01 00       	call   173e9 <__memcpy>
    36f6:	4d 85 ff             	test   %r15,%r15
    36f9:	74 14                	je     370f <efi_pxe_set_packets+0xc8>
    36fb:	48 8d bb 64 06 00 00 	lea    0x664(%rbx),%rdi
    3702:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3707:	4c 89 fe             	mov    %r15,%rsi
    370a:	e8 da 3c 01 00       	call   173e9 <__memcpy>
    370f:	4d 85 f6             	test   %r14,%r14
    3712:	74 14                	je     3728 <efi_pxe_set_packets+0xe1>
    3714:	48 8d bb 24 0c 00 00 	lea    0xc24(%rbx),%rdi
    371b:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3720:	4c 89 f6             	mov    %r14,%rsi
    3723:	e8 c1 3c 01 00       	call   173e9 <__memcpy>
    3728:	4d 85 ed             	test   %r13,%r13
    372b:	74 14                	je     3741 <efi_pxe_set_packets+0xfa>
    372d:	48 8d bb e4 11 00 00 	lea    0x11e4(%rbx),%rdi
    3734:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3739:	4c 89 ee             	mov    %r13,%rsi
    373c:	e8 a8 3c 01 00       	call   173e9 <__memcpy>
    3741:	4d 85 e4             	test   %r12,%r12
    3744:	74 14                	je     375a <efi_pxe_set_packets+0x113>
    3746:	48 8d bb a4 17 00 00 	lea    0x17a4(%rbx),%rdi
    374d:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3752:	4c 89 e6             	mov    %r12,%rsi
    3755:	e8 8f 3c 01 00       	call   173e9 <__memcpy>
    375a:	48 85 ed             	test   %rbp,%rbp
    375d:	74 14                	je     3773 <efi_pxe_set_packets+0x12c>
    375f:	48 8d bb 64 1d 00 00 	lea    0x1d64(%rbx),%rdi
    3766:	ba c0 05 00 00       	mov    $0x5c0,%edx
    376b:	48 89 ee             	mov    %rbp,%rsi
    376e:	e8 76 3c 01 00       	call   173e9 <__memcpy>
    3773:	5a                   	pop    %rdx
    3774:	31 c0                	xor    %eax,%eax
    3776:	5b                   	pop    %rbx
    3777:	5e                   	pop    %rsi
    3778:	5f                   	pop    %rdi
    3779:	5d                   	pop    %rbp
    377a:	41 5c                	pop    %r12
    377c:	41 5d                	pop    %r13
    377e:	41 5e                	pop    %r14
    3780:	41 5f                	pop    %r15
    3782:	c3                   	ret    

0000000000003783 <efi_apple_get_bsdp_response>:
    3783:	f3 0f 1e fa          	endbr64 
    3787:	48 b8 05 00 00 00 00 	movabs $0x8000000000000005,%rax
    378e:	00 00 80 
    3791:	57                   	push   %rdi
    3792:	56                   	push   %rsi
    3793:	53                   	push   %rbx
    3794:	48 81 3a bf 05 00 00 	cmpq   $0x5bf,(%rdx)
    379b:	48 89 d3             	mov    %rdx,%rbx
    379e:	76 16                	jbe    37b6 <efi_apple_get_bsdp_response+0x33>
    37a0:	4c 89 c7             	mov    %r8,%rdi
    37a3:	48 8d b1 7c ee ff ff 	lea    -0x1184(%rcx),%rsi
    37aa:	ba c0 05 00 00       	mov    $0x5c0,%edx
    37af:	e8 35 3c 01 00       	call   173e9 <__memcpy>
    37b4:	31 c0                	xor    %eax,%eax
    37b6:	48 c7 03 c0 05 00 00 	movq   $0x5c0,(%rbx)
    37bd:	5b                   	pop    %rbx
    37be:	5e                   	pop    %rsi
    37bf:	5f                   	pop    %rdi
    37c0:	c3                   	ret    

00000000000037c1 <efi_pxe_udp_deliver>:
    37c1:	f3 0f 1e fa          	endbr64 
    37c5:	41 57                	push   %r15
    37c7:	41 56                	push   %r14
    37c9:	41 55                	push   %r13
    37cb:	41 54                	push   %r12
    37cd:	55                   	push   %rbp
    37ce:	48 89 f5             	mov    %rsi,%rbp
    37d1:	53                   	push   %rbx
    37d2:	48 89 fb             	mov    %rdi,%rbx
    37d5:	48 83 ec 18          	sub    $0x18,%rsp
    37d9:	4c 8b 6a 10          	mov    0x10(%rdx),%r13
    37dd:	4c 8b 72 18          	mov    0x18(%rdx),%r14
    37e1:	41 0f b7 7d 00       	movzwl 0x0(%r13),%edi
    37e6:	e8 1c 17 01 00       	call   14f07 <tcpip_net_protocol>
    37eb:	48 85 c0             	test   %rax,%rax
    37ee:	75 0b                	jne    37fb <efi_pxe_udp_deliver+0x3a>
    37f0:	41 bc 7d 1f b5 c3    	mov    $0xc3b51f7d,%r12d
    37f6:	e9 9b 00 00 00       	jmp    3896 <efi_pxe_udp_deliver+0xd5>
    37fb:	4c 8b 78 18          	mov    0x18(%rax),%r15
    37ff:	48 89 ef             	mov    %rbp,%rdi
    3802:	41 0f b6 57 1a       	movzbl 0x1a(%r15),%edx
    3807:	48 8d 72 06          	lea    0x6(%rdx),%rsi
    380b:	48 89 14 24          	mov    %rdx,(%rsp)
    380f:	48 01 f6             	add    %rsi,%rsi
    3812:	e8 88 65 00 00       	call   9d9f <iob_ensure_headroom>
    3817:	41 89 c4             	mov    %eax,%r12d
    381a:	85 c0                	test   %eax,%eax
    381c:	75 78                	jne    3896 <efi_pxe_udp_deliver+0xd5>
    381e:	48 8b 14 24          	mov    (%rsp),%rdx
    3822:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    3826:	49 8d 75 08          	lea    0x8(%r13),%rsi
    382a:	48 29 d7             	sub    %rdx,%rdi
    382d:	48 89 d0             	mov    %rdx,%rax
    3830:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3835:	48 89 7d 18          	mov    %rdi,0x18(%rbp)
    3839:	48 f7 d8             	neg    %rax
    383c:	48 89 04 24          	mov    %rax,(%rsp)
    3840:	e8 a4 3b 01 00       	call   173e9 <__memcpy>
    3845:	48 8b 3c 24          	mov    (%rsp),%rdi
    3849:	48 03 7d 18          	add    0x18(%rbp),%rdi
    384d:	49 8d 76 08          	lea    0x8(%r14),%rsi
    3851:	48 89 7d 18          	mov    %rdi,0x18(%rbp)
    3855:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    385a:	e8 8a 3b 01 00       	call   173e9 <__memcpy>
    385f:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    3863:	48 8d b3 f0 29 00 00 	lea    0x29f0(%rbx),%rsi
    386a:	48 89 ef             	mov    %rbp,%rdi
    386d:	48 8d 42 f4          	lea    -0xc(%rdx),%rax
    3871:	48 89 45 18          	mov    %rax,0x18(%rbp)
    3875:	4c 89 7a f4          	mov    %r15,-0xc(%rdx)
    3879:	66 41 8b 46 04       	mov    0x4(%r14),%ax
    387e:	86 c4                	xchg   %al,%ah
    3880:	66 89 42 fc          	mov    %ax,-0x4(%rdx)
    3884:	66 41 8b 45 04       	mov    0x4(%r13),%ax
    3889:	86 c4                	xchg   %al,%ah
    388b:	66 89 42 fe          	mov    %ax,-0x2(%rdx)
    388f:	e8 13 89 00 00       	call   c1a7 <extern_list_add_tail>
    3894:	eb 08                	jmp    389e <efi_pxe_udp_deliver+0xdd>
    3896:	48 89 ef             	mov    %rbp,%rdi
    3899:	e8 c8 64 00 00       	call   9d66 <free_iob>
    389e:	48 83 c4 18          	add    $0x18,%rsp
    38a2:	44 89 e0             	mov    %r12d,%eax
    38a5:	5b                   	pop    %rbx
    38a6:	5d                   	pop    %rbp
    38a7:	41 5c                	pop    %r12
    38a9:	41 5d                	pop    %r13
    38ab:	41 5e                	pop    %r14
    38ad:	41 5f                	pop    %r15
    38af:	c3                   	ret    

00000000000038b0 <efi_pxe_discover>:
    38b0:	f3 0f 1e fa          	endbr64 
    38b4:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    38bb:	00 00 80 
    38be:	c3                   	ret    

00000000000038bf <efi_pxe_fake>:
    38bf:	53                   	push   %rbx
    38c0:	48 89 d3             	mov    %rdx,%rbx
    38c3:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    38ca:	48 8b 15 7f 67 02 00 	mov    0x2677f(%rip),%rdx        # 2a050 <__stack_chk_guard>
    38d1:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
    38d8:	00 
    38d9:	31 d2                	xor    %edx,%edx
    38db:	80 bf ab 00 00 00 00 	cmpb   $0x0,0xab(%rdi)
    38e2:	74 04                	je     38e8 <efi_pxe_fake+0x29>
    38e4:	31 c0                	xor    %eax,%eax
    38e6:	eb 3b                	jmp    3923 <efi_pxe_fake+0x64>
    38e8:	48 89 f0             	mov    %rsi,%rax
    38eb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    38ef:	ba c0 05 00 00       	mov    $0x5c0,%edx
    38f4:	48 89 de             	mov    %rbx,%rsi
    38f7:	ff d0                	call   *%rax
    38f9:	85 c0                	test   %eax,%eax
    38fb:	75 e7                	jne    38e4 <efi_pxe_fake+0x25>
    38fd:	48 89 e7             	mov    %rsp,%rdi
    3900:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3905:	48 89 de             	mov    %rbx,%rsi
    3908:	e8 31 72 01 00       	call   1ab3e <dhcppkt_init>
    390d:	8b 44 24 20          	mov    0x20(%rsp),%eax
    3911:	05 f0 00 00 00       	add    $0xf0,%eax
    3916:	3d bf 05 00 00       	cmp    $0x5bf,%eax
    391b:	77 04                	ja     3921 <efi_pxe_fake+0x62>
    391d:	c6 04 03 ff          	movb   $0xff,(%rbx,%rax,1)
    3921:	b0 01                	mov    $0x1,%al
    3923:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    392a:	00 
    392b:	48 2b 15 1e 67 02 00 	sub    0x2671e(%rip),%rdx        # 2a050 <__stack_chk_guard>
    3932:	74 05                	je     3939 <efi_pxe_fake+0x7a>
    3934:	e8 27 f1 ff ff       	call   2a60 <__stack_chk_fail>
    3939:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    3940:	5b                   	pop    %rbx
    3941:	c3                   	ret    

0000000000003942 <efi_pxe_fake_all>:
    3942:	53                   	push   %rbx
    3943:	48 8d 97 dc 00 00 00 	lea    0xdc(%rdi),%rdx
    394a:	48 8d 35 a8 33 00 00 	lea    0x33a8(%rip),%rsi        # 6cf9 <create_fakedhcpdiscover>
    3951:	48 89 fb             	mov    %rdi,%rbx
    3954:	e8 66 ff ff ff       	call   38bf <efi_pxe_fake>
    3959:	48 8d 93 9c 06 00 00 	lea    0x69c(%rbx),%rdx
    3960:	48 89 df             	mov    %rbx,%rdi
    3963:	48 8d 35 ec 33 00 00 	lea    0x33ec(%rip),%rsi        # 6d56 <create_fakedhcpack>
    396a:	88 83 b0 00 00 00    	mov    %al,0xb0(%rbx)
    3970:	e8 4a ff ff ff       	call   38bf <efi_pxe_fake>
    3975:	48 8d 93 dc 17 00 00 	lea    0x17dc(%rbx),%rdx
    397c:	48 89 df             	mov    %rbx,%rdi
    397f:	48 8d 35 5a 34 00 00 	lea    0x345a(%rip),%rsi        # 6de0 <create_fakepxebsack>
    3986:	88 83 b1 00 00 00    	mov    %al,0xb1(%rbx)
    398c:	e8 2e ff ff ff       	call   38bf <efi_pxe_fake>
    3991:	88 83 b4 00 00 00    	mov    %al,0xb4(%rbx)
    3997:	5b                   	pop    %rbx
    3998:	c3                   	ret    

0000000000003999 <efi_pxe_start>:
    3999:	f3 0f 1e fa          	endbr64 
    399d:	41 55                	push   %r13
    399f:	4c 8d 69 70          	lea    0x70(%rcx),%r13
    39a3:	41 54                	push   %r12
    39a5:	41 89 d4             	mov    %edx,%r12d
    39a8:	55                   	push   %rbp
    39a9:	48 8d 69 c8          	lea    -0x38(%rcx),%rbp
    39ad:	57                   	push   %rdi
    39ae:	bf 02 00 00 00       	mov    $0x2,%edi
    39b3:	56                   	push   %rsi
    39b4:	53                   	push   %rbx
    39b5:	48 89 cb             	mov    %rcx,%rbx
    39b8:	41 50                	push   %r8
    39ba:	e8 48 15 01 00       	call   14f07 <tcpip_net_protocol>
    39bf:	41 80 fc 01          	cmp    $0x1,%r12b
    39c3:	4c 89 ef             	mov    %r13,%rdi
    39c6:	b9 b8 28 00 00       	mov    $0x28b8,%ecx
    39cb:	19 d2                	sbb    %edx,%edx
    39cd:	49 89 c0             	mov    %rax,%r8
    39d0:	31 c0                	xor    %eax,%eax
    39d2:	83 c2 02             	add    $0x2,%edx
    39d5:	f3 aa                	rep stos %al,%es:(%rdi)
    39d7:	4d 85 c0             	test   %r8,%r8
    39da:	c6 43 76 01          	movb   $0x1,0x76(%rbx)
    39de:	0f b7 fa             	movzwl %dx,%edi
    39e1:	0f 95 c0             	setne  %al
    39e4:	c6 83 24 23 00 00 0f 	movb   $0xf,0x2324(%rbx)
    39eb:	66 c7 83 81 00 00 00 	movw   $0x10,0x81(%rbx)
    39f2:	10 00 
    39f4:	88 43 72             	mov    %al,0x72(%rbx)
    39f7:	88 43 71             	mov    %al,0x71(%rbx)
    39fa:	e8 08 15 01 00       	call   14f07 <tcpip_net_protocol>
    39ff:	48 89 c2             	mov    %rax,%rdx
    3a02:	48 89 83 38 29 00 00 	mov    %rax,0x2938(%rbx)
    3a09:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    3a10:	00 00 80 
    3a13:	48 85 d2             	test   %rdx,%rdx
    3a16:	74 2d                	je     3a45 <efi_pxe_start+0xac>
    3a18:	48 8b 42 18          	mov    0x18(%rdx),%rax
    3a1c:	44 88 63 73          	mov    %r12b,0x73(%rbx)
    3a20:	48 89 ef             	mov    %rbp,%rdi
    3a23:	48 89 83 40 29 00 00 	mov    %rax,0x2940(%rbx)
    3a2a:	e8 28 f9 ff ff       	call   3357 <efi_pxe_ip>
    3a2f:	85 c0                	test   %eax,%eax
    3a31:	74 04                	je     3a37 <efi_pxe_start+0x9e>
    3a33:	48 98                	cltq   
    3a35:	eb 0e                	jmp    3a45 <efi_pxe_start+0xac>
    3a37:	48 89 ef             	mov    %rbp,%rdi
    3a3a:	e8 03 ff ff ff       	call   3942 <efi_pxe_fake_all>
    3a3f:	c6 43 70 01          	movb   $0x1,0x70(%rbx)
    3a43:	31 c0                	xor    %eax,%eax
    3a45:	5a                   	pop    %rdx
    3a46:	5b                   	pop    %rbx
    3a47:	5e                   	pop    %rsi
    3a48:	5f                   	pop    %rdi
    3a49:	5d                   	pop    %rbp
    3a4a:	41 5c                	pop    %r12
    3a4c:	41 5d                	pop    %r13
    3a4e:	c3                   	ret    

0000000000003a4f <efi_pxe_udp_open>:
    3a4f:	48 83 ec 18          	sub    $0x18,%rsp
    3a53:	4c 8d 87 00 2a 00 00 	lea    0x2a00(%rdi),%r8
    3a5a:	4c 3b 87 00 2a 00 00 	cmp    0x2a00(%rdi),%r8
    3a61:	74 0c                	je     3a6f <efi_pxe_udp_open+0x20>
    3a63:	4c 89 c7             	mov    %r8,%rdi
    3a66:	e8 f5 bf 00 00       	call   fa60 <process_del>
    3a6b:	31 c0                	xor    %eax,%eax
    3a6d:	eb 22                	jmp    3a91 <efi_pxe_udp_open+0x42>
    3a6f:	48 81 c7 d0 29 00 00 	add    $0x29d0,%rdi
    3a76:	e8 54 28 01 00       	call   162cf <udp_open_promisc>
    3a7b:	85 c0                	test   %eax,%eax
    3a7d:	75 12                	jne    3a91 <efi_pxe_udp_open+0x42>
    3a7f:	bf 01 00 00 00       	mov    $0x1,%edi
    3a84:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3a88:	e8 1a 20 00 00       	call   5aa7 <efi_snp_add_claim>
    3a8d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3a91:	48 83 c4 18          	add    $0x18,%rsp
    3a95:	c3                   	ret    

0000000000003a96 <efi_pxe_udp_read>:
    3a96:	f3 0f 1e fa          	endbr64 
    3a9a:	41 57                	push   %r15
    3a9c:	41 56                	push   %r14
    3a9e:	41 55                	push   %r13
    3aa0:	41 54                	push   %r12
    3aa2:	55                   	push   %rbp
    3aa3:	48 89 cd             	mov    %rcx,%rbp
    3aa6:	57                   	push   %rdi
    3aa7:	48 8d 79 c8          	lea    -0x38(%rcx),%rdi
    3aab:	56                   	push   %rsi
    3aac:	53                   	push   %rbx
    3aad:	48 83 ec 38          	sub    $0x38,%rsp
    3ab1:	89 54 24 08          	mov    %edx,0x8(%rsp)
    3ab5:	4c 89 84 24 90 00 00 	mov    %r8,0x90(%rsp)
    3abc:	00 
    3abd:	4c 89 8c 24 98 00 00 	mov    %r9,0x98(%rsp)
    3ac4:	00 
    3ac5:	e8 85 ff ff ff       	call   3a4f <efi_pxe_udp_open>
    3aca:	89 c3                	mov    %eax,%ebx
    3acc:	85 c0                	test   %eax,%eax
    3ace:	0f 85 12 03 00 00    	jne    3de6 <efi_pxe_udp_read+0x350>
    3ad4:	4c 8d ad b8 29 00 00 	lea    0x29b8(%rbp),%r13
    3adb:	4c 3b ad b8 29 00 00 	cmp    0x29b8(%rbp),%r13
    3ae2:	75 05                	jne    3ae9 <efi_pxe_udp_read+0x53>
    3ae4:	e8 9f bf 00 00       	call   fa88 <step>
    3ae9:	4c 8b b5 b8 29 00 00 	mov    0x29b8(%rbp),%r14
    3af0:	4d 85 f6             	test   %r14,%r14
    3af3:	74 05                	je     3afa <efi_pxe_udp_read+0x64>
    3af5:	4d 39 f5             	cmp    %r14,%r13
    3af8:	75 0a                	jne    3b04 <efi_pxe_udp_read+0x6e>
    3afa:	bb 6e 1f b5 b3       	mov    $0xb3b51f6e,%ebx
    3aff:	e9 d6 02 00 00       	jmp    3dda <efi_pxe_udp_read+0x344>
    3b04:	49 8b 16             	mov    (%r14),%rdx
    3b07:	49 8b 46 08          	mov    0x8(%r14),%rax
    3b0b:	4d 8b 66 18          	mov    0x18(%r14),%r12
    3b0f:	4c 8b 8d 40 29 00 00 	mov    0x2940(%rbp),%r9
    3b16:	48 89 42 08          	mov    %rax,0x8(%rdx)
    3b1a:	48 89 10             	mov    %rdx,(%rax)
    3b1d:	49 8b 04 24          	mov    (%r12),%rax
    3b21:	4d 8d 7c 24 0c       	lea    0xc(%r12),%r15
    3b26:	44 0f b6 68 1a       	movzbl 0x1a(%rax),%r13d
    3b2b:	4b 8d 0c 2f          	lea    (%r15,%r13,1),%rcx
    3b2f:	4a 8d 14 29          	lea    (%rcx,%r13,1),%rdx
    3b33:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    3b38:	49 89 56 18          	mov    %rdx,0x18(%r14)
    3b3c:	4c 39 c8             	cmp    %r9,%rax
    3b3f:	74 02                	je     3b43 <efi_pxe_udp_read+0xad>
    3b41:	eb 25                	jmp    3b68 <efi_pxe_udp_read+0xd2>
    3b43:	f6 44 24 08 08       	testb  $0x8,0x8(%rsp)
    3b48:	75 28                	jne    3b72 <efi_pxe_udp_read+0xdc>
    3b4a:	48 83 bc 24 98 00 00 	cmpq   $0x0,0x98(%rsp)
    3b51:	00 00 
    3b53:	74 13                	je     3b68 <efi_pxe_udp_read+0xd2>
    3b55:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    3b5c:	00 
    3b5d:	66 41 8b 4c 24 08    	mov    0x8(%r12),%cx
    3b63:	66 39 08             	cmp    %cx,(%rax)
    3b66:	74 0a                	je     3b72 <efi_pxe_udp_read+0xdc>
    3b68:	bb 6e 1f b5 b3       	mov    $0xb3b51f6e,%ebx
    3b6d:	e9 60 02 00 00       	jmp    3dd2 <efi_pxe_udp_read+0x33c>
    3b72:	f6 44 24 08 02       	testb  $0x2,0x8(%rsp)
    3b77:	75 20                	jne    3b99 <efi_pxe_udp_read+0x103>
    3b79:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
    3b80:	00 00 
    3b82:	74 13                	je     3b97 <efi_pxe_udp_read+0x101>
    3b84:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    3b8b:	00 
    3b8c:	66 41 8b 4c 24 0a    	mov    0xa(%r12),%cx
    3b92:	66 39 08             	cmp    %cx,(%rax)
    3b95:	74 02                	je     3b99 <efi_pxe_udp_read+0x103>
    3b97:	eb cf                	jmp    3b68 <efi_pxe_udp_read+0xd2>
    3b99:	f6 44 24 08 01       	testb  $0x1,0x8(%rsp)
    3b9e:	75 30                	jne    3bd0 <efi_pxe_udp_read+0x13a>
    3ba0:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
    3ba7:	00 00 
    3ba9:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    3bae:	74 1e                	je     3bce <efi_pxe_udp_read+0x138>
    3bb0:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3bb5:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
    3bbc:	00 
    3bbd:	4c 89 ea             	mov    %r13,%rdx
    3bc0:	e8 6b fd 00 00       	call   13930 <memcmp>
    3bc5:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    3bca:	85 c0                	test   %eax,%eax
    3bcc:	74 02                	je     3bd0 <efi_pxe_udp_read+0x13a>
    3bce:	eb 98                	jmp    3b68 <efi_pxe_udp_read+0xd2>
    3bd0:	f6 44 24 08 10       	testb  $0x10,0x8(%rsp)
    3bd5:	0f 84 be 00 00 00    	je     3c99 <efi_pxe_udp_read+0x203>
    3bdb:	8a 85 24 23 00 00    	mov    0x2324(%rbp),%al
    3be1:	a8 04                	test   $0x4,%al
    3be3:	0f 85 de 00 00 00    	jne    3cc7 <efi_pxe_udp_read+0x231>
    3be9:	a8 08                	test   $0x8,%al
    3beb:	74 25                	je     3c12 <efi_pxe_udp_read+0x17c>
    3bed:	80 7d 73 00          	cmpb   $0x0,0x73(%rbp)
    3bf1:	74 08                	je     3bfb <efi_pxe_udp_read+0x165>
    3bf3:	41 80 7c 24 0c ff    	cmpb   $0xff,0xc(%r12)
    3bf9:	eb 11                	jmp    3c0c <efi_pxe_udp_read+0x176>
    3bfb:	41 8b 54 24 0c       	mov    0xc(%r12),%edx
    3c00:	81 e2 f0 00 00 00    	and    $0xf0,%edx
    3c06:	81 fa e0 00 00 00    	cmp    $0xe0,%edx
    3c0c:	0f 84 b5 00 00 00    	je     3cc7 <efi_pxe_udp_read+0x231>
    3c12:	a8 02                	test   $0x2,%al
    3c14:	74 12                	je     3c28 <efi_pxe_udp_read+0x192>
    3c16:	80 7d 73 00          	cmpb   $0x0,0x73(%rbp)
    3c1a:	75 0c                	jne    3c28 <efi_pxe_udp_read+0x192>
    3c1c:	41 83 7c 24 0c ff    	cmpl   $0xffffffff,0xc(%r12)
    3c22:	0f 84 9f 00 00 00    	je     3cc7 <efi_pxe_udp_read+0x231>
    3c28:	41 0f b6 49 1a       	movzbl 0x1a(%r9),%ecx
    3c2d:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    3c32:	a8 01                	test   $0x1,%al
    3c34:	74 16                	je     3c4c <efi_pxe_udp_read+0x1b6>
    3c36:	48 8d b5 84 00 00 00 	lea    0x84(%rbp),%rsi
    3c3d:	48 89 ca             	mov    %rcx,%rdx
    3c40:	4c 89 ff             	mov    %r15,%rdi
    3c43:	e8 e8 fc 00 00       	call   13930 <memcmp>
    3c48:	85 c0                	test   %eax,%eax
    3c4a:	74 7b                	je     3cc7 <efi_pxe_udp_read+0x231>
    3c4c:	0f b6 85 25 23 00 00 	movzbl 0x2325(%rbp),%eax
    3c53:	4c 8d 95 28 23 00 00 	lea    0x2328(%rbp),%r10
    3c5a:	45 31 c9             	xor    %r9d,%r9d
    3c5d:	89 44 24 18          	mov    %eax,0x18(%rsp)
    3c61:	44 3b 4c 24 18       	cmp    0x18(%rsp),%r9d
    3c66:	73 5a                	jae    3cc2 <efi_pxe_udp_read+0x22c>
    3c68:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3c6d:	4c 89 d6             	mov    %r10,%rsi
    3c70:	4c 89 ff             	mov    %r15,%rdi
    3c73:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    3c78:	44 89 4c 24 2c       	mov    %r9d,0x2c(%rsp)
    3c7d:	e8 ae fc 00 00       	call   13930 <memcmp>
    3c82:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    3c87:	49 83 c2 10          	add    $0x10,%r10
    3c8b:	85 c0                	test   %eax,%eax
    3c8d:	74 38                	je     3cc7 <efi_pxe_udp_read+0x231>
    3c8f:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
    3c94:	41 ff c1             	inc    %r9d
    3c97:	eb c8                	jmp    3c61 <efi_pxe_udp_read+0x1cb>
    3c99:	f6 44 24 08 04       	testb  $0x4,0x8(%rsp)
    3c9e:	75 27                	jne    3cc7 <efi_pxe_udp_read+0x231>
    3ca0:	48 83 bc 24 90 00 00 	cmpq   $0x0,0x90(%rsp)
    3ca7:	00 00 
    3ca9:	74 17                	je     3cc2 <efi_pxe_udp_read+0x22c>
    3cab:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    3cb2:	00 
    3cb3:	4c 89 ea             	mov    %r13,%rdx
    3cb6:	4c 89 fe             	mov    %r15,%rsi
    3cb9:	e8 72 fc 00 00       	call   13930 <memcmp>
    3cbe:	85 c0                	test   %eax,%eax
    3cc0:	74 10                	je     3cd2 <efi_pxe_udp_read+0x23c>
    3cc2:	e9 a1 fe ff ff       	jmp    3b68 <efi_pxe_udp_read+0xd2>
    3cc7:	48 83 bc 24 90 00 00 	cmpq   $0x0,0x90(%rsp)
    3cce:	00 00 
    3cd0:	74 13                	je     3ce5 <efi_pxe_udp_read+0x24f>
    3cd2:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    3cd9:	00 
    3cda:	4c 89 ea             	mov    %r13,%rdx
    3cdd:	4c 89 fe             	mov    %r15,%rsi
    3ce0:	e8 04 37 01 00       	call   173e9 <__memcpy>
    3ce5:	48 83 bc 24 98 00 00 	cmpq   $0x0,0x98(%rsp)
    3cec:	00 00 
    3cee:	74 11                	je     3d01 <efi_pxe_udp_read+0x26b>
    3cf0:	66 41 8b 44 24 08    	mov    0x8(%r12),%ax
    3cf6:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    3cfd:	00 
    3cfe:	66 89 01             	mov    %ax,(%rcx)
    3d01:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
    3d08:	00 00 
    3d0a:	74 15                	je     3d21 <efi_pxe_udp_read+0x28b>
    3d0c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3d11:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
    3d18:	00 
    3d19:	4c 89 ea             	mov    %r13,%rdx
    3d1c:	e8 c8 36 01 00       	call   173e9 <__memcpy>
    3d21:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
    3d28:	00 00 
    3d2a:	74 11                	je     3d3d <efi_pxe_udp_read+0x2a7>
    3d2c:	66 41 8b 44 24 0a    	mov    0xa(%r12),%ax
    3d32:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
    3d39:	00 
    3d3a:	66 89 01             	mov    %ax,(%rcx)
    3d3d:	48 83 bc 24 b0 00 00 	cmpq   $0x0,0xb0(%rsp)
    3d44:	00 00 
    3d46:	74 3c                	je     3d84 <efi_pxe_udp_read+0x2ee>
    3d48:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    3d4f:	00 
    3d50:	49 8b 76 18          	mov    0x18(%r14),%rsi
    3d54:	4d 8b 66 20          	mov    0x20(%r14),%r12
    3d58:	48 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%rdi
    3d5f:	00 
    3d60:	48 8b 00             	mov    (%rax),%rax
    3d63:	49 29 f4             	sub    %rsi,%r12
    3d66:	49 39 c4             	cmp    %rax,%r12
    3d69:	4c 0f 47 e0          	cmova  %rax,%r12
    3d6d:	4c 89 e2             	mov    %r12,%rdx
    3d70:	e8 74 36 01 00       	call   173e9 <__memcpy>
    3d75:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    3d7c:	00 
    3d7d:	4d 01 66 18          	add    %r12,0x18(%r14)
    3d81:	4c 89 20             	mov    %r12,(%rax)
    3d84:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
    3d8b:	00 
    3d8c:	49 8b 76 18          	mov    0x18(%r14),%rsi
    3d90:	4d 8b 66 20          	mov    0x20(%r14),%r12
    3d94:	48 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%rdi
    3d9b:	00 
    3d9c:	48 8b 00             	mov    (%rax),%rax
    3d9f:	49 29 f4             	sub    %rsi,%r12
    3da2:	49 39 c4             	cmp    %rax,%r12
    3da5:	4c 0f 47 e0          	cmova  %rax,%r12
    3da9:	4c 89 e2             	mov    %r12,%rdx
    3dac:	e8 38 36 01 00       	call   173e9 <__memcpy>
    3db1:	49 8b 46 18          	mov    0x18(%r14),%rax
    3db5:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
    3dbc:	00 
    3dbd:	4c 01 e0             	add    %r12,%rax
    3dc0:	49 89 46 18          	mov    %rax,0x18(%r14)
    3dc4:	4c 89 27             	mov    %r12,(%rdi)
    3dc7:	49 39 46 20          	cmp    %rax,0x20(%r14)
    3dcb:	74 05                	je     3dd2 <efi_pxe_udp_read+0x33c>
    3dcd:	bb 7b 1f b5 b9       	mov    $0xb9b51f7b,%ebx
    3dd2:	4c 89 f7             	mov    %r14,%rdi
    3dd5:	e8 8c 5f 00 00       	call   9d66 <free_iob>
    3dda:	48 8d bd c8 29 00 00 	lea    0x29c8(%rbp),%rdi
    3de1:	e8 27 bc 00 00       	call   fa0d <process_add>
    3de6:	f7 db                	neg    %ebx
    3de8:	ba 01 00 00 00       	mov    $0x1,%edx
    3ded:	48 83 c4 38          	add    $0x38,%rsp
    3df1:	48 89 d8             	mov    %rbx,%rax
    3df4:	48 c1 e2 3f          	shl    $0x3f,%rdx
    3df8:	83 e3 7f             	and    $0x7f,%ebx
    3dfb:	48 c1 e0 38          	shl    $0x38,%rax
    3dff:	48 21 d0             	and    %rdx,%rax
    3e02:	48 09 d8             	or     %rbx,%rax
    3e05:	5b                   	pop    %rbx
    3e06:	5e                   	pop    %rsi
    3e07:	5f                   	pop    %rdi
    3e08:	5d                   	pop    %rbp
    3e09:	41 5c                	pop    %r12
    3e0b:	41 5d                	pop    %r13
    3e0d:	41 5e                	pop    %r14
    3e0f:	41 5f                	pop    %r15
    3e11:	c3                   	ret    

0000000000003e12 <efi_pxe_udp_write>:
    3e12:	f3 0f 1e fa          	endbr64 
    3e16:	41 57                	push   %r15
    3e18:	4c 8d 79 c8          	lea    -0x38(%rcx),%r15
    3e1c:	41 56                	push   %r14
    3e1e:	41 55                	push   %r13
    3e20:	4d 89 cd             	mov    %r9,%r13
    3e23:	41 54                	push   %r12
    3e25:	55                   	push   %rbp
    3e26:	57                   	push   %rdi
    3e27:	4c 89 ff             	mov    %r15,%rdi
    3e2a:	56                   	push   %rsi
    3e2b:	53                   	push   %rbx
    3e2c:	48 89 cb             	mov    %rcx,%rbx
    3e2f:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    3e36:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
    3e3d:	00 
    3e3e:	4c 8b 94 24 18 01 00 	mov    0x118(%rsp),%r10
    3e45:	00 
    3e46:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    3e4a:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    3e4f:	4c 8b a4 24 20 01 00 	mov    0x120(%rsp),%r12
    3e56:	00 
    3e57:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3e5c:	48 8b 84 24 38 01 00 	mov    0x138(%rsp),%rax
    3e63:	00 
    3e64:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    3e69:	48 8b ac 24 28 01 00 	mov    0x128(%rsp),%rbp
    3e70:	00 
    3e71:	48 89 04 24          	mov    %rax,(%rsp)
    3e75:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
    3e7c:	00 
    3e7d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3e82:	48 8b 05 c7 61 02 00 	mov    0x261c7(%rip),%rax        # 2a050 <__stack_chk_guard>
    3e89:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    3e90:	00 
    3e91:	31 c0                	xor    %eax,%eax
    3e93:	e8 b7 fb ff ff       	call   3a4f <efi_pxe_udp_open>
    3e98:	41 89 c6             	mov    %eax,%r14d
    3e9b:	85 c0                	test   %eax,%eax
    3e9d:	0f 85 30 01 00 00    	jne    3fd3 <efi_pxe_udp_write+0x1c1>
    3ea3:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    3ea8:	4c 8d 74 24 58       	lea    0x58(%rsp),%r14
    3ead:	4c 89 ff             	mov    %r15,%rdi
    3eb0:	4c 89 f2             	mov    %r14,%rdx
    3eb3:	e8 b5 f5 ff ff       	call   346d <efi_pxe_ip_sockaddr>
    3eb8:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    3ebd:	66 41 8b 45 00       	mov    0x0(%r13),%ax
    3ec2:	86 c4                	xchg   %al,%ah
    3ec4:	66 89 44 24 5c       	mov    %ax,0x5c(%rsp)
    3ec9:	4d 85 d2             	test   %r10,%r10
    3ecc:	75 07                	jne    3ed5 <efi_pxe_udp_write+0xc3>
    3ece:	4c 8d 93 84 00 00 00 	lea    0x84(%rbx),%r10
    3ed5:	4c 8d 6c 24 78       	lea    0x78(%rsp),%r13
    3eda:	4c 89 d6             	mov    %r10,%rsi
    3edd:	4c 89 ff             	mov    %r15,%rdi
    3ee0:	4c 89 ea             	mov    %r13,%rdx
    3ee3:	e8 85 f5 ff ff       	call   346d <efi_pxe_ip_sockaddr>
    3ee8:	4d 85 e4             	test   %r12,%r12
    3eeb:	74 15                	je     3f02 <efi_pxe_udp_write+0xf0>
    3eed:	f6 44 24 0c 02       	testb  $0x2,0xc(%rsp)
    3ef2:	75 0e                	jne    3f02 <efi_pxe_udp_write+0xf0>
    3ef4:	66 41 8b 04 24       	mov    (%r12),%ax
    3ef9:	86 c4                	xchg   %al,%ah
    3efb:	66 89 44 24 7c       	mov    %ax,0x7c(%rsp)
    3f00:	eb 19                	jmp    3f1b <efi_pxe_udp_write+0x109>
    3f02:	e8 16 bc 00 00       	call   fb1d <random>
    3f07:	83 c8 04             	or     $0x4,%eax
    3f0a:	66 89 44 24 7c       	mov    %ax,0x7c(%rsp)
    3f0f:	4d 85 e4             	test   %r12,%r12
    3f12:	74 07                	je     3f1b <efi_pxe_udp_write+0x109>
    3f14:	86 c4                	xchg   %al,%ah
    3f16:	66 41 89 04 24       	mov    %ax,(%r12)
    3f1b:	48 8b 04 24          	mov    (%rsp),%rax
    3f1f:	48 8b 30             	mov    (%rax),%rsi
    3f22:	31 c0                	xor    %eax,%eax
    3f24:	48 85 ed             	test   %rbp,%rbp
    3f27:	74 04                	je     3f2d <efi_pxe_udp_write+0x11b>
    3f29:	48 8b 45 00          	mov    0x0(%rbp),%rax
    3f2d:	4c 8d bb 98 29 00 00 	lea    0x2998(%rbx),%r15
    3f34:	48 01 c6             	add    %rax,%rsi
    3f37:	4c 89 ff             	mov    %r15,%rdi
    3f3a:	e8 38 37 01 00       	call   17677 <xfer_alloc_iob>
    3f3f:	49 89 c4             	mov    %rax,%r12
    3f42:	48 85 c0             	test   %rax,%rax
    3f45:	75 08                	jne    3f4f <efi_pxe_udp_write+0x13d>
    3f47:	41 be 77 1f b5 ce    	mov    $0xceb51f77,%r14d
    3f4d:	eb 78                	jmp    3fc7 <efi_pxe_udp_write+0x1b5>
    3f4f:	48 85 ed             	test   %rbp,%rbp
    3f52:	74 1b                	je     3f6f <efi_pxe_udp_write+0x15d>
    3f54:	48 8b 78 20          	mov    0x20(%rax),%rdi
    3f58:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    3f5c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3f61:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    3f65:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    3f6a:	e8 7a 34 01 00       	call   173e9 <__memcpy>
    3f6f:	48 8b 04 24          	mov    (%rsp),%rax
    3f73:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    3f78:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    3f7d:	48 8b 10             	mov    (%rax),%rdx
    3f80:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    3f84:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    3f89:	e8 5b 34 01 00       	call   173e9 <__memcpy>
    3f8e:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
    3f93:	b9 28 00 00 00       	mov    $0x28,%ecx
    3f98:	31 c0                	xor    %eax,%eax
    3f9a:	48 89 d7             	mov    %rdx,%rdi
    3f9d:	f3 aa                	rep stos %al,%es:(%rdi)
    3f9f:	48 8b 43 d8          	mov    -0x28(%rbx),%rax
    3fa3:	4c 89 ff             	mov    %r15,%rdi
    3fa6:	4c 89 e6             	mov    %r12,%rsi
    3fa9:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
    3fae:	4c 89 6c 24 40       	mov    %r13,0x40(%rsp)
    3fb3:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    3fb8:	e8 38 37 01 00       	call   176f5 <xfer_deliver>
    3fbd:	31 ff                	xor    %edi,%edi
    3fbf:	41 89 c6             	mov    %eax,%r14d
    3fc2:	e8 9f 5d 00 00       	call   9d66 <free_iob>
    3fc7:	48 8d bb c8 29 00 00 	lea    0x29c8(%rbx),%rdi
    3fce:	e8 3a ba 00 00       	call   fa0d <process_add>
    3fd3:	41 f7 de             	neg    %r14d
    3fd6:	ba 01 00 00 00       	mov    $0x1,%edx
    3fdb:	4c 89 f0             	mov    %r14,%rax
    3fde:	48 c1 e2 3f          	shl    $0x3f,%rdx
    3fe2:	41 83 e6 7f          	and    $0x7f,%r14d
    3fe6:	48 c1 e0 38          	shl    $0x38,%rax
    3fea:	48 21 d0             	and    %rdx,%rax
    3fed:	4c 09 f0             	or     %r14,%rax
    3ff0:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    3ff7:	00 
    3ff8:	48 2b 15 51 60 02 00 	sub    0x26051(%rip),%rdx        # 2a050 <__stack_chk_guard>
    3fff:	74 05                	je     4006 <efi_pxe_udp_write+0x1f4>
    4001:	e8 5a ea ff ff       	call   2a60 <__stack_chk_fail>
    4006:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    400d:	5b                   	pop    %rbx
    400e:	5e                   	pop    %rsi
    400f:	5f                   	pop    %rdi
    4010:	5d                   	pop    %rbp
    4011:	41 5c                	pop    %r12
    4013:	41 5d                	pop    %r13
    4015:	41 5e                	pop    %r14
    4017:	41 5f                	pop    %r15
    4019:	c3                   	ret    

000000000000401a <efi_pxe_udp_close>:
    401a:	f3 0f 1e fa          	endbr64 
    401e:	41 54                	push   %r12
    4020:	4c 8d a7 00 2a 00 00 	lea    0x2a00(%rdi),%r12
    4027:	55                   	push   %rbp
    4028:	89 f5                	mov    %esi,%ebp
    402a:	53                   	push   %rbx
    402b:	48 89 fb             	mov    %rdi,%rbx
    402e:	4c 39 a7 00 2a 00 00 	cmp    %r12,0x2a00(%rdi)
    4035:	74 08                	je     403f <efi_pxe_udp_close+0x25>
    4037:	83 cf ff             	or     $0xffffffff,%edi
    403a:	e8 68 1a 00 00       	call   5aa7 <efi_snp_add_claim>
    403f:	4c 89 e7             	mov    %r12,%rdi
    4042:	e8 19 ba 00 00       	call   fa60 <process_del>
    4047:	48 8d bb d0 29 00 00 	lea    0x29d0(%rbx),%rdi
    404e:	89 ee                	mov    %ebp,%esi
    4050:	48 81 c3 f0 29 00 00 	add    $0x29f0,%rbx
    4057:	e8 bc 58 00 00       	call   9918 <intf_restart>
    405c:	48 8b 3b             	mov    (%rbx),%rdi
    405f:	48 8b 2f             	mov    (%rdi),%rbp
    4062:	48 39 df             	cmp    %rbx,%rdi
    4065:	74 1c                	je     4083 <efi_pxe_udp_close+0x69>
    4067:	48 8b 17             	mov    (%rdi),%rdx
    406a:	48 8b 47 08          	mov    0x8(%rdi),%rax
    406e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    4072:	48 89 10             	mov    %rdx,(%rax)
    4075:	e8 ec 5c 00 00       	call   9d66 <free_iob>
    407a:	48 89 ef             	mov    %rbp,%rdi
    407d:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
    4081:	eb df                	jmp    4062 <efi_pxe_udp_close+0x48>
    4083:	5b                   	pop    %rbx
    4084:	5d                   	pop    %rbp
    4085:	41 5c                	pop    %r12
    4087:	c3                   	ret    

0000000000004088 <efi_pxe_udp_scheduled_close>:
    4088:	f3 0f 1e fa          	endbr64 
    408c:	31 f6                	xor    %esi,%esi
    408e:	e9 87 ff ff ff       	jmp    401a <efi_pxe_udp_close>

0000000000004093 <efi_pxe_stop>:
    4093:	f3 0f 1e fa          	endbr64 
    4097:	55                   	push   %rbp
    4098:	48 8d 69 c8          	lea    -0x38(%rcx),%rbp
    409c:	57                   	push   %rdi
    409d:	48 89 ef             	mov    %rbp,%rdi
    40a0:	56                   	push   %rsi
    40a1:	31 f6                	xor    %esi,%esi
    40a3:	c6 41 70 00          	movb   $0x0,0x70(%rcx)
    40a7:	e8 51 f3 ff ff       	call   33fd <efi_pxe_tftp_close>
    40ac:	48 89 ef             	mov    %rbp,%rdi
    40af:	31 f6                	xor    %esi,%esi
    40b1:	e8 64 ff ff ff       	call   401a <efi_pxe_udp_close>
    40b6:	5e                   	pop    %rsi
    40b7:	31 c0                	xor    %eax,%eax
    40b9:	5f                   	pop    %rdi
    40ba:	5d                   	pop    %rbp
    40bb:	c3                   	ret    

00000000000040bc <efi_pxe_dhcp>:
    40bc:	f3 0f 1e fa          	endbr64 
    40c0:	41 54                	push   %r12
    40c2:	4c 8b 61 d8          	mov    -0x28(%rcx),%r12
    40c6:	55                   	push   %rbp
    40c7:	48 89 cd             	mov    %rcx,%rbp
    40ca:	57                   	push   %rdi
    40cb:	bf 01 00 00 00       	mov    $0x1,%edi
    40d0:	56                   	push   %rsi
    40d1:	53                   	push   %rbx
    40d2:	e8 d0 19 00 00       	call   5aa7 <efi_snp_add_claim>
    40d7:	4c 89 e7             	mov    %r12,%rdi
    40da:	e8 56 a4 00 00       	call   e535 <netdev_configure_all>
    40df:	89 c3                	mov    %eax,%ebx
    40e1:	85 c0                	test   %eax,%eax
    40e3:	75 40                	jne    4125 <efi_pxe_dhcp+0x69>
    40e5:	4c 89 e7             	mov    %r12,%rdi
    40e8:	e8 96 a4 00 00       	call   e583 <netdev_configuration_in_progress>
    40ed:	85 c0                	test   %eax,%eax
    40ef:	74 07                	je     40f8 <efi_pxe_dhcp+0x3c>
    40f1:	e8 92 b9 00 00       	call   fa88 <step>
    40f6:	eb ed                	jmp    40e5 <efi_pxe_dhcp+0x29>
    40f8:	4c 89 e7             	mov    %r12,%rdi
    40fb:	e8 c5 a4 00 00       	call   e5c5 <netdev_configuration_ok>
    4100:	85 c0                	test   %eax,%eax
    4102:	75 07                	jne    410b <efi_pxe_dhcp+0x4f>
    4104:	bb 6e 1f b5 b3       	mov    $0xb3b51f6e,%ebx
    4109:	eb 1a                	jmp    4125 <efi_pxe_dhcp+0x69>
    410b:	48 83 ed 38          	sub    $0x38,%rbp
    410f:	48 89 ef             	mov    %rbp,%rdi
    4112:	e8 40 f2 ff ff       	call   3357 <efi_pxe_ip>
    4117:	89 c3                	mov    %eax,%ebx
    4119:	85 c0                	test   %eax,%eax
    411b:	75 08                	jne    4125 <efi_pxe_dhcp+0x69>
    411d:	48 89 ef             	mov    %rbp,%rdi
    4120:	e8 1d f8 ff ff       	call   3942 <efi_pxe_fake_all>
    4125:	83 cf ff             	or     $0xffffffff,%edi
    4128:	f7 db                	neg    %ebx
    412a:	e8 78 19 00 00       	call   5aa7 <efi_snp_add_claim>
    412f:	48 89 d8             	mov    %rbx,%rax
    4132:	ba 01 00 00 00       	mov    $0x1,%edx
    4137:	83 e3 7f             	and    $0x7f,%ebx
    413a:	48 c1 e0 38          	shl    $0x38,%rax
    413e:	48 c1 e2 3f          	shl    $0x3f,%rdx
    4142:	48 21 d0             	and    %rdx,%rax
    4145:	48 09 d8             	or     %rbx,%rax
    4148:	5b                   	pop    %rbx
    4149:	5e                   	pop    %rsi
    414a:	5f                   	pop    %rdi
    414b:	5d                   	pop    %rbp
    414c:	41 5c                	pop    %r12
    414e:	c3                   	ret    

000000000000414f <efi_apple_get_dhcp_response>:
    414f:	f3 0f 1e fa          	endbr64 
    4153:	48 b8 05 00 00 00 00 	movabs $0x8000000000000005,%rax
    415a:	00 00 80 
    415d:	57                   	push   %rdi
    415e:	56                   	push   %rsi
    415f:	53                   	push   %rbx
    4160:	48 81 3a bf 05 00 00 	cmpq   $0x5bf,(%rdx)
    4167:	48 89 d3             	mov    %rdx,%rbx
    416a:	76 16                	jbe    4182 <efi_apple_get_dhcp_response+0x33>
    416c:	4c 89 c7             	mov    %r8,%rdi
    416f:	48 8d b1 3c dd ff ff 	lea    -0x22c4(%rcx),%rsi
    4176:	ba c0 05 00 00       	mov    $0x5c0,%edx
    417b:	e8 69 32 01 00       	call   173e9 <__memcpy>
    4180:	31 c0                	xor    %eax,%eax
    4182:	48 c7 03 c0 05 00 00 	movq   $0x5c0,(%rbx)
    4189:	5b                   	pop    %rbx
    418a:	5e                   	pop    %rsi
    418b:	5f                   	pop    %rdi
    418c:	c3                   	ret    

000000000000418d <efi_pxe_install>:
    418d:	f3 0f 1e fa          	endbr64 
    4191:	41 57                	push   %r15
    4193:	41 56                	push   %r14
    4195:	41 55                	push   %r13
    4197:	41 54                	push   %r12
    4199:	55                   	push   %rbp
    419a:	53                   	push   %rbx
    419b:	48 89 f3             	mov    %rsi,%rbx
    419e:	48 83 ec 28          	sub    $0x28,%rsp
    41a2:	48 8b 05 a7 5e 02 00 	mov    0x25ea7(%rip),%rax        # 2a050 <__stack_chk_guard>
    41a9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    41ae:	48 8b 05 c3 5e 02 00 	mov    0x25ec3(%rip),%rax        # 2a078 <efi_systab>
    41b5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    41ba:	bf 02 00 00 00       	mov    $0x2,%edi
    41bf:	4c 8b 68 60          	mov    0x60(%rax),%r13
    41c3:	e8 3f 0d 01 00       	call   14f07 <tcpip_net_protocol>
    41c8:	bf 20 2a 00 00       	mov    $0x2a20,%edi
    41cd:	49 89 c4             	mov    %rax,%r12
    41d0:	e8 61 85 00 00       	call   c736 <zalloc>
    41d5:	48 85 c0             	test   %rax,%rax
    41d8:	75 0b                	jne    41e5 <efi_pxe_install+0x58>
    41da:	41 bc 77 1f b5 ce    	mov    $0xceb51f77,%r12d
    41e0:	e9 9d 01 00 00       	jmp    4382 <efi_pxe_install+0x1f5>
    41e5:	48 89 c5             	mov    %rax,%rbp
    41e8:	48 8d 05 64 f2 ff ff 	lea    -0xd9c(%rip),%rax        # 3453 <efi_pxe_free>
    41ef:	48 89 df             	mov    %rbx,%rdi
    41f2:	48 89 45 08          	mov    %rax,0x8(%rbp)
    41f6:	4c 8d 75 38          	lea    0x38(%rbp),%r14
    41fa:	4c 8d bd 60 29 00 00 	lea    0x2960(%rbp),%r15
    4201:	e8 08 bd 00 00       	call   ff0e <ref_increment>
    4206:	48 8d 43 34          	lea    0x34(%rbx),%rax
    420a:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    420e:	4c 89 f7             	mov    %r14,%rdi
    4211:	48 89 45 18          	mov    %rax,0x18(%rbp)
    4215:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    421a:	ba 70 00 00 00       	mov    $0x70,%edx
    421f:	48 8d 35 ba 0c 02 00 	lea    0x20cba(%rip),%rsi        # 24ee0 <efi_pxe_base_code_protocol>
    4226:	48 89 45 30          	mov    %rax,0x30(%rbp)
    422a:	e8 ba 31 01 00       	call   173e9 <__memcpy>
    422f:	48 8d 85 a8 00 00 00 	lea    0xa8(%rbp),%rax
    4236:	4c 89 ff             	mov    %r15,%rdi
    4239:	48 8d 35 80 0c 02 00 	lea    0x20c80(%rip),%rsi        # 24ec0 <efi_apple_net_boot_protocol>
    4240:	48 89 85 a0 00 00 00 	mov    %rax,0xa0(%rbp)
    4247:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    4248:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    4249:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    424a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    424b:	48 8d 05 be 0d 02 00 	lea    0x20dbe(%rip),%rax        # 25010 <efi_pxe_buf_operations>
    4252:	48 8d 15 67 0d 02 00 	lea    0x20d67(%rip),%rdx        # 24fc0 <efi_pxe_tftp_desc>
    4259:	48 89 ad a8 29 00 00 	mov    %rbp,0x29a8(%rbp)
    4260:	48 89 85 98 29 00 00 	mov    %rax,0x2998(%rbp)
    4267:	48 8d 05 52 22 02 00 	lea    0x22252(%rip),%rax        # 264c0 <null_intf>
    426e:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
    4275:	48 89 85 a0 29 00 00 	mov    %rax,0x29a0(%rbp)
    427c:	48 8d 35 8d 51 02 00 	lea    0x2518d(%rip),%rsi        # 29410 <ip_setting>
    4283:	48 89 85 d0 29 00 00 	mov    %rax,0x29d0(%rbp)
    428a:	48 8d 05 ef 0c 02 00 	lea    0x20cef(%rip),%rax        # 24f80 <efi_pxe_udp_desc>
    4291:	48 89 85 e0 29 00 00 	mov    %rax,0x29e0(%rbp)
    4298:	48 89 85 e8 29 00 00 	mov    %rax,0x29e8(%rbp)
    429f:	48 8d 85 f0 29 00 00 	lea    0x29f0(%rbp),%rax
    42a6:	48 89 85 f0 29 00 00 	mov    %rax,0x29f0(%rbp)
    42ad:	48 89 85 f8 29 00 00 	mov    %rax,0x29f8(%rbp)
    42b4:	48 8d 85 00 2a 00 00 	lea    0x2a00(%rbp),%rax
    42bb:	48 89 85 00 2a 00 00 	mov    %rax,0x2a00(%rbp)
    42c2:	48 89 85 08 2a 00 00 	mov    %rax,0x2a08(%rbp)
    42c9:	48 8d 05 90 0c 02 00 	lea    0x20c90(%rip),%rax        # 24f60 <efi_pxe_process_desc>
    42d0:	48 89 95 b0 29 00 00 	mov    %rdx,0x29b0(%rbp)
    42d7:	48 89 95 b8 29 00 00 	mov    %rdx,0x29b8(%rbp)
    42de:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
    42e3:	48 89 ad d8 29 00 00 	mov    %rbp,0x29d8(%rbp)
    42ea:	48 89 85 10 2a 00 00 	mov    %rax,0x2a10(%rbp)
    42f1:	48 89 ad 18 2a 00 00 	mov    %rbp,0x2a18(%rbp)
    42f8:	e8 3b dc 00 00       	call   11f38 <fetch_ipv4_setting>
    42fd:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
    4302:	4c 89 f1             	mov    %r14,%rcx
    4305:	0f 94 c0             	sete   %al
    4308:	31 d2                	xor    %edx,%edx
    430a:	4d 85 e4             	test   %r12,%r12
    430d:	0f 95 c2             	setne  %dl
    4310:	48 83 ec 20          	sub    $0x20,%rsp
    4314:	21 c2                	and    %eax,%edx
    4316:	e8 7e f6 ff ff       	call   3999 <efi_pxe_start>
    431b:	48 83 c4 20          	add    $0x20,%rsp
    431f:	4d 89 f0             	mov    %r14,%r8
    4322:	4c 8d 0d f7 07 02 00 	lea    0x207f7(%rip),%r9        # 24b20 <efi_apple_net_boot_protocol_guid>
    4329:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    432e:	6a 00                	push   $0x0
    4330:	48 8d 15 39 02 02 00 	lea    0x20239(%rip),%rdx        # 24570 <dummy_pxe_base_code_protocol_guid>
    4337:	41 57                	push   %r15
    4339:	48 83 ec 20          	sub    $0x20,%rsp
    433d:	41 ff 95 48 01 00 00 	call   *0x148(%r13)
    4344:	48 83 c4 30          	add    $0x30,%rsp
    4348:	48 85 c0             	test   %rax,%rax
    434b:	74 22                	je     436f <efi_pxe_install+0x1e2>
    434d:	49 89 c4             	mov    %rax,%r12
    4350:	48 89 ef             	mov    %rbp,%rdi
    4353:	49 c1 ec 38          	shr    $0x38,%r12
    4357:	41 09 c4             	or     %eax,%r12d
    435a:	45 0f b6 e4          	movzbl %r12b,%r12d
    435e:	41 81 cc 00 e0 4a 7f 	or     $0x7f4ae000,%r12d
    4365:	41 f7 dc             	neg    %r12d
    4368:	e8 ad bb 00 00       	call   ff1a <ref_decrement>
    436d:	eb 13                	jmp    4382 <efi_pxe_install+0x1f5>
    436f:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    4373:	48 8d 35 b6 0c 02 00 	lea    0x20cb6(%rip),%rsi        # 25030 <efi_pxes>
    437a:	45 31 e4             	xor    %r12d,%r12d
    437d:	e8 25 7e 00 00       	call   c1a7 <extern_list_add_tail>
    4382:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4387:	48 2b 05 c2 5c 02 00 	sub    0x25cc2(%rip),%rax        # 2a050 <__stack_chk_guard>
    438e:	74 05                	je     4395 <efi_pxe_install+0x208>
    4390:	e8 cb e6 ff ff       	call   2a60 <__stack_chk_fail>
    4395:	48 83 c4 28          	add    $0x28,%rsp
    4399:	44 89 e0             	mov    %r12d,%eax
    439c:	5b                   	pop    %rbx
    439d:	5d                   	pop    %rbp
    439e:	41 5c                	pop    %r12
    43a0:	41 5d                	pop    %r13
    43a2:	41 5e                	pop    %r14
    43a4:	41 5f                	pop    %r15
    43a6:	c3                   	ret    

00000000000043a7 <efi_pxe_uninstall>:
    43a7:	f3 0f 1e fa          	endbr64 
    43ab:	41 54                	push   %r12
    43ad:	49 89 fc             	mov    %rdi,%r12
    43b0:	55                   	push   %rbp
    43b1:	53                   	push   %rbx
    43b2:	48 83 ec 10          	sub    $0x10,%rsp
    43b6:	48 8b 05 73 0c 02 00 	mov    0x20c73(%rip),%rax        # 25030 <efi_pxes>
    43bd:	48 8d 68 e0          	lea    -0x20(%rax),%rbp
    43c1:	48 8d 05 68 0c 02 00 	lea    0x20c68(%rip),%rax        # 25030 <efi_pxes>
    43c8:	48 8d 55 20          	lea    0x20(%rbp),%rdx
    43cc:	48 39 c2             	cmp    %rax,%rdx
    43cf:	74 10                	je     43e1 <efi_pxe_uninstall+0x3a>
    43d1:	4c 3b 65 30          	cmp    0x30(%rbp),%r12
    43d5:	74 0c                	je     43e3 <efi_pxe_uninstall+0x3c>
    43d7:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
    43db:	48 83 ed 20          	sub    $0x20,%rbp
    43df:	eb e7                	jmp    43c8 <efi_pxe_uninstall+0x21>
    43e1:	31 ed                	xor    %ebp,%ebp
    43e3:	4d 85 e4             	test   %r12,%r12
    43e6:	74 6d                	je     4455 <efi_pxe_uninstall+0xae>
    43e8:	4c 8d 45 38          	lea    0x38(%rbp),%r8
    43ec:	48 8b 05 85 5c 02 00 	mov    0x25c85(%rip),%rax        # 2a078 <efi_systab>
    43f3:	48 83 ec 20          	sub    $0x20,%rsp
    43f7:	4c 89 c1             	mov    %r8,%rcx
    43fa:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    43ff:	48 8b 58 60          	mov    0x60(%rax),%rbx
    4403:	e8 8b fc ff ff       	call   4093 <efi_pxe_stop>
    4408:	48 83 c4 20          	add    $0x20,%rsp
    440c:	48 8d 85 60 29 00 00 	lea    0x2960(%rbp),%rax
    4413:	48 8d 15 56 01 02 00 	lea    0x20156(%rip),%rdx        # 24570 <dummy_pxe_base_code_protocol_guid>
    441a:	6a 00                	push   $0x0
    441c:	4c 89 e1             	mov    %r12,%rcx
    441f:	4c 8d 0d fa 06 02 00 	lea    0x206fa(%rip),%r9        # 24b20 <efi_apple_net_boot_protocol_guid>
    4426:	50                   	push   %rax
    4427:	48 83 ec 20          	sub    $0x20,%rsp
    442b:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
    4430:	ff 93 50 01 00 00    	call   *0x150(%rbx)
    4436:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    443a:	48 8b 45 28          	mov    0x28(%rbp),%rax
    443e:	48 89 ef             	mov    %rbp,%rdi
    4441:	48 89 42 08          	mov    %rax,0x8(%rdx)
    4445:	48 89 10             	mov    %rdx,(%rax)
    4448:	48 83 c4 40          	add    $0x40,%rsp
    444c:	5b                   	pop    %rbx
    444d:	5d                   	pop    %rbp
    444e:	41 5c                	pop    %r12
    4450:	e9 c5 ba 00 00       	jmp    ff1a <ref_decrement>
    4455:	48 83 c4 10          	add    $0x10,%rsp
    4459:	5b                   	pop    %rbx
    445a:	5d                   	pop    %rbp
    445b:	41 5c                	pop    %r12
    445d:	c3                   	ret    

000000000000445e <efi_snp_receive_filters>:
    445e:	f3 0f 1e fa          	endbr64 
    4462:	31 c0                	xor    %eax,%eax
    4464:	89 c2                	mov    %eax,%edx
    4466:	48 39 54 24 28       	cmp    %rdx,0x28(%rsp)
    446b:	76 04                	jbe    4471 <efi_snp_receive_filters+0x13>
    446d:	ff c0                	inc    %eax
    446f:	eb f3                	jmp    4464 <efi_snp_receive_filters+0x6>
    4471:	31 c0                	xor    %eax,%eax
    4473:	c3                   	ret    

0000000000004474 <efi_snp_nvdata>:
    4474:	f3 0f 1e fa          	endbr64 
    4478:	83 3d c9 57 02 00 00 	cmpl   $0x0,0x257c9(%rip)        # 29c48 <efi_snp_claimed>
    447f:	48 ba 06 00 00 00 00 	movabs $0x8000000000000006,%rdx
    4486:	00 00 80 
    4489:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    4490:	00 00 80 
    4493:	48 0f 45 c2          	cmovne %rdx,%rax
    4497:	c3                   	ret    

0000000000004498 <efi_snp_get_driver_name>:
    4498:	f3 0f 1e fa          	endbr64 
    449c:	48 83 c1 70          	add    $0x70,%rcx
    44a0:	31 c0                	xor    %eax,%eax
    44a2:	49 89 08             	mov    %rcx,(%r8)
    44a5:	c3                   	ret    

00000000000044a6 <efi_snp_get_controller_name>:
    44a6:	f3 0f 1e fa          	endbr64 
    44aa:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    44af:	48 81 c1 90 00 00 00 	add    $0x90,%rcx
    44b6:	48 89 08             	mov    %rcx,(%rax)
    44b9:	31 c0                	xor    %eax,%eax
    44bb:	c3                   	ret    

00000000000044bc <efi_snp_demux>:
    44bc:	48 8b 05 1d 0c 02 00 	mov    0x20c1d(%rip),%rax        # 250e0 <efi_snp_devices>
    44c3:	48 8d 15 16 0c 02 00 	lea    0x20c16(%rip),%rdx        # 250e0 <efi_snp_devices>
    44ca:	48 39 d0             	cmp    %rdx,%rax
    44cd:	74 0b                	je     44da <efi_snp_demux+0x1e>
    44cf:	48 39 78 10          	cmp    %rdi,0x10(%rax)
    44d3:	74 07                	je     44dc <efi_snp_demux+0x20>
    44d5:	48 8b 00             	mov    (%rax),%rax
    44d8:	eb f0                	jmp    44ca <efi_snp_demux+0xe>
    44da:	31 c0                	xor    %eax,%eax
    44dc:	c3                   	ret    

00000000000044dd <efi_snp_poll>:
    44dd:	41 55                	push   %r13
    44df:	41 54                	push   %r12
    44e1:	55                   	push   %rbp
    44e2:	53                   	push   %rbx
    44e3:	48 89 fb             	mov    %rdi,%rbx
    44e6:	52                   	push   %rdx
    44e7:	48 8b 05 8a 5b 02 00 	mov    0x25b8a(%rip),%rax        # 2a078 <efi_systab>
    44ee:	4c 8d a3 48 04 00 00 	lea    0x448(%rbx),%r12
    44f5:	4c 8d ab 98 00 00 00 	lea    0x98(%rbx),%r13
    44fc:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    4500:	48 8b 68 60          	mov    0x60(%rax),%rbp
    4504:	e8 f2 97 00 00       	call   dcfb <netdev_poll>
    4509:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    450d:	e8 fe 97 00 00       	call   dd10 <netdev_rx_dequeue>
    4512:	48 89 c7             	mov    %rax,%rdi
    4515:	48 85 c0             	test   %rax,%rax
    4518:	74 1f                	je     4539 <efi_snp_poll+0x5c>
    451a:	4c 89 e6             	mov    %r12,%rsi
    451d:	e8 85 7c 00 00       	call   c1a7 <extern_list_add_tail>
    4522:	48 83 ec 20          	sub    $0x20,%rsp
    4526:	83 8b 3c 03 00 00 01 	orl    $0x1,0x33c(%rbx)
    452d:	4c 89 e9             	mov    %r13,%rcx
    4530:	ff 55 68             	call   *0x68(%rbp)
    4533:	48 83 c4 20          	add    $0x20,%rsp
    4537:	eb d0                	jmp    4509 <efi_snp_poll+0x2c>
    4539:	58                   	pop    %rax
    453a:	5b                   	pop    %rbx
    453b:	5d                   	pop    %rbp
    453c:	41 5c                	pop    %r12
    453e:	41 5d                	pop    %r13
    4540:	c3                   	ret    

0000000000004541 <efi_snp_get_status>:
    4541:	f3 0f 1e fa          	endbr64 
    4545:	83 3d fc 56 02 00 00 	cmpl   $0x0,0x256fc(%rip)        # 29c48 <efi_snp_claimed>
    454c:	0f 85 9d 00 00 00    	jne    45ef <efi_snp_get_status+0xae>
    4552:	41 56                	push   %r14
    4554:	41 55                	push   %r13
    4556:	41 54                	push   %r12
    4558:	49 89 d4             	mov    %rdx,%r12
    455b:	55                   	push   %rbp
    455c:	4c 89 c5             	mov    %r8,%rbp
    455f:	57                   	push   %rdi
    4560:	48 8d 79 d8          	lea    -0x28(%rcx),%rdi
    4564:	56                   	push   %rsi
    4565:	53                   	push   %rbx
    4566:	48 89 cb             	mov    %rcx,%rbx
    4569:	b9 08 00 00 00       	mov    $0x8,%ecx
    456e:	48 83 ec 20          	sub    $0x20,%rsp
    4572:	48 8b 05 ff 5a 02 00 	mov    0x25aff(%rip),%rax        # 2a078 <efi_systab>
    4579:	4c 8b 70 60          	mov    0x60(%rax),%r14
    457d:	41 ff 56 18          	call   *0x18(%r14)
    4581:	49 89 c5             	mov    %rax,%r13
    4584:	e8 54 ff ff ff       	call   44dd <efi_snp_poll>
    4589:	4d 85 e4             	test   %r12,%r12
    458c:	74 14                	je     45a2 <efi_snp_get_status+0x61>
    458e:	8b 83 14 03 00 00    	mov    0x314(%rbx),%eax
    4594:	41 89 04 24          	mov    %eax,(%r12)
    4598:	c7 83 14 03 00 00 00 	movl   $0x0,0x314(%rbx)
    459f:	00 00 00 
    45a2:	48 85 ed             	test   %rbp,%rbp
    45a5:	74 30                	je     45d7 <efi_snp_get_status+0x96>
    45a7:	8b 93 1c 04 00 00    	mov    0x41c(%rbx),%edx
    45ad:	39 93 18 04 00 00    	cmp    %edx,0x418(%rbx)
    45b3:	74 1a                	je     45cf <efi_snp_get_status+0x8e>
    45b5:	8d 42 01             	lea    0x1(%rdx),%eax
    45b8:	83 e2 1f             	and    $0x1f,%edx
    45bb:	89 83 1c 04 00 00    	mov    %eax,0x41c(%rbx)
    45c1:	48 8b 84 d3 18 03 00 	mov    0x318(%rbx,%rdx,8),%rax
    45c8:	00 
    45c9:	48 89 45 00          	mov    %rax,0x0(%rbp)
    45cd:	eb 08                	jmp    45d7 <efi_snp_get_status+0x96>
    45cf:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    45d6:	00 
    45d7:	4c 89 e9             	mov    %r13,%rcx
    45da:	41 ff 56 20          	call   *0x20(%r14)
    45de:	48 83 c4 20          	add    $0x20,%rsp
    45e2:	31 c0                	xor    %eax,%eax
    45e4:	5b                   	pop    %rbx
    45e5:	5e                   	pop    %rsi
    45e6:	5f                   	pop    %rdi
    45e7:	5d                   	pop    %rbp
    45e8:	41 5c                	pop    %r12
    45ea:	41 5d                	pop    %r13
    45ec:	41 5e                	pop    %r14
    45ee:	c3                   	ret    
    45ef:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    45f6:	00 00 80 
    45f9:	c3                   	ret    

00000000000045fa <efi_snp_wait_for_packet>:
    45fa:	f3 0f 1e fa          	endbr64 
    45fe:	48 8b 42 10          	mov    0x10(%rdx),%rax
    4602:	f6 80 80 00 00 00 01 	testb  $0x1,0x80(%rax)
    4609:	74 42                	je     464d <efi_snp_wait_for_packet+0x53>
    460b:	83 3d 36 56 02 00 00 	cmpl   $0x0,0x25636(%rip)        # 29c48 <efi_snp_claimed>
    4612:	75 39                	jne    464d <efi_snp_wait_for_packet+0x53>
    4614:	41 54                	push   %r12
    4616:	b9 08 00 00 00       	mov    $0x8,%ecx
    461b:	57                   	push   %rdi
    461c:	48 89 d7             	mov    %rdx,%rdi
    461f:	56                   	push   %rsi
    4620:	53                   	push   %rbx
    4621:	48 83 ec 28          	sub    $0x28,%rsp
    4625:	48 8b 05 4c 5a 02 00 	mov    0x25a4c(%rip),%rax        # 2a078 <efi_systab>
    462c:	48 8b 58 60          	mov    0x60(%rax),%rbx
    4630:	ff 53 18             	call   *0x18(%rbx)
    4633:	49 89 c4             	mov    %rax,%r12
    4636:	e8 a2 fe ff ff       	call   44dd <efi_snp_poll>
    463b:	48 8b 43 20          	mov    0x20(%rbx),%rax
    463f:	48 83 c4 28          	add    $0x28,%rsp
    4643:	4c 89 e1             	mov    %r12,%rcx
    4646:	5b                   	pop    %rbx
    4647:	5e                   	pop    %rsi
    4648:	5f                   	pop    %rdi
    4649:	41 5c                	pop    %r12
    464b:	ff e0                	jmp    *%rax
    464d:	c3                   	ret    

000000000000464e <efi_snp_mcast_ip_to_mac>:
    464e:	f3 0f 1e fa          	endbr64 
    4652:	41 55                	push   %r13
    4654:	41 54                	push   %r12
    4656:	4d 89 cc             	mov    %r9,%r12
    4659:	55                   	push   %rbp
    465a:	4c 89 c5             	mov    %r8,%rbp
    465d:	57                   	push   %rdi
    465e:	56                   	push   %rsi
    465f:	53                   	push   %rbx
    4660:	89 d3                	mov    %edx,%ebx
    4662:	41 52                	push   %r10
    4664:	48 8b 41 e8          	mov    -0x18(%rcx),%rax
    4668:	4c 8b 68 50          	mov    0x50(%rax),%r13
    466c:	84 d2                	test   %dl,%dl
    466e:	75 08                	jne    4678 <efi_snp_mcast_ip_to_mac+0x2a>
    4670:	41 8b 38             	mov    (%r8),%edi
    4673:	e8 17 60 00 00       	call   a68f <inet_ntoa>
    4678:	83 3d c9 55 02 00 00 	cmpl   $0x0,0x255c9(%rip)        # 29c48 <efi_snp_claimed>
    467f:	49 ba 06 00 00 00 00 	movabs $0x8000000000000006,%r10
    4686:	00 00 80 
    4689:	75 34                	jne    46bf <efi_snp_mcast_ip_to_mac+0x71>
    468b:	80 fb 01             	cmp    $0x1,%bl
    468e:	4c 89 e2             	mov    %r12,%rdx
    4691:	48 89 ee             	mov    %rbp,%rsi
    4694:	19 ff                	sbb    %edi,%edi
    4696:	83 c7 02             	add    $0x2,%edi
    4699:	41 ff 55 28          	call   *0x28(%r13)
    469d:	45 31 d2             	xor    %r10d,%r10d
    46a0:	85 c0                	test   %eax,%eax
    46a2:	74 1b                	je     46bf <efi_snp_mcast_ip_to_mac+0x71>
    46a4:	f7 d8                	neg    %eax
    46a6:	ba 01 00 00 00       	mov    $0x1,%edx
    46ab:	49 89 c2             	mov    %rax,%r10
    46ae:	48 c1 e2 3f          	shl    $0x3f,%rdx
    46b2:	83 e0 7f             	and    $0x7f,%eax
    46b5:	49 c1 e2 38          	shl    $0x38,%r10
    46b9:	49 21 d2             	and    %rdx,%r10
    46bc:	49 09 c2             	or     %rax,%r10
    46bf:	5a                   	pop    %rdx
    46c0:	4c 89 d0             	mov    %r10,%rax
    46c3:	5b                   	pop    %rbx
    46c4:	5e                   	pop    %rsi
    46c5:	5f                   	pop    %rdi
    46c6:	5d                   	pop    %rbp
    46c7:	41 5c                	pop    %r12
    46c9:	41 5d                	pop    %r13
    46cb:	c3                   	ret    

00000000000046cc <efi_snp_station_address>:
    46cc:	f3 0f 1e fa          	endbr64 
    46d0:	83 3d 71 55 02 00 00 	cmpl   $0x0,0x25571(%rip)        # 29c48 <efi_snp_claimed>
    46d7:	75 2d                	jne    4706 <efi_snp_station_address+0x3a>
    46d9:	57                   	push   %rdi
    46da:	56                   	push   %rsi
    46db:	4c 89 c6             	mov    %r8,%rsi
    46de:	41 51                	push   %r9
    46e0:	84 d2                	test   %dl,%dl
    46e2:	74 07                	je     46eb <efi_snp_station_address+0x1f>
    46e4:	48 8d b1 e8 02 00 00 	lea    0x2e8(%rcx),%rsi
    46eb:	48 8b 79 e8          	mov    -0x18(%rcx),%rdi
    46ef:	48 8b 47 50          	mov    0x50(%rdi),%rax
    46f3:	48 83 c7 60          	add    $0x60,%rdi
    46f7:	0f b6 50 43          	movzbl 0x43(%rax),%edx
    46fb:	e8 e9 2c 01 00       	call   173e9 <__memcpy>
    4700:	5a                   	pop    %rdx
    4701:	31 c0                	xor    %eax,%eax
    4703:	5e                   	pop    %rsi
    4704:	5f                   	pop    %rdi
    4705:	c3                   	ret    
    4706:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    470d:	00 00 80 
    4710:	c3                   	ret    

0000000000004711 <efi_snp_statistics>:
    4711:	f3 0f 1e fa          	endbr64 
    4715:	49 ba 06 00 00 00 00 	movabs $0x8000000000000006,%r10
    471c:	00 00 80 
    471f:	55                   	push   %rbp
    4720:	57                   	push   %rdi
    4721:	56                   	push   %rsi
    4722:	53                   	push   %rbx
    4723:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    472a:	48 8b 05 1f 59 02 00 	mov    0x2591f(%rip),%rax        # 2a050 <__stack_chk_guard>
    4731:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
    4738:	00 
    4739:	31 c0                	xor    %eax,%eax
    473b:	83 3d 06 55 02 00 00 	cmpl   $0x0,0x25506(%rip)        # 29c48 <efi_snp_claimed>
    4742:	0f 85 a7 00 00 00    	jne    47ef <efi_snp_statistics+0xde>
    4748:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    474d:	48 89 cb             	mov    %rcx,%rbx
    4750:	89 d5                	mov    %edx,%ebp
    4752:	b9 d0 00 00 00       	mov    $0xd0,%ecx
    4757:	48 89 f7             	mov    %rsi,%rdi
    475a:	f3 aa                	rep stos %al,%es:(%rdi)
    475c:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    4760:	8b 8a 18 01 00 00    	mov    0x118(%rdx),%ecx
    4766:	8b ba 1c 01 00 00    	mov    0x11c(%rdx),%edi
    476c:	48 89 c8             	mov    %rcx,%rax
    476f:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    4774:	8b 8a 40 01 00 00    	mov    0x140(%rdx),%ecx
    477a:	01 f8                	add    %edi,%eax
    477c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    4781:	8b ba 44 01 00 00    	mov    0x144(%rdx),%edi
    4787:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    478c:	48 89 c8             	mov    %rcx,%rax
    478f:	01 f8                	add    %edi,%eax
    4791:	49 81 38 d0 00 00 00 	cmpq   $0xd0,(%r8)
    4798:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    479d:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    47a2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    47a7:	76 07                	jbe    47b0 <efi_snp_statistics+0x9f>
    47a9:	49 c7 00 d0 00 00 00 	movq   $0xd0,(%r8)
    47b0:	4d 85 c9             	test   %r9,%r9
    47b3:	74 0b                	je     47c0 <efi_snp_statistics+0xaf>
    47b5:	49 8b 10             	mov    (%r8),%rdx
    47b8:	4c 89 cf             	mov    %r9,%rdi
    47bb:	e8 29 2c 01 00       	call   173e9 <__memcpy>
    47c0:	45 31 d2             	xor    %r10d,%r10d
    47c3:	40 84 ed             	test   %bpl,%bpl
    47c6:	74 27                	je     47ef <efi_snp_statistics+0xde>
    47c8:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    47cc:	ba 28 00 00 00       	mov    $0x28,%edx
    47d1:	48 89 d1             	mov    %rdx,%rcx
    47d4:	48 8d b8 18 01 00 00 	lea    0x118(%rax),%rdi
    47db:	31 c0                	xor    %eax,%eax
    47dd:	f3 aa                	rep stos %al,%es:(%rdi)
    47df:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    47e3:	48 89 d1             	mov    %rdx,%rcx
    47e6:	48 81 c7 40 01 00 00 	add    $0x140,%rdi
    47ed:	f3 aa                	rep stos %al,%es:(%rdi)
    47ef:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
    47f6:	00 
    47f7:	48 2b 05 52 58 02 00 	sub    0x25852(%rip),%rax        # 2a050 <__stack_chk_guard>
    47fe:	74 05                	je     4805 <efi_snp_statistics+0xf4>
    4800:	e8 5b e2 ff ff       	call   2a60 <__stack_chk_fail>
    4805:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    480c:	4c 89 d0             	mov    %r10,%rax
    480f:	5b                   	pop    %rbx
    4810:	5e                   	pop    %rsi
    4811:	5f                   	pop    %rdi
    4812:	5d                   	pop    %rbp
    4813:	c3                   	ret    

0000000000004814 <efi_snp_receive>:
    4814:	f3 0f 1e fa          	endbr64 
    4818:	41 57                	push   %r15
    481a:	41 56                	push   %r14
    481c:	41 55                	push   %r13
    481e:	41 54                	push   %r12
    4820:	55                   	push   %rbp
    4821:	57                   	push   %rdi
    4822:	56                   	push   %rsi
    4823:	53                   	push   %rbx
    4824:	48 83 ec 78          	sub    $0x78,%rsp
    4828:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
    482f:	00 
    4830:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    4835:	4c 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%r15
    483c:	00 
    483d:	4c 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%r14
    4844:	00 
    4845:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    484a:	48 8b 05 ff 57 02 00 	mov    0x257ff(%rip),%rax        # 2a050 <__stack_chk_guard>
    4851:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    4856:	31 c0                	xor    %eax,%eax
    4858:	83 3d e9 53 02 00 00 	cmpl   $0x0,0x253e9(%rip)        # 29c48 <efi_snp_claimed>
    485f:	74 0a                	je     486b <efi_snp_receive+0x57>
    4861:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    4866:	e9 73 01 00 00       	jmp    49de <efi_snp_receive+0x1ca>
    486b:	48 8b 05 06 58 02 00 	mov    0x25806(%rip),%rax        # 2a078 <efi_systab>
    4872:	48 89 cb             	mov    %rcx,%rbx
    4875:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    487a:	4c 89 c5             	mov    %r8,%rbp
    487d:	48 8d 7b d8          	lea    -0x28(%rbx),%rdi
    4881:	48 8b 40 60          	mov    0x60(%rax),%rax
    4885:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    488a:	48 8b 41 e8          	mov    -0x18(%rcx),%rax
    488e:	b9 08 00 00 00       	mov    $0x8,%ecx
    4893:	4c 8b 60 50          	mov    0x50(%rax),%r12
    4897:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    489c:	ff 50 18             	call   *0x18(%rax)
    489f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    48a4:	e8 34 fc ff ff       	call   44dd <efi_snp_poll>
    48a9:	4c 8b ab 20 04 00 00 	mov    0x420(%rbx),%r13
    48b0:	48 8d 83 20 04 00 00 	lea    0x420(%rbx),%rax
    48b7:	49 39 c5             	cmp    %rax,%r13
    48ba:	74 0a                	je     48c6 <efi_snp_receive+0xb2>
    48bc:	4d 85 ed             	test   %r13,%r13
    48bf:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    48c4:	75 0a                	jne    48d0 <efi_snp_receive+0xbc>
    48c6:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    48cb:	e9 01 01 00 00       	jmp    49d1 <efi_snp_receive+0x1bd>
    48d0:	49 8b 45 08          	mov    0x8(%r13),%rax
    48d4:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    48d9:	48 39 d0             	cmp    %rdx,%rax
    48dc:	76 0a                	jbe    48e8 <efi_snp_receive+0xd4>
    48de:	8a 15 26 fd 01 00    	mov    0x1fd26(%rip),%dl        # 2460a <loop>
    48e4:	84 d2                	test   %dl,%dl
    48e6:	75 f6                	jne    48de <efi_snp_receive+0xca>
    48e8:	49 8b 55 00          	mov    0x0(%r13),%rdx
    48ec:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    48f1:	48 39 ca             	cmp    %rcx,%rdx
    48f4:	76 0a                	jbe    4900 <efi_snp_receive+0xec>
    48f6:	8a 0d 0e fd 01 00    	mov    0x1fd0e(%rip),%cl        # 2460a <loop>
    48fc:	84 c9                	test   %cl,%cl
    48fe:	75 f6                	jne    48f6 <efi_snp_receive+0xe2>
    4900:	48 89 42 08          	mov    %rax,0x8(%rdx)
    4904:	49 8b 75 18          	mov    0x18(%r13),%rsi
    4908:	4c 89 cf             	mov    %r9,%rdi
    490b:	48 89 10             	mov    %rdx,(%rax)
    490e:	49 8b 45 20          	mov    0x20(%r13),%rax
    4912:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    4916:	48 29 f0             	sub    %rsi,%rax
    4919:	48 39 d0             	cmp    %rdx,%rax
    491c:	48 0f 46 d0          	cmovbe %rax,%rdx
    4920:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    4925:	e8 bf 2a 01 00       	call   173e9 <__memcpy>
    492a:	49 8b 45 20          	mov    0x20(%r13),%rax
    492e:	49 2b 45 18          	sub    0x18(%r13),%rax
    4932:	4c 89 ee             	mov    %r13,%rsi
    4935:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    4939:	48 89 45 00          	mov    %rax,0x0(%rbp)
    493d:	48 8d 4c 24 60       	lea    0x60(%rsp),%rcx
    4942:	48 8d 54 24 58       	lea    0x58(%rsp),%rdx
    4947:	4c 8d 4c 24 54       	lea    0x54(%rsp),%r9
    494c:	4c 8d 44 24 52       	lea    0x52(%rsp),%r8
    4951:	41 ff 54 24 10       	call   *0x10(%r12)
    4956:	89 c3                	mov    %eax,%ebx
    4958:	85 c0                	test   %eax,%eax
    495a:	75 6d                	jne    49c9 <efi_snp_receive+0x1b5>
    495c:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
    4962:	74 0e                	je     4972 <efi_snp_receive+0x15e>
    4964:	41 0f b6 44 24 44    	movzbl 0x44(%r12),%eax
    496a:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    496f:	48 89 06             	mov    %rax,(%rsi)
    4972:	4d 85 ff             	test   %r15,%r15
    4975:	74 13                	je     498a <efi_snp_receive+0x176>
    4977:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    497d:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    4982:	4c 89 ff             	mov    %r15,%rdi
    4985:	e8 5f 2a 01 00       	call   173e9 <__memcpy>
    498a:	4d 85 f6             	test   %r14,%r14
    498d:	74 13                	je     49a2 <efi_snp_receive+0x18e>
    498f:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    4995:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    499a:	4c 89 f7             	mov    %r14,%rdi
    499d:	e8 47 2a 01 00       	call   173e9 <__memcpy>
    49a2:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    49a8:	74 0f                	je     49b9 <efi_snp_receive+0x1a5>
    49aa:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    49af:	66 8b 44 24 52       	mov    0x52(%rsp),%ax
    49b4:	86 c4                	xchg   %al,%ah
    49b6:	66 89 06             	mov    %ax,(%rsi)
    49b9:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    49be:	48 39 45 00          	cmp    %rax,0x0(%rbp)
    49c2:	74 05                	je     49c9 <efi_snp_receive+0x1b5>
    49c4:	bb 7b 1f ee b9       	mov    $0xb9ee1f7b,%ebx
    49c9:	4c 89 ef             	mov    %r13,%rdi
    49cc:	e8 95 53 00 00       	call   9d66 <free_iob>
    49d1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    49d6:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    49db:	ff 50 20             	call   *0x20(%rax)
    49de:	f7 db                	neg    %ebx
    49e0:	ba 01 00 00 00       	mov    $0x1,%edx
    49e5:	48 89 d8             	mov    %rbx,%rax
    49e8:	48 c1 e2 3f          	shl    $0x3f,%rdx
    49ec:	83 e3 7f             	and    $0x7f,%ebx
    49ef:	48 c1 e0 38          	shl    $0x38,%rax
    49f3:	48 21 d0             	and    %rdx,%rax
    49f6:	48 09 d8             	or     %rbx,%rax
    49f9:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    49fe:	48 2b 15 4b 56 02 00 	sub    0x2564b(%rip),%rdx        # 2a050 <__stack_chk_guard>
    4a05:	74 05                	je     4a0c <efi_snp_receive+0x1f8>
    4a07:	e8 54 e0 ff ff       	call   2a60 <__stack_chk_fail>
    4a0c:	48 83 c4 78          	add    $0x78,%rsp
    4a10:	5b                   	pop    %rbx
    4a11:	5e                   	pop    %rsi
    4a12:	5f                   	pop    %rdi
    4a13:	5d                   	pop    %rbp
    4a14:	41 5c                	pop    %r12
    4a16:	41 5d                	pop    %r13
    4a18:	41 5e                	pop    %r14
    4a1a:	41 5f                	pop    %r15
    4a1c:	c3                   	ret    

0000000000004a1d <efi_snp_transmit>:
    4a1d:	f3 0f 1e fa          	endbr64 
    4a21:	41 57                	push   %r15
    4a23:	41 56                	push   %r14
    4a25:	41 55                	push   %r13
    4a27:	41 54                	push   %r12
    4a29:	55                   	push   %rbp
    4a2a:	57                   	push   %rdi
    4a2b:	56                   	push   %rsi
    4a2c:	53                   	push   %rbx
    4a2d:	48 83 ec 28          	sub    $0x28,%rsp
    4a31:	48 8b 05 40 56 02 00 	mov    0x25640(%rip),%rax        # 2a078 <efi_systab>
    4a38:	83 3d 09 52 02 00 00 	cmpl   $0x0,0x25209(%rip)        # 29c48 <efi_snp_claimed>
    4a3f:	4c 89 8c 24 88 00 00 	mov    %r9,0x88(%rsp)
    4a46:	00 
    4a47:	4c 8b 70 60          	mov    0x60(%rax),%r14
    4a4b:	48 8b 41 e8          	mov    -0x18(%rcx),%rax
    4a4f:	4c 8b 68 50          	mov    0x50(%rax),%r13
    4a53:	74 0a                	je     4a5f <efi_snp_transmit+0x42>
    4a55:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    4a5a:	e9 92 01 00 00       	jmp    4bf1 <efi_snp_transmit+0x1d4>
    4a5f:	48 89 d3             	mov    %rdx,%rbx
    4a62:	4c 89 84 24 80 00 00 	mov    %r8,0x80(%rsp)
    4a69:	00 
    4a6a:	48 89 cd             	mov    %rcx,%rbp
    4a6d:	b9 08 00 00 00       	mov    $0x8,%ecx
    4a72:	41 ff 56 18          	call   *0x18(%r14)
    4a76:	48 85 db             	test   %rbx,%rbx
    4a79:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    4a80:	00 
    4a81:	49 89 c4             	mov    %rax,%r12
    4a84:	41 0f b6 45 44       	movzbl 0x44(%r13),%eax
    4a89:	74 4a                	je     4ad5 <efi_snp_transmit+0xb8>
    4a8b:	48 39 c3             	cmp    %rax,%rbx
    4a8e:	74 02                	je     4a92 <efi_snp_transmit+0x75>
    4a90:	eb 1f                	jmp    4ab1 <efi_snp_transmit+0x94>
    4a92:	48 39 da             	cmp    %rbx,%rdx
    4a95:	73 02                	jae    4a99 <efi_snp_transmit+0x7c>
    4a97:	eb 18                	jmp    4ab1 <efi_snp_transmit+0x94>
    4a99:	48 83 bc 24 98 00 00 	cmpq   $0x0,0x98(%rsp)
    4aa0:	00 00 
    4aa2:	75 02                	jne    4aa6 <efi_snp_transmit+0x89>
    4aa4:	eb 0b                	jmp    4ab1 <efi_snp_transmit+0x94>
    4aa6:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
    4aad:	00 00 
    4aaf:	75 0a                	jne    4abb <efi_snp_transmit+0x9e>
    4ab1:	bb 7e 1f ee e3       	mov    $0xe3ee1f7e,%ebx
    4ab6:	e9 2f 01 00 00       	jmp    4bea <efi_snp_transmit+0x1cd>
    4abb:	48 83 bc 24 90 00 00 	cmpq   $0x0,0x90(%rsp)
    4ac2:	00 00 
    4ac4:	75 0f                	jne    4ad5 <efi_snp_transmit+0xb8>
    4ac6:	48 8d b5 a8 02 00 00 	lea    0x2a8(%rbp),%rsi
    4acd:	48 89 b4 24 90 00 00 	mov    %rsi,0x90(%rsp)
    4ad4:	00 
    4ad5:	48 89 d7             	mov    %rdx,%rdi
    4ad8:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
    4adf:	00 
    4ae0:	48 29 c7             	sub    %rax,%rdi
    4ae3:	b8 80 00 00 00       	mov    $0x80,%eax
    4ae8:	48 39 c7             	cmp    %rax,%rdi
    4aeb:	48 0f 42 f8          	cmovb  %rax,%rdi
    4aef:	48 83 c7 40          	add    $0x40,%rdi
    4af3:	e8 54 52 00 00       	call   9d4c <alloc_iob>
    4af8:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    4aff:	00 
    4b00:	48 85 c0             	test   %rax,%rax
    4b03:	49 89 c7             	mov    %rax,%r15
    4b06:	75 0a                	jne    4b12 <efi_snp_transmit+0xf5>
    4b08:	bb 77 1f ee ce       	mov    $0xceee1f77,%ebx
    4b0d:	e9 d8 00 00 00       	jmp    4bea <efi_snp_transmit+0x1cd>
    4b12:	41 0f b6 45 44       	movzbl 0x44(%r13),%eax
    4b17:	bf 40 00 00 00       	mov    $0x40,%edi
    4b1c:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    4b23:	00 
    4b24:	29 c7                	sub    %eax,%edi
    4b26:	48 63 ff             	movslq %edi,%rdi
    4b29:	49 01 7f 18          	add    %rdi,0x18(%r15)
    4b2d:	49 03 7f 20          	add    0x20(%r15),%rdi
    4b31:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    4b35:	49 89 47 20          	mov    %rax,0x20(%r15)
    4b39:	e8 ab 28 01 00       	call   173e9 <__memcpy>
    4b3e:	48 85 db             	test   %rbx,%rbx
    4b41:	75 17                	jne    4b5a <efi_snp_transmit+0x13d>
    4b43:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    4b47:	4c 89 fe             	mov    %r15,%rsi
    4b4a:	e8 af 90 00 00       	call   dbfe <netdev_tx>
    4b4f:	89 c3                	mov    %eax,%ebx
    4b51:	85 c0                	test   %eax,%eax
    4b53:	74 42                	je     4b97 <efi_snp_transmit+0x17a>
    4b55:	e9 85 00 00 00       	jmp    4bdf <efi_snp_transmit+0x1c2>
    4b5a:	41 0f b6 45 44       	movzbl 0x44(%r13),%eax
    4b5f:	49 01 47 18          	add    %rax,0x18(%r15)
    4b63:	4c 89 fe             	mov    %r15,%rsi
    4b66:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
    4b6d:	00 
    4b6e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    4b72:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    4b79:	00 
    4b7a:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    4b81:	00 
    4b82:	66 8b 00             	mov    (%rax),%ax
    4b85:	86 c4                	xchg   %al,%ah
    4b87:	44 0f b7 c0          	movzwl %ax,%r8d
    4b8b:	41 ff 55 08          	call   *0x8(%r13)
    4b8f:	89 c3                	mov    %eax,%ebx
    4b91:	85 c0                	test   %eax,%eax
    4b93:	74 ae                	je     4b43 <efi_snp_transmit+0x126>
    4b95:	eb 4b                	jmp    4be2 <efi_snp_transmit+0x1c5>
    4b97:	8b 85 18 04 00 00    	mov    0x418(%rbp),%eax
    4b9d:	89 c2                	mov    %eax,%edx
    4b9f:	2b 95 1c 04 00 00    	sub    0x41c(%rbp),%edx
    4ba5:	83 fa 1f             	cmp    $0x1f,%edx
    4ba8:	76 07                	jbe    4bb1 <efi_snp_transmit+0x194>
    4baa:	bb 77 1f ee d5       	mov    $0xd5ee1f77,%ebx
    4baf:	eb 2e                	jmp    4bdf <efi_snp_transmit+0x1c2>
    4bb1:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    4bb8:	00 
    4bb9:	8d 50 01             	lea    0x1(%rax),%edx
    4bbc:	83 e0 1f             	and    $0x1f,%eax
    4bbf:	4c 89 e1             	mov    %r12,%rcx
    4bc2:	89 95 18 04 00 00    	mov    %edx,0x418(%rbp)
    4bc8:	48 89 b4 c5 18 03 00 	mov    %rsi,0x318(%rbp,%rax,8)
    4bcf:	00 
    4bd0:	83 8d 14 03 00 00 02 	orl    $0x2,0x314(%rbp)
    4bd7:	41 ff 56 20          	call   *0x20(%r14)
    4bdb:	31 c0                	xor    %eax,%eax
    4bdd:	eb 2d                	jmp    4c0c <efi_snp_transmit+0x1ef>
    4bdf:	45 31 ff             	xor    %r15d,%r15d
    4be2:	4c 89 ff             	mov    %r15,%rdi
    4be5:	e8 7c 51 00 00       	call   9d66 <free_iob>
    4bea:	4c 89 e1             	mov    %r12,%rcx
    4bed:	41 ff 56 20          	call   *0x20(%r14)
    4bf1:	f7 db                	neg    %ebx
    4bf3:	ba 01 00 00 00       	mov    $0x1,%edx
    4bf8:	48 89 d8             	mov    %rbx,%rax
    4bfb:	48 c1 e2 3f          	shl    $0x3f,%rdx
    4bff:	83 e3 7f             	and    $0x7f,%ebx
    4c02:	48 c1 e0 38          	shl    $0x38,%rax
    4c06:	48 21 d0             	and    %rdx,%rax
    4c09:	48 09 d8             	or     %rbx,%rax
    4c0c:	48 83 c4 28          	add    $0x28,%rsp
    4c10:	5b                   	pop    %rbx
    4c11:	5e                   	pop    %rsi
    4c12:	5f                   	pop    %rdi
    4c13:	5d                   	pop    %rbp
    4c14:	41 5c                	pop    %r12
    4c16:	41 5d                	pop    %r13
    4c18:	41 5e                	pop    %r14
    4c1a:	41 5f                	pop    %r15
    4c1c:	c3                   	ret    

0000000000004c1d <efi_snp_set_state>:
    4c1d:	31 c0                	xor    %eax,%eax
    4c1f:	83 bf 38 03 00 00 00 	cmpl   $0x0,0x338(%rdi)
    4c26:	74 1f                	je     4c47 <efi_snp_set_state+0x2a>
    4c28:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    4c2c:	b8 01 00 00 00       	mov    $0x1,%eax
    4c31:	f6 82 80 00 00 00 01 	testb  $0x1,0x80(%rdx)
    4c38:	74 0d                	je     4c47 <efi_snp_set_state+0x2a>
    4c3a:	8b 05 08 50 02 00    	mov    0x25008(%rip),%eax        # 29c48 <efi_snp_claimed>
    4c40:	f7 d8                	neg    %eax
    4c42:	19 c0                	sbb    %eax,%eax
    4c44:	83 c0 02             	add    $0x2,%eax
    4c47:	89 87 a8 00 00 00    	mov    %eax,0xa8(%rdi)
    4c4d:	c3                   	ret    

0000000000004c4e <efi_snp_start>:
    4c4e:	f3 0f 1e fa          	endbr64 
    4c52:	83 3d ef 4f 02 00 00 	cmpl   $0x0,0x24fef(%rip)        # 29c48 <efi_snp_claimed>
    4c59:	75 1c                	jne    4c77 <efi_snp_start+0x29>
    4c5b:	57                   	push   %rdi
    4c5c:	48 8d 79 d8          	lea    -0x28(%rcx),%rdi
    4c60:	56                   	push   %rsi
    4c61:	50                   	push   %rax
    4c62:	c7 81 10 03 00 00 01 	movl   $0x1,0x310(%rcx)
    4c69:	00 00 00 
    4c6c:	e8 ac ff ff ff       	call   4c1d <efi_snp_set_state>
    4c71:	5a                   	pop    %rdx
    4c72:	31 c0                	xor    %eax,%eax
    4c74:	5e                   	pop    %rsi
    4c75:	5f                   	pop    %rdi
    4c76:	c3                   	ret    
    4c77:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    4c7e:	00 00 80 
    4c81:	c3                   	ret    

0000000000004c82 <efi_snp_stop>:
    4c82:	f3 0f 1e fa          	endbr64 
    4c86:	83 3d bb 4f 02 00 00 	cmpl   $0x0,0x24fbb(%rip)        # 29c48 <efi_snp_claimed>
    4c8d:	75 1c                	jne    4cab <efi_snp_stop+0x29>
    4c8f:	57                   	push   %rdi
    4c90:	48 8d 79 d8          	lea    -0x28(%rcx),%rdi
    4c94:	56                   	push   %rsi
    4c95:	50                   	push   %rax
    4c96:	c7 81 10 03 00 00 00 	movl   $0x0,0x310(%rcx)
    4c9d:	00 00 00 
    4ca0:	e8 78 ff ff ff       	call   4c1d <efi_snp_set_state>
    4ca5:	5a                   	pop    %rdx
    4ca6:	31 c0                	xor    %eax,%eax
    4ca8:	5e                   	pop    %rsi
    4ca9:	5f                   	pop    %rdi
    4caa:	c3                   	ret    
    4cab:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    4cb2:	00 00 80 
    4cb5:	c3                   	ret    

0000000000004cb6 <efi_snp_notify>:
    4cb6:	f3 0f 1e fa          	endbr64 
    4cba:	e8 fd f7 ff ff       	call   44bc <efi_snp_demux>
    4cbf:	48 89 f9             	mov    %rdi,%rcx
    4cc2:	48 89 c7             	mov    %rax,%rdi
    4cc5:	48 85 c0             	test   %rax,%rax
    4cc8:	74 13                	je     4cdd <efi_snp_notify+0x27>
    4cca:	83 b9 84 00 00 00 00 	cmpl   $0x0,0x84(%rcx)
    4cd1:	0f 94 80 34 03 00 00 	sete   0x334(%rax)
    4cd8:	e9 40 ff ff ff       	jmp    4c1d <efi_snp_set_state>
    4cdd:	c3                   	ret    

0000000000004cde <efi_snp_initialize>:
    4cde:	f3 0f 1e fa          	endbr64 
    4ce2:	41 55                	push   %r13
    4ce4:	41 54                	push   %r12
    4ce6:	55                   	push   %rbp
    4ce7:	57                   	push   %rdi
    4ce8:	56                   	push   %rsi
    4ce9:	53                   	push   %rbx
    4cea:	48 83 ec 28          	sub    $0x28,%rsp
    4cee:	83 3d 53 4f 02 00 00 	cmpl   $0x0,0x24f53(%rip)        # 29c48 <efi_snp_claimed>
    4cf5:	74 07                	je     4cfe <efi_snp_initialize+0x20>
    4cf7:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    4cfc:	eb 39                	jmp    4d37 <efi_snp_initialize+0x59>
    4cfe:	48 8b 05 73 53 02 00 	mov    0x25373(%rip),%rax        # 2a078 <efi_systab>
    4d05:	48 89 cd             	mov    %rcx,%rbp
    4d08:	b9 08 00 00 00       	mov    $0x8,%ecx
    4d0d:	4c 8b 68 60          	mov    0x60(%rax),%r13
    4d11:	41 ff 55 18          	call   *0x18(%r13)
    4d15:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    4d19:	49 89 c4             	mov    %rax,%r12
    4d1c:	e8 dd 91 00 00       	call   defe <netdev_open>
    4d21:	89 c3                	mov    %eax,%ebx
    4d23:	85 c0                	test   %eax,%eax
    4d25:	75 09                	jne    4d30 <efi_snp_initialize+0x52>
    4d27:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
    4d2b:	e8 ed fe ff ff       	call   4c1d <efi_snp_set_state>
    4d30:	4c 89 e1             	mov    %r12,%rcx
    4d33:	41 ff 55 20          	call   *0x20(%r13)
    4d37:	f7 db                	neg    %ebx
    4d39:	ba 01 00 00 00       	mov    $0x1,%edx
    4d3e:	48 83 c4 28          	add    $0x28,%rsp
    4d42:	48 89 d8             	mov    %rbx,%rax
    4d45:	48 c1 e2 3f          	shl    $0x3f,%rdx
    4d49:	83 e3 7f             	and    $0x7f,%ebx
    4d4c:	48 c1 e0 38          	shl    $0x38,%rax
    4d50:	48 21 d0             	and    %rdx,%rax
    4d53:	48 09 d8             	or     %rbx,%rax
    4d56:	5b                   	pop    %rbx
    4d57:	5e                   	pop    %rsi
    4d58:	5f                   	pop    %rdi
    4d59:	5d                   	pop    %rbp
    4d5a:	41 5c                	pop    %r12
    4d5c:	41 5d                	pop    %r13
    4d5e:	c3                   	ret    

0000000000004d5f <efi_snp_probe>:
    4d5f:	f3 0f 1e fa          	endbr64 
    4d63:	41 57                	push   %r15
    4d65:	41 56                	push   %r14
    4d67:	41 55                	push   %r13
    4d69:	41 54                	push   %r12
    4d6b:	45 31 e4             	xor    %r12d,%r12d
    4d6e:	55                   	push   %rbp
    4d6f:	48 89 fd             	mov    %rdi,%rbp
    4d72:	53                   	push   %rbx
    4d73:	48 83 ec 38          	sub    $0x38,%rsp
    4d77:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
    4d7b:	48 8b 05 ce 52 02 00 	mov    0x252ce(%rip),%rax        # 2a050 <__stack_chk_guard>
    4d82:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4d87:	48 8b 05 ea 52 02 00 	mov    0x252ea(%rip),%rax        # 2a078 <efi_systab>
    4d8e:	48 8b 58 60          	mov    0x60(%rax),%rbx
    4d92:	e8 50 74 01 00       	call   1c1e7 <efidev_parent>
    4d97:	48 85 c0             	test   %rax,%rax
    4d9a:	0f 84 e2 05 00 00    	je     5382 <efi_snp_probe+0x623>
    4da0:	bf 98 05 00 00       	mov    $0x598,%edi
    4da5:	49 89 c5             	mov    %rax,%r13
    4da8:	e8 89 79 00 00       	call   c736 <zalloc>
    4dad:	49 89 c7             	mov    %rax,%r15
    4db0:	48 85 c0             	test   %rax,%rax
    4db3:	75 0b                	jne    4dc0 <efi_snp_probe+0x61>
    4db5:	41 bc 77 1f ee ce    	mov    $0xceee1f77,%r12d
    4dbb:	e9 c2 05 00 00       	jmp    5382 <efi_snp_probe+0x623>
    4dc0:	48 89 ef             	mov    %rbp,%rdi
    4dc3:	e8 46 b1 00 00       	call   ff0e <ref_increment>
    4dc8:	49 8d 87 48 04 00 00 	lea    0x448(%r15),%rax
    4dcf:	49 89 6f 10          	mov    %rbp,0x10(%r15)
    4dd3:	49 89 87 48 04 00 00 	mov    %rax,0x448(%r15)
    4dda:	49 89 87 50 04 00 00 	mov    %rax,0x450(%r15)
    4de1:	48 8b 45 50          	mov    0x50(%rbp),%rax
    4de5:	4d 89 6f 18          	mov    %r13,0x18(%r15)
    4de9:	80 78 43 20          	cmpb   $0x20,0x43(%rax)
    4ded:	76 0b                	jbe    4dfa <efi_snp_probe+0x9b>
    4def:	41 bc 7d 1f ee c3    	mov    $0xc3ee1f7d,%r12d
    4df5:	e9 78 05 00 00       	jmp    5372 <efi_snp_probe+0x613>
    4dfa:	49 8d 47 28          	lea    0x28(%r15),%rax
    4dfe:	ba 80 00 00 00       	mov    $0x80,%edx
    4e03:	48 8d 35 56 02 02 00 	lea    0x20256(%rip),%rsi        # 25060 <efi_snp_device_snp>
    4e0a:	48 89 c7             	mov    %rax,%rdi
    4e0d:	48 89 04 24          	mov    %rax,(%rsp)
    4e11:	e8 d3 25 01 00       	call   173e9 <__memcpy>
    4e16:	49 8d 87 a8 00 00 00 	lea    0xa8(%r15),%rax
    4e1d:	4d 89 f9             	mov    %r15,%r9
    4e20:	4c 8d 05 d3 f7 ff ff 	lea    -0x82d(%rip),%r8        # 45fa <efi_snp_wait_for_packet>
    4e27:	57                   	push   %rdi
    4e28:	ba 10 00 00 00       	mov    $0x10,%edx
    4e2d:	b9 00 01 00 00       	mov    $0x100,%ecx
    4e32:	49 89 87 a0 00 00 00 	mov    %rax,0xa0(%r15)
    4e39:	49 8d 87 98 00 00 00 	lea    0x98(%r15),%rax
    4e40:	50                   	push   %rax
    4e41:	48 83 ec 20          	sub    $0x20,%rsp
    4e45:	ff 53 50             	call   *0x50(%rbx)
    4e48:	48 83 c4 30          	add    $0x30,%rsp
    4e4c:	48 85 c0             	test   %rax,%rax
    4e4f:	74 1d                	je     4e6e <efi_snp_probe+0x10f>
    4e51:	49 89 c4             	mov    %rax,%r12
    4e54:	49 c1 ec 38          	shr    $0x38,%r12
    4e58:	41 09 c4             	or     %eax,%r12d
    4e5b:	45 0f b6 e4          	movzbl %r12b,%r12d
    4e5f:	41 81 cc 00 e0 11 7f 	or     $0x7f11e000,%r12d
    4e66:	41 f7 dc             	neg    %r12d
    4e69:	e9 04 05 00 00       	jmp    5372 <efi_snp_probe+0x613>
    4e6e:	4d 8b 67 10          	mov    0x10(%r15),%r12
    4e72:	49 8d bf d0 02 00 00 	lea    0x2d0(%r15),%rdi
    4e79:	41 c7 87 a8 00 00 00 	movl   $0x0,0xa8(%r15)
    4e80:	00 00 00 00 
    4e84:	49 8b 4c 24 50       	mov    0x50(%r12),%rcx
    4e89:	49 8d 74 24 60       	lea    0x60(%r12),%rsi
    4e8e:	0f b6 41 43          	movzbl 0x43(%rcx),%eax
    4e92:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    4e97:	49 89 c6             	mov    %rax,%r14
    4e9a:	41 89 87 ac 00 00 00 	mov    %eax,0xac(%r15)
    4ea1:	0f b6 41 44          	movzbl 0x44(%rcx),%eax
    4ea5:	4c 89 f2             	mov    %r14,%rdx
    4ea8:	41 89 87 b0 00 00 00 	mov    %eax,0xb0(%r15)
    4eaf:	49 8b 84 24 e0 00 00 	mov    0xe0(%r12),%rax
    4eb6:	00 
    4eb7:	41 c7 87 c0 00 00 00 	movl   $0x7,0xc0(%r15)
    4ebe:	07 00 00 00 
    4ec2:	41 89 87 b4 00 00 00 	mov    %eax,0xb4(%r15)
    4ec9:	e8 1b 25 01 00       	call   173e9 <__memcpy>
    4ece:	49 8b 74 24 78       	mov    0x78(%r12),%rsi
    4ed3:	4c 89 f2             	mov    %r14,%rdx
    4ed6:	49 8d bf f0 02 00 00 	lea    0x2f0(%r15),%rdi
    4edd:	4d 8d b7 58 04 00 00 	lea    0x458(%r15),%r14
    4ee4:	e8 00 25 01 00       	call   173e9 <__memcpy>
    4ee9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4eee:	49 8d 7c 24 58       	lea    0x58(%r12),%rdi
    4ef3:	49 8d b7 10 03 00 00 	lea    0x310(%r15),%rsi
    4efa:	ff 51 18             	call   *0x18(%rcx)
    4efd:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4f02:	ba 28 00 00 00       	mov    $0x28,%edx
    4f07:	4c 89 f7             	mov    %r14,%rdi
    4f0a:	48 8d 35 6f f6 01 00 	lea    0x1f66f(%rip),%rsi        # 24580 <efi_snp_device_nii>
    4f11:	8b 41 40             	mov    0x40(%rcx),%eax
    4f14:	41 c6 87 31 03 00 00 	movb   $0x1,0x331(%r15)
    4f1b:	01 
    4f1c:	86 c4                	xchg   %al,%ah
    4f1e:	41 c6 87 33 03 00 00 	movb   $0x1,0x333(%r15)
    4f25:	01 
    4f26:	41 88 87 30 03 00 00 	mov    %al,0x330(%r15)
    4f2d:	41 83 bc 24 84 00 00 	cmpl   $0x0,0x84(%r12)
    4f34:	00 00 
    4f36:	41 0f 94 87 34 03 00 	sete   0x334(%r15)
    4f3d:	00 
    4f3e:	e8 a6 24 01 00       	call   173e9 <__memcpy>
    4f43:	49 8b 47 10          	mov    0x10(%r15),%rax
    4f47:	0f b6 35 69 f6 01 00 	movzbl 0x1f669(%rip),%esi        # 245b7 <efi_snp_undi+0x7>
    4f4e:	48 8d 15 5b f6 01 00 	lea    0x1f65b(%rip),%rdx        # 245b0 <efi_snp_undi>
    4f55:	49 89 97 60 04 00 00 	mov    %rdx,0x460(%r15)
    4f5c:	8b 48 30             	mov    0x30(%rax),%ecx
    4f5f:	48 8d 05 94 05 00 00 	lea    0x594(%rip),%rax        # 54fa <efi_undi_issue>
    4f66:	48 89 05 53 f6 01 00 	mov    %rax,0x1f653(%rip)        # 245c0 <efi_snp_undi+0x10>
    4f6d:	0f b6 05 46 f6 01 00 	movzbl 0x1f646(%rip),%eax        # 245ba <efi_snp_undi+0xa>
    4f74:	ff c9                	dec    %ecx
    4f76:	c1 e0 08             	shl    $0x8,%eax
    4f79:	66 41 89 8f 7c 04 00 	mov    %cx,0x47c(%r15)
    4f80:	00 
    4f81:	0f b7 c9             	movzwl %cx,%ecx
    4f84:	09 f0                	or     %esi,%eax
    4f86:	39 c8                	cmp    %ecx,%eax
    4f88:	0f 42 c1             	cmovb  %ecx,%eax
    4f8b:	31 c9                	xor    %ecx,%ecx
    4f8d:	88 05 24 f6 01 00    	mov    %al,0x1f624(%rip)        # 245b7 <efi_snp_undi+0x7>
    4f93:	88 25 21 f6 01 00    	mov    %ah,0x1f621(%rip)        # 245ba <efi_snp_undi+0xa>
    4f99:	48 89 d0             	mov    %rdx,%rax
    4f9c:	48 83 c2 20          	add    $0x20,%rdx
    4fa0:	48 ff c0             	inc    %rax
    4fa3:	02 48 ff             	add    -0x1(%rax),%cl
    4fa6:	48 39 d0             	cmp    %rdx,%rax
    4fa9:	75 f5                	jne    4fa0 <efi_snp_probe+0x241>
    4fab:	48 8b 45 40          	mov    0x40(%rbp),%rax
    4faf:	48 8d 15 2d d9 01 00 	lea    0x1d92d(%rip),%rdx        # 228e3 <.LC0>
    4fb6:	4c 8d 65 60          	lea    0x60(%rbp),%r12
    4fba:	28 0d f5 f5 01 00    	sub    %cl,0x1f5f5(%rip)        # 245b5 <efi_snp_undi+0x5>
    4fc0:	be 10 00 00 00       	mov    $0x10,%esi
    4fc5:	48 8d 0d 24 d4 01 00 	lea    0x1d424(%rip),%rcx        # 223f0 <product_short_name>
    4fcc:	49 8d bf f0 04 00 00 	lea    0x4f0(%r15),%rdi
    4fd3:	4c 8b 40 28          	mov    0x28(%rax),%r8
    4fd7:	31 c0                	xor    %eax,%eax
    4fd9:	e8 36 1a 00 00       	call   6a14 <efi_snprintf>
    4fde:	48 8b 45 50          	mov    0x50(%rbp),%rax
    4fe2:	4c 89 e7             	mov    %r12,%rdi
    4fe5:	ff 50 20             	call   *0x20(%rax)
    4fe8:	4c 8b 4d 40          	mov    0x40(%rbp),%r9
    4fec:	49 8d bf 10 05 00 00 	lea    0x510(%r15),%rdi
    4ff3:	48 8d 0d f6 d3 01 00 	lea    0x1d3f6(%rip),%rcx        # 223f0 <product_short_name>
    4ffa:	be 40 00 00 00       	mov    $0x40,%esi
    4fff:	4d 8b 41 28          	mov    0x28(%r9),%r8
    5003:	52                   	push   %rdx
    5004:	48 8d 15 de d8 01 00 	lea    0x1d8de(%rip),%rdx        # 228e9 <.LC1>
    500b:	50                   	push   %rax
    500c:	31 c0                	xor    %eax,%eax
    500e:	e8 01 1a 00 00       	call   6a14 <efi_snprintf>
    5013:	48 8d 05 7e f4 ff ff 	lea    -0xb82(%rip),%rax        # 4498 <efi_snp_get_driver_name>
    501a:	48 8d 4d 34          	lea    0x34(%rbp),%rcx
    501e:	be 0c 00 00 00       	mov    $0xc,%esi
    5023:	49 89 87 80 04 00 00 	mov    %rax,0x480(%r15)
    502a:	48 8d 05 75 f4 ff ff 	lea    -0xb8b(%rip),%rax        # 44a6 <efi_snp_get_controller_name>
    5031:	48 8d 15 c9 e6 01 00 	lea    0x1e6c9(%rip),%rdx        # 23701 <.LC0>
    5038:	49 89 87 88 04 00 00 	mov    %rax,0x488(%r15)
    503f:	48 8d 05 6c db 01 00 	lea    0x1db6c(%rip),%rax        # 22bb2 <.LC2>
    5046:	49 8d bf d8 04 00 00 	lea    0x4d8(%r15),%rdi
    504d:	49 89 87 90 04 00 00 	mov    %rax,0x490(%r15)
    5054:	49 8d 87 98 04 00 00 	lea    0x498(%r15),%rax
    505b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5060:	48 8b 05 d9 ff 01 00 	mov    0x1ffd9(%rip),%rax        # 25040 <efi_snp_load_file_protocol>
    5067:	49 89 87 98 04 00 00 	mov    %rax,0x498(%r15)
    506e:	31 c0                	xor    %eax,%eax
    5070:	e8 9f 19 00 00       	call   6a14 <efi_snprintf>
    5075:	49 8b bd 88 00 00 00 	mov    0x88(%r13),%rdi
    507c:	e8 09 1a 00 00       	call   6a8a <efi_devpath_len>
    5081:	48 8d 78 2f          	lea    0x2f(%rax),%rdi
    5085:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    508a:	e8 a7 76 00 00       	call   c736 <zalloc>
    508f:	59                   	pop    %rcx
    5090:	5e                   	pop    %rsi
    5091:	48 85 c0             	test   %rax,%rax
    5094:	49 89 87 90 05 00 00 	mov    %rax,0x590(%r15)
    509b:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    50a0:	48 89 c7             	mov    %rax,%rdi
    50a3:	75 0b                	jne    50b0 <efi_snp_probe+0x351>
    50a5:	41 bc 77 1f ee ce    	mov    $0xceee1f77,%r12d
    50ab:	e9 b0 02 00 00       	jmp    5360 <efi_snp_probe+0x601>
    50b0:	49 8b b5 88 00 00 00 	mov    0x88(%r13),%rsi
    50b7:	4c 89 c2             	mov    %r8,%rdx
    50ba:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    50bf:	e8 25 23 01 00       	call   173e9 <__memcpy>
    50c4:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    50c9:	4d 03 87 90 05 00 00 	add    0x590(%r15),%r8
    50d0:	31 c0                	xor    %eax,%eax
    50d2:	4c 89 c7             	mov    %r8,%rdi
    50d5:	b9 25 00 00 00       	mov    $0x25,%ecx
    50da:	f3 aa                	rep stos %al,%es:(%rdi)
    50dc:	66 41 c7 00 03 0b    	movw   $0xb03,(%r8)
    50e2:	49 8d 78 04          	lea    0x4(%r8),%rdi
    50e6:	4c 89 e6             	mov    %r12,%rsi
    50e9:	41 c6 40 02 25       	movb   $0x25,0x2(%r8)
    50ee:	48 8b 45 50          	mov    0x50(%rbp),%rax
    50f2:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    50f7:	0f b6 50 43          	movzbl 0x43(%rax),%edx
    50fb:	e8 e9 22 01 00       	call   173e9 <__memcpy>
    5100:	48 8b 45 50          	mov    0x50(%rbp),%rax
    5104:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    5109:	48 89 ef             	mov    %rbp,%rdi
    510c:	8b 40 40             	mov    0x40(%rax),%eax
    510f:	86 c4                	xchg   %al,%ah
    5111:	41 88 40 24          	mov    %al,0x24(%r8)
    5115:	e8 4c 93 00 00       	call   e466 <vlan_tag>
    511a:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    511f:	49 8d 50 25          	lea    0x25(%r8),%rdx
    5123:	85 c0                	test   %eax,%eax
    5125:	74 11                	je     5138 <efi_snp_probe+0x3d9>
    5127:	41 c7 40 25 03 14 06 	movl   $0x61403,0x25(%r8)
    512e:	00 
    512f:	49 8d 50 2b          	lea    0x2b(%r8),%rdx
    5133:	66 41 89 40 29       	mov    %ax,0x29(%r8)
    5138:	49 8d 87 80 04 00 00 	lea    0x480(%r15),%rax
    513f:	c7 02 7f ff 04 00    	movl   $0x4ff7f,(%rdx)
    5145:	49 8d 4f 20          	lea    0x20(%r15),%rcx
    5149:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    514e:	48 8d 05 7b f4 01 00 	lea    0x1f47b(%rip),%rax        # 245d0 <dummy_load_file_protocol_guid>
    5155:	4c 8d 25 04 f8 01 00 	lea    0x1f804(%rip),%r12        # 24960 <efi_nii_protocol_guid>
    515c:	6a 00                	push   $0x0
    515e:	4c 8d 0d 2b f9 01 00 	lea    0x1f92b(%rip),%r9        # 24a90 <efi_device_path_protocol_guid>
    5165:	48 8d 15 84 f7 01 00 	lea    0x1f784(%rip),%rdx        # 248f0 <efi_simple_network_protocol_guid>
    516c:	ff 74 24 10          	push   0x10(%rsp)
    5170:	50                   	push   %rax
    5171:	48 8d 05 38 f9 01 00 	lea    0x1f938(%rip),%rax        # 24ab0 <efi_component_name2_protocol_guid>
    5178:	ff 74 24 28          	push   0x28(%rsp)
    517c:	50                   	push   %rax
    517d:	48 8d 05 cc f7 01 00 	lea    0x1f7cc(%rip),%rax        # 24950 <efi_nii31_protocol_guid>
    5184:	41 56                	push   %r14
    5186:	50                   	push   %rax
    5187:	41 56                	push   %r14
    5189:	41 54                	push   %r12
    518b:	41 ff b7 90 05 00 00 	push   0x590(%r15)
    5192:	48 83 ec 20          	sub    $0x20,%rsp
    5196:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    519b:	ff 93 48 01 00 00    	call   *0x148(%rbx)
    51a1:	48 83 c4 70          	add    $0x70,%rsp
    51a5:	48 85 c0             	test   %rax,%rax
    51a8:	74 1d                	je     51c7 <efi_snp_probe+0x468>
    51aa:	49 89 c4             	mov    %rax,%r12
    51ad:	49 c1 ec 38          	shr    $0x38,%r12
    51b1:	41 09 c4             	or     %eax,%r12d
    51b4:	45 0f b6 e4          	movzbl %r12b,%r12d
    51b8:	41 81 cc 00 e0 11 7f 	or     $0x7f11e000,%r12d
    51bf:	41 f7 dc             	neg    %r12d
    51c2:	e9 8d 01 00 00       	jmp    5354 <efi_snp_probe+0x5f5>
    51c7:	49 8b 4f 20          	mov    0x20(%r15),%rcx
    51cb:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
    51d0:	6a 30                	push   $0x30
    51d2:	4c 89 e2             	mov    %r12,%rdx
    51d5:	4c 8b 0d 8c 4e 02 00 	mov    0x24e8c(%rip),%r9        # 2a068 <efi_image_handle>
    51dc:	51                   	push   %rcx
    51dd:	48 83 ec 20          	sub    $0x20,%rsp
    51e1:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
    51e6:	ff 93 18 01 00 00    	call   *0x118(%rbx)
    51ec:	48 83 c4 30          	add    $0x30,%rsp
    51f0:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    51f5:	48 85 c0             	test   %rax,%rax
    51f8:	74 1d                	je     5217 <efi_snp_probe+0x4b8>
    51fa:	49 89 c4             	mov    %rax,%r12
    51fd:	49 c1 ec 38          	shr    $0x38,%r12
    5201:	41 09 c4             	or     %eax,%r12d
    5204:	45 0f b6 e4          	movzbl %r12b,%r12d
    5208:	41 81 cc 00 e0 11 7f 	or     $0x7f11e000,%r12d
    520f:	41 f7 dc             	neg    %r12d
    5212:	e9 e3 00 00 00       	jmp    52fa <efi_snp_probe+0x59b>
    5217:	49 8b 4f 20          	mov    0x20(%r15),%rcx
    521b:	6a 30                	push   $0x30
    521d:	48 8d 15 2c f7 01 00 	lea    0x1f72c(%rip),%rdx        # 24950 <efi_nii31_protocol_guid>
    5224:	4c 8b 0d 3d 4e 02 00 	mov    0x24e3d(%rip),%r9        # 2a068 <efi_image_handle>
    522b:	51                   	push   %rcx
    522c:	48 83 ec 20          	sub    $0x20,%rsp
    5230:	ff 93 18 01 00 00    	call   *0x118(%rbx)
    5236:	48 83 c4 30          	add    $0x30,%rsp
    523a:	48 85 c0             	test   %rax,%rax
    523d:	74 1a                	je     5259 <efi_snp_probe+0x4fa>
    523f:	49 89 c4             	mov    %rax,%r12
    5242:	49 c1 ec 38          	shr    $0x38,%r12
    5246:	41 09 c4             	or     %eax,%r12d
    5249:	45 0f b6 e4          	movzbl %r12b,%r12d
    524d:	41 81 cc 00 e0 11 7f 	or     $0x7f11e000,%r12d
    5254:	41 f7 dc             	neg    %r12d
    5257:	eb 7e                	jmp    52d7 <efi_snp_probe+0x578>
    5259:	49 8b 77 20          	mov    0x20(%r15),%rsi
    525d:	49 8b bd 80 00 00 00 	mov    0x80(%r13),%rdi
    5264:	e8 2e 18 00 00       	call   6a97 <efi_child_add>
    5269:	41 89 c4             	mov    %eax,%r12d
    526c:	85 c0                	test   %eax,%eax
    526e:	74 25                	je     5295 <efi_snp_probe+0x536>
    5270:	49 8b 4f 20          	mov    0x20(%r15),%rcx
    5274:	48 83 ec 20          	sub    $0x20,%rsp
    5278:	4c 8b 05 e9 4d 02 00 	mov    0x24de9(%rip),%r8        # 2a068 <efi_image_handle>
    527f:	48 8d 15 ca f6 01 00 	lea    0x1f6ca(%rip),%rdx        # 24950 <efi_nii31_protocol_guid>
    5286:	49 89 c9             	mov    %rcx,%r9
    5289:	ff 93 20 01 00 00    	call   *0x120(%rbx)
    528f:	48 83 c4 20          	add    $0x20,%rsp
    5293:	eb 42                	jmp    52d7 <efi_snp_probe+0x578>
    5295:	4c 89 ff             	mov    %r15,%rdi
    5298:	e8 50 10 00 00       	call   62ed <efi_snp_hii_install>
    529d:	48 8d 35 3c fe 01 00 	lea    0x1fe3c(%rip),%rsi        # 250e0 <efi_snp_devices>
    52a4:	4c 89 ff             	mov    %r15,%rdi
    52a7:	e8 e5 6e 00 00       	call   c191 <extern_list_add>
    52ac:	49 8b 8d 80 00 00 00 	mov    0x80(%r13),%rcx
    52b3:	48 83 ec 20          	sub    $0x20,%rsp
    52b7:	4c 8b 05 aa 4d 02 00 	mov    0x24daa(%rip),%r8        # 2a068 <efi_image_handle>
    52be:	48 8d 15 cb f7 01 00 	lea    0x1f7cb(%rip),%rdx        # 24a90 <efi_device_path_protocol_guid>
    52c5:	49 89 c9             	mov    %rcx,%r9
    52c8:	ff 93 20 01 00 00    	call   *0x120(%rbx)
    52ce:	48 83 c4 20          	add    $0x20,%rsp
    52d2:	e9 ab 00 00 00       	jmp    5382 <efi_snp_probe+0x623>
    52d7:	49 8b 4f 20          	mov    0x20(%r15),%rcx
    52db:	48 83 ec 20          	sub    $0x20,%rsp
    52df:	4c 8b 05 82 4d 02 00 	mov    0x24d82(%rip),%r8        # 2a068 <efi_image_handle>
    52e6:	48 8d 15 73 f6 01 00 	lea    0x1f673(%rip),%rdx        # 24960 <efi_nii_protocol_guid>
    52ed:	49 89 c9             	mov    %rcx,%r9
    52f0:	ff 93 20 01 00 00    	call   *0x120(%rbx)
    52f6:	48 83 c4 20          	add    $0x20,%rsp
    52fa:	48 8d 05 cf f2 01 00 	lea    0x1f2cf(%rip),%rax        # 245d0 <dummy_load_file_protocol_guid>
    5301:	6a 00                	push   $0x0
    5303:	49 8b 4f 20          	mov    0x20(%r15),%rcx
    5307:	4c 8d 0d 82 f7 01 00 	lea    0x1f782(%rip),%r9        # 24a90 <efi_device_path_protocol_guid>
    530e:	ff 74 24 10          	push   0x10(%rsp)
    5312:	48 8d 15 d7 f5 01 00 	lea    0x1f5d7(%rip),%rdx        # 248f0 <efi_simple_network_protocol_guid>
    5319:	50                   	push   %rax
    531a:	48 8d 05 8f f7 01 00 	lea    0x1f78f(%rip),%rax        # 24ab0 <efi_component_name2_protocol_guid>
    5321:	ff 74 24 28          	push   0x28(%rsp)
    5325:	50                   	push   %rax
    5326:	48 8d 05 23 f6 01 00 	lea    0x1f623(%rip),%rax        # 24950 <efi_nii31_protocol_guid>
    532d:	41 56                	push   %r14
    532f:	50                   	push   %rax
    5330:	48 8d 05 29 f6 01 00 	lea    0x1f629(%rip),%rax        # 24960 <efi_nii_protocol_guid>
    5337:	41 56                	push   %r14
    5339:	50                   	push   %rax
    533a:	41 ff b7 90 05 00 00 	push   0x590(%r15)
    5341:	48 83 ec 20          	sub    $0x20,%rsp
    5345:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    534a:	ff 93 50 01 00 00    	call   *0x150(%rbx)
    5350:	48 83 c4 70          	add    $0x70,%rsp
    5354:	49 8b bf 90 05 00 00 	mov    0x590(%r15),%rdi
    535b:	e8 c2 73 00 00       	call   c722 <free>
    5360:	48 83 ec 20          	sub    $0x20,%rsp
    5364:	49 8b 8f 98 00 00 00 	mov    0x98(%r15),%rcx
    536b:	ff 53 70             	call   *0x70(%rbx)
    536e:	48 83 c4 20          	add    $0x20,%rsp
    5372:	48 89 ef             	mov    %rbp,%rdi
    5375:	e8 a0 ab 00 00       	call   ff1a <ref_decrement>
    537a:	4c 89 ff             	mov    %r15,%rdi
    537d:	e8 a0 73 00 00       	call   c722 <free>
    5382:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    5387:	48 2b 05 c2 4c 02 00 	sub    0x24cc2(%rip),%rax        # 2a050 <__stack_chk_guard>
    538e:	74 05                	je     5395 <efi_snp_probe+0x636>
    5390:	e8 cb d6 ff ff       	call   2a60 <__stack_chk_fail>
    5395:	48 83 c4 38          	add    $0x38,%rsp
    5399:	44 89 e0             	mov    %r12d,%eax
    539c:	5b                   	pop    %rbx
    539d:	5d                   	pop    %rbp
    539e:	41 5c                	pop    %r12
    53a0:	41 5d                	pop    %r13
    53a2:	41 5e                	pop    %r14
    53a4:	41 5f                	pop    %r15
    53a6:	c3                   	ret    

00000000000053a7 <efi_snp_flush>:
    53a7:	55                   	push   %rbp
    53a8:	53                   	push   %rbx
    53a9:	48 8d 9f 48 04 00 00 	lea    0x448(%rdi),%rbx
    53b0:	52                   	push   %rdx
    53b1:	4c 8b 87 48 04 00 00 	mov    0x448(%rdi),%r8
    53b8:	48 c7 87 40 04 00 00 	movq   $0x0,0x440(%rdi)
    53bf:	00 00 00 00 
    53c3:	49 8b 28             	mov    (%r8),%rbp
    53c6:	49 39 d8             	cmp    %rbx,%r8
    53c9:	74 1f                	je     53ea <efi_snp_flush+0x43>
    53cb:	49 8b 10             	mov    (%r8),%rdx
    53ce:	49 8b 40 08          	mov    0x8(%r8),%rax
    53d2:	4c 89 c7             	mov    %r8,%rdi
    53d5:	48 89 42 08          	mov    %rax,0x8(%rdx)
    53d9:	48 89 10             	mov    %rdx,(%rax)
    53dc:	e8 85 49 00 00       	call   9d66 <free_iob>
    53e1:	49 89 e8             	mov    %rbp,%r8
    53e4:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
    53e8:	eb dc                	jmp    53c6 <efi_snp_flush+0x1f>
    53ea:	58                   	pop    %rax
    53eb:	5b                   	pop    %rbx
    53ec:	5d                   	pop    %rbp
    53ed:	c3                   	ret    

00000000000053ee <efi_snp_reset>:
    53ee:	f3 0f 1e fa          	endbr64 
    53f2:	41 55                	push   %r13
    53f4:	41 54                	push   %r12
    53f6:	55                   	push   %rbp
    53f7:	57                   	push   %rdi
    53f8:	56                   	push   %rsi
    53f9:	53                   	push   %rbx
    53fa:	48 83 ec 28          	sub    $0x28,%rsp
    53fe:	83 3d 43 48 02 00 00 	cmpl   $0x0,0x24843(%rip)        # 29c48 <efi_snp_claimed>
    5405:	74 07                	je     540e <efi_snp_reset+0x20>
    5407:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    540c:	eb 55                	jmp    5463 <efi_snp_reset+0x75>
    540e:	48 8b 05 63 4c 02 00 	mov    0x24c63(%rip),%rax        # 2a078 <efi_systab>
    5415:	48 89 cb             	mov    %rcx,%rbx
    5418:	48 8d 69 d8          	lea    -0x28(%rcx),%rbp
    541c:	b9 08 00 00 00       	mov    $0x8,%ecx
    5421:	4c 8b 68 60          	mov    0x60(%rax),%r13
    5425:	41 ff 55 18          	call   *0x18(%r13)
    5429:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    542d:	49 89 c4             	mov    %rax,%r12
    5430:	e8 20 8b 00 00       	call   df55 <netdev_close>
    5435:	48 89 ef             	mov    %rbp,%rdi
    5438:	e8 e0 f7 ff ff       	call   4c1d <efi_snp_set_state>
    543d:	48 89 ef             	mov    %rbp,%rdi
    5440:	e8 62 ff ff ff       	call   53a7 <efi_snp_flush>
    5445:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    5449:	e8 b0 8a 00 00       	call   defe <netdev_open>
    544e:	89 c3                	mov    %eax,%ebx
    5450:	85 c0                	test   %eax,%eax
    5452:	75 08                	jne    545c <efi_snp_reset+0x6e>
    5454:	48 89 ef             	mov    %rbp,%rdi
    5457:	e8 c1 f7 ff ff       	call   4c1d <efi_snp_set_state>
    545c:	4c 89 e1             	mov    %r12,%rcx
    545f:	41 ff 55 20          	call   *0x20(%r13)
    5463:	f7 db                	neg    %ebx
    5465:	ba 01 00 00 00       	mov    $0x1,%edx
    546a:	48 83 c4 28          	add    $0x28,%rsp
    546e:	48 89 d8             	mov    %rbx,%rax
    5471:	48 c1 e2 3f          	shl    $0x3f,%rdx
    5475:	83 e3 7f             	and    $0x7f,%ebx
    5478:	48 c1 e0 38          	shl    $0x38,%rax
    547c:	48 21 d0             	and    %rdx,%rax
    547f:	48 09 d8             	or     %rbx,%rax
    5482:	5b                   	pop    %rbx
    5483:	5e                   	pop    %rsi
    5484:	5f                   	pop    %rdi
    5485:	5d                   	pop    %rbp
    5486:	41 5c                	pop    %r12
    5488:	41 5d                	pop    %r13
    548a:	c3                   	ret    

000000000000548b <efi_snp_shutdown>:
    548b:	f3 0f 1e fa          	endbr64 
    548f:	83 3d b2 47 02 00 00 	cmpl   $0x0,0x247b2(%rip)        # 29c48 <efi_snp_claimed>
    5496:	75 57                	jne    54ef <efi_snp_shutdown+0x64>
    5498:	41 55                	push   %r13
    549a:	4c 8d 69 d8          	lea    -0x28(%rcx),%r13
    549e:	41 54                	push   %r12
    54a0:	55                   	push   %rbp
    54a1:	57                   	push   %rdi
    54a2:	56                   	push   %rsi
    54a3:	53                   	push   %rbx
    54a4:	48 89 cb             	mov    %rcx,%rbx
    54a7:	b9 08 00 00 00       	mov    $0x8,%ecx
    54ac:	48 83 ec 28          	sub    $0x28,%rsp
    54b0:	48 8b 05 c1 4b 02 00 	mov    0x24bc1(%rip),%rax        # 2a078 <efi_systab>
    54b7:	48 8b 68 60          	mov    0x60(%rax),%rbp
    54bb:	ff 55 18             	call   *0x18(%rbp)
    54be:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    54c2:	49 89 c4             	mov    %rax,%r12
    54c5:	e8 8b 8a 00 00       	call   df55 <netdev_close>
    54ca:	4c 89 ef             	mov    %r13,%rdi
    54cd:	e8 4b f7 ff ff       	call   4c1d <efi_snp_set_state>
    54d2:	4c 89 ef             	mov    %r13,%rdi
    54d5:	e8 cd fe ff ff       	call   53a7 <efi_snp_flush>
    54da:	4c 89 e1             	mov    %r12,%rcx
    54dd:	ff 55 20             	call   *0x20(%rbp)
    54e0:	48 83 c4 28          	add    $0x28,%rsp
    54e4:	31 c0                	xor    %eax,%eax
    54e6:	5b                   	pop    %rbx
    54e7:	5e                   	pop    %rsi
    54e8:	5f                   	pop    %rdi
    54e9:	5d                   	pop    %rbp
    54ea:	41 5c                	pop    %r12
    54ec:	41 5d                	pop    %r13
    54ee:	c3                   	ret    
    54ef:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    54f6:	00 00 80 
    54f9:	c3                   	ret    

00000000000054fa <efi_undi_issue>:
    54fa:	f3 0f 1e fa          	endbr64 
    54fe:	41 55                	push   %r13
    5500:	48 8d 15 d9 fb 01 00 	lea    0x1fbd9(%rip),%rdx        # 250e0 <efi_snp_devices>
    5507:	41 54                	push   %r12
    5509:	55                   	push   %rbp
    550a:	57                   	push   %rdi
    550b:	56                   	push   %rsi
    550c:	53                   	push   %rbx
    550d:	48 89 cb             	mov    %rcx,%rbx
    5510:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    5517:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    551b:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
    551f:	48 8b 05 2a 4b 02 00 	mov    0x24b2a(%rip),%rax        # 2a050 <__stack_chk_guard>
    5526:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    552d:	00 
    552e:	31 c0                	xor    %eax,%eax
    5530:	44 0f b7 43 1c       	movzwl 0x1c(%rbx),%r8d
    5535:	48 8b 35 a4 fb 01 00 	mov    0x1fba4(%rip),%rsi        # 250e0 <efi_snp_devices>
    553c:	48 39 d6             	cmp    %rdx,%rsi
    553f:	74 14                	je     5555 <efi_undi_issue+0x5b>
    5541:	4c 8b 6e 10          	mov    0x10(%rsi),%r13
    5545:	41 8b 45 30          	mov    0x30(%r13),%eax
    5549:	ff c8                	dec    %eax
    554b:	41 39 c0             	cmp    %eax,%r8d
    554e:	74 11                	je     5561 <efi_undi_issue+0x67>
    5550:	48 8b 36             	mov    (%rsi),%rsi
    5553:	eb e7                	jmp    553c <efi_undi_issue+0x42>
    5555:	c7 43 18 01 00 00 80 	movl   $0x80000001,0x18(%rbx)
    555c:	e9 cd 03 00 00       	jmp    592e <efi_undi_issue+0x434>
    5561:	83 3d e0 46 02 00 00 	cmpl   $0x0,0x246e0(%rip)        # 29c48 <efi_snp_claimed>
    5568:	74 0c                	je     5576 <efi_undi_issue+0x7c>
    556a:	c7 43 18 03 00 00 80 	movl   $0x80000003,0x18(%rbx)
    5571:	e9 b8 03 00 00       	jmp    592e <efi_undi_issue+0x434>
    5576:	66 83 3b 11          	cmpw   $0x11,(%rbx)
    557a:	c7 43 18 00 00 00 c0 	movl   $0xc0000000,0x18(%rbx)
    5581:	0f 87 64 03 00 00    	ja     58eb <efi_undi_issue+0x3f1>
    5587:	0f b7 03             	movzwl (%rbx),%eax
    558a:	48 8d 15 af ce 01 00 	lea    0x1ceaf(%rip),%rdx        # 22440 <efi_attr_fcols.1+0x18>
    5591:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    5595:	48 01 d0             	add    %rdx,%rax
    5598:	3e ff e0             	notrack jmp *%rax
    559b:	8b 86 a8 00 00 00    	mov    0xa8(%rsi),%eax
    55a1:	83 f8 02             	cmp    $0x2,%eax
    55a4:	75 0b                	jne    55b1 <efi_undi_issue+0xb7>
    55a6:	66 c7 43 1a 02 c0    	movw   $0xc002,0x1a(%rbx)
    55ac:	e9 7d 03 00 00       	jmp    592e <efi_undi_issue+0x434>
    55b1:	ff c8                	dec    %eax
    55b3:	0f 85 75 03 00 00    	jne    592e <efi_undi_issue+0x434>
    55b9:	66 c7 43 1a 01 c0    	movw   $0xc001,0x1a(%rbx)
    55bf:	e9 6a 03 00 00       	jmp    592e <efi_undi_issue+0x434>
    55c4:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    55c8:	e8 81 f6 ff ff       	call   4c4e <efi_snp_start>
    55cd:	e9 12 03 00 00       	jmp    58e4 <efi_undi_issue+0x3ea>
    55d2:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    55d6:	e8 a7 f6 ff ff       	call   4c82 <efi_snp_stop>
    55db:	e9 04 03 00 00       	jmp    58e4 <efi_undi_issue+0x3ea>
    55e0:	49 8b 55 50          	mov    0x50(%r13),%rdx
    55e4:	48 89 ef             	mov    %rbp,%rdi
    55e7:	b9 2f 00 00 00       	mov    $0x2f,%ecx
    55ec:	31 c0                	xor    %eax,%eax
    55ee:	f3 aa                	rep stos %al,%es:(%rdi)
    55f0:	44 0f b6 42 44       	movzbl 0x44(%rdx),%r8d
    55f5:	49 8b 8d d8 00 00 00 	mov    0xd8(%r13),%rcx
    55fc:	44 29 c1             	sub    %r8d,%ecx
    55ff:	66 44 89 45 1e       	mov    %r8w,0x1e(%rbp)
    5604:	89 4d 04             	mov    %ecx,0x4(%rbp)
    5607:	0f b6 42 43          	movzbl 0x43(%rdx),%eax
    560b:	66 89 45 20          	mov    %ax,0x20(%rbp)
    560f:	8b 42 40             	mov    0x40(%rdx),%eax
    5612:	86 c4                	xchg   %al,%ah
    5614:	88 45 2c             	mov    %al,0x2c(%rbp)
    5617:	66 83 4b 1a 03       	orw    $0x3,0x1a(%rbx)
    561c:	e9 0d 03 00 00       	jmp    592e <efi_undi_issue+0x434>
    5621:	45 31 c0             	xor    %r8d,%r8d
    5624:	31 d2                	xor    %edx,%edx
    5626:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    562a:	e8 af f6 ff ff       	call   4cde <efi_snp_initialize>
    562f:	48 85 c0             	test   %rax,%rax
    5632:	0f 85 bd 02 00 00    	jne    58f5 <efi_undi_issue+0x3fb>
    5638:	41 83 bd 84 00 00 00 	cmpl   $0x0,0x84(%r13)
    563f:	00 
    5640:	0f 84 e8 02 00 00    	je     592e <efi_undi_issue+0x434>
    5646:	66 83 4b 1a 01       	orw    $0x1,0x1a(%rbx)
    564b:	e9 de 02 00 00       	jmp    592e <efi_undi_issue+0x434>
    5650:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5654:	31 d2                	xor    %edx,%edx
    5656:	e8 93 fd ff ff       	call   53ee <efi_snp_reset>
    565b:	e9 84 02 00 00       	jmp    58e4 <efi_undi_issue+0x3ea>
    5660:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5664:	e8 22 fe ff ff       	call   548b <efi_snp_shutdown>
    5669:	e9 76 02 00 00       	jmp    58e4 <efi_undi_issue+0x3ea>
    566e:	66 c7 43 1a 1b c0    	movw   $0xc01b,0x1a(%rbx)
    5674:	e9 b5 02 00 00       	jmp    592e <efi_undi_issue+0x434>
    5679:	4d 8b 65 50          	mov    0x50(%r13),%r12
    567d:	66 8b 53 02          	mov    0x2(%rbx),%dx
    5681:	48 85 c9             	test   %rcx,%rcx
    5684:	75 57                	jne    56dd <efi_undi_issue+0x1e3>
    5686:	f6 c2 01             	test   $0x1,%dl
    5689:	75 52                	jne    56dd <efi_undi_issue+0x1e3>
    568b:	48 85 ed             	test   %rbp,%rbp
    568e:	0f 84 9a 02 00 00    	je     592e <efi_undi_issue+0x434>
    5694:	48 89 ef             	mov    %rbp,%rdi
    5697:	b9 60 00 00 00       	mov    $0x60,%ecx
    569c:	31 c0                	xor    %eax,%eax
    569e:	f3 aa                	rep stos %al,%es:(%rdi)
    56a0:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    56a6:	49 8d 75 60          	lea    0x60(%r13),%rsi
    56aa:	48 89 ef             	mov    %rbp,%rdi
    56ad:	e8 37 1d 01 00       	call   173e9 <__memcpy>
    56b2:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    56b8:	49 8b 75 78          	mov    0x78(%r13),%rsi
    56bc:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    56c0:	e8 24 1d 01 00       	call   173e9 <__memcpy>
    56c5:	41 0f b6 54 24 42    	movzbl 0x42(%r12),%edx
    56cb:	49 8d 75 58          	lea    0x58(%r13),%rsi
    56cf:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
    56d3:	e8 11 1d 01 00       	call   173e9 <__memcpy>
    56d8:	e9 51 02 00 00       	jmp    592e <efi_undi_issue+0x434>
    56dd:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    56e1:	83 e2 01             	and    $0x1,%edx
    56e4:	49 89 c8             	mov    %rcx,%r8
    56e7:	4c 89 c9             	mov    %r9,%rcx
    56ea:	e8 dd ef ff ff       	call   46cc <efi_snp_station_address>
    56ef:	48 85 c0             	test   %rax,%rax
    56f2:	74 97                	je     568b <efi_undi_issue+0x191>
    56f4:	e9 fc 01 00 00       	jmp    58f5 <efi_undi_issue+0x3fb>
    56f9:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
    56fe:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5702:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    5707:	e8 35 ee ff ff       	call   4541 <efi_snp_get_status>
    570c:	48 85 c0             	test   %rax,%rax
    570f:	0f 85 e0 01 00 00    	jne    58f5 <efi_undi_issue+0x3fb>
    5715:	48 89 ef             	mov    %rbp,%rdi
    5718:	b9 08 01 00 00       	mov    $0x108,%ecx
    571d:	f3 aa                	rep stos %al,%es:(%rdi)
    571f:	8b 44 24 48          	mov    0x48(%rsp),%eax
    5723:	a8 01                	test   $0x1,%al
    5725:	74 05                	je     572c <efi_undi_issue+0x232>
    5727:	66 83 4b 1a 01       	orw    $0x1,0x1a(%rbx)
    572c:	a8 02                	test   $0x2,%al
    572e:	74 05                	je     5735 <efi_undi_issue+0x23b>
    5730:	66 83 4b 1a 02       	orw    $0x2,0x1a(%rbx)
    5735:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    573a:	48 85 c0             	test   %rax,%rax
    573d:	74 06                	je     5745 <efi_undi_issue+0x24b>
    573f:	48 89 45 08          	mov    %rax,0x8(%rbp)
    5743:	eb 22                	jmp    5767 <efi_undi_issue+0x26d>
    5745:	66 8b 43 1a          	mov    0x1a(%rbx),%ax
    5749:	8b be 44 04 00 00    	mov    0x444(%rsi),%edi
    574f:	89 c2                	mov    %eax,%edx
    5751:	83 ca 20             	or     $0x20,%edx
    5754:	66 89 53 1a          	mov    %dx,0x1a(%rbx)
    5758:	39 be 40 04 00 00    	cmp    %edi,0x440(%rsi)
    575e:	75 07                	jne    5767 <efi_undi_issue+0x26d>
    5760:	83 c8 30             	or     $0x30,%eax
    5763:	66 89 43 1a          	mov    %ax,0x1a(%rbx)
    5767:	48 8b 86 48 04 00 00 	mov    0x448(%rsi),%rax
    576e:	48 8d 96 48 04 00 00 	lea    0x448(%rsi),%rdx
    5775:	48 39 d0             	cmp    %rdx,%rax
    5778:	74 10                	je     578a <efi_undi_issue+0x290>
    577a:	48 85 c0             	test   %rax,%rax
    577d:	74 0b                	je     578a <efi_undi_issue+0x290>
    577f:	48 8b 50 20          	mov    0x20(%rax),%rdx
    5783:	48 2b 50 18          	sub    0x18(%rax),%rdx
    5787:	89 55 00             	mov    %edx,0x0(%rbp)
    578a:	48 8b 46 10          	mov    0x10(%rsi),%rax
    578e:	83 b8 84 00 00 00 00 	cmpl   $0x0,0x84(%rax)
    5795:	0f 84 93 01 00 00    	je     592e <efi_undi_issue+0x434>
    579b:	66 83 4b 1a 40       	orw    $0x40,0x1a(%rbx)
    57a0:	e9 89 01 00 00       	jmp    592e <efi_undi_issue+0x434>
    57a5:	4d 8b 4d 50          	mov    0x50(%r13),%r9
    57a9:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    57ad:	f6 43 02 01          	testb  $0x1,0x2(%rbx)
    57b1:	74 0b                	je     57be <efi_undi_issue+0x2c4>
    57b3:	48 8b 41 4c          	mov    0x4c(%rcx),%rax
    57b7:	44 0f b7 41 44       	movzwl 0x44(%rcx),%r8d
    57bc:	eb 09                	jmp    57c7 <efi_undi_issue+0x2cd>
    57be:	48 8b 41 40          	mov    0x40(%rcx),%rax
    57c2:	44 0f b7 41 4c       	movzwl 0x4c(%rcx),%r8d
    57c7:	45 0f b6 51 44       	movzbl 0x44(%r9),%r10d
    57cc:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    57d1:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
    57d6:	4c 89 ef             	mov    %r13,%rdi
    57d9:	4c 01 d0             	add    %r10,%rax
    57dc:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    57e1:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    57e6:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    57eb:	41 ff 51 08          	call   *0x8(%r9)
    57ef:	89 c2                	mov    %eax,%edx
    57f1:	85 c0                	test   %eax,%eax
    57f3:	0f 84 35 01 00 00    	je     592e <efi_undi_issue+0x434>
    57f9:	f7 da                	neg    %edx
    57fb:	b9 01 00 00 00       	mov    $0x1,%ecx
    5800:	48 89 d0             	mov    %rdx,%rax
    5803:	48 c1 e1 3f          	shl    $0x3f,%rcx
    5807:	83 e2 7f             	and    $0x7f,%edx
    580a:	48 c1 e0 38          	shl    $0x38,%rax
    580e:	48 21 c8             	and    %rcx,%rax
    5811:	48 09 d0             	or     %rdx,%rax
    5814:	e9 cb 00 00 00       	jmp    58e4 <efi_undi_issue+0x3ea>
    5819:	44 8b 41 08          	mov    0x8(%rcx),%r8d
    581d:	4c 8d 56 28          	lea    0x28(%rsi),%r10
    5821:	31 d2                	xor    %edx,%edx
    5823:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    582a:	00 00 
    582c:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    5833:	00 00 
    5835:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    583c:	00 00 
    583e:	4c 8b 09             	mov    (%rcx),%r9
    5841:	4c 89 d1             	mov    %r10,%rcx
    5844:	e8 d4 f1 ff ff       	call   4a1d <efi_snp_transmit>
    5849:	e9 96 00 00 00       	jmp    58e4 <efi_undi_issue+0x3ea>
    584e:	8b 41 08             	mov    0x8(%rcx),%eax
    5851:	4c 8b 09             	mov    (%rcx),%r9
    5854:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5858:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
    585d:	4d 8b 65 50          	mov    0x50(%r13),%r12
    5861:	48 8d b4 24 88 00 00 	lea    0x88(%rsp),%rsi
    5868:	00 
    5869:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    586e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    5873:	4c 8d ac 24 a8 00 00 	lea    0xa8(%rsp),%r13
    587a:	00 
    587b:	48 8d 44 24 46       	lea    0x46(%rsp),%rax
    5880:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    5885:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
    588a:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    588f:	e8 80 ef ff ff       	call   4814 <efi_snp_receive>
    5894:	48 85 c0             	test   %rax,%rax
    5897:	75 5c                	jne    58f5 <efi_undi_issue+0x3fb>
    5899:	48 89 ef             	mov    %rbp,%rdi
    589c:	b9 50 00 00 00       	mov    $0x50,%ecx
    58a1:	f3 aa                	rep stos %al,%es:(%rdi)
    58a3:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    58a9:	48 89 ef             	mov    %rbp,%rdi
    58ac:	e8 38 1b 01 00       	call   173e9 <__memcpy>
    58b1:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    58b7:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    58bb:	4c 89 ee             	mov    %r13,%rsi
    58be:	e8 26 1b 01 00       	call   173e9 <__memcpy>
    58c3:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    58c8:	89 45 40             	mov    %eax,0x40(%rbp)
    58cb:	66 8b 44 24 46       	mov    0x46(%rsp),%ax
    58d0:	66 89 45 44          	mov    %ax,0x44(%rbp)
    58d4:	41 0f b6 44 24 44    	movzbl 0x44(%r12),%eax
    58da:	c6 45 48 04          	movb   $0x4,0x48(%rbp)
    58de:	66 89 45 46          	mov    %ax,0x46(%rbp)
    58e2:	eb 4a                	jmp    592e <efi_undi_issue+0x434>
    58e4:	48 85 c0             	test   %rax,%rax
    58e7:	75 0c                	jne    58f5 <efi_undi_issue+0x3fb>
    58e9:	eb 43                	jmp    592e <efi_undi_issue+0x434>
    58eb:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    58f2:	00 00 80 
    58f5:	66 8b 53 1a          	mov    0x1a(%rbx),%dx
    58f9:	66 81 e2 ff 3f       	and    $0x3fff,%dx
    58fe:	66 81 ca 00 80       	or     $0x8000,%dx
    5903:	66 89 53 1a          	mov    %dx,0x1a(%rbx)
    5907:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    590e:	ff ff 7f 
    5911:	48 01 d0             	add    %rdx,%rax
    5914:	ba 01 00 00 00       	mov    $0x1,%edx
    5919:	48 83 f8 16          	cmp    $0x16,%rax
    591d:	77 0b                	ja     592a <efi_undi_issue+0x430>
    591f:	48 8d 15 6a cb 01 00 	lea    0x1cb6a(%rip),%rdx        # 22490 <CSWTCH.263>
    5926:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    592a:	66 89 53 18          	mov    %dx,0x18(%rbx)
    592e:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    5935:	00 
    5936:	48 2b 05 13 47 02 00 	sub    0x24713(%rip),%rax        # 2a050 <__stack_chk_guard>
    593d:	74 05                	je     5944 <efi_undi_issue+0x44a>
    593f:	e8 1c d1 ff ff       	call   2a60 <__stack_chk_fail>
    5944:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    594b:	5b                   	pop    %rbx
    594c:	5e                   	pop    %rsi
    594d:	5f                   	pop    %rdi
    594e:	5d                   	pop    %rbp
    594f:	41 5c                	pop    %r12
    5951:	41 5d                	pop    %r13
    5953:	c3                   	ret    

0000000000005954 <efi_snp_remove>:
    5954:	f3 0f 1e fa          	endbr64 
    5958:	41 55                	push   %r13
    595a:	41 54                	push   %r12
    595c:	55                   	push   %rbp
    595d:	53                   	push   %rbx
    595e:	51                   	push   %rcx
    595f:	e8 58 eb ff ff       	call   44bc <efi_snp_demux>
    5964:	48 85 c0             	test   %rax,%rax
    5967:	0f 84 16 01 00 00    	je     5a83 <efi_snp_remove+0x12f>
    596d:	48 89 c5             	mov    %rax,%rbp
    5970:	48 8b 05 01 47 02 00 	mov    0x24701(%rip),%rax        # 2a078 <efi_systab>
    5977:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    597b:	48 83 bd b8 04 00 00 	cmpq   $0x0,0x4b8(%rbp)
    5982:	00 
    5983:	48 8b 58 60          	mov    0x60(%rax),%rbx
    5987:	48 8b 45 08          	mov    0x8(%rbp),%rax
    598b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    598f:	48 89 10             	mov    %rdx,(%rax)
    5992:	74 08                	je     599c <efi_snp_remove+0x48>
    5994:	48 89 ef             	mov    %rbp,%rdi
    5997:	e8 34 0f 00 00       	call   68d0 <efi_snp_hii_uninstall>
    599c:	48 8b 45 18          	mov    0x18(%rbp),%rax
    59a0:	48 8b 75 20          	mov    0x20(%rbp),%rsi
    59a4:	4c 8d 25 b5 ef 01 00 	lea    0x1efb5(%rip),%r12        # 24960 <efi_nii_protocol_guid>
    59ab:	4c 8d 2d 9e ef 01 00 	lea    0x1ef9e(%rip),%r13        # 24950 <efi_nii31_protocol_guid>
    59b2:	48 8b b8 80 00 00 00 	mov    0x80(%rax),%rdi
    59b9:	e8 54 11 00 00       	call   6b12 <efi_child_del>
    59be:	48 8b 4d 20          	mov    0x20(%rbp),%rcx
    59c2:	48 83 ec 20          	sub    $0x20,%rsp
    59c6:	4c 89 e2             	mov    %r12,%rdx
    59c9:	4c 8b 05 98 46 02 00 	mov    0x24698(%rip),%r8        # 2a068 <efi_image_handle>
    59d0:	49 89 c9             	mov    %rcx,%r9
    59d3:	ff 93 20 01 00 00    	call   *0x120(%rbx)
    59d9:	48 8b 4d 20          	mov    0x20(%rbp),%rcx
    59dd:	4c 89 ea             	mov    %r13,%rdx
    59e0:	4c 8b 05 81 46 02 00 	mov    0x24681(%rip),%r8        # 2a068 <efi_image_handle>
    59e7:	49 89 c9             	mov    %rcx,%r9
    59ea:	ff 93 20 01 00 00    	call   *0x120(%rbx)
    59f0:	48 83 c4 20          	add    $0x20,%rsp
    59f4:	48 8b 4d 20          	mov    0x20(%rbp),%rcx
    59f8:	48 8d 95 98 04 00 00 	lea    0x498(%rbp),%rdx
    59ff:	48 8d 35 ca eb 01 00 	lea    0x1ebca(%rip),%rsi        # 245d0 <dummy_load_file_protocol_guid>
    5a06:	6a 00                	push   $0x0
    5a08:	4c 8d 45 28          	lea    0x28(%rbp),%r8
    5a0c:	52                   	push   %rdx
    5a0d:	48 8d 85 58 04 00 00 	lea    0x458(%rbp),%rax
    5a14:	48 8d 95 80 04 00 00 	lea    0x480(%rbp),%rdx
    5a1b:	56                   	push   %rsi
    5a1c:	48 8d 35 8d f0 01 00 	lea    0x1f08d(%rip),%rsi        # 24ab0 <efi_component_name2_protocol_guid>
    5a23:	4c 8d 0d 66 f0 01 00 	lea    0x1f066(%rip),%r9        # 24a90 <efi_device_path_protocol_guid>
    5a2a:	52                   	push   %rdx
    5a2b:	48 8d 15 be ee 01 00 	lea    0x1eebe(%rip),%rdx        # 248f0 <efi_simple_network_protocol_guid>
    5a32:	56                   	push   %rsi
    5a33:	50                   	push   %rax
    5a34:	41 55                	push   %r13
    5a36:	50                   	push   %rax
    5a37:	41 54                	push   %r12
    5a39:	ff b5 90 05 00 00    	push   0x590(%rbp)
    5a3f:	48 83 ec 20          	sub    $0x20,%rsp
    5a43:	ff 93 50 01 00 00    	call   *0x150(%rbx)
    5a49:	48 8b bd 90 05 00 00 	mov    0x590(%rbp),%rdi
    5a50:	48 83 c4 70          	add    $0x70,%rsp
    5a54:	e8 c9 6c 00 00       	call   c722 <free>
    5a59:	48 8b 8d 98 00 00 00 	mov    0x98(%rbp),%rcx
    5a60:	48 83 ec 20          	sub    $0x20,%rsp
    5a64:	ff 53 70             	call   *0x70(%rbx)
    5a67:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    5a6b:	48 83 c4 20          	add    $0x20,%rsp
    5a6f:	e8 a6 a4 00 00       	call   ff1a <ref_decrement>
    5a74:	5a                   	pop    %rdx
    5a75:	48 89 ef             	mov    %rbp,%rdi
    5a78:	5b                   	pop    %rbx
    5a79:	5d                   	pop    %rbp
    5a7a:	41 5c                	pop    %r12
    5a7c:	41 5d                	pop    %r13
    5a7e:	e9 9f 6c 00 00       	jmp    c722 <free>
    5a83:	58                   	pop    %rax
    5a84:	5b                   	pop    %rbx
    5a85:	5d                   	pop    %rbp
    5a86:	41 5c                	pop    %r12
    5a88:	41 5d                	pop    %r13
    5a8a:	c3                   	ret    

0000000000005a8b <last_opened_snpdev>:
    5a8b:	f3 0f 1e fa          	endbr64 
    5a8f:	56                   	push   %rsi
    5a90:	e8 31 86 00 00       	call   e0c6 <last_opened_netdev>
    5a95:	48 85 c0             	test   %rax,%rax
    5a98:	74 09                	je     5aa3 <last_opened_snpdev+0x18>
    5a9a:	48 89 c7             	mov    %rax,%rdi
    5a9d:	59                   	pop    %rcx
    5a9e:	e9 19 ea ff ff       	jmp    44bc <efi_snp_demux>
    5aa3:	31 c0                	xor    %eax,%eax
    5aa5:	5a                   	pop    %rdx
    5aa6:	c3                   	ret    

0000000000005aa7 <efi_snp_add_claim>:
    5aa7:	f3 0f 1e fa          	endbr64 
    5aab:	55                   	push   %rbp
    5aac:	53                   	push   %rbx
    5aad:	89 fb                	mov    %edi,%ebx
    5aaf:	52                   	push   %rdx
    5ab0:	48 8b 05 c1 45 02 00 	mov    0x245c1(%rip),%rax        # 2a078 <efi_systab>
    5ab7:	83 3d 8a 41 02 00 00 	cmpl   $0x0,0x2418a(%rip)        # 29c48 <efi_snp_claimed>
    5abe:	48 8b 68 60          	mov    0x60(%rax),%rbp
    5ac2:	75 17                	jne    5adb <efi_snp_add_claim+0x34>
    5ac4:	48 83 ec 20          	sub    $0x20,%rsp
    5ac8:	b9 08 00 00 00       	mov    $0x8,%ecx
    5acd:	ff 55 18             	call   *0x18(%rbp)
    5ad0:	48 83 c4 20          	add    $0x20,%rsp
    5ad4:	48 89 05 65 41 02 00 	mov    %rax,0x24165(%rip)        # 29c40 <efi_snp_old_tpl>
    5adb:	03 1d 67 41 02 00    	add    0x24167(%rip),%ebx        # 29c48 <efi_snp_claimed>
    5ae1:	48 8b 35 f8 f5 01 00 	mov    0x1f5f8(%rip),%rsi        # 250e0 <efi_snp_devices>
    5ae8:	4c 8d 05 f1 f5 01 00 	lea    0x1f5f1(%rip),%r8        # 250e0 <efi_snp_devices>
    5aef:	89 1d 53 41 02 00    	mov    %ebx,0x24153(%rip)        # 29c48 <efi_snp_claimed>
    5af5:	4c 39 c6             	cmp    %r8,%rsi
    5af8:	74 0d                	je     5b07 <efi_snp_add_claim+0x60>
    5afa:	48 89 f7             	mov    %rsi,%rdi
    5afd:	e8 1b f1 ff ff       	call   4c1d <efi_snp_set_state>
    5b02:	48 8b 36             	mov    (%rsi),%rsi
    5b05:	eb ee                	jmp    5af5 <efi_snp_add_claim+0x4e>
    5b07:	85 db                	test   %ebx,%ebx
    5b09:	75 12                	jne    5b1d <efi_snp_add_claim+0x76>
    5b0b:	48 83 ec 20          	sub    $0x20,%rsp
    5b0f:	48 8b 0d 2a 41 02 00 	mov    0x2412a(%rip),%rcx        # 29c40 <efi_snp_old_tpl>
    5b16:	ff 55 20             	call   *0x20(%rbp)
    5b19:	48 83 c4 20          	add    $0x20,%rsp
    5b1d:	58                   	pop    %rax
    5b1e:	5b                   	pop    %rbx
    5b1f:	5d                   	pop    %rbp
    5b20:	c3                   	ret    

0000000000005b21 <efi_snp_load_file>:
    5b21:	f3 0f 1e fa          	endbr64 
    5b25:	45 84 c0             	test   %r8b,%r8b
    5b28:	74 6f                	je     5b99 <efi_snp_load_file+0x78>
    5b2a:	41 54                	push   %r12
    5b2c:	4c 8b a1 78 fb ff ff 	mov    -0x488(%rcx),%r12
    5b33:	55                   	push   %rbp
    5b34:	48 8d 2d e5 f5 01 00 	lea    0x1f5e5(%rip),%rbp        # 25120 <efi_watchdog>
    5b3b:	57                   	push   %rdi
    5b3c:	bf 01 00 00 00       	mov    $0x1,%edi
    5b41:	56                   	push   %rsi
    5b42:	53                   	push   %rbx
    5b43:	e8 5f ff ff ff       	call   5aa7 <efi_snp_add_claim>
    5b48:	31 f6                	xor    %esi,%esi
    5b4a:	48 89 ef             	mov    %rbp,%rdi
    5b4d:	e8 ec a7 00 00       	call   1033e <start_timer_fixed>
    5b52:	4c 89 e7             	mov    %r12,%rdi
    5b55:	e8 fd 2c 01 00       	call   18857 <ipxe>
    5b5a:	89 c3                	mov    %eax,%ebx
    5b5c:	85 c0                	test   %eax,%eax
    5b5e:	75 07                	jne    5b67 <efi_snp_load_file+0x46>
    5b60:	31 ff                	xor    %edi,%edi
    5b62:	e8 19 38 01 00       	call   19380 <console_configure>
    5b67:	48 89 ef             	mov    %rbp,%rdi
    5b6a:	f7 db                	neg    %ebx
    5b6c:	e8 3b a8 00 00       	call   103ac <stop_timer>
    5b71:	83 cf ff             	or     $0xffffffff,%edi
    5b74:	e8 2e ff ff ff       	call   5aa7 <efi_snp_add_claim>
    5b79:	48 89 d8             	mov    %rbx,%rax
    5b7c:	ba 01 00 00 00       	mov    $0x1,%edx
    5b81:	83 e3 7f             	and    $0x7f,%ebx
    5b84:	48 c1 e0 38          	shl    $0x38,%rax
    5b88:	48 c1 e2 3f          	shl    $0x3f,%rdx
    5b8c:	48 21 d0             	and    %rdx,%rax
    5b8f:	48 09 d8             	or     %rbx,%rax
    5b92:	5b                   	pop    %rbx
    5b93:	5e                   	pop    %rsi
    5b94:	5f                   	pop    %rdi
    5b95:	5d                   	pop    %rbp
    5b96:	41 5c                	pop    %r12
    5b98:	c3                   	ret    
    5b99:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    5ba0:	00 00 80 
    5ba3:	c3                   	ret    

0000000000005ba4 <efi_snp_hii_callback>:
    5ba4:	f3 0f 1e fa          	endbr64 
    5ba8:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    5baf:	00 00 80 
    5bb2:	c3                   	ret    

0000000000005bb3 <efi_snp_hii_process>:
    5bb3:	41 57                	push   %r15
    5bb5:	49 89 fa             	mov    %rdi,%r10
    5bb8:	4d 89 cf             	mov    %r9,%r15
    5bbb:	41 56                	push   %r14
    5bbd:	49 89 d6             	mov    %rdx,%r14
    5bc0:	31 d2                	xor    %edx,%edx
    5bc2:	41 55                	push   %r13
    5bc4:	49 89 f5             	mov    %rsi,%r13
    5bc7:	41 54                	push   %r12
    5bc9:	49 89 f4             	mov    %rsi,%r12
    5bcc:	55                   	push   %rbp
    5bcd:	53                   	push   %rbx
    5bce:	48 83 ec 28          	sub    $0x28,%rsp
    5bd2:	66 41 8b 04 24       	mov    (%r12),%ax
    5bd7:	66 83 f8 26          	cmp    $0x26,%ax
    5bdb:	74 13                	je     5bf0 <efi_snp_hii_process+0x3d>
    5bdd:	66 85 c0             	test   %ax,%ax
    5be0:	74 0e                	je     5bf0 <efi_snp_hii_process+0x3d>
    5be2:	49 83 c4 02          	add    $0x2,%r12
    5be6:	66 83 f8 3d          	cmp    $0x3d,%ax
    5bea:	49 0f 44 d4          	cmove  %r12,%rdx
    5bee:	eb e2                	jmp    5bd2 <efi_snp_hii_process+0x1f>
    5bf0:	4c 89 e3             	mov    %r12,%rbx
    5bf3:	48 85 d2             	test   %rdx,%rdx
    5bf6:	74 04                	je     5bfc <efi_snp_hii_process+0x49>
    5bf8:	48 8d 5a fe          	lea    -0x2(%rdx),%rbx
    5bfc:	4c 89 e5             	mov    %r12,%rbp
    5bff:	4c 29 eb             	sub    %r13,%rbx
    5c02:	b8 00 00 00 00       	mov    $0x0,%eax
    5c07:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    5c0c:	48 29 d5             	sub    %rdx,%rbp
    5c0f:	48 d1 fb             	sar    %rbx
    5c12:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    5c17:	48 d1 fd             	sar    %rbp
    5c1a:	48 85 d2             	test   %rdx,%rdx
    5c1d:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    5c22:	48 0f 44 e8          	cmove  %rax,%rbp
    5c26:	48 89 14 24          	mov    %rdx,(%rsp)
    5c2a:	48 8d 7c 1d 02       	lea    0x2(%rbp,%rbx,1),%rdi
    5c2f:	e8 02 6b 00 00       	call   c736 <zalloc>
    5c34:	48 8b 14 24          	mov    (%rsp),%rdx
    5c38:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    5c3d:	48 85 c0             	test   %rax,%rax
    5c40:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    5c45:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    5c4a:	49 89 c1             	mov    %rax,%r9
    5c4d:	4c 8d 5c 18 01       	lea    0x1(%rax,%rbx,1),%r11
    5c52:	75 07                	jne    5c5b <efi_snp_hii_process+0xa8>
    5c54:	b8 77 1f ce ce       	mov    $0xcece1f77,%eax
    5c59:	eb 4b                	jmp    5ca6 <efi_snp_hii_process+0xf3>
    5c5b:	48 83 eb 01          	sub    $0x1,%rbx
    5c5f:	72 0c                	jb     5c6d <efi_snp_hii_process+0xba>
    5c61:	66 41 8b 44 5d 00    	mov    0x0(%r13,%rbx,2),%ax
    5c67:	41 88 04 19          	mov    %al,(%r9,%rbx,1)
    5c6b:	eb ee                	jmp    5c5b <efi_snp_hii_process+0xa8>
    5c6d:	48 83 ed 01          	sub    $0x1,%rbp
    5c71:	72 0a                	jb     5c7d <efi_snp_hii_process+0xca>
    5c73:	66 8b 04 6a          	mov    (%rdx,%rbp,2),%ax
    5c77:	41 88 04 2b          	mov    %al,(%r11,%rbp,1)
    5c7b:	eb f0                	jmp    5c6d <efi_snp_hii_process+0xba>
    5c7d:	4c 89 0c 24          	mov    %r9,(%rsp)
    5c81:	4c 89 ce             	mov    %r9,%rsi
    5c84:	4c 89 da             	mov    %r11,%rdx
    5c87:	4c 89 d7             	mov    %r10,%rdi
    5c8a:	41 ff d7             	call   *%r15
    5c8d:	4c 8b 0c 24          	mov    (%rsp),%r9
    5c91:	85 c0                	test   %eax,%eax
    5c93:	75 03                	jne    5c98 <efi_snp_hii_process+0xe5>
    5c95:	4d 89 26             	mov    %r12,(%r14)
    5c98:	4c 89 cf             	mov    %r9,%rdi
    5c9b:	89 04 24             	mov    %eax,(%rsp)
    5c9e:	e8 7f 6a 00 00       	call   c722 <free>
    5ca3:	8b 04 24             	mov    (%rsp),%eax
    5ca6:	48 83 c4 28          	add    $0x28,%rsp
    5caa:	5b                   	pop    %rbx
    5cab:	5d                   	pop    %rbp
    5cac:	41 5c                	pop    %r12
    5cae:	41 5d                	pop    %r13
    5cb0:	41 5e                	pop    %r14
    5cb2:	41 5f                	pop    %r15
    5cb4:	c3                   	ret    

0000000000005cb5 <efi_snp_hii_route_config>:
    5cb5:	f3 0f 1e fa          	endbr64 
    5cb9:	41 54                	push   %r12
    5cbb:	4c 8d 25 68 03 00 00 	lea    0x368(%rip),%r12        # 602a <efi_snp_hii_store>
    5cc2:	55                   	push   %rbp
    5cc3:	48 8d a9 60 fb ff ff 	lea    -0x4a0(%rcx),%rbp
    5cca:	57                   	push   %rdi
    5ccb:	56                   	push   %rsi
    5ccc:	48 89 d6             	mov    %rdx,%rsi
    5ccf:	53                   	push   %rbx
    5cd0:	4c 89 c3             	mov    %r8,%rbx
    5cd3:	49 89 10             	mov    %rdx,(%r8)
    5cd6:	48 8b 03             	mov    (%rbx),%rax
    5cd9:	48 85 c0             	test   %rax,%rax
    5cdc:	74 43                	je     5d21 <efi_snp_hii_route_config+0x6c>
    5cde:	66 83 38 00          	cmpw   $0x0,(%rax)
    5ce2:	74 3d                	je     5d21 <efi_snp_hii_route_config+0x6c>
    5ce4:	45 31 c0             	xor    %r8d,%r8d
    5ce7:	31 c9                	xor    %ecx,%ecx
    5ce9:	4d 89 e1             	mov    %r12,%r9
    5cec:	48 89 da             	mov    %rbx,%rdx
    5cef:	48 89 ef             	mov    %rbp,%rdi
    5cf2:	e8 bc fe ff ff       	call   5bb3 <efi_snp_hii_process>
    5cf7:	85 c0                	test   %eax,%eax
    5cf9:	74 1d                	je     5d18 <efi_snp_hii_route_config+0x63>
    5cfb:	f7 d8                	neg    %eax
    5cfd:	b9 01 00 00 00       	mov    $0x1,%ecx
    5d02:	48 89 c2             	mov    %rax,%rdx
    5d05:	48 c1 e1 3f          	shl    $0x3f,%rcx
    5d09:	83 e0 7f             	and    $0x7f,%eax
    5d0c:	48 c1 e2 38          	shl    $0x38,%rdx
    5d10:	48 21 ca             	and    %rcx,%rdx
    5d13:	48 09 d0             	or     %rdx,%rax
    5d16:	eb 0b                	jmp    5d23 <efi_snp_hii_route_config+0x6e>
    5d18:	48 8b 03             	mov    (%rbx),%rax
    5d1b:	48 8d 70 02          	lea    0x2(%rax),%rsi
    5d1f:	eb b5                	jmp    5cd6 <efi_snp_hii_route_config+0x21>
    5d21:	31 c0                	xor    %eax,%eax
    5d23:	5b                   	pop    %rbx
    5d24:	5e                   	pop    %rsi
    5d25:	5f                   	pop    %rdi
    5d26:	5d                   	pop    %rbp
    5d27:	41 5c                	pop    %r12
    5d29:	c3                   	ret    

0000000000005d2a <efi_snp_hii_random_guid>:
    5d2a:	55                   	push   %rbp
    5d2b:	48 89 fd             	mov    %rdi,%rbp
    5d2e:	53                   	push   %rbx
    5d2f:	31 db                	xor    %ebx,%ebx
    5d31:	52                   	push   %rdx
    5d32:	e8 e6 9d 00 00       	call   fb1d <random>
    5d37:	88 44 1d 00          	mov    %al,0x0(%rbp,%rbx,1)
    5d3b:	48 ff c3             	inc    %rbx
    5d3e:	48 83 fb 10          	cmp    $0x10,%rbx
    5d42:	75 ee                	jne    5d32 <efi_snp_hii_random_guid+0x8>
    5d44:	58                   	pop    %rax
    5d45:	5b                   	pop    %rbx
    5d46:	5d                   	pop    %rbp
    5d47:	c3                   	ret    

0000000000005d48 <efi_snp_hii_append.constprop.0>:
    5d48:	41 56                	push   %r14
    5d4a:	45 31 f6             	xor    %r14d,%r14d
    5d4d:	41 55                	push   %r13
    5d4f:	41 54                	push   %r12
    5d51:	49 89 f4             	mov    %rsi,%r12
    5d54:	55                   	push   %rbp
    5d55:	48 89 fd             	mov    %rdi,%rbp
    5d58:	53                   	push   %rbx
    5d59:	48 89 d3             	mov    %rdx,%rbx
    5d5c:	48 83 ec 10          	sub    $0x10,%rsp
    5d60:	48 8b 3a             	mov    (%rdx),%rdi
    5d63:	48 8b 05 e6 42 02 00 	mov    0x242e6(%rip),%rax        # 2a050 <__stack_chk_guard>
    5d6a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5d6f:	48 8b 05 02 43 02 00 	mov    0x24302(%rip),%rax        # 2a078 <efi_systab>
    5d76:	4c 8b 68 60          	mov    0x60(%rax),%r13
    5d7a:	48 85 ff             	test   %rdi,%rdi
    5d7d:	74 09                	je     5d88 <efi_snp_hii_append.constprop.0+0x40>
    5d7f:	e8 60 15 01 00       	call   172e4 <wcslen>
    5d84:	4c 8d 70 01          	lea    0x1(%rax),%r14
    5d88:	48 89 ef             	mov    %rbp,%rdi
    5d8b:	e8 86 dc 00 00       	call   13a16 <strlen>
    5d90:	4c 89 e7             	mov    %r12,%rdi
    5d93:	49 01 c6             	add    %rax,%r14
    5d96:	e8 7b dc 00 00       	call   13a16 <strlen>
    5d9b:	48 83 ec 20          	sub    $0x20,%rsp
    5d9f:	b9 04 00 00 00       	mov    $0x4,%ecx
    5da4:	4d 8d 74 06 02       	lea    0x2(%r14,%rax,1),%r14
    5da9:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
    5dae:	4b 8d 14 36          	lea    (%r14,%r14,1),%rdx
    5db2:	41 ff 55 40          	call   *0x40(%r13)
    5db6:	48 83 c4 20          	add    $0x20,%rsp
    5dba:	48 89 c2             	mov    %rax,%rdx
    5dbd:	48 85 c0             	test   %rax,%rax
    5dc0:	74 12                	je     5dd4 <efi_snp_hii_append.constprop.0+0x8c>
    5dc2:	48 c1 e8 38          	shr    $0x38,%rax
    5dc6:	09 d0                	or     %edx,%eax
    5dc8:	0f b6 c0             	movzbl %al,%eax
    5dcb:	0d 00 e0 31 7f       	or     $0x7f31e000,%eax
    5dd0:	f7 d8                	neg    %eax
    5dd2:	eb 4e                	jmp    5e22 <efi_snp_hii_append.constprop.0+0xda>
    5dd4:	48 8b 0b             	mov    (%rbx),%rcx
    5dd7:	4c 8d 05 1e cb 01 00 	lea    0x1cb1e(%rip),%r8        # 228fc <.LC1>
    5dde:	48 85 c9             	test   %rcx,%rcx
    5de1:	75 0a                	jne    5ded <efi_snp_hii_append.constprop.0+0xa5>
    5de3:	4c 8d 05 14 cb 01 00 	lea    0x1cb14(%rip),%r8        # 228fe <.LC0>
    5dea:	4c 89 c1             	mov    %r8,%rcx
    5ded:	56                   	push   %rsi
    5dee:	49 89 e9             	mov    %rbp,%r9
    5df1:	48 8d 15 08 cb 01 00 	lea    0x1cb08(%rip),%rdx        # 22900 <.LC2>
    5df8:	4c 89 f6             	mov    %r14,%rsi
    5dfb:	41 54                	push   %r12
    5dfd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5e02:	31 c0                	xor    %eax,%eax
    5e04:	e8 0b 0c 00 00       	call   6a14 <efi_snprintf>
    5e09:	48 83 ec 20          	sub    $0x20,%rsp
    5e0d:	48 8b 0b             	mov    (%rbx),%rcx
    5e10:	41 ff 55 48          	call   *0x48(%r13)
    5e14:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    5e19:	48 83 c4 30          	add    $0x30,%rsp
    5e1d:	48 89 03             	mov    %rax,(%rbx)
    5e20:	31 c0                	xor    %eax,%eax
    5e22:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5e27:	48 2b 15 22 42 02 00 	sub    0x24222(%rip),%rdx        # 2a050 <__stack_chk_guard>
    5e2e:	74 05                	je     5e35 <efi_snp_hii_append.constprop.0+0xed>
    5e30:	e8 2b cc ff ff       	call   2a60 <__stack_chk_fail>
    5e35:	48 83 c4 10          	add    $0x10,%rsp
    5e39:	5b                   	pop    %rbx
    5e3a:	5d                   	pop    %rbp
    5e3b:	41 5c                	pop    %r12
    5e3d:	41 5d                	pop    %r13
    5e3f:	41 5e                	pop    %r14
    5e41:	c3                   	ret    

0000000000005e42 <efi_snp_hii_fetch>:
    5e42:	f3 0f 1e fa          	endbr64 
    5e46:	41 57                	push   %r15
    5e48:	41 56                	push   %r14
    5e4a:	49 89 ce             	mov    %rcx,%r14
    5e4d:	41 55                	push   %r13
    5e4f:	49 89 f5             	mov    %rsi,%r13
    5e52:	48 8d 35 b2 ca 01 00 	lea    0x1cab2(%rip),%rsi        # 2290b <.LC4>
    5e59:	41 54                	push   %r12
    5e5b:	49 89 d4             	mov    %rdx,%r12
    5e5e:	55                   	push   %rbp
    5e5f:	53                   	push   %rbx
    5e60:	4c 89 c3             	mov    %r8,%rbx
    5e63:	48 83 ec 58          	sub    $0x58,%rsp
    5e67:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    5e6b:	48 8b 05 de 41 02 00 	mov    0x241de(%rip),%rax        # 2a050 <__stack_chk_guard>
    5e72:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    5e77:	31 c0                	xor    %eax,%eax
    5e79:	48 81 c7 68 01 00 00 	add    $0x168,%rdi
    5e80:	e8 33 bb 00 00       	call   119b8 <find_child_settings>
    5e85:	48 8d 35 83 ca 01 00 	lea    0x1ca83(%rip),%rsi        # 2290f <.LC5>
    5e8c:	4c 89 ef             	mov    %r13,%rdi
    5e8f:	48 89 c5             	mov    %rax,%rbp
    5e92:	e8 32 db 00 00       	call   139c9 <strcasecmp>
    5e97:	85 c0                	test   %eax,%eax
    5e99:	74 26                	je     5ec1 <efi_snp_hii_fetch+0x7f>
    5e9b:	48 8d 35 72 ca 01 00 	lea    0x1ca72(%rip),%rsi        # 22914 <.LC6>
    5ea2:	4c 89 ef             	mov    %r13,%rdi
    5ea5:	e8 1f db 00 00       	call   139c9 <strcasecmp>
    5eaa:	85 c0                	test   %eax,%eax
    5eac:	74 13                	je     5ec1 <efi_snp_hii_fetch+0x7f>
    5eae:	48 8d 35 64 ca 01 00 	lea    0x1ca64(%rip),%rsi        # 22919 <.LC7>
    5eb5:	4c 89 ef             	mov    %r13,%rdi
    5eb8:	e8 0c db 00 00       	call   139c9 <strcasecmp>
    5ebd:	85 c0                	test   %eax,%eax
    5ebf:	75 2e                	jne    5eef <efi_snp_hii_fetch+0xad>
    5ec1:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    5ec6:	48 2b 05 83 41 02 00 	sub    0x24183(%rip),%rax        # 2a050 <__stack_chk_guard>
    5ecd:	0f 85 40 01 00 00    	jne    6013 <efi_snp_hii_fetch+0x1d1>
    5ed3:	48 83 c4 58          	add    $0x58,%rsp
    5ed7:	4c 89 f2             	mov    %r14,%rdx
    5eda:	4c 89 e6             	mov    %r12,%rsi
    5edd:	4c 89 ef             	mov    %r13,%rdi
    5ee0:	5b                   	pop    %rbx
    5ee1:	5d                   	pop    %rbp
    5ee2:	41 5c                	pop    %r12
    5ee4:	41 5d                	pop    %r13
    5ee6:	41 5e                	pop    %r14
    5ee8:	41 5f                	pop    %r15
    5eea:	e9 59 fe ff ff       	jmp    5d48 <efi_snp_hii_append.constprop.0>
    5eef:	48 85 db             	test   %rbx,%rbx
    5ef2:	74 06                	je     5efa <efi_snp_hii_fetch+0xb8>
    5ef4:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    5efa:	48 85 ed             	test   %rbp,%rbp
    5efd:	75 0b                	jne    5f0a <efi_snp_hii_fetch+0xc8>
    5eff:	41 bc 7d 1f ce c3    	mov    $0xc3ce1f7d,%r12d
    5f05:	e9 fb 00 00 00       	jmp    6005 <efi_snp_hii_fetch+0x1c3>
    5f0a:	4c 89 ef             	mov    %r13,%rdi
    5f0d:	e8 1c c8 00 00       	call   1272e <find_setting>
    5f12:	49 89 c4             	mov    %rax,%r12
    5f15:	48 85 c0             	test   %rax,%rax
    5f18:	75 0b                	jne    5f25 <efi_snp_hii_fetch+0xe3>
    5f1a:	41 bc 79 1f ce d3    	mov    $0xd3ce1f79,%r12d
    5f20:	e9 e0 00 00 00       	jmp    6005 <efi_snp_hii_fetch+0x1c3>
    5f25:	45 31 c9             	xor    %r9d,%r9d
    5f28:	45 31 c0             	xor    %r8d,%r8d
    5f2b:	31 c9                	xor    %ecx,%ecx
    5f2d:	31 d2                	xor    %edx,%edx
    5f2f:	48 89 c6             	mov    %rax,%rsi
    5f32:	48 89 ef             	mov    %rbp,%rdi
    5f35:	e8 0f bd 00 00       	call   11c49 <fetch_setting>
    5f3a:	85 c0                	test   %eax,%eax
    5f3c:	0f 88 a1 00 00 00    	js     5fe3 <efi_snp_hii_fetch+0x1a1>
    5f42:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
    5f47:	4c 89 e6             	mov    %r12,%rsi
    5f4a:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    5f4f:	45 31 c9             	xor    %r9d,%r9d
    5f52:	45 31 c0             	xor    %r8d,%r8d
    5f55:	4c 89 f9             	mov    %r15,%rcx
    5f58:	48 89 ef             	mov    %rbp,%rdi
    5f5b:	e8 e2 c4 00 00       	call   12442 <fetchf_setting>
    5f60:	41 89 c4             	mov    %eax,%r12d
    5f63:	85 c0                	test   %eax,%eax
    5f65:	0f 88 9a 00 00 00    	js     6005 <efi_snp_hii_fetch+0x1c3>
    5f6b:	8d 04 85 00 00 00 00 	lea    0x0(,%rax,4),%eax
    5f72:	41 8d 7c 04 02       	lea    0x2(%r12,%rax,1),%edi
    5f77:	48 63 ff             	movslq %edi,%rdi
    5f7a:	e8 b7 67 00 00       	call   c736 <zalloc>
    5f7f:	48 89 c5             	mov    %rax,%rbp
    5f82:	48 85 c0             	test   %rax,%rax
    5f85:	75 08                	jne    5f8f <efi_snp_hii_fetch+0x14d>
    5f87:	41 bc 77 1f ce ce    	mov    $0xcece1f77,%r12d
    5f8d:	eb 76                	jmp    6005 <efi_snp_hii_fetch+0x1c3>
    5f8f:	4d 63 cc             	movslq %r12d,%r9
    5f92:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    5f97:	4c 89 fe             	mov    %r15,%rsi
    5f9a:	49 89 c0             	mov    %rax,%r8
    5f9d:	49 ff c1             	inc    %r9
    5fa0:	31 c9                	xor    %ecx,%ecx
    5fa2:	31 d2                	xor    %edx,%edx
    5fa4:	45 31 ff             	xor    %r15d,%r15d
    5fa7:	4a 8d 1c 08          	lea    (%rax,%r9,1),%rbx
    5fab:	e8 92 c4 00 00       	call   12442 <fetchf_setting>
    5fb0:	48 89 df             	mov    %rbx,%rdi
    5fb3:	48 8d 15 64 c9 01 00 	lea    0x1c964(%rip),%rdx        # 2291e <.LC8>
    5fba:	45 39 fc             	cmp    %r15d,%r12d
    5fbd:	7e 2d                	jle    5fec <efi_snp_hii_fetch+0x1aa>
    5fbf:	42 0f b6 4c 3d 00    	movzbl 0x0(%rbp,%r15,1),%ecx
    5fc5:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
    5fc9:	31 c0                	xor    %eax,%eax
    5fcb:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    5fd0:	49 ff c7             	inc    %r15
    5fd3:	e8 85 11 01 00       	call   1715d <snprintf>
    5fd8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5fdd:	48 83 c7 04          	add    $0x4,%rdi
    5fe1:	eb d0                	jmp    5fb3 <efi_snp_hii_fetch+0x171>
    5fe3:	48 8d 1d ca e4 01 00 	lea    0x1e4ca(%rip),%rbx        # 244b4 <.LC0>
    5fea:	31 ed                	xor    %ebp,%ebp
    5fec:	4c 89 ef             	mov    %r13,%rdi
    5fef:	4c 89 f2             	mov    %r14,%rdx
    5ff2:	48 89 de             	mov    %rbx,%rsi
    5ff5:	e8 4e fd ff ff       	call   5d48 <efi_snp_hii_append.constprop.0>
    5ffa:	48 89 ef             	mov    %rbp,%rdi
    5ffd:	41 89 c4             	mov    %eax,%r12d
    6000:	e8 1d 67 00 00       	call   c722 <free>
    6005:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    600a:	48 2b 05 3f 40 02 00 	sub    0x2403f(%rip),%rax        # 2a050 <__stack_chk_guard>
    6011:	74 05                	je     6018 <efi_snp_hii_fetch+0x1d6>
    6013:	e8 48 ca ff ff       	call   2a60 <__stack_chk_fail>
    6018:	48 83 c4 58          	add    $0x58,%rsp
    601c:	44 89 e0             	mov    %r12d,%eax
    601f:	5b                   	pop    %rbx
    6020:	5d                   	pop    %rbp
    6021:	41 5c                	pop    %r12
    6023:	41 5d                	pop    %r13
    6025:	41 5e                	pop    %r14
    6027:	41 5f                	pop    %r15
    6029:	c3                   	ret    

000000000000602a <efi_snp_hii_store>:
    602a:	f3 0f 1e fa          	endbr64 
    602e:	41 57                	push   %r15
    6030:	41 56                	push   %r14
    6032:	41 55                	push   %r13
    6034:	41 54                	push   %r12
    6036:	55                   	push   %rbp
    6037:	48 89 f5             	mov    %rsi,%rbp
    603a:	48 8d 35 ca c8 01 00 	lea    0x1c8ca(%rip),%rsi        # 2290b <.LC4>
    6041:	53                   	push   %rbx
    6042:	48 89 d3             	mov    %rdx,%rbx
    6045:	48 83 ec 48          	sub    $0x48,%rsp
    6049:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    604d:	48 8b 05 fc 3f 02 00 	mov    0x23ffc(%rip),%rax        # 2a050 <__stack_chk_guard>
    6054:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    6059:	31 c0                	xor    %eax,%eax
    605b:	48 81 c7 68 01 00 00 	add    $0x168,%rdi
    6062:	e8 51 b9 00 00       	call   119b8 <find_child_settings>
    6067:	48 8d 35 a1 c8 01 00 	lea    0x1c8a1(%rip),%rsi        # 2290f <.LC5>
    606e:	48 89 ef             	mov    %rbp,%rdi
    6071:	49 89 c4             	mov    %rax,%r12
    6074:	e8 50 d9 00 00       	call   139c9 <strcasecmp>
    6079:	85 c0                	test   %eax,%eax
    607b:	0f 84 fa 00 00 00    	je     617b <efi_snp_hii_store+0x151>
    6081:	48 8d 35 8c c8 01 00 	lea    0x1c88c(%rip),%rsi        # 22914 <.LC6>
    6088:	48 89 ef             	mov    %rbp,%rdi
    608b:	e8 39 d9 00 00       	call   139c9 <strcasecmp>
    6090:	85 c0                	test   %eax,%eax
    6092:	0f 84 e3 00 00 00    	je     617b <efi_snp_hii_store+0x151>
    6098:	48 8d 35 7a c8 01 00 	lea    0x1c87a(%rip),%rsi        # 22919 <.LC7>
    609f:	48 89 ef             	mov    %rbp,%rdi
    60a2:	e8 22 d9 00 00       	call   139c9 <strcasecmp>
    60a7:	85 c0                	test   %eax,%eax
    60a9:	0f 84 cc 00 00 00    	je     617b <efi_snp_hii_store+0x151>
    60af:	4d 85 e4             	test   %r12,%r12
    60b2:	75 0a                	jne    60be <efi_snp_hii_store+0x94>
    60b4:	b8 7d 1f ce c3       	mov    $0xc3ce1f7d,%eax
    60b9:	e9 bd 00 00 00       	jmp    617b <efi_snp_hii_store+0x151>
    60be:	48 89 ef             	mov    %rbp,%rdi
    60c1:	e8 68 c6 00 00       	call   1272e <find_setting>
    60c6:	48 89 c5             	mov    %rax,%rbp
    60c9:	48 85 c0             	test   %rax,%rax
    60cc:	75 0a                	jne    60d8 <efi_snp_hii_store+0xae>
    60ce:	b8 79 1f ce d3       	mov    $0xd3ce1f79,%eax
    60d3:	e9 a3 00 00 00       	jmp    617b <efi_snp_hii_store+0x151>
    60d8:	48 89 df             	mov    %rbx,%rdi
    60db:	e8 36 d9 00 00       	call   13a16 <strlen>
    60e0:	48 c1 e8 02          	shr    $0x2,%rax
    60e4:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    60e8:	ff c0                	inc    %eax
    60ea:	48 63 f8             	movslq %eax,%rdi
    60ed:	e8 44 66 00 00       	call   c736 <zalloc>
    60f2:	49 89 c6             	mov    %rax,%r14
    60f5:	48 85 c0             	test   %rax,%rax
    60f8:	75 07                	jne    6101 <efi_snp_hii_store+0xd7>
    60fa:	b8 77 1f ce ce       	mov    $0xcece1f77,%eax
    60ff:	eb 7a                	jmp    617b <efi_snp_hii_store+0x151>
    6101:	c6 44 24 37 00       	movb   $0x0,0x37(%rsp)
    6106:	45 31 ff             	xor    %r15d,%r15d
    6109:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
    610e:	48 8d 7c 24 33       	lea    0x33(%rsp),%rdi
    6113:	4c 8d 44 24 37       	lea    0x37(%rsp),%r8
    6118:	44 39 7c 24 0c       	cmp    %r15d,0xc(%rsp)
    611d:	7e 3e                	jle    615d <efi_snp_hii_store+0x133>
    611f:	42 8b 04 bb          	mov    (%rbx,%r15,4),%eax
    6123:	ba 10 00 00 00       	mov    $0x10,%edx
    6128:	4c 89 ee             	mov    %r13,%rsi
    612b:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    6130:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    6135:	89 44 24 33          	mov    %eax,0x33(%rsp)
    6139:	e8 19 da 00 00       	call   13b57 <strtoul>
    613e:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6143:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6148:	43 88 04 3e          	mov    %al,(%r14,%r15,1)
    614c:	49 ff c7             	inc    %r15
    614f:	4c 39 44 24 28       	cmp    %r8,0x28(%rsp)
    6154:	74 c2                	je     6118 <efi_snp_hii_store+0xee>
    6156:	b8 7e 1f ce e3       	mov    $0xe3ce1f7e,%eax
    615b:	eb 0e                	jmp    616b <efi_snp_hii_store+0x141>
    615d:	4c 89 f2             	mov    %r14,%rdx
    6160:	48 89 ee             	mov    %rbp,%rsi
    6163:	4c 89 e7             	mov    %r12,%rdi
    6166:	e8 10 c4 00 00       	call   1257b <storef_setting>
    616b:	4c 89 f7             	mov    %r14,%rdi
    616e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    6172:	e8 ab 65 00 00       	call   c722 <free>
    6177:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    617b:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    6180:	48 2b 15 c9 3e 02 00 	sub    0x23ec9(%rip),%rdx        # 2a050 <__stack_chk_guard>
    6187:	74 05                	je     618e <efi_snp_hii_store+0x164>
    6189:	e8 d2 c8 ff ff       	call   2a60 <__stack_chk_fail>
    618e:	48 83 c4 48          	add    $0x48,%rsp
    6192:	5b                   	pop    %rbx
    6193:	5d                   	pop    %rbp
    6194:	41 5c                	pop    %r12
    6196:	41 5d                	pop    %r13
    6198:	41 5e                	pop    %r14
    619a:	41 5f                	pop    %r15
    619c:	c3                   	ret    

000000000000619d <efi_snp_hii_extract_config>:
    619d:	f3 0f 1e fa          	endbr64 
    61a1:	41 57                	push   %r15
    61a3:	41 56                	push   %r14
    61a5:	41 55                	push   %r13
    61a7:	41 54                	push   %r12
    61a9:	55                   	push   %rbp
    61aa:	57                   	push   %rdi
    61ab:	56                   	push   %rsi
    61ac:	53                   	push   %rbx
    61ad:	48 83 ec 18          	sub    $0x18,%rsp
    61b1:	48 8b 05 98 3e 02 00 	mov    0x23e98(%rip),%rax        # 2a050 <__stack_chk_guard>
    61b8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    61bd:	31 c0                	xor    %eax,%eax
    61bf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    61c6:	00 
    61c7:	48 b8 02 00 00 00 00 	movabs $0x8000000000000002,%rax
    61ce:	00 00 80 
    61d1:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    61d8:	48 85 d2             	test   %rdx,%rdx
    61db:	0f 84 e8 00 00 00    	je     62c9 <efi_snp_hii_extract_config+0x12c>
    61e1:	66 83 3a 00          	cmpw   $0x0,(%rdx)
    61e5:	48 89 d6             	mov    %rdx,%rsi
    61e8:	0f 84 db 00 00 00    	je     62c9 <efi_snp_hii_extract_config+0x12c>
    61ee:	49 89 10             	mov    %rdx,(%r8)
    61f1:	49 89 cc             	mov    %rcx,%r12
    61f4:	4c 89 c3             	mov    %r8,%rbx
    61f7:	4c 89 cd             	mov    %r9,%rbp
    61fa:	4c 8d a9 60 fb ff ff 	lea    -0x4a0(%rcx),%r13
    6201:	4c 8d 74 24 04       	lea    0x4(%rsp),%r14
    6206:	4c 8d 3d 35 fc ff ff 	lea    -0x3cb(%rip),%r15        # 5e42 <efi_snp_hii_fetch>
    620d:	48 8b 03             	mov    (%rbx),%rax
    6210:	48 85 c0             	test   %rax,%rax
    6213:	74 2d                	je     6242 <efi_snp_hii_extract_config+0xa5>
    6215:	66 83 38 00          	cmpw   $0x0,(%rax)
    6219:	74 27                	je     6242 <efi_snp_hii_extract_config+0xa5>
    621b:	4d 89 f9             	mov    %r15,%r9
    621e:	4d 89 f0             	mov    %r14,%r8
    6221:	48 89 e9             	mov    %rbp,%rcx
    6224:	48 89 da             	mov    %rbx,%rdx
    6227:	4c 89 ef             	mov    %r13,%rdi
    622a:	e8 84 f9 ff ff       	call   5bb3 <efi_snp_hii_process>
    622f:	85 c0                	test   %eax,%eax
    6231:	74 06                	je     6239 <efi_snp_hii_extract_config+0x9c>
    6233:	f7 d8                	neg    %eax
    6235:	89 c2                	mov    %eax,%edx
    6237:	eb 5e                	jmp    6297 <efi_snp_hii_extract_config+0xfa>
    6239:	48 8b 03             	mov    (%rbx),%rax
    623c:	48 8d 70 02          	lea    0x2(%rax),%rsi
    6240:	eb cb                	jmp    620d <efi_snp_hii_extract_config+0x70>
    6242:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
    6247:	74 69                	je     62b2 <efi_snp_hii_extract_config+0x115>
    6249:	31 c0                	xor    %eax,%eax
    624b:	eb 7c                	jmp    62c9 <efi_snp_hii_extract_config+0x12c>
    624d:	48 83 c3 28          	add    $0x28,%rbx
    6251:	4c 39 f3             	cmp    %r14,%rbx
    6254:	73 f3                	jae    6249 <efi_snp_hii_extract_config+0xac>
    6256:	49 8b 84 24 70 fb ff 	mov    -0x490(%r12),%rax
    625d:	ff 
    625e:	4c 89 fe             	mov    %r15,%rsi
    6261:	48 8d b8 68 01 00 00 	lea    0x168(%rax),%rdi
    6268:	e8 4b b7 00 00       	call   119b8 <find_child_settings>
    626d:	48 89 de             	mov    %rbx,%rsi
    6270:	48 89 c7             	mov    %rax,%rdi
    6273:	e8 af 83 00 00       	call   e627 <nvo_applies>
    6278:	85 c0                	test   %eax,%eax
    627a:	74 d1                	je     624d <efi_snp_hii_extract_config+0xb0>
    627c:	48 8b 33             	mov    (%rbx),%rsi
    627f:	31 d2                	xor    %edx,%edx
    6281:	45 31 c0             	xor    %r8d,%r8d
    6284:	48 89 e9             	mov    %rbp,%rcx
    6287:	4c 89 ef             	mov    %r13,%rdi
    628a:	e8 b3 fb ff ff       	call   5e42 <efi_snp_hii_fetch>
    628f:	89 c2                	mov    %eax,%edx
    6291:	85 c0                	test   %eax,%eax
    6293:	74 b8                	je     624d <efi_snp_hii_extract_config+0xb0>
    6295:	f7 da                	neg    %edx
    6297:	48 89 d0             	mov    %rdx,%rax
    629a:	b9 01 00 00 00       	mov    $0x1,%ecx
    629f:	83 e2 7f             	and    $0x7f,%edx
    62a2:	48 c1 e0 38          	shl    $0x38,%rax
    62a6:	48 c1 e1 3f          	shl    $0x3f,%rcx
    62aa:	48 21 c8             	and    %rcx,%rax
    62ad:	48 09 d0             	or     %rdx,%rax
    62b0:	eb 17                	jmp    62c9 <efi_snp_hii_extract_config+0x12c>
    62b2:	48 8d 1d ef 2f 02 00 	lea    0x22fef(%rip),%rbx        # 292a8 <busid_setting>
    62b9:	4c 8d 35 f0 36 02 00 	lea    0x236f0(%rip),%r14        # 299b0 <dns_applicator>
    62c0:	4c 8d 3d 44 c6 01 00 	lea    0x1c644(%rip),%r15        # 2290b <.LC4>
    62c7:	eb 88                	jmp    6251 <efi_snp_hii_extract_config+0xb4>
    62c9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    62ce:	48 2b 15 7b 3d 02 00 	sub    0x23d7b(%rip),%rdx        # 2a050 <__stack_chk_guard>
    62d5:	74 05                	je     62dc <efi_snp_hii_extract_config+0x13f>
    62d7:	e8 84 c7 ff ff       	call   2a60 <__stack_chk_fail>
    62dc:	48 83 c4 18          	add    $0x18,%rsp
    62e0:	5b                   	pop    %rbx
    62e1:	5e                   	pop    %rsi
    62e2:	5f                   	pop    %rdi
    62e3:	5d                   	pop    %rbp
    62e4:	41 5c                	pop    %r12
    62e6:	41 5d                	pop    %r13
    62e8:	41 5e                	pop    %r14
    62ea:	41 5f                	pop    %r15
    62ec:	c3                   	ret    

00000000000062ed <efi_snp_hii_install>:
    62ed:	f3 0f 1e fa          	endbr64 
    62f1:	41 57                	push   %r15
    62f3:	41 56                	push   %r14
    62f5:	41 55                	push   %r13
    62f7:	41 54                	push   %r12
    62f9:	55                   	push   %rbp
    62fa:	53                   	push   %rbx
    62fb:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    6302:	48 8b 05 47 3d 02 00 	mov    0x23d47(%rip),%rax        # 2a050 <__stack_chk_guard>
    6309:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    6310:	00 
    6311:	48 8b 05 60 3d 02 00 	mov    0x23d60(%rip),%rax        # 2a078 <efi_systab>
    6318:	48 83 3d 38 39 02 00 	cmpq   $0x0,0x23938(%rip)        # 29c58 <efihii>
    631f:	00 
    6320:	4c 8b 70 60          	mov    0x60(%rax),%r14
    6324:	75 0b                	jne    6331 <efi_snp_hii_install+0x44>
    6326:	41 bc 7d 1f ce c3    	mov    $0xc3ce1f7d,%r12d
    632c:	e9 74 05 00 00       	jmp    68a5 <efi_snp_hii_install+0x5b8>
    6331:	48 8d 87 a0 04 00 00 	lea    0x4a0(%rdi),%rax
    6338:	48 89 fb             	mov    %rdi,%rbx
    633b:	48 8d 35 ae ed 01 00 	lea    0x1edae(%rip),%rsi        # 250f0 <efi_snp_device_hii>
    6342:	48 89 04 24          	mov    %rax,(%rsp)
    6346:	48 89 c7             	mov    %rax,%rdi
    6349:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    634a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    634b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    634c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    634d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    634e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    634f:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
    6353:	48 8d 6c 24 28       	lea    0x28(%rsp),%rbp
    6358:	b9 30 00 00 00       	mov    $0x30,%ecx
    635d:	31 c0                	xor    %eax,%eax
    635f:	48 89 ef             	mov    %rbp,%rdi
    6362:	4d 8b 7d 40          	mov    0x40(%r13),%r15
    6366:	f3 aa                	rep stos %al,%es:(%rdi)
    6368:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
    636d:	80 3d 81 c0 01 00 00 	cmpb   $0x0,0x1c081(%rip)        # 223f5 <product_name>
    6374:	4c 8d 05 75 c0 01 00 	lea    0x1c075(%rip),%r8        # 223f0 <product_short_name>
    637b:	48 89 c7             	mov    %rax,%rdi
    637e:	4c 8d 25 70 c0 01 00 	lea    0x1c070(%rip),%r12        # 223f5 <product_name>
    6385:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    638a:	4d 0f 44 e0          	cmove  %r8,%r12
    638e:	e8 97 f9 ff ff       	call   5d2a <efi_snp_hii_random_guid>
    6393:	4c 8d 5c 24 68       	lea    0x68(%rsp),%r11
    6398:	4c 89 df             	mov    %r11,%rdi
    639b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    63a0:	e8 85 f9 ff ff       	call   5d2a <efi_snp_hii_random_guid>
    63a5:	4c 8d 54 24 78       	lea    0x78(%rsp),%r10
    63aa:	4c 89 d7             	mov    %r10,%rdi
    63ad:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    63b2:	e8 73 f9 ff ff       	call   5d2a <efi_snp_hii_random_guid>
    63b7:	49 8b 45 50          	mov    0x50(%r13),%rax
    63bb:	49 8d 7d 60          	lea    0x60(%r13),%rdi
    63bf:	ff 50 20             	call   *0x20(%rax)
    63c2:	4c 89 e2             	mov    %r12,%rdx
    63c5:	48 8d 35 57 c5 01 00 	lea    0x1c557(%rip),%rsi        # 22923 <.LC9>
    63cc:	48 89 ef             	mov    %rbp,%rdi
    63cf:	48 89 c1             	mov    %rax,%rcx
    63d2:	31 c0                	xor    %eax,%eax
    63d4:	e8 be 66 01 00       	call   1ca97 <efi_ifr_string>
    63d9:	4c 8d 05 10 c0 01 00 	lea    0x1c010(%rip),%r8        # 223f0 <product_short_name>
    63e0:	48 8d 35 44 c5 01 00 	lea    0x1c544(%rip),%rsi        # 2292b <.LC10>
    63e7:	48 89 ef             	mov    %rbp,%rdi
    63ea:	41 89 c5             	mov    %eax,%r13d
    63ed:	4c 89 c2             	mov    %r8,%rdx
    63f0:	31 c0                	xor    %eax,%eax
    63f2:	e8 a0 66 01 00       	call   1ca97 <efi_ifr_string>
    63f7:	4c 8d 0d e2 e1 01 00 	lea    0x1e1e2(%rip),%r9        # 245e0 <efi_hii_ibm_ucm_compliant_formset_guid>
    63fe:	44 89 ea             	mov    %r13d,%edx
    6401:	48 89 ef             	mov    %rbp,%rdi
    6404:	89 c1                	mov    %eax,%ecx
    6406:	50                   	push   %rax
    6407:	4c 8d 05 e2 e1 01 00 	lea    0x1e1e2(%rip),%r8        # 245f0 <efi_hii_platform_setup_formset_guid>
    640e:	31 c0                	xor    %eax,%eax
    6410:	6a 00                	push   $0x0
    6412:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6417:	e8 e5 67 01 00       	call   1cc01 <efi_ifr_form_set_op>
    641c:	be 04 00 00 00       	mov    $0x4,%esi
    6421:	48 89 ef             	mov    %rbp,%rdi
    6424:	e8 08 69 01 00       	call   1cd31 <efi_ifr_guid_class_op>
    6429:	be 03 00 00 00       	mov    $0x3,%esi
    642e:	48 89 ef             	mov    %rbp,%rdi
    6431:	e8 2f 69 01 00       	call   1cd65 <efi_ifr_guid_subclass_op>
    6436:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    643b:	48 89 ef             	mov    %rbp,%rdi
    643e:	e8 f6 69 01 00       	call   1ce39 <efi_ifr_varstore_name_value_op>
    6443:	44 89 ee             	mov    %r13d,%esi
    6446:	48 89 ef             	mov    %rbp,%rdi
    6449:	89 44 24 20          	mov    %eax,0x20(%rsp)
    644d:	e8 6e 67 01 00       	call   1cbc0 <efi_ifr_form_op>
    6452:	4c 89 e2             	mov    %r12,%rdx
    6455:	48 89 ef             	mov    %rbp,%rdi
    6458:	31 c0                	xor    %eax,%eax
    645a:	4c 8d 25 a0 d2 01 00 	lea    0x1d2a0(%rip),%r12        # 23701 <.LC0>
    6461:	4c 89 e6             	mov    %r12,%rsi
    6464:	e8 2e 66 01 00       	call   1ca97 <efi_ifr_string>
    6469:	48 8d 35 c8 c4 01 00 	lea    0x1c4c8(%rip),%rsi        # 22938 <.LC12>
    6470:	48 89 ef             	mov    %rbp,%rdi
    6473:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6477:	31 c0                	xor    %eax,%eax
    6479:	e8 19 66 01 00       	call   1ca97 <efi_ifr_string>
    647e:	48 8d 35 c9 c4 01 00 	lea    0x1c4c9(%rip),%rsi        # 2294e <.LC13>
    6485:	48 89 ef             	mov    %rbp,%rdi
    6488:	41 89 c5             	mov    %eax,%r13d
    648b:	31 c0                	xor    %eax,%eax
    648d:	e8 05 66 01 00       	call   1ca97 <efi_ifr_string>
    6492:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    6496:	44 89 ea             	mov    %r13d,%edx
    6499:	48 89 ef             	mov    %rbp,%rdi
    649c:	89 c6                	mov    %eax,%esi
    649e:	e8 61 69 01 00       	call   1ce04 <efi_ifr_text_op>
    64a3:	4c 89 e6             	mov    %r12,%rsi
    64a6:	48 89 ef             	mov    %rbp,%rdi
    64a9:	31 c0                	xor    %eax,%eax
    64ab:	48 8d 15 4e bf 01 00 	lea    0x1bf4e(%rip),%rdx        # 22400 <product_version>
    64b2:	e8 e0 65 01 00       	call   1ca97 <efi_ifr_string>
    64b7:	48 8d 35 95 c4 01 00 	lea    0x1c495(%rip),%rsi        # 22953 <.LC14>
    64be:	48 89 ef             	mov    %rbp,%rdi
    64c1:	89 44 24 28          	mov    %eax,0x28(%rsp)
    64c5:	31 c0                	xor    %eax,%eax
    64c7:	e8 cb 65 01 00       	call   1ca97 <efi_ifr_string>
    64cc:	48 8d 35 91 c4 01 00 	lea    0x1c491(%rip),%rsi        # 22964 <.LC15>
    64d3:	48 89 ef             	mov    %rbp,%rdi
    64d6:	41 89 c5             	mov    %eax,%r13d
    64d9:	31 c0                	xor    %eax,%eax
    64db:	e8 b7 65 01 00       	call   1ca97 <efi_ifr_string>
    64e0:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    64e4:	44 89 ea             	mov    %r13d,%edx
    64e7:	48 89 ef             	mov    %rbp,%rdi
    64ea:	89 c6                	mov    %eax,%esi
    64ec:	e8 13 69 01 00       	call   1ce04 <efi_ifr_text_op>
    64f1:	49 8b 57 28          	mov    0x28(%r15),%rdx
    64f5:	4c 89 e6             	mov    %r12,%rsi
    64f8:	48 89 ef             	mov    %rbp,%rdi
    64fb:	31 c0                	xor    %eax,%eax
    64fd:	e8 95 65 01 00       	call   1ca97 <efi_ifr_string>
    6502:	48 8d 35 63 c4 01 00 	lea    0x1c463(%rip),%rsi        # 2296c <.LC16>
    6509:	48 89 ef             	mov    %rbp,%rdi
    650c:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6510:	31 c0                	xor    %eax,%eax
    6512:	e8 80 65 01 00       	call   1ca97 <efi_ifr_string>
    6517:	48 8d 35 5e c4 01 00 	lea    0x1c45e(%rip),%rsi        # 2297c <.LC17>
    651e:	48 89 ef             	mov    %rbp,%rdi
    6521:	41 89 c5             	mov    %eax,%r13d
    6524:	31 c0                	xor    %eax,%eax
    6526:	e8 6c 65 01 00       	call   1ca97 <efi_ifr_string>
    652b:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    652f:	44 89 ea             	mov    %r13d,%edx
    6532:	48 89 ef             	mov    %rbp,%rdi
    6535:	89 c6                	mov    %eax,%esi
    6537:	e8 c8 68 01 00       	call   1ce04 <efi_ifr_text_op>
    653c:	4c 89 fa             	mov    %r15,%rdx
    653f:	4c 89 e6             	mov    %r12,%rsi
    6542:	48 89 ef             	mov    %rbp,%rdi
    6545:	31 c0                	xor    %eax,%eax
    6547:	e8 4b 65 01 00       	call   1ca97 <efi_ifr_string>
    654c:	48 8d 35 30 c4 01 00 	lea    0x1c430(%rip),%rsi        # 22983 <.LC18>
    6553:	48 89 ef             	mov    %rbp,%rdi
    6556:	41 89 c7             	mov    %eax,%r15d
    6559:	31 c0                	xor    %eax,%eax
    655b:	e8 37 65 01 00       	call   1ca97 <efi_ifr_string>
    6560:	48 8d 35 2c c4 01 00 	lea    0x1c42c(%rip),%rsi        # 22993 <.LC19>
    6567:	48 89 ef             	mov    %rbp,%rdi
    656a:	41 89 c5             	mov    %eax,%r13d
    656d:	31 c0                	xor    %eax,%eax
    656f:	e8 23 65 01 00       	call   1ca97 <efi_ifr_string>
    6574:	44 89 f9             	mov    %r15d,%ecx
    6577:	44 89 ea             	mov    %r13d,%edx
    657a:	48 89 ef             	mov    %rbp,%rdi
    657d:	89 c6                	mov    %eax,%esi
    657f:	45 31 ff             	xor    %r15d,%r15d
    6582:	4c 8d 2d 1f 2d 02 00 	lea    0x22d1f(%rip),%r13        # 292a8 <busid_setting>
    6589:	e8 76 68 01 00       	call   1ce04 <efi_ifr_text_op>
    658e:	5a                   	pop    %rdx
    658f:	59                   	pop    %rcx
    6590:	48 8d 05 19 34 02 00 	lea    0x23419(%rip),%rax        # 299b0 <dns_applicator>
    6597:	49 39 c5             	cmp    %rax,%r13
    659a:	0f 83 b4 00 00 00    	jae    6654 <efi_snp_hii_install+0x367>
    65a0:	48 8b 43 10          	mov    0x10(%rbx),%rax
    65a4:	48 8d 35 60 c3 01 00 	lea    0x1c360(%rip),%rsi        # 2290b <.LC4>
    65ab:	48 8d b8 68 01 00 00 	lea    0x168(%rax),%rdi
    65b2:	e8 01 b4 00 00       	call   119b8 <find_child_settings>
    65b7:	4c 89 ee             	mov    %r13,%rsi
    65ba:	48 89 c7             	mov    %rax,%rdi
    65bd:	e8 65 80 00 00       	call   e627 <nvo_applies>
    65c2:	85 c0                	test   %eax,%eax
    65c4:	0f 84 81 00 00 00    	je     664b <efi_snp_hii_install+0x35e>
    65ca:	4d 85 ff             	test   %r15,%r15
    65cd:	75 6d                	jne    663c <efi_snp_hii_install+0x34f>
    65cf:	49 8b 55 00          	mov    0x0(%r13),%rdx
    65d3:	4c 89 e6             	mov    %r12,%rsi
    65d6:	48 89 ef             	mov    %rbp,%rdi
    65d9:	31 c0                	xor    %eax,%eax
    65db:	e8 b7 64 01 00       	call   1ca97 <efi_ifr_string>
    65e0:	49 8b 55 08          	mov    0x8(%r13),%rdx
    65e4:	4c 89 e6             	mov    %r12,%rsi
    65e7:	48 89 ef             	mov    %rbp,%rdi
    65ea:	89 44 24 18          	mov    %eax,0x18(%rsp)
    65ee:	31 c0                	xor    %eax,%eax
    65f0:	e8 a2 64 01 00       	call   1ca97 <efi_ifr_string>
    65f5:	49 8b 55 00          	mov    0x0(%r13),%rdx
    65f9:	48 8d 35 9a c3 01 00 	lea    0x1c39a(%rip),%rsi        # 2299a <.LC12>
    6600:	48 89 ef             	mov    %rbp,%rdi
    6603:	41 89 c7             	mov    %eax,%r15d
    6606:	31 c0                	xor    %eax,%eax
    6608:	e8 8a 64 01 00       	call   1ca97 <efi_ifr_string>
    660d:	6a 00                	push   $0x0
    660f:	41 8b 4d 18          	mov    0x18(%r13),%ecx
    6613:	44 89 fe             	mov    %r15d,%esi
    6616:	68 ff 00 00 00       	push   $0xff
    661b:	89 c2                	mov    %eax,%edx
    661d:	48 89 ef             	mov    %rbp,%rdi
    6620:	4d 89 ef             	mov    %r13,%r15
    6623:	6a 00                	push   $0x0
    6625:	6a 00                	push   $0x0
    6627:	44 8b 4c 24 38       	mov    0x38(%rsp),%r9d
    662c:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
    6631:	e8 63 67 01 00       	call   1cd99 <efi_ifr_string_op>
    6636:	48 83 c4 20          	add    $0x20,%rsp
    663a:	eb 0f                	jmp    664b <efi_snp_hii_install+0x35e>
    663c:	4c 89 fe             	mov    %r15,%rsi
    663f:	4c 89 ef             	mov    %r13,%rdi
    6642:	e8 af b4 00 00       	call   11af6 <setting_cmp>
    6647:	85 c0                	test   %eax,%eax
    6649:	75 84                	jne    65cf <efi_snp_hii_install+0x2e2>
    664b:	49 83 c5 28          	add    $0x28,%r13
    664f:	e9 3c ff ff ff       	jmp    6590 <efi_snp_hii_install+0x2a3>
    6654:	48 89 ef             	mov    %rbp,%rdi
    6657:	e8 51 65 01 00       	call   1cbad <efi_ifr_end_op>
    665c:	48 89 ef             	mov    %rbp,%rdi
    665f:	e8 49 65 01 00       	call   1cbad <efi_ifr_end_op>
    6664:	48 8d 35 46 c3 01 00 	lea    0x1c346(%rip),%rsi        # 229b1 <.LC21>
    666b:	48 89 ef             	mov    %rbp,%rdi
    666e:	31 c0                	xor    %eax,%eax
    6670:	e8 22 64 01 00       	call   1ca97 <efi_ifr_string>
    6675:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    667a:	48 89 ef             	mov    %rbp,%rdi
    667d:	48 8d 15 35 c3 01 00 	lea    0x1c335(%rip),%rdx        # 229b9 <.LC22>
    6684:	89 c1                	mov    %eax,%ecx
    6686:	e8 1d 68 01 00       	call   1cea8 <efi_ifr_package>
    668b:	48 89 ef             	mov    %rbp,%rdi
    668e:	49 89 c4             	mov    %rax,%r12
    6691:	48 85 c0             	test   %rax,%rax
    6694:	75 1b                	jne    66b1 <efi_snp_hii_install+0x3c4>
    6696:	e8 e6 67 01 00       	call   1ce81 <efi_ifr_free>
    669b:	48 c7 83 b8 04 00 00 	movq   $0x0,0x4b8(%rbx)
    66a2:	00 00 00 00 
    66a6:	41 bc 77 1f ce ce    	mov    $0xcece1f77,%r12d
    66ac:	e9 f4 01 00 00       	jmp    68a5 <efi_snp_hii_install+0x5b8>
    66b1:	e8 cb 67 01 00       	call   1ce81 <efi_ifr_free>
    66b6:	4c 89 a3 b8 04 00 00 	mov    %r12,0x4b8(%rbx)
    66bd:	48 8b bb 90 05 00 00 	mov    0x590(%rbx),%rdi
    66c4:	e8 c1 03 00 00       	call   6a8a <efi_devpath_len>
    66c9:	48 8d 78 18          	lea    0x18(%rax),%rdi
    66cd:	48 89 c5             	mov    %rax,%rbp
    66d0:	e8 61 60 00 00       	call   c736 <zalloc>
    66d5:	48 89 83 c8 04 00 00 	mov    %rax,0x4c8(%rbx)
    66dc:	48 89 c7             	mov    %rax,%rdi
    66df:	48 85 c0             	test   %rax,%rax
    66e2:	75 0b                	jne    66ef <efi_snp_hii_install+0x402>
    66e4:	41 bc 77 1f ce ce    	mov    $0xcece1f77,%r12d
    66ea:	e9 9f 01 00 00       	jmp    688e <efi_snp_hii_install+0x5a1>
    66ef:	48 8b b3 90 05 00 00 	mov    0x590(%rbx),%rsi
    66f6:	48 89 ea             	mov    %rbp,%rdx
    66f9:	4c 8d a3 c0 04 00 00 	lea    0x4c0(%rbx),%r12
    6700:	4c 8d 2d 89 e3 01 00 	lea    0x1e389(%rip),%r13        # 24a90 <efi_device_path_protocol_guid>
    6707:	e8 dd 0c 01 00       	call   173e9 <__memcpy>
    670c:	48 03 ab c8 04 00 00 	add    0x4c8(%rbx),%rbp
    6713:	66 c7 45 00 01 04    	movw   $0x401,0x0(%rbp)
    6719:	48 8d 7d 04          	lea    0x4(%rbp),%rdi
    671d:	c6 45 02 14          	movb   $0x14,0x2(%rbp)
    6721:	e8 04 f6 ff ff       	call   5d2a <efi_snp_hii_random_guid>
    6726:	c6 45 16 04          	movb   $0x4,0x16(%rbp)
    672a:	48 83 ec 20          	sub    $0x20,%rsp
    672e:	45 31 c9             	xor    %r9d,%r9d
    6731:	66 c7 45 14 7f ff    	movw   $0xff7f,0x14(%rbp)
    6737:	4c 89 ea             	mov    %r13,%rdx
    673a:	4c 89 e1             	mov    %r12,%rcx
    673d:	4c 8b 83 c8 04 00 00 	mov    0x4c8(%rbx),%r8
    6744:	41 ff 96 48 01 00 00 	call   *0x148(%r14)
    674b:	48 83 c4 20          	add    $0x20,%rsp
    674f:	85 c0                	test   %eax,%eax
    6751:	74 1d                	je     6770 <efi_snp_hii_install+0x483>
    6753:	4c 63 e0             	movslq %eax,%r12
    6756:	49 c1 ec 38          	shr    $0x38,%r12
    675a:	41 09 c4             	or     %eax,%r12d
    675d:	45 0f b6 e4          	movzbl %r12b,%r12d
    6761:	41 81 cc 00 e0 31 7f 	or     $0x7f31e000,%r12d
    6768:	41 f7 dc             	neg    %r12d
    676b:	e9 07 01 00 00       	jmp    6877 <efi_snp_hii_install+0x58a>
    6770:	48 8b 05 e1 34 02 00 	mov    0x234e1(%rip),%rax        # 29c58 <efihii>
    6777:	48 83 ec 20          	sub    $0x20,%rsp
    677b:	48 8b 93 b8 04 00 00 	mov    0x4b8(%rbx),%rdx
    6782:	4c 8d 8b d0 04 00 00 	lea    0x4d0(%rbx),%r9
    6789:	4c 8b 83 c0 04 00 00 	mov    0x4c0(%rbx),%r8
    6790:	48 89 c1             	mov    %rax,%rcx
    6793:	ff 10                	call   *(%rax)
    6795:	48 83 c4 20          	add    $0x20,%rsp
    6799:	85 c0                	test   %eax,%eax
    679b:	74 1d                	je     67ba <efi_snp_hii_install+0x4cd>
    679d:	4c 63 e0             	movslq %eax,%r12
    67a0:	49 c1 ec 38          	shr    $0x38,%r12
    67a4:	41 09 c4             	or     %eax,%r12d
    67a7:	45 0f b6 e4          	movzbl %r12b,%r12d
    67ab:	41 81 cc 00 e0 31 7f 	or     $0x7f31e000,%r12d
    67b2:	41 f7 dc             	neg    %r12d
    67b5:	e9 9a 00 00 00       	jmp    6854 <efi_snp_hii_install+0x567>
    67ba:	48 83 ec 20          	sub    $0x20,%rsp
    67be:	4c 8d 3d 6b e2 01 00 	lea    0x1e26b(%rip),%r15        # 24a30 <efi_hii_config_access_protocol_guid>
    67c5:	45 31 c9             	xor    %r9d,%r9d
    67c8:	4c 89 e1             	mov    %r12,%rcx
    67cb:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    67d0:	4c 89 fa             	mov    %r15,%rdx
    67d3:	41 ff 96 48 01 00 00 	call   *0x148(%r14)
    67da:	48 83 c4 20          	add    $0x20,%rsp
    67de:	85 c0                	test   %eax,%eax
    67e0:	74 1a                	je     67fc <efi_snp_hii_install+0x50f>
    67e2:	4c 63 e0             	movslq %eax,%r12
    67e5:	49 c1 ec 38          	shr    $0x38,%r12
    67e9:	41 09 c4             	or     %eax,%r12d
    67ec:	45 0f b6 e4          	movzbl %r12b,%r12d
    67f0:	41 81 cc 00 e0 31 7f 	or     $0x7f31e000,%r12d
    67f7:	41 f7 dc             	neg    %r12d
    67fa:	eb 3c                	jmp    6838 <efi_snp_hii_install+0x54b>
    67fc:	48 8b b3 c0 04 00 00 	mov    0x4c0(%rbx),%rsi
    6803:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    6807:	e8 8b 02 00 00       	call   6a97 <efi_child_add>
    680c:	41 89 c4             	mov    %eax,%r12d
    680f:	85 c0                	test   %eax,%eax
    6811:	0f 84 8e 00 00 00    	je     68a5 <efi_snp_hii_install+0x5b8>
    6817:	48 83 ec 20          	sub    $0x20,%rsp
    681b:	48 8b 8b c0 04 00 00 	mov    0x4c0(%rbx),%rcx
    6822:	45 31 c9             	xor    %r9d,%r9d
    6825:	4c 89 fa             	mov    %r15,%rdx
    6828:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    682d:	41 ff 96 50 01 00 00 	call   *0x150(%r14)
    6834:	48 83 c4 20          	add    $0x20,%rsp
    6838:	48 8b 05 19 34 02 00 	mov    0x23419(%rip),%rax        # 29c58 <efihii>
    683f:	48 83 ec 20          	sub    $0x20,%rsp
    6843:	48 8b 93 d0 04 00 00 	mov    0x4d0(%rbx),%rdx
    684a:	48 89 c1             	mov    %rax,%rcx
    684d:	ff 50 08             	call   *0x8(%rax)
    6850:	48 83 c4 20          	add    $0x20,%rsp
    6854:	48 83 ec 20          	sub    $0x20,%rsp
    6858:	48 8b 8b c0 04 00 00 	mov    0x4c0(%rbx),%rcx
    685f:	45 31 c9             	xor    %r9d,%r9d
    6862:	4c 89 ea             	mov    %r13,%rdx
    6865:	4c 8b 83 c8 04 00 00 	mov    0x4c8(%rbx),%r8
    686c:	41 ff 96 50 01 00 00 	call   *0x150(%r14)
    6873:	48 83 c4 20          	add    $0x20,%rsp
    6877:	48 8b bb c8 04 00 00 	mov    0x4c8(%rbx),%rdi
    687e:	e8 9f 5e 00 00       	call   c722 <free>
    6883:	48 c7 83 c8 04 00 00 	movq   $0x0,0x4c8(%rbx)
    688a:	00 00 00 00 
    688e:	48 8b bb b8 04 00 00 	mov    0x4b8(%rbx),%rdi
    6895:	e8 88 5e 00 00       	call   c722 <free>
    689a:	48 c7 83 b8 04 00 00 	movq   $0x0,0x4b8(%rbx)
    68a1:	00 00 00 00 
    68a5:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    68ac:	00 
    68ad:	48 2b 05 9c 37 02 00 	sub    0x2379c(%rip),%rax        # 2a050 <__stack_chk_guard>
    68b4:	74 05                	je     68bb <efi_snp_hii_install+0x5ce>
    68b6:	e8 a5 c1 ff ff       	call   2a60 <__stack_chk_fail>
    68bb:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    68c2:	44 89 e0             	mov    %r12d,%eax
    68c5:	5b                   	pop    %rbx
    68c6:	5d                   	pop    %rbp
    68c7:	41 5c                	pop    %r12
    68c9:	41 5d                	pop    %r13
    68cb:	41 5e                	pop    %r14
    68cd:	41 5f                	pop    %r15
    68cf:	c3                   	ret    

00000000000068d0 <efi_snp_hii_uninstall>:
    68d0:	f3 0f 1e fa          	endbr64 
    68d4:	48 83 3d 7c 33 02 00 	cmpq   $0x0,0x2337c(%rip)        # 29c58 <efihii>
    68db:	00 
    68dc:	0f 84 ab 00 00 00    	je     698d <efi_snp_hii_uninstall+0xbd>
    68e2:	55                   	push   %rbp
    68e3:	53                   	push   %rbx
    68e4:	48 89 fb             	mov    %rdi,%rbx
    68e7:	50                   	push   %rax
    68e8:	48 8b 05 89 37 02 00 	mov    0x23789(%rip),%rax        # 2a078 <efi_systab>
    68ef:	48 8b b7 c0 04 00 00 	mov    0x4c0(%rdi),%rsi
    68f6:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    68fa:	48 8b 68 60          	mov    0x60(%rax),%rbp
    68fe:	e8 0f 02 00 00       	call   6b12 <efi_child_del>
    6903:	48 83 ec 20          	sub    $0x20,%rsp
    6907:	4c 8d 83 a0 04 00 00 	lea    0x4a0(%rbx),%r8
    690e:	48 8b 8b c0 04 00 00 	mov    0x4c0(%rbx),%rcx
    6915:	45 31 c9             	xor    %r9d,%r9d
    6918:	48 8d 15 11 e1 01 00 	lea    0x1e111(%rip),%rdx        # 24a30 <efi_hii_config_access_protocol_guid>
    691f:	ff 95 50 01 00 00    	call   *0x150(%rbp)
    6925:	48 8b 05 2c 33 02 00 	mov    0x2332c(%rip),%rax        # 29c58 <efihii>
    692c:	48 8b 93 d0 04 00 00 	mov    0x4d0(%rbx),%rdx
    6933:	48 89 c1             	mov    %rax,%rcx
    6936:	ff 50 08             	call   *0x8(%rax)
    6939:	48 8b 8b c0 04 00 00 	mov    0x4c0(%rbx),%rcx
    6940:	4c 8b 83 c8 04 00 00 	mov    0x4c8(%rbx),%r8
    6947:	45 31 c9             	xor    %r9d,%r9d
    694a:	48 8d 15 3f e1 01 00 	lea    0x1e13f(%rip),%rdx        # 24a90 <efi_device_path_protocol_guid>
    6951:	ff 95 50 01 00 00    	call   *0x150(%rbp)
    6957:	48 8b bb c8 04 00 00 	mov    0x4c8(%rbx),%rdi
    695e:	48 83 c4 20          	add    $0x20,%rsp
    6962:	e8 bb 5d 00 00       	call   c722 <free>
    6967:	48 8b bb b8 04 00 00 	mov    0x4b8(%rbx),%rdi
    696e:	48 c7 83 c8 04 00 00 	movq   $0x0,0x4c8(%rbx)
    6975:	00 00 00 00 
    6979:	e8 a4 5d 00 00       	call   c722 <free>
    697e:	48 c7 83 b8 04 00 00 	movq   $0x0,0x4b8(%rbx)
    6985:	00 00 00 00 
    6989:	5a                   	pop    %rdx
    698a:	5b                   	pop    %rbx
    698b:	5d                   	pop    %rbp
    698c:	c3                   	ret    
    698d:	c3                   	ret    

000000000000698e <efi_printf_sputc>:
    698e:	f3 0f 1e fa          	endbr64 
    6992:	48 8b 47 08          	mov    0x8(%rdi),%rax
    6996:	48 3b 47 18          	cmp    0x18(%rdi),%rax
    699a:	73 08                	jae    69a4 <efi_printf_sputc+0x16>
    699c:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    69a0:	66 89 34 42          	mov    %si,(%rdx,%rax,2)
    69a4:	c3                   	ret    

00000000000069a5 <efi_vsnprintf>:
    69a5:	f3 0f 1e fa          	endbr64 
    69a9:	55                   	push   %rbp
    69aa:	48 89 fd             	mov    %rdi,%rbp
    69ad:	53                   	push   %rbx
    69ae:	48 89 f3             	mov    %rsi,%rbx
    69b1:	48 89 d6             	mov    %rdx,%rsi
    69b4:	48 89 ca             	mov    %rcx,%rdx
    69b7:	48 83 ec 38          	sub    $0x38,%rsp
    69bb:	48 8b 05 8e 36 02 00 	mov    0x2368e(%rip),%rax        # 2a050 <__stack_chk_guard>
    69c2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    69c7:	48 8d 05 c0 ff ff ff 	lea    -0x40(%rip),%rax        # 698e <efi_printf_sputc>
    69ce:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    69d3:	48 89 e7             	mov    %rsp,%rdi
    69d6:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    69db:	48 89 04 24          	mov    %rax,(%rsp)
    69df:	e8 ef 02 01 00       	call   16cd3 <vcprintf>
    69e4:	48 85 db             	test   %rbx,%rbx
    69e7:	74 11                	je     69fa <efi_vsnprintf+0x55>
    69e9:	48 ff cb             	dec    %rbx
    69ec:	48 39 c3             	cmp    %rax,%rbx
    69ef:	48 0f 47 d8          	cmova  %rax,%rbx
    69f3:	66 c7 44 5d 00 00 00 	movw   $0x0,0x0(%rbp,%rbx,2)
    69fa:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    69ff:	48 2b 15 4a 36 02 00 	sub    0x2364a(%rip),%rdx        # 2a050 <__stack_chk_guard>
    6a06:	74 05                	je     6a0d <efi_vsnprintf+0x68>
    6a08:	e8 53 c0 ff ff       	call   2a60 <__stack_chk_fail>
    6a0d:	48 83 c4 38          	add    $0x38,%rsp
    6a11:	5b                   	pop    %rbx
    6a12:	5d                   	pop    %rbp
    6a13:	c3                   	ret    

0000000000006a14 <efi_snprintf>:
    6a14:	f3 0f 1e fa          	endbr64 
    6a18:	48 83 ec 58          	sub    $0x58,%rsp
    6a1c:	48 8b 05 2d 36 02 00 	mov    0x2362d(%rip),%rax        # 2a050 <__stack_chk_guard>
    6a23:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6a28:	31 c0                	xor    %eax,%eax
    6a2a:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    6a2f:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    6a34:	48 89 e1             	mov    %rsp,%rcx
    6a37:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6a3c:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    6a41:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    6a46:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    6a4b:	c7 04 24 18 00 00 00 	movl   $0x18,(%rsp)
    6a52:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6a57:	e8 49 ff ff ff       	call   69a5 <efi_vsnprintf>
    6a5c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6a61:	48 2b 15 e8 35 02 00 	sub    0x235e8(%rip),%rdx        # 2a050 <__stack_chk_guard>
    6a68:	74 05                	je     6a6f <efi_snprintf+0x5b>
    6a6a:	e8 f1 bf ff ff       	call   2a60 <__stack_chk_fail>
    6a6f:	48 83 c4 58          	add    $0x58,%rsp
    6a73:	c3                   	ret    

0000000000006a74 <efi_devpath_end>:
    6a74:	f3 0f 1e fa          	endbr64 
    6a78:	48 89 f8             	mov    %rdi,%rax
    6a7b:	80 38 7f             	cmpb   $0x7f,(%rax)
    6a7e:	74 09                	je     6a89 <efi_devpath_end+0x15>
    6a80:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    6a84:	48 01 d0             	add    %rdx,%rax
    6a87:	eb f2                	jmp    6a7b <efi_devpath_end+0x7>
    6a89:	c3                   	ret    

0000000000006a8a <efi_devpath_len>:
    6a8a:	f3 0f 1e fa          	endbr64 
    6a8e:	e8 e1 ff ff ff       	call   6a74 <efi_devpath_end>
    6a93:	48 29 f8             	sub    %rdi,%rax
    6a96:	c3                   	ret    

0000000000006a97 <efi_child_add>:
    6a97:	f3 0f 1e fa          	endbr64 
    6a9b:	48 83 ec 18          	sub    $0x18,%rsp
    6a9f:	48 8d 15 ea df 01 00 	lea    0x1dfea(%rip),%rdx        # 24a90 <efi_device_path_protocol_guid>
    6aa6:	48 89 f9             	mov    %rdi,%rcx
    6aa9:	4c 8b 0d b8 35 02 00 	mov    0x235b8(%rip),%r9        # 2a068 <efi_image_handle>
    6ab0:	48 8b 05 99 35 02 00 	mov    0x23599(%rip),%rax        # 2a050 <__stack_chk_guard>
    6ab7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6abc:	48 8b 05 b5 35 02 00 	mov    0x235b5(%rip),%rax        # 2a078 <efi_systab>
    6ac3:	48 8b 40 60          	mov    0x60(%rax),%rax
    6ac7:	6a 08                	push   $0x8
    6ac9:	56                   	push   %rsi
    6aca:	48 83 ec 20          	sub    $0x20,%rsp
    6ace:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
    6ad3:	ff 90 18 01 00 00    	call   *0x118(%rax)
    6ad9:	48 83 c4 30          	add    $0x30,%rsp
    6add:	48 89 c2             	mov    %rax,%rdx
    6ae0:	31 c0                	xor    %eax,%eax
    6ae2:	48 85 d2             	test   %rdx,%rdx
    6ae5:	74 13                	je     6afa <efi_child_add+0x63>
    6ae7:	48 89 d0             	mov    %rdx,%rax
    6aea:	48 c1 e8 38          	shr    $0x38,%rax
    6aee:	09 d0                	or     %edx,%eax
    6af0:	0f b6 c0             	movzbl %al,%eax
    6af3:	0d 00 e0 45 7f       	or     $0x7f45e000,%eax
    6af8:	f7 d8                	neg    %eax
    6afa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6aff:	48 2b 15 4a 35 02 00 	sub    0x2354a(%rip),%rdx        # 2a050 <__stack_chk_guard>
    6b06:	74 05                	je     6b0d <efi_child_add+0x76>
    6b08:	e8 53 bf ff ff       	call   2a60 <__stack_chk_fail>
    6b0d:	48 83 c4 18          	add    $0x18,%rsp
    6b11:	c3                   	ret    

0000000000006b12 <efi_child_del>:
    6b12:	f3 0f 1e fa          	endbr64 
    6b16:	48 83 ec 28          	sub    $0x28,%rsp
    6b1a:	48 89 f9             	mov    %rdi,%rcx
    6b1d:	48 8b 05 54 35 02 00 	mov    0x23554(%rip),%rax        # 2a078 <efi_systab>
    6b24:	4c 8b 05 3d 35 02 00 	mov    0x2353d(%rip),%r8        # 2a068 <efi_image_handle>
    6b2b:	49 89 f1             	mov    %rsi,%r9
    6b2e:	48 8d 15 5b df 01 00 	lea    0x1df5b(%rip),%rdx        # 24a90 <efi_device_path_protocol_guid>
    6b35:	48 8b 40 60          	mov    0x60(%rax),%rax
    6b39:	ff 90 20 01 00 00    	call   *0x120(%rax)
    6b3f:	48 83 c4 28          	add    $0x28,%rsp
    6b43:	c3                   	ret    

0000000000006b44 <efi_watchdog_expired>:
    6b44:	f3 0f 1e fa          	endbr64 
    6b48:	48 8b 05 29 35 02 00 	mov    0x23529(%rip),%rax        # 2a078 <efi_systab>
    6b4f:	53                   	push   %rbx
    6b50:	be 00 28 00 00       	mov    $0x2800,%esi
    6b55:	48 8b 58 60          	mov    0x60(%rax),%rbx
    6b59:	e8 e0 97 00 00       	call   1033e <start_timer_fixed>
    6b5e:	48 83 ec 20          	sub    $0x20,%rsp
    6b62:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
    6b68:	4c 8d 0d 91 da 01 00 	lea    0x1da91(%rip),%r9        # 24600 <data.0>
    6b6f:	48 ba 44 41 45 44 45 	movabs $0x6950584544454144,%rdx
    6b76:	58 50 69 
    6b79:	b9 2c 01 00 00       	mov    $0x12c,%ecx
    6b7e:	ff 93 00 01 00 00    	call   *0x100(%rbx)
    6b84:	48 83 c4 20          	add    $0x20,%rsp
    6b88:	48 85 c0             	test   %rax,%rax
    6b8b:	74 00                	je     6b8d <efi_watchdog_expired+0x49>
    6b8d:	5b                   	pop    %rbx
    6b8e:	c3                   	ret    

0000000000006b8f <efi_wrap>:
    6b8f:	f3 0f 1e fa          	endbr64 
    6b93:	c3                   	ret    

0000000000006b94 <efi_probe>:
    6b94:	f3 0f 1e fa          	endbr64 
    6b98:	31 c0                	xor    %eax,%eax
    6b9a:	c3                   	ret    

0000000000006b9b <efi_remove>:
    6b9b:	f3 0f 1e fa          	endbr64 
    6b9f:	e9 4e 57 01 00       	jmp    1c2f2 <efi_driver_disconnect_all>

0000000000006ba4 <_efidrv_start>:
    6ba4:	f3 0f 1e fa          	endbr64 
    6ba8:	41 55                	push   %r13
    6baa:	49 89 d5             	mov    %rdx,%r13
    6bad:	41 54                	push   %r12
    6baf:	49 89 cc             	mov    %rcx,%r12
    6bb2:	57                   	push   %rdi
    6bb3:	48 89 cf             	mov    %rcx,%rdi
    6bb6:	56                   	push   %rsi
    6bb7:	53                   	push   %rbx
    6bb8:	48 83 ec 20          	sub    $0x20,%rsp
    6bbc:	e8 c6 bb ff ff       	call   2787 <efi_stack_cookie>
    6bc1:	4c 89 e7             	mov    %r12,%rdi
    6bc4:	4c 89 ee             	mov    %r13,%rsi
    6bc7:	48 89 05 82 34 02 00 	mov    %rax,0x23482(%rip)        # 2a050 <__stack_chk_guard>
    6bce:	e8 e6 bb ff ff       	call   27b9 <efi_init>
    6bd3:	49 89 c4             	mov    %rax,%r12
    6bd6:	48 85 c0             	test   %rax,%rax
    6bd9:	75 26                	jne    6c01 <_efidrv_start+0x5d>
    6bdb:	48 8b 05 96 34 02 00 	mov    0x23496(%rip),%rax        # 2a078 <efi_systab>
    6be2:	b9 08 00 00 00       	mov    $0x8,%ecx
    6be7:	48 8b 58 60          	mov    0x60(%rax),%rbx
    6beb:	ff 53 18             	call   *0x18(%rbx)
    6bee:	49 89 c5             	mov    %rax,%r13
    6bf1:	e8 49 22 00 00       	call   8e3f <initialise>
    6bf6:	e8 6a 22 00 00       	call   8e65 <startup>
    6bfb:	4c 89 e9             	mov    %r13,%rcx
    6bfe:	ff 53 20             	call   *0x20(%rbx)
    6c01:	48 83 c4 20          	add    $0x20,%rsp
    6c05:	4c 89 e0             	mov    %r12,%rax
    6c08:	5b                   	pop    %rbx
    6c09:	5e                   	pop    %rsi
    6c0a:	5f                   	pop    %rdi
    6c0b:	41 5c                	pop    %r12
    6c0d:	41 5d                	pop    %r13
    6c0f:	c3                   	ret    

0000000000006c10 <embedded_init>:
    6c10:	f3 0f 1e fa          	endbr64 
    6c14:	c3                   	ret    

0000000000006c15 <copy_encap_settings>:
    6c15:	41 57                	push   %r15
    6c17:	b9 08 00 00 00       	mov    $0x8,%ecx
    6c1c:	c1 e2 08             	shl    $0x8,%edx
    6c1f:	41 56                	push   %r14
    6c21:	41 55                	push   %r13
    6c23:	41 89 d5             	mov    %edx,%r13d
    6c26:	41 54                	push   %r12
    6c28:	49 89 f4             	mov    %rsi,%r12
    6c2b:	55                   	push   %rbp
    6c2c:	bd 01 00 00 00       	mov    $0x1,%ebp
    6c31:	53                   	push   %rbx
    6c32:	48 89 fb             	mov    %rdi,%rbx
    6c35:	48 83 ec 58          	sub    $0x58,%rsp
    6c39:	48 8b 05 10 34 02 00 	mov    0x23410(%rip),%rax        # 2a050 <__stack_chk_guard>
    6c40:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    6c45:	31 c0                	xor    %eax,%eax
    6c47:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    6c4c:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
    6c51:	f3 ab                	rep stos %eax,%es:(%rdi)
    6c53:	48 8d 05 5a d8 01 00 	lea    0x1d85a(%rip),%rax        # 244b4 <.LC0>
    6c5a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    6c5f:	45 89 ef             	mov    %r13d,%r15d
    6c62:	41 09 ef             	or     %ebp,%r15d
    6c65:	41 83 ff 2b          	cmp    $0x2b,%r15d
    6c69:	74 09                	je     6c74 <copy_encap_settings+0x5f>
    6c6b:	41 81 ff af 00 00 00 	cmp    $0xaf,%r15d
    6c72:	75 20                	jne    6c94 <copy_encap_settings+0x7f>
    6c74:	44 89 fa             	mov    %r15d,%edx
    6c77:	4c 89 e6             	mov    %r12,%rsi
    6c7a:	48 89 df             	mov    %rbx,%rdi
    6c7d:	e8 93 ff ff ff       	call   6c15 <copy_encap_settings>
    6c82:	85 c0                	test   %eax,%eax
    6c84:	75 51                	jne    6cd7 <copy_encap_settings+0xc2>
    6c86:	ff c5                	inc    %ebp
    6c88:	81 fd ff 00 00 00    	cmp    $0xff,%ebp
    6c8e:	75 cf                	jne    6c5f <copy_encap_settings+0x4a>
    6c90:	31 c0                	xor    %eax,%eax
    6c92:	eb 43                	jmp    6cd7 <copy_encap_settings+0xc2>
    6c94:	44 89 f8             	mov    %r15d,%eax
    6c97:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    6c9c:	4c 89 f2             	mov    %r14,%rdx
    6c9f:	4c 89 e7             	mov    %r12,%rdi
    6ca2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    6ca7:	e8 0e b2 00 00       	call   11eba <fetch_raw_setting_copy>
    6cac:	85 c0                	test   %eax,%eax
    6cae:	78 d6                	js     6c86 <copy_encap_settings+0x71>
    6cb0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6cb5:	48 63 c8             	movslq %eax,%rcx
    6cb8:	44 89 fe             	mov    %r15d,%esi
    6cbb:	48 89 df             	mov    %rbx,%rdi
    6cbe:	e8 35 3d 01 00       	call   1a9f8 <dhcppkt_store>
    6cc3:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    6cc8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    6ccc:	e8 51 5a 00 00       	call   c722 <free>
    6cd1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    6cd5:	eb ab                	jmp    6c82 <copy_encap_settings+0x6d>
    6cd7:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    6cdc:	48 2b 15 6d 33 02 00 	sub    0x2336d(%rip),%rdx        # 2a050 <__stack_chk_guard>
    6ce3:	74 05                	je     6cea <copy_encap_settings+0xd5>
    6ce5:	e8 76 bd ff ff       	call   2a60 <__stack_chk_fail>
    6cea:	48 83 c4 58          	add    $0x58,%rsp
    6cee:	5b                   	pop    %rbx
    6cef:	5d                   	pop    %rbp
    6cf0:	41 5c                	pop    %r12
    6cf2:	41 5d                	pop    %r13
    6cf4:	41 5e                	pop    %r14
    6cf6:	41 5f                	pop    %r15
    6cf8:	c3                   	ret    

0000000000006cf9 <create_fakedhcpdiscover>:
    6cf9:	f3 0f 1e fa          	endbr64 
    6cfd:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    6d04:	49 89 fa             	mov    %rdi,%r10
    6d07:	49 89 f1             	mov    %rsi,%r9
    6d0a:	45 31 c0             	xor    %r8d,%r8d
    6d0d:	48 8b 05 3c 33 02 00 	mov    0x2333c(%rip),%rax        # 2a050 <__stack_chk_guard>
    6d14:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    6d1b:	00 
    6d1c:	31 c0                	xor    %eax,%eax
    6d1e:	48 89 e7             	mov    %rsp,%rdi
    6d21:	8b 0d 79 33 02 00    	mov    0x23379(%rip),%ecx        # 2a0a0 <dhcp_last_xid>
    6d27:	4c 89 d6             	mov    %r10,%rsi
    6d2a:	50                   	push   %rax
    6d2b:	52                   	push   %rdx
    6d2c:	ba 01 00 00 00       	mov    $0x1,%edx
    6d31:	e8 42 31 01 00       	call   19e78 <dhcp_create_request>
    6d36:	5a                   	pop    %rdx
    6d37:	59                   	pop    %rcx
    6d38:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    6d3f:	00 
    6d40:	48 2b 15 09 33 02 00 	sub    0x23309(%rip),%rdx        # 2a050 <__stack_chk_guard>
    6d47:	74 05                	je     6d4e <create_fakedhcpdiscover+0x55>
    6d49:	e8 12 bd ff ff       	call   2a60 <__stack_chk_fail>
    6d4e:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    6d55:	c3                   	ret    

0000000000006d56 <create_fakedhcpack>:
    6d56:	f3 0f 1e fa          	endbr64 
    6d5a:	55                   	push   %rbp
    6d5b:	45 31 c9             	xor    %r9d,%r9d
    6d5e:	45 31 c0             	xor    %r8d,%r8d
    6d61:	53                   	push   %rbx
    6d62:	48 89 fb             	mov    %rdi,%rbx
    6d65:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    6d6c:	8b 0d 2e 33 02 00    	mov    0x2332e(%rip),%ecx        # 2a0a0 <dhcp_last_xid>
    6d72:	48 8b 05 d7 32 02 00 	mov    0x232d7(%rip),%rax        # 2a050 <__stack_chk_guard>
    6d79:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    6d80:	00 
    6d81:	31 c0                	xor    %eax,%eax
    6d83:	48 89 e5             	mov    %rsp,%rbp
    6d86:	52                   	push   %rdx
    6d87:	ba 05 00 00 00       	mov    $0x5,%edx
    6d8c:	56                   	push   %rsi
    6d8d:	48 89 fe             	mov    %rdi,%rsi
    6d90:	48 89 ef             	mov    %rbp,%rdi
    6d93:	e8 de 2f 01 00       	call   19d76 <dhcp_create_packet>
    6d98:	48 89 ec             	mov    %rbp,%rsp
    6d9b:	85 c0                	test   %eax,%eax
    6d9d:	75 21                	jne    6dc0 <create_fakedhcpack+0x6a>
    6d9f:	31 d2                	xor    %edx,%edx
    6da1:	31 f6                	xor    %esi,%esi
    6da3:	48 89 ef             	mov    %rbp,%rdi
    6da6:	e8 6a fe ff ff       	call   6c15 <copy_encap_settings>
    6dab:	85 c0                	test   %eax,%eax
    6dad:	75 11                	jne    6dc0 <create_fakedhcpack+0x6a>
    6daf:	48 8d b3 68 01 00 00 	lea    0x168(%rbx),%rsi
    6db6:	31 d2                	xor    %edx,%edx
    6db8:	48 89 ef             	mov    %rbp,%rdi
    6dbb:	e8 55 fe ff ff       	call   6c15 <copy_encap_settings>
    6dc0:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    6dc7:	00 
    6dc8:	48 2b 15 81 32 02 00 	sub    0x23281(%rip),%rdx        # 2a050 <__stack_chk_guard>
    6dcf:	74 05                	je     6dd6 <create_fakedhcpack+0x80>
    6dd1:	e8 8a bc ff ff       	call   2a60 <__stack_chk_fail>
    6dd6:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    6ddd:	5b                   	pop    %rbx
    6dde:	5d                   	pop    %rbp
    6ddf:	c3                   	ret    

0000000000006de0 <create_fakepxebsack>:
    6de0:	f3 0f 1e fa          	endbr64 
    6de4:	41 57                	push   %r15
    6de6:	41 56                	push   %r14
    6de8:	41 55                	push   %r13
    6dea:	41 54                	push   %r12
    6dec:	55                   	push   %rbp
    6ded:	48 89 fd             	mov    %rdi,%rbp
    6df0:	48 8d 3d c8 bb 01 00 	lea    0x1bbc8(%rip),%rdi        # 229bf <.LC1>
    6df7:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    6dfe:	48 8b 05 4b 32 02 00 	mov    0x2324b(%rip),%rax        # 2a050 <__stack_chk_guard>
    6e05:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    6e0c:	00 
    6e0d:	31 c0                	xor    %eax,%eax
    6e0f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6e14:	48 89 14 24          	mov    %rdx,(%rsp)
    6e18:	e8 11 ab 00 00       	call   1192e <find_settings>
    6e1d:	48 8d 3d d5 b9 01 00 	lea    0x1b9d5(%rip),%rdi        # 227f9 <.LC2>
    6e24:	49 89 c6             	mov    %rax,%r14
    6e27:	e8 02 ab 00 00       	call   1192e <find_settings>
    6e2c:	48 8b 14 24          	mov    (%rsp),%rdx
    6e30:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6e35:	49 89 c5             	mov    %rax,%r13
    6e38:	4c 89 f0             	mov    %r14,%rax
    6e3b:	4c 09 e8             	or     %r13,%rax
    6e3e:	75 2d                	jne    6e6d <create_fakepxebsack+0x8d>
    6e40:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    6e47:	00 
    6e48:	48 2b 05 01 32 02 00 	sub    0x23201(%rip),%rax        # 2a050 <__stack_chk_guard>
    6e4f:	0f 85 9f 00 00 00    	jne    6ef4 <create_fakepxebsack+0x114>
    6e55:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    6e5c:	48 89 ef             	mov    %rbp,%rdi
    6e5f:	5d                   	pop    %rbp
    6e60:	41 5c                	pop    %r12
    6e62:	41 5d                	pop    %r13
    6e64:	41 5e                	pop    %r14
    6e66:	41 5f                	pop    %r15
    6e68:	e9 e9 fe ff ff       	jmp    6d56 <create_fakedhcpack>
    6e6d:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    6e72:	52                   	push   %rdx
    6e73:	8b 0d 27 32 02 00    	mov    0x23227(%rip),%ecx        # 2a0a0 <dhcp_last_xid>
    6e79:	ba 05 00 00 00       	mov    $0x5,%edx
    6e7e:	56                   	push   %rsi
    6e7f:	45 31 c9             	xor    %r9d,%r9d
    6e82:	45 31 c0             	xor    %r8d,%r8d
    6e85:	48 89 ee             	mov    %rbp,%rsi
    6e88:	4c 89 ff             	mov    %r15,%rdi
    6e8b:	e8 e6 2e 01 00       	call   19d76 <dhcp_create_packet>
    6e90:	41 89 c4             	mov    %eax,%r12d
    6e93:	58                   	pop    %rax
    6e94:	5a                   	pop    %rdx
    6e95:	45 85 e4             	test   %r12d,%r12d
    6e98:	75 49                	jne    6ee3 <create_fakepxebsack+0x103>
    6e9a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    6e9f:	48 8d bd 68 01 00 00 	lea    0x168(%rbp),%rdi
    6ea6:	48 8d 35 63 25 02 00 	lea    0x22563(%rip),%rsi        # 29410 <ip_setting>
    6ead:	48 8d 50 0c          	lea    0xc(%rax),%rdx
    6eb1:	e8 82 b0 00 00       	call   11f38 <fetch_ipv4_setting>
    6eb6:	4d 85 f6             	test   %r14,%r14
    6eb9:	75 14                	jne    6ecf <create_fakepxebsack+0xef>
    6ebb:	4d 85 ed             	test   %r13,%r13
    6ebe:	74 23                	je     6ee3 <create_fakepxebsack+0x103>
    6ec0:	31 d2                	xor    %edx,%edx
    6ec2:	4c 89 ee             	mov    %r13,%rsi
    6ec5:	4c 89 ff             	mov    %r15,%rdi
    6ec8:	e8 48 fd ff ff       	call   6c15 <copy_encap_settings>
    6ecd:	eb 11                	jmp    6ee0 <create_fakepxebsack+0x100>
    6ecf:	31 d2                	xor    %edx,%edx
    6ed1:	4c 89 f6             	mov    %r14,%rsi
    6ed4:	4c 89 ff             	mov    %r15,%rdi
    6ed7:	e8 39 fd ff ff       	call   6c15 <copy_encap_settings>
    6edc:	85 c0                	test   %eax,%eax
    6ede:	74 db                	je     6ebb <create_fakepxebsack+0xdb>
    6ee0:	41 89 c4             	mov    %eax,%r12d
    6ee3:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    6eea:	00 
    6eeb:	48 2b 05 5e 31 02 00 	sub    0x2315e(%rip),%rax        # 2a050 <__stack_chk_guard>
    6ef2:	74 05                	je     6ef9 <create_fakepxebsack+0x119>
    6ef4:	e8 67 bb ff ff       	call   2a60 <__stack_chk_fail>
    6ef9:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    6f00:	44 89 e0             	mov    %r12d,%eax
    6f03:	5d                   	pop    %rbp
    6f04:	41 5c                	pop    %r12
    6f06:	41 5d                	pop    %r13
    6f08:	41 5e                	pop    %r14
    6f0a:	41 5f                	pop    %r15
    6f0c:	c3                   	ret    

0000000000006f0d <getopt_long>:
    6f0d:	f3 0f 1e fa          	endbr64 
    6f11:	41 57                	push   %r15
    6f13:	49 89 f7             	mov    %rsi,%r15
    6f16:	48 89 d6             	mov    %rdx,%rsi
    6f19:	41 56                	push   %r14
    6f1b:	41 55                	push   %r13
    6f1d:	4d 89 c5             	mov    %r8,%r13
    6f20:	41 54                	push   %r12
    6f22:	55                   	push   %rbp
    6f23:	53                   	push   %rbx
    6f24:	48 83 ec 28          	sub    $0x28,%rsp
    6f28:	48 63 05 59 31 02 00 	movslq 0x23159(%rip),%rax        # 2a088 <optind>
    6f2f:	48 89 0c 24          	mov    %rcx,(%rsp)
    6f33:	48 89 c3             	mov    %rax,%rbx
    6f36:	49 8b 14 c7          	mov    (%r15,%rax,8),%rdx
    6f3a:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
    6f41:	00 
    6f42:	83 c8 ff             	or     $0xffffffff,%eax
    6f45:	39 fb                	cmp    %edi,%ebx
    6f47:	0f 8d 62 02 00 00    	jge    71af <getopt_long+0x2a2>
    6f4d:	80 3a 2d             	cmpb   $0x2d,(%rdx)
    6f50:	0f 85 59 02 00 00    	jne    71af <getopt_long+0x2a2>
    6f56:	80 7a 01 2d          	cmpb   $0x2d,0x1(%rdx)
    6f5a:	41 89 fe             	mov    %edi,%r14d
    6f5d:	0f 85 34 01 00 00    	jne    7097 <getopt_long+0x18a>
    6f63:	80 7a 02 00          	cmpb   $0x0,0x2(%rdx)
    6f67:	74 09                	je     6f72 <getopt_long+0x65>
    6f69:	48 8d 6a 02          	lea    0x2(%rdx),%rbp
    6f6d:	49 89 cc             	mov    %rcx,%r12
    6f70:	eb 44                	jmp    6fb6 <getopt_long+0xa9>
    6f72:	ff c3                	inc    %ebx
    6f74:	83 c8 ff             	or     $0xffffffff,%eax
    6f77:	89 1d 0b 31 02 00    	mov    %ebx,0x2310b(%rip)        # 2a088 <optind>
    6f7d:	e9 2d 02 00 00       	jmp    71af <getopt_long+0x2a2>
    6f82:	48 89 f7             	mov    %rsi,%rdi
    6f85:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    6f8a:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6f8f:	e8 82 ca 00 00       	call   13a16 <strlen>
    6f94:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6f99:	48 89 ef             	mov    %rbp,%rdi
    6f9c:	48 89 c2             	mov    %rax,%rdx
    6f9f:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6fa4:	e8 ea c9 00 00       	call   13993 <strncmp>
    6fa9:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6fae:	85 c0                	test   %eax,%eax
    6fb0:	74 12                	je     6fc4 <getopt_long+0xb7>
    6fb2:	49 83 c4 20          	add    $0x20,%r12
    6fb6:	49 8b 34 24          	mov    (%r12),%rsi
    6fba:	48 85 f6             	test   %rsi,%rsi
    6fbd:	75 c3                	jne    6f82 <getopt_long+0x75>
    6fbf:	e9 b3 00 00 00       	jmp    7077 <getopt_long+0x16a>
    6fc4:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    6fc9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6fce:	8a 44 15 00          	mov    0x0(%rbp,%rdx,1),%al
    6fd2:	3c 3d                	cmp    $0x3d,%al
    6fd4:	75 07                	jne    6fdd <getopt_long+0xd0>
    6fd6:	48 8d 44 15 01       	lea    0x1(%rbp,%rdx,1),%rax
    6fdb:	eb 06                	jmp    6fe3 <getopt_long+0xd6>
    6fdd:	84 c0                	test   %al,%al
    6fdf:	75 d1                	jne    6fb2 <getopt_long+0xa5>
    6fe1:	31 c0                	xor    %eax,%eax
    6fe3:	41 8b 54 24 08       	mov    0x8(%r12),%edx
    6fe8:	8d 7b 01             	lea    0x1(%rbx),%edi
    6feb:	89 3d 97 30 02 00    	mov    %edi,0x23097(%rip)        # 2a088 <optind>
    6ff1:	85 d2                	test   %edx,%edx
    6ff3:	74 31                	je     7026 <getopt_long+0x119>
    6ff5:	48 85 c0             	test   %rax,%rax
    6ff8:	75 23                	jne    701d <getopt_long+0x110>
    6ffa:	41 39 fe             	cmp    %edi,%r14d
    6ffd:	0f 8e 97 01 00 00    	jle    719a <getopt_long+0x28d>
    7003:	4b 8b 7c 07 08       	mov    0x8(%r15,%r8,1),%rdi
    7008:	80 3f 2d             	cmpb   $0x2d,(%rdi)
    700b:	0f 84 89 01 00 00    	je     719a <getopt_long+0x28d>
    7011:	83 c3 02             	add    $0x2,%ebx
    7014:	48 89 f8             	mov    %rdi,%rax
    7017:	89 1d 6b 30 02 00    	mov    %ebx,0x2306b(%rip)        # 2a088 <optind>
    701d:	83 fa 01             	cmp    $0x1,%edx
    7020:	74 1e                	je     7040 <getopt_long+0x133>
    7022:	85 d2                	test   %edx,%edx
    7024:	75 1a                	jne    7040 <getopt_long+0x133>
    7026:	48 85 c0             	test   %rax,%rax
    7029:	74 15                	je     7040 <getopt_long+0x133>
    702b:	48 8d 3d b9 b9 01 00 	lea    0x1b9b9(%rip),%rdi        # 229eb <.LC1>
    7032:	31 c0                	xor    %eax,%eax
    7034:	e8 41 02 01 00       	call   1727a <printf>
    7039:	b8 3a 00 00 00       	mov    $0x3a,%eax
    703e:	eb 1a                	jmp    705a <getopt_long+0x14d>
    7040:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
    7045:	48 89 05 34 30 02 00 	mov    %rax,0x23034(%rip)        # 2a080 <optarg>
    704c:	41 8b 44 24 18       	mov    0x18(%r12),%eax
    7051:	48 85 d2             	test   %rdx,%rdx
    7054:	74 04                	je     705a <getopt_long+0x14d>
    7056:	89 02                	mov    %eax,(%rdx)
    7058:	31 c0                	xor    %eax,%eax
    705a:	4d 85 ed             	test   %r13,%r13
    705d:	0f 84 4c 01 00 00    	je     71af <getopt_long+0x2a2>
    7063:	4c 89 e1             	mov    %r12,%rcx
    7066:	48 2b 0c 24          	sub    (%rsp),%rcx
    706a:	48 c1 f9 05          	sar    $0x5,%rcx
    706e:	41 89 4d 00          	mov    %ecx,0x0(%r13)
    7072:	e9 38 01 00 00       	jmp    71af <getopt_long+0x2a2>
    7077:	48 89 ee             	mov    %rbp,%rsi
    707a:	31 c0                	xor    %eax,%eax
    707c:	48 8d 3d 87 b9 01 00 	lea    0x1b987(%rip),%rdi        # 22a0a <.LC2>
    7083:	c7 05 03 30 02 00 3f 	movl   $0x3f,0x23003(%rip)        # 2a090 <optopt>
    708a:	00 00 00 
    708d:	e8 e8 01 01 00       	call   1727a <printf>
    7092:	e9 fc 00 00 00       	jmp    7193 <getopt_long+0x286>
    7097:	83 3d ee 2f 02 00 00 	cmpl   $0x0,0x22fee(%rip)        # 2a08c <nextchar>
    709e:	7f 0a                	jg     70aa <getopt_long+0x19d>
    70a0:	c7 05 e2 2f 02 00 01 	movl   $0x1,0x22fe2(%rip)        # 2a08c <nextchar>
    70a7:	00 00 00 
    70aa:	48 63 05 db 2f 02 00 	movslq 0x22fdb(%rip),%rax        # 2a08c <nextchar>
    70b1:	48 89 c7             	mov    %rax,%rdi
    70b4:	48 01 c2             	add    %rax,%rdx
    70b7:	0f be 06             	movsbl (%rsi),%eax
    70ba:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    70be:	85 c0                	test   %eax,%eax
    70c0:	0f 84 b8 00 00 00    	je     717e <getopt_long+0x271>
    70c6:	31 f6                	xor    %esi,%esi
    70c8:	80 39 3a             	cmpb   $0x3a,(%rcx)
    70cb:	75 07                	jne    70d4 <getopt_long+0x1c7>
    70cd:	ff c6                	inc    %esi
    70cf:	48 ff c1             	inc    %rcx
    70d2:	eb f4                	jmp    70c8 <getopt_long+0x1bb>
    70d4:	44 0f be 02          	movsbl (%rdx),%r8d
    70d8:	44 39 c0             	cmp    %r8d,%eax
    70db:	0f 85 95 00 00 00    	jne    7176 <getopt_long+0x269>
    70e1:	ff c7                	inc    %edi
    70e3:	89 3d a3 2f 02 00    	mov    %edi,0x22fa3(%rip)        # 2a08c <nextchar>
    70e9:	80 7a 01 00          	cmpb   $0x0,0x1(%rdx)
    70ed:	74 1e                	je     710d <getopt_long+0x200>
    70ef:	31 c9                	xor    %ecx,%ecx
    70f1:	85 f6                	test   %esi,%esi
    70f3:	74 58                	je     714d <getopt_long+0x240>
    70f5:	c7 05 8d 2f 02 00 00 	movl   $0x0,0x22f8d(%rip)        # 2a08c <nextchar>
    70fc:	00 00 00 
    70ff:	ff c3                	inc    %ebx
    7101:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    7105:	89 1d 7d 2f 02 00    	mov    %ebx,0x22f7d(%rip)        # 2a088 <optind>
    710b:	eb 14                	jmp    7121 <getopt_long+0x214>
    710d:	c7 05 75 2f 02 00 00 	movl   $0x0,0x22f75(%rip)        # 2a08c <nextchar>
    7114:	00 00 00 
    7117:	ff c3                	inc    %ebx
    7119:	31 c9                	xor    %ecx,%ecx
    711b:	89 1d 67 2f 02 00    	mov    %ebx,0x22f67(%rip)        # 2a088 <optind>
    7121:	85 f6                	test   %esi,%esi
    7123:	74 28                	je     714d <getopt_long+0x240>
    7125:	48 85 c9             	test   %rcx,%rcx
    7128:	75 23                	jne    714d <getopt_long+0x240>
    712a:	8b 15 58 2f 02 00    	mov    0x22f58(%rip),%edx        # 2a088 <optind>
    7130:	41 39 d6             	cmp    %edx,%r14d
    7133:	7e 18                	jle    714d <getopt_long+0x240>
    7135:	48 63 ca             	movslq %edx,%rcx
    7138:	49 8b 0c cf          	mov    (%r15,%rcx,8),%rcx
    713c:	80 39 2d             	cmpb   $0x2d,(%rcx)
    713f:	74 0a                	je     714b <getopt_long+0x23e>
    7141:	ff c2                	inc    %edx
    7143:	89 15 3f 2f 02 00    	mov    %edx,0x22f3f(%rip)        # 2a088 <optind>
    7149:	eb 02                	jmp    714d <getopt_long+0x240>
    714b:	31 c9                	xor    %ecx,%ecx
    714d:	ff ce                	dec    %esi
    714f:	75 1c                	jne    716d <getopt_long+0x260>
    7151:	48 85 c9             	test   %rcx,%rcx
    7154:	75 17                	jne    716d <getopt_long+0x260>
    7156:	89 c6                	mov    %eax,%esi
    7158:	48 8d 3d c7 b8 01 00 	lea    0x1b8c7(%rip),%rdi        # 22a26 <.LC3>
    715f:	31 c0                	xor    %eax,%eax
    7161:	e8 14 01 01 00       	call   1727a <printf>
    7166:	b8 3a 00 00 00       	mov    $0x3a,%eax
    716b:	eb 42                	jmp    71af <getopt_long+0x2a2>
    716d:	48 89 0d 0c 2f 02 00 	mov    %rcx,0x22f0c(%rip)        # 2a080 <optarg>
    7174:	eb 39                	jmp    71af <getopt_long+0x2a2>
    7176:	48 89 ce             	mov    %rcx,%rsi
    7179:	e9 39 ff ff ff       	jmp    70b7 <getopt_long+0x1aa>
    717e:	0f be 32             	movsbl (%rdx),%esi
    7181:	48 8d 3d c0 b8 01 00 	lea    0x1b8c0(%rip),%rdi        # 22a48 <.LC4>
    7188:	89 35 02 2f 02 00    	mov    %esi,0x22f02(%rip)        # 2a090 <optopt>
    718e:	e8 e7 00 01 00       	call   1727a <printf>
    7193:	b8 3f 00 00 00       	mov    $0x3f,%eax
    7198:	eb 15                	jmp    71af <getopt_long+0x2a2>
    719a:	48 8d 3d 28 b8 01 00 	lea    0x1b828(%rip),%rdi        # 229c9 <.LC0>
    71a1:	83 fa 01             	cmp    $0x1,%edx
    71a4:	0f 84 88 fe ff ff    	je     7032 <getopt_long+0x125>
    71aa:	e9 73 fe ff ff       	jmp    7022 <getopt_long+0x115>
    71af:	48 83 c4 28          	add    $0x28,%rsp
    71b3:	5b                   	pop    %rbx
    71b4:	5d                   	pop    %rbp
    71b5:	41 5c                	pop    %r12
    71b7:	41 5d                	pop    %r13
    71b9:	41 5e                	pop    %r14
    71bb:	41 5f                	pop    %r15
    71bd:	c3                   	ret    

00000000000071be <http_block_read>:
    71be:	f3 0f 1e fa          	endbr64 
    71c2:	41 55                	push   %r13
    71c4:	48 c1 e2 09          	shl    $0x9,%rdx
    71c8:	4d 89 c5             	mov    %r8,%r13
    71cb:	45 31 c0             	xor    %r8d,%r8d
    71ce:	41 54                	push   %r12
    71d0:	4d 89 cc             	mov    %r9,%r12
    71d3:	55                   	push   %rbp
    71d4:	48 89 f5             	mov    %rsi,%rbp
    71d7:	48 8d 35 2a e1 01 00 	lea    0x1e12a(%rip),%rsi        # 25308 <http_get>
    71de:	48 83 ec 30          	sub    $0x30,%rsp
    71e2:	48 8b 05 67 2e 02 00 	mov    0x22e67(%rip),%rax        # 2a050 <__stack_chk_guard>
    71e9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    71ee:	31 c0                	xor    %eax,%eax
    71f0:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    71f5:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    71fa:	48 8b 97 00 01 00 00 	mov    0x100(%rdi),%rdx
    7201:	48 89 ef             	mov    %rbp,%rdi
    7204:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    7209:	e8 f3 10 00 00       	call   8301 <http_open>
    720e:	85 c0                	test   %eax,%eax
    7210:	75 24                	jne    7236 <http_block_read+0x78>
    7212:	4c 89 e2             	mov    %r12,%rdx
    7215:	4c 89 ee             	mov    %r13,%rsi
    7218:	48 89 ef             	mov    %rbp,%rdi
    721b:	e8 1f 1f 01 00       	call   1913f <block_translate>
    7220:	85 c0                	test   %eax,%eax
    7222:	74 12                	je     7236 <http_block_read+0x78>
    7224:	89 c6                	mov    %eax,%esi
    7226:	48 89 ef             	mov    %rbp,%rdi
    7229:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    722d:	e8 e6 26 00 00       	call   9918 <intf_restart>
    7232:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    7236:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    723b:	48 2b 15 0e 2e 02 00 	sub    0x22e0e(%rip),%rdx        # 2a050 <__stack_chk_guard>
    7242:	74 05                	je     7249 <http_block_read+0x8b>
    7244:	e8 17 b8 ff ff       	call   2a60 <__stack_chk_fail>
    7249:	48 83 c4 30          	add    $0x30,%rsp
    724d:	5d                   	pop    %rbp
    724e:	41 5c                	pop    %r12
    7250:	41 5d                	pop    %r13
    7252:	c3                   	ret    

0000000000007253 <http_block_read_capacity>:
    7253:	f3 0f 1e fa          	endbr64 
    7257:	55                   	push   %rbp
    7258:	48 89 f5             	mov    %rsi,%rbp
    725b:	45 31 c0             	xor    %r8d,%r8d
    725e:	31 c9                	xor    %ecx,%ecx
    7260:	48 8d 35 a9 e0 01 00 	lea    0x1e0a9(%rip),%rsi        # 25310 <http_head>
    7267:	48 83 ec 10          	sub    $0x10,%rsp
    726b:	48 8b 97 00 01 00 00 	mov    0x100(%rdi),%rdx
    7272:	48 89 ef             	mov    %rbp,%rdi
    7275:	e8 87 10 00 00       	call   8301 <http_open>
    727a:	85 c0                	test   %eax,%eax
    727c:	75 25                	jne    72a3 <http_block_read_capacity+0x50>
    727e:	31 f6                	xor    %esi,%esi
    7280:	ba 00 02 00 00       	mov    $0x200,%edx
    7285:	48 89 ef             	mov    %rbp,%rdi
    7288:	e8 b2 1e 01 00       	call   1913f <block_translate>
    728d:	85 c0                	test   %eax,%eax
    728f:	74 12                	je     72a3 <http_block_read_capacity+0x50>
    7291:	89 c6                	mov    %eax,%esi
    7293:	48 89 ef             	mov    %rbp,%rdi
    7296:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    729a:	e8 79 26 00 00       	call   9918 <intf_restart>
    729f:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    72a3:	48 83 c4 10          	add    $0x10,%rsp
    72a7:	5d                   	pop    %rbp
    72a8:	c3                   	ret    

00000000000072a9 <http_parse_location>:
    72a9:	f3 0f 1e fa          	endbr64 
    72ad:	48 89 b7 c8 01 00 00 	mov    %rsi,0x1c8(%rdi)
    72b4:	31 c0                	xor    %eax,%eax
    72b6:	c3                   	ret    

00000000000072b7 <http_init_transfer_chunked>:
    72b7:	f3 0f 1e fa          	endbr64 
    72bb:	31 c0                	xor    %eax,%eax
    72bd:	c3                   	ret    

00000000000072be <http_parse_retry_after>:
    72be:	f3 0f 1e fa          	endbr64 
    72c2:	53                   	push   %rbx
    72c3:	ba 0a 00 00 00       	mov    $0xa,%edx
    72c8:	48 89 fb             	mov    %rdi,%rbx
    72cb:	48 89 f7             	mov    %rsi,%rdi
    72ce:	48 83 ec 10          	sub    $0x10,%rsp
    72d2:	48 8b 05 77 2d 02 00 	mov    0x22d77(%rip),%rax        # 2a050 <__stack_chk_guard>
    72d9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    72de:	31 c0                	xor    %eax,%eax
    72e0:	48 89 e6             	mov    %rsp,%rsi
    72e3:	e8 6f c8 00 00       	call   13b57 <strtoul>
    72e8:	48 8b 14 24          	mov    (%rsp),%rdx
    72ec:	89 83 18 02 00 00    	mov    %eax,0x218(%rbx)
    72f2:	80 3a 00             	cmpb   $0x0,(%rdx)
    72f5:	ba 05 00 00 00       	mov    $0x5,%edx
    72fa:	0f 45 c2             	cmovne %edx,%eax
    72fd:	83 8b 1c 02 00 00 04 	orl    $0x4,0x21c(%rbx)
    7304:	89 83 18 02 00 00    	mov    %eax,0x218(%rbx)
    730a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    730f:	48 2b 05 3a 2d 02 00 	sub    0x22d3a(%rip),%rax        # 2a050 <__stack_chk_guard>
    7316:	74 05                	je     731d <http_parse_retry_after+0x5f>
    7318:	e8 43 b7 ff ff       	call   2a60 <__stack_chk_fail>
    731d:	48 83 c4 10          	add    $0x10,%rsp
    7321:	31 c0                	xor    %eax,%eax
    7323:	5b                   	pop    %rbx
    7324:	c3                   	ret    

0000000000007325 <http_parse_content_encoding>:
    7325:	f3 0f 1e fa          	endbr64 
    7329:	41 55                	push   %r13
    732b:	4c 8d 2d de 17 02 00 	lea    0x217de(%rip),%r13        # 28b10 <http_request_accept_encoding>
    7332:	41 54                	push   %r12
    7334:	49 89 f4             	mov    %rsi,%r12
    7337:	55                   	push   %rbp
    7338:	48 89 fd             	mov    %rdi,%rbp
    733b:	53                   	push   %rbx
    733c:	48 8d 1d cd 17 02 00 	lea    0x217cd(%rip),%rbx        # 28b10 <http_request_accept_encoding>
    7343:	51                   	push   %rcx
    7344:	4c 39 eb             	cmp    %r13,%rbx
    7347:	73 30                	jae    7379 <http_parse_content_encoding+0x54>
    7349:	48 8b 43 08          	mov    0x8(%rbx),%rax
    734d:	48 85 c0             	test   %rax,%rax
    7350:	75 18                	jne    736a <http_parse_content_encoding+0x45>
    7352:	48 8b 33             	mov    (%rbx),%rsi
    7355:	4c 89 e7             	mov    %r12,%rdi
    7358:	e8 6c c6 00 00       	call   139c9 <strcasecmp>
    735d:	85 c0                	test   %eax,%eax
    735f:	75 12                	jne    7373 <http_parse_content_encoding+0x4e>
    7361:	48 89 9d e0 01 00 00 	mov    %rbx,0x1e0(%rbp)
    7368:	eb 0f                	jmp    7379 <http_parse_content_encoding+0x54>
    736a:	48 89 ef             	mov    %rbp,%rdi
    736d:	ff d0                	call   *%rax
    736f:	85 c0                	test   %eax,%eax
    7371:	75 df                	jne    7352 <http_parse_content_encoding+0x2d>
    7373:	48 83 c3 18          	add    $0x18,%rbx
    7377:	eb cb                	jmp    7344 <http_parse_content_encoding+0x1f>
    7379:	5a                   	pop    %rdx
    737a:	31 c0                	xor    %eax,%eax
    737c:	5b                   	pop    %rbx
    737d:	5d                   	pop    %rbp
    737e:	41 5c                	pop    %r12
    7380:	41 5d                	pop    %r13
    7382:	c3                   	ret    

0000000000007383 <http_conn_close>:
    7383:	f3 0f 1e fa          	endbr64 
    7387:	55                   	push   %rbp
    7388:	48 89 fd             	mov    %rdi,%rbp
    738b:	48 8d 7f 70          	lea    0x70(%rdi),%rdi
    738f:	48 83 ec 10          	sub    $0x10,%rsp
    7393:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    7397:	e8 7c 25 00 00       	call   9918 <intf_restart>
    739c:	48 8b 85 38 02 00 00 	mov    0x238(%rbp),%rax
    73a3:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    73a7:	48 89 ef             	mov    %rbp,%rdi
    73aa:	48 8b 40 10          	mov    0x10(%rax),%rax
    73ae:	48 83 c4 10          	add    $0x10,%rsp
    73b2:	5d                   	pop    %rbp
    73b3:	ff e0                	jmp    *%rax

00000000000073b5 <http_format_headers>:
    73b5:	41 57                	push   %r15
    73b7:	41 56                	push   %r14
    73b9:	4c 8d 35 bc b6 01 00 	lea    0x1b6bc(%rip),%r14        # 22a7c <.LC1>
    73c0:	41 55                	push   %r13
    73c2:	49 89 fd             	mov    %rdi,%r13
    73c5:	41 54                	push   %r12
    73c7:	4c 8d 25 42 17 02 00 	lea    0x21742(%rip),%r12        # 28b10 <http_request_accept_encoding>
    73ce:	55                   	push   %rbp
    73cf:	48 89 f5             	mov    %rsi,%rbp
    73d2:	53                   	push   %rbx
    73d3:	48 89 d3             	mov    %rdx,%rbx
    73d6:	48 8d 15 90 b6 01 00 	lea    0x1b690(%rip),%rdx        # 22a6d <.LC0>
    73dd:	51                   	push   %rcx
    73de:	48 8b 87 08 01 00 00 	mov    0x108(%rdi),%rax
    73e5:	48 89 de             	mov    %rbx,%rsi
    73e8:	4c 8b 87 10 01 00 00 	mov    0x110(%rdi),%r8
    73ef:	48 89 ef             	mov    %rbp,%rdi
    73f2:	48 8b 08             	mov    (%rax),%rcx
    73f5:	31 c0                	xor    %eax,%eax
    73f7:	e8 d3 fd 00 00       	call   171cf <ssnprintf>
    73fc:	48 89 de             	mov    %rbx,%rsi
    73ff:	4c 89 f2             	mov    %r14,%rdx
    7402:	4c 63 f8             	movslq %eax,%r15
    7405:	31 c0                	xor    %eax,%eax
    7407:	4c 29 fe             	sub    %r15,%rsi
    740a:	4a 8d 7c 3d 00       	lea    0x0(%rbp,%r15,1),%rdi
    740f:	e8 bb fd 00 00       	call   171cf <ssnprintf>
    7414:	4c 63 c0             	movslq %eax,%r8
    7417:	4d 01 c7             	add    %r8,%r15
    741a:	48 8d 05 6f 17 02 00 	lea    0x2176f(%rip),%rax        # 28b90 <http_response_retry_after>
    7421:	49 39 c4             	cmp    %rax,%r12
    7424:	73 7c                	jae    74a2 <http_format_headers+0xed>
    7426:	31 d2                	xor    %edx,%edx
    7428:	31 f6                	xor    %esi,%esi
    742a:	4c 89 ef             	mov    %r13,%rdi
    742d:	41 ff 54 24 08       	call   *0x8(%r12)
    7432:	85 c0                	test   %eax,%eax
    7434:	0f 88 80 00 00 00    	js     74ba <http_format_headers+0x105>
    743a:	74 5d                	je     7499 <http_format_headers+0xe4>
    743c:	49 8b 0c 24          	mov    (%r12),%rcx
    7440:	48 89 de             	mov    %rbx,%rsi
    7443:	4a 8d 7c 3d 00       	lea    0x0(%rbp,%r15,1),%rdi
    7448:	31 c0                	xor    %eax,%eax
    744a:	4c 29 fe             	sub    %r15,%rsi
    744d:	48 8d 15 2b b6 01 00 	lea    0x1b62b(%rip),%rdx        # 22a7f <.LC2>
    7454:	e8 76 fd 00 00       	call   171cf <ssnprintf>
    7459:	31 d2                	xor    %edx,%edx
    745b:	48 63 c8             	movslq %eax,%rcx
    745e:	49 01 cf             	add    %rcx,%r15
    7461:	4c 39 fb             	cmp    %r15,%rbx
    7464:	76 06                	jbe    746c <http_format_headers+0xb7>
    7466:	48 89 da             	mov    %rbx,%rdx
    7469:	4c 29 fa             	sub    %r15,%rdx
    746c:	4a 8d 74 3d 00       	lea    0x0(%rbp,%r15,1),%rsi
    7471:	4c 89 ef             	mov    %r13,%rdi
    7474:	41 ff 54 24 08       	call   *0x8(%r12)
    7479:	48 89 de             	mov    %rbx,%rsi
    747c:	4c 89 f2             	mov    %r14,%rdx
    747f:	48 98                	cltq   
    7481:	49 01 c7             	add    %rax,%r15
    7484:	31 c0                	xor    %eax,%eax
    7486:	4c 29 fe             	sub    %r15,%rsi
    7489:	4a 8d 7c 3d 00       	lea    0x0(%rbp,%r15,1),%rdi
    748e:	e8 3c fd 00 00       	call   171cf <ssnprintf>
    7493:	4c 63 c0             	movslq %eax,%r8
    7496:	4d 01 c7             	add    %r8,%r15
    7499:	49 83 c4 10          	add    $0x10,%r12
    749d:	e9 78 ff ff ff       	jmp    741a <http_format_headers+0x65>
    74a2:	4c 29 fb             	sub    %r15,%rbx
    74a5:	4a 8d 7c 3d 00       	lea    0x0(%rbp,%r15,1),%rdi
    74aa:	4c 89 f2             	mov    %r14,%rdx
    74ad:	31 c0                	xor    %eax,%eax
    74af:	48 89 de             	mov    %rbx,%rsi
    74b2:	e8 18 fd 00 00       	call   171cf <ssnprintf>
    74b7:	44 01 f8             	add    %r15d,%eax
    74ba:	5a                   	pop    %rdx
    74bb:	5b                   	pop    %rbx
    74bc:	5d                   	pop    %rbp
    74bd:	41 5c                	pop    %r12
    74bf:	41 5d                	pop    %r13
    74c1:	41 5e                	pop    %r14
    74c3:	41 5f                	pop    %r15
    74c5:	c3                   	ret    

00000000000074c6 <http_format_accept_encoding>:
    74c6:	f3 0f 1e fa          	endbr64 
    74ca:	41 57                	push   %r15
    74cc:	48 8d 0d e1 cf 01 00 	lea    0x1cfe1(%rip),%rcx        # 244b4 <.LC0>
    74d3:	4c 8d 3d 36 16 02 00 	lea    0x21636(%rip),%r15        # 28b10 <http_request_accept_encoding>
    74da:	41 56                	push   %r14
    74dc:	49 89 d6             	mov    %rdx,%r14
    74df:	41 55                	push   %r13
    74e1:	49 89 f5             	mov    %rsi,%r13
    74e4:	41 54                	push   %r12
    74e6:	49 89 fc             	mov    %rdi,%r12
    74e9:	55                   	push   %rbp
    74ea:	48 8d 2d 1f 16 02 00 	lea    0x2161f(%rip),%rbp        # 28b10 <http_request_accept_encoding>
    74f1:	53                   	push   %rbx
    74f2:	31 db                	xor    %ebx,%ebx
    74f4:	48 83 ec 18          	sub    $0x18,%rsp
    74f8:	4c 39 fd             	cmp    %r15,%rbp
    74fb:	73 4d                	jae    754a <http_format_accept_encoding+0x84>
    74fd:	48 8b 45 08          	mov    0x8(%rbp),%rax
    7501:	48 85 c0             	test   %rax,%rax
    7504:	75 2b                	jne    7531 <http_format_accept_encoding+0x6b>
    7506:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    750a:	4c 89 f6             	mov    %r14,%rsi
    750d:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
    7512:	31 c0                	xor    %eax,%eax
    7514:	48 29 de             	sub    %rbx,%rsi
    7517:	48 8d 15 88 b3 01 00 	lea    0x1b388(%rip),%rdx        # 228a6 <.LC4>
    751e:	e8 ac fc 00 00       	call   171cf <ssnprintf>
    7523:	48 8d 0d 5a b5 01 00 	lea    0x1b55a(%rip),%rcx        # 22a84 <.LC3>
    752a:	48 98                	cltq   
    752c:	48 01 c3             	add    %rax,%rbx
    752f:	eb 13                	jmp    7544 <http_format_accept_encoding+0x7e>
    7531:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    7536:	4c 89 e7             	mov    %r12,%rdi
    7539:	ff d0                	call   *%rax
    753b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    7540:	85 c0                	test   %eax,%eax
    7542:	75 c2                	jne    7506 <http_format_accept_encoding+0x40>
    7544:	48 83 c5 18          	add    $0x18,%rbp
    7548:	eb ae                	jmp    74f8 <http_format_accept_encoding+0x32>
    754a:	48 83 c4 18          	add    $0x18,%rsp
    754e:	89 d8                	mov    %ebx,%eax
    7550:	5b                   	pop    %rbx
    7551:	5d                   	pop    %rbp
    7552:	41 5c                	pop    %r12
    7554:	41 5d                	pop    %r13
    7556:	41 5e                	pop    %r14
    7558:	41 5f                	pop    %r15
    755a:	c3                   	ret    

000000000000755b <http_content_buffer>:
    755b:	f3 0f 1e fa          	endbr64 
    755f:	83 bf c4 01 00 00 00 	cmpl   $0x0,0x1c4(%rdi)
    7566:	75 09                	jne    7571 <http_content_buffer+0x16>
    7568:	48 83 c7 10          	add    $0x10,%rdi
    756c:	e9 ce 03 01 00       	jmp    1793f <xfer_buffer>
    7571:	31 c0                	xor    %eax,%eax
    7573:	c3                   	ret    

0000000000007574 <http_free>:
    7574:	f3 0f 1e fa          	endbr64 
    7578:	55                   	push   %rbp
    7579:	48 89 fd             	mov    %rdi,%rbp
    757c:	48 8d bf a8 01 00 00 	lea    0x1a8(%rdi),%rdi
    7583:	e8 15 4b 00 00       	call   c09d <empty_line_buffer>
    7588:	48 8d bd 20 02 00 00 	lea    0x220(%rbp),%rdi
    758f:	e8 09 4b 00 00       	call   c09d <empty_line_buffer>
    7594:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
    759b:	e8 7a 89 00 00       	call   ff1a <ref_decrement>
    75a0:	48 89 ef             	mov    %rbp,%rdi
    75a3:	5d                   	pop    %rbp
    75a4:	e9 79 51 00 00       	jmp    c722 <free>

00000000000075a9 <http_tx_request>:
    75a9:	f3 0f 1e fa          	endbr64 
    75ad:	41 55                	push   %r13
    75af:	31 d2                	xor    %edx,%edx
    75b1:	31 f6                	xor    %esi,%esi
    75b3:	41 54                	push   %r12
    75b5:	55                   	push   %rbp
    75b6:	53                   	push   %rbx
    75b7:	48 89 fb             	mov    %rdi,%rbx
    75ba:	51                   	push   %rcx
    75bb:	e8 f5 fd ff ff       	call   73b5 <http_format_headers>
    75c0:	4c 63 e0             	movslq %eax,%r12
    75c3:	45 85 e4             	test   %r12d,%r12d
    75c6:	0f 88 a2 00 00 00    	js     766e <http_tx_request+0xc5>
    75cc:	48 8b bb 40 01 00 00 	mov    0x140(%rbx),%rdi
    75d3:	45 8d 6c 24 01       	lea    0x1(%r12),%r13d
    75d8:	4d 63 ed             	movslq %r13d,%r13
    75db:	4c 01 ef             	add    %r13,%rdi
    75de:	e8 69 27 00 00       	call   9d4c <alloc_iob>
    75e3:	48 89 c5             	mov    %rax,%rbp
    75e6:	48 85 c0             	test   %rax,%rax
    75e9:	75 08                	jne    75f3 <http_tx_request+0x4a>
    75eb:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    75f1:	eb 7b                	jmp    766e <http_tx_request+0xc5>
    75f3:	48 8b 70 20          	mov    0x20(%rax),%rsi
    75f7:	4c 89 ea             	mov    %r13,%rdx
    75fa:	48 89 df             	mov    %rbx,%rdi
    75fd:	49 01 f4             	add    %rsi,%r12
    7600:	4c 89 60 20          	mov    %r12,0x20(%rax)
    7604:	e8 ac fd ff ff       	call   73b5 <http_format_headers>
    7609:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    760d:	48 8b 93 40 01 00 00 	mov    0x140(%rbx),%rdx
    7614:	48 8b b3 38 01 00 00 	mov    0x138(%rbx),%rsi
    761b:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    761f:	48 89 45 20          	mov    %rax,0x20(%rbp)
    7623:	e8 c1 fd 00 00       	call   173e9 <__memcpy>
    7628:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    762c:	48 89 ee             	mov    %rbp,%rsi
    762f:	e8 ae 01 01 00       	call   177e2 <xfer_deliver_iob>
    7634:	41 89 c4             	mov    %eax,%r12d
    7637:	85 c0                	test   %eax,%eax
    7639:	74 09                	je     7644 <http_tx_request+0x9b>
    763b:	31 ff                	xor    %edi,%edi
    763d:	e8 24 27 00 00       	call   9d66 <free_iob>
    7642:	eb 2a                	jmp    766e <http_tx_request+0xc5>
    7644:	48 8d ab a8 01 00 00 	lea    0x1a8(%rbx),%rbp
    764b:	48 89 ef             	mov    %rbp,%rdi
    764e:	e8 4a 4a 00 00       	call   c09d <empty_line_buffer>
    7653:	48 89 ef             	mov    %rbp,%rdi
    7656:	b9 78 00 00 00       	mov    $0x78,%ecx
    765b:	44 89 e0             	mov    %r12d,%eax
    765e:	f3 aa                	rep stos %al,%es:(%rdi)
    7660:	48 8d 05 09 dd 01 00 	lea    0x1dd09(%rip),%rax        # 25370 <http_headers>
    7667:	48 89 83 38 02 00 00 	mov    %rax,0x238(%rbx)
    766e:	5a                   	pop    %rdx
    766f:	44 89 e0             	mov    %r12d,%eax
    7672:	5b                   	pop    %rbx
    7673:	5d                   	pop    %rbp
    7674:	41 5c                	pop    %r12
    7676:	41 5d                	pop    %r13
    7678:	c3                   	ret    

0000000000007679 <http_close>:
    7679:	f3 0f 1e fa          	endbr64 
    767d:	55                   	push   %rbp
    767e:	89 f5                	mov    %esi,%ebp
    7680:	53                   	push   %rbx
    7681:	48 89 fb             	mov    %rdi,%rbx
    7684:	48 8d bf 90 00 00 00 	lea    0x90(%rdi),%rdi
    768b:	50                   	push   %rax
    768c:	e8 cf 83 00 00       	call   fa60 <process_del>
    7691:	48 8d bb b0 00 00 00 	lea    0xb0(%rbx),%rdi
    7698:	e8 0f 8d 00 00       	call   103ac <stop_timer>
    769d:	41 5a                	pop    %r10
    769f:	48 8d 4b 30          	lea    0x30(%rbx),%rcx
    76a3:	48 8d 53 50          	lea    0x50(%rbx),%rdx
    76a7:	48 8d 73 70          	lea    0x70(%rbx),%rsi
    76ab:	4c 8d 43 10          	lea    0x10(%rbx),%r8
    76af:	89 ef                	mov    %ebp,%edi
    76b1:	5b                   	pop    %rbx
    76b2:	45 31 c9             	xor    %r9d,%r9d
    76b5:	31 c0                	xor    %eax,%eax
    76b7:	5d                   	pop    %rbp
    76b8:	e9 f3 23 00 00       	jmp    9ab0 <intfs_shutdown>

00000000000076bd <http_close_error>:
    76bd:	f3 0f 1e fa          	endbr64 
    76c1:	85 f6                	test   %esi,%esi
    76c3:	75 05                	jne    76ca <http_close_error+0xd>
    76c5:	be 6b 9f f3 bd       	mov    $0xbdf39f6b,%esi
    76ca:	e9 aa ff ff ff       	jmp    7679 <http_close>

00000000000076cf <http_reopen>:
    76cf:	f3 0f 1e fa          	endbr64 
    76d3:	41 54                	push   %r12
    76d5:	55                   	push   %rbp
    76d6:	48 89 fd             	mov    %rdi,%rbp
    76d9:	51                   	push   %rcx
    76da:	4c 8d 67 70          	lea    0x70(%rdi),%r12
    76de:	be 6b 9f f3 f4       	mov    $0xf4f39f6b,%esi
    76e3:	4c 89 e7             	mov    %r12,%rdi
    76e6:	e8 2d 22 00 00       	call   9918 <intf_restart>
    76eb:	48 8b b5 00 01 00 00 	mov    0x100(%rbp),%rsi
    76f2:	4c 89 e7             	mov    %r12,%rdi
    76f5:	e8 da 6f 01 00       	call   1e6d4 <http_connect>
    76fa:	85 c0                	test   %eax,%eax
    76fc:	74 0e                	je     770c <http_reopen+0x3d>
    76fe:	5a                   	pop    %rdx
    76ff:	48 89 ef             	mov    %rbp,%rdi
    7702:	89 c6                	mov    %eax,%esi
    7704:	5d                   	pop    %rbp
    7705:	41 5c                	pop    %r12
    7707:	e9 6d ff ff ff       	jmp    7679 <http_close>
    770c:	48 8d 05 7d dc 01 00 	lea    0x1dc7d(%rip),%rax        # 25390 <http_request>
    7713:	48 8d bd 90 00 00 00 	lea    0x90(%rbp),%rdi
    771a:	48 89 85 38 02 00 00 	mov    %rax,0x238(%rbp)
    7721:	58                   	pop    %rax
    7722:	5d                   	pop    %rbp
    7723:	41 5c                	pop    %r12
    7725:	e9 e3 82 00 00       	jmp    fa0d <process_add>

000000000000772a <http_expired>:
    772a:	f3 0f 1e fa          	endbr64 
    772e:	48 81 ef b0 00 00 00 	sub    $0xb0,%rdi
    7735:	e9 95 ff ff ff       	jmp    76cf <http_reopen>

000000000000773a <http_conn_deliver>:
    773a:	f3 0f 1e fa          	endbr64 
    773e:	41 54                	push   %r12
    7740:	55                   	push   %rbp
    7741:	48 89 fd             	mov    %rdi,%rbp
    7744:	53                   	push   %rbx
    7745:	48 83 ec 10          	sub    $0x10,%rsp
    7749:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    774e:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
    7753:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7758:	48 85 ff             	test   %rdi,%rdi
    775b:	74 38                	je     7795 <http_conn_deliver+0x5b>
    775d:	48 8b 47 20          	mov    0x20(%rdi),%rax
    7761:	48 39 47 18          	cmp    %rax,0x18(%rdi)
    7765:	74 2e                	je     7795 <http_conn_deliver+0x5b>
    7767:	48 8b 85 38 02 00 00 	mov    0x238(%rbp),%rax
    776e:	48 85 c0             	test   %rax,%rax
    7771:	74 09                	je     777c <http_conn_deliver+0x42>
    7773:	48 8b 40 08          	mov    0x8(%rax),%rax
    7777:	48 85 c0             	test   %rax,%rax
    777a:	75 08                	jne    7784 <http_conn_deliver+0x4a>
    777c:	41 bc 68 9e f3 bc    	mov    $0xbcf39e68,%r12d
    7782:	eb 1b                	jmp    779f <http_conn_deliver+0x65>
    7784:	48 89 de             	mov    %rbx,%rsi
    7787:	48 89 ef             	mov    %rbp,%rdi
    778a:	ff d0                	call   *%rax
    778c:	41 89 c4             	mov    %eax,%r12d
    778f:	85 c0                	test   %eax,%eax
    7791:	74 c0                	je     7753 <http_conn_deliver+0x19>
    7793:	eb 0a                	jmp    779f <http_conn_deliver+0x65>
    7795:	e8 cc 25 00 00       	call   9d66 <free_iob>
    779a:	45 31 e4             	xor    %r12d,%r12d
    779d:	eb 15                	jmp    77b4 <http_conn_deliver+0x7a>
    779f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    77a4:	e8 bd 25 00 00       	call   9d66 <free_iob>
    77a9:	44 89 e6             	mov    %r12d,%esi
    77ac:	48 89 ef             	mov    %rbp,%rdi
    77af:	e8 c5 fe ff ff       	call   7679 <http_close>
    77b4:	48 83 c4 10          	add    $0x10,%rsp
    77b8:	44 89 e0             	mov    %r12d,%eax
    77bb:	5b                   	pop    %rbx
    77bc:	5d                   	pop    %rbp
    77bd:	41 5c                	pop    %r12
    77bf:	c3                   	ret    

00000000000077c0 <http_format_host>:
    77c0:	f3 0f 1e fa          	endbr64 
    77c4:	49 89 f8             	mov    %rdi,%r8
    77c7:	31 c0                	xor    %eax,%eax
    77c9:	48 89 f7             	mov    %rsi,%rdi
    77cc:	48 89 d6             	mov    %rdx,%rsi
    77cf:	49 8b 88 18 01 00 00 	mov    0x118(%r8),%rcx
    77d6:	48 8d 15 24 bf 01 00 	lea    0x1bf24(%rip),%rdx        # 23701 <.LC0>
    77dd:	e9 7b f9 00 00       	jmp    1715d <snprintf>

00000000000077e2 <http_format_user_agent>:
    77e2:	f3 0f 1e fa          	endbr64 
    77e6:	48 89 f7             	mov    %rsi,%rdi
    77e9:	48 8d 0d 10 ac 01 00 	lea    0x1ac10(%rip),%rcx        # 22400 <product_version>
    77f0:	48 89 d6             	mov    %rdx,%rsi
    77f3:	31 c0                	xor    %eax,%eax
    77f5:	48 8d 15 8b b2 01 00 	lea    0x1b28b(%rip),%rdx        # 22a87 <.LC7>
    77fc:	e9 5c f9 00 00       	jmp    1715d <snprintf>

0000000000007801 <http_format_connection>:
    7801:	f3 0f 1e fa          	endbr64 
    7805:	48 89 f7             	mov    %rsi,%rdi
    7808:	31 c0                	xor    %eax,%eax
    780a:	48 89 d6             	mov    %rdx,%rsi
    780d:	48 8d 15 7b b2 01 00 	lea    0x1b27b(%rip),%rdx        # 22a8f <.LC8>
    7814:	e9 44 f9 00 00       	jmp    1715d <snprintf>

0000000000007819 <http_format_range>:
    7819:	f3 0f 1e fa          	endbr64 
    781d:	48 89 f8             	mov    %rdi,%rax
    7820:	48 89 f7             	mov    %rsi,%rdi
    7823:	48 89 d6             	mov    %rdx,%rsi
    7826:	48 8b 90 28 01 00 00 	mov    0x128(%rax),%rdx
    782d:	48 85 d2             	test   %rdx,%rdx
    7830:	74 1a                	je     784c <http_format_range+0x33>
    7832:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
    7839:	31 c0                	xor    %eax,%eax
    783b:	4c 8d 44 0a ff       	lea    -0x1(%rdx,%rcx,1),%r8
    7840:	48 8d 15 53 b2 01 00 	lea    0x1b253(%rip),%rdx        # 22a9a <.LC9>
    7847:	e9 11 f9 00 00       	jmp    1715d <snprintf>
    784c:	31 c0                	xor    %eax,%eax
    784e:	c3                   	ret    

000000000000784f <http_format_content_type>:
    784f:	f3 0f 1e fa          	endbr64 
    7853:	49 89 f8             	mov    %rdi,%r8
    7856:	48 89 f7             	mov    %rsi,%rdi
    7859:	48 89 d6             	mov    %rdx,%rsi
    785c:	49 8b 88 30 01 00 00 	mov    0x130(%r8),%rcx
    7863:	48 85 c9             	test   %rcx,%rcx
    7866:	74 0e                	je     7876 <http_format_content_type+0x27>
    7868:	48 8d 15 92 be 01 00 	lea    0x1be92(%rip),%rdx        # 23701 <.LC0>
    786f:	31 c0                	xor    %eax,%eax
    7871:	e9 e7 f8 00 00       	jmp    1715d <snprintf>
    7876:	31 c0                	xor    %eax,%eax
    7878:	c3                   	ret    

0000000000007879 <http_format_content_length>:
    7879:	f3 0f 1e fa          	endbr64 
    787d:	49 89 f8             	mov    %rdi,%r8
    7880:	48 89 f7             	mov    %rsi,%rdi
    7883:	48 89 d6             	mov    %rdx,%rsi
    7886:	49 8b 88 40 01 00 00 	mov    0x140(%r8),%rcx
    788d:	48 85 c9             	test   %rcx,%rcx
    7890:	74 0e                	je     78a0 <http_format_content_length+0x27>
    7892:	48 8d 15 0b b2 01 00 	lea    0x1b20b(%rip),%rdx        # 22aa4 <.LC10>
    7899:	31 c0                	xor    %eax,%eax
    789b:	e9 bd f8 00 00       	jmp    1715d <snprintf>
    78a0:	31 c0                	xor    %eax,%eax
    78a2:	c3                   	ret    

00000000000078a3 <http_params>:
    78a3:	41 56                	push   %r14
    78a5:	41 55                	push   %r13
    78a7:	45 31 ed             	xor    %r13d,%r13d
    78aa:	41 54                	push   %r12
    78ac:	4c 8d 67 28          	lea    0x28(%rdi),%r12
    78b0:	55                   	push   %rbp
    78b1:	48 89 d5             	mov    %rdx,%rbp
    78b4:	53                   	push   %rbx
    78b5:	4c 8b 77 28          	mov    0x28(%rdi),%r14
    78b9:	48 89 f3             	mov    %rsi,%rbx
    78bc:	4d 39 e6             	cmp    %r12,%r14
    78bf:	74 60                	je     7921 <http_params+0x7e>
    78c1:	4d 85 ed             	test   %r13,%r13
    78c4:	74 11                	je     78d7 <http_params+0x34>
    78c6:	48 85 ed             	test   %rbp,%rbp
    78c9:	7e 03                	jle    78ce <http_params+0x2b>
    78cb:	c6 03 26             	movb   $0x26,(%rbx)
    78ce:	48 ff c3             	inc    %rbx
    78d1:	49 ff c5             	inc    %r13
    78d4:	48 ff cd             	dec    %rbp
    78d7:	49 8b 76 10          	mov    0x10(%r14),%rsi
    78db:	48 89 e9             	mov    %rbp,%rcx
    78de:	48 89 da             	mov    %rbx,%rdx
    78e1:	31 ff                	xor    %edi,%edi
    78e3:	e8 05 ec 00 00       	call   164ed <uri_encode_string>
    78e8:	48 29 c5             	sub    %rax,%rbp
    78eb:	48 01 c3             	add    %rax,%rbx
    78ee:	49 01 c5             	add    %rax,%r13
    78f1:	48 85 ed             	test   %rbp,%rbp
    78f4:	7e 03                	jle    78f9 <http_params+0x56>
    78f6:	c6 03 3d             	movb   $0x3d,(%rbx)
    78f9:	49 8b 76 18          	mov    0x18(%r14),%rsi
    78fd:	48 ff c3             	inc    %rbx
    7900:	48 ff cd             	dec    %rbp
    7903:	31 ff                	xor    %edi,%edi
    7905:	48 89 e9             	mov    %rbp,%rcx
    7908:	48 89 da             	mov    %rbx,%rdx
    790b:	49 ff c5             	inc    %r13
    790e:	e8 da eb 00 00       	call   164ed <uri_encode_string>
    7913:	4d 8b 36             	mov    (%r14),%r14
    7916:	48 01 c3             	add    %rax,%rbx
    7919:	49 01 c5             	add    %rax,%r13
    791c:	48 29 c5             	sub    %rax,%rbp
    791f:	eb 9b                	jmp    78bc <http_params+0x19>
    7921:	48 85 ed             	test   %rbp,%rbp
    7924:	7e 03                	jle    7929 <http_params+0x86>
    7926:	c6 03 00             	movb   $0x0,(%rbx)
    7929:	5b                   	pop    %rbx
    792a:	4c 89 e8             	mov    %r13,%rax
    792d:	5d                   	pop    %rbp
    792e:	41 5c                	pop    %r12
    7930:	41 5d                	pop    %r13
    7932:	41 5e                	pop    %r14
    7934:	c3                   	ret    

0000000000007935 <http_parse_content_length>:
    7935:	f3 0f 1e fa          	endbr64 
    7939:	53                   	push   %rbx
    793a:	ba 0a 00 00 00       	mov    $0xa,%edx
    793f:	48 89 fb             	mov    %rdi,%rbx
    7942:	48 89 f7             	mov    %rsi,%rdi
    7945:	48 83 ec 10          	sub    $0x10,%rsp
    7949:	48 8b 05 00 27 02 00 	mov    0x22700(%rip),%rax        # 2a050 <__stack_chk_guard>
    7950:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7955:	31 c0                	xor    %eax,%eax
    7957:	48 89 e6             	mov    %rsp,%rsi
    795a:	e8 f8 c1 00 00       	call   13b57 <strtoul>
    795f:	48 89 83 d8 01 00 00 	mov    %rax,0x1d8(%rbx)
    7966:	48 8b 04 24          	mov    (%rsp),%rax
    796a:	80 38 00             	cmpb   $0x0,(%rax)
    796d:	74 07                	je     7976 <http_parse_content_length+0x41>
    796f:	b8 7e 9c f3 e3       	mov    $0xe3f39c7e,%eax
    7974:	eb 09                	jmp    797f <http_parse_content_length+0x4a>
    7976:	83 8b 1c 02 00 00 02 	orl    $0x2,0x21c(%rbx)
    797d:	31 c0                	xor    %eax,%eax
    797f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    7984:	48 2b 15 c5 26 02 00 	sub    0x226c5(%rip),%rdx        # 2a050 <__stack_chk_guard>
    798b:	74 05                	je     7992 <http_parse_content_length+0x5d>
    798d:	e8 ce b0 ff ff       	call   2a60 <__stack_chk_fail>
    7992:	48 83 c4 10          	add    $0x10,%rsp
    7996:	5b                   	pop    %rbx
    7997:	c3                   	ret    

0000000000007998 <http_parse_transfer_encoding>:
    7998:	f3 0f 1e fa          	endbr64 
    799c:	41 55                	push   %r13
    799e:	4c 8d 2d 9b 12 02 00 	lea    0x2129b(%rip),%r13        # 28c40 <icmpv4_echo_protocol>
    79a5:	41 54                	push   %r12
    79a7:	49 89 f4             	mov    %rsi,%r12
    79aa:	55                   	push   %rbp
    79ab:	48 89 fd             	mov    %rdi,%rbp
    79ae:	53                   	push   %rbx
    79af:	48 8d 1d 62 12 02 00 	lea    0x21262(%rip),%rbx        # 28c18 <http_transfer_chunked>
    79b6:	51                   	push   %rcx
    79b7:	4c 39 eb             	cmp    %r13,%rbx
    79ba:	73 1e                	jae    79da <http_parse_transfer_encoding+0x42>
    79bc:	48 8b 33             	mov    (%rbx),%rsi
    79bf:	4c 89 e7             	mov    %r12,%rdi
    79c2:	e8 02 c0 00 00       	call   139c9 <strcasecmp>
    79c7:	85 c0                	test   %eax,%eax
    79c9:	75 09                	jne    79d4 <http_parse_transfer_encoding+0x3c>
    79cb:	48 89 9d d0 01 00 00 	mov    %rbx,0x1d0(%rbp)
    79d2:	eb 0b                	jmp    79df <http_parse_transfer_encoding+0x47>
    79d4:	48 83 c3 28          	add    $0x28,%rbx
    79d8:	eb dd                	jmp    79b7 <http_parse_transfer_encoding+0x1f>
    79da:	b8 7d 9d f3 c3       	mov    $0xc3f39d7d,%eax
    79df:	5a                   	pop    %rdx
    79e0:	5b                   	pop    %rbx
    79e1:	5d                   	pop    %rbp
    79e2:	41 5c                	pop    %r12
    79e4:	41 5d                	pop    %r13
    79e6:	c3                   	ret    

00000000000079e7 <http_content_deliver>:
    79e7:	f3 0f 1e fa          	endbr64 
    79eb:	83 bf c4 01 00 00 00 	cmpl   $0x0,0x1c4(%rdi)
    79f2:	75 09                	jne    79fd <http_content_deliver+0x16>
    79f4:	48 83 c7 10          	add    $0x10,%rdi
    79f8:	e9 f8 fc 00 00       	jmp    176f5 <xfer_deliver>
    79fd:	50                   	push   %rax
    79fe:	48 89 f7             	mov    %rsi,%rdi
    7a01:	e8 60 23 00 00       	call   9d66 <free_iob>
    7a06:	31 c0                	xor    %eax,%eax
    7a08:	5a                   	pop    %rdx
    7a09:	c3                   	ret    

0000000000007a0a <http_step>:
    7a0a:	f3 0f 1e fa          	endbr64 
    7a0e:	48 8b 87 38 02 00 00 	mov    0x238(%rdi),%rax
    7a15:	48 83 38 00          	cmpq   $0x0,(%rax)
    7a19:	74 51                	je     7a6c <http_step+0x62>
    7a1b:	41 54                	push   %r12
    7a1d:	55                   	push   %rbp
    7a1e:	48 89 fd             	mov    %rdi,%rbp
    7a21:	48 8d 7f 70          	lea    0x70(%rdi),%rdi
    7a25:	51                   	push   %rcx
    7a26:	e8 e9 fa 00 00       	call   17514 <xfer_window>
    7a2b:	48 85 c0             	test   %rax,%rax
    7a2e:	74 37                	je     7a67 <http_step+0x5d>
    7a30:	4c 8d 65 10          	lea    0x10(%rbp),%r12
    7a34:	4c 89 e7             	mov    %r12,%rdi
    7a37:	e8 44 fb 00 00       	call   17580 <xfer_window_changed>
    7a3c:	4c 89 e7             	mov    %r12,%rdi
    7a3f:	e8 d0 fa 00 00       	call   17514 <xfer_window>
    7a44:	48 85 c0             	test   %rax,%rax
    7a47:	74 1e                	je     7a67 <http_step+0x5d>
    7a49:	48 8b 85 38 02 00 00 	mov    0x238(%rbp),%rax
    7a50:	48 89 ef             	mov    %rbp,%rdi
    7a53:	ff 10                	call   *(%rax)
    7a55:	89 c6                	mov    %eax,%esi
    7a57:	85 c0                	test   %eax,%eax
    7a59:	74 0c                	je     7a67 <http_step+0x5d>
    7a5b:	5a                   	pop    %rdx
    7a5c:	48 89 ef             	mov    %rbp,%rdi
    7a5f:	5d                   	pop    %rbp
    7a60:	41 5c                	pop    %r12
    7a62:	e9 12 fc ff ff       	jmp    7679 <http_close>
    7a67:	58                   	pop    %rax
    7a68:	5d                   	pop    %rbp
    7a69:	41 5c                	pop    %r12
    7a6b:	c3                   	ret    
    7a6c:	c3                   	ret    

0000000000007a6d <http_transfer_complete>:
    7a6d:	41 56                	push   %r14
    7a6f:	41 55                	push   %r13
    7a71:	41 54                	push   %r12
    7a73:	4c 8d 67 70          	lea    0x70(%rdi),%r12
    7a77:	55                   	push   %rbp
    7a78:	48 89 fd             	mov    %rdi,%rbp
    7a7b:	51                   	push   %rcx
    7a7c:	f6 87 1c 02 00 00 01 	testb  $0x1,0x21c(%rdi)
    7a83:	74 08                	je     7a8d <http_transfer_complete+0x20>
    7a85:	4c 89 e7             	mov    %r12,%rdi
    7a88:	e8 07 7e 00 00       	call   f894 <pool_recycle>
    7a8d:	4c 89 e7             	mov    %r12,%rdi
    7a90:	31 f6                	xor    %esi,%esi
    7a92:	e8 81 1e 00 00       	call   9918 <intf_restart>
    7a97:	44 8b a5 c4 01 00 00 	mov    0x1c4(%rbp),%r12d
    7a9e:	48 c7 85 38 02 00 00 	movq   $0x0,0x238(%rbp)
    7aa5:	00 00 00 00 
    7aa9:	45 85 e4             	test   %r12d,%r12d
    7aac:	75 10                	jne    7abe <http_transfer_complete+0x51>
    7aae:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    7ab2:	31 f6                	xor    %esi,%esi
    7ab4:	e8 e6 1e 00 00       	call   999f <intf_shutdown>
    7ab9:	e9 05 01 00 00       	jmp    7bc3 <http_transfer_complete+0x156>
    7abe:	48 8b bd c8 01 00 00 	mov    0x1c8(%rbp),%rdi
    7ac5:	48 85 ff             	test   %rdi,%rdi
    7ac8:	74 75                	je     7b3f <http_transfer_complete+0xd2>
    7aca:	e8 60 ea 00 00       	call   1652f <parse_uri>
    7acf:	49 89 c5             	mov    %rax,%r13
    7ad2:	48 85 c0             	test   %rax,%rax
    7ad5:	75 0b                	jne    7ae2 <http_transfer_complete+0x75>
    7ad7:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    7add:	e9 e1 00 00 00       	jmp    7bc3 <http_transfer_complete+0x156>
    7ae2:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
    7ae9:	48 89 c6             	mov    %rax,%rsi
    7aec:	e8 21 ef 00 00       	call   16a12 <resolve_uri>
    7af1:	49 89 c6             	mov    %rax,%r14
    7af4:	48 85 c0             	test   %rax,%rax
    7af7:	75 08                	jne    7b01 <http_transfer_complete+0x94>
    7af9:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    7aff:	eb 1e                	jmp    7b1f <http_transfer_complete+0xb2>
    7b01:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    7b05:	48 89 c2             	mov    %rax,%rdx
    7b08:	be 01 00 00 00       	mov    $0x1,%esi
    7b0d:	31 c0                	xor    %eax,%eax
    7b0f:	e8 69 fc 00 00       	call   1777d <xfer_redirect>
    7b14:	4c 89 f7             	mov    %r14,%rdi
    7b17:	41 89 c4             	mov    %eax,%r12d
    7b1a:	e8 fb 83 00 00       	call   ff1a <ref_decrement>
    7b1f:	4c 89 ef             	mov    %r13,%rdi
    7b22:	e8 f3 83 00 00       	call   ff1a <ref_decrement>
    7b27:	45 85 e4             	test   %r12d,%r12d
    7b2a:	0f 85 93 00 00 00    	jne    7bc3 <http_transfer_complete+0x156>
    7b30:	31 f6                	xor    %esi,%esi
    7b32:	48 89 ef             	mov    %rbp,%rdi
    7b35:	e8 3f fb ff ff       	call   7679 <http_close>
    7b3a:	e9 84 00 00 00       	jmp    7bc3 <http_transfer_complete+0x156>
    7b3f:	f6 85 1c 02 00 00 04 	testb  $0x4,0x21c(%rbp)
    7b46:	74 7b                	je     7bc3 <http_transfer_complete+0x156>
    7b48:	48 8b 85 e8 01 00 00 	mov    0x1e8(%rbp),%rax
    7b4f:	48 85 c0             	test   %rax,%rax
    7b52:	75 47                	jne    7b9b <http_transfer_complete+0x12e>
    7b54:	8b bd c4 01 00 00    	mov    0x1c4(%rbp),%edi
    7b5a:	4c 8d 65 50          	lea    0x50(%rbp),%r12
    7b5e:	4c 8d 6d 30          	lea    0x30(%rbp),%r13
    7b62:	31 c9                	xor    %ecx,%ecx
    7b64:	4c 89 e2             	mov    %r12,%rdx
    7b67:	4c 89 ee             	mov    %r13,%rsi
    7b6a:	31 c0                	xor    %eax,%eax
    7b6c:	e8 32 20 00 00       	call   9ba3 <intfs_restart>
    7b71:	4c 89 ee             	mov    %r13,%rsi
    7b74:	4c 89 e7             	mov    %r12,%rdi
    7b77:	e8 c5 1c 00 00       	call   9841 <intf_plug_plug>
    7b7c:	8b b5 18 02 00 00    	mov    0x218(%rbp),%esi
    7b82:	48 c7 85 40 02 00 00 	movq   $0x0,0x240(%rbp)
    7b89:	00 00 00 00 
    7b8d:	85 f6                	test   %esi,%esi
    7b8f:	75 20                	jne    7bb1 <http_transfer_complete+0x144>
    7b91:	48 89 ef             	mov    %rbp,%rdi
    7b94:	e8 36 fb ff ff       	call   76cf <http_reopen>
    7b99:	eb 25                	jmp    7bc0 <http_transfer_complete+0x153>
    7b9b:	48 89 85 48 01 00 00 	mov    %rax,0x148(%rbp)
    7ba2:	48 89 ef             	mov    %rbp,%rdi
    7ba5:	ff 50 10             	call   *0x10(%rax)
    7ba8:	41 89 c4             	mov    %eax,%r12d
    7bab:	85 c0                	test   %eax,%eax
    7bad:	74 a5                	je     7b54 <http_transfer_complete+0xe7>
    7baf:	eb 12                	jmp    7bc3 <http_transfer_complete+0x156>
    7bb1:	c1 e6 0a             	shl    $0xa,%esi
    7bb4:	48 8d bd b0 00 00 00 	lea    0xb0(%rbp),%rdi
    7bbb:	e8 7e 87 00 00       	call   1033e <start_timer_fixed>
    7bc0:	45 31 e4             	xor    %r12d,%r12d
    7bc3:	5a                   	pop    %rdx
    7bc4:	44 89 e0             	mov    %r12d,%eax
    7bc7:	5d                   	pop    %rbp
    7bc8:	41 5c                	pop    %r12
    7bca:	41 5d                	pop    %r13
    7bcc:	41 5e                	pop    %r14
    7bce:	c3                   	ret    

0000000000007bcf <http_rx_transfer_identity>:
    7bcf:	f3 0f 1e fa          	endbr64 
    7bd3:	55                   	push   %rbp
    7bd4:	4c 8b 06             	mov    (%rsi),%r8
    7bd7:	48 89 fd             	mov    %rdi,%rbp
    7bda:	49 8b 40 20          	mov    0x20(%r8),%rax
    7bde:	49 2b 40 18          	sub    0x18(%r8),%rax
    7be2:	48 03 87 40 02 00 00 	add    0x240(%rdi),%rax
    7be9:	48 89 87 40 02 00 00 	mov    %rax,0x240(%rdi)
    7bf0:	f6 87 1c 02 00 00 02 	testb  $0x2,0x21c(%rdi)
    7bf7:	74 10                	je     7c09 <http_rx_transfer_identity+0x3a>
    7bf9:	48 3b 87 d8 01 00 00 	cmp    0x1d8(%rdi),%rax
    7c00:	76 07                	jbe    7c09 <http_rx_transfer_identity+0x3a>
    7c02:	b8 68 9d f3 e2       	mov    $0xe2f39d68,%eax
    7c07:	eb 39                	jmp    7c42 <http_rx_transfer_identity+0x73>
    7c09:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    7c10:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    7c14:	4c 89 c6             	mov    %r8,%rsi
    7c17:	e8 c6 fb 00 00       	call   177e2 <xfer_deliver_iob>
    7c1c:	85 c0                	test   %eax,%eax
    7c1e:	75 22                	jne    7c42 <http_rx_transfer_identity+0x73>
    7c20:	f6 85 1c 02 00 00 02 	testb  $0x2,0x21c(%rbp)
    7c27:	74 19                	je     7c42 <http_rx_transfer_identity+0x73>
    7c29:	48 8b 95 d8 01 00 00 	mov    0x1d8(%rbp),%rdx
    7c30:	48 39 95 40 02 00 00 	cmp    %rdx,0x240(%rbp)
    7c37:	75 09                	jne    7c42 <http_rx_transfer_identity+0x73>
    7c39:	48 89 ef             	mov    %rbp,%rdi
    7c3c:	5d                   	pop    %rbp
    7c3d:	e9 2b fe ff ff       	jmp    7a6d <http_transfer_complete>
    7c42:	5d                   	pop    %rbp
    7c43:	c3                   	ret    

0000000000007c44 <http_init_transfer_identity>:
    7c44:	f3 0f 1e fa          	endbr64 
    7c48:	f6 87 1c 02 00 00 02 	testb  $0x2,0x21c(%rdi)
    7c4f:	74 0f                	je     7c60 <http_init_transfer_identity+0x1c>
    7c51:	48 83 bf d8 01 00 00 	cmpq   $0x0,0x1d8(%rdi)
    7c58:	00 
    7c59:	75 05                	jne    7c60 <http_init_transfer_identity+0x1c>
    7c5b:	e9 0d fe ff ff       	jmp    7a6d <http_transfer_complete>
    7c60:	31 c0                	xor    %eax,%eax
    7c62:	c3                   	ret    

0000000000007c63 <http_close_transfer_identity>:
    7c63:	f3 0f 1e fa          	endbr64 
    7c67:	85 f6                	test   %esi,%esi
    7c69:	75 34                	jne    7c9f <http_close_transfer_identity+0x3c>
    7c6b:	f6 87 1c 02 00 00 02 	testb  $0x2,0x21c(%rdi)
    7c72:	74 07                	je     7c7b <http_close_transfer_identity+0x18>
    7c74:	be 98 62 0c 1d       	mov    $0x1d0c6298,%esi
    7c79:	eb 24                	jmp    7c9f <http_close_transfer_identity+0x3c>
    7c7b:	48 83 ec 18          	sub    $0x18,%rsp
    7c7f:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    7c84:	e8 e4 fd ff ff       	call   7a6d <http_transfer_complete>
    7c89:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7c8e:	85 c0                	test   %eax,%eax
    7c90:	89 c6                	mov    %eax,%esi
    7c92:	74 06                	je     7c9a <http_close_transfer_identity+0x37>
    7c94:	48 83 c4 18          	add    $0x18,%rsp
    7c98:	eb 05                	jmp    7c9f <http_close_transfer_identity+0x3c>
    7c9a:	48 83 c4 18          	add    $0x18,%rsp
    7c9e:	c3                   	ret    
    7c9f:	e9 d5 f9 ff ff       	jmp    7679 <http_close>

0000000000007ca4 <http_rx_linebuf.constprop.0>:
    7ca4:	53                   	push   %rbx
    7ca5:	48 89 fb             	mov    %rdi,%rbx
    7ca8:	48 89 f7             	mov    %rsi,%rdi
    7cab:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    7caf:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    7cb3:	48 29 f2             	sub    %rsi,%rdx
    7cb6:	e8 0b 44 00 00       	call   c0c6 <line_buffer>
    7cbb:	85 c0                	test   %eax,%eax
    7cbd:	78 08                	js     7cc7 <http_rx_linebuf.constprop.0+0x23>
    7cbf:	48 98                	cltq   
    7cc1:	48 01 43 18          	add    %rax,0x18(%rbx)
    7cc5:	31 c0                	xor    %eax,%eax
    7cc7:	5b                   	pop    %rbx
    7cc8:	c3                   	ret    

0000000000007cc9 <http_rx_trailers>:
    7cc9:	f3 0f 1e fa          	endbr64 
    7ccd:	41 55                	push   %r13
    7ccf:	49 89 f0             	mov    %rsi,%r8
    7cd2:	4c 8d af 20 02 00 00 	lea    0x220(%rdi),%r13
    7cd9:	41 54                	push   %r12
    7cdb:	4c 89 ee             	mov    %r13,%rsi
    7cde:	55                   	push   %rbp
    7cdf:	48 89 fd             	mov    %rdi,%rbp
    7ce2:	49 8b 38             	mov    (%r8),%rdi
    7ce5:	e8 ba ff ff ff       	call   7ca4 <http_rx_linebuf.constprop.0>
    7cea:	41 89 c4             	mov    %eax,%r12d
    7ced:	85 c0                	test   %eax,%eax
    7cef:	75 27                	jne    7d18 <http_rx_trailers+0x4f>
    7cf1:	4c 89 ef             	mov    %r13,%rdi
    7cf4:	e8 6a 43 00 00       	call   c063 <buffered_line>
    7cf9:	48 85 c0             	test   %rax,%rax
    7cfc:	74 1a                	je     7d18 <http_rx_trailers+0x4f>
    7cfe:	80 38 00             	cmpb   $0x0,(%rax)
    7d01:	75 15                	jne    7d18 <http_rx_trailers+0x4f>
    7d03:	4c 89 ef             	mov    %r13,%rdi
    7d06:	e8 92 43 00 00       	call   c09d <empty_line_buffer>
    7d0b:	48 89 ef             	mov    %rbp,%rdi
    7d0e:	5d                   	pop    %rbp
    7d0f:	41 5c                	pop    %r12
    7d11:	41 5d                	pop    %r13
    7d13:	e9 55 fd ff ff       	jmp    7a6d <http_transfer_complete>
    7d18:	44 89 e0             	mov    %r12d,%eax
    7d1b:	5d                   	pop    %rbp
    7d1c:	41 5c                	pop    %r12
    7d1e:	41 5d                	pop    %r13
    7d20:	c3                   	ret    

0000000000007d21 <http_rx_transfer_chunked>:
    7d21:	f3 0f 1e fa          	endbr64 
    7d25:	41 54                	push   %r12
    7d27:	55                   	push   %rbp
    7d28:	53                   	push   %rbx
    7d29:	48 89 fb             	mov    %rdi,%rbx
    7d2c:	48 83 ec 10          	sub    $0x10,%rsp
    7d30:	48 8b bf 48 02 00 00 	mov    0x248(%rdi),%rdi
    7d37:	4c 8b 06             	mov    (%rsi),%r8
    7d3a:	48 8b 05 0f 23 02 00 	mov    0x2230f(%rip),%rax        # 2a050 <__stack_chk_guard>
    7d41:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7d46:	31 c0                	xor    %eax,%eax
    7d48:	48 85 ff             	test   %rdi,%rdi
    7d4b:	0f 84 dc 00 00 00    	je     7e2d <http_rx_transfer_chunked+0x10c>
    7d51:	49 8b 50 20          	mov    0x20(%r8),%rdx
    7d55:	49 8b 40 18          	mov    0x18(%r8),%rax
    7d59:	49 89 f4             	mov    %rsi,%r12
    7d5c:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
    7d60:	48 89 d6             	mov    %rdx,%rsi
    7d63:	48 29 c6             	sub    %rax,%rsi
    7d66:	48 39 ce             	cmp    %rcx,%rsi
    7d69:	75 16                	jne    7d81 <http_rx_transfer_chunked+0x60>
    7d6b:	48 01 f8             	add    %rdi,%rax
    7d6e:	80 38 0d             	cmpb   $0xd,(%rax)
    7d71:	75 0e                	jne    7d81 <http_rx_transfer_chunked+0x60>
    7d73:	80 78 01 0a          	cmpb   $0xa,0x1(%rax)
    7d77:	75 08                	jne    7d81 <http_rx_transfer_chunked+0x60>
    7d79:	48 83 ea 02          	sub    $0x2,%rdx
    7d7d:	49 89 50 20          	mov    %rdx,0x20(%r8)
    7d81:	49 8b 2c 24          	mov    (%r12),%rbp
    7d85:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    7d89:	48 2b 55 18          	sub    0x18(%rbp),%rdx
    7d8d:	48 39 d7             	cmp    %rdx,%rdi
    7d90:	72 17                	jb     7da9 <http_rx_transfer_chunked+0x88>
    7d92:	48 8b 83 40 02 00 00 	mov    0x240(%rbx),%rax
    7d99:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    7da0:	00 
    7da1:	48 29 d7             	sub    %rdx,%rdi
    7da4:	48 01 d0             	add    %rdx,%rax
    7da7:	eb 50                	jmp    7df9 <http_rx_transfer_chunked+0xd8>
    7da9:	e8 9e 1f 00 00       	call   9d4c <alloc_iob>
    7dae:	48 89 c5             	mov    %rax,%rbp
    7db1:	48 85 c0             	test   %rax,%rax
    7db4:	75 0b                	jne    7dc1 <http_rx_transfer_chunked+0xa0>
    7db6:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    7dbc:	e9 0c 01 00 00       	jmp    7ecd <http_rx_transfer_chunked+0x1ac>
    7dc1:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    7dc5:	48 8b 93 48 02 00 00 	mov    0x248(%rbx),%rdx
    7dcc:	49 8b 04 24          	mov    (%r12),%rax
    7dd0:	48 8b 70 18          	mov    0x18(%rax),%rsi
    7dd4:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    7dd8:	48 89 45 20          	mov    %rax,0x20(%rbp)
    7ddc:	e8 08 f6 00 00       	call   173e9 <__memcpy>
    7de1:	49 8b 14 24          	mov    (%r12),%rdx
    7de5:	48 8b 83 48 02 00 00 	mov    0x248(%rbx),%rax
    7dec:	31 ff                	xor    %edi,%edi
    7dee:	48 01 42 18          	add    %rax,0x18(%rdx)
    7df2:	48 03 83 40 02 00 00 	add    0x240(%rbx),%rax
    7df9:	48 89 83 40 02 00 00 	mov    %rax,0x240(%rbx)
    7e00:	48 89 bb 48 02 00 00 	mov    %rdi,0x248(%rbx)
    7e07:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7e0c:	48 2b 05 3d 22 02 00 	sub    0x2223d(%rip),%rax        # 2a050 <__stack_chk_guard>
    7e13:	0f 85 c2 00 00 00    	jne    7edb <http_rx_transfer_chunked+0x1ba>
    7e19:	48 83 c4 10          	add    $0x10,%rsp
    7e1d:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
    7e21:	48 89 ee             	mov    %rbp,%rsi
    7e24:	5b                   	pop    %rbx
    7e25:	5d                   	pop    %rbp
    7e26:	41 5c                	pop    %r12
    7e28:	e9 b5 f9 00 00       	jmp    177e2 <xfer_deliver_iob>
    7e2d:	48 8d ab 20 02 00 00 	lea    0x220(%rbx),%rbp
    7e34:	4c 89 c7             	mov    %r8,%rdi
    7e37:	48 89 ee             	mov    %rbp,%rsi
    7e3a:	e8 65 fe ff ff       	call   7ca4 <http_rx_linebuf.constprop.0>
    7e3f:	41 89 c4             	mov    %eax,%r12d
    7e42:	85 c0                	test   %eax,%eax
    7e44:	0f 85 83 00 00 00    	jne    7ecd <http_rx_transfer_chunked+0x1ac>
    7e4a:	48 89 ef             	mov    %rbp,%rdi
    7e4d:	e8 11 42 00 00       	call   c063 <buffered_line>
    7e52:	48 89 c7             	mov    %rax,%rdi
    7e55:	48 85 c0             	test   %rax,%rax
    7e58:	74 73                	je     7ecd <http_rx_transfer_chunked+0x1ac>
    7e5a:	80 38 00             	cmpb   $0x0,(%rax)
    7e5d:	74 6e                	je     7ecd <http_rx_transfer_chunked+0x1ac>
    7e5f:	48 89 e6             	mov    %rsp,%rsi
    7e62:	ba 10 00 00 00       	mov    $0x10,%edx
    7e67:	e8 eb bc 00 00       	call   13b57 <strtoul>
    7e6c:	48 89 83 48 02 00 00 	mov    %rax,0x248(%rbx)
    7e73:	48 8b 04 24          	mov    (%rsp),%rax
    7e77:	80 38 00             	cmpb   $0x0,(%rax)
    7e7a:	74 08                	je     7e84 <http_rx_transfer_chunked+0x163>
    7e7c:	41 bc 7e 9b f3 e3    	mov    $0xe3f39b7e,%r12d
    7e82:	eb 49                	jmp    7ecd <http_rx_transfer_chunked+0x1ac>
    7e84:	48 89 ef             	mov    %rbp,%rdi
    7e87:	48 8d 6b 50          	lea    0x50(%rbx),%rbp
    7e8b:	e8 0d 42 00 00       	call   c09d <empty_line_buffer>
    7e90:	48 8b b3 48 02 00 00 	mov    0x248(%rbx),%rsi
    7e97:	48 89 ef             	mov    %rbp,%rdi
    7e9a:	48 03 b3 40 02 00 00 	add    0x240(%rbx),%rsi
    7ea1:	e8 cc f9 00 00       	call   17872 <xfer_seek>
    7ea6:	48 8b b3 40 02 00 00 	mov    0x240(%rbx),%rsi
    7ead:	48 89 ef             	mov    %rbp,%rdi
    7eb0:	e8 bd f9 00 00       	call   17872 <xfer_seek>
    7eb5:	48 83 bb 48 02 00 00 	cmpq   $0x0,0x248(%rbx)
    7ebc:	00 
    7ebd:	75 0e                	jne    7ecd <http_rx_transfer_chunked+0x1ac>
    7ebf:	48 8d 05 8a d4 01 00 	lea    0x1d48a(%rip),%rax        # 25350 <http_trailers>
    7ec6:	48 89 83 38 02 00 00 	mov    %rax,0x238(%rbx)
    7ecd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7ed2:	48 2b 05 77 21 02 00 	sub    0x22177(%rip),%rax        # 2a050 <__stack_chk_guard>
    7ed9:	74 05                	je     7ee0 <http_rx_transfer_chunked+0x1bf>
    7edb:	e8 80 ab ff ff       	call   2a60 <__stack_chk_fail>
    7ee0:	48 83 c4 10          	add    $0x10,%rsp
    7ee4:	44 89 e0             	mov    %r12d,%eax
    7ee7:	5b                   	pop    %rbx
    7ee8:	5d                   	pop    %rbp
    7ee9:	41 5c                	pop    %r12
    7eeb:	c3                   	ret    

0000000000007eec <http_token>:
    7eec:	f3 0f 1e fa          	endbr64 
    7ef0:	41 56                	push   %r14
    7ef2:	41 55                	push   %r13
    7ef4:	41 54                	push   %r12
    7ef6:	55                   	push   %rbp
    7ef7:	48 89 f5             	mov    %rsi,%rbp
    7efa:	53                   	push   %rbx
    7efb:	48 89 fb             	mov    %rdi,%rbx
    7efe:	48 85 f6             	test   %rsi,%rsi
    7f01:	74 17                	je     7f1a <http_token+0x2e>
    7f03:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    7f0a:	eb 0e                	jmp    7f1a <http_token+0x2e>
    7f0c:	4c 8b 2b             	mov    (%rbx),%r13
    7f0f:	41 8a 45 00          	mov    0x0(%r13),%al
    7f13:	3c 2c                	cmp    $0x2c,%al
    7f15:	75 14                	jne    7f2b <http_token+0x3f>
    7f17:	48 ff 03             	incq   (%rbx)
    7f1a:	48 8b 03             	mov    (%rbx),%rax
    7f1d:	0f be 38             	movsbl (%rax),%edi
    7f20:	e8 67 15 01 00       	call   1948c <isspace>
    7f25:	85 c0                	test   %eax,%eax
    7f27:	75 ee                	jne    7f17 <http_token+0x2b>
    7f29:	eb e1                	jmp    7f0c <http_token+0x20>
    7f2b:	45 31 f6             	xor    %r14d,%r14d
    7f2e:	84 c0                	test   %al,%al
    7f30:	74 6d                	je     7f9f <http_token+0xb3>
    7f32:	48 8b 03             	mov    (%rbx),%rax
    7f35:	44 8a 20             	mov    (%rax),%r12b
    7f38:	45 84 e4             	test   %r12b,%r12b
    7f3b:	74 71                	je     7fae <http_token+0xc2>
    7f3d:	41 0f be fc          	movsbl %r12b,%edi
    7f41:	e8 46 15 01 00       	call   1948c <isspace>
    7f46:	85 c0                	test   %eax,%eax
    7f48:	48 8b 03             	mov    (%rbx),%rax
    7f4b:	75 06                	jne    7f53 <http_token+0x67>
    7f4d:	41 80 fc 2c          	cmp    $0x2c,%r12b
    7f51:	75 05                	jne    7f58 <http_token+0x6c>
    7f53:	45 84 f6             	test   %r14b,%r14b
    7f56:	74 4c                	je     7fa4 <http_token+0xb8>
    7f58:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7f5c:	45 38 e6             	cmp    %r12b,%r14b
    7f5f:	74 43                	je     7fa4 <http_token+0xb8>
    7f61:	48 85 ed             	test   %rbp,%rbp
    7f64:	74 34                	je     7f9a <http_token+0xae>
    7f66:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
    7f6b:	75 2d                	jne    7f9a <http_token+0xae>
    7f6d:	41 80 fc 3d          	cmp    $0x3d,%r12b
    7f71:	75 27                	jne    7f9a <http_token+0xae>
    7f73:	48 89 13             	mov    %rdx,(%rbx)
    7f76:	c6 00 00             	movb   $0x0,(%rax)
    7f79:	48 8b 03             	mov    (%rbx),%rax
    7f7c:	8a 10                	mov    (%rax),%dl
    7f7e:	80 fa 22             	cmp    $0x22,%dl
    7f81:	74 05                	je     7f88 <http_token+0x9c>
    7f83:	80 fa 27             	cmp    $0x27,%dl
    7f86:	75 09                	jne    7f91 <http_token+0xa5>
    7f88:	48 ff c0             	inc    %rax
    7f8b:	41 89 d6             	mov    %edx,%r14d
    7f8e:	48 89 03             	mov    %rax,(%rbx)
    7f91:	48 8b 03             	mov    (%rbx),%rax
    7f94:	48 89 45 00          	mov    %rax,0x0(%rbp)
    7f98:	eb 98                	jmp    7f32 <http_token+0x46>
    7f9a:	48 89 13             	mov    %rdx,(%rbx)
    7f9d:	eb 93                	jmp    7f32 <http_token+0x46>
    7f9f:	45 31 ed             	xor    %r13d,%r13d
    7fa2:	eb 0a                	jmp    7fae <http_token+0xc2>
    7fa4:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7fa8:	48 89 13             	mov    %rdx,(%rbx)
    7fab:	c6 00 00             	movb   $0x0,(%rax)
    7fae:	5b                   	pop    %rbx
    7faf:	4c 89 e8             	mov    %r13,%rax
    7fb2:	5d                   	pop    %rbp
    7fb3:	41 5c                	pop    %r12
    7fb5:	41 5d                	pop    %r13
    7fb7:	41 5e                	pop    %r14
    7fb9:	c3                   	ret    

0000000000007fba <http_rx_headers>:
    7fba:	f3 0f 1e fa          	endbr64 
    7fbe:	41 57                	push   %r15
    7fc0:	49 89 f0             	mov    %rsi,%r8
    7fc3:	41 56                	push   %r14
    7fc5:	41 55                	push   %r13
    7fc7:	4c 8d af a8 01 00 00 	lea    0x1a8(%rdi),%r13
    7fce:	41 54                	push   %r12
    7fd0:	4c 89 ee             	mov    %r13,%rsi
    7fd3:	55                   	push   %rbp
    7fd4:	48 89 fd             	mov    %rdi,%rbp
    7fd7:	53                   	push   %rbx
    7fd8:	48 83 ec 28          	sub    $0x28,%rsp
    7fdc:	49 8b 38             	mov    (%r8),%rdi
    7fdf:	48 8b 05 6a 20 02 00 	mov    0x2206a(%rip),%rax        # 2a050 <__stack_chk_guard>
    7fe6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    7feb:	31 c0                	xor    %eax,%eax
    7fed:	e8 b2 fc ff ff       	call   7ca4 <http_rx_linebuf.constprop.0>
    7ff2:	41 89 c4             	mov    %eax,%r12d
    7ff5:	85 c0                	test   %eax,%eax
    7ff7:	0f 85 73 02 00 00    	jne    8270 <http_rx_headers+0x2b6>
    7ffd:	4c 89 ef             	mov    %r13,%rdi
    8000:	e8 5e 40 00 00       	call   c063 <buffered_line>
    8005:	48 85 c0             	test   %rax,%rax
    8008:	0f 84 62 02 00 00    	je     8270 <http_rx_headers+0x2b6>
    800e:	80 38 00             	cmpb   $0x0,(%rax)
    8011:	0f 85 59 02 00 00    	jne    8270 <http_rx_headers+0x2b6>
    8017:	48 8b 9d a8 01 00 00 	mov    0x1a8(%rbp),%rbx
    801e:	48 89 df             	mov    %rbx,%rdi
    8021:	e8 f0 b9 00 00       	call   13a16 <strlen>
    8026:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    802b:	31 f6                	xor    %esi,%esi
    802d:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    8032:	4c 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%r14
    8037:	e8 b0 fe ff ff       	call   7eec <http_token>
    803c:	48 89 c3             	mov    %rax,%rbx
    803f:	48 85 c0             	test   %rax,%rax
    8042:	74 1b                	je     805f <http_rx_headers+0xa5>
    8044:	ba 05 00 00 00       	mov    $0x5,%edx
    8049:	48 8d 35 58 aa 01 00 	lea    0x1aa58(%rip),%rsi        # 22aa8 <.LC11>
    8050:	48 89 c7             	mov    %rax,%rdi
    8053:	e8 3b b9 00 00       	call   13993 <strncmp>
    8058:	41 89 c4             	mov    %eax,%r12d
    805b:	85 c0                	test   %eax,%eax
    805d:	74 02                	je     8061 <http_rx_headers+0xa7>
    805f:	eb 4d                	jmp    80ae <http_rx_headers+0xf4>
    8061:	80 7b 05 30          	cmpb   $0x30,0x5(%rbx)
    8065:	74 20                	je     8087 <http_rx_headers+0xcd>
    8067:	48 8d 7b 05          	lea    0x5(%rbx),%rdi
    806b:	ba 03 00 00 00       	mov    $0x3,%edx
    8070:	48 8d 35 37 aa 01 00 	lea    0x1aa37(%rip),%rsi        # 22aae <.LC12>
    8077:	e8 17 b9 00 00       	call   13993 <strncmp>
    807c:	85 c0                	test   %eax,%eax
    807e:	74 07                	je     8087 <http_rx_headers+0xcd>
    8080:	83 8d 1c 02 00 00 01 	orl    $0x1,0x21c(%rbp)
    8087:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    808c:	ba 0a 00 00 00       	mov    $0xa,%edx
    8091:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    8096:	48 89 df             	mov    %rbx,%rdi
    8099:	e8 b9 ba 00 00       	call   13b57 <strtoul>
    809e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    80a3:	89 85 c0 01 00 00    	mov    %eax,0x1c0(%rbp)
    80a9:	80 3a 20             	cmpb   $0x20,(%rdx)
    80ac:	74 0b                	je     80b9 <http_rx_headers+0xff>
    80ae:	41 bc 7e 9e f3 e3    	mov    $0xe3f39e7e,%r12d
    80b4:	e9 b7 01 00 00       	jmp    8270 <http_rx_headers+0x2b6>
    80b9:	8a 13                	mov    (%rbx),%dl
    80bb:	80 fa 32             	cmp    $0x32,%dl
    80be:	74 5a                	je     811a <http_rx_headers+0x160>
    80c0:	80 fa 33             	cmp    $0x33,%dl
    80c3:	75 08                	jne    80cd <http_rx_headers+0x113>
    80c5:	41 bc 76 9f f3 b0    	mov    $0xb0f39f76,%r12d
    80cb:	eb 4d                	jmp    811a <http_rx_headers+0x160>
    80cd:	3d 91 01 00 00       	cmp    $0x191,%eax
    80d2:	75 08                	jne    80dc <http_rx_headers+0x122>
    80d4:	41 bc 71 9e f3 fd    	mov    $0xfdf39e71,%r12d
    80da:	eb 3e                	jmp    811a <http_rx_headers+0x160>
    80dc:	3d 93 01 00 00       	cmp    $0x193,%eax
    80e1:	75 08                	jne    80eb <http_rx_headers+0x131>
    80e3:	41 bc 71 9e f3 be    	mov    $0xbef39e71,%r12d
    80e9:	eb 2f                	jmp    811a <http_rx_headers+0x160>
    80eb:	3d 94 01 00 00       	cmp    $0x194,%eax
    80f0:	75 08                	jne    80fa <http_rx_headers+0x140>
    80f2:	41 bc 72 9e f3 d2    	mov    $0xd2f39e72,%r12d
    80f8:	eb 20                	jmp    811a <http_rx_headers+0x160>
    80fa:	80 fa 34             	cmp    $0x34,%dl
    80fd:	75 08                	jne    8107 <http_rx_headers+0x14d>
    80ff:	41 bc 68 9b f3 e2    	mov    $0xe2f39b68,%r12d
    8105:	eb 13                	jmp    811a <http_rx_headers+0x160>
    8107:	80 fa 35             	cmp    $0x35,%dl
    810a:	75 08                	jne    8114 <http_rx_headers+0x15a>
    810c:	41 bc 68 9a f3 e2    	mov    $0xe2f39a68,%r12d
    8112:	eb 06                	jmp    811a <http_rx_headers+0x160>
    8114:	41 bc 68 9e f3 e2    	mov    $0xe2f39e68,%r12d
    811a:	44 89 a5 c4 01 00 00 	mov    %r12d,0x1c4(%rbp)
    8121:	4c 8d 2d d8 0a 02 00 	lea    0x20ad8(%rip),%r13        # 28c00 <http_scheme>
    8128:	4c 89 f7             	mov    %r14,%rdi
    812b:	e8 e6 b8 00 00       	call   13a16 <strlen>
    8130:	41 80 3e 00          	cmpb   $0x0,(%r14)
    8134:	49 8d 5c 06 01       	lea    0x1(%r14,%rax,1),%rbx
    8139:	74 73                	je     81ae <http_rx_headers+0x1f4>
    813b:	be 3a 00 00 00       	mov    $0x3a,%esi
    8140:	4c 89 f7             	mov    %r14,%rdi
    8143:	e8 db b8 00 00       	call   13a23 <strchr>
    8148:	48 85 c0             	test   %rax,%rax
    814b:	75 0b                	jne    8158 <http_rx_headers+0x19e>
    814d:	41 bc 7e 9d f3 e3    	mov    $0xe3f39d7e,%r12d
    8153:	e9 18 01 00 00       	jmp    8270 <http_rx_headers+0x2b6>
    8158:	c6 00 00             	movb   $0x0,(%rax)
    815b:	4c 8d 60 01          	lea    0x1(%rax),%r12
    815f:	41 0f be 3c 24       	movsbl (%r12),%edi
    8164:	e8 23 13 01 00       	call   1948c <isspace>
    8169:	85 c0                	test   %eax,%eax
    816b:	74 05                	je     8172 <http_rx_headers+0x1b8>
    816d:	49 ff c4             	inc    %r12
    8170:	eb ed                	jmp    815f <http_rx_headers+0x1a5>
    8172:	4c 8d 3d 17 0a 02 00 	lea    0x20a17(%rip),%r15        # 28b90 <http_response_retry_after>
    8179:	4d 39 ef             	cmp    %r13,%r15
    817c:	72 05                	jb     8183 <http_rx_headers+0x1c9>
    817e:	49 89 de             	mov    %rbx,%r14
    8181:	eb a5                	jmp    8128 <http_rx_headers+0x16e>
    8183:	49 8b 37             	mov    (%r15),%rsi
    8186:	4c 89 f7             	mov    %r14,%rdi
    8189:	e8 3b b8 00 00       	call   139c9 <strcasecmp>
    818e:	85 c0                	test   %eax,%eax
    8190:	75 16                	jne    81a8 <http_rx_headers+0x1ee>
    8192:	4c 89 e6             	mov    %r12,%rsi
    8195:	48 89 ef             	mov    %rbp,%rdi
    8198:	41 ff 57 08          	call   *0x8(%r15)
    819c:	41 89 c4             	mov    %eax,%r12d
    819f:	85 c0                	test   %eax,%eax
    81a1:	74 db                	je     817e <http_rx_headers+0x1c4>
    81a3:	e9 c8 00 00 00       	jmp    8270 <http_rx_headers+0x2b6>
    81a8:	49 83 c7 10          	add    $0x10,%r15
    81ac:	eb cb                	jmp    8179 <http_rx_headers+0x1bf>
    81ae:	48 8b 85 e0 01 00 00 	mov    0x1e0(%rbp),%rax
    81b5:	48 85 c0             	test   %rax,%rax
    81b8:	74 11                	je     81cb <http_rx_headers+0x211>
    81ba:	48 89 ef             	mov    %rbp,%rdi
    81bd:	ff 50 10             	call   *0x10(%rax)
    81c0:	41 89 c4             	mov    %eax,%r12d
    81c3:	85 c0                	test   %eax,%eax
    81c5:	0f 85 a5 00 00 00    	jne    8270 <http_rx_headers+0x2b6>
    81cb:	48 8b b5 d8 01 00 00 	mov    0x1d8(%rbp),%rsi
    81d2:	48 85 f6             	test   %rsi,%rsi
    81d5:	74 16                	je     81ed <http_rx_headers+0x233>
    81d7:	4c 8d 65 50          	lea    0x50(%rbp),%r12
    81db:	4c 89 e7             	mov    %r12,%rdi
    81de:	e8 8f f6 00 00       	call   17872 <xfer_seek>
    81e3:	31 f6                	xor    %esi,%esi
    81e5:	4c 89 e7             	mov    %r12,%rdi
    81e8:	e8 85 f6 00 00       	call   17872 <xfer_seek>
    81ed:	48 8d 05 1c d1 01 00 	lea    0x1d11c(%rip),%rax        # 25310 <http_head>
    81f4:	48 39 85 08 01 00 00 	cmp    %rax,0x108(%rbp)
    81fb:	75 24                	jne    8221 <http_rx_headers+0x267>
    81fd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8202:	48 2b 05 47 1e 02 00 	sub    0x21e47(%rip),%rax        # 2a050 <__stack_chk_guard>
    8209:	75 73                	jne    827e <http_rx_headers+0x2c4>
    820b:	48 83 c4 28          	add    $0x28,%rsp
    820f:	48 89 ef             	mov    %rbp,%rdi
    8212:	5b                   	pop    %rbx
    8213:	5d                   	pop    %rbp
    8214:	41 5c                	pop    %r12
    8216:	41 5d                	pop    %r13
    8218:	41 5e                	pop    %r14
    821a:	41 5f                	pop    %r15
    821c:	e9 4c f8 ff ff       	jmp    7a6d <http_transfer_complete>
    8221:	48 83 bd d0 01 00 00 	cmpq   $0x0,0x1d0(%rbp)
    8228:	00 
    8229:	75 0e                	jne    8239 <http_rx_headers+0x27f>
    822b:	48 8d 05 ee d0 01 00 	lea    0x1d0ee(%rip),%rax        # 25320 <http_transfer_identity>
    8232:	48 89 85 d0 01 00 00 	mov    %rax,0x1d0(%rbp)
    8239:	48 8b 85 d0 01 00 00 	mov    0x1d0(%rbp),%rax
    8240:	48 8d 50 10          	lea    0x10(%rax),%rdx
    8244:	48 89 95 38 02 00 00 	mov    %rdx,0x238(%rbp)
    824b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    8250:	48 2b 15 f9 1d 02 00 	sub    0x21df9(%rip),%rdx        # 2a050 <__stack_chk_guard>
    8257:	75 25                	jne    827e <http_rx_headers+0x2c4>
    8259:	48 8b 40 08          	mov    0x8(%rax),%rax
    825d:	48 83 c4 28          	add    $0x28,%rsp
    8261:	48 89 ef             	mov    %rbp,%rdi
    8264:	5b                   	pop    %rbx
    8265:	5d                   	pop    %rbp
    8266:	41 5c                	pop    %r12
    8268:	41 5d                	pop    %r13
    826a:	41 5e                	pop    %r14
    826c:	41 5f                	pop    %r15
    826e:	ff e0                	jmp    *%rax
    8270:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8275:	48 2b 05 d4 1d 02 00 	sub    0x21dd4(%rip),%rax        # 2a050 <__stack_chk_guard>
    827c:	74 05                	je     8283 <http_rx_headers+0x2c9>
    827e:	e8 dd a7 ff ff       	call   2a60 <__stack_chk_fail>
    8283:	48 83 c4 28          	add    $0x28,%rsp
    8287:	44 89 e0             	mov    %r12d,%eax
    828a:	5b                   	pop    %rbx
    828b:	5d                   	pop    %rbp
    828c:	41 5c                	pop    %r12
    828e:	41 5d                	pop    %r13
    8290:	41 5e                	pop    %r14
    8292:	41 5f                	pop    %r15
    8294:	c3                   	ret    

0000000000008295 <http_parse_connection>:
    8295:	f3 0f 1e fa          	endbr64 
    8299:	41 54                	push   %r12
    829b:	4c 8d 25 ed a7 01 00 	lea    0x1a7ed(%rip),%r12        # 22a8f <.LC8>
    82a2:	55                   	push   %rbp
    82a3:	53                   	push   %rbx
    82a4:	48 89 fb             	mov    %rdi,%rbx
    82a7:	48 83 ec 10          	sub    $0x10,%rsp
    82ab:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    82b0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    82b5:	31 f6                	xor    %esi,%esi
    82b7:	e8 30 fc ff ff       	call   7eec <http_token>
    82bc:	48 89 c5             	mov    %rax,%rbp
    82bf:	48 85 c0             	test   %rax,%rax
    82c2:	74 32                	je     82f6 <http_parse_connection+0x61>
    82c4:	4c 89 e6             	mov    %r12,%rsi
    82c7:	48 89 ef             	mov    %rbp,%rdi
    82ca:	e8 fa b6 00 00       	call   139c9 <strcasecmp>
    82cf:	85 c0                	test   %eax,%eax
    82d1:	75 07                	jne    82da <http_parse_connection+0x45>
    82d3:	83 8b 1c 02 00 00 01 	orl    $0x1,0x21c(%rbx)
    82da:	48 8d 35 fc a5 01 00 	lea    0x1a5fc(%rip),%rsi        # 228dd <.LC13>
    82e1:	48 89 ef             	mov    %rbp,%rdi
    82e4:	e8 e0 b6 00 00       	call   139c9 <strcasecmp>
    82e9:	85 c0                	test   %eax,%eax
    82eb:	75 c3                	jne    82b0 <http_parse_connection+0x1b>
    82ed:	83 a3 1c 02 00 00 fe 	andl   $0xfffffffe,0x21c(%rbx)
    82f4:	eb ba                	jmp    82b0 <http_parse_connection+0x1b>
    82f6:	48 83 c4 10          	add    $0x10,%rsp
    82fa:	31 c0                	xor    %eax,%eax
    82fc:	5b                   	pop    %rbx
    82fd:	5d                   	pop    %rbp
    82fe:	41 5c                	pop    %r12
    8300:	c3                   	ret    

0000000000008301 <http_open>:
    8301:	f3 0f 1e fa          	endbr64 
    8305:	41 57                	push   %r15
    8307:	41 56                	push   %r14
    8309:	41 55                	push   %r13
    830b:	41 54                	push   %r12
    830d:	55                   	push   %rbp
    830e:	48 89 d5             	mov    %rdx,%rbp
    8311:	53                   	push   %rbx
    8312:	4c 89 c3             	mov    %r8,%rbx
    8315:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    831c:	48 8b 05 2d 1d 02 00 	mov    0x21d2d(%rip),%rax        # 2a050 <__stack_chk_guard>
    8323:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    832a:	00 
    832b:	31 c0                	xor    %eax,%eax
    832d:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
    8332:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    8337:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    833c:	4c 89 ff             	mov    %r15,%rdi
    833f:	b9 60 00 00 00       	mov    $0x60,%ecx
    8344:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    8349:	f3 aa                	rep stos %al,%es:(%rdi)
    834b:	48 8b 42 40          	mov    0x40(%rdx),%rax
    834f:	48 85 c0             	test   %rax,%rax
    8352:	75 07                	jne    835b <http_open+0x5a>
    8354:	48 8d 05 85 b6 01 00 	lea    0x1b685(%rip),%rax        # 239e0 <.LC0>
    835b:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    8362:	00 
    8363:	48 8b 45 48          	mov    0x48(%rbp),%rax
    8367:	31 d2                	xor    %edx,%edx
    8369:	31 f6                	xor    %esi,%esi
    836b:	4c 89 ff             	mov    %r15,%rdi
    836e:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    8375:	00 
    8376:	e8 ec e3 00 00       	call   16767 <format_uri>
    837b:	b9 60 00 00 00       	mov    $0x60,%ecx
    8380:	4c 8d 68 01          	lea    0x1(%rax),%r13
    8384:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    838b:	00 
    838c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8391:	48 89 c7             	mov    %rax,%rdi
    8394:	31 c0                	xor    %eax,%eax
    8396:	f3 aa                	rep stos %al,%es:(%rdi)
    8398:	48 8b 45 30          	mov    0x30(%rbp),%rax
    839c:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    83a1:	31 d2                	xor    %edx,%edx
    83a3:	31 f6                	xor    %esi,%esi
    83a5:	45 31 e4             	xor    %r12d,%r12d
    83a8:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    83af:	00 
    83b0:	48 8b 45 38          	mov    0x38(%rbp),%rax
    83b4:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
    83bb:	00 
    83bc:	e8 a6 e3 00 00       	call   16767 <format_uri>
    83c1:	48 ff c0             	inc    %rax
    83c4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    83c9:	48 85 db             	test   %rbx,%rbx
    83cc:	74 04                	je     83d2 <http_open+0xd1>
    83ce:	4c 8b 63 10          	mov    0x10(%rbx),%r12
    83d2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    83d7:	49 8d bc 05 50 02 00 	lea    0x250(%r13,%rax,1),%rdi
    83de:	00 
    83df:	4c 01 e7             	add    %r12,%rdi
    83e2:	e8 4f 43 00 00       	call   c736 <zalloc>
    83e7:	49 89 c6             	mov    %rax,%r14
    83ea:	48 85 c0             	test   %rax,%rax
    83ed:	75 0b                	jne    83fa <http_open+0xf9>
    83ef:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    83f5:	e9 c0 01 00 00       	jmp    85ba <http_open+0x2b9>
    83fa:	48 8d 88 50 02 00 00 	lea    0x250(%rax),%rcx
    8401:	4c 89 ea             	mov    %r13,%rdx
    8404:	4c 89 ff             	mov    %r15,%rdi
    8407:	4a 8d 04 29          	lea    (%rcx,%r13,1),%rax
    840b:	48 89 ce             	mov    %rcx,%rsi
    840e:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    8413:	4d 8d 6e 70          	lea    0x70(%r14),%r13
    8417:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    841c:	e8 46 e3 00 00       	call   16767 <format_uri>
    8421:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8426:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    842b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    8430:	e8 32 e3 00 00       	call   16767 <format_uri>
    8435:	48 8d 15 64 ce 01 00 	lea    0x1ce64(%rip),%rdx        # 252a0 <http_xfer_desc>
    843c:	48 8d 05 31 f1 ff ff 	lea    -0xecf(%rip),%rax        # 7574 <http_free>
    8443:	4d 89 76 18          	mov    %r14,0x18(%r14)
    8447:	49 89 46 08          	mov    %rax,0x8(%r14)
    844b:	48 8d 05 6e e0 01 00 	lea    0x1e06e(%rip),%rax        # 264c0 <null_intf>
    8452:	49 8d 76 30          	lea    0x30(%r14),%rsi
    8456:	49 89 56 20          	mov    %rdx,0x20(%r14)
    845a:	49 8d 7e 50          	lea    0x50(%r14),%rdi
    845e:	49 89 56 28          	mov    %rdx,0x28(%r14)
    8462:	48 8d 15 d7 cd 01 00 	lea    0x1cdd7(%rip),%rdx        # 25240 <http_content_desc>
    8469:	49 89 46 10          	mov    %rax,0x10(%r14)
    846d:	49 89 46 30          	mov    %rax,0x30(%r14)
    8471:	49 89 56 40          	mov    %rdx,0x40(%r14)
    8475:	49 89 56 48          	mov    %rdx,0x48(%r14)
    8479:	48 8d 15 80 cd 01 00 	lea    0x1cd80(%rip),%rdx        # 25200 <http_transfer_desc>
    8480:	49 89 46 50          	mov    %rax,0x50(%r14)
    8484:	49 89 46 70          	mov    %rax,0x70(%r14)
    8488:	48 8d 05 11 cd 01 00 	lea    0x1cd11(%rip),%rax        # 251a0 <http_conn_desc>
    848f:	49 89 56 60          	mov    %rdx,0x60(%r14)
    8493:	49 89 56 68          	mov    %rdx,0x68(%r14)
    8497:	49 89 86 80 00 00 00 	mov    %rax,0x80(%r14)
    849e:	49 89 86 88 00 00 00 	mov    %rax,0x88(%r14)
    84a5:	4d 89 76 38          	mov    %r14,0x38(%r14)
    84a9:	4d 89 76 58          	mov    %r14,0x58(%r14)
    84ad:	4d 89 76 78          	mov    %r14,0x78(%r14)
    84b1:	e8 8b 13 00 00       	call   9841 <intf_plug_plug>
    84b6:	49 8d be 90 00 00 00 	lea    0x90(%r14),%rdi
    84bd:	48 8d 05 bc cc 01 00 	lea    0x1ccbc(%rip),%rax        # 25180 <http_process_desc>
    84c4:	4d 89 b6 a8 00 00 00 	mov    %r14,0xa8(%r14)
    84cb:	49 89 be 90 00 00 00 	mov    %rdi,0x90(%r14)
    84d2:	49 89 be 98 00 00 00 	mov    %rdi,0x98(%r14)
    84d9:	49 89 86 a0 00 00 00 	mov    %rax,0xa0(%r14)
    84e0:	e8 28 75 00 00       	call   fa0d <process_add>
    84e5:	48 8d 05 3e f2 ff ff 	lea    -0xdc2(%rip),%rax        # 772a <http_expired>
    84ec:	48 89 ef             	mov    %rbp,%rdi
    84ef:	4d 89 b6 f8 00 00 00 	mov    %r14,0xf8(%r14)
    84f6:	49 89 86 f0 00 00 00 	mov    %rax,0xf0(%r14)
    84fd:	e8 0c 7a 00 00       	call   ff0e <ref_increment>
    8502:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    8507:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    850c:	49 89 ae 00 01 00 00 	mov    %rbp,0x100(%r14)
    8513:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    8519:	49 89 86 08 01 00 00 	mov    %rax,0x108(%r14)
    8520:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8525:	49 89 8e 10 01 00 00 	mov    %rcx,0x110(%r14)
    852c:	49 89 86 18 01 00 00 	mov    %rax,0x118(%r14)
    8533:	74 10                	je     8545 <http_open+0x244>
    8535:	49 8d be 20 01 00 00 	lea    0x120(%r14),%rdi
    853c:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    8541:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8542:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8543:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8544:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8545:	48 85 db             	test   %rbx,%rbx
    8548:	74 2e                	je     8578 <http_open+0x277>
    854a:	48 8b 03             	mov    (%rbx),%rax
    854d:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    8551:	4c 89 e2             	mov    %r12,%rdx
    8554:	4d 89 a6 40 01 00 00 	mov    %r12,0x140(%r14)
    855b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    8560:	48 03 7c 24 08       	add    0x8(%rsp),%rdi
    8565:	49 89 86 30 01 00 00 	mov    %rax,0x130(%r14)
    856c:	49 89 be 38 01 00 00 	mov    %rdi,0x138(%r14)
    8573:	e8 71 ee 00 00       	call   173e9 <__memcpy>
    8578:	48 8d 05 11 ce 01 00 	lea    0x1ce11(%rip),%rax        # 25390 <http_request>
    857f:	48 89 ee             	mov    %rbp,%rsi
    8582:	4c 89 ef             	mov    %r13,%rdi
    8585:	49 89 86 38 02 00 00 	mov    %rax,0x238(%r14)
    858c:	e8 43 61 01 00       	call   1e6d4 <http_connect>
    8591:	41 89 c4             	mov    %eax,%r12d
    8594:	85 c0                	test   %eax,%eax
    8596:	74 0c                	je     85a4 <http_open+0x2a3>
    8598:	89 c6                	mov    %eax,%esi
    859a:	4c 89 f7             	mov    %r14,%rdi
    859d:	e8 d7 f0 ff ff       	call   7679 <http_close>
    85a2:	eb 0e                	jmp    85b2 <http_open+0x2b1>
    85a4:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    85a9:	49 8d 7e 10          	lea    0x10(%r14),%rdi
    85ad:	e8 8f 12 00 00       	call   9841 <intf_plug_plug>
    85b2:	4c 89 f7             	mov    %r14,%rdi
    85b5:	e8 60 79 00 00       	call   ff1a <ref_decrement>
    85ba:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    85c1:	00 
    85c2:	48 2b 05 87 1a 02 00 	sub    0x21a87(%rip),%rax        # 2a050 <__stack_chk_guard>
    85c9:	74 05                	je     85d0 <http_open+0x2cf>
    85cb:	e8 90 a4 ff ff       	call   2a60 <__stack_chk_fail>
    85d0:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    85d7:	44 89 e0             	mov    %r12d,%eax
    85da:	5b                   	pop    %rbx
    85db:	5d                   	pop    %rbp
    85dc:	41 5c                	pop    %r12
    85de:	41 5d                	pop    %r13
    85e0:	41 5e                	pop    %r14
    85e2:	41 5f                	pop    %r15
    85e4:	c3                   	ret    

00000000000085e5 <http_open_uri>:
    85e5:	f3 0f 1e fa          	endbr64 
    85e9:	41 57                	push   %r15
    85eb:	41 56                	push   %r14
    85ed:	41 55                	push   %r13
    85ef:	49 89 fd             	mov    %rdi,%r13
    85f2:	41 54                	push   %r12
    85f4:	49 89 f4             	mov    %rsi,%r12
    85f7:	55                   	push   %rbp
    85f8:	53                   	push   %rbx
    85f9:	48 83 ec 28          	sub    $0x28,%rsp
    85fd:	4c 8b 76 58          	mov    0x58(%rsi),%r14
    8601:	48 8b 05 48 1a 02 00 	mov    0x21a48(%rip),%rax        # 2a050 <__stack_chk_guard>
    8608:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    860d:	31 c0                	xor    %eax,%eax
    860f:	4d 85 f6             	test   %r14,%r14
    8612:	74 72                	je     8686 <http_open_uri+0xa1>
    8614:	31 d2                	xor    %edx,%edx
    8616:	31 f6                	xor    %esi,%esi
    8618:	4c 89 f7             	mov    %r14,%rdi
    861b:	e8 83 f2 ff ff       	call   78a3 <http_params>
    8620:	4c 8d 78 01          	lea    0x1(%rax),%r15
    8624:	48 89 c3             	mov    %rax,%rbx
    8627:	4c 89 ff             	mov    %r15,%rdi
    862a:	e8 07 41 00 00       	call   c736 <zalloc>
    862f:	48 89 c5             	mov    %rax,%rbp
    8632:	48 85 c0             	test   %rax,%rax
    8635:	75 08                	jne    863f <http_open_uri+0x5a>
    8637:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    863d:	eb 77                	jmp    86b6 <http_open_uri+0xd1>
    863f:	4c 89 fa             	mov    %r15,%rdx
    8642:	4c 89 f7             	mov    %r14,%rdi
    8645:	48 89 c6             	mov    %rax,%rsi
    8648:	e8 56 f2 ff ff       	call   78a3 <http_params>
    864d:	4c 89 e2             	mov    %r12,%rdx
    8650:	4c 89 ef             	mov    %r13,%rdi
    8653:	49 89 e0             	mov    %rsp,%r8
    8656:	48 8d 05 55 a4 01 00 	lea    0x1a455(%rip),%rax        # 22ab2 <.LC15>
    865d:	31 c9                	xor    %ecx,%ecx
    865f:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    8664:	48 8d 35 95 cc 01 00 	lea    0x1cc95(%rip),%rsi        # 25300 <http_post>
    866b:	48 89 04 24          	mov    %rax,(%rsp)
    866f:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    8674:	e8 88 fc ff ff       	call   8301 <http_open>
    8679:	48 89 ef             	mov    %rbp,%rdi
    867c:	41 89 c4             	mov    %eax,%r12d
    867f:	e8 9e 40 00 00       	call   c722 <free>
    8684:	eb 30                	jmp    86b6 <http_open_uri+0xd1>
    8686:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    868b:	48 2b 05 be 19 02 00 	sub    0x219be(%rip),%rax        # 2a050 <__stack_chk_guard>
    8692:	75 30                	jne    86c4 <http_open_uri+0xdf>
    8694:	48 83 c4 28          	add    $0x28,%rsp
    8698:	48 89 f2             	mov    %rsi,%rdx
    869b:	45 31 c0             	xor    %r8d,%r8d
    869e:	31 c9                	xor    %ecx,%ecx
    86a0:	5b                   	pop    %rbx
    86a1:	48 8d 35 60 cc 01 00 	lea    0x1cc60(%rip),%rsi        # 25308 <http_get>
    86a8:	5d                   	pop    %rbp
    86a9:	41 5c                	pop    %r12
    86ab:	41 5d                	pop    %r13
    86ad:	41 5e                	pop    %r14
    86af:	41 5f                	pop    %r15
    86b1:	e9 4b fc ff ff       	jmp    8301 <http_open>
    86b6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    86bb:	48 2b 05 8e 19 02 00 	sub    0x2198e(%rip),%rax        # 2a050 <__stack_chk_guard>
    86c2:	74 05                	je     86c9 <http_open_uri+0xe4>
    86c4:	e8 97 a3 ff ff       	call   2a60 <__stack_chk_fail>
    86c9:	48 83 c4 28          	add    $0x28,%rsp
    86cd:	44 89 e0             	mov    %r12d,%eax
    86d0:	5b                   	pop    %rbx
    86d1:	5d                   	pop    %rbp
    86d2:	41 5c                	pop    %r12
    86d4:	41 5d                	pop    %r13
    86d6:	41 5e                	pop    %r14
    86d8:	41 5f                	pop    %r15
    86da:	c3                   	ret    

00000000000086db <ifconf_payload>:
    86db:	f3 0f 1e fa          	endbr64 
    86df:	48 83 ec 18          	sub    $0x18,%rsp
    86e3:	4c 8b 46 08          	mov    0x8(%rsi),%r8
    86e7:	48 8b 16             	mov    (%rsi),%rdx
    86ea:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    86ef:	4c 89 c6             	mov    %r8,%rsi
    86f2:	e8 68 71 01 00       	call   1f85f <ifconf>
    86f7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    86fc:	85 c0                	test   %eax,%eax
    86fe:	74 0d                	je     870d <ifconf_payload+0x32>
    8700:	89 44 24 08          	mov    %eax,0x8(%rsp)
    8704:	e8 4c 58 00 00       	call   df55 <netdev_close>
    8709:	8b 44 24 08          	mov    0x8(%rsp),%eax
    870d:	48 83 c4 18          	add    $0x18,%rsp
    8711:	c3                   	ret    

0000000000008712 <ifstat_payload>:
    8712:	f3 0f 1e fa          	endbr64 
    8716:	50                   	push   %rax
    8717:	e8 91 6f 01 00       	call   1f6ad <ifstat>
    871c:	31 c0                	xor    %eax,%eax
    871e:	5a                   	pop    %rdx
    871f:	c3                   	ret    

0000000000008720 <ifclose_payload>:
    8720:	f3 0f 1e fa          	endbr64 
    8724:	50                   	push   %rax
    8725:	e8 7a 6f 01 00       	call   1f6a4 <ifclose>
    872a:	31 c0                	xor    %eax,%eax
    872c:	5a                   	pop    %rdx
    872d:	c3                   	ret    

000000000000872e <ifopen_payload>:
    872e:	f3 0f 1e fa          	endbr64 
    8732:	e9 32 6f 01 00       	jmp    1f669 <ifopen>

0000000000008737 <ifcommon_exec>:
    8737:	f3 0f 1e fa          	endbr64 
    873b:	55                   	push   %rbp
    873c:	48 89 e5             	mov    %rsp,%rbp
    873f:	41 57                	push   %r15
    8741:	41 56                	push   %r14
    8743:	49 89 f6             	mov    %rsi,%r14
    8746:	41 55                	push   %r13
    8748:	41 54                	push   %r12
    874a:	53                   	push   %rbx
    874b:	48 89 d3             	mov    %rdx,%rbx
    874e:	48 83 ec 28          	sub    $0x28,%rsp
    8752:	89 7d bc             	mov    %edi,-0x44(%rbp)
    8755:	48 8b 05 f4 18 02 00 	mov    0x218f4(%rip),%rax        # 2a050 <__stack_chk_guard>
    875c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8760:	31 c0                	xor    %eax,%eax
    8762:	0f b6 42 09          	movzbl 0x9(%rdx),%eax
    8766:	48 89 e2             	mov    %rsp,%rdx
    8769:	48 83 c0 0f          	add    $0xf,%rax
    876d:	25 f0 01 00 00       	and    $0x1f0,%eax
    8772:	48 39 d4             	cmp    %rdx,%rsp
    8775:	74 12                	je     8789 <ifcommon_exec+0x52>
    8777:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    877e:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    8785:	00 00 
    8787:	eb e9                	jmp    8772 <ifcommon_exec+0x3b>
    8789:	48 29 c4             	sub    %rax,%rsp
    878c:	25 ff 0f 00 00       	and    $0xfff,%eax
    8791:	74 06                	je     8799 <ifcommon_exec+0x62>
    8793:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    8799:	8b 7d bc             	mov    -0x44(%rbp),%edi
    879c:	48 89 e1             	mov    %rsp,%rcx
    879f:	48 89 da             	mov    %rbx,%rdx
    87a2:	4c 89 f6             	mov    %r14,%rsi
    87a5:	49 89 e7             	mov    %rsp,%r15
    87a8:	e8 de 6a 00 00       	call   f28b <parse_options>
    87ad:	41 89 c4             	mov    %eax,%r12d
    87b0:	85 c0                	test   %eax,%eax
    87b2:	0f 85 8e 00 00 00    	jne    8846 <ifcommon_exec+0x10f>
    87b8:	8b 15 ca 18 02 00    	mov    0x218ca(%rip),%edx        # 2a088 <optind>
    87be:	3b 55 bc             	cmp    -0x44(%rbp),%edx
    87c1:	74 3e                	je     8801 <ifcommon_exec+0xca>
    87c3:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
    87c7:	4c 63 ea             	movslq %edx,%r13
    87ca:	31 c0                	xor    %eax,%eax
    87cc:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    87d0:	44 39 6d bc          	cmp    %r13d,-0x44(%rbp)
    87d4:	7e 6d                	jle    8843 <ifcommon_exec+0x10c>
    87d6:	4b 8b 3c ee          	mov    (%r14,%r13,8),%rdi
    87da:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    87de:	e8 1e 66 00 00       	call   ee01 <parse_netdev>
    87e3:	85 c0                	test   %eax,%eax
    87e5:	75 15                	jne    87fc <ifcommon_exec+0xc5>
    87e7:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    87eb:	4c 89 fe             	mov    %r15,%rsi
    87ee:	ff 53 18             	call   *0x18(%rbx)
    87f1:	85 c0                	test   %eax,%eax
    87f3:	75 07                	jne    87fc <ifcommon_exec+0xc5>
    87f5:	8b 43 20             	mov    0x20(%rbx),%eax
    87f8:	85 c0                	test   %eax,%eax
    87fa:	75 4a                	jne    8846 <ifcommon_exec+0x10f>
    87fc:	49 ff c5             	inc    %r13
    87ff:	eb cf                	jmp    87d0 <ifcommon_exec+0x99>
    8801:	48 8b 05 f8 e1 01 00 	mov    0x1e1f8(%rip),%rax        # 26a00 <net_devices>
    8808:	4c 8d 2d f1 e1 01 00 	lea    0x1e1f1(%rip),%r13        # 26a00 <net_devices>
    880f:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
    8813:	b8 79 1f e2 d3       	mov    $0xd3e21f79,%eax
    8818:	48 8d 57 10          	lea    0x10(%rdi),%rdx
    881c:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
    8820:	4c 39 ea             	cmp    %r13,%rdx
    8823:	74 1e                	je     8843 <ifcommon_exec+0x10c>
    8825:	4c 89 fe             	mov    %r15,%rsi
    8828:	ff 53 18             	call   *0x18(%rbx)
    882b:	85 c0                	test   %eax,%eax
    882d:	75 06                	jne    8835 <ifcommon_exec+0xfe>
    882f:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
    8833:	75 11                	jne    8846 <ifcommon_exec+0x10f>
    8835:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    8839:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
    883d:	48 83 ef 10          	sub    $0x10,%rdi
    8841:	eb d5                	jmp    8818 <ifcommon_exec+0xe1>
    8843:	41 89 c4             	mov    %eax,%r12d
    8846:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    884a:	48 2b 05 ff 17 02 00 	sub    0x217ff(%rip),%rax        # 2a050 <__stack_chk_guard>
    8851:	74 05                	je     8858 <ifcommon_exec+0x121>
    8853:	e8 08 a2 ff ff       	call   2a60 <__stack_chk_fail>
    8858:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    885c:	44 89 e0             	mov    %r12d,%eax
    885f:	5b                   	pop    %rbx
    8860:	41 5c                	pop    %r12
    8862:	41 5d                	pop    %r13
    8864:	41 5e                	pop    %r14
    8866:	41 5f                	pop    %r15
    8868:	5d                   	pop    %rbp
    8869:	c3                   	ret    

000000000000886a <ifconf_exec>:
    886a:	f3 0f 1e fa          	endbr64 
    886e:	48 8d 15 4b cb 01 00 	lea    0x1cb4b(%rip),%rdx        # 253c0 <ifconf_cmd>
    8875:	e9 bd fe ff ff       	jmp    8737 <ifcommon_exec>

000000000000887a <ifstat_exec>:
    887a:	f3 0f 1e fa          	endbr64 
    887e:	48 8d 15 bb cb 01 00 	lea    0x1cbbb(%rip),%rdx        # 25440 <ifstat_cmd>
    8885:	e9 ad fe ff ff       	jmp    8737 <ifcommon_exec>

000000000000888a <ifclose_exec>:
    888a:	f3 0f 1e fa          	endbr64 
    888e:	48 8d 15 eb cb 01 00 	lea    0x1cbeb(%rip),%rdx        # 25480 <ifclose_cmd>
    8895:	e9 9d fe ff ff       	jmp    8737 <ifcommon_exec>

000000000000889a <ifopen_exec>:
    889a:	f3 0f 1e fa          	endbr64 
    889e:	48 8d 15 1b cc 01 00 	lea    0x1cc1b(%rip),%rdx        # 254c0 <ifopen_cmd>
    88a5:	e9 8d fe ff ff       	jmp    8737 <ifcommon_exec>

00000000000088aa <imgselect>:
    88aa:	f3 0f 1e fa          	endbr64 
    88ae:	e9 b9 73 01 00       	jmp    1fc6c <image_select>

00000000000088b3 <image_clear_cmdline>:
    88b3:	f3 0f 1e fa          	endbr64 
    88b7:	31 f6                	xor    %esi,%esi
    88b9:	e9 e8 71 01 00       	jmp    1faa6 <image_set_cmdline>

00000000000088be <imgsingle_exec>:
    88be:	41 56                	push   %r14
    88c0:	41 55                	push   %r13
    88c2:	41 89 fd             	mov    %edi,%r13d
    88c5:	41 54                	push   %r12
    88c7:	55                   	push   %rbp
    88c8:	48 89 f5             	mov    %rsi,%rbp
    88cb:	53                   	push   %rbx
    88cc:	48 89 d3             	mov    %rdx,%rbx
    88cf:	48 83 ec 30          	sub    $0x30,%rsp
    88d3:	48 8b 12             	mov    (%rdx),%rdx
    88d6:	48 8b 05 73 17 02 00 	mov    0x21773(%rip),%rax        # 2a050 <__stack_chk_guard>
    88dd:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    88e2:	31 c0                	xor    %eax,%eax
    88e4:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    88e9:	4c 89 f1             	mov    %r14,%rcx
    88ec:	e8 9a 69 00 00       	call   f28b <parse_options>
    88f1:	41 89 c4             	mov    %eax,%r12d
    88f4:	85 c0                	test   %eax,%eax
    88f6:	0f 85 3d 01 00 00    	jne    8a39 <imgsingle_exec+0x17b>
    88fc:	48 63 05 85 17 02 00 	movslq 0x21785(%rip),%rax        # 2a088 <optind>
    8903:	44 39 e8             	cmp    %r13d,%eax
    8906:	7d 48                	jge    8950 <imgsingle_exec+0x92>
    8908:	48 8d 7c c5 08       	lea    0x8(%rbp,%rax,8),%rdi
    890d:	4c 8b 6c c5 00       	mov    0x0(%rbp,%rax,8),%r13
    8912:	48 8b 2f             	mov    (%rdi),%rbp
    8915:	48 85 ed             	test   %rbp,%rbp
    8918:	74 18                	je     8932 <imgsingle_exec+0x74>
    891a:	e8 ad 57 01 00       	call   1e0cc <concat_args>
    891f:	48 89 c5             	mov    %rax,%rbp
    8922:	48 85 c0             	test   %rax,%rax
    8925:	75 0b                	jne    8932 <imgsingle_exec+0x74>
    8927:	41 bc 77 1f f5 ce    	mov    $0xcef51f77,%r12d
    892d:	e9 07 01 00 00       	jmp    8a39 <imgsingle_exec+0x17b>
    8932:	4d 85 ed             	test   %r13,%r13
    8935:	74 1b                	je     8952 <imgsingle_exec+0x94>
    8937:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    893c:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    8941:	4c 89 ef             	mov    %r13,%rdi
    8944:	ff 53 08             	call   *0x8(%rbx)
    8947:	85 c0                	test   %eax,%eax
    8949:	74 27                	je     8972 <imgsingle_exec+0xb4>
    894b:	e9 de 00 00 00       	jmp    8a2e <imgsingle_exec+0x170>
    8950:	31 ed                	xor    %ebp,%ebp
    8952:	e8 5f 73 01 00       	call   1fcb6 <image_find_selected>
    8957:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    895c:	48 85 c0             	test   %rax,%rax
    895f:	75 11                	jne    8972 <imgsingle_exec+0xb4>
    8961:	48 8d 3d 89 a2 01 00 	lea    0x1a289(%rip),%rdi        # 22bf1 <.LC0>
    8968:	e8 0d e9 00 00       	call   1727a <printf>
    896d:	e9 bf 00 00 00       	jmp    8a31 <imgsingle_exec+0x173>
    8972:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8976:	48 85 c0             	test   %rax,%rax
    8979:	74 07                	je     8982 <imgsingle_exec+0xc4>
    897b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8980:	ff d0                	call   *%rax
    8982:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    8987:	48 85 f6             	test   %rsi,%rsi
    898a:	74 24                	je     89b0 <imgsingle_exec+0xf2>
    898c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8991:	e8 37 70 01 00       	call   1f9cd <image_set_name>
    8996:	41 89 c5             	mov    %eax,%r13d
    8999:	85 c0                	test   %eax,%eax
    899b:	74 13                	je     89b0 <imgsingle_exec+0xf2>
    899d:	89 c7                	mov    %eax,%edi
    899f:	e8 d4 ae 00 00       	call   13878 <strerror>
    89a4:	48 8d 3d 59 a2 01 00 	lea    0x1a259(%rip),%rdi        # 22c04 <.LC1>
    89ab:	48 89 c6             	mov    %rax,%rsi
    89ae:	eb 2a                	jmp    89da <imgsingle_exec+0x11c>
    89b0:	48 85 ed             	test   %rbp,%rbp
    89b3:	74 31                	je     89e6 <imgsingle_exec+0x128>
    89b5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    89ba:	48 89 ee             	mov    %rbp,%rsi
    89bd:	e8 e4 70 01 00       	call   1faa6 <image_set_cmdline>
    89c2:	41 89 c5             	mov    %eax,%r13d
    89c5:	85 c0                	test   %eax,%eax
    89c7:	74 1d                	je     89e6 <imgsingle_exec+0x128>
    89c9:	89 c7                	mov    %eax,%edi
    89cb:	e8 a8 ae 00 00       	call   13878 <strerror>
    89d0:	48 8d 3d 47 a2 01 00 	lea    0x1a247(%rip),%rdi        # 22c1e <.LC2>
    89d7:	48 89 c6             	mov    %rax,%rsi
    89da:	31 c0                	xor    %eax,%eax
    89dc:	45 89 ec             	mov    %r13d,%r12d
    89df:	e8 96 e8 00 00       	call   1727a <printf>
    89e4:	eb 4b                	jmp    8a31 <imgsingle_exec+0x173>
    89e6:	83 7c 24 24 00       	cmpl   $0x0,0x24(%rsp)
    89eb:	74 09                	je     89f6 <imgsingle_exec+0x138>
    89ed:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    89f2:	83 48 30 08          	orl    $0x8,0x30(%rax)
    89f6:	48 8b 43 18          	mov    0x18(%rbx),%rax
    89fa:	48 85 c0             	test   %rax,%rax
    89fd:	74 32                	je     8a31 <imgsingle_exec+0x173>
    89ff:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8a04:	4c 89 f6             	mov    %r14,%rsi
    8a07:	ff d0                	call   *%rax
    8a09:	41 89 c4             	mov    %eax,%r12d
    8a0c:	85 c0                	test   %eax,%eax
    8a0e:	74 21                	je     8a31 <imgsingle_exec+0x173>
    8a10:	89 c7                	mov    %eax,%edi
    8a12:	e8 61 ae 00 00       	call   13878 <strerror>
    8a17:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    8a1b:	48 8d 3d 19 a2 01 00 	lea    0x1a219(%rip),%rdi        # 22c3b <.LC3>
    8a22:	48 89 c2             	mov    %rax,%rdx
    8a25:	31 c0                	xor    %eax,%eax
    8a27:	e8 4e e8 00 00       	call   1727a <printf>
    8a2c:	eb 03                	jmp    8a31 <imgsingle_exec+0x173>
    8a2e:	41 89 c4             	mov    %eax,%r12d
    8a31:	48 89 ef             	mov    %rbp,%rdi
    8a34:	e8 e9 3c 00 00       	call   c722 <free>
    8a39:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    8a3e:	48 2b 05 0b 16 02 00 	sub    0x2160b(%rip),%rax        # 2a050 <__stack_chk_guard>
    8a45:	74 05                	je     8a4c <imgsingle_exec+0x18e>
    8a47:	e8 14 a0 ff ff       	call   2a60 <__stack_chk_fail>
    8a4c:	48 83 c4 30          	add    $0x30,%rsp
    8a50:	44 89 e0             	mov    %r12d,%eax
    8a53:	5b                   	pop    %rbx
    8a54:	5d                   	pop    %rbp
    8a55:	41 5c                	pop    %r12
    8a57:	41 5d                	pop    %r13
    8a59:	41 5e                	pop    %r14
    8a5b:	c3                   	ret    

0000000000008a5c <imgargs_exec>:
    8a5c:	f3 0f 1e fa          	endbr64 
    8a60:	48 8d 15 b9 ca 01 00 	lea    0x1cab9(%rip),%rdx        # 25520 <imgargs_desc>
    8a67:	e9 52 fe ff ff       	jmp    88be <imgsingle_exec>

0000000000008a6c <imgexec_exec>:
    8a6c:	f3 0f 1e fa          	endbr64 
    8a70:	48 8d 15 09 cb 01 00 	lea    0x1cb09(%rip),%rdx        # 25580 <imgexec_desc>
    8a77:	e9 42 fe ff ff       	jmp    88be <imgsingle_exec>

0000000000008a7c <imgselect_exec>:
    8a7c:	f3 0f 1e fa          	endbr64 
    8a80:	48 8d 15 59 cb 01 00 	lea    0x1cb59(%rip),%rdx        # 255e0 <imgselect_desc>
    8a87:	e9 32 fe ff ff       	jmp    88be <imgsingle_exec>

0000000000008a8c <imgfetch_exec>:
    8a8c:	f3 0f 1e fa          	endbr64 
    8a90:	48 8d 15 a9 cb 01 00 	lea    0x1cba9(%rip),%rdx        # 25640 <imgfetch_desc>
    8a97:	e9 22 fe ff ff       	jmp    88be <imgsingle_exec>

0000000000008a9c <imgexec>:
    8a9c:	f3 0f 1e fa          	endbr64 
    8aa0:	83 7e 10 00          	cmpl   $0x0,0x10(%rsi)
    8aa4:	74 21                	je     8ac7 <imgexec+0x2b>
    8aa6:	48 83 ec 18          	sub    $0x18,%rsp
    8aaa:	e8 6e 71 01 00       	call   1fc1d <image_replace>
    8aaf:	85 c0                	test   %eax,%eax
    8ab1:	75 19                	jne    8acc <imgexec+0x30>
    8ab3:	bf 02 00 00 00       	mov    $0x2,%edi
    8ab8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    8abc:	e8 66 53 01 00       	call   1de27 <shell_stop>
    8ac1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    8ac5:	eb 05                	jmp    8acc <imgexec+0x30>
    8ac7:	e9 8f 70 01 00       	jmp    1fb5b <image_exec>
    8acc:	48 83 c4 18          	add    $0x18,%rsp
    8ad0:	c3                   	ret    

0000000000008ad1 <imgmulti_exec>:
    8ad1:	41 57                	push   %r15
    8ad3:	41 56                	push   %r14
    8ad5:	49 89 d6             	mov    %rdx,%r14
    8ad8:	48 8d 15 21 ca 01 00 	lea    0x1ca21(%rip),%rdx        # 25500 <imgmulti_cmd>
    8adf:	41 55                	push   %r13
    8ae1:	49 89 f5             	mov    %rsi,%r13
    8ae4:	41 54                	push   %r12
    8ae6:	55                   	push   %rbp
    8ae7:	89 fd                	mov    %edi,%ebp
    8ae9:	53                   	push   %rbx
    8aea:	48 83 ec 18          	sub    $0x18,%rsp
    8aee:	48 8b 05 5b 15 02 00 	mov    0x2155b(%rip),%rax        # 2a050 <__stack_chk_guard>
    8af5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8afa:	31 c0                	xor    %eax,%eax
    8afc:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
    8b01:	e8 85 67 00 00       	call   f28b <parse_options>
    8b06:	41 89 c4             	mov    %eax,%r12d
    8b09:	85 c0                	test   %eax,%eax
    8b0b:	75 75                	jne    8b82 <imgmulti_exec+0xb1>
    8b0d:	48 63 1d 74 15 02 00 	movslq 0x21574(%rip),%rbx        # 2a088 <optind>
    8b14:	39 dd                	cmp    %ebx,%ebp
    8b16:	75 35                	jne    8b4d <imgmulti_exec+0x7c>
    8b18:	48 8b 05 b1 f2 01 00 	mov    0x1f2b1(%rip),%rax        # 27dd0 <images>
    8b1f:	48 8d 2d aa f2 01 00 	lea    0x1f2aa(%rip),%rbp        # 27dd0 <images>
    8b26:	48 8b 18             	mov    (%rax),%rbx
    8b29:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
    8b2d:	48 83 eb 10          	sub    $0x10,%rbx
    8b31:	48 8d 47 10          	lea    0x10(%rdi),%rax
    8b35:	48 39 e8             	cmp    %rbp,%rax
    8b38:	74 48                	je     8b82 <imgmulti_exec+0xb1>
    8b3a:	41 ff d6             	call   *%r14
    8b3d:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8b41:	48 89 df             	mov    %rbx,%rdi
    8b44:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    8b48:	eb e7                	jmp    8b31 <imgmulti_exec+0x60>
    8b4a:	41 ff d6             	call   *%r14
    8b4d:	39 dd                	cmp    %ebx,%ebp
    8b4f:	7e 31                	jle    8b82 <imgmulti_exec+0xb1>
    8b51:	49 8b 7c dd 00       	mov    0x0(%r13,%rbx,8),%rdi
    8b56:	4d 8d 7c dd 00       	lea    0x0(%r13,%rbx,8),%r15
    8b5b:	48 ff c3             	inc    %rbx
    8b5e:	e8 aa 6f 01 00       	call   1fb0d <find_image>
    8b63:	48 89 c7             	mov    %rax,%rdi
    8b66:	48 85 c0             	test   %rax,%rax
    8b69:	75 df                	jne    8b4a <imgmulti_exec+0x79>
    8b6b:	49 8b 37             	mov    (%r15),%rsi
    8b6e:	48 8d 3d d8 a0 01 00 	lea    0x1a0d8(%rip),%rdi        # 22c4d <.LC4>
    8b75:	31 c0                	xor    %eax,%eax
    8b77:	e8 fe e6 00 00       	call   1727a <printf>
    8b7c:	41 bc 72 1f f5 d2    	mov    $0xd2f51f72,%r12d
    8b82:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8b87:	48 2b 05 c2 14 02 00 	sub    0x214c2(%rip),%rax        # 2a050 <__stack_chk_guard>
    8b8e:	74 05                	je     8b95 <imgmulti_exec+0xc4>
    8b90:	e8 cb 9e ff ff       	call   2a60 <__stack_chk_fail>
    8b95:	48 83 c4 18          	add    $0x18,%rsp
    8b99:	44 89 e0             	mov    %r12d,%eax
    8b9c:	5b                   	pop    %rbx
    8b9d:	5d                   	pop    %rbp
    8b9e:	41 5c                	pop    %r12
    8ba0:	41 5d                	pop    %r13
    8ba2:	41 5e                	pop    %r14
    8ba4:	41 5f                	pop    %r15
    8ba6:	c3                   	ret    

0000000000008ba7 <imgfree_exec>:
    8ba7:	f3 0f 1e fa          	endbr64 
    8bab:	48 8d 15 35 6f 01 00 	lea    0x16f35(%rip),%rdx        # 1fae7 <unregister_image>
    8bb2:	e9 1a ff ff ff       	jmp    8ad1 <imgmulti_exec>

0000000000008bb7 <imgstat_exec>:
    8bb7:	f3 0f 1e fa          	endbr64 
    8bbb:	48 8d 15 e3 01 00 00 	lea    0x1e3(%rip),%rdx        # 8da5 <imgstat>
    8bc2:	e9 0a ff ff ff       	jmp    8ad1 <imgmulti_exec>

0000000000008bc7 <imgdownload>:
    8bc7:	f3 0f 1e fa          	endbr64 
    8bcb:	41 56                	push   %r14
    8bcd:	49 89 f6             	mov    %rsi,%r14
    8bd0:	48 89 fe             	mov    %rdi,%rsi
    8bd3:	41 55                	push   %r13
    8bd5:	41 54                	push   %r12
    8bd7:	49 89 fc             	mov    %rdi,%r12
    8bda:	55                   	push   %rbp
    8bdb:	53                   	push   %rbx
    8bdc:	48 89 d3             	mov    %rdx,%rbx
    8bdf:	ba 60 00 00 00       	mov    $0x60,%edx
    8be4:	48 83 ec 70          	sub    $0x70,%rsp
    8be8:	48 8b 05 61 14 02 00 	mov    0x21461(%rip),%rax        # 2a050 <__stack_chk_guard>
    8bef:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    8bf4:	31 c0                	xor    %eax,%eax
    8bf6:	48 89 e5             	mov    %rsp,%rbp
    8bf9:	48 89 ef             	mov    %rbp,%rdi
    8bfc:	e8 e8 e7 00 00       	call   173e9 <__memcpy>
    8c01:	48 89 ef             	mov    %rbp,%rdi
    8c04:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    8c0b:	00 00 
    8c0d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    8c14:	00 00 
    8c16:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    8c1d:	00 00 
    8c1f:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    8c26:	00 00 
    8c28:	e8 38 dc 00 00       	call   16865 <format_uri_alloc>
    8c2d:	48 85 c0             	test   %rax,%rax
    8c30:	75 0b                	jne    8c3d <imgdownload+0x76>
    8c32:	41 bc 77 1f fa ce    	mov    $0xcefa1f77,%r12d
    8c38:	e9 b7 00 00 00       	jmp    8cf4 <imgdownload+0x12d>
    8c3d:	48 8b 3d 2c 13 02 00 	mov    0x2132c(%rip),%rdi        # 29f70 <cwuri>
    8c44:	4c 89 e6             	mov    %r12,%rsi
    8c47:	48 89 c5             	mov    %rax,%rbp
    8c4a:	e8 c3 dd 00 00       	call   16a12 <resolve_uri>
    8c4f:	49 89 c5             	mov    %rax,%r13
    8c52:	48 85 c0             	test   %rax,%rax
    8c55:	75 0b                	jne    8c62 <imgdownload+0x9b>
    8c57:	41 bc 77 1f fa ce    	mov    $0xcefa1f77,%r12d
    8c5d:	e9 8a 00 00 00       	jmp    8cec <imgdownload+0x125>
    8c62:	48 89 c7             	mov    %rax,%rdi
    8c65:	e8 ec 6d 01 00       	call   1fa56 <alloc_image>
    8c6a:	48 89 03             	mov    %rax,(%rbx)
    8c6d:	48 89 c6             	mov    %rax,%rsi
    8c70:	48 85 c0             	test   %rax,%rax
    8c73:	75 08                	jne    8c7d <imgdownload+0xb6>
    8c75:	41 bc 77 1f fa ce    	mov    $0xcefa1f77,%r12d
    8c7b:	eb 67                	jmp    8ce4 <imgdownload+0x11d>
    8c7d:	48 8d 3d 7c dc 01 00 	lea    0x1dc7c(%rip),%rdi        # 26900 <monojob>
    8c84:	e8 84 20 01 00       	call   1ad0d <create_downloader>
    8c89:	41 89 c4             	mov    %eax,%r12d
    8c8c:	85 c0                	test   %eax,%eax
    8c8e:	74 13                	je     8ca3 <imgdownload+0xdc>
    8c90:	89 c7                	mov    %eax,%edi
    8c92:	e8 e1 ab 00 00       	call   13878 <strerror>
    8c97:	48 8d 3d 8b a0 01 00 	lea    0x1a08b(%rip),%rdi        # 22d29 <.LC0>
    8c9e:	48 89 c6             	mov    %rax,%rsi
    8ca1:	eb 32                	jmp    8cd5 <imgdownload+0x10e>
    8ca3:	4c 89 f6             	mov    %r14,%rsi
    8ca6:	48 89 ef             	mov    %rbp,%rdi
    8ca9:	e8 59 46 00 00       	call   d307 <monojob_wait>
    8cae:	41 89 c4             	mov    %eax,%r12d
    8cb1:	85 c0                	test   %eax,%eax
    8cb3:	75 27                	jne    8cdc <imgdownload+0x115>
    8cb5:	48 8b 3b             	mov    (%rbx),%rdi
    8cb8:	e8 2b 70 01 00       	call   1fce8 <register_image>
    8cbd:	41 89 c4             	mov    %eax,%r12d
    8cc0:	85 c0                	test   %eax,%eax
    8cc2:	74 18                	je     8cdc <imgdownload+0x115>
    8cc4:	89 c7                	mov    %eax,%edi
    8cc6:	e8 ad ab 00 00       	call   13878 <strerror>
    8ccb:	48 8d 3d 75 a0 01 00 	lea    0x1a075(%rip),%rdi        # 22d47 <.LC1>
    8cd2:	48 89 c6             	mov    %rax,%rsi
    8cd5:	31 c0                	xor    %eax,%eax
    8cd7:	e8 9e e5 00 00       	call   1727a <printf>
    8cdc:	48 8b 3b             	mov    (%rbx),%rdi
    8cdf:	e8 36 72 00 00       	call   ff1a <ref_decrement>
    8ce4:	4c 89 ef             	mov    %r13,%rdi
    8ce7:	e8 2e 72 00 00       	call   ff1a <ref_decrement>
    8cec:	48 89 ef             	mov    %rbp,%rdi
    8cef:	e8 2e 3a 00 00       	call   c722 <free>
    8cf4:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    8cf9:	48 2b 05 50 13 02 00 	sub    0x21350(%rip),%rax        # 2a050 <__stack_chk_guard>
    8d00:	74 05                	je     8d07 <imgdownload+0x140>
    8d02:	e8 59 9d ff ff       	call   2a60 <__stack_chk_fail>
    8d07:	48 83 c4 70          	add    $0x70,%rsp
    8d0b:	44 89 e0             	mov    %r12d,%eax
    8d0e:	5b                   	pop    %rbx
    8d0f:	5d                   	pop    %rbp
    8d10:	41 5c                	pop    %r12
    8d12:	41 5d                	pop    %r13
    8d14:	41 5e                	pop    %r14
    8d16:	c3                   	ret    

0000000000008d17 <imgdownload_string>:
    8d17:	f3 0f 1e fa          	endbr64 
    8d1b:	55                   	push   %rbp
    8d1c:	48 83 ec 10          	sub    $0x10,%rsp
    8d20:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    8d25:	48 89 14 24          	mov    %rdx,(%rsp)
    8d29:	e8 01 d8 00 00       	call   1652f <parse_uri>
    8d2e:	48 8b 14 24          	mov    (%rsp),%rdx
    8d32:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    8d37:	48 85 c0             	test   %rax,%rax
    8d3a:	75 07                	jne    8d43 <imgdownload_string+0x2c>
    8d3c:	b8 77 1f fa ce       	mov    $0xcefa1f77,%eax
    8d41:	eb 19                	jmp    8d5c <imgdownload_string+0x45>
    8d43:	48 89 c5             	mov    %rax,%rbp
    8d46:	48 89 c7             	mov    %rax,%rdi
    8d49:	e8 79 fe ff ff       	call   8bc7 <imgdownload>
    8d4e:	48 89 ef             	mov    %rbp,%rdi
    8d51:	89 04 24             	mov    %eax,(%rsp)
    8d54:	e8 c1 71 00 00       	call   ff1a <ref_decrement>
    8d59:	8b 04 24             	mov    (%rsp),%eax
    8d5c:	48 83 c4 10          	add    $0x10,%rsp
    8d60:	5d                   	pop    %rbp
    8d61:	c3                   	ret    

0000000000008d62 <imgacquire>:
    8d62:	f3 0f 1e fa          	endbr64 
    8d66:	48 83 ec 28          	sub    $0x28,%rsp
    8d6a:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    8d6f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    8d74:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    8d79:	e8 8f 6d 01 00       	call   1fb0d <find_image>
    8d7e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    8d83:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8d88:	48 85 c0             	test   %rax,%rax
    8d8b:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    8d90:	48 89 02             	mov    %rax,(%rdx)
    8d93:	75 09                	jne    8d9e <imgacquire+0x3c>
    8d95:	48 83 c4 28          	add    $0x28,%rsp
    8d99:	e9 79 ff ff ff       	jmp    8d17 <imgdownload_string>
    8d9e:	31 c0                	xor    %eax,%eax
    8da0:	48 83 c4 28          	add    $0x28,%rsp
    8da4:	c3                   	ret    

0000000000008da5 <imgstat>:
    8da5:	f3 0f 1e fa          	endbr64 
    8da9:	53                   	push   %rbx
    8daa:	48 8b 57 48          	mov    0x48(%rdi),%rdx
    8dae:	48 89 fb             	mov    %rdi,%rbx
    8db1:	31 c0                	xor    %eax,%eax
    8db3:	48 8b 77 28          	mov    0x28(%rdi),%rsi
    8db7:	48 8d 3d a7 9f 01 00 	lea    0x19fa7(%rip),%rdi        # 22d65 <.LC2>
    8dbe:	e8 b7 e4 00 00       	call   1727a <printf>
    8dc3:	48 8b 43 50          	mov    0x50(%rbx),%rax
    8dc7:	48 85 c0             	test   %rax,%rax
    8dca:	74 11                	je     8ddd <imgstat+0x38>
    8dcc:	48 8b 30             	mov    (%rax),%rsi
    8dcf:	48 8d 3d 9e 9f 01 00 	lea    0x19f9e(%rip),%rdi        # 22d74 <.LC3>
    8dd6:	31 c0                	xor    %eax,%eax
    8dd8:	e8 9d e4 00 00       	call   1727a <printf>
    8ddd:	f6 43 30 04          	testb  $0x4,0x30(%rbx)
    8de1:	74 0e                	je     8df1 <imgstat+0x4c>
    8de3:	48 8d 3d 90 9f 01 00 	lea    0x19f90(%rip),%rdi        # 22d7a <.LC4>
    8dea:	31 c0                	xor    %eax,%eax
    8dec:	e8 89 e4 00 00       	call   1727a <printf>
    8df1:	f6 43 30 02          	testb  $0x2,0x30(%rbx)
    8df5:	74 0e                	je     8e05 <imgstat+0x60>
    8df7:	48 8d 3d 87 9f 01 00 	lea    0x19f87(%rip),%rdi        # 22d85 <.LC5>
    8dfe:	31 c0                	xor    %eax,%eax
    8e00:	e8 75 e4 00 00       	call   1727a <printf>
    8e05:	f6 43 30 08          	testb  $0x8,0x30(%rbx)
    8e09:	74 0e                	je     8e19 <imgstat+0x74>
    8e0b:	48 8d 3d 7f 9f 01 00 	lea    0x19f7f(%rip),%rdi        # 22d91 <.LC6>
    8e12:	31 c0                	xor    %eax,%eax
    8e14:	e8 61 e4 00 00       	call   1727a <printf>
    8e19:	48 8b 73 38          	mov    0x38(%rbx),%rsi
    8e1d:	48 85 f6             	test   %rsi,%rsi
    8e20:	74 0e                	je     8e30 <imgstat+0x8b>
    8e22:	48 8d 3d 74 9f 01 00 	lea    0x19f74(%rip),%rdi        # 22d9d <.LC7>
    8e29:	31 c0                	xor    %eax,%eax
    8e2b:	e8 4a e4 00 00       	call   1727a <printf>
    8e30:	48 8d 3d 78 ac 01 00 	lea    0x1ac78(%rip),%rdi        # 23aaf <.LC0>
    8e37:	31 c0                	xor    %eax,%eax
    8e39:	5b                   	pop    %rbx
    8e3a:	e9 3b e4 00 00       	jmp    1727a <printf>

0000000000008e3f <initialise>:
    8e3f:	f3 0f 1e fa          	endbr64 
    8e43:	55                   	push   %rbp
    8e44:	48 8d 2d a5 fe 01 00 	lea    0x1fea5(%rip),%rbp        # 28cf0 <ipv4_stats_family>
    8e4b:	53                   	push   %rbx
    8e4c:	48 8d 1d 55 fe 01 00 	lea    0x1fe55(%rip),%rbx        # 28ca8 <efi_console_init_fn>
    8e53:	52                   	push   %rdx
    8e54:	48 39 eb             	cmp    %rbp,%rbx
    8e57:	73 08                	jae    8e61 <initialise+0x22>
    8e59:	ff 13                	call   *(%rbx)
    8e5b:	48 83 c3 08          	add    $0x8,%rbx
    8e5f:	eb f3                	jmp    8e54 <initialise+0x15>
    8e61:	58                   	pop    %rax
    8e62:	5b                   	pop    %rbx
    8e63:	5d                   	pop    %rbp
    8e64:	c3                   	ret    

0000000000008e65 <startup>:
    8e65:	f3 0f 1e fa          	endbr64 
    8e69:	83 3d 04 0e 02 00 00 	cmpl   $0x0,0x20e04(%rip)        # 29c74 <started>
    8e70:	75 35                	jne    8ea7 <startup+0x42>
    8e72:	55                   	push   %rbp
    8e73:	48 8d 2d f6 0b 02 00 	lea    0x20bf6(%rip),%rbp        # 29a70 <ipv4_tcpip_protocol>
    8e7a:	53                   	push   %rbx
    8e7b:	48 8d 1d 8e 0b 02 00 	lea    0x20b8e(%rip),%rbx        # 29a10 <heap_startup_fn>
    8e82:	52                   	push   %rdx
    8e83:	48 39 eb             	cmp    %rbp,%rbx
    8e86:	73 11                	jae    8e99 <startup+0x34>
    8e88:	48 8b 43 08          	mov    0x8(%rbx),%rax
    8e8c:	48 85 c0             	test   %rax,%rax
    8e8f:	74 02                	je     8e93 <startup+0x2e>
    8e91:	ff d0                	call   *%rax
    8e93:	48 83 c3 18          	add    $0x18,%rbx
    8e97:	eb ea                	jmp    8e83 <startup+0x1e>
    8e99:	c7 05 d1 0d 02 00 01 	movl   $0x1,0x20dd1(%rip)        # 29c74 <started>
    8ea0:	00 00 00 
    8ea3:	58                   	pop    %rax
    8ea4:	5b                   	pop    %rbx
    8ea5:	5d                   	pop    %rbp
    8ea6:	c3                   	ret    
    8ea7:	c3                   	ret    

0000000000008ea8 <shutdown>:
    8ea8:	f3 0f 1e fa          	endbr64 
    8eac:	83 3d c1 0d 02 00 00 	cmpl   $0x0,0x20dc1(%rip)        # 29c74 <started>
    8eb3:	74 42                	je     8ef7 <shutdown+0x4f>
    8eb5:	41 54                	push   %r12
    8eb7:	4c 8d 25 52 0b 02 00 	lea    0x20b52(%rip),%r12        # 29a10 <heap_startup_fn>
    8ebe:	55                   	push   %rbp
    8ebf:	89 fd                	mov    %edi,%ebp
    8ec1:	53                   	push   %rbx
    8ec2:	48 8d 1d 8f 0b 02 00 	lea    0x20b8f(%rip),%rbx        # 29a58 <tcp_startup_fn>
    8ec9:	4c 39 e3             	cmp    %r12,%rbx
    8ecc:	72 13                	jb     8ee1 <shutdown+0x39>
    8ece:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8ed2:	48 85 c0             	test   %rax,%rax
    8ed5:	74 04                	je     8edb <shutdown+0x33>
    8ed7:	89 ef                	mov    %ebp,%edi
    8ed9:	ff d0                	call   *%rax
    8edb:	48 83 eb 18          	sub    $0x18,%rbx
    8edf:	eb e8                	jmp    8ec9 <shutdown+0x21>
    8ee1:	31 ff                	xor    %edi,%edi
    8ee3:	e8 98 04 01 00       	call   19380 <console_configure>
    8ee8:	5b                   	pop    %rbx
    8ee9:	5d                   	pop    %rbp
    8eea:	c7 05 80 0d 02 00 00 	movl   $0x0,0x20d80(%rip)        # 29c74 <started>
    8ef1:	00 00 00 
    8ef4:	41 5c                	pop    %r12
    8ef6:	c3                   	ret    
    8ef7:	c3                   	ret    

0000000000008ef8 <intel_write_eeprom>:
    8ef8:	f3 0f 1e fa          	endbr64 
    8efc:	b8 7d bf 9a c3       	mov    $0xc39abf7d,%eax
    8f01:	c3                   	ret    

0000000000008f02 <intel_describe_tx>:
    8f02:	f3 0f 1e fa          	endbr64 
    8f06:	48 89 37             	mov    %rsi,(%rdi)
    8f09:	66 89 57 08          	mov    %dx,0x8(%rdi)
    8f0d:	c7 47 0a 00 0b 00 00 	movl   $0xb00,0xa(%rdi)
    8f14:	66 c7 47 0e 00 00    	movw   $0x0,0xe(%rdi)
    8f1a:	c3                   	ret    

0000000000008f1b <intel_describe_rx>:
    8f1b:	f3 0f 1e fa          	endbr64 
    8f1f:	48 89 37             	mov    %rsi,(%rdi)
    8f22:	66 c7 47 08 00 00    	movw   $0x0,0x8(%rdi)
    8f28:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%rdi)
    8f2f:	c3                   	ret    

0000000000008f30 <intel_transmit>:
    8f30:	f3 0f 1e fa          	endbr64 
    8f34:	55                   	push   %rbp
    8f35:	53                   	push   %rbx
    8f36:	51                   	push   %rcx
    8f37:	48 8b 9f c8 01 00 00 	mov    0x1c8(%rdi),%rbx
    8f3e:	8b 7b 50             	mov    0x50(%rbx),%edi
    8f41:	89 f8                	mov    %edi,%eax
    8f43:	2b 43 54             	sub    0x54(%rbx),%eax
    8f46:	83 f8 0e             	cmp    $0xe,%eax
    8f49:	76 07                	jbe    8f52 <intel_transmit+0x22>
    8f4b:	b8 77 bf 9a d5       	mov    $0xd59abf77,%eax
    8f50:	eb 3a                	jmp    8f8c <intel_transmit+0x5c>
    8f52:	4c 8b 46 18          	mov    0x18(%rsi),%r8
    8f56:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    8f5a:	8d 6f 01             	lea    0x1(%rdi),%ebp
    8f5d:	83 e7 0f             	and    $0xf,%edi
    8f60:	89 6b 50             	mov    %ebp,0x50(%rbx)
    8f63:	48 c1 e7 04          	shl    $0x4,%rdi
    8f67:	83 e5 0f             	and    $0xf,%ebp
    8f6a:	48 03 7b 48          	add    0x48(%rbx),%rdi
    8f6e:	4c 29 c2             	sub    %r8,%rdx
    8f71:	4c 89 c6             	mov    %r8,%rsi
    8f74:	ff 53 68             	call   *0x68(%rbx)
    8f77:	f0 67 83 04 24 00    	lock addl $0x0,(%esp)
    8f7d:	8b 43 58             	mov    0x58(%rbx),%eax
    8f80:	48 8b 13             	mov    (%rbx),%rdx
    8f83:	48 8d 44 02 18       	lea    0x18(%rdx,%rax,1),%rax
    8f88:	89 28                	mov    %ebp,(%rax)
    8f8a:	31 c0                	xor    %eax,%eax
    8f8c:	5a                   	pop    %rdx
    8f8d:	5b                   	pop    %rbx
    8f8e:	5d                   	pop    %rbp
    8f8f:	c3                   	ret    

0000000000008f90 <intel_irq>:
    8f90:	f3 0f 1e fa          	endbr64 
    8f94:	48 8b 87 c8 01 00 00 	mov    0x1c8(%rdi),%rax
    8f9b:	48 8b 00             	mov    (%rax),%rax
    8f9e:	85 f6                	test   %esi,%esi
    8fa0:	74 0b                	je     8fad <intel_irq+0x1d>
    8fa2:	c7 80 d0 00 00 00 85 	movl   $0x85,0xd0(%rax)
    8fa9:	00 00 00 
    8fac:	c3                   	ret    
    8fad:	c7 80 d8 00 00 00 85 	movl   $0x85,0xd8(%rax)
    8fb4:	00 00 00 
    8fb7:	c3                   	ret    

0000000000008fb8 <intel_reset>:
    8fb8:	41 54                	push   %r12
    8fba:	55                   	push   %rbp
    8fbb:	53                   	push   %rbx
    8fbc:	48 8b 07             	mov    (%rdi),%rax
    8fbf:	48 89 fb             	mov    %rdi,%rbx
    8fc2:	8b 28                	mov    (%rax),%ebp
    8fc4:	8b 50 08             	mov    0x8(%rax),%edx
    8fc7:	f6 47 0c 01          	testb  $0x1,0xc(%rdi)
    8fcb:	74 20                	je     8fed <intel_reset+0x35>
    8fcd:	8b 90 08 10 00 00    	mov    0x1008(%rax),%edx
    8fd3:	8b 90 00 10 00 00    	mov    0x1000(%rax),%edx
    8fd9:	c7 80 00 10 00 00 08 	movl   $0x8,0x1000(%rax)
    8fe0:	00 00 00 
    8fe3:	c7 80 08 10 00 00 10 	movl   $0x10,0x1008(%rax)
    8fea:	00 00 00 
    8fed:	89 ea                	mov    %ebp,%edx
    8fef:	bf 14 00 00 00       	mov    $0x14,%edi
    8ff4:	81 ca 00 00 00 04    	or     $0x4000000,%edx
    8ffa:	89 10                	mov    %edx,(%rax)
    8ffc:	e8 d6 cd 00 00       	call   15dd7 <mdelay>
    9001:	f6 43 0c 08          	testb  $0x8,0xc(%rbx)
    9005:	75 03                	jne    900a <intel_reset+0x52>
    9007:	83 cd 20             	or     $0x20,%ebp
    900a:	81 e5 f7 e7 ff ff    	and    $0xffffe7f7,%ebp
    9010:	48 8b 03             	mov    (%rbx),%rax
    9013:	bf 14 00 00 00       	mov    $0x14,%edi
    9018:	41 89 ec             	mov    %ebp,%r12d
    901b:	41 83 cc 40          	or     $0x40,%r12d
    901f:	44 89 20             	mov    %r12d,(%rax)
    9022:	e8 b0 cd 00 00       	call   15dd7 <mdelay>
    9027:	48 8b 0b             	mov    (%rbx),%rcx
    902a:	8b 53 0c             	mov    0xc(%rbx),%edx
    902d:	8b 41 08             	mov    0x8(%rcx),%eax
    9030:	83 e2 04             	and    $0x4,%edx
    9033:	83 e0 02             	and    $0x2,%eax
    9036:	09 c2                	or     %eax,%edx
    9038:	75 29                	jne    9063 <intel_reset+0xab>
    903a:	89 e8                	mov    %ebp,%eax
    903c:	bf 14 00 00 00       	mov    $0x14,%edi
    9041:	0d 40 00 00 84       	or     $0x84000040,%eax
    9046:	89 01                	mov    %eax,(%rcx)
    9048:	e8 8a cd 00 00       	call   15dd7 <mdelay>
    904d:	48 8b 03             	mov    (%rbx),%rax
    9050:	bf 14 00 00 00       	mov    $0x14,%edi
    9055:	44 89 20             	mov    %r12d,(%rax)
    9058:	e8 7a cd 00 00       	call   15dd7 <mdelay>
    905d:	48 8b 03             	mov    (%rbx),%rax
    9060:	8b 40 08             	mov    0x8(%rax),%eax
    9063:	5b                   	pop    %rbx
    9064:	31 c0                	xor    %eax,%eax
    9066:	5d                   	pop    %rbp
    9067:	41 5c                	pop    %r12
    9069:	c3                   	ret    

000000000000906a <intel_remove>:
    906a:	f3 0f 1e fa          	endbr64 
    906e:	41 54                	push   %r12
    9070:	55                   	push   %rbp
    9071:	50                   	push   %rax
    9072:	48 8b af a8 00 00 00 	mov    0xa8(%rdi),%rbp
    9079:	4c 8b a5 c8 01 00 00 	mov    0x1c8(%rbp),%r12
    9080:	48 89 ef             	mov    %rbp,%rdi
    9083:	e8 62 4f 00 00       	call   dfea <unregister_netdev>
    9088:	4c 89 e7             	mov    %r12,%rdi
    908b:	e8 28 ff ff ff       	call   8fb8 <intel_reset>
    9090:	48 8d 05 89 d9 01 00 	lea    0x1d989(%rip),%rax        # 26a20 <null_netdev_operations>
    9097:	48 89 ef             	mov    %rbp,%rdi
    909a:	48 89 45 48          	mov    %rax,0x48(%rbp)
    909e:	5a                   	pop    %rdx
    909f:	5d                   	pop    %rbp
    90a0:	41 5c                	pop    %r12
    90a2:	e9 73 6e 00 00       	jmp    ff1a <ref_decrement>

00000000000090a7 <intel_check_link>:
    90a7:	48 8b 87 c8 01 00 00 	mov    0x1c8(%rdi),%rax
    90ae:	48 8b 00             	mov    (%rax),%rax
    90b1:	8b 40 08             	mov    0x8(%rax),%eax
    90b4:	a8 02                	test   $0x2,%al
    90b6:	74 07                	je     90bf <intel_check_link+0x18>
    90b8:	31 f6                	xor    %esi,%esi
    90ba:	e9 45 4a 00 00       	jmp    db04 <netdev_link_err>
    90bf:	e9 69 4a 00 00       	jmp    db2d <netdev_link_down>

00000000000090c4 <intel_probe>:
    90c4:	f3 0f 1e fa          	endbr64 
    90c8:	41 55                	push   %r13
    90ca:	49 89 fd             	mov    %rdi,%r13
    90cd:	bf 18 01 00 00       	mov    $0x118,%edi
    90d2:	41 54                	push   %r12
    90d4:	55                   	push   %rbp
    90d5:	53                   	push   %rbx
    90d6:	51                   	push   %rcx
    90d7:	e8 13 4a 01 00       	call   1daef <alloc_etherdev>
    90dc:	48 85 c0             	test   %rax,%rax
    90df:	75 0b                	jne    90ec <intel_probe+0x28>
    90e1:	41 bd 77 bf 9a ce    	mov    $0xce9abf77,%r13d
    90e7:	e9 cf 01 00 00       	jmp    92bb <intel_probe+0x1f7>
    90ec:	49 89 c4             	mov    %rax,%r12
    90ef:	48 8d 05 8a d3 01 00 	lea    0x1d38a(%rip),%rax        # 26480 <intel_operations>
    90f6:	b9 18 01 00 00       	mov    $0x118,%ecx
    90fb:	49 8b ac 24 c8 01 00 	mov    0x1c8(%r12),%rbp
    9102:	00 
    9103:	49 89 44 24 48       	mov    %rax,0x48(%r12)
    9108:	31 c0                	xor    %eax,%eax
    910a:	4d 89 a5 a8 00 00 00 	mov    %r12,0xa8(%r13)
    9111:	48 89 ef             	mov    %rbp,%rdi
    9114:	4d 89 6c 24 40       	mov    %r13,0x40(%r12)
    9119:	f3 aa                	rep stos %al,%es:(%rdi)
    911b:	41 8b 85 9c 00 00 00 	mov    0x9c(%r13),%eax
    9122:	4c 89 ef             	mov    %r13,%rdi
    9125:	83 e0 07             	and    $0x7,%eax
    9128:	89 45 08             	mov    %eax,0x8(%rbp)
    912b:	49 8b 85 b0 00 00 00 	mov    0xb0(%r13),%rax
    9132:	48 8b 40 10          	mov    0x10(%rax),%rax
    9136:	48 c7 45 60 00 01 00 	movq   $0x100,0x60(%rbp)
    913d:	00 
    913e:	c7 45 58 00 38 00 00 	movl   $0x3800,0x58(%rbp)
    9145:	89 45 0c             	mov    %eax,0xc(%rbp)
    9148:	48 8d 05 b3 fd ff ff 	lea    -0x24d(%rip),%rax        # 8f02 <intel_describe_tx>
    914f:	48 89 45 68          	mov    %rax,0x68(%rbp)
    9153:	48 8d 05 c1 fd ff ff 	lea    -0x23f(%rip),%rax        # 8f1b <intel_describe_rx>
    915a:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    9161:	48 c7 85 88 00 00 00 	movq   $0x100,0x88(%rbp)
    9168:	00 01 00 00 
    916c:	c7 85 80 00 00 00 00 	movl   $0x2800,0x80(%rbp)
    9173:	28 00 00 
    9176:	e8 c0 61 00 00       	call   f33b <adjust_pci_device>
    917b:	49 8b 85 80 00 00 00 	mov    0x80(%r13),%rax
    9182:	48 89 45 00          	mov    %rax,0x0(%rbp)
    9186:	48 85 c0             	test   %rax,%rax
    9189:	75 0b                	jne    9196 <intel_probe+0xd2>
    918b:	41 bd 79 bf 9a d3    	mov    $0xd39abf79,%r13d
    9191:	e9 11 01 00 00       	jmp    92a7 <intel_probe+0x1e3>
    9196:	48 89 ef             	mov    %rbp,%rdi
    9199:	e8 1a fe ff ff       	call   8fb8 <intel_reset>
    919e:	41 89 c5             	mov    %eax,%r13d
    91a1:	85 c0                	test   %eax,%eax
    91a3:	0f 85 fe 00 00 00    	jne    92a7 <intel_probe+0x1e3>
    91a9:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    91ad:	8b 91 00 54 00 00    	mov    0x5400(%rcx),%edx
    91b3:	8b 99 04 54 00 00    	mov    0x5404(%rcx),%ebx
    91b9:	f6 c2 01             	test   $0x1,%dl
    91bc:	75 2d                	jne    91eb <intel_probe+0x127>
    91be:	0f b6 c6             	movzbl %dh,%eax
    91c1:	89 d6                	mov    %edx,%esi
    91c3:	c1 ee 10             	shr    $0x10,%esi
    91c6:	09 d0                	or     %edx,%eax
    91c8:	09 f0                	or     %esi,%eax
    91ca:	89 d6                	mov    %edx,%esi
    91cc:	c1 ee 18             	shr    $0x18,%esi
    91cf:	09 f0                	or     %esi,%eax
    91d1:	0f b6 f7             	movzbl %bh,%esi
    91d4:	09 d8                	or     %ebx,%eax
    91d6:	40 08 f0             	or     %sil,%al
    91d9:	74 10                	je     91eb <intel_probe+0x127>
    91db:	41 89 54 24 58       	mov    %edx,0x58(%r12)
    91e0:	66 41 89 5c 24 5c    	mov    %bx,0x5c(%r12)
    91e6:	e9 95 00 00 00       	jmp    9280 <intel_probe+0x1bc>
    91eb:	48 b8 01 00 00 00 40 	movabs $0x4000000001,%rax
    91f2:	00 00 00 
    91f5:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
    91fc:	41 bd 64 00 00 00    	mov    $0x64,%r13d
    9202:	48 89 45 18          	mov    %rax,0x18(%rbp)
    9206:	48 8d 05 b9 00 00 00 	lea    0xb9(%rip),%rax        # 92c6 <intel_read_eeprom>
    920d:	48 89 45 28          	mov    %rax,0x28(%rbp)
    9211:	48 8d 05 e0 fc ff ff 	lea    -0x320(%rip),%rax        # 8ef8 <intel_write_eeprom>
    9218:	48 89 45 30          	mov    %rax,0x30(%rbp)
    921c:	c7 41 14 01 00 00 00 	movl   $0x1,0x14(%rcx)
    9223:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9227:	8b 40 14             	mov    0x14(%rax),%eax
    922a:	a8 02                	test   $0x2,%al
    922c:	75 15                	jne    9243 <intel_probe+0x17f>
    922e:	a8 10                	test   $0x10,%al
    9230:	75 1d                	jne    924f <intel_probe+0x18b>
    9232:	bf 01 00 00 00       	mov    $0x1,%edi
    9237:	e8 9b cb 00 00       	call   15dd7 <mdelay>
    923c:	41 ff cd             	dec    %r13d
    923f:	75 e2                	jne    9223 <intel_probe+0x15f>
    9241:	eb 56                	jmp    9299 <intel_probe+0x1d5>
    9243:	ba 02 00 00 00       	mov    $0x2,%edx
    9248:	b8 02 00 00 00       	mov    $0x2,%eax
    924d:	eb 0a                	jmp    9259 <intel_probe+0x195>
    924f:	ba 10 00 00 00       	mov    $0x10,%edx
    9254:	b8 08 00 00 00       	mov    $0x8,%eax
    9259:	89 55 38             	mov    %edx,0x38(%rbp)
    925c:	31 f6                	xor    %esi,%esi
    925e:	49 8d 54 24 58       	lea    0x58(%r12),%rdx
    9263:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    9267:	89 45 3c             	mov    %eax,0x3c(%rbp)
    926a:	b9 06 00 00 00       	mov    $0x6,%ecx
    926f:	e8 cc 57 00 00       	call   ea40 <nvs_read>
    9274:	85 c0                	test   %eax,%eax
    9276:	75 21                	jne    9299 <intel_probe+0x1d5>
    9278:	8b 45 08             	mov    0x8(%rbp),%eax
    927b:	41 30 44 24 5d       	xor    %al,0x5d(%r12)
    9280:	4c 89 e7             	mov    %r12,%rdi
    9283:	e8 c3 4e 00 00       	call   e14b <register_netdev>
    9288:	41 89 c5             	mov    %eax,%r13d
    928b:	85 c0                	test   %eax,%eax
    928d:	75 10                	jne    929f <intel_probe+0x1db>
    928f:	4c 89 e7             	mov    %r12,%rdi
    9292:	e8 10 fe ff ff       	call   90a7 <intel_check_link>
    9297:	eb 22                	jmp    92bb <intel_probe+0x1f7>
    9299:	41 bd 72 bf 9a d2    	mov    $0xd29abf72,%r13d
    929f:	48 89 ef             	mov    %rbp,%rdi
    92a2:	e8 11 fd ff ff       	call   8fb8 <intel_reset>
    92a7:	48 8d 05 72 d7 01 00 	lea    0x1d772(%rip),%rax        # 26a20 <null_netdev_operations>
    92ae:	4c 89 e7             	mov    %r12,%rdi
    92b1:	49 89 44 24 48       	mov    %rax,0x48(%r12)
    92b6:	e8 5f 6c 00 00       	call   ff1a <ref_decrement>
    92bb:	5a                   	pop    %rdx
    92bc:	44 89 e8             	mov    %r13d,%eax
    92bf:	5b                   	pop    %rbx
    92c0:	5d                   	pop    %rbp
    92c1:	41 5c                	pop    %r12
    92c3:	41 5d                	pop    %r13
    92c5:	c3                   	ret    

00000000000092c6 <intel_read_eeprom>:
    92c6:	f3 0f 1e fa          	endbr64 
    92ca:	41 54                	push   %r12
    92cc:	41 bc 64 00 00 00    	mov    $0x64,%r12d
    92d2:	55                   	push   %rbp
    92d3:	48 89 d5             	mov    %rdx,%rbp
    92d6:	53                   	push   %rbx
    92d7:	8b 4f 24             	mov    0x24(%rdi),%ecx
    92da:	48 89 fb             	mov    %rdi,%rbx
    92dd:	48 8b 47 e8          	mov    -0x18(%rdi),%rax
    92e1:	d3 e6                	shl    %cl,%esi
    92e3:	83 ce 01             	or     $0x1,%esi
    92e6:	89 70 14             	mov    %esi,0x14(%rax)
    92e9:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    92ed:	8b 40 14             	mov    0x14(%rax),%eax
    92f0:	89 c2                	mov    %eax,%edx
    92f2:	23 53 20             	and    0x20(%rbx),%edx
    92f5:	75 16                	jne    930d <intel_read_eeprom+0x47>
    92f7:	bf 01 00 00 00       	mov    $0x1,%edi
    92fc:	e8 d6 ca 00 00       	call   15dd7 <mdelay>
    9301:	41 ff cc             	dec    %r12d
    9304:	75 e3                	jne    92e9 <intel_read_eeprom+0x23>
    9306:	b8 6e bf 9a b3       	mov    $0xb39abf6e,%eax
    930b:	eb 09                	jmp    9316 <intel_read_eeprom+0x50>
    930d:	c1 e8 10             	shr    $0x10,%eax
    9310:	66 89 45 00          	mov    %ax,0x0(%rbp)
    9314:	31 c0                	xor    %eax,%eax
    9316:	5b                   	pop    %rbx
    9317:	5d                   	pop    %rbp
    9318:	41 5c                	pop    %r12
    931a:	c3                   	ret    

000000000000931b <intel_reset_ring>:
    931b:	f3 0f 1e fa          	endbr64 
    931f:	41 55                	push   %r13
    9321:	41 54                	push   %r12
    9323:	41 bc 64 00 00 00    	mov    $0x64,%r12d
    9329:	55                   	push   %rbp
    932a:	48 89 fd             	mov    %rdi,%rbp
    932d:	53                   	push   %rbx
    932e:	89 f3                	mov    %esi,%ebx
    9330:	52                   	push   %rdx
    9331:	48 8b 07             	mov    (%rdi),%rax
    9334:	4c 8d 6b 28          	lea    0x28(%rbx),%r13
    9338:	4c 01 e8             	add    %r13,%rax
    933b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    9341:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9345:	4c 01 e8             	add    %r13,%rax
    9348:	8b 00                	mov    (%rax),%eax
    934a:	0f ba e0 19          	bt     $0x19,%eax
    934e:	73 0f                	jae    935f <intel_reset_ring+0x44>
    9350:	bf 01 00 00 00       	mov    $0x1,%edi
    9355:	e8 7d ca 00 00       	call   15dd7 <mdelay>
    935a:	41 ff cc             	dec    %r12d
    935d:	75 e2                	jne    9341 <intel_reset_ring+0x26>
    935f:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9363:	48 8d 54 18 08       	lea    0x8(%rax,%rbx,1),%rdx
    9368:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    936e:	48 8d 54 18 04       	lea    0x4(%rax,%rbx,1),%rdx
    9373:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    9379:	48 8d 14 18          	lea    (%rax,%rbx,1),%rdx
    937d:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    9383:	48 8d 54 18 10       	lea    0x10(%rax,%rbx,1),%rdx
    9388:	48 8d 44 18 18       	lea    0x18(%rax,%rbx,1),%rax
    938d:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    9393:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    9399:	58                   	pop    %rax
    939a:	5b                   	pop    %rbx
    939b:	5d                   	pop    %rbp
    939c:	41 5c                	pop    %r12
    939e:	41 5d                	pop    %r13
    93a0:	c3                   	ret    

00000000000093a1 <intel_create_ring>:
    93a1:	f3 0f 1e fa          	endbr64 
    93a5:	41 54                	push   %r12
    93a7:	31 d2                	xor    %edx,%edx
    93a9:	49 89 fc             	mov    %rdi,%r12
    93ac:	55                   	push   %rbp
    93ad:	53                   	push   %rbx
    93ae:	48 8b 6e 18          	mov    0x18(%rsi),%rbp
    93b2:	48 89 f3             	mov    %rsi,%rbx
    93b5:	48 89 ef             	mov    %rbp,%rdi
    93b8:	48 89 ee             	mov    %rbp,%rsi
    93bb:	e8 3d 31 00 00       	call   c4fd <alloc_memblock>
    93c0:	48 89 c2             	mov    %rax,%rdx
    93c3:	48 85 c0             	test   %rax,%rax
    93c6:	74 0f                	je     93d7 <intel_create_ring+0x36>
    93c8:	48 85 ed             	test   %rbp,%rbp
    93cb:	74 0a                	je     93d7 <intel_create_ring+0x36>
    93cd:	48 89 c7             	mov    %rax,%rdi
    93d0:	48 89 e9             	mov    %rbp,%rcx
    93d3:	31 c0                	xor    %eax,%eax
    93d5:	f3 aa                	rep stos %al,%es:(%rdi)
    93d7:	48 89 13             	mov    %rdx,(%rbx)
    93da:	48 85 d2             	test   %rdx,%rdx
    93dd:	75 07                	jne    93e6 <intel_create_ring+0x45>
    93df:	b8 77 bf 9a ce       	mov    $0xce9abf77,%eax
    93e4:	eb 65                	jmp    944b <intel_create_ring+0xaa>
    93e6:	48 89 d7             	mov    %rdx,%rdi
    93e9:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    93ed:	31 c0                	xor    %eax,%eax
    93ef:	f3 aa                	rep stos %al,%es:(%rdi)
    93f1:	49 8b 04 24          	mov    (%r12),%rax
    93f5:	8b 4b 10             	mov    0x10(%rbx),%ecx
    93f8:	48 8b 13             	mov    (%rbx),%rdx
    93fb:	48 01 c1             	add    %rax,%rcx
    93fe:	89 11                	mov    %edx,(%rcx)
    9400:	8b 4b 10             	mov    0x10(%rbx),%ecx
    9403:	48 c1 ea 20          	shr    $0x20,%rdx
    9407:	48 8d 4c 08 04       	lea    0x4(%rax,%rcx,1),%rcx
    940c:	89 11                	mov    %edx,(%rcx)
    940e:	8b 53 10             	mov    0x10(%rbx),%edx
    9411:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    9415:	48 8d 54 10 08       	lea    0x8(%rax,%rdx,1),%rdx
    941a:	89 0a                	mov    %ecx,(%rdx)
    941c:	8b 53 10             	mov    0x10(%rbx),%edx
    941f:	48 8d 54 10 10       	lea    0x10(%rax,%rdx,1),%rdx
    9424:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    942a:	8b 53 10             	mov    0x10(%rbx),%edx
    942d:	48 8d 54 10 18       	lea    0x18(%rax,%rdx,1),%rdx
    9432:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    9438:	8b 53 10             	mov    0x10(%rbx),%edx
    943b:	48 8d 54 10 28       	lea    0x28(%rax,%rdx,1),%rdx
    9440:	8b 02                	mov    (%rdx),%eax
    9442:	0d 00 00 00 02       	or     $0x2000000,%eax
    9447:	89 02                	mov    %eax,(%rdx)
    9449:	31 c0                	xor    %eax,%eax
    944b:	5b                   	pop    %rbx
    944c:	5d                   	pop    %rbp
    944d:	41 5c                	pop    %r12
    944f:	c3                   	ret    

0000000000009450 <intel_destroy_ring>:
    9450:	f3 0f 1e fa          	endbr64 
    9454:	53                   	push   %rbx
    9455:	48 89 f3             	mov    %rsi,%rbx
    9458:	8b 76 10             	mov    0x10(%rsi),%esi
    945b:	e8 bb fe ff ff       	call   931b <intel_reset_ring>
    9460:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    9464:	48 8b 3b             	mov    (%rbx),%rdi
    9467:	e8 6a 31 00 00       	call   c5d6 <free_memblock>
    946c:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    9473:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    947a:	00 
    947b:	5b                   	pop    %rbx
    947c:	c3                   	ret    

000000000000947d <intel_refill_rx>:
    947d:	f3 0f 1e fa          	endbr64 
    9481:	41 55                	push   %r13
    9483:	45 31 ed             	xor    %r13d,%r13d
    9486:	41 54                	push   %r12
    9488:	55                   	push   %rbp
    9489:	53                   	push   %rbx
    948a:	48 89 fb             	mov    %rdi,%rbx
    948d:	52                   	push   %rdx
    948e:	8b 43 78             	mov    0x78(%rbx),%eax
    9491:	2b 43 7c             	sub    0x7c(%rbx),%eax
    9494:	83 f8 07             	cmp    $0x7,%eax
    9497:	77 12                	ja     94ab <intel_refill_rx+0x2e>
    9499:	bf 00 08 00 00       	mov    $0x800,%edi
    949e:	e8 a9 08 00 00       	call   9d4c <alloc_iob>
    94a3:	49 89 c4             	mov    %rax,%r12
    94a6:	48 85 c0             	test   %rax,%rax
    94a9:	75 23                	jne    94ce <intel_refill_rx+0x51>
    94ab:	45 85 ed             	test   %r13d,%r13d
    94ae:	74 4f                	je     94ff <intel_refill_rx+0x82>
    94b0:	f0 67 83 04 24 00    	lock addl $0x0,(%esp)
    94b6:	8b 43 78             	mov    0x78(%rbx),%eax
    94b9:	8b 93 80 00 00 00    	mov    0x80(%rbx),%edx
    94bf:	48 8b 0b             	mov    (%rbx),%rcx
    94c2:	83 e0 0f             	and    $0xf,%eax
    94c5:	48 8d 54 11 18       	lea    0x18(%rcx,%rdx,1),%rdx
    94ca:	89 02                	mov    %eax,(%rdx)
    94cc:	eb 31                	jmp    94ff <intel_refill_rx+0x82>
    94ce:	8b 6b 78             	mov    0x78(%rbx),%ebp
    94d1:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    94d6:	31 d2                	xor    %edx,%edx
    94d8:	41 ff c5             	inc    %r13d
    94db:	8d 45 01             	lea    0x1(%rbp),%eax
    94de:	83 e5 0f             	and    $0xf,%ebp
    94e1:	48 89 ef             	mov    %rbp,%rdi
    94e4:	89 43 78             	mov    %eax,0x78(%rbx)
    94e7:	48 c1 e7 04          	shl    $0x4,%rdi
    94eb:	48 03 7b 70          	add    0x70(%rbx),%rdi
    94ef:	ff 93 90 00 00 00    	call   *0x90(%rbx)
    94f5:	4c 89 a4 eb 98 00 00 	mov    %r12,0x98(%rbx,%rbp,8)
    94fc:	00 
    94fd:	eb 8f                	jmp    948e <intel_refill_rx+0x11>
    94ff:	58                   	pop    %rax
    9500:	5b                   	pop    %rbx
    9501:	5d                   	pop    %rbp
    9502:	41 5c                	pop    %r12
    9504:	41 5d                	pop    %r13
    9506:	c3                   	ret    

0000000000009507 <intel_open>:
    9507:	f3 0f 1e fa          	endbr64 
    950b:	41 56                	push   %r14
    950d:	41 55                	push   %r13
    950f:	49 89 fd             	mov    %rdi,%r13
    9512:	41 54                	push   %r12
    9514:	55                   	push   %rbp
    9515:	48 83 ec 18          	sub    $0x18,%rsp
    9519:	48 8b af c8 01 00 00 	mov    0x1c8(%rdi),%rbp
    9520:	48 8b 05 29 0b 02 00 	mov    0x20b29(%rip),%rax        # 2a050 <__stack_chk_guard>
    9527:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    952c:	31 c0                	xor    %eax,%eax
    952e:	f6 45 0c 10          	testb  $0x10,0xc(%rbp)
    9532:	74 13                	je     9547 <intel_open+0x40>
    9534:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    9538:	8b 82 bc 5b 00 00    	mov    0x5bbc(%rdx),%eax
    953e:	80 cc 20             	or     $0x20,%ah
    9541:	89 82 bc 5b 00 00    	mov    %eax,0x5bbc(%rdx)
    9547:	4c 8d 75 48          	lea    0x48(%rbp),%r14
    954b:	48 89 ef             	mov    %rbp,%rdi
    954e:	4c 89 f6             	mov    %r14,%rsi
    9551:	e8 4b fe ff ff       	call   93a1 <intel_create_ring>
    9556:	41 89 c4             	mov    %eax,%r12d
    9559:	85 c0                	test   %eax,%eax
    955b:	0f 85 9c 00 00 00    	jne    95fd <intel_open+0xf6>
    9561:	48 8d 75 70          	lea    0x70(%rbp),%rsi
    9565:	48 89 ef             	mov    %rbp,%rdi
    9568:	e8 34 fe ff ff       	call   93a1 <intel_create_ring>
    956d:	41 89 c4             	mov    %eax,%r12d
    9570:	85 c0                	test   %eax,%eax
    9572:	74 0d                	je     9581 <intel_open+0x7a>
    9574:	4c 89 f6             	mov    %r14,%rsi
    9577:	48 89 ef             	mov    %rbp,%rdi
    957a:	e8 d1 fe ff ff       	call   9450 <intel_destroy_ring>
    957f:	eb 7c                	jmp    95fd <intel_open+0xf6>
    9581:	41 8b 45 64          	mov    0x64(%r13),%eax
    9585:	41 8b 55 60          	mov    0x60(%r13),%edx
    9589:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    9590:	00 
    9591:	48 89 ef             	mov    %rbp,%rdi
    9594:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
    9599:	48 8b 45 00          	mov    0x0(%rbp),%rax
    959d:	89 90 00 54 00 00    	mov    %edx,0x5400(%rax)
    95a3:	8b 54 24 04          	mov    0x4(%rsp),%edx
    95a7:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    95ad:	89 90 04 54 00 00    	mov    %edx,0x5404(%rax)
    95b3:	8b 90 00 04 00 00    	mov    0x400(%rax),%edx
    95b9:	81 e2 0f 00 c0 ff    	and    $0xffc0000f,%edx
    95bf:	81 ca fa 00 04 00    	or     $0x400fa,%edx
    95c5:	89 90 00 04 00 00    	mov    %edx,0x400(%rax)
    95cb:	8b 90 00 01 00 00    	mov    0x100(%rax),%edx
    95d1:	81 e2 ff ff fc fd    	and    $0xfdfcffff,%edx
    95d7:	81 ca 1a 80 00 04    	or     $0x400801a,%edx
    95dd:	89 90 00 01 00 00    	mov    %edx,0x100(%rax)
    95e3:	e8 95 fe ff ff       	call   947d <intel_refill_rx>
    95e8:	4c 89 ef             	mov    %r13,%rdi
    95eb:	e8 b7 fa ff ff       	call   90a7 <intel_check_link>
    95f0:	f6 45 0c 02          	testb  $0x2,0xc(%rbp)
    95f4:	74 07                	je     95fd <intel_open+0xf6>
    95f6:	c7 45 10 80 00 00 00 	movl   $0x80,0x10(%rbp)
    95fd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9602:	48 2b 05 47 0a 02 00 	sub    0x20a47(%rip),%rax        # 2a050 <__stack_chk_guard>
    9609:	74 05                	je     9610 <intel_open+0x109>
    960b:	e8 50 94 ff ff       	call   2a60 <__stack_chk_fail>
    9610:	48 83 c4 18          	add    $0x18,%rsp
    9614:	44 89 e0             	mov    %r12d,%eax
    9617:	5d                   	pop    %rbp
    9618:	41 5c                	pop    %r12
    961a:	41 5d                	pop    %r13
    961c:	41 5e                	pop    %r14
    961e:	c3                   	ret    

000000000000961f <intel_empty_rx>:
    961f:	f3 0f 1e fa          	endbr64 
    9623:	55                   	push   %rbp
    9624:	48 89 fd             	mov    %rdi,%rbp
    9627:	53                   	push   %rbx
    9628:	31 db                	xor    %ebx,%ebx
    962a:	52                   	push   %rdx
    962b:	48 8b bc 1d 98 00 00 	mov    0x98(%rbp,%rbx,1),%rdi
    9632:	00 
    9633:	48 85 ff             	test   %rdi,%rdi
    9636:	74 05                	je     963d <intel_empty_rx+0x1e>
    9638:	e8 29 07 00 00       	call   9d66 <free_iob>
    963d:	48 c7 84 1d 98 00 00 	movq   $0x0,0x98(%rbp,%rbx,1)
    9644:	00 00 00 00 00 
    9649:	48 83 c3 08          	add    $0x8,%rbx
    964d:	48 81 fb 80 00 00 00 	cmp    $0x80,%rbx
    9654:	75 d5                	jne    962b <intel_empty_rx+0xc>
    9656:	58                   	pop    %rax
    9657:	5b                   	pop    %rbx
    9658:	5d                   	pop    %rbp
    9659:	c3                   	ret    

000000000000965a <intel_close>:
    965a:	f3 0f 1e fa          	endbr64 
    965e:	55                   	push   %rbp
    965f:	48 8b af c8 01 00 00 	mov    0x1c8(%rdi),%rbp
    9666:	48 8b 45 00          	mov    0x0(%rbp),%rax
    966a:	48 8d 75 70          	lea    0x70(%rbp),%rsi
    966e:	48 89 ef             	mov    %rbp,%rdi
    9671:	c7 80 00 01 00 00 00 	movl   $0x0,0x100(%rax)
    9678:	00 00 00 
    967b:	c7 80 00 04 00 00 00 	movl   $0x0,0x400(%rax)
    9682:	00 00 00 
    9685:	e8 c6 fd ff ff       	call   9450 <intel_destroy_ring>
    968a:	48 89 ef             	mov    %rbp,%rdi
    968d:	e8 8d ff ff ff       	call   961f <intel_empty_rx>
    9692:	48 89 ef             	mov    %rbp,%rdi
    9695:	48 8d 75 48          	lea    0x48(%rbp),%rsi
    9699:	e8 b2 fd ff ff       	call   9450 <intel_destroy_ring>
    969e:	48 89 ef             	mov    %rbp,%rdi
    96a1:	5d                   	pop    %rbp
    96a2:	e9 11 f9 ff ff       	jmp    8fb8 <intel_reset>

00000000000096a7 <intel_poll_tx>:
    96a7:	f3 0f 1e fa          	endbr64 
    96ab:	55                   	push   %rbp
    96ac:	48 89 fd             	mov    %rdi,%rbp
    96af:	53                   	push   %rbx
    96b0:	52                   	push   %rdx
    96b1:	48 8b 9f c8 01 00 00 	mov    0x1c8(%rdi),%rbx
    96b8:	8b 43 54             	mov    0x54(%rbx),%eax
    96bb:	3b 43 50             	cmp    0x50(%rbx),%eax
    96be:	74 20                	je     96e0 <intel_poll_tx+0x39>
    96c0:	83 e0 0f             	and    $0xf,%eax
    96c3:	48 c1 e0 04          	shl    $0x4,%rax
    96c7:	48 03 43 48          	add    0x48(%rbx),%rax
    96cb:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
    96cf:	74 0f                	je     96e0 <intel_poll_tx+0x39>
    96d1:	31 f6                	xor    %esi,%esi
    96d3:	48 89 ef             	mov    %rbp,%rdi
    96d6:	e8 81 45 00 00       	call   dc5c <netdev_tx_complete_next_err>
    96db:	ff 43 54             	incl   0x54(%rbx)
    96de:	eb d8                	jmp    96b8 <intel_poll_tx+0x11>
    96e0:	58                   	pop    %rax
    96e1:	5b                   	pop    %rbx
    96e2:	5d                   	pop    %rbp
    96e3:	c3                   	ret    

00000000000096e4 <intel_poll_rx>:
    96e4:	f3 0f 1e fa          	endbr64 
    96e8:	55                   	push   %rbp
    96e9:	48 89 fd             	mov    %rdi,%rbp
    96ec:	53                   	push   %rbx
    96ed:	52                   	push   %rdx
    96ee:	48 8b 9f c8 01 00 00 	mov    0x1c8(%rdi),%rbx
    96f5:	8b 43 7c             	mov    0x7c(%rbx),%eax
    96f8:	3b 43 78             	cmp    0x78(%rbx),%eax
    96fb:	74 52                	je     974f <intel_poll_rx+0x6b>
    96fd:	83 e0 0f             	and    $0xf,%eax
    9700:	48 89 c2             	mov    %rax,%rdx
    9703:	48 c1 e2 04          	shl    $0x4,%rdx
    9707:	48 03 53 70          	add    0x70(%rbx),%rdx
    970b:	8b 4a 0c             	mov    0xc(%rdx),%ecx
    970e:	f6 c1 01             	test   $0x1,%cl
    9711:	74 3c                	je     974f <intel_poll_rx+0x6b>
    9713:	48 83 c0 12          	add    $0x12,%rax
    9717:	48 8b 74 c3 08       	mov    0x8(%rbx,%rax,8),%rsi
    971c:	48 c7 44 c3 08 00 00 	movq   $0x0,0x8(%rbx,%rax,8)
    9723:	00 00 
    9725:	0f b7 42 08          	movzwl 0x8(%rdx),%eax
    9729:	48 01 46 20          	add    %rax,0x20(%rsi)
    972d:	0f ba e1 08          	bt     $0x8,%ecx
    9731:	73 0f                	jae    9742 <intel_poll_rx+0x5e>
    9733:	ba 68 bf 9a e2       	mov    $0xe29abf68,%edx
    9738:	48 89 ef             	mov    %rbp,%rdi
    973b:	e8 88 45 00 00       	call   dcc8 <netdev_rx_err>
    9740:	eb 08                	jmp    974a <intel_poll_rx+0x66>
    9742:	48 89 ef             	mov    %rbp,%rdi
    9745:	e8 5f 45 00 00       	call   dca9 <netdev_rx>
    974a:	ff 43 7c             	incl   0x7c(%rbx)
    974d:	eb a6                	jmp    96f5 <intel_poll_rx+0x11>
    974f:	58                   	pop    %rax
    9750:	5b                   	pop    %rbx
    9751:	5d                   	pop    %rbp
    9752:	c3                   	ret    

0000000000009753 <intel_poll>:
    9753:	f3 0f 1e fa          	endbr64 
    9757:	41 55                	push   %r13
    9759:	41 54                	push   %r12
    975b:	55                   	push   %rbp
    975c:	53                   	push   %rbx
    975d:	51                   	push   %rcx
    975e:	4c 8b a7 c8 01 00 00 	mov    0x1c8(%rdi),%r12
    9765:	49 8b 04 24          	mov    (%r12),%rax
    9769:	8b 98 c0 00 00 00    	mov    0xc0(%rax),%ebx
    976f:	41 0b 5c 24 10       	or     0x10(%r12),%ebx
    9774:	74 65                	je     97db <intel_poll+0x88>
    9776:	48 89 fd             	mov    %rdi,%rbp
    9779:	41 89 dd             	mov    %ebx,%r13d
    977c:	f6 c3 01             	test   $0x1,%bl
    977f:	74 05                	je     9786 <intel_poll+0x33>
    9781:	e8 21 ff ff ff       	call   96a7 <intel_poll_tx>
    9786:	f6 c3 c0             	test   $0xc0,%bl
    9789:	74 08                	je     9793 <intel_poll+0x40>
    978b:	48 89 ef             	mov    %rbp,%rdi
    978e:	e8 51 ff ff ff       	call   96e4 <intel_poll_rx>
    9793:	f6 c3 40             	test   $0x40,%bl
    9796:	74 0f                	je     97a7 <intel_poll+0x54>
    9798:	ba 77 bf 9a d5       	mov    $0xd59abf77,%edx
    979d:	31 f6                	xor    %esi,%esi
    979f:	48 89 ef             	mov    %rbp,%rdi
    97a2:	e8 21 45 00 00       	call   dcc8 <netdev_rx_err>
    97a7:	80 e3 04             	and    $0x4,%bl
    97aa:	74 08                	je     97b4 <intel_poll+0x61>
    97ac:	48 89 ef             	mov    %rbp,%rdi
    97af:	e8 f3 f8 ff ff       	call   90a7 <intel_check_link>
    97b4:	41 f7 c5 28 ff ff ff 	test   $0xffffff28,%r13d
    97bb:	74 0f                	je     97cc <intel_poll+0x79>
    97bd:	ba 7d bf 9a c3       	mov    $0xc39abf7d,%edx
    97c2:	31 f6                	xor    %esi,%esi
    97c4:	48 89 ef             	mov    %rbp,%rdi
    97c7:	e8 a1 43 00 00       	call   db6d <netdev_tx_err>
    97cc:	5a                   	pop    %rdx
    97cd:	4c 89 e7             	mov    %r12,%rdi
    97d0:	5b                   	pop    %rbx
    97d1:	5d                   	pop    %rbp
    97d2:	41 5c                	pop    %r12
    97d4:	41 5d                	pop    %r13
    97d6:	e9 a2 fc ff ff       	jmp    947d <intel_refill_rx>
    97db:	58                   	pop    %rax
    97dc:	5b                   	pop    %rbx
    97dd:	5d                   	pop    %rbp
    97de:	41 5c                	pop    %r12
    97e0:	41 5d                	pop    %r13
    97e2:	c3                   	ret    

00000000000097e3 <null_intf_close>:
    97e3:	f3 0f 1e fa          	endbr64 
    97e7:	c3                   	ret    

00000000000097e8 <intf_nullify>:
    97e8:	f3 0f 1e fa          	endbr64 
    97ec:	48 8d 05 ed cc 01 00 	lea    0x1cced(%rip),%rax        # 264e0 <null_intf_desc>
    97f3:	48 89 47 10          	mov    %rax,0x10(%rdi)
    97f7:	c3                   	ret    

00000000000097f8 <intf_get>:
    97f8:	f3 0f 1e fa          	endbr64 
    97fc:	41 54                	push   %r12
    97fe:	49 89 fc             	mov    %rdi,%r12
    9801:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9805:	e8 04 67 00 00       	call   ff0e <ref_increment>
    980a:	4c 89 e0             	mov    %r12,%rax
    980d:	41 5c                	pop    %r12
    980f:	c3                   	ret    

0000000000009810 <intf_put>:
    9810:	f3 0f 1e fa          	endbr64 
    9814:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9818:	e9 fd 66 00 00       	jmp    ff1a <ref_decrement>

000000000000981d <intf_plug>:
    981d:	f3 0f 1e fa          	endbr64 
    9821:	55                   	push   %rbp
    9822:	48 89 f5             	mov    %rsi,%rbp
    9825:	53                   	push   %rbx
    9826:	48 89 fb             	mov    %rdi,%rbx
    9829:	48 89 f7             	mov    %rsi,%rdi
    982c:	50                   	push   %rax
    982d:	e8 c6 ff ff ff       	call   97f8 <intf_get>
    9832:	48 8b 3b             	mov    (%rbx),%rdi
    9835:	e8 d6 ff ff ff       	call   9810 <intf_put>
    983a:	48 89 2b             	mov    %rbp,(%rbx)
    983d:	5a                   	pop    %rdx
    983e:	5b                   	pop    %rbx
    983f:	5d                   	pop    %rbp
    9840:	c3                   	ret    

0000000000009841 <intf_plug_plug>:
    9841:	f3 0f 1e fa          	endbr64 
    9845:	41 54                	push   %r12
    9847:	49 89 fc             	mov    %rdi,%r12
    984a:	55                   	push   %rbp
    984b:	48 89 f5             	mov    %rsi,%rbp
    984e:	50                   	push   %rax
    984f:	e8 c9 ff ff ff       	call   981d <intf_plug>
    9854:	5a                   	pop    %rdx
    9855:	4c 89 e6             	mov    %r12,%rsi
    9858:	48 89 ef             	mov    %rbp,%rdi
    985b:	5d                   	pop    %rbp
    985c:	41 5c                	pop    %r12
    985e:	e9 ba ff ff ff       	jmp    981d <intf_plug>

0000000000009863 <intf_unplug>:
    9863:	f3 0f 1e fa          	endbr64 
    9867:	53                   	push   %rbx
    9868:	48 89 fb             	mov    %rdi,%rbx
    986b:	48 8b 3f             	mov    (%rdi),%rdi
    986e:	e8 9d ff ff ff       	call   9810 <intf_put>
    9873:	48 8d 05 46 cc 01 00 	lea    0x1cc46(%rip),%rax        # 264c0 <null_intf>
    987a:	48 89 03             	mov    %rax,(%rbx)
    987d:	5b                   	pop    %rbx
    987e:	c3                   	ret    

000000000000987f <intf_object>:
    987f:	f3 0f 1e fa          	endbr64 
    9883:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9887:	48 89 f8             	mov    %rdi,%rax
    988a:	48 2b 02             	sub    (%rdx),%rax
    988d:	c3                   	ret    

000000000000988e <intf_get_dest_op_no_passthru_untyped>:
    988e:	f3 0f 1e fa          	endbr64 
    9892:	41 54                	push   %r12
    9894:	49 89 d4             	mov    %rdx,%r12
    9897:	55                   	push   %rbp
    9898:	53                   	push   %rbx
    9899:	48 8b 2f             	mov    (%rdi),%rbp
    989c:	48 89 f3             	mov    %rsi,%rbx
    989f:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    98a3:	e8 66 66 00 00       	call   ff0e <ref_increment>
    98a8:	48 8b 45 10          	mov    0x10(%rbp),%rax
    98ac:	49 89 2c 24          	mov    %rbp,(%r12)
    98b0:	8b 50 08             	mov    0x8(%rax),%edx
    98b3:	48 8b 40 10          	mov    0x10(%rax),%rax
    98b7:	85 d2                	test   %edx,%edx
    98b9:	74 13                	je     98ce <intf_get_dest_op_no_passthru_untyped+0x40>
    98bb:	48 39 18             	cmp    %rbx,(%rax)
    98be:	75 06                	jne    98c6 <intf_get_dest_op_no_passthru_untyped+0x38>
    98c0:	48 8b 40 08          	mov    0x8(%rax),%rax
    98c4:	eb 0a                	jmp    98d0 <intf_get_dest_op_no_passthru_untyped+0x42>
    98c6:	ff ca                	dec    %edx
    98c8:	48 83 c0 10          	add    $0x10,%rax
    98cc:	eb e9                	jmp    98b7 <intf_get_dest_op_no_passthru_untyped+0x29>
    98ce:	31 c0                	xor    %eax,%eax
    98d0:	5b                   	pop    %rbx
    98d1:	5d                   	pop    %rbp
    98d2:	41 5c                	pop    %r12
    98d4:	c3                   	ret    

00000000000098d5 <intf_get_dest_op_untyped>:
    98d5:	f3 0f 1e fa          	endbr64 
    98d9:	41 54                	push   %r12
    98db:	49 89 f4             	mov    %rsi,%r12
    98de:	55                   	push   %rbp
    98df:	48 89 fd             	mov    %rdi,%rbp
    98e2:	53                   	push   %rbx
    98e3:	48 89 d3             	mov    %rdx,%rbx
    98e6:	48 89 da             	mov    %rbx,%rdx
    98e9:	4c 89 e6             	mov    %r12,%rsi
    98ec:	48 89 ef             	mov    %rbp,%rdi
    98ef:	e8 9a ff ff ff       	call   988e <intf_get_dest_op_no_passthru_untyped>
    98f4:	48 85 c0             	test   %rax,%rax
    98f7:	75 1a                	jne    9913 <intf_get_dest_op_untyped+0x3e>
    98f9:	48 8b 3b             	mov    (%rbx),%rdi
    98fc:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9900:	48 8b 6a 18          	mov    0x18(%rdx),%rbp
    9904:	48 85 ed             	test   %rbp,%rbp
    9907:	74 0a                	je     9913 <intf_get_dest_op_untyped+0x3e>
    9909:	48 01 fd             	add    %rdi,%rbp
    990c:	e8 ff fe ff ff       	call   9810 <intf_put>
    9911:	eb d3                	jmp    98e6 <intf_get_dest_op_untyped+0x11>
    9913:	5b                   	pop    %rbx
    9914:	5d                   	pop    %rbp
    9915:	41 5c                	pop    %r12
    9917:	c3                   	ret    

0000000000009918 <intf_restart>:
    9918:	f3 0f 1e fa          	endbr64 
    991c:	53                   	push   %rbx
    991d:	48 89 fb             	mov    %rdi,%rbx
    9920:	e8 7a 00 00 00       	call   999f <intf_shutdown>
    9925:	48 8b 43 18          	mov    0x18(%rbx),%rax
    9929:	48 89 43 10          	mov    %rax,0x10(%rbx)
    992d:	5b                   	pop    %rbx
    992e:	c3                   	ret    

000000000000992f <intf_close>:
    992f:	f3 0f 1e fa          	endbr64 
    9933:	41 54                	push   %r12
    9935:	55                   	push   %rbp
    9936:	89 f5                	mov    %esi,%ebp
    9938:	48 8d 35 f0 ff ff ff 	lea    -0x10(%rip),%rsi        # 992f <intf_close>
    993f:	48 83 ec 18          	sub    $0x18,%rsp
    9943:	48 8b 05 06 07 02 00 	mov    0x20706(%rip),%rax        # 2a050 <__stack_chk_guard>
    994a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    994f:	31 c0                	xor    %eax,%eax
    9951:	48 89 e2             	mov    %rsp,%rdx
    9954:	e8 7c ff ff ff       	call   98d5 <intf_get_dest_op_untyped>
    9959:	4c 8b 24 24          	mov    (%rsp),%r12
    995d:	48 89 c1             	mov    %rax,%rcx
    9960:	4c 89 e7             	mov    %r12,%rdi
    9963:	e8 17 ff ff ff       	call   987f <intf_object>
    9968:	48 85 c9             	test   %rcx,%rcx
    996b:	74 09                	je     9976 <intf_close+0x47>
    996d:	48 89 c7             	mov    %rax,%rdi
    9970:	89 ee                	mov    %ebp,%esi
    9972:	ff d1                	call   *%rcx
    9974:	eb 07                	jmp    997d <intf_close+0x4e>
    9976:	89 ee                	mov    %ebp,%esi
    9978:	e8 9b ff ff ff       	call   9918 <intf_restart>
    997d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9982:	48 2b 05 c7 06 02 00 	sub    0x206c7(%rip),%rax        # 2a050 <__stack_chk_guard>
    9989:	74 05                	je     9990 <intf_close+0x61>
    998b:	e8 d0 90 ff ff       	call   2a60 <__stack_chk_fail>
    9990:	48 83 c4 18          	add    $0x18,%rsp
    9994:	4c 89 e7             	mov    %r12,%rdi
    9997:	5d                   	pop    %rbp
    9998:	41 5c                	pop    %r12
    999a:	e9 71 fe ff ff       	jmp    9810 <intf_put>

000000000000999f <intf_shutdown>:
    999f:	f3 0f 1e fa          	endbr64 
    99a3:	55                   	push   %rbp
    99a4:	48 83 ec 30          	sub    $0x30,%rsp
    99a8:	48 8b 05 a1 06 02 00 	mov    0x206a1(%rip),%rax        # 2a050 <__stack_chk_guard>
    99af:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    99b4:	48 8d 05 25 cb 01 00 	lea    0x1cb25(%rip),%rax        # 264e0 <null_intf_desc>
    99bb:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    99c0:	48 89 47 10          	mov    %rax,0x10(%rdi)
    99c4:	48 8b 07             	mov    (%rdi),%rax
    99c7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    99cc:	48 8d 05 ed ca 01 00 	lea    0x1caed(%rip),%rax        # 264c0 <null_intf>
    99d3:	48 89 07             	mov    %rax,(%rdi)
    99d6:	48 89 ef             	mov    %rbp,%rdi
    99d9:	e8 51 ff ff ff       	call   992f <intf_close>
    99de:	48 89 ef             	mov    %rbp,%rdi
    99e1:	e8 7d fe ff ff       	call   9863 <intf_unplug>
    99e6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    99eb:	48 2b 05 5e 06 02 00 	sub    0x2065e(%rip),%rax        # 2a050 <__stack_chk_guard>
    99f2:	74 05                	je     99f9 <intf_shutdown+0x5a>
    99f4:	e8 67 90 ff ff       	call   2a60 <__stack_chk_fail>
    99f9:	48 83 c4 30          	add    $0x30,%rsp
    99fd:	5d                   	pop    %rbp
    99fe:	c3                   	ret    

00000000000099ff <intfs_vshutdown>:
    99ff:	f3 0f 1e fa          	endbr64 
    9a03:	55                   	push   %rbp
    9a04:	b9 06 00 00 00       	mov    $0x6,%ecx
    9a09:	89 f5                	mov    %esi,%ebp
    9a0b:	53                   	push   %rbx
    9a0c:	48 89 fb             	mov    %rdi,%rbx
    9a0f:	48 89 de             	mov    %rbx,%rsi
    9a12:	48 83 ec 28          	sub    $0x28,%rsp
    9a16:	48 8b 05 33 06 02 00 	mov    0x20633(%rip),%rax        # 2a050 <__stack_chk_guard>
    9a1d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9a22:	48 89 e0             	mov    %rsp,%rax
    9a25:	48 89 c7             	mov    %rax,%rdi
    9a28:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    9a2a:	48 8d 35 af ca 01 00 	lea    0x1caaf(%rip),%rsi        # 264e0 <null_intf_desc>
    9a31:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    9a36:	8b 14 24             	mov    (%rsp),%edx
    9a39:	83 fa 2f             	cmp    $0x2f,%edx
    9a3c:	77 0d                	ja     9a4b <intfs_vshutdown+0x4c>
    9a3e:	89 d0                	mov    %edx,%eax
    9a40:	83 c2 08             	add    $0x8,%edx
    9a43:	89 14 24             	mov    %edx,(%rsp)
    9a46:	48 01 c8             	add    %rcx,%rax
    9a49:	eb 0e                	jmp    9a59 <intfs_vshutdown+0x5a>
    9a4b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9a50:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9a54:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9a59:	48 8b 00             	mov    (%rax),%rax
    9a5c:	48 85 c0             	test   %rax,%rax
    9a5f:	74 21                	je     9a82 <intfs_vshutdown+0x83>
    9a61:	48 89 70 10          	mov    %rsi,0x10(%rax)
    9a65:	eb cf                	jmp    9a36 <intfs_vshutdown+0x37>
    9a67:	48 8b 43 08          	mov    0x8(%rbx),%rax
    9a6b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9a6f:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    9a73:	48 8b 38             	mov    (%rax),%rdi
    9a76:	48 85 ff             	test   %rdi,%rdi
    9a79:	74 1b                	je     9a96 <intfs_vshutdown+0x97>
    9a7b:	89 ee                	mov    %ebp,%esi
    9a7d:	e8 1d ff ff ff       	call   999f <intf_shutdown>
    9a82:	8b 13                	mov    (%rbx),%edx
    9a84:	83 fa 2f             	cmp    $0x2f,%edx
    9a87:	77 de                	ja     9a67 <intfs_vshutdown+0x68>
    9a89:	89 d0                	mov    %edx,%eax
    9a8b:	83 c2 08             	add    $0x8,%edx
    9a8e:	48 03 43 10          	add    0x10(%rbx),%rax
    9a92:	89 13                	mov    %edx,(%rbx)
    9a94:	eb dd                	jmp    9a73 <intfs_vshutdown+0x74>
    9a96:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9a9b:	48 2b 05 ae 05 02 00 	sub    0x205ae(%rip),%rax        # 2a050 <__stack_chk_guard>
    9aa2:	74 05                	je     9aa9 <intfs_vshutdown+0xaa>
    9aa4:	e8 b7 8f ff ff       	call   2a60 <__stack_chk_fail>
    9aa9:	48 83 c4 28          	add    $0x28,%rsp
    9aad:	5b                   	pop    %rbx
    9aae:	5d                   	pop    %rbp
    9aaf:	c3                   	ret    

0000000000009ab0 <intfs_shutdown>:
    9ab0:	f3 0f 1e fa          	endbr64 
    9ab4:	48 83 ec 58          	sub    $0x58,%rsp
    9ab8:	41 89 fa             	mov    %edi,%r10d
    9abb:	48 8b 05 8e 05 02 00 	mov    0x2058e(%rip),%rax        # 2a050 <__stack_chk_guard>
    9ac2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9ac7:	31 c0                	xor    %eax,%eax
    9ac9:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    9ace:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    9ad3:	48 89 e7             	mov    %rsp,%rdi
    9ad6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9adb:	44 89 d6             	mov    %r10d,%esi
    9ade:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    9ae3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9ae8:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    9aed:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    9af2:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    9af7:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    9afc:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
    9b03:	e8 f7 fe ff ff       	call   99ff <intfs_vshutdown>
    9b08:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9b0d:	48 2b 05 3c 05 02 00 	sub    0x2053c(%rip),%rax        # 2a050 <__stack_chk_guard>
    9b14:	74 05                	je     9b1b <intfs_shutdown+0x6b>
    9b16:	e8 45 8f ff ff       	call   2a60 <__stack_chk_fail>
    9b1b:	48 83 c4 58          	add    $0x58,%rsp
    9b1f:	c3                   	ret    

0000000000009b20 <intfs_vrestart>:
    9b20:	f3 0f 1e fa          	endbr64 
    9b24:	53                   	push   %rbx
    9b25:	48 89 fb             	mov    %rdi,%rbx
    9b28:	41 89 f1             	mov    %esi,%r9d
    9b2b:	b9 06 00 00 00       	mov    $0x6,%ecx
    9b30:	48 89 de             	mov    %rbx,%rsi
    9b33:	48 83 ec 20          	sub    $0x20,%rsp
    9b37:	48 8b 05 12 05 02 00 	mov    0x20512(%rip),%rax        # 2a050 <__stack_chk_guard>
    9b3e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9b43:	31 c0                	xor    %eax,%eax
    9b45:	49 89 e0             	mov    %rsp,%r8
    9b48:	4c 89 c7             	mov    %r8,%rdi
    9b4b:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    9b4d:	44 89 ce             	mov    %r9d,%esi
    9b50:	4c 89 c7             	mov    %r8,%rdi
    9b53:	e8 a7 fe ff ff       	call   99ff <intfs_vshutdown>
    9b58:	8b 13                	mov    (%rbx),%edx
    9b5a:	83 fa 2f             	cmp    $0x2f,%edx
    9b5d:	77 0d                	ja     9b6c <intfs_vrestart+0x4c>
    9b5f:	89 d0                	mov    %edx,%eax
    9b61:	83 c2 08             	add    $0x8,%edx
    9b64:	48 03 43 10          	add    0x10(%rbx),%rax
    9b68:	89 13                	mov    %edx,(%rbx)
    9b6a:	eb 0c                	jmp    9b78 <intfs_vrestart+0x58>
    9b6c:	48 8b 43 08          	mov    0x8(%rbx),%rax
    9b70:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9b74:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    9b78:	48 8b 00             	mov    (%rax),%rax
    9b7b:	48 85 c0             	test   %rax,%rax
    9b7e:	74 0a                	je     9b8a <intfs_vrestart+0x6a>
    9b80:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9b84:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9b88:	eb ce                	jmp    9b58 <intfs_vrestart+0x38>
    9b8a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9b8f:	48 2b 05 ba 04 02 00 	sub    0x204ba(%rip),%rax        # 2a050 <__stack_chk_guard>
    9b96:	74 05                	je     9b9d <intfs_vrestart+0x7d>
    9b98:	e8 c3 8e ff ff       	call   2a60 <__stack_chk_fail>
    9b9d:	48 83 c4 20          	add    $0x20,%rsp
    9ba1:	5b                   	pop    %rbx
    9ba2:	c3                   	ret    

0000000000009ba3 <intfs_restart>:
    9ba3:	f3 0f 1e fa          	endbr64 
    9ba7:	48 83 ec 58          	sub    $0x58,%rsp
    9bab:	41 89 fa             	mov    %edi,%r10d
    9bae:	48 8b 05 9b 04 02 00 	mov    0x2049b(%rip),%rax        # 2a050 <__stack_chk_guard>
    9bb5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9bba:	31 c0                	xor    %eax,%eax
    9bbc:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    9bc1:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    9bc6:	48 89 e7             	mov    %rsp,%rdi
    9bc9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9bce:	44 89 d6             	mov    %r10d,%esi
    9bd1:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    9bd6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9bdb:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    9be0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    9be5:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    9bea:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    9bef:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
    9bf6:	e8 25 ff ff ff       	call   9b20 <intfs_vrestart>
    9bfb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9c00:	48 2b 05 49 04 02 00 	sub    0x20449(%rip),%rax        # 2a050 <__stack_chk_guard>
    9c07:	74 05                	je     9c0e <intfs_restart+0x6b>
    9c09:	e8 52 8e ff ff       	call   2a60 <__stack_chk_fail>
    9c0e:	48 83 c4 58          	add    $0x58,%rsp
    9c12:	c3                   	ret    

0000000000009c13 <intf_poke>:
    9c13:	f3 0f 1e fa          	endbr64 
    9c17:	55                   	push   %rbp
    9c18:	48 83 ec 10          	sub    $0x10,%rsp
    9c1c:	48 8b 05 2d 04 02 00 	mov    0x2042d(%rip),%rax        # 2a050 <__stack_chk_guard>
    9c23:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9c28:	31 c0                	xor    %eax,%eax
    9c2a:	48 89 e2             	mov    %rsp,%rdx
    9c2d:	e8 a3 fc ff ff       	call   98d5 <intf_get_dest_op_untyped>
    9c32:	48 8b 2c 24          	mov    (%rsp),%rbp
    9c36:	48 85 c0             	test   %rax,%rax
    9c39:	74 10                	je     9c4b <intf_poke+0x38>
    9c3b:	48 89 ef             	mov    %rbp,%rdi
    9c3e:	48 89 c1             	mov    %rax,%rcx
    9c41:	e8 39 fc ff ff       	call   987f <intf_object>
    9c46:	48 89 c7             	mov    %rax,%rdi
    9c49:	ff d1                	call   *%rcx
    9c4b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9c50:	48 2b 05 f9 03 02 00 	sub    0x203f9(%rip),%rax        # 2a050 <__stack_chk_guard>
    9c57:	74 05                	je     9c5e <intf_poke+0x4b>
    9c59:	e8 02 8e ff ff       	call   2a60 <__stack_chk_fail>
    9c5e:	48 83 c4 10          	add    $0x10,%rsp
    9c62:	48 89 ef             	mov    %rbp,%rdi
    9c65:	5d                   	pop    %rbp
    9c66:	e9 a5 fb ff ff       	jmp    9810 <intf_put>

0000000000009c6b <malloc_dma_offset>:
    9c6b:	53                   	push   %rbx
    9c6c:	48 89 fb             	mov    %rdi,%rbx
    9c6f:	e8 89 28 00 00       	call   c4fd <alloc_memblock>
    9c74:	49 89 c0             	mov    %rax,%r8
    9c77:	48 85 c0             	test   %rax,%rax
    9c7a:	74 0f                	je     9c8b <malloc_dma_offset+0x20>
    9c7c:	48 85 db             	test   %rbx,%rbx
    9c7f:	74 0a                	je     9c8b <malloc_dma_offset+0x20>
    9c81:	48 89 c7             	mov    %rax,%rdi
    9c84:	48 89 d9             	mov    %rbx,%rcx
    9c87:	31 c0                	xor    %eax,%eax
    9c89:	f3 aa                	rep stos %al,%es:(%rdi)
    9c8b:	4c 89 c0             	mov    %r8,%rax
    9c8e:	5b                   	pop    %rbx
    9c8f:	c3                   	ret    

0000000000009c90 <alloc_iob_raw>:
    9c90:	f3 0f 1e fa          	endbr64 
    9c94:	b8 37 00 00 00       	mov    $0x37,%eax
    9c99:	48 39 c6             	cmp    %rax,%rsi
    9c9c:	48 0f 43 c6          	cmovae %rsi,%rax
    9ca0:	48 89 c1             	mov    %rax,%rcx
    9ca3:	48 ff c9             	dec    %rcx
    9ca6:	48 0f bd c9          	bsr    %rcx,%rcx
    9caa:	ff c1                	inc    %ecx
    9cac:	83 f9 3f             	cmp    $0x3f,%ecx
    9caf:	0f 87 94 00 00 00    	ja     9d49 <alloc_iob_raw+0xb9>
    9cb5:	41 55                	push   %r13
    9cb7:	be 01 00 00 00       	mov    $0x1,%esi
    9cbc:	55                   	push   %rbp
    9cbd:	48 d3 e6             	shl    %cl,%rsi
    9cc0:	48 89 fd             	mov    %rdi,%rbp
    9cc3:	53                   	push   %rbx
    9cc4:	48 8d 46 c9          	lea    -0x37(%rsi),%rax
    9cc8:	48 83 ec 10          	sub    $0x10,%rsp
    9ccc:	48 39 f8             	cmp    %rdi,%rax
    9ccf:	72 26                	jb     9cf7 <alloc_iob_raw+0x67>
    9cd1:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    9cd5:	48 f7 d8             	neg    %rax
    9cd8:	83 e0 07             	and    $0x7,%eax
    9cdb:	48 01 c5             	add    %rax,%rbp
    9cde:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    9ce2:	e8 84 ff ff ff       	call   9c6b <malloc_dma_offset>
    9ce7:	48 89 c3             	mov    %rax,%rbx
    9cea:	48 8d 04 28          	lea    (%rax,%rbp,1),%rax
    9cee:	48 85 db             	test   %rbx,%rbx
    9cf1:	75 3a                	jne    9d2d <alloc_iob_raw+0x9d>
    9cf3:	31 c0                	xor    %eax,%eax
    9cf5:	eb 49                	jmp    9d40 <alloc_iob_raw+0xb0>
    9cf7:	e8 6f ff ff ff       	call   9c6b <malloc_dma_offset>
    9cfc:	49 89 c5             	mov    %rax,%r13
    9cff:	48 89 c3             	mov    %rax,%rbx
    9d02:	48 85 c0             	test   %rax,%rax
    9d05:	74 ec                	je     9cf3 <alloc_iob_raw+0x63>
    9d07:	bf 30 00 00 00       	mov    $0x30,%edi
    9d0c:	e8 04 2a 00 00       	call   c715 <malloc>
    9d11:	48 85 c0             	test   %rax,%rax
    9d14:	75 17                	jne    9d2d <alloc_iob_raw+0x9d>
    9d16:	48 89 ee             	mov    %rbp,%rsi
    9d19:	4c 89 ef             	mov    %r13,%rdi
    9d1c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9d21:	e8 b0 28 00 00       	call   c5d6 <free_memblock>
    9d26:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9d2b:	eb 13                	jmp    9d40 <alloc_iob_raw+0xb0>
    9d2d:	48 89 58 20          	mov    %rbx,0x20(%rax)
    9d31:	48 89 58 18          	mov    %rbx,0x18(%rax)
    9d35:	48 89 58 10          	mov    %rbx,0x10(%rax)
    9d39:	48 01 eb             	add    %rbp,%rbx
    9d3c:	48 89 58 28          	mov    %rbx,0x28(%rax)
    9d40:	48 83 c4 10          	add    $0x10,%rsp
    9d44:	5b                   	pop    %rbx
    9d45:	5d                   	pop    %rbp
    9d46:	41 5d                	pop    %r13
    9d48:	c3                   	ret    
    9d49:	31 c0                	xor    %eax,%eax
    9d4b:	c3                   	ret    

0000000000009d4c <alloc_iob>:
    9d4c:	f3 0f 1e fa          	endbr64 
    9d50:	b8 80 00 00 00       	mov    $0x80,%eax
    9d55:	48 39 c7             	cmp    %rax,%rdi
    9d58:	48 0f 42 f8          	cmovb  %rax,%rdi
    9d5c:	31 d2                	xor    %edx,%edx
    9d5e:	48 89 fe             	mov    %rdi,%rsi
    9d61:	e9 2a ff ff ff       	jmp    9c90 <alloc_iob_raw>

0000000000009d66 <free_iob>:
    9d66:	f3 0f 1e fa          	endbr64 
    9d6a:	48 85 ff             	test   %rdi,%rdi
    9d6d:	74 2f                	je     9d9e <free_iob+0x38>
    9d6f:	55                   	push   %rbp
    9d70:	48 8b 47 28          	mov    0x28(%rdi),%rax
    9d74:	48 89 fd             	mov    %rdi,%rbp
    9d77:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9d7b:	48 89 c6             	mov    %rax,%rsi
    9d7e:	48 29 fe             	sub    %rdi,%rsi
    9d81:	48 39 c5             	cmp    %rax,%rbp
    9d84:	75 0a                	jne    9d90 <free_iob+0x2a>
    9d86:	48 83 c6 30          	add    $0x30,%rsi
    9d8a:	5d                   	pop    %rbp
    9d8b:	e9 46 28 00 00       	jmp    c5d6 <free_memblock>
    9d90:	e8 41 28 00 00       	call   c5d6 <free_memblock>
    9d95:	48 89 ef             	mov    %rbp,%rdi
    9d98:	5d                   	pop    %rbp
    9d99:	e9 84 29 00 00       	jmp    c722 <free>
    9d9e:	c3                   	ret    

0000000000009d9f <iob_ensure_headroom>:
    9d9f:	f3 0f 1e fa          	endbr64 
    9da3:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9da7:	48 2b 47 10          	sub    0x10(%rdi),%rax
    9dab:	45 31 c0             	xor    %r8d,%r8d
    9dae:	48 39 c6             	cmp    %rax,%rsi
    9db1:	76 06                	jbe    9db9 <iob_ensure_headroom+0x1a>
    9db3:	41 b8 77 df fb d5    	mov    $0xd5fbdf77,%r8d
    9db9:	44 89 c0             	mov    %r8d,%eax
    9dbc:	c3                   	ret    

0000000000009dbd <ipv4_route>:
    9dbd:	48 8b 05 8c c7 01 00 	mov    0x1c78c(%rip),%rax        # 26550 <ipv4_miniroutes>
    9dc4:	4c 8d 05 85 c7 01 00 	lea    0x1c785(%rip),%r8        # 26550 <ipv4_miniroutes>
    9dcb:	4c 39 c0             	cmp    %r8,%rax
    9dce:	74 41                	je     9e11 <ipv4_route+0x54>
    9dd0:	48 8b 48 10          	mov    0x10(%rax),%rcx
    9dd4:	f6 81 80 00 00 00 01 	testb  $0x1,0x80(%rcx)
    9ddb:	74 2f                	je     9e0c <ipv4_route+0x4f>
    9ddd:	8b 16                	mov    (%rsi),%edx
    9ddf:	41 89 d1             	mov    %edx,%r9d
    9de2:	41 81 e1 f0 00 00 00 	and    $0xf0,%r9d
    9de9:	41 81 f9 e0 00 00 00 	cmp    $0xe0,%r9d
    9df0:	75 06                	jne    9df8 <ipv4_route+0x3b>
    9df2:	3b 79 30             	cmp    0x30(%rcx),%edi
    9df5:	75 15                	jne    9e0c <ipv4_route+0x4f>
    9df7:	c3                   	ret    
    9df8:	33 50 18             	xor    0x18(%rax),%edx
    9dfb:	23 50 1c             	and    0x1c(%rax),%edx
    9dfe:	74 13                	je     9e13 <ipv4_route+0x56>
    9e00:	83 78 20 00          	cmpl   $0x0,0x20(%rax)
    9e04:	74 06                	je     9e0c <ipv4_route+0x4f>
    9e06:	8b 50 20             	mov    0x20(%rax),%edx
    9e09:	89 16                	mov    %edx,(%rsi)
    9e0b:	c3                   	ret    
    9e0c:	48 8b 00             	mov    (%rax),%rax
    9e0f:	eb ba                	jmp    9dcb <ipv4_route+0xe>
    9e11:	31 c0                	xor    %eax,%eax
    9e13:	c3                   	ret    

0000000000009e14 <ipv4_netdev>:
    9e14:	f3 0f 1e fa          	endbr64 
    9e18:	48 83 ec 18          	sub    $0x18,%rsp
    9e1c:	48 8b 05 2d 02 02 00 	mov    0x2022d(%rip),%rax        # 2a050 <__stack_chk_guard>
    9e23:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9e28:	8b 47 08             	mov    0x8(%rdi),%eax
    9e2b:	0f b7 7f 06          	movzwl 0x6(%rdi),%edi
    9e2f:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    9e34:	89 44 24 04          	mov    %eax,0x4(%rsp)
    9e38:	e8 80 ff ff ff       	call   9dbd <ipv4_route>
    9e3d:	48 85 c0             	test   %rax,%rax
    9e40:	74 04                	je     9e46 <ipv4_netdev+0x32>
    9e42:	48 8b 40 10          	mov    0x10(%rax),%rax
    9e46:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9e4b:	48 2b 15 fe 01 02 00 	sub    0x201fe(%rip),%rdx        # 2a050 <__stack_chk_guard>
    9e52:	74 05                	je     9e59 <ipv4_netdev+0x45>
    9e54:	e8 07 8c ff ff       	call   2a60 <__stack_chk_fail>
    9e59:	48 83 c4 18          	add    $0x18,%rsp
    9e5d:	c3                   	ret    

0000000000009e5e <ipv4_is_fragment>:
    9e5e:	f3 0f 1e fa          	endbr64 
    9e62:	48 8b 47 10          	mov    0x10(%rdi),%rax
    9e66:	48 8b 4e 18          	mov    0x18(%rsi),%rcx
    9e6a:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9e6e:	31 c0                	xor    %eax,%eax
    9e70:	8b 72 0c             	mov    0xc(%rdx),%esi
    9e73:	39 71 0c             	cmp    %esi,0xc(%rcx)
    9e76:	75 0e                	jne    9e86 <ipv4_is_fragment+0x28>
    9e78:	66 8b 42 04          	mov    0x4(%rdx),%ax
    9e7c:	66 39 41 04          	cmp    %ax,0x4(%rcx)
    9e80:	0f 94 c0             	sete   %al
    9e83:	0f b6 c0             	movzbl %al,%eax
    9e86:	c3                   	ret    

0000000000009e87 <ipv4_more_fragments>:
    9e87:	f3 0f 1e fa          	endbr64 
    9e8b:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9e8f:	66 8b 40 06          	mov    0x6(%rax),%ax
    9e93:	83 e0 20             	and    $0x20,%eax
    9e96:	c3                   	ret    

0000000000009e97 <ipv4_has_addr>:
    9e97:	48 8b 05 b2 c6 01 00 	mov    0x1c6b2(%rip),%rax        # 26550 <ipv4_miniroutes>
    9e9e:	48 8d 15 ab c6 01 00 	lea    0x1c6ab(%rip),%rdx        # 26550 <ipv4_miniroutes>
    9ea5:	48 39 d0             	cmp    %rdx,%rax
    9ea8:	74 10                	je     9eba <ipv4_has_addr+0x23>
    9eaa:	48 39 78 10          	cmp    %rdi,0x10(%rax)
    9eae:	75 05                	jne    9eb5 <ipv4_has_addr+0x1e>
    9eb0:	39 70 18             	cmp    %esi,0x18(%rax)
    9eb3:	74 08                	je     9ebd <ipv4_has_addr+0x26>
    9eb5:	48 8b 00             	mov    (%rax),%rax
    9eb8:	eb eb                	jmp    9ea5 <ipv4_has_addr+0xe>
    9eba:	31 c0                	xor    %eax,%eax
    9ebc:	c3                   	ret    
    9ebd:	b8 01 00 00 00       	mov    $0x1,%eax
    9ec2:	c3                   	ret    

0000000000009ec3 <ipv4_fragment_offset>:
    9ec3:	f3 0f 1e fa          	endbr64 
    9ec7:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9ecb:	66 8b 40 06          	mov    0x6(%rax),%ax
    9ecf:	86 c4                	xchg   %al,%ah
    9ed1:	c1 e0 03             	shl    $0x3,%eax
    9ed4:	25 f8 ff 00 00       	and    $0xfff8,%eax
    9ed9:	c3                   	ret    

0000000000009eda <ipv4_pshdr_chksum>:
    9eda:	48 83 ec 28          	sub    $0x28,%rsp
    9ede:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    9ee2:	48 8b 05 67 01 02 00 	mov    0x20167(%rip),%rax        # 2a050 <__stack_chk_guard>
    9ee9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9eee:	31 c0                	xor    %eax,%eax
    9ef0:	4c 8d 44 24 0c       	lea    0xc(%rsp),%r8
    9ef5:	8b 41 0c             	mov    0xc(%rcx),%eax
    9ef8:	8a 11                	mov    (%rcx),%dl
    9efa:	c6 44 24 14 00       	movb   $0x0,0x14(%rsp)
    9eff:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9f03:	8b 41 10             	mov    0x10(%rcx),%eax
    9f06:	83 e2 0f             	and    $0xf,%edx
    9f09:	c1 e2 02             	shl    $0x2,%edx
    9f0c:	89 44 24 10          	mov    %eax,0x10(%rsp)
    9f10:	8a 41 09             	mov    0x9(%rcx),%al
    9f13:	88 44 24 15          	mov    %al,0x15(%rsp)
    9f17:	48 8b 47 20          	mov    0x20(%rdi),%rax
    9f1b:	0f b7 fe             	movzwl %si,%edi
    9f1e:	4c 89 c6             	mov    %r8,%rsi
    9f21:	48 29 c8             	sub    %rcx,%rax
    9f24:	29 d0                	sub    %edx,%eax
    9f26:	ba 0c 00 00 00       	mov    $0xc,%edx
    9f2b:	86 c4                	xchg   %al,%ah
    9f2d:	66 89 44 24 16       	mov    %ax,0x16(%rsp)
    9f32:	e8 e7 d4 00 00       	call   1741e <tcpip_continue_chksum>
    9f37:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    9f3c:	48 2b 15 0d 01 02 00 	sub    0x2010d(%rip),%rdx        # 2a050 <__stack_chk_guard>
    9f43:	74 05                	je     9f4a <ipv4_pshdr_chksum+0x70>
    9f45:	e8 16 8b ff ff       	call   2a60 <__stack_chk_fail>
    9f4a:	48 83 c4 28          	add    $0x28,%rsp
    9f4e:	c3                   	ret    

0000000000009f4f <add_ipv4_miniroute>:
    9f4f:	f3 0f 1e fa          	endbr64 
    9f53:	41 56                	push   %r14
    9f55:	41 89 f6             	mov    %esi,%r14d
    9f58:	41 55                	push   %r13
    9f5a:	41 89 d5             	mov    %edx,%r13d
    9f5d:	41 54                	push   %r12
    9f5f:	49 89 fc             	mov    %rdi,%r12
    9f62:	bf 28 00 00 00       	mov    $0x28,%edi
    9f67:	55                   	push   %rbp
    9f68:	53                   	push   %rbx
    9f69:	89 cb                	mov    %ecx,%ebx
    9f6b:	e8 a5 27 00 00       	call   c715 <malloc>
    9f70:	48 85 c0             	test   %rax,%rax
    9f73:	75 07                	jne    9f7c <add_ipv4_miniroute+0x2d>
    9f75:	b8 77 9f fa ce       	mov    $0xcefa9f77,%eax
    9f7a:	eb 36                	jmp    9fb2 <add_ipv4_miniroute+0x63>
    9f7c:	4c 89 e7             	mov    %r12,%rdi
    9f7f:	48 89 c5             	mov    %rax,%rbp
    9f82:	e8 87 5f 00 00       	call   ff0e <ref_increment>
    9f87:	85 db                	test   %ebx,%ebx
    9f89:	4c 89 65 10          	mov    %r12,0x10(%rbp)
    9f8d:	48 89 ef             	mov    %rbp,%rdi
    9f90:	44 89 75 18          	mov    %r14d,0x18(%rbp)
    9f94:	48 8d 35 b5 c5 01 00 	lea    0x1c5b5(%rip),%rsi        # 26550 <ipv4_miniroutes>
    9f9b:	44 89 6d 1c          	mov    %r13d,0x1c(%rbp)
    9f9f:	89 5d 20             	mov    %ebx,0x20(%rbp)
    9fa2:	74 07                	je     9fab <add_ipv4_miniroute+0x5c>
    9fa4:	e8 fe 21 00 00       	call   c1a7 <extern_list_add_tail>
    9fa9:	eb 05                	jmp    9fb0 <add_ipv4_miniroute+0x61>
    9fab:	e8 e1 21 00 00       	call   c191 <extern_list_add>
    9fb0:	31 c0                	xor    %eax,%eax
    9fb2:	5b                   	pop    %rbx
    9fb3:	5d                   	pop    %rbp
    9fb4:	41 5c                	pop    %r12
    9fb6:	41 5d                	pop    %r13
    9fb8:	41 5e                	pop    %r14
    9fba:	c3                   	ret    

0000000000009fbb <ipv4_gratuitous_arp>:
    9fbb:	f3 0f 1e fa          	endbr64 
    9fbf:	48 83 ec 18          	sub    $0x18,%rsp
    9fc3:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    9fc7:	e8 cb fe ff ff       	call   9e97 <ipv4_has_addr>
    9fcc:	85 c0                	test   %eax,%eax
    9fce:	75 14                	jne    9fe4 <ipv4_gratuitous_arp+0x29>
    9fd0:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    9fd5:	48 8d 35 cc ed 01 00 	lea    0x1edcc(%rip),%rsi        # 28da8 <ipv4_protocol>
    9fdc:	48 89 d1             	mov    %rdx,%rcx
    9fdf:	e8 a9 de 00 00       	call   17e8d <arp_tx_request>
    9fe4:	31 c0                	xor    %eax,%eax
    9fe6:	48 83 c4 18          	add    $0x18,%rsp
    9fea:	c3                   	ret    

0000000000009feb <ipv4_settings>:
    9feb:	41 55                	push   %r13
    9fed:	41 54                	push   %r12
    9fef:	4c 8d 25 0a ca 01 00 	lea    0x1ca0a(%rip),%r12        # 26a00 <net_devices>
    9ff6:	55                   	push   %rbp
    9ff7:	48 89 fd             	mov    %rdi,%rbp
    9ffa:	53                   	push   %rbx
    9ffb:	48 83 ec 28          	sub    $0x28,%rsp
    9fff:	48 8b 05 4a 00 02 00 	mov    0x2004a(%rip),%rax        # 2a050 <__stack_chk_guard>
    a006:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    a00b:	31 c0                	xor    %eax,%eax
    a00d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
    a014:	00 
    a015:	48 8b 05 e4 c9 01 00 	mov    0x1c9e4(%rip),%rax        # 26a00 <net_devices>
    a01c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
    a023:	00 
    a024:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    a028:	48 8d 43 10          	lea    0x10(%rbx),%rax
    a02c:	4c 39 e0             	cmp    %r12,%rax
    a02f:	0f 84 be 00 00 00    	je     a0f3 <ipv4_settings+0x108>
    a035:	4c 8d ab 68 01 00 00 	lea    0x168(%rbx),%r13
    a03c:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    a041:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    a048:	00 
    a049:	48 8d 35 c0 f3 01 00 	lea    0x1f3c0(%rip),%rsi        # 29410 <ip_setting>
    a050:	4c 89 ef             	mov    %r13,%rdi
    a053:	e8 e0 7e 00 00       	call   11f38 <fetch_ipv4_setting>
    a058:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
    a05d:	75 0a                	jne    a069 <ipv4_settings+0x7e>
    a05f:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    a063:	48 83 eb 10          	sub    $0x10,%rbx
    a067:	eb bf                	jmp    a028 <ipv4_settings+0x3d>
    a069:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    a06e:	48 8d 35 c3 f3 01 00 	lea    0x1f3c3(%rip),%rsi        # 29438 <netmask_setting>
    a075:	4c 89 ef             	mov    %r13,%rdi
    a078:	e8 bb 7e 00 00       	call   11f38 <fetch_ipv4_setting>
    a07d:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
    a082:	75 40                	jne    a0c4 <ipv4_settings+0xd9>
    a084:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    a088:	a8 80                	test   $0x80,%al
    a08a:	75 0a                	jne    a096 <ipv4_settings+0xab>
    a08c:	c7 44 24 10 ff 00 00 	movl   $0xff,0x10(%rsp)
    a093:	00 
    a094:	eb 2e                	jmp    a0c4 <ipv4_settings+0xd9>
    a096:	89 c2                	mov    %eax,%edx
    a098:	81 e2 c0 00 00 00    	and    $0xc0,%edx
    a09e:	81 fa 80 00 00 00    	cmp    $0x80,%edx
    a0a4:	75 0a                	jne    a0b0 <ipv4_settings+0xc5>
    a0a6:	c7 44 24 10 ff ff 00 	movl   $0xffff,0x10(%rsp)
    a0ad:	00 
    a0ae:	eb 14                	jmp    a0c4 <ipv4_settings+0xd9>
    a0b0:	25 e0 00 00 00       	and    $0xe0,%eax
    a0b5:	3d c0 00 00 00       	cmp    $0xc0,%eax
    a0ba:	75 08                	jne    a0c4 <ipv4_settings+0xd9>
    a0bc:	c7 44 24 10 ff ff ff 	movl   $0xffffff,0x10(%rsp)
    a0c3:	00 
    a0c4:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
    a0c9:	48 8d 35 18 f3 01 00 	lea    0x1f318(%rip),%rsi        # 293e8 <gateway_setting>
    a0d0:	4c 89 ef             	mov    %r13,%rdi
    a0d3:	e8 60 7e 00 00       	call   11f38 <fetch_ipv4_setting>
    a0d8:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
    a0dc:	8b 54 24 10          	mov    0x10(%rsp),%edx
    a0e0:	48 89 df             	mov    %rbx,%rdi
    a0e3:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    a0e7:	ff d5                	call   *%rbp
    a0e9:	85 c0                	test   %eax,%eax
    a0eb:	0f 84 6e ff ff ff    	je     a05f <ipv4_settings+0x74>
    a0f1:	eb 02                	jmp    a0f5 <ipv4_settings+0x10a>
    a0f3:	31 c0                	xor    %eax,%eax
    a0f5:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a0fa:	48 2b 15 4f ff 01 00 	sub    0x1ff4f(%rip),%rdx        # 2a050 <__stack_chk_guard>
    a101:	74 05                	je     a108 <ipv4_settings+0x11d>
    a103:	e8 58 89 ff ff       	call   2a60 <__stack_chk_fail>
    a108:	48 83 c4 28          	add    $0x28,%rsp
    a10c:	5b                   	pop    %rbx
    a10d:	5d                   	pop    %rbp
    a10e:	41 5c                	pop    %r12
    a110:	41 5d                	pop    %r13
    a112:	c3                   	ret    

000000000000a113 <ipv4_create_routes>:
    a113:	f3 0f 1e fa          	endbr64 
    a117:	41 54                	push   %r12
    a119:	48 8d 3d 9b fe ff ff 	lea    -0x165(%rip),%rdi        # 9fbb <ipv4_gratuitous_arp>
    a120:	4c 8d 25 29 c4 01 00 	lea    0x1c429(%rip),%r12        # 26550 <ipv4_miniroutes>
    a127:	55                   	push   %rbp
    a128:	53                   	push   %rbx
    a129:	e8 bd fe ff ff       	call   9feb <ipv4_settings>
    a12e:	48 8b 2d 1b c4 01 00 	mov    0x1c41b(%rip),%rbp        # 26550 <ipv4_miniroutes>
    a135:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
    a139:	4c 39 e5             	cmp    %r12,%rbp
    a13c:	74 28                	je     a166 <ipv4_create_routes+0x53>
    a13e:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    a142:	e8 d3 5d 00 00       	call   ff1a <ref_decrement>
    a147:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    a14b:	48 8b 45 08          	mov    0x8(%rbp),%rax
    a14f:	48 89 ef             	mov    %rbp,%rdi
    a152:	48 89 dd             	mov    %rbx,%rbp
    a155:	48 89 42 08          	mov    %rax,0x8(%rdx)
    a159:	48 89 10             	mov    %rdx,(%rax)
    a15c:	e8 c1 25 00 00       	call   c722 <free>
    a161:	48 8b 1b             	mov    (%rbx),%rbx
    a164:	eb d3                	jmp    a139 <ipv4_create_routes+0x26>
    a166:	5b                   	pop    %rbx
    a167:	48 8d 3d e1 fd ff ff 	lea    -0x21f(%rip),%rdi        # 9f4f <add_ipv4_miniroute>
    a16e:	5d                   	pop    %rbp
    a16f:	41 5c                	pop    %r12
    a171:	e9 75 fe ff ff       	jmp    9feb <ipv4_settings>

000000000000a176 <ipv4_arp_check>:
    a176:	f3 0f 1e fa          	endbr64 
    a17a:	8b 36                	mov    (%rsi),%esi
    a17c:	e8 16 fd ff ff       	call   9e97 <ipv4_has_addr>
    a181:	41 89 c0             	mov    %eax,%r8d
    a184:	31 c0                	xor    %eax,%eax
    a186:	45 85 c0             	test   %r8d,%r8d
    a189:	75 05                	jne    a190 <ipv4_arp_check+0x1a>
    a18b:	b8 72 9f fa d2       	mov    $0xd2fa9f72,%eax
    a190:	c3                   	ret    

000000000000a191 <ipv4_tx>:
    a191:	f3 0f 1e fa          	endbr64 
    a195:	41 57                	push   %r15
    a197:	41 56                	push   %r14
    a199:	49 89 f6             	mov    %rsi,%r14
    a19c:	41 55                	push   %r13
    a19e:	4d 89 c5             	mov    %r8,%r13
    a1a1:	41 54                	push   %r12
    a1a3:	55                   	push   %rbp
    a1a4:	48 89 fd             	mov    %rdi,%rbp
    a1a7:	53                   	push   %rbx
    a1a8:	48 83 ec 38          	sub    $0x38,%rsp
    a1ac:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
    a1b0:	48 8b 05 99 fe 01 00 	mov    0x1fe99(%rip),%rax        # 2a050 <__stack_chk_guard>
    a1b7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    a1bc:	31 c0                	xor    %eax,%eax
    a1be:	4c 8d 63 ec          	lea    -0x14(%rbx),%r12
    a1c2:	4c 89 67 18          	mov    %r12,0x18(%rdi)
    a1c6:	4c 89 e7             	mov    %r12,%rdi
    a1c9:	48 ff 05 20 fb 01 00 	incq   0x1fb20(%rip)        # 29cf0 <ipv4_stats+0x50>
    a1d0:	ab                   	stos   %eax,%es:(%rdi)
    a1d1:	ab                   	stos   %eax,%es:(%rdi)
    a1d2:	ab                   	stos   %eax,%es:(%rdi)
    a1d3:	ab                   	stos   %eax,%es:(%rdi)
    a1d4:	ab                   	stos   %eax,%es:(%rdi)
    a1d5:	c6 43 ec 45          	movb   $0x45,-0x14(%rbx)
    a1d9:	c6 43 ed 00          	movb   $0x0,-0x13(%rbx)
    a1dd:	48 8b 45 20          	mov    0x20(%rbp),%rax
    a1e1:	48 2b 45 18          	sub    0x18(%rbp),%rax
    a1e5:	c6 43 f4 40          	movb   $0x40,-0xc(%rbx)
    a1e9:	86 c4                	xchg   %al,%ah
    a1eb:	66 89 43 ee          	mov    %ax,-0x12(%rbx)
    a1ef:	8a 46 12             	mov    0x12(%rsi),%al
    a1f2:	88 43 f5             	mov    %al,-0xb(%rbx)
    a1f5:	8b 41 08             	mov    0x8(%rcx),%eax
    a1f8:	89 43 fc             	mov    %eax,-0x4(%rbx)
    a1fb:	89 44 24 10          	mov    %eax,0x10(%rsp)
    a1ff:	48 85 d2             	test   %rdx,%rdx
    a202:	74 06                	je     a20a <ipv4_tx+0x79>
    a204:	8b 42 08             	mov    0x8(%rdx),%eax
    a207:	89 43 f8             	mov    %eax,-0x8(%rbx)
    a20a:	83 7c 24 10 ff       	cmpl   $0xffffffff,0x10(%rsp)
    a20f:	75 05                	jne    a216 <ipv4_tx+0x85>
    a211:	45 31 ff             	xor    %r15d,%r15d
    a214:	eb 2b                	jmp    a241 <ipv4_tx+0xb0>
    a216:	0f b7 79 06          	movzwl 0x6(%rcx),%edi
    a21a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    a21f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    a224:	e8 94 fb ff ff       	call   9dbd <ipv4_route>
    a229:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    a22e:	48 85 c0             	test   %rax,%rax
    a231:	74 de                	je     a211 <ipv4_tx+0x80>
    a233:	8b 50 18             	mov    0x18(%rax),%edx
    a236:	44 8b 78 1c          	mov    0x1c(%rax),%r15d
    a23a:	4c 8b 68 10          	mov    0x10(%rax),%r13
    a23e:	89 53 f8             	mov    %edx,-0x8(%rbx)
    a241:	4d 85 ed             	test   %r13,%r13
    a244:	75 11                	jne    a257 <ipv4_tx+0xc6>
    a246:	48 ff 05 ab fa 01 00 	incq   0x1faab(%rip)        # 29cf8 <ipv4_stats+0x58>
    a24d:	b8 70 9f fa d7       	mov    $0xd7fa9f70,%eax
    a252:	e9 13 01 00 00       	jmp    a36a <ipv4_tx+0x1d9>
    a257:	8a 05 d3 fa 01 00    	mov    0x1fad3(%rip),%al        # 29d30 <next_ident_high>
    a25d:	8d 50 01             	lea    0x1(%rax),%edx
    a260:	41 8b 85 40 01 00 00 	mov    0x140(%r13),%eax
    a267:	88 15 c3 fa 01 00    	mov    %dl,0x1fac3(%rip)        # 29d30 <next_ident_high>
    a26d:	c1 e2 08             	shl    $0x8,%edx
    a270:	83 e0 0f             	and    $0xf,%eax
    a273:	09 d0                	or     %edx,%eax
    a275:	41 8b 95 44 01 00 00 	mov    0x144(%r13),%edx
    a27c:	c1 e2 04             	shl    $0x4,%edx
    a27f:	0f b6 d2             	movzbl %dl,%edx
    a282:	09 d0                	or     %edx,%eax
    a284:	86 c4                	xchg   %al,%ah
    a286:	66 89 43 f0          	mov    %ax,-0x10(%rbx)
    a28a:	4d 85 c9             	test   %r9,%r9
    a28d:	74 27                	je     a2b6 <ipv4_tx+0x125>
    a28f:	41 0f b7 31          	movzwl (%r9),%esi
    a293:	48 89 ef             	mov    %rbp,%rdi
    a296:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    a29b:	e8 3a fc ff ff       	call   9eda <ipv4_pshdr_chksum>
    a2a0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    a2a5:	66 41 89 01          	mov    %ax,(%r9)
    a2a9:	66 85 c0             	test   %ax,%ax
    a2ac:	75 08                	jne    a2b6 <ipv4_tx+0x125>
    a2ae:	41 8b 46 10          	mov    0x10(%r14),%eax
    a2b2:	66 41 89 01          	mov    %ax,(%r9)
    a2b6:	be 14 00 00 00       	mov    $0x14,%esi
    a2bb:	4c 89 e7             	mov    %r12,%rdi
    a2be:	e8 02 ad 00 00       	call   14fc5 <tcpip_chksum>
    a2c3:	66 89 43 f6          	mov    %ax,-0xa(%rbx)
    a2c7:	8b 44 24 10          	mov    0x10(%rsp),%eax
    a2cb:	41 09 c7             	or     %eax,%r15d
    a2ce:	41 ff c7             	inc    %r15d
    a2d1:	75 0d                	jne    a2e0 <ipv4_tx+0x14f>
    a2d3:	48 ff 05 4e fa 01 00 	incq   0x1fa4e(%rip)        # 29d28 <ipv4_stats+0x88>
    a2da:	49 8b 4d 78          	mov    0x78(%r13),%rcx
    a2de:	eb 35                	jmp    a315 <ipv4_tx+0x184>
    a2e0:	25 f0 00 00 00       	and    $0xf0,%eax
    a2e5:	31 c9                	xor    %ecx,%ecx
    a2e7:	3d e0 00 00 00       	cmp    $0xe0,%eax
    a2ec:	75 27                	jne    a315 <ipv4_tx+0x184>
    a2ee:	49 8b 45 50          	mov    0x50(%r13),%rax
    a2f2:	4c 8d 64 24 14       	lea    0x14(%rsp),%r12
    a2f7:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    a2fc:	48 ff 05 15 fa 01 00 	incq   0x1fa15(%rip)        # 29d18 <ipv4_stats+0x78>
    a303:	4c 89 e2             	mov    %r12,%rdx
    a306:	bf 01 00 00 00       	mov    $0x1,%edi
    a30b:	ff 50 28             	call   *0x28(%rax)
    a30e:	85 c0                	test   %eax,%eax
    a310:	75 58                	jne    a36a <ipv4_tx+0x1d9>
    a312:	4c 89 e1             	mov    %r12,%rcx
    a315:	48 8b 45 20          	mov    0x20(%rbp),%rax
    a319:	48 2b 45 18          	sub    0x18(%rbp),%rax
    a31d:	4d 8d 45 60          	lea    0x60(%r13),%r8
    a321:	48 8d 15 80 ea 01 00 	lea    0x1ea80(%rip),%rdx        # 28da8 <ipv4_protocol>
    a328:	48 ff 05 d1 f9 01 00 	incq   0x1f9d1(%rip)        # 29d00 <ipv4_stats+0x60>
    a32f:	48 01 05 d2 f9 01 00 	add    %rax,0x1f9d2(%rip)        # 29d08 <ipv4_stats+0x68>
    a336:	48 85 c9             	test   %rcx,%rcx
    a339:	74 0d                	je     a348 <ipv4_tx+0x1b7>
    a33b:	4c 89 ee             	mov    %r13,%rsi
    a33e:	48 89 ef             	mov    %rbp,%rdi
    a341:	e8 96 3f 00 00       	call   e2dc <net_tx>
    a346:	eb 32                	jmp    a37a <ipv4_tx+0x1e9>
    a348:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    a34d:	50                   	push   %rax
    a34e:	4c 8d 4b f8          	lea    -0x8(%rbx),%r9
    a352:	4c 89 ee             	mov    %r13,%rsi
    a355:	41 50                	push   %r8
    a357:	48 89 ef             	mov    %rbp,%rdi
    a35a:	4c 8d 05 8f d2 01 00 	lea    0x1d28f(%rip),%r8        # 275f0 <arp_discovery>
    a361:	e8 a7 35 00 00       	call   d90d <neighbour_tx>
    a366:	5a                   	pop    %rdx
    a367:	59                   	pop    %rcx
    a368:	eb 10                	jmp    a37a <ipv4_tx+0x1e9>
    a36a:	48 89 ef             	mov    %rbp,%rdi
    a36d:	89 44 24 08          	mov    %eax,0x8(%rsp)
    a371:	e8 f0 f9 ff ff       	call   9d66 <free_iob>
    a376:	8b 44 24 08          	mov    0x8(%rsp),%eax
    a37a:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    a37f:	48 2b 15 ca fc 01 00 	sub    0x1fcca(%rip),%rdx        # 2a050 <__stack_chk_guard>
    a386:	74 05                	je     a38d <ipv4_tx+0x1fc>
    a388:	e8 d3 86 ff ff       	call   2a60 <__stack_chk_fail>
    a38d:	48 83 c4 38          	add    $0x38,%rsp
    a391:	5b                   	pop    %rbx
    a392:	5d                   	pop    %rbp
    a393:	41 5c                	pop    %r12
    a395:	41 5d                	pop    %r13
    a397:	41 5e                	pop    %r14
    a399:	41 5f                	pop    %r15
    a39b:	c3                   	ret    

000000000000a39c <ipv4_has_any_addr>:
    a39c:	f3 0f 1e fa          	endbr64 
    a3a0:	48 8b 05 a9 c1 01 00 	mov    0x1c1a9(%rip),%rax        # 26550 <ipv4_miniroutes>
    a3a7:	48 8d 15 a2 c1 01 00 	lea    0x1c1a2(%rip),%rdx        # 26550 <ipv4_miniroutes>
    a3ae:	48 39 d0             	cmp    %rdx,%rax
    a3b1:	74 0b                	je     a3be <ipv4_has_any_addr+0x22>
    a3b3:	48 39 78 10          	cmp    %rdi,0x10(%rax)
    a3b7:	74 08                	je     a3c1 <ipv4_has_any_addr+0x25>
    a3b9:	48 8b 00             	mov    (%rax),%rax
    a3bc:	eb f0                	jmp    a3ae <ipv4_has_any_addr+0x12>
    a3be:	31 c0                	xor    %eax,%eax
    a3c0:	c3                   	ret    
    a3c1:	b8 01 00 00 00       	mov    $0x1,%eax
    a3c6:	c3                   	ret    

000000000000a3c7 <ipv4_rx>:
    a3c7:	f3 0f 1e fa          	endbr64 
    a3cb:	41 55                	push   %r13
    a3cd:	45 89 c5             	mov    %r8d,%r13d
    a3d0:	41 54                	push   %r12
    a3d2:	49 89 f4             	mov    %rsi,%r12
    a3d5:	55                   	push   %rbp
    a3d6:	48 89 fd             	mov    %rdi,%rbp
    a3d9:	53                   	push   %rbx
    a3da:	48 83 ec 68          	sub    $0x68,%rsp
    a3de:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
    a3e2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    a3e6:	48 8b 05 63 fc 01 00 	mov    0x1fc63(%rip),%rax        # 2a050 <__stack_chk_guard>
    a3ed:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    a3f2:	31 c0                	xor    %eax,%eax
    a3f4:	48 ff 05 a5 f8 01 00 	incq   0x1f8a5(%rip)        # 29ca0 <ipv4_stats>
    a3fb:	48 29 da             	sub    %rbx,%rdx
    a3fe:	48 01 15 a3 f8 01 00 	add    %rdx,0x1f8a3(%rip)        # 29ca8 <ipv4_stats+0x8>
    a405:	41 80 e0 02          	and    $0x2,%r8b
    a409:	74 09                	je     a414 <ipv4_rx+0x4d>
    a40b:	48 ff 05 0e f9 01 00 	incq   0x1f90e(%rip)        # 29d20 <ipv4_stats+0x80>
    a412:	eb 0d                	jmp    a421 <ipv4_rx+0x5a>
    a414:	41 f6 c5 01          	test   $0x1,%r13b
    a418:	74 07                	je     a421 <ipv4_rx+0x5a>
    a41a:	48 ff 05 ef f8 01 00 	incq   0x1f8ef(%rip)        # 29d10 <ipv4_stats+0x70>
    a421:	48 83 fa 13          	cmp    $0x13,%rdx
    a425:	0f 86 57 01 00 00    	jbe    a582 <ipv4_rx+0x1bb>
    a42b:	8a 03                	mov    (%rbx),%al
    a42d:	89 c1                	mov    %eax,%ecx
    a42f:	83 e1 f0             	and    $0xfffffff0,%ecx
    a432:	80 f9 40             	cmp    $0x40,%cl
    a435:	0f 85 47 01 00 00    	jne    a582 <ipv4_rx+0x1bb>
    a43b:	83 e0 0f             	and    $0xf,%eax
    a43e:	8d 34 85 00 00 00 00 	lea    0x0(,%rax,4),%esi
    a445:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a44a:	48 39 d6             	cmp    %rdx,%rsi
    a44d:	0f 87 2f 01 00 00    	ja     a582 <ipv4_rx+0x1bb>
    a453:	83 fe 13             	cmp    $0x13,%esi
    a456:	0f 86 26 01 00 00    	jbe    a582 <ipv4_rx+0x1bb>
    a45c:	48 89 df             	mov    %rbx,%rdi
    a45f:	e8 61 ab 00 00       	call   14fc5 <tcpip_chksum>
    a464:	66 85 c0             	test   %ax,%ax
    a467:	0f 85 15 01 00 00    	jne    a582 <ipv4_rx+0x1bb>
    a46d:	66 8b 43 02          	mov    0x2(%rbx),%ax
    a471:	86 c4                	xchg   %al,%ah
    a473:	0f b7 c0             	movzwl %ax,%eax
    a476:	48 39 44 24 10       	cmp    %rax,0x10(%rsp)
    a47b:	0f 87 01 01 00 00    	ja     a582 <ipv4_rx+0x1bb>
    a481:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    a485:	48 89 d1             	mov    %rdx,%rcx
    a488:	48 2b 4d 18          	sub    0x18(%rbp),%rcx
    a48c:	48 39 c8             	cmp    %rcx,%rax
    a48f:	76 0c                	jbe    a49d <ipv4_rx+0xd6>
    a491:	48 ff 05 30 f8 01 00 	incq   0x1f830(%rip)        # 29cc8 <ipv4_stats+0x28>
    a498:	e9 ec 00 00 00       	jmp    a589 <ipv4_rx+0x1c2>
    a49d:	48 29 c8             	sub    %rcx,%rax
    a4a0:	48 01 c2             	add    %rax,%rdx
    a4a3:	41 80 e5 01          	and    $0x1,%r13b
    a4a7:	48 89 55 20          	mov    %rdx,0x20(%rbp)
    a4ab:	75 2a                	jne    a4d7 <ipv4_rx+0x110>
    a4ad:	83 7b 10 ff          	cmpl   $0xffffffff,0x10(%rbx)
    a4b1:	74 24                	je     a4d7 <ipv4_rx+0x110>
    a4b3:	4c 89 e7             	mov    %r12,%rdi
    a4b6:	e8 e1 fe ff ff       	call   a39c <ipv4_has_any_addr>
    a4bb:	85 c0                	test   %eax,%eax
    a4bd:	74 18                	je     a4d7 <ipv4_rx+0x110>
    a4bf:	8b 73 10             	mov    0x10(%rbx),%esi
    a4c2:	e8 d0 f9 ff ff       	call   9e97 <ipv4_has_addr>
    a4c7:	85 c0                	test   %eax,%eax
    a4c9:	75 0c                	jne    a4d7 <ipv4_rx+0x110>
    a4cb:	48 ff 05 e6 f7 01 00 	incq   0x1f7e6(%rip)        # 29cb8 <ipv4_stats+0x18>
    a4d2:	e9 b2 00 00 00       	jmp    a589 <ipv4_rx+0x1c2>
    a4d7:	66 f7 43 06 3f ff    	testw  $0xff3f,0x6(%rbx)
    a4dd:	74 26                	je     a505 <ipv4_rx+0x13e>
    a4df:	48 89 ee             	mov    %rbp,%rsi
    a4e2:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    a4e7:	48 8d 3d 32 c0 01 00 	lea    0x1c032(%rip),%rdi        # 26520 <ipv4_reassembler>
    a4ee:	e8 42 3d 01 00       	call   1e235 <fragment_reassemble>
    a4f3:	48 89 c5             	mov    %rax,%rbp
    a4f6:	31 c0                	xor    %eax,%eax
    a4f8:	48 85 ed             	test   %rbp,%rbp
    a4fb:	0f 84 95 00 00 00    	je     a596 <ipv4_rx+0x1cf>
    a501:	48 8b 5d 18          	mov    0x18(%rbp),%rbx
    a505:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    a50a:	ba 20 00 00 00       	mov    $0x20,%edx
    a50f:	31 c0                	xor    %eax,%eax
    a511:	4c 89 ef             	mov    %r13,%rdi
    a514:	48 89 d1             	mov    %rdx,%rcx
    a517:	f3 aa                	rep stos %al,%es:(%rdi)
    a519:	8b 4b 0c             	mov    0xc(%rbx),%ecx
    a51c:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
    a521:	66 c7 44 24 18 01 00 	movw   $0x1,0x18(%rsp)
    a528:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    a52d:	4c 89 c7             	mov    %r8,%rdi
    a530:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a534:	48 89 d1             	mov    %rdx,%rcx
    a537:	f3 aa                	rep stos %al,%es:(%rdi)
    a539:	8b 43 10             	mov    0x10(%rbx),%eax
    a53c:	31 f6                	xor    %esi,%esi
    a53e:	48 89 ef             	mov    %rbp,%rdi
    a541:	66 c7 44 24 38 01 00 	movw   $0x1,0x38(%rsp)
    a548:	89 44 24 40          	mov    %eax,0x40(%rsp)
    a54c:	e8 89 f9 ff ff       	call   9eda <ipv4_pshdr_chksum>
    a551:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    a556:	4c 89 e6             	mov    %r12,%rsi
    a559:	48 89 ef             	mov    %rbp,%rdi
    a55c:	48 01 55 18          	add    %rdx,0x18(%rbp)
    a560:	0f b6 53 09          	movzbl 0x9(%rbx),%edx
    a564:	48 8d 1d 35 f7 01 00 	lea    0x1f735(%rip),%rbx        # 29ca0 <ipv4_stats>
    a56b:	44 0f b7 c8          	movzwl %ax,%r9d
    a56f:	51                   	push   %rcx
    a570:	4c 89 e9             	mov    %r13,%rcx
    a573:	53                   	push   %rbx
    a574:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    a579:	e8 31 a9 00 00       	call   14eaf <tcpip_rx>
    a57e:	5e                   	pop    %rsi
    a57f:	5f                   	pop    %rdi
    a580:	eb 14                	jmp    a596 <ipv4_rx+0x1cf>
    a582:	48 ff 05 27 f7 01 00 	incq   0x1f727(%rip)        # 29cb0 <ipv4_stats+0x10>
    a589:	48 89 ef             	mov    %rbp,%rdi
    a58c:	e8 d5 f7 ff ff       	call   9d66 <free_iob>
    a591:	b8 7e 9f fa e3       	mov    $0xe3fa9f7e,%eax
    a596:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    a59b:	48 2b 15 ae fa 01 00 	sub    0x1faae(%rip),%rdx        # 2a050 <__stack_chk_guard>
    a5a2:	74 05                	je     a5a9 <ipv4_rx+0x1e2>
    a5a4:	e8 b7 84 ff ff       	call   2a60 <__stack_chk_fail>
    a5a9:	48 83 c4 68          	add    $0x68,%rsp
    a5ad:	5b                   	pop    %rbx
    a5ae:	5d                   	pop    %rbp
    a5af:	41 5c                	pop    %r12
    a5b1:	41 5d                	pop    %r13
    a5b3:	c3                   	ret    

000000000000a5b4 <inet_aton>:
    a5b4:	f3 0f 1e fa          	endbr64 
    a5b8:	41 55                	push   %r13
    a5ba:	4c 8d 2d c2 98 01 00 	lea    0x198c2(%rip),%r13        # 23e83 <.LC0>
    a5c1:	41 54                	push   %r12
    a5c3:	49 89 f4             	mov    %rsi,%r12
    a5c6:	55                   	push   %rbp
    a5c7:	31 ed                	xor    %ebp,%ebp
    a5c9:	53                   	push   %rbx
    a5ca:	48 89 fb             	mov    %rdi,%rbx
    a5cd:	48 83 ec 18          	sub    $0x18,%rsp
    a5d1:	48 8b 05 78 fa 01 00 	mov    0x1fa78(%rip),%rax        # 2a050 <__stack_chk_guard>
    a5d8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a5dd:	31 c0                	xor    %eax,%eax
    a5df:	31 d2                	xor    %edx,%edx
    a5e1:	48 89 e6             	mov    %rsp,%rsi
    a5e4:	48 89 df             	mov    %rbx,%rdi
    a5e7:	e8 6b 95 00 00       	call   13b57 <strtoul>
    a5ec:	48 8b 14 24          	mov    (%rsp),%rdx
    a5f0:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    a5f6:	77 1f                	ja     a617 <inet_aton+0x63>
    a5f8:	48 39 da             	cmp    %rbx,%rdx
    a5fb:	74 1a                	je     a617 <inet_aton+0x63>
    a5fd:	41 88 04 2c          	mov    %al,(%r12,%rbp,1)
    a601:	41 8a 44 2d 00       	mov    0x0(%r13,%rbp,1),%al
    a606:	38 02                	cmp    %al,(%rdx)
    a608:	75 0d                	jne    a617 <inet_aton+0x63>
    a60a:	48 ff c5             	inc    %rbp
    a60d:	84 c0                	test   %al,%al
    a60f:	74 0a                	je     a61b <inet_aton+0x67>
    a611:	48 8d 5a 01          	lea    0x1(%rdx),%rbx
    a615:	eb c8                	jmp    a5df <inet_aton+0x2b>
    a617:	31 c0                	xor    %eax,%eax
    a619:	eb 05                	jmp    a620 <inet_aton+0x6c>
    a61b:	b8 01 00 00 00       	mov    $0x1,%eax
    a620:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a625:	48 2b 15 24 fa 01 00 	sub    0x1fa24(%rip),%rdx        # 2a050 <__stack_chk_guard>
    a62c:	74 05                	je     a633 <inet_aton+0x7f>
    a62e:	e8 2d 84 ff ff       	call   2a60 <__stack_chk_fail>
    a633:	48 83 c4 18          	add    $0x18,%rsp
    a637:	5b                   	pop    %rbx
    a638:	5d                   	pop    %rbp
    a639:	41 5c                	pop    %r12
    a63b:	41 5d                	pop    %r13
    a63d:	c3                   	ret    

000000000000a63e <ipv4_sock_aton>:
    a63e:	f3 0f 1e fa          	endbr64 
    a642:	53                   	push   %rbx
    a643:	48 89 f3             	mov    %rsi,%rbx
    a646:	48 83 ec 10          	sub    $0x10,%rsp
    a64a:	48 8b 05 ff f9 01 00 	mov    0x1f9ff(%rip),%rax        # 2a050 <__stack_chk_guard>
    a651:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a656:	31 c0                	xor    %eax,%eax
    a658:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    a65d:	e8 52 ff ff ff       	call   a5b4 <inet_aton>
    a662:	85 c0                	test   %eax,%eax
    a664:	74 0b                	je     a671 <ipv4_sock_aton+0x33>
    a666:	8b 44 24 04          	mov    0x4(%rsp),%eax
    a66a:	89 43 08             	mov    %eax,0x8(%rbx)
    a66d:	31 c0                	xor    %eax,%eax
    a66f:	eb 05                	jmp    a676 <ipv4_sock_aton+0x38>
    a671:	b8 7e 9f fa e3       	mov    $0xe3fa9f7e,%eax
    a676:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a67b:	48 2b 15 ce f9 01 00 	sub    0x1f9ce(%rip),%rdx        # 2a050 <__stack_chk_guard>
    a682:	74 05                	je     a689 <ipv4_sock_aton+0x4b>
    a684:	e8 d7 83 ff ff       	call   2a60 <__stack_chk_fail>
    a689:	48 83 c4 10          	add    $0x10,%rsp
    a68d:	5b                   	pop    %rbx
    a68e:	c3                   	ret    

000000000000a68f <inet_ntoa>:
    a68f:	f3 0f 1e fa          	endbr64 
    a693:	89 f8                	mov    %edi,%eax
    a695:	41 54                	push   %r12
    a697:	41 89 f9             	mov    %edi,%r9d
    a69a:	4c 8d 25 ef f5 01 00 	lea    0x1f5ef(%rip),%r12        # 29c90 <buf.0>
    a6a1:	0f b6 f4             	movzbl %ah,%esi
    a6a4:	c1 e8 18             	shr    $0x18,%eax
    a6a7:	52                   	push   %rdx
    a6a8:	40 0f b6 cf          	movzbl %dil,%ecx
    a6ac:	50                   	push   %rax
    a6ad:	41 c1 e9 10          	shr    $0x10,%r9d
    a6b1:	41 89 f0             	mov    %esi,%r8d
    a6b4:	4c 89 e7             	mov    %r12,%rdi
    a6b7:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
    a6bb:	45 0f b6 c9          	movzbl %r9b,%r9d
    a6bf:	48 8d 15 0b 8b 01 00 	lea    0x18b0b(%rip),%rdx        # 231d1 <.LC1>
    a6c6:	31 c0                	xor    %eax,%eax
    a6c8:	e8 90 ca 00 00       	call   1715d <snprintf>
    a6cd:	59                   	pop    %rcx
    a6ce:	4c 89 e0             	mov    %r12,%rax
    a6d1:	5e                   	pop    %rsi
    a6d2:	41 5c                	pop    %r12
    a6d4:	c3                   	ret    

000000000000a6d5 <ipv4_ntoa>:
    a6d5:	f3 0f 1e fa          	endbr64 
    a6d9:	8b 3f                	mov    (%rdi),%edi
    a6db:	e9 af ff ff ff       	jmp    a68f <inet_ntoa>

000000000000a6e0 <ipv4_sock_ntoa>:
    a6e0:	f3 0f 1e fa          	endbr64 
    a6e4:	8b 7f 08             	mov    0x8(%rdi),%edi
    a6e7:	e9 a3 ff ff ff       	jmp    a68f <inet_ntoa>

000000000000a6ec <parse_ipv4_setting>:
    a6ec:	f3 0f 1e fa          	endbr64 
    a6f0:	41 54                	push   %r12
    a6f2:	48 89 f7             	mov    %rsi,%rdi
    a6f5:	55                   	push   %rbp
    a6f6:	48 89 d5             	mov    %rdx,%rbp
    a6f9:	53                   	push   %rbx
    a6fa:	48 89 cb             	mov    %rcx,%rbx
    a6fd:	48 83 ec 10          	sub    $0x10,%rsp
    a701:	48 8b 05 48 f9 01 00 	mov    0x1f948(%rip),%rax        # 2a050 <__stack_chk_guard>
    a708:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a70d:	31 c0                	xor    %eax,%eax
    a70f:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    a714:	4c 89 e6             	mov    %r12,%rsi
    a717:	e8 98 fe ff ff       	call   a5b4 <inet_aton>
    a71c:	85 c0                	test   %eax,%eax
    a71e:	75 07                	jne    a727 <parse_ipv4_setting+0x3b>
    a720:	b8 7e 9f fa e3       	mov    $0xe3fa9f7e,%eax
    a725:	eb 1f                	jmp    a746 <parse_ipv4_setting+0x5a>
    a727:	b8 04 00 00 00       	mov    $0x4,%eax
    a72c:	4c 89 e6             	mov    %r12,%rsi
    a72f:	48 89 ef             	mov    %rbp,%rdi
    a732:	48 39 c3             	cmp    %rax,%rbx
    a735:	48 0f 46 c3          	cmovbe %rbx,%rax
    a739:	48 89 c2             	mov    %rax,%rdx
    a73c:	e8 a8 cc 00 00       	call   173e9 <__memcpy>
    a741:	b8 04 00 00 00       	mov    $0x4,%eax
    a746:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a74b:	48 2b 15 fe f8 01 00 	sub    0x1f8fe(%rip),%rdx        # 2a050 <__stack_chk_guard>
    a752:	74 05                	je     a759 <parse_ipv4_setting+0x6d>
    a754:	e8 07 83 ff ff       	call   2a60 <__stack_chk_fail>
    a759:	48 83 c4 10          	add    $0x10,%rsp
    a75d:	5b                   	pop    %rbx
    a75e:	5d                   	pop    %rbp
    a75f:	41 5c                	pop    %r12
    a761:	c3                   	ret    

000000000000a762 <format_ipv4_setting>:
    a762:	f3 0f 1e fa          	endbr64 
    a766:	48 83 fa 03          	cmp    $0x3,%rdx
    a76a:	76 2d                	jbe    a799 <format_ipv4_setting+0x37>
    a76c:	41 54                	push   %r12
    a76e:	4d 89 c4             	mov    %r8,%r12
    a771:	55                   	push   %rbp
    a772:	48 89 cd             	mov    %rcx,%rbp
    a775:	50                   	push   %rax
    a776:	8b 3e                	mov    (%rsi),%edi
    a778:	e8 12 ff ff ff       	call   a68f <inet_ntoa>
    a77d:	41 58                	pop    %r8
    a77f:	4c 89 e6             	mov    %r12,%rsi
    a782:	48 89 ef             	mov    %rbp,%rdi
    a785:	48 89 c1             	mov    %rax,%rcx
    a788:	5d                   	pop    %rbp
    a789:	48 8d 15 71 8f 01 00 	lea    0x18f71(%rip),%rdx        # 23701 <.LC0>
    a790:	31 c0                	xor    %eax,%eax
    a792:	41 5c                	pop    %r12
    a794:	e9 c4 c9 00 00       	jmp    1715d <snprintf>
    a799:	b8 7e 9f fa e3       	mov    $0xe3fa9f7e,%eax
    a79e:	c3                   	ret    

000000000000a79f <iscsi_tx_nothing>:
    a79f:	f3 0f 1e fa          	endbr64 
    a7a3:	31 c0                	xor    %eax,%eax
    a7a5:	c3                   	ret    

000000000000a7a6 <iscsi_rx_discard>:
    a7a6:	f3 0f 1e fa          	endbr64 
    a7aa:	31 c0                	xor    %eax,%eax
    a7ac:	c3                   	ret    

000000000000a7ad <iscsi_scsi_window>:
    a7ad:	f3 0f 1e fa          	endbr64 
    a7b1:	8b 97 90 00 00 00    	mov    0x90(%rdi),%edx
    a7b7:	31 c0                	xor    %eax,%eax
    a7b9:	83 e2 0f             	and    $0xf,%edx
    a7bc:	83 fa 0c             	cmp    $0xc,%edx
    a7bf:	75 0d                	jne    a7ce <iscsi_scsi_window+0x21>
    a7c1:	31 c0                	xor    %eax,%eax
    a7c3:	48 83 bf b0 01 00 00 	cmpq   $0x0,0x1b0(%rdi)
    a7ca:	00 
    a7cb:	0f 94 c0             	sete   %al
    a7ce:	c3                   	ret    

000000000000a7cf <iscsi_describe>:
    a7cf:	f3 0f 1e fa          	endbr64 
    a7d3:	48 8d 87 e0 01 00 00 	lea    0x1e0(%rdi),%rax
    a7da:	c3                   	ret    

000000000000a7db <iscsi_rx_bhs>:
    a7db:	f3 0f 1e fa          	endbr64 
    a7df:	50                   	push   %rax
    a7e0:	48 03 bf 98 01 00 00 	add    0x198(%rdi),%rdi
    a7e7:	48 81 c7 60 01 00 00 	add    $0x160,%rdi
    a7ee:	e8 f6 cb 00 00       	call   173e9 <__memcpy>
    a7f3:	31 c0                	xor    %eax,%eax
    a7f5:	5a                   	pop    %rdx
    a7f6:	c3                   	ret    

000000000000a7f7 <iscsi_build_login_request_strings>:
    a7f7:	55                   	push   %rbp
    a7f8:	48 89 e5             	mov    %rsp,%rbp
    a7fb:	41 57                	push   %r15
    a7fd:	41 56                	push   %r14
    a7ff:	49 89 d6             	mov    %rdx,%r14
    a802:	41 55                	push   %r13
    a804:	49 89 f5             	mov    %rsi,%r13
    a807:	41 54                	push   %r12
    a809:	45 31 e4             	xor    %r12d,%r12d
    a80c:	53                   	push   %rbx
    a80d:	48 89 fb             	mov    %rdi,%rbx
    a810:	48 83 ec 28          	sub    $0x28,%rsp
    a814:	48 8b 05 35 f8 01 00 	mov    0x1f835(%rip),%rax        # 2a050 <__stack_chk_guard>
    a81b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    a81f:	31 c0                	xor    %eax,%eax
    a821:	f6 87 91 00 00 00 01 	testb  $0x1,0x91(%rdi)
    a828:	74 5d                	je     a887 <iscsi_build_login_request_strings+0x90>
    a82a:	48 83 bf 98 00 00 00 	cmpq   $0x0,0x98(%rdi)
    a831:	00 
    a832:	48 8b 4f 70          	mov    0x70(%rdi),%rcx
    a836:	4c 89 f6             	mov    %r14,%rsi
    a839:	48 8d 15 d4 89 01 00 	lea    0x189d4(%rip),%rdx        # 23214 <.LC1>
    a840:	48 8d 05 d2 89 01 00 	lea    0x189d2(%rip),%rax        # 23219 <.LC0>
    a847:	4c 8b 8f 88 00 00 00 	mov    0x88(%rdi),%r9
    a84e:	48 0f 45 c2          	cmovne %rdx,%rax
    a852:	48 83 bf a8 00 00 00 	cmpq   $0x0,0xa8(%rdi)
    a859:	00 
    a85a:	6a 00                	push   $0x0
    a85c:	4c 89 ef             	mov    %r13,%rdi
    a85f:	48 8d 15 b8 89 01 00 	lea    0x189b8(%rip),%rdx        # 2321e <.LC2>
    a866:	48 0f 45 c2          	cmovne %rdx,%rax
    a86a:	45 31 c0             	xor    %r8d,%r8d
    a86d:	48 8d 15 af 89 01 00 	lea    0x189af(%rip),%rdx        # 23223 <.LC3>
    a874:	50                   	push   %rax
    a875:	31 c0                	xor    %eax,%eax
    a877:	6a 00                	push   $0x0
    a879:	6a 00                	push   $0x0
    a87b:	e8 4f c9 00 00       	call   171cf <ssnprintf>
    a880:	48 83 c4 20          	add    $0x20,%rsp
    a884:	41 89 c4             	mov    %eax,%r12d
    a887:	f6 83 91 00 00 00 02 	testb  $0x2,0x91(%rbx)
    a88e:	74 1f                	je     a8af <iscsi_build_login_request_strings+0xb8>
    a890:	44 89 e7             	mov    %r12d,%edi
    a893:	4c 89 f6             	mov    %r14,%rsi
    a896:	31 c9                	xor    %ecx,%ecx
    a898:	31 c0                	xor    %eax,%eax
    a89a:	48 29 fe             	sub    %rdi,%rsi
    a89d:	48 8d 15 c4 89 01 00 	lea    0x189c4(%rip),%rdx        # 23268 <.LC4>
    a8a4:	4c 01 ef             	add    %r13,%rdi
    a8a7:	e8 23 c9 00 00       	call   171cf <ssnprintf>
    a8ac:	41 01 c4             	add    %eax,%r12d
    a8af:	f6 83 91 00 00 00 04 	testb  $0x4,0x91(%rbx)
    a8b6:	0f 84 a2 00 00 00    	je     a95e <iscsi_build_login_request_strings+0x167>
    a8bc:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    a8c3:	48 89 e1             	mov    %rsp,%rcx
    a8c6:	49 89 e7             	mov    %rsp,%r15
    a8c9:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
    a8cd:	4c 8d 40 01          	lea    0x1(%rax),%r8
    a8d1:	48 83 c0 10          	add    $0x10,%rax
    a8d5:	48 89 c6             	mov    %rax,%rsi
    a8d8:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    a8de:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
    a8e2:	48 29 c1             	sub    %rax,%rcx
    a8e5:	48 39 cc             	cmp    %rcx,%rsp
    a8e8:	74 12                	je     a8fc <iscsi_build_login_request_strings+0x105>
    a8ea:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    a8f1:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    a8f8:	00 00 
    a8fa:	eb e9                	jmp    a8e5 <iscsi_build_login_request_strings+0xee>
    a8fc:	48 89 f0             	mov    %rsi,%rax
    a8ff:	25 ff 0f 00 00       	and    $0xfff,%eax
    a904:	48 29 c4             	sub    %rax,%rsp
    a907:	48 85 c0             	test   %rax,%rax
    a90a:	74 06                	je     a912 <iscsi_build_login_request_strings+0x11b>
    a90c:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    a912:	48 8b b3 e0 00 00 00 	mov    0xe0(%rbx),%rsi
    a919:	49 89 e1             	mov    %rsp,%r9
    a91c:	48 89 e1             	mov    %rsp,%rcx
    a91f:	31 ff                	xor    %edi,%edi
    a921:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    a925:	e8 d6 e0 00 00       	call   18a00 <hex_encode>
    a92a:	48 8b 8b 98 00 00 00 	mov    0x98(%rbx),%rcx
    a931:	44 89 e0             	mov    %r12d,%eax
    a934:	4c 89 f6             	mov    %r14,%rsi
    a937:	41 50                	push   %r8
    a939:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    a93d:	48 29 c6             	sub    %rax,%rsi
    a940:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    a945:	6a 00                	push   $0x0
    a947:	45 31 c0             	xor    %r8d,%r8d
    a94a:	48 8d 15 22 89 01 00 	lea    0x18922(%rip),%rdx        # 23273 <.LC5>
    a951:	31 c0                	xor    %eax,%eax
    a953:	e8 77 c8 00 00       	call   171cf <ssnprintf>
    a958:	4c 89 fc             	mov    %r15,%rsp
    a95b:	41 01 c4             	add    %eax,%r12d
    a95e:	f6 83 91 00 00 00 08 	testb  $0x8,0x91(%rbx)
    a965:	74 7a                	je     a9e1 <iscsi_build_login_request_strings+0x1ea>
    a967:	49 89 e7             	mov    %rsp,%r15
    a96a:	4c 39 fc             	cmp    %r15,%rsp
    a96d:	74 12                	je     a981 <iscsi_build_login_request_strings+0x18a>
    a96f:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    a976:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    a97d:	00 00 
    a97f:	eb e9                	jmp    a96a <iscsi_build_login_request_strings+0x173>
    a981:	48 83 ec 30          	sub    $0x30,%rsp
    a985:	48 83 4c 24 28 00    	orq    $0x0,0x28(%rsp)
    a98b:	ba 10 00 00 00       	mov    $0x10,%edx
    a990:	41 b8 21 00 00 00    	mov    $0x21,%r8d
    a996:	31 ff                	xor    %edi,%edi
    a998:	49 89 e1             	mov    %rsp,%r9
    a99b:	48 89 e1             	mov    %rsp,%rcx
    a99e:	48 8d b3 b9 00 00 00 	lea    0xb9(%rbx),%rsi
    a9a5:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    a9a9:	e8 52 e0 00 00       	call   18a00 <hex_encode>
    a9ae:	44 89 e0             	mov    %r12d,%eax
    a9b1:	4c 89 f6             	mov    %r14,%rsi
    a9b4:	45 31 c0             	xor    %r8d,%r8d
    a9b7:	0f b6 8b b8 00 00 00 	movzbl 0xb8(%rbx),%ecx
    a9be:	52                   	push   %rdx
    a9bf:	48 29 c6             	sub    %rax,%rsi
    a9c2:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    a9c7:	6a 00                	push   $0x0
    a9c9:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    a9cd:	48 8d 15 b8 88 01 00 	lea    0x188b8(%rip),%rdx        # 2328c <.LC6>
    a9d4:	31 c0                	xor    %eax,%eax
    a9d6:	e8 f4 c7 00 00       	call   171cf <ssnprintf>
    a9db:	4c 89 fc             	mov    %r15,%rsp
    a9de:	41 01 c4             	add    %eax,%r12d
    a9e1:	f6 83 91 00 00 00 10 	testb  $0x10,0x91(%rbx)
    a9e8:	74 42                	je     aa2c <iscsi_build_login_request_strings+0x235>
    a9ea:	44 89 e0             	mov    %r12d,%eax
    a9ed:	4c 89 f6             	mov    %r14,%rsi
    a9f0:	45 31 c9             	xor    %r9d,%r9d
    a9f3:	45 31 c0             	xor    %r8d,%r8d
    a9f6:	48 29 c6             	sub    %rax,%rsi
    a9f9:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    a9fe:	50                   	push   %rax
    a9ff:	31 c9                	xor    %ecx,%ecx
    aa01:	6a 00                	push   $0x0
    aa03:	48 8d 15 9b 88 01 00 	lea    0x1889b(%rip),%rdx        # 232a5 <.LC7>
    aa0a:	31 c0                	xor    %eax,%eax
    aa0c:	6a 00                	push   $0x0
    aa0e:	6a 00                	push   $0x0
    aa10:	6a 00                	push   $0x0
    aa12:	6a 00                	push   $0x0
    aa14:	6a 00                	push   $0x0
    aa16:	6a 00                	push   $0x0
    aa18:	6a 00                	push   $0x0
    aa1a:	6a 00                	push   $0x0
    aa1c:	6a 00                	push   $0x0
    aa1e:	6a 00                	push   $0x0
    aa20:	e8 aa c7 00 00       	call   171cf <ssnprintf>
    aa25:	48 83 c4 60          	add    $0x60,%rsp
    aa29:	41 01 c4             	add    %eax,%r12d
    aa2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aa30:	48 2b 05 19 f6 01 00 	sub    0x1f619(%rip),%rax        # 2a050 <__stack_chk_guard>
    aa37:	74 05                	je     aa3e <iscsi_build_login_request_strings+0x247>
    aa39:	e8 22 80 ff ff       	call   2a60 <__stack_chk_fail>
    aa3e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    aa42:	44 89 e0             	mov    %r12d,%eax
    aa45:	5b                   	pop    %rbx
    aa46:	41 5c                	pop    %r12
    aa48:	41 5d                	pop    %r13
    aa4a:	41 5e                	pop    %r14
    aa4c:	41 5f                	pop    %r15
    aa4e:	5d                   	pop    %rbp
    aa4f:	c3                   	ret    

000000000000aa50 <iscsi_tx_data>:
    aa50:	f3 0f 1e fa          	endbr64 
    aa54:	41 57                	push   %r15
    aa56:	41 56                	push   %r14
    aa58:	41 55                	push   %r13
    aa5a:	41 54                	push   %r12
    aa5c:	55                   	push   %rbp
    aa5d:	48 89 fd             	mov    %rdi,%rbp
    aa60:	53                   	push   %rbx
    aa61:	56                   	push   %rsi
    aa62:	8a 87 0c 01 00 00    	mov    0x10c(%rdi),%al
    aa68:	83 e0 3f             	and    $0x3f,%eax
    aa6b:	3c 03                	cmp    $0x3,%al
    aa6d:	0f 84 88 00 00 00    	je     aafb <iscsi_tx_data+0xab>
    aa73:	3c 05                	cmp    $0x5,%al
    aa75:	0f 85 fb 00 00 00    	jne    ab76 <iscsi_tx_data+0x126>
    aa7b:	0f b6 9f 13 01 00 00 	movzbl 0x113(%rdi),%ebx
    aa82:	44 8b af 10 01 00 00 	mov    0x110(%rdi),%r13d
    aa89:	4c 8d 77 50          	lea    0x50(%rdi),%r14
    aa8d:	41 0f cd             	bswap  %r13d
    aa90:	f7 db                	neg    %ebx
    aa92:	41 81 e5 ff ff ff 00 	and    $0xffffff,%r13d
    aa99:	44 8b a7 34 01 00 00 	mov    0x134(%rdi),%r12d
    aaa0:	4c 89 f7             	mov    %r14,%rdi
    aaa3:	83 e3 03             	and    $0x3,%ebx
    aaa6:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    aaab:	e8 c7 cb 00 00       	call   17677 <xfer_alloc_iob>
    aab0:	41 0f cc             	bswap  %r12d
    aab3:	49 89 c7             	mov    %rax,%r15
    aab6:	45 89 e4             	mov    %r12d,%r12d
    aab9:	48 85 c0             	test   %rax,%rax
    aabc:	75 02                	jne    aac0 <iscsi_tx_data+0x70>
    aabe:	eb 71                	jmp    ab31 <iscsi_tx_data+0xe1>
    aac0:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    aac4:	48 8b 85 b0 01 00 00 	mov    0x1b0(%rbp),%rax
    aacb:	4a 8d 14 2f          	lea    (%rdi,%r13,1),%rdx
    aacf:	48 8b 40 18          	mov    0x18(%rax),%rax
    aad3:	49 89 57 20          	mov    %rdx,0x20(%r15)
    aad7:	4c 89 ea             	mov    %r13,%rdx
    aada:	49 8d 34 04          	lea    (%r12,%rax,1),%rsi
    aade:	e8 06 c9 00 00       	call   173e9 <__memcpy>
    aae3:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    aae7:	48 89 d9             	mov    %rbx,%rcx
    aaea:	48 8d 04 1f          	lea    (%rdi,%rbx,1),%rax
    aaee:	49 89 47 20          	mov    %rax,0x20(%r15)
    aaf2:	31 c0                	xor    %eax,%eax
    aaf4:	f3 aa                	rep stos %al,%es:(%rdi)
    aaf6:	4c 89 fe             	mov    %r15,%rsi
    aaf9:	eb 68                	jmp    ab63 <iscsi_tx_data+0x113>
    aafb:	0f b6 9f 13 01 00 00 	movzbl 0x113(%rdi),%ebx
    ab02:	44 8b af 10 01 00 00 	mov    0x110(%rdi),%r13d
    ab09:	4c 8d 77 50          	lea    0x50(%rdi),%r14
    ab0d:	41 0f cd             	bswap  %r13d
    ab10:	f7 db                	neg    %ebx
    ab12:	41 81 e5 ff ff ff 00 	and    $0xffffff,%r13d
    ab19:	4c 89 f7             	mov    %r14,%rdi
    ab1c:	83 e3 03             	and    $0x3,%ebx
    ab1f:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    ab24:	e8 4e cb 00 00       	call   17677 <xfer_alloc_iob>
    ab29:	49 89 c4             	mov    %rax,%r12
    ab2c:	48 85 c0             	test   %rax,%rax
    ab2f:	75 07                	jne    ab38 <iscsi_tx_data+0xe8>
    ab31:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    ab36:	eb 40                	jmp    ab78 <iscsi_tx_data+0x128>
    ab38:	4c 01 68 20          	add    %r13,0x20(%rax)
    ab3c:	48 8b 70 18          	mov    0x18(%rax),%rsi
    ab40:	48 89 ef             	mov    %rbp,%rdi
    ab43:	4c 89 ea             	mov    %r13,%rdx
    ab46:	e8 ac fc ff ff       	call   a7f7 <iscsi_build_login_request_strings>
    ab4b:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    ab50:	48 89 d9             	mov    %rbx,%rcx
    ab53:	48 8d 04 1f          	lea    (%rdi,%rbx,1),%rax
    ab57:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    ab5c:	31 c0                	xor    %eax,%eax
    ab5e:	f3 aa                	rep stos %al,%es:(%rdi)
    ab60:	4c 89 e6             	mov    %r12,%rsi
    ab63:	59                   	pop    %rcx
    ab64:	4c 89 f7             	mov    %r14,%rdi
    ab67:	5b                   	pop    %rbx
    ab68:	5d                   	pop    %rbp
    ab69:	41 5c                	pop    %r12
    ab6b:	41 5d                	pop    %r13
    ab6d:	41 5e                	pop    %r14
    ab6f:	41 5f                	pop    %r15
    ab71:	e9 6c cc 00 00       	jmp    177e2 <xfer_deliver_iob>
    ab76:	31 c0                	xor    %eax,%eax
    ab78:	5a                   	pop    %rdx
    ab79:	5b                   	pop    %rbx
    ab7a:	5d                   	pop    %rbp
    ab7b:	41 5c                	pop    %r12
    ab7d:	41 5d                	pop    %r13
    ab7f:	41 5e                	pop    %r14
    ab81:	41 5f                	pop    %r15
    ab83:	c3                   	ret    

000000000000ab84 <iscsi_tx_bhs>:
    ab84:	f3 0f 1e fa          	endbr64 
    ab88:	48 8d b7 0c 01 00 00 	lea    0x10c(%rdi),%rsi
    ab8f:	ba 30 00 00 00       	mov    $0x30,%edx
    ab94:	48 83 c7 50          	add    $0x50,%rdi
    ab98:	e9 c5 cc 00 00       	jmp    17862 <xfer_deliver_raw>

000000000000ab9d <iscsi_tx_resume>:
    ab9d:	f3 0f 1e fa          	endbr64 
    aba1:	48 81 c7 40 01 00 00 	add    $0x140,%rdi
    aba8:	e9 60 4e 00 00       	jmp    fa0d <process_add>

000000000000abad <iscsi_start_data_out>:
    abad:	41 56                	push   %r14
    abaf:	b9 30 00 00 00       	mov    $0x30,%ecx
    abb4:	41 55                	push   %r13
    abb6:	41 54                	push   %r12
    abb8:	41 89 f4             	mov    %esi,%r12d
    abbb:	55                   	push   %rbp
    abbc:	89 f5                	mov    %esi,%ebp
    abbe:	53                   	push   %rbx
    abbf:	c1 e5 09             	shl    $0x9,%ebp
    abc2:	44 8b b7 00 01 00 00 	mov    0x100(%rdi),%r14d
    abc9:	48 89 fb             	mov    %rdi,%rbx
    abcc:	89 e8                	mov    %ebp,%eax
    abce:	49 29 c6             	sub    %rax,%r14
    abd1:	b8 00 02 00 00       	mov    $0x200,%eax
    abd6:	49 39 c6             	cmp    %rax,%r14
    abd9:	49 0f 46 c6          	cmovbe %r14,%rax
    abdd:	48 81 c7 0c 01 00 00 	add    $0x10c,%rdi
    abe4:	49 89 c5             	mov    %rax,%r13
    abe7:	31 c0                	xor    %eax,%eax
    abe9:	f3 aa                	rep stos %al,%es:(%rdi)
    abeb:	c7 83 3c 01 00 00 01 	movl   $0x1,0x13c(%rbx)
    abf2:	00 00 00 
    abf5:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    abfc:	e8 0c 4e 00 00       	call   fa0d <process_add>
    ac01:	c6 83 0c 01 00 00 05 	movb   $0x5,0x10c(%rbx)
    ac08:	49 81 fe 00 02 00 00 	cmp    $0x200,%r14
    ac0f:	77 07                	ja     ac18 <iscsi_start_data_out+0x6b>
    ac11:	c6 83 0d 01 00 00 80 	movb   $0x80,0x10d(%rbx)
    ac18:	44 89 e8             	mov    %r13d,%eax
    ac1b:	0f c8                	bswap  %eax
    ac1d:	89 83 10 01 00 00    	mov    %eax,0x110(%rbx)
    ac23:	48 8b 83 b0 01 00 00 	mov    0x1b0(%rbx),%rax
    ac2a:	48 8b 00             	mov    (%rax),%rax
    ac2d:	48 89 83 14 01 00 00 	mov    %rax,0x114(%rbx)
    ac34:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    ac3a:	0f c8                	bswap  %eax
    ac3c:	89 83 1c 01 00 00    	mov    %eax,0x11c(%rbx)
    ac42:	8b 83 f8 00 00 00    	mov    0xf8(%rbx),%eax
    ac48:	0f c8                	bswap  %eax
    ac4a:	89 83 20 01 00 00    	mov    %eax,0x120(%rbx)
    ac50:	8b 83 08 01 00 00    	mov    0x108(%rbx),%eax
    ac56:	ff c0                	inc    %eax
    ac58:	0f c8                	bswap  %eax
    ac5a:	89 83 28 01 00 00    	mov    %eax,0x128(%rbx)
    ac60:	44 89 e0             	mov    %r12d,%eax
    ac63:	0f c8                	bswap  %eax
    ac65:	89 83 30 01 00 00    	mov    %eax,0x130(%rbx)
    ac6b:	8b 83 fc 00 00 00    	mov    0xfc(%rbx),%eax
    ac71:	01 e8                	add    %ebp,%eax
    ac73:	0f c8                	bswap  %eax
    ac75:	89 83 34 01 00 00    	mov    %eax,0x134(%rbx)
    ac7b:	5b                   	pop    %rbx
    ac7c:	5d                   	pop    %rbp
    ac7d:	41 5c                	pop    %r12
    ac7f:	41 5d                	pop    %r13
    ac81:	41 5e                	pop    %r14
    ac83:	c3                   	ret    

000000000000ac84 <iscsi_rx_buffered_data>:
    ac84:	53                   	push   %rbx
    ac85:	48 89 fb             	mov    %rdi,%rbx
    ac88:	48 83 ec 10          	sub    $0x10,%rsp
    ac8c:	48 83 bf a8 01 00 00 	cmpq   $0x0,0x1a8(%rdi)
    ac93:	00 
    ac94:	75 31                	jne    acc7 <iscsi_rx_buffered_data+0x43>
    ac96:	48 8b bf a0 01 00 00 	mov    0x1a0(%rdi),%rdi
    ac9d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    aca2:	48 89 34 24          	mov    %rsi,(%rsp)
    aca6:	e8 6a 1a 00 00       	call   c715 <malloc>
    acab:	48 8b 34 24          	mov    (%rsp),%rsi
    acaf:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    acb4:	48 85 c0             	test   %rax,%rax
    acb7:	48 89 83 a8 01 00 00 	mov    %rax,0x1a8(%rbx)
    acbe:	75 07                	jne    acc7 <iscsi_rx_buffered_data+0x43>
    acc0:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    acc5:	eb 15                	jmp    acdc <iscsi_rx_buffered_data+0x58>
    acc7:	48 8b bb 98 01 00 00 	mov    0x198(%rbx),%rdi
    acce:	48 03 bb a8 01 00 00 	add    0x1a8(%rbx),%rdi
    acd5:	e8 0f c7 00 00       	call   173e9 <__memcpy>
    acda:	31 c0                	xor    %eax,%eax
    acdc:	48 83 c4 10          	add    $0x10,%rsp
    ace0:	5b                   	pop    %rbx
    ace1:	c3                   	ret    

000000000000ace2 <iscsi_handle_authmethod_value>:
    ace2:	f3 0f 1e fa          	endbr64 
    ace6:	53                   	push   %rbx
    ace7:	48 89 fb             	mov    %rdi,%rbx
    acea:	48 89 f7             	mov    %rsi,%rdi
    aced:	48 8d 35 2a 85 01 00 	lea    0x1852a(%rip),%rsi        # 2321e <.LC2>
    acf4:	e8 c3 8c 00 00       	call   139bc <strcmp>
    acf9:	85 c0                	test   %eax,%eax
    acfb:	75 0a                	jne    ad07 <iscsi_handle_authmethod_value+0x25>
    acfd:	81 8b 90 00 00 00 00 	orl    $0x10200,0x90(%rbx)
    ad04:	02 01 00 
    ad07:	31 c0                	xor    %eax,%eax
    ad09:	5b                   	pop    %rbx
    ad0a:	c3                   	ret    

000000000000ad0b <iscsi_free>:
    ad0b:	f3 0f 1e fa          	endbr64 
    ad0f:	55                   	push   %rbp
    ad10:	48 89 fd             	mov    %rdi,%rbp
    ad13:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
    ad17:	e8 06 1a 00 00       	call   c722 <free>
    ad1c:	48 8b 7d 78          	mov    0x78(%rbp),%rdi
    ad20:	e8 fd 19 00 00       	call   c722 <free>
    ad25:	48 8b bd 88 00 00 00 	mov    0x88(%rbp),%rdi
    ad2c:	e8 f1 19 00 00       	call   c722 <free>
    ad31:	48 8b bd 98 00 00 00 	mov    0x98(%rbp),%rdi
    ad38:	e8 e5 19 00 00       	call   c722 <free>
    ad3d:	48 8b bd a0 00 00 00 	mov    0xa0(%rbp),%rdi
    ad44:	e8 d9 19 00 00       	call   c722 <free>
    ad49:	48 8b bd a8 00 00 00 	mov    0xa8(%rbp),%rdi
    ad50:	e8 cd 19 00 00       	call   c722 <free>
    ad55:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    ad5c:	e8 c1 19 00 00       	call   c722 <free>
    ad61:	48 8d bd d0 00 00 00 	lea    0xd0(%rbp),%rdi
    ad68:	e8 fb e4 00 00       	call   19268 <chap_finish>
    ad6d:	48 8b bd a8 01 00 00 	mov    0x1a8(%rbp),%rdi
    ad74:	e8 a9 19 00 00       	call   c722 <free>
    ad79:	48 8b bd b0 01 00 00 	mov    0x1b0(%rbp),%rdi
    ad80:	48 c7 85 a8 01 00 00 	movq   $0x0,0x1a8(%rbp)
    ad87:	00 00 00 00 
    ad8b:	e8 92 19 00 00       	call   c722 <free>
    ad90:	48 89 ef             	mov    %rbp,%rdi
    ad93:	5d                   	pop    %rbp
    ad94:	e9 89 19 00 00       	jmp    c722 <free>

000000000000ad99 <iscsi_large_binary_decode>:
    ad99:	80 3f 30             	cmpb   $0x30,(%rdi)
    ad9c:	75 35                	jne    add3 <iscsi_large_binary_decode+0x3a>
    ad9e:	0f be 47 01          	movsbl 0x1(%rdi),%eax
    ada2:	4c 8d 47 02          	lea    0x2(%rdi),%r8
    ada6:	8d 48 bf             	lea    -0x41(%rax),%ecx
    ada9:	83 f9 19             	cmp    $0x19,%ecx
    adac:	77 03                	ja     adb1 <iscsi_large_binary_decode+0x18>
    adae:	83 c0 20             	add    $0x20,%eax
    adb1:	83 f8 62             	cmp    $0x62,%eax
    adb4:	74 15                	je     adcb <iscsi_large_binary_decode+0x32>
    adb6:	83 f8 78             	cmp    $0x78,%eax
    adb9:	75 18                	jne    add3 <iscsi_large_binary_decode+0x3a>
    adbb:	48 89 d1             	mov    %rdx,%rcx
    adbe:	31 ff                	xor    %edi,%edi
    adc0:	48 89 f2             	mov    %rsi,%rdx
    adc3:	4c 89 c6             	mov    %r8,%rsi
    adc6:	e9 e5 dc 00 00       	jmp    18ab0 <hex_decode>
    adcb:	4c 89 c7             	mov    %r8,%rdi
    adce:	e9 1b de 00 00       	jmp    18bee <base64_decode>
    add3:	b8 68 9c f2 bc       	mov    $0xbcf29c68,%eax
    add8:	c3                   	ret    

000000000000add9 <iscsi_handle_chap_r_value>:
    add9:	f3 0f 1e fa          	endbr64 
    addd:	41 55                	push   %r13
    addf:	41 54                	push   %r12
    ade1:	49 89 f4             	mov    %rsi,%r12
    ade4:	55                   	push   %rbp
    ade5:	48 8d af d0 00 00 00 	lea    0xd0(%rdi),%rbp
    adec:	53                   	push   %rbx
    aded:	48 89 fb             	mov    %rdi,%rbx
    adf0:	48 89 ef             	mov    %rbp,%rdi
    adf3:	48 83 ec 28          	sub    $0x28,%rsp
    adf7:	48 8b 05 52 f2 01 00 	mov    0x1f252(%rip),%rax        # 2a050 <__stack_chk_guard>
    adfe:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    ae03:	31 c0                	xor    %eax,%eax
    ae05:	e8 5e e4 00 00       	call   19268 <chap_finish>
    ae0a:	48 8d 35 0f b9 01 00 	lea    0x1b90f(%rip),%rsi        # 26720 <md5_algorithm>
    ae11:	48 89 ef             	mov    %rbp,%rdi
    ae14:	e8 d6 e3 00 00       	call   191ef <chap_init>
    ae19:	85 c0                	test   %eax,%eax
    ae1b:	0f 85 d4 00 00 00    	jne    aef5 <iscsi_handle_chap_r_value+0x11c>
    ae21:	8a 83 b8 00 00 00    	mov    0xb8(%rbx),%al
    ae27:	48 8d 74 24 17       	lea    0x17(%rsp),%rsi
    ae2c:	ba 01 00 00 00       	mov    $0x1,%edx
    ae31:	48 89 ef             	mov    %rbp,%rdi
    ae34:	88 44 24 17          	mov    %al,0x17(%rsp)
    ae38:	e8 ff e3 00 00       	call   1923c <chap_update>
    ae3d:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    ae44:	4d 85 ed             	test   %r13,%r13
    ae47:	74 16                	je     ae5f <iscsi_handle_chap_r_value+0x86>
    ae49:	4c 89 ef             	mov    %r13,%rdi
    ae4c:	e8 c5 8b 00 00       	call   13a16 <strlen>
    ae51:	4c 89 ee             	mov    %r13,%rsi
    ae54:	48 89 ef             	mov    %rbp,%rdi
    ae57:	48 89 c2             	mov    %rax,%rdx
    ae5a:	e8 dd e3 00 00       	call   1923c <chap_update>
    ae5f:	48 8d b3 b9 00 00 00 	lea    0xb9(%rbx),%rsi
    ae66:	ba 10 00 00 00       	mov    $0x10,%edx
    ae6b:	48 89 ef             	mov    %rbp,%rdi
    ae6e:	e8 c9 e3 00 00       	call   1923c <chap_update>
    ae73:	48 89 ef             	mov    %rbp,%rdi
    ae76:	e8 d5 e3 00 00       	call   19250 <chap_respond>
    ae7b:	4c 89 e7             	mov    %r12,%rdi
    ae7e:	e8 93 8b 00 00       	call   13a16 <strlen>
    ae83:	4c 63 e8             	movslq %eax,%r13
    ae86:	4c 89 ef             	mov    %r13,%rdi
    ae89:	e8 87 18 00 00       	call   c715 <malloc>
    ae8e:	48 89 c5             	mov    %rax,%rbp
    ae91:	48 85 c0             	test   %rax,%rax
    ae94:	75 07                	jne    ae9d <iscsi_handle_chap_r_value+0xc4>
    ae96:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    ae9b:	eb 58                	jmp    aef5 <iscsi_handle_chap_r_value+0x11c>
    ae9d:	4c 89 ea             	mov    %r13,%rdx
    aea0:	48 89 c6             	mov    %rax,%rsi
    aea3:	4c 89 e7             	mov    %r12,%rdi
    aea6:	e8 ee fe ff ff       	call   ad99 <iscsi_large_binary_decode>
    aeab:	85 c0                	test   %eax,%eax
    aead:	78 36                	js     aee5 <iscsi_handle_chap_r_value+0x10c>
    aeaf:	3b 83 e8 00 00 00    	cmp    0xe8(%rbx),%eax
    aeb5:	74 07                	je     aebe <iscsi_handle_chap_r_value+0xe5>
    aeb7:	b8 68 9b f2 bc       	mov    $0xbcf29b68,%eax
    aebc:	eb 27                	jmp    aee5 <iscsi_handle_chap_r_value+0x10c>
    aebe:	48 8b b3 e0 00 00 00 	mov    0xe0(%rbx),%rsi
    aec5:	48 63 d0             	movslq %eax,%rdx
    aec8:	48 89 ef             	mov    %rbp,%rdi
    aecb:	e8 60 8a 00 00       	call   13930 <memcmp>
    aed0:	85 c0                	test   %eax,%eax
    aed2:	74 07                	je     aedb <iscsi_handle_chap_r_value+0x102>
    aed4:	b8 71 9d f2 fd       	mov    $0xfdf29d71,%eax
    aed9:	eb 0a                	jmp    aee5 <iscsi_handle_chap_r_value+0x10c>
    aedb:	81 8b 90 00 00 00 00 	orl    $0x40000,0x90(%rbx)
    aee2:	00 04 00 
    aee5:	48 89 ef             	mov    %rbp,%rdi
    aee8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    aeec:	e8 31 18 00 00       	call   c722 <free>
    aef1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    aef5:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    aefa:	48 2b 15 4f f1 01 00 	sub    0x1f14f(%rip),%rdx        # 2a050 <__stack_chk_guard>
    af01:	74 05                	je     af08 <iscsi_handle_chap_r_value+0x12f>
    af03:	e8 58 7b ff ff       	call   2a60 <__stack_chk_fail>
    af08:	48 83 c4 28          	add    $0x28,%rsp
    af0c:	5b                   	pop    %rbx
    af0d:	5d                   	pop    %rbp
    af0e:	41 5c                	pop    %r12
    af10:	41 5d                	pop    %r13
    af12:	c3                   	ret    

000000000000af13 <iscsi_handle_chap_c_value>:
    af13:	f3 0f 1e fa          	endbr64 
    af17:	41 55                	push   %r13
    af19:	41 54                	push   %r12
    af1b:	49 89 f4             	mov    %rsi,%r12
    af1e:	55                   	push   %rbp
    af1f:	53                   	push   %rbx
    af20:	48 89 fb             	mov    %rdi,%rbx
    af23:	48 89 f7             	mov    %rsi,%rdi
    af26:	48 83 ec 18          	sub    $0x18,%rsp
    af2a:	e8 e7 8a 00 00       	call   13a16 <strlen>
    af2f:	4c 63 e8             	movslq %eax,%r13
    af32:	4c 89 ef             	mov    %r13,%rdi
    af35:	e8 db 17 00 00       	call   c715 <malloc>
    af3a:	48 85 c0             	test   %rax,%rax
    af3d:	75 0a                	jne    af49 <iscsi_handle_chap_c_value+0x36>
    af3f:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    af44:	e9 85 00 00 00       	jmp    afce <iscsi_handle_chap_c_value+0xbb>
    af49:	4c 89 ea             	mov    %r13,%rdx
    af4c:	48 89 c6             	mov    %rax,%rsi
    af4f:	4c 89 e7             	mov    %r12,%rdi
    af52:	48 89 c5             	mov    %rax,%rbp
    af55:	e8 3f fe ff ff       	call   ad99 <iscsi_large_binary_decode>
    af5a:	85 c0                	test   %eax,%eax
    af5c:	78 60                	js     afbe <iscsi_handle_chap_c_value+0xab>
    af5e:	4c 8d ab d0 00 00 00 	lea    0xd0(%rbx),%r13
    af65:	48 63 d0             	movslq %eax,%rdx
    af68:	48 89 ee             	mov    %rbp,%rsi
    af6b:	4c 89 ef             	mov    %r13,%rdi
    af6e:	e8 c9 e2 00 00       	call   1923c <chap_update>
    af73:	4c 89 ef             	mov    %r13,%rdi
    af76:	e8 d5 e2 00 00       	call   19250 <chap_respond>
    af7b:	8b 83 90 00 00 00    	mov    0x90(%rbx),%eax
    af81:	89 c2                	mov    %eax,%edx
    af83:	80 ce 04             	or     $0x4,%dh
    af86:	48 83 bb a8 00 00 00 	cmpq   $0x0,0xa8(%rbx)
    af8d:	00 
    af8e:	89 93 90 00 00 00    	mov    %edx,0x90(%rbx)
    af94:	75 04                	jne    af9a <iscsi_handle_chap_c_value+0x87>
    af96:	31 c0                	xor    %eax,%eax
    af98:	eb 24                	jmp    afbe <iscsi_handle_chap_c_value+0xab>
    af9a:	80 cc 0c             	or     $0xc,%ah
    af9d:	45 31 e4             	xor    %r12d,%r12d
    afa0:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    afa6:	e8 72 4b 00 00       	call   fb1d <random>
    afab:	42 88 84 23 b8 00 00 	mov    %al,0xb8(%rbx,%r12,1)
    afb2:	00 
    afb3:	49 ff c4             	inc    %r12
    afb6:	49 83 fc 11          	cmp    $0x11,%r12
    afba:	75 ea                	jne    afa6 <iscsi_handle_chap_c_value+0x93>
    afbc:	eb d8                	jmp    af96 <iscsi_handle_chap_c_value+0x83>
    afbe:	48 89 ef             	mov    %rbp,%rdi
    afc1:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    afc5:	e8 58 17 00 00       	call   c722 <free>
    afca:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    afce:	48 83 c4 18          	add    $0x18,%rsp
    afd2:	5b                   	pop    %rbx
    afd3:	5d                   	pop    %rbp
    afd4:	41 5c                	pop    %r12
    afd6:	41 5d                	pop    %r13
    afd8:	c3                   	ret    

000000000000afd9 <iscsi_handle_targetaddress_value>:
    afd9:	f3 0f 1e fa          	endbr64 
    afdd:	41 54                	push   %r12
    afdf:	55                   	push   %rbp
    afe0:	48 89 f5             	mov    %rsi,%rbp
    afe3:	53                   	push   %rbx
    afe4:	48 89 fb             	mov    %rdi,%rbx
    afe7:	48 8b 7f 78          	mov    0x78(%rdi),%rdi
    afeb:	e8 32 17 00 00       	call   c722 <free>
    aff0:	48 89 ef             	mov    %rbp,%rdi
    aff3:	e8 31 8b 00 00       	call   13b29 <strdup>
    aff8:	48 89 43 78          	mov    %rax,0x78(%rbx)
    affc:	48 85 c0             	test   %rax,%rax
    afff:	75 08                	jne    b009 <iscsi_handle_targetaddress_value+0x30>
    b001:	41 bc 77 9f f2 ce    	mov    $0xcef29f77,%r12d
    b007:	eb 35                	jmp    b03e <iscsi_handle_targetaddress_value+0x65>
    b009:	c7 83 80 00 00 00 0c 	movl   $0xbc0c,0x80(%rbx)
    b010:	bc 00 00 
    b013:	48 89 c7             	mov    %rax,%rdi
    b016:	be 3a 00 00 00       	mov    $0x3a,%esi
    b01b:	45 31 e4             	xor    %r12d,%r12d
    b01e:	e8 00 8a 00 00       	call   13a23 <strchr>
    b023:	48 85 c0             	test   %rax,%rax
    b026:	74 16                	je     b03e <iscsi_handle_targetaddress_value+0x65>
    b028:	c6 00 00             	movb   $0x0,(%rax)
    b02b:	48 8d 78 01          	lea    0x1(%rax),%rdi
    b02f:	31 d2                	xor    %edx,%edx
    b031:	31 f6                	xor    %esi,%esi
    b033:	e8 1f 8b 00 00       	call   13b57 <strtoul>
    b038:	89 83 80 00 00 00    	mov    %eax,0x80(%rbx)
    b03e:	44 89 e0             	mov    %r12d,%eax
    b041:	5b                   	pop    %rbx
    b042:	5d                   	pop    %rbp
    b043:	41 5c                	pop    %r12
    b045:	c3                   	ret    

000000000000b046 <iscsi_close>:
    b046:	f3 0f 1e fa          	endbr64 
    b04a:	55                   	push   %rbp
    b04b:	89 f5                	mov    %esi,%ebp
    b04d:	53                   	push   %rbx
    b04e:	48 89 fb             	mov    %rdi,%rbx
    b051:	41 52                	push   %r10
    b053:	85 f6                	test   %esi,%esi
    b055:	75 05                	jne    b05c <iscsi_close+0x16>
    b057:	bd 6b 9f f2 f0       	mov    $0xf0f29f6b,%ebp
    b05c:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    b063:	e8 f8 49 00 00       	call   fa60 <process_del>
    b068:	41 59                	pop    %r9
    b06a:	48 8d 4b 30          	lea    0x30(%rbx),%rcx
    b06e:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b072:	48 8d 73 50          	lea    0x50(%rbx),%rsi
    b076:	89 ef                	mov    %ebp,%edi
    b078:	5b                   	pop    %rbx
    b079:	45 31 c0             	xor    %r8d,%r8d
    b07c:	31 c0                	xor    %eax,%eax
    b07e:	5d                   	pop    %rbp
    b07f:	e9 2c ea ff ff       	jmp    9ab0 <intfs_shutdown>

000000000000b084 <iscsi_tx_step>:
    b084:	f3 0f 1e fa          	endbr64 
    b088:	41 55                	push   %r13
    b08a:	41 54                	push   %r12
    b08c:	4c 8d 25 0c f7 ff ff 	lea    -0x8f4(%rip),%r12        # a79f <iscsi_tx_nothing>
    b093:	55                   	push   %rbp
    b094:	48 89 fd             	mov    %rdi,%rbp
    b097:	53                   	push   %rbx
    b098:	56                   	push   %rsi
    b099:	8b 85 3c 01 00 00    	mov    0x13c(%rbp),%eax
    b09f:	83 f8 02             	cmp    $0x2,%eax
    b0a2:	74 57                	je     b0fb <iscsi_tx_step+0x77>
    b0a4:	77 12                	ja     b0b8 <iscsi_tx_step+0x34>
    b0a6:	85 c0                	test   %eax,%eax
    b0a8:	74 3e                	je     b0e8 <iscsi_tx_step+0x64>
    b0aa:	4c 8d 2d d3 fa ff ff 	lea    -0x52d(%rip),%r13        # ab84 <iscsi_tx_bhs>
    b0b1:	bb 02 00 00 00       	mov    $0x2,%ebx
    b0b6:	eb 22                	jmp    b0da <iscsi_tx_step+0x56>
    b0b8:	83 f8 03             	cmp    $0x3,%eax
    b0bb:	0f 85 cb 00 00 00    	jne    b18c <iscsi_tx_step+0x108>
    b0c1:	8b 9d 10 01 00 00    	mov    0x110(%rbp),%ebx
    b0c7:	4c 8d 2d 82 f9 ff ff 	lea    -0x67e(%rip),%r13        # aa50 <iscsi_tx_data>
    b0ce:	0f cb                	bswap  %ebx
    b0d0:	81 e3 ff ff ff 00    	and    $0xffffff,%ebx
    b0d6:	74 2b                	je     b103 <iscsi_tx_step+0x7f>
    b0d8:	31 db                	xor    %ebx,%ebx
    b0da:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    b0de:	e8 31 c4 00 00       	call   17514 <xfer_window>
    b0e3:	48 85 c0             	test   %rax,%rax
    b0e6:	75 1b                	jne    b103 <iscsi_tx_step+0x7f>
    b0e8:	59                   	pop    %rcx
    b0e9:	48 8d bd 40 01 00 00 	lea    0x140(%rbp),%rdi
    b0f0:	5b                   	pop    %rbx
    b0f1:	5d                   	pop    %rbp
    b0f2:	41 5c                	pop    %r12
    b0f4:	41 5d                	pop    %r13
    b0f6:	e9 65 49 00 00       	jmp    fa60 <process_del>
    b0fb:	4d 89 e5             	mov    %r12,%r13
    b0fe:	bb 03 00 00 00       	mov    $0x3,%ebx
    b103:	48 89 ef             	mov    %rbp,%rdi
    b106:	41 ff d5             	call   *%r13
    b109:	89 c6                	mov    %eax,%esi
    b10b:	85 c0                	test   %eax,%eax
    b10d:	74 0f                	je     b11e <iscsi_tx_step+0x9a>
    b10f:	5a                   	pop    %rdx
    b110:	48 89 ef             	mov    %rbp,%rdi
    b113:	5b                   	pop    %rbx
    b114:	5d                   	pop    %rbp
    b115:	41 5c                	pop    %r12
    b117:	41 5d                	pop    %r13
    b119:	e9 28 ff ff ff       	jmp    b046 <iscsi_close>
    b11e:	89 9d 3c 01 00 00    	mov    %ebx,0x13c(%rbp)
    b124:	85 db                	test   %ebx,%ebx
    b126:	0f 85 6d ff ff ff    	jne    b099 <iscsi_tx_step+0x15>
    b12c:	48 8d bd 40 01 00 00 	lea    0x140(%rbp),%rdi
    b133:	e8 28 49 00 00       	call   fa60 <process_del>
    b138:	8a 85 0c 01 00 00    	mov    0x10c(%rbp),%al
    b13e:	83 e0 3f             	and    $0x3f,%eax
    b141:	3c 03                	cmp    $0x3,%al
    b143:	74 2c                	je     b171 <iscsi_tx_step+0xed>
    b145:	3c 05                	cmp    $0x5,%al
    b147:	0f 85 4c ff ff ff    	jne    b099 <iscsi_tx_step+0x15>
    b14d:	80 bd 0d 01 00 00 00 	cmpb   $0x0,0x10d(%rbp)
    b154:	0f 88 3f ff ff ff    	js     b099 <iscsi_tx_step+0x15>
    b15a:	8b b5 30 01 00 00    	mov    0x130(%rbp),%esi
    b160:	48 89 ef             	mov    %rbp,%rdi
    b163:	0f ce                	bswap  %esi
    b165:	ff c6                	inc    %esi
    b167:	e8 41 fa ff ff       	call   abad <iscsi_start_data_out>
    b16c:	e9 28 ff ff ff       	jmp    b099 <iscsi_tx_step+0x15>
    b171:	81 a5 90 00 00 00 ff 	andl   $0xffff00ff,0x90(%rbp)
    b178:	00 ff ff 
    b17b:	48 8d bd d0 00 00 00 	lea    0xd0(%rbp),%rdi
    b182:	e8 e1 e0 00 00       	call   19268 <chap_finish>
    b187:	e9 0d ff ff ff       	jmp    b099 <iscsi_tx_step+0x15>
    b18c:	58                   	pop    %rax
    b18d:	5b                   	pop    %rbx
    b18e:	5d                   	pop    %rbp
    b18f:	41 5c                	pop    %r12
    b191:	41 5d                	pop    %r13
    b193:	c3                   	ret    

000000000000b194 <iscsi_vredirect>:
    b194:	f3 0f 1e fa          	endbr64 
    b198:	41 55                	push   %r13
    b19a:	41 89 f5             	mov    %esi,%r13d
    b19d:	41 54                	push   %r12
    b19f:	49 89 d4             	mov    %rdx,%r12
    b1a2:	55                   	push   %rbp
    b1a3:	48 89 fd             	mov    %rdi,%rbp
    b1a6:	48 83 ec 20          	sub    $0x20,%rsp
    b1aa:	48 8b 05 9f ee 01 00 	mov    0x1ee9f(%rip),%rax        # 2a050 <__stack_chk_guard>
    b1b1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b1b6:	31 c0                	xor    %eax,%eax
    b1b8:	83 fe 03             	cmp    $0x3,%esi
    b1bb:	75 5f                	jne    b21c <iscsi_vredirect+0x88>
    b1bd:	48 89 e0             	mov    %rsp,%rax
    b1c0:	b9 06 00 00 00       	mov    $0x6,%ecx
    b1c5:	48 89 d6             	mov    %rdx,%rsi
    b1c8:	48 89 c7             	mov    %rax,%rdi
    b1cb:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    b1cd:	8b 04 24             	mov    (%rsp),%eax
    b1d0:	83 f8 2f             	cmp    $0x2f,%eax
    b1d3:	77 08                	ja     b1dd <iscsi_vredirect+0x49>
    b1d5:	83 c0 08             	add    $0x8,%eax
    b1d8:	89 04 24             	mov    %eax,(%rsp)
    b1db:	eb 06                	jmp    b1e3 <iscsi_vredirect+0x4f>
    b1dd:	48 83 44 24 08 08    	addq   $0x8,0x8(%rsp)
    b1e3:	8b 14 24             	mov    (%rsp),%edx
    b1e6:	83 fa 2f             	cmp    $0x2f,%edx
    b1e9:	77 0f                	ja     b1fa <iscsi_vredirect+0x66>
    b1eb:	89 d0                	mov    %edx,%eax
    b1ed:	83 c2 08             	add    $0x8,%edx
    b1f0:	48 03 44 24 10       	add    0x10(%rsp),%rax
    b1f5:	89 14 24             	mov    %edx,(%rsp)
    b1f8:	eb 0e                	jmp    b208 <iscsi_vredirect+0x74>
    b1fa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b1ff:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b203:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    b208:	48 8b 30             	mov    (%rax),%rsi
    b20b:	48 8d bd b8 01 00 00 	lea    0x1b8(%rbp),%rdi
    b212:	ba 20 00 00 00       	mov    $0x20,%edx
    b217:	e8 cd c1 00 00       	call   173e9 <__memcpy>
    b21c:	4c 89 e2             	mov    %r12,%rdx
    b21f:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    b223:	44 89 ee             	mov    %r13d,%esi
    b226:	e8 e5 3a 00 00       	call   ed10 <xfer_vreopen>
    b22b:	41 89 c4             	mov    %eax,%r12d
    b22e:	85 c0                	test   %eax,%eax
    b230:	74 0a                	je     b23c <iscsi_vredirect+0xa8>
    b232:	89 c6                	mov    %eax,%esi
    b234:	48 89 ef             	mov    %rbp,%rdi
    b237:	e8 0a fe ff ff       	call   b046 <iscsi_close>
    b23c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b241:	48 2b 05 08 ee 01 00 	sub    0x1ee08(%rip),%rax        # 2a050 <__stack_chk_guard>
    b248:	74 05                	je     b24f <iscsi_vredirect+0xbb>
    b24a:	e8 11 78 ff ff       	call   2a60 <__stack_chk_fail>
    b24f:	48 83 c4 20          	add    $0x20,%rsp
    b253:	44 89 e0             	mov    %r12d,%eax
    b256:	5d                   	pop    %rbp
    b257:	41 5c                	pop    %r12
    b259:	41 5d                	pop    %r13
    b25b:	c3                   	ret    

000000000000b25c <iscsi_socket_deliver>:
    b25c:	f3 0f 1e fa          	endbr64 
    b260:	41 57                	push   %r15
    b262:	41 56                	push   %r14
    b264:	41 55                	push   %r13
    b266:	41 54                	push   %r12
    b268:	49 89 f4             	mov    %rsi,%r12
    b26b:	55                   	push   %rbp
    b26c:	48 89 fd             	mov    %rdi,%rbp
    b26f:	53                   	push   %rbx
    b270:	48 8d 1d 9c 08 00 00 	lea    0x89c(%rip),%rbx        # bb13 <iscsi_rx_data>
    b277:	51                   	push   %rcx
    b278:	8b 85 90 01 00 00    	mov    0x190(%rbp),%eax
    b27e:	83 f8 02             	cmp    $0x2,%eax
    b281:	74 31                	je     b2b4 <iscsi_socket_deliver+0x58>
    b283:	77 19                	ja     b29e <iscsi_socket_deliver+0x42>
    b285:	85 c0                	test   %eax,%eax
    b287:	74 55                	je     b2de <iscsi_socket_deliver+0x82>
    b289:	0f b6 8d 64 01 00 00 	movzbl 0x164(%rbp),%ecx
    b290:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    b296:	c1 e1 02             	shl    $0x2,%ecx
    b299:	48 63 c9             	movslq %ecx,%rcx
    b29c:	eb 2f                	jmp    b2cd <iscsi_socket_deliver+0x71>
    b29e:	83 f8 03             	cmp    $0x3,%eax
    b2a1:	75 33                	jne    b2d6 <iscsi_socket_deliver+0x7a>
    b2a3:	0f b6 8d 67 01 00 00 	movzbl 0x167(%rbp),%ecx
    b2aa:	45 31 ff             	xor    %r15d,%r15d
    b2ad:	f7 d9                	neg    %ecx
    b2af:	83 e1 03             	and    $0x3,%ecx
    b2b2:	eb 19                	jmp    b2cd <iscsi_socket_deliver+0x71>
    b2b4:	8b 8d 64 01 00 00    	mov    0x164(%rbp),%ecx
    b2ba:	41 bf 03 00 00 00    	mov    $0x3,%r15d
    b2c0:	48 89 d8             	mov    %rbx,%rax
    b2c3:	0f c9                	bswap  %ecx
    b2c5:	81 e1 ff ff ff 00    	and    $0xffffff,%ecx
    b2cb:	eb 23                	jmp    b2f0 <iscsi_socket_deliver+0x94>
    b2cd:	48 8d 05 d2 f4 ff ff 	lea    -0xb2e(%rip),%rax        # a7a6 <iscsi_rx_discard>
    b2d4:	eb 1a                	jmp    b2f0 <iscsi_socket_deliver+0x94>
    b2d6:	41 be 7e 9f f2 e3    	mov    $0xe3f29f7e,%r14d
    b2dc:	eb 7c                	jmp    b35a <iscsi_socket_deliver+0xfe>
    b2de:	b9 30 00 00 00       	mov    $0x30,%ecx
    b2e3:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    b2e9:	48 8d 05 eb f4 ff ff 	lea    -0xb15(%rip),%rax        # a7db <iscsi_rx_bhs>
    b2f0:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    b2f5:	4d 8b 6c 24 20       	mov    0x20(%r12),%r13
    b2fa:	48 89 8d a0 01 00 00 	mov    %rcx,0x1a0(%rbp)
    b301:	48 89 ef             	mov    %rbp,%rdi
    b304:	48 2b 8d 98 01 00 00 	sub    0x198(%rbp),%rcx
    b30b:	49 29 f5             	sub    %rsi,%r13
    b30e:	49 39 cd             	cmp    %rcx,%r13
    b311:	4c 0f 47 e9          	cmova  %rcx,%r13
    b315:	4c 29 e9             	sub    %r13,%rcx
    b318:	4c 89 ea             	mov    %r13,%rdx
    b31b:	ff d0                	call   *%rax
    b31d:	41 89 c6             	mov    %eax,%r14d
    b320:	85 c0                	test   %eax,%eax
    b322:	75 36                	jne    b35a <iscsi_socket_deliver+0xfe>
    b324:	48 8b 85 98 01 00 00 	mov    0x198(%rbp),%rax
    b32b:	4c 01 e8             	add    %r13,%rax
    b32e:	48 89 85 98 01 00 00 	mov    %rax,0x198(%rbp)
    b335:	4d 01 6c 24 18       	add    %r13,0x18(%r12)
    b33a:	48 3b 85 a0 01 00 00 	cmp    0x1a0(%rbp),%rax
    b341:	75 17                	jne    b35a <iscsi_socket_deliver+0xfe>
    b343:	44 89 bd 90 01 00 00 	mov    %r15d,0x190(%rbp)
    b34a:	48 c7 85 98 01 00 00 	movq   $0x0,0x198(%rbp)
    b351:	00 00 00 00 
    b355:	e9 1e ff ff ff       	jmp    b278 <iscsi_socket_deliver+0x1c>
    b35a:	4c 89 e7             	mov    %r12,%rdi
    b35d:	e8 04 ea ff ff       	call   9d66 <free_iob>
    b362:	45 85 f6             	test   %r14d,%r14d
    b365:	74 0b                	je     b372 <iscsi_socket_deliver+0x116>
    b367:	44 89 f6             	mov    %r14d,%esi
    b36a:	48 89 ef             	mov    %rbp,%rdi
    b36d:	e8 d4 fc ff ff       	call   b046 <iscsi_close>
    b372:	5a                   	pop    %rdx
    b373:	44 89 f0             	mov    %r14d,%eax
    b376:	5b                   	pop    %rbx
    b377:	5d                   	pop    %rbp
    b378:	41 5c                	pop    %r12
    b37a:	41 5d                	pop    %r13
    b37c:	41 5e                	pop    %r14
    b37e:	41 5f                	pop    %r15
    b380:	c3                   	ret    

000000000000b381 <iscsi_command_close>:
    b381:	f3 0f 1e fa          	endbr64 
    b385:	41 54                	push   %r12
    b387:	49 89 fc             	mov    %rdi,%r12
    b38a:	48 83 c7 30          	add    $0x30,%rdi
    b38e:	48 83 ec 10          	sub    $0x10,%rsp
    b392:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    b396:	e8 7d e5 ff ff       	call   9918 <intf_restart>
    b39b:	49 83 bc 24 b0 01 00 	cmpq   $0x0,0x1b0(%r12)
    b3a2:	00 00 
    b3a4:	74 1b                	je     b3c1 <iscsi_command_close+0x40>
    b3a6:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    b3aa:	85 f6                	test   %esi,%esi
    b3ac:	75 05                	jne    b3b3 <iscsi_command_close+0x32>
    b3ae:	be 6b 9f f2 f4       	mov    $0xf4f29f6b,%esi
    b3b3:	48 83 c4 10          	add    $0x10,%rsp
    b3b7:	4c 89 e7             	mov    %r12,%rdi
    b3ba:	41 5c                	pop    %r12
    b3bc:	e9 85 fc ff ff       	jmp    b046 <iscsi_close>
    b3c1:	48 83 c4 10          	add    $0x10,%rsp
    b3c5:	41 5c                	pop    %r12
    b3c7:	c3                   	ret    

000000000000b3c8 <iscsi_handle_chap_n_value>:
    b3c8:	f3 0f 1e fa          	endbr64 
    b3cc:	48 8b bf a8 00 00 00 	mov    0xa8(%rdi),%rdi
    b3d3:	31 c0                	xor    %eax,%eax
    b3d5:	48 85 ff             	test   %rdi,%rdi
    b3d8:	74 11                	je     b3eb <iscsi_handle_chap_n_value+0x23>
    b3da:	51                   	push   %rcx
    b3db:	e8 dc 85 00 00       	call   139bc <strcmp>
    b3e0:	85 c0                	test   %eax,%eax
    b3e2:	74 05                	je     b3e9 <iscsi_handle_chap_n_value+0x21>
    b3e4:	b8 71 9e f2 fd       	mov    $0xfdf29e71,%eax
    b3e9:	5a                   	pop    %rdx
    b3ea:	c3                   	ret    
    b3eb:	c3                   	ret    

000000000000b3ec <iscsi_handle_chap_a_value>:
    b3ec:	f3 0f 1e fa          	endbr64 
    b3f0:	51                   	push   %rcx
    b3f1:	48 89 f7             	mov    %rsi,%rdi
    b3f4:	48 8d 35 da 7c 01 00 	lea    0x17cda(%rip),%rsi        # 230d5 <.LC8>
    b3fb:	e8 bc 85 00 00       	call   139bc <strcmp>
    b400:	85 c0                	test   %eax,%eax
    b402:	74 05                	je     b409 <iscsi_handle_chap_a_value+0x1d>
    b404:	b8 68 9e f2 bc       	mov    $0xbcf29e68,%eax
    b409:	5a                   	pop    %rdx
    b40a:	c3                   	ret    

000000000000b40b <iscsi_handle_chap_i_value>:
    b40b:	f3 0f 1e fa          	endbr64 
    b40f:	41 55                	push   %r13
    b411:	31 d2                	xor    %edx,%edx
    b413:	41 54                	push   %r12
    b415:	55                   	push   %rbp
    b416:	53                   	push   %rbx
    b417:	48 89 fb             	mov    %rdi,%rbx
    b41a:	48 89 f7             	mov    %rsi,%rdi
    b41d:	48 83 ec 28          	sub    $0x28,%rsp
    b421:	48 8b 05 28 ec 01 00 	mov    0x1ec28(%rip),%rax        # 2a050 <__stack_chk_guard>
    b428:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b42d:	31 c0                	xor    %eax,%eax
    b42f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    b434:	e8 1e 87 00 00       	call   13b57 <strtoul>
    b439:	49 89 c5             	mov    %rax,%r13
    b43c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    b441:	80 38 00             	cmpb   $0x0,(%rax)
    b444:	74 08                	je     b44e <iscsi_handle_chap_i_value+0x43>
    b446:	41 bc 68 9d f2 bc    	mov    $0xbcf29d68,%r12d
    b44c:	eb 5e                	jmp    b4ac <iscsi_handle_chap_i_value+0xa1>
    b44e:	48 8d ab d0 00 00 00 	lea    0xd0(%rbx),%rbp
    b455:	48 89 ef             	mov    %rbp,%rdi
    b458:	e8 0b de 00 00       	call   19268 <chap_finish>
    b45d:	48 8d 35 bc b2 01 00 	lea    0x1b2bc(%rip),%rsi        # 26720 <md5_algorithm>
    b464:	48 89 ef             	mov    %rbp,%rdi
    b467:	e8 83 dd 00 00       	call   191ef <chap_init>
    b46c:	41 89 c4             	mov    %eax,%r12d
    b46f:	85 c0                	test   %eax,%eax
    b471:	75 39                	jne    b4ac <iscsi_handle_chap_i_value+0xa1>
    b473:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
    b478:	ba 01 00 00 00       	mov    $0x1,%edx
    b47d:	48 89 ef             	mov    %rbp,%rdi
    b480:	44 88 6c 24 0f       	mov    %r13b,0xf(%rsp)
    b485:	e8 b2 dd 00 00       	call   1923c <chap_update>
    b48a:	4c 8b ab a0 00 00 00 	mov    0xa0(%rbx),%r13
    b491:	4d 85 ed             	test   %r13,%r13
    b494:	74 16                	je     b4ac <iscsi_handle_chap_i_value+0xa1>
    b496:	4c 89 ef             	mov    %r13,%rdi
    b499:	e8 78 85 00 00       	call   13a16 <strlen>
    b49e:	4c 89 ee             	mov    %r13,%rsi
    b4a1:	48 89 ef             	mov    %rbp,%rdi
    b4a4:	48 89 c2             	mov    %rax,%rdx
    b4a7:	e8 90 dd 00 00       	call   1923c <chap_update>
    b4ac:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b4b1:	48 2b 05 98 eb 01 00 	sub    0x1eb98(%rip),%rax        # 2a050 <__stack_chk_guard>
    b4b8:	74 05                	je     b4bf <iscsi_handle_chap_i_value+0xb4>
    b4ba:	e8 a1 75 ff ff       	call   2a60 <__stack_chk_fail>
    b4bf:	48 83 c4 28          	add    $0x28,%rsp
    b4c3:	44 89 e0             	mov    %r12d,%eax
    b4c6:	5b                   	pop    %rbx
    b4c7:	5d                   	pop    %rbp
    b4c8:	41 5c                	pop    %r12
    b4ca:	41 5d                	pop    %r13
    b4cc:	c3                   	ret    

000000000000b4cd <iscsi_scsi_command>:
    b4cd:	f3 0f 1e fa          	endbr64 
    b4d1:	41 54                	push   %r12
    b4d3:	49 89 d4             	mov    %rdx,%r12
    b4d6:	55                   	push   %rbp
    b4d7:	53                   	push   %rbx
    b4d8:	48 89 fb             	mov    %rdi,%rbx
    b4db:	e8 cd f2 ff ff       	call   a7ad <iscsi_scsi_window>
    b4e0:	48 85 c0             	test   %rax,%rax
    b4e3:	75 0a                	jne    b4ef <iscsi_scsi_command+0x22>
    b4e5:	b8 7d 9f f2 c0       	mov    $0xc0f29f7d,%eax
    b4ea:	e9 15 01 00 00       	jmp    b604 <iscsi_scsi_command+0x137>
    b4ef:	bf 38 00 00 00       	mov    $0x38,%edi
    b4f4:	48 89 f5             	mov    %rsi,%rbp
    b4f7:	e8 19 12 00 00       	call   c715 <malloc>
    b4fc:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
    b503:	48 89 c7             	mov    %rax,%rdi
    b506:	48 85 c0             	test   %rax,%rax
    b509:	75 0a                	jne    b515 <iscsi_scsi_command+0x48>
    b50b:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    b510:	e9 ef 00 00 00       	jmp    b604 <iscsi_scsi_command+0x137>
    b515:	ba 38 00 00 00       	mov    $0x38,%edx
    b51a:	4c 89 e6             	mov    %r12,%rsi
    b51d:	e8 c7 be 00 00       	call   173e9 <__memcpy>
    b522:	66 8b 05 0b e8 01 00 	mov    0x1e80b(%rip),%ax        # 29d34 <itt_idx.0>
    b529:	b9 30 00 00 00       	mov    $0x30,%ecx
    b52e:	48 8d bb 0c 01 00 00 	lea    0x10c(%rbx),%rdi
    b535:	ff c0                	inc    %eax
    b537:	66 89 05 f6 e7 01 00 	mov    %ax,0x1e7f6(%rip)        # 29d34 <itt_idx.0>
    b53e:	0f b7 c0             	movzwl %ax,%eax
    b541:	0d 00 00 ae 18       	or     $0x18ae0000,%eax
    b546:	89 83 f4 00 00 00    	mov    %eax,0xf4(%rbx)
    b54c:	31 c0                	xor    %eax,%eax
    b54e:	f3 aa                	rep stos %al,%es:(%rdi)
    b550:	c7 83 3c 01 00 00 01 	movl   $0x1,0x13c(%rbx)
    b557:	00 00 00 
    b55a:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    b561:	e8 a7 44 00 00       	call   fa0d <process_add>
    b566:	48 8b b3 b0 01 00 00 	mov    0x1b0(%rbx),%rsi
    b56d:	c6 83 0c 01 00 00 01 	movb   $0x1,0x10c(%rbx)
    b574:	48 83 7e 28 01       	cmpq   $0x1,0x28(%rsi)
    b579:	19 c0                	sbb    %eax,%eax
    b57b:	83 e0 c0             	and    $0xffffffc0,%eax
    b57e:	83 e8 3f             	sub    $0x3f,%eax
    b581:	88 83 0d 01 00 00    	mov    %al,0x10d(%rbx)
    b587:	48 83 7e 18 00       	cmpq   $0x0,0x18(%rsi)
    b58c:	74 09                	je     b597 <iscsi_scsi_command+0xca>
    b58e:	83 c8 20             	or     $0x20,%eax
    b591:	88 83 0d 01 00 00    	mov    %al,0x10d(%rbx)
    b597:	8b 06                	mov    (%rsi),%eax
    b599:	48 8d bb 2c 01 00 00 	lea    0x12c(%rbx),%rdi
    b5a0:	48 83 c6 08          	add    $0x8,%rsi
    b5a4:	89 83 14 01 00 00    	mov    %eax,0x114(%rbx)
    b5aa:	8b 46 fc             	mov    -0x4(%rsi),%eax
    b5ad:	89 83 18 01 00 00    	mov    %eax,0x118(%rbx)
    b5b3:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    b5b9:	0f c8                	bswap  %eax
    b5bb:	89 83 1c 01 00 00    	mov    %eax,0x11c(%rbx)
    b5c1:	48 8b 46 18          	mov    0x18(%rsi),%rax
    b5c5:	0b 46 28             	or     0x28(%rsi),%eax
    b5c8:	0f c8                	bswap  %eax
    b5ca:	89 83 20 01 00 00    	mov    %eax,0x120(%rbx)
    b5d0:	8b 83 04 01 00 00    	mov    0x104(%rbx),%eax
    b5d6:	0f c8                	bswap  %eax
    b5d8:	89 83 24 01 00 00    	mov    %eax,0x124(%rbx)
    b5de:	8b 83 08 01 00 00    	mov    0x108(%rbx),%eax
    b5e4:	ff c0                	inc    %eax
    b5e6:	0f c8                	bswap  %eax
    b5e8:	89 83 28 01 00 00    	mov    %eax,0x128(%rbx)
    b5ee:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    b5ef:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    b5f0:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    b5f1:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    b5f2:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    b5f6:	48 89 ee             	mov    %rbp,%rsi
    b5f9:	e8 43 e2 ff ff       	call   9841 <intf_plug_plug>
    b5fe:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    b604:	5b                   	pop    %rbx
    b605:	5d                   	pop    %rbp
    b606:	41 5c                	pop    %r12
    b608:	c3                   	ret    

000000000000b609 <iscsi_start_login>:
    b609:	53                   	push   %rbx
    b60a:	b9 30 00 00 00       	mov    $0x30,%ecx
    b60f:	48 89 fb             	mov    %rdi,%rbx
    b612:	31 c0                	xor    %eax,%eax
    b614:	48 8d bf 0c 01 00 00 	lea    0x10c(%rdi),%rdi
    b61b:	f3 aa                	rep stos %al,%es:(%rdi)
    b61d:	c7 83 3c 01 00 00 01 	movl   $0x1,0x13c(%rbx)
    b624:	00 00 00 
    b627:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    b62e:	e8 da 43 00 00       	call   fa0d <process_add>
    b633:	8a 83 90 00 00 00    	mov    0x90(%rbx),%al
    b639:	48 89 df             	mov    %rbx,%rdi
    b63c:	31 d2                	xor    %edx,%edx
    b63e:	c6 83 0c 01 00 00 43 	movb   $0x43,0x10c(%rbx)
    b645:	31 f6                	xor    %esi,%esi
    b647:	83 e0 0f             	and    $0xf,%eax
    b64a:	83 c8 80             	or     $0xffffff80,%eax
    b64d:	88 83 0d 01 00 00    	mov    %al,0x10d(%rbx)
    b653:	e8 9f f1 ff ff       	call   a7f7 <iscsi_build_login_request_strings>
    b658:	c7 83 14 01 00 00 40 	movl   $0x23270040,0x114(%rbx)
    b65f:	00 27 23 
    b662:	0f c8                	bswap  %eax
    b664:	89 83 10 01 00 00    	mov    %eax,0x110(%rbx)
    b66a:	8b 83 f0 00 00 00    	mov    0xf0(%rbx),%eax
    b670:	86 c4                	xchg   %al,%ah
    b672:	66 89 83 18 01 00 00 	mov    %ax,0x118(%rbx)
    b679:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    b67f:	0f c8                	bswap  %eax
    b681:	89 83 1c 01 00 00    	mov    %eax,0x11c(%rbx)
    b687:	8b 83 04 01 00 00    	mov    0x104(%rbx),%eax
    b68d:	0f c8                	bswap  %eax
    b68f:	89 83 24 01 00 00    	mov    %eax,0x124(%rbx)
    b695:	8b 83 08 01 00 00    	mov    0x108(%rbx),%eax
    b69b:	ff c0                	inc    %eax
    b69d:	0f c8                	bswap  %eax
    b69f:	89 83 28 01 00 00    	mov    %eax,0x128(%rbx)
    b6a5:	5b                   	pop    %rbx
    b6a6:	c3                   	ret    

000000000000b6a7 <iscsi_open_connection>:
    b6a7:	41 54                	push   %r12
    b6a9:	b9 20 00 00 00       	mov    $0x20,%ecx
    b6ae:	55                   	push   %rbp
    b6af:	48 89 fd             	mov    %rdi,%rbp
    b6b2:	48 83 ec 38          	sub    $0x38,%rsp
    b6b6:	48 8b 05 93 e9 01 00 	mov    0x1e993(%rip),%rax        # 2a050 <__stack_chk_guard>
    b6bd:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    b6c2:	31 c0                	xor    %eax,%eax
    b6c4:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    b6c9:	48 89 d7             	mov    %rdx,%rdi
    b6cc:	f3 aa                	rep stos %al,%es:(%rdi)
    b6ce:	8b 35 38 8f 01 00    	mov    0x18f38(%rip),%esi        # 2460c <tcp_sock_stream>
    b6d4:	48 8b 4d 78          	mov    0x78(%rbp),%rcx
    b6d8:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    b6dc:	45 31 c0             	xor    %r8d,%r8d
    b6df:	8b 85 80 00 00 00    	mov    0x80(%rbp),%eax
    b6e5:	86 c4                	xchg   %al,%ah
    b6e7:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    b6ec:	e8 72 4b 00 00       	call   10263 <xfer_open_named_socket>
    b6f1:	41 89 c4             	mov    %eax,%r12d
    b6f4:	85 c0                	test   %eax,%eax
    b6f6:	75 50                	jne    b748 <iscsi_open_connection+0xa1>
    b6f8:	48 83 bd a8 00 00 00 	cmpq   $0x1,0xa8(%rbp)
    b6ff:	01 
    b700:	19 d2                	sbb    %edx,%edx
    b702:	81 e2 00 00 fe ff    	and    $0xfffe0000,%edx
    b708:	81 c2 01 01 02 00    	add    $0x20101,%edx
    b70e:	89 95 90 00 00 00    	mov    %edx,0x90(%rbp)
    b714:	e8 04 44 00 00       	call   fb1d <random>
    b719:	48 89 ef             	mov    %rbp,%rdi
    b71c:	66 89 85 f0 00 00 00 	mov    %ax,0xf0(%rbp)
    b723:	66 8b 05 0a e6 01 00 	mov    0x1e60a(%rip),%ax        # 29d34 <itt_idx.0>
    b72a:	8d 50 01             	lea    0x1(%rax),%edx
    b72d:	66 89 15 00 e6 01 00 	mov    %dx,0x1e600(%rip)        # 29d34 <itt_idx.0>
    b734:	0f b7 d2             	movzwl %dx,%edx
    b737:	81 ca 00 00 ae 18    	or     $0x18ae0000,%edx
    b73d:	89 95 f4 00 00 00    	mov    %edx,0xf4(%rbp)
    b743:	e8 c1 fe ff ff       	call   b609 <iscsi_start_login>
    b748:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b74d:	48 2b 05 fc e8 01 00 	sub    0x1e8fc(%rip),%rax        # 2a050 <__stack_chk_guard>
    b754:	74 05                	je     b75b <iscsi_open_connection+0xb4>
    b756:	e8 05 73 ff ff       	call   2a60 <__stack_chk_fail>
    b75b:	48 83 c4 38          	add    $0x38,%rsp
    b75f:	44 89 e0             	mov    %r12d,%eax
    b762:	5d                   	pop    %rbp
    b763:	41 5c                	pop    %r12
    b765:	c3                   	ret    

000000000000b766 <iscsi_open>:
    b766:	f3 0f 1e fa          	endbr64 
    b76a:	41 57                	push   %r15
    b76c:	41 56                	push   %r14
    b76e:	41 55                	push   %r13
    b770:	41 54                	push   %r12
    b772:	55                   	push   %rbp
    b773:	48 83 ec 40          	sub    $0x40,%rsp
    b777:	48 8b 05 d2 e8 01 00 	mov    0x1e8d2(%rip),%rax        # 2a050 <__stack_chk_guard>
    b77e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    b783:	31 c0                	xor    %eax,%eax
    b785:	48 83 7e 18 00       	cmpq   $0x0,0x18(%rsi)
    b78a:	75 0b                	jne    b797 <iscsi_open+0x31>
    b78c:	41 bc 7e 9c f2 e3    	mov    $0xe3f29c7e,%r12d
    b792:	e9 58 03 00 00       	jmp    baef <iscsi_open+0x389>
    b797:	49 89 fe             	mov    %rdi,%r14
    b79a:	bf 00 02 00 00       	mov    $0x200,%edi
    b79f:	49 89 f4             	mov    %rsi,%r12
    b7a2:	e8 8f 0f 00 00       	call   c736 <zalloc>
    b7a7:	48 89 c5             	mov    %rax,%rbp
    b7aa:	48 85 c0             	test   %rax,%rax
    b7ad:	75 0b                	jne    b7ba <iscsi_open+0x54>
    b7af:	41 bc 77 9f f2 ce    	mov    $0xcef29f77,%r12d
    b7b5:	e9 35 03 00 00       	jmp    baef <iscsi_open+0x389>
    b7ba:	48 8d 05 4a f5 ff ff 	lea    -0xab6(%rip),%rax        # ad0b <iscsi_free>
    b7c1:	48 8d 15 d8 ad 01 00 	lea    0x1add8(%rip),%rdx        # 265a0 <iscsi_control_desc>
    b7c8:	49 8b 7c 24 18       	mov    0x18(%r12),%rdi
    b7cd:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
    b7d1:	48 89 45 08          	mov    %rax,0x8(%rbp)
    b7d5:	48 8d 05 e4 ac 01 00 	lea    0x1ace4(%rip),%rax        # 264c0 <null_intf>
    b7dc:	48 89 45 10          	mov    %rax,0x10(%rbp)
    b7e0:	48 89 45 30          	mov    %rax,0x30(%rbp)
    b7e4:	48 89 45 50          	mov    %rax,0x50(%rbp)
    b7e8:	48 8d 05 11 ae 01 00 	lea    0x1ae11(%rip),%rax        # 26600 <iscsi_socket_desc>
    b7ef:	48 89 45 60          	mov    %rax,0x60(%rbp)
    b7f3:	48 89 45 68          	mov    %rax,0x68(%rbp)
    b7f7:	48 8d 85 40 01 00 00 	lea    0x140(%rbp),%rax
    b7fe:	48 89 85 40 01 00 00 	mov    %rax,0x140(%rbp)
    b805:	48 89 85 48 01 00 00 	mov    %rax,0x148(%rbp)
    b80c:	48 8d 05 4d ae 01 00 	lea    0x1ae4d(%rip),%rax        # 26660 <iscsi_process_desc>
    b813:	48 89 85 50 01 00 00 	mov    %rax,0x150(%rbp)
    b81a:	48 8d 05 5f cc 01 00 	lea    0x1cc5f(%rip),%rax        # 28480 <ibft_model>
    b821:	48 89 55 20          	mov    %rdx,0x20(%rbp)
    b825:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    b829:	48 8d 15 30 ad 01 00 	lea    0x1ad30(%rip),%rdx        # 26560 <iscsi_data_desc>
    b830:	48 89 85 e8 01 00 00 	mov    %rax,0x1e8(%rbp)
    b837:	48 8d 85 f0 01 00 00 	lea    0x1f0(%rbp),%rax
    b83e:	48 89 55 40          	mov    %rdx,0x40(%rbp)
    b842:	48 89 55 48          	mov    %rdx,0x48(%rbp)
    b846:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
    b84a:	48 89 6d 58          	mov    %rbp,0x58(%rbp)
    b84e:	48 89 ad 58 01 00 00 	mov    %rbp,0x158(%rbp)
    b855:	48 89 ad e0 01 00 00 	mov    %rbp,0x1e0(%rbp)
    b85c:	48 89 85 f0 01 00 00 	mov    %rax,0x1f0(%rbp)
    b863:	48 89 85 f8 01 00 00 	mov    %rax,0x1f8(%rbp)
    b86a:	e8 ba 82 00 00       	call   13b29 <strdup>
    b86f:	31 d2                	xor    %edx,%edx
    b871:	49 89 c5             	mov    %rax,%r13
    b874:	48 85 c0             	test   %rax,%rax
    b877:	74 09                	je     b882 <iscsi_open+0x11c>
    b879:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    b87e:	31 ff                	xor    %edi,%edi
    b880:	eb 2b                	jmp    b8ad <iscsi_open+0x147>
    b882:	e9 77 01 00 00       	jmp    b9fe <iscsi_open+0x298>
    b887:	40 80 fe 5b          	cmp    $0x5b,%sil
    b88b:	74 3b                	je     b8c8 <iscsi_open+0x162>
    b88d:	40 80 fe 5d          	cmp    $0x5d,%sil
    b891:	0f 44 cf             	cmove  %edi,%ecx
    b894:	48 ff c0             	inc    %rax
    b897:	40 8a 30             	mov    (%rax),%sil
    b89a:	40 80 fe 3a          	cmp    $0x3a,%sil
    b89e:	75 1b                	jne    b8bb <iscsi_open+0x155>
    b8a0:	85 c9                	test   %ecx,%ecx
    b8a2:	75 f0                	jne    b894 <iscsi_open+0x12e>
    b8a4:	c6 00 00             	movb   $0x0,(%rax)
    b8a7:	48 ff c2             	inc    %rdx
    b8aa:	48 ff c0             	inc    %rax
    b8ad:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    b8b1:	48 83 fa 04          	cmp    $0x4,%rdx
    b8b5:	74 18                	je     b8cf <iscsi_open+0x169>
    b8b7:	31 c9                	xor    %ecx,%ecx
    b8b9:	eb dc                	jmp    b897 <iscsi_open+0x131>
    b8bb:	40 84 f6             	test   %sil,%sil
    b8be:	75 c7                	jne    b887 <iscsi_open+0x121>
    b8c0:	41 bc 7e 9e f2 e3    	mov    $0xe3f29e7e,%r12d
    b8c6:	eb 71                	jmp    b939 <iscsi_open+0x1d3>
    b8c8:	b9 01 00 00 00       	mov    $0x1,%ecx
    b8cd:	eb c5                	jmp    b894 <iscsi_open+0x12e>
    b8cf:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    b8d4:	e8 50 82 00 00       	call   13b29 <strdup>
    b8d9:	48 89 45 78          	mov    %rax,0x78(%rbp)
    b8dd:	48 85 c0             	test   %rax,%rax
    b8e0:	75 02                	jne    b8e4 <iscsi_open+0x17e>
    b8e2:	eb 4f                	jmp    b933 <iscsi_open+0x1cd>
    b8e4:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    b8e9:	31 f6                	xor    %esi,%esi
    b8eb:	ba 0a 00 00 00       	mov    $0xa,%edx
    b8f0:	e8 62 82 00 00       	call   13b57 <strtoul>
    b8f5:	ba bc 0c 00 00       	mov    $0xcbc,%edx
    b8fa:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    b8ff:	48 8d b5 d8 01 00 00 	lea    0x1d8(%rbp),%rsi
    b906:	85 c0                	test   %eax,%eax
    b908:	0f 44 c2             	cmove  %edx,%eax
    b90b:	89 85 80 00 00 00    	mov    %eax,0x80(%rbp)
    b911:	e8 45 58 00 00       	call   1115b <scsi_parse_lun>
    b916:	41 89 c4             	mov    %eax,%r12d
    b919:	85 c0                	test   %eax,%eax
    b91b:	75 1c                	jne    b939 <iscsi_open+0x1d3>
    b91d:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    b922:	e8 02 82 00 00       	call   13b29 <strdup>
    b927:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
    b92e:	48 85 c0             	test   %rax,%rax
    b931:	75 06                	jne    b939 <iscsi_open+0x1d3>
    b933:	41 bc 77 9f f2 ce    	mov    $0xcef29f77,%r12d
    b939:	4c 89 ef             	mov    %r13,%rdi
    b93c:	e8 e1 0d 00 00       	call   c722 <free>
    b941:	45 85 e4             	test   %r12d,%r12d
    b944:	0f 85 92 01 00 00    	jne    badc <iscsi_open+0x376>
    b94a:	31 ff                	xor    %edi,%edi
    b94c:	48 8d 95 98 00 00 00 	lea    0x98(%rbp),%rdx
    b953:	48 8d 35 9e de 01 00 	lea    0x1de9e(%rip),%rsi        # 297f8 <username_setting>
    b95a:	e8 6b 65 00 00       	call   11eca <fetch_string_setting_copy>
    b95f:	31 ff                	xor    %edi,%edi
    b961:	48 8d 95 a0 00 00 00 	lea    0xa0(%rbp),%rdx
    b968:	48 8d 35 61 de 01 00 	lea    0x1de61(%rip),%rsi        # 297d0 <password_setting>
    b96f:	e8 56 65 00 00       	call   11eca <fetch_string_setting_copy>
    b974:	31 ff                	xor    %edi,%edi
    b976:	48 8d 95 a8 00 00 00 	lea    0xa8(%rbp),%rdx
    b97d:	48 8d 35 c4 de 01 00 	lea    0x1dec4(%rip),%rsi        # 29848 <reverse_username_setting>
    b984:	e8 41 65 00 00       	call   11eca <fetch_string_setting_copy>
    b989:	4c 8d 65 70          	lea    0x70(%rbp),%r12
    b98d:	31 ff                	xor    %edi,%edi
    b98f:	48 8d 95 b0 00 00 00 	lea    0xb0(%rbp),%rdx
    b996:	48 8d 35 83 de 01 00 	lea    0x1de83(%rip),%rsi        # 29820 <reverse_password_setting>
    b99d:	e8 28 65 00 00       	call   11eca <fetch_string_setting_copy>
    b9a2:	31 ff                	xor    %edi,%edi
    b9a4:	4c 89 e2             	mov    %r12,%rdx
    b9a7:	48 8d 35 f2 db 01 00 	lea    0x1dbf2(%rip),%rsi        # 295a0 <initiator_iqn_setting>
    b9ae:	e8 17 65 00 00       	call   11eca <fetch_string_setting_copy>
    b9b3:	48 83 7d 70 00       	cmpq   $0x0,0x70(%rbp)
    b9b8:	0f 85 8d 00 00 00    	jne    ba4b <iscsi_open+0x2e5>
    b9be:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    b9c3:	48 8d 35 9e dc 01 00 	lea    0x1dc9e(%rip),%rsi        # 29668 <hostname_setting>
    b9ca:	31 ff                	xor    %edi,%edi
    b9cc:	e8 f9 64 00 00       	call   11eca <fetch_string_setting_copy>
    b9d1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    b9d6:	48 85 d2             	test   %rdx,%rdx
    b9d9:	74 2e                	je     ba09 <iscsi_open+0x2a3>
    b9db:	4c 89 e7             	mov    %r12,%rdi
    b9de:	31 c0                	xor    %eax,%eax
    b9e0:	48 8d 35 e7 79 01 00 	lea    0x179e7(%rip),%rsi        # 233ce <.LC9>
    b9e7:	e8 93 c7 00 00       	call   1817f <asprintf>
    b9ec:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    b9f1:	41 89 c4             	mov    %eax,%r12d
    b9f4:	e8 29 0d 00 00       	call   c722 <free>
    b9f9:	45 85 e4             	test   %r12d,%r12d
    b9fc:	79 4d                	jns    ba4b <iscsi_open+0x2e5>
    b9fe:	41 bc 77 9f f2 ce    	mov    $0xcef29f77,%r12d
    ba04:	e9 d3 00 00 00       	jmp    badc <iscsi_open+0x376>
    ba09:	31 ff                	xor    %edi,%edi
    ba0b:	4c 89 fa             	mov    %r15,%rdx
    ba0e:	48 8d 35 7b dc 01 00 	lea    0x1dc7b(%rip),%rsi        # 29690 <uuid_setting>
    ba15:	e8 2a 68 00 00       	call   12244 <fetch_uuid_setting>
    ba1a:	85 c0                	test   %eax,%eax
    ba1c:	79 0b                	jns    ba29 <iscsi_open+0x2c3>
    ba1e:	41 bc 7e 9a f2 e3    	mov    $0xe3f29a7e,%r12d
    ba24:	e9 b3 00 00 00       	jmp    badc <iscsi_open+0x376>
    ba29:	4c 89 ff             	mov    %r15,%rdi
    ba2c:	e8 00 b2 00 00       	call   16c31 <uuid_ntoa>
    ba31:	48 8d 35 96 79 01 00 	lea    0x17996(%rip),%rsi        # 233ce <.LC9>
    ba38:	4c 89 e7             	mov    %r12,%rdi
    ba3b:	48 89 c2             	mov    %rax,%rdx
    ba3e:	31 c0                	xor    %eax,%eax
    ba40:	e8 3a c7 00 00       	call   1817f <asprintf>
    ba45:	85 c0                	test   %eax,%eax
    ba47:	79 02                	jns    ba4b <iscsi_open+0x2e5>
    ba49:	eb b3                	jmp    b9fe <iscsi_open+0x298>
    ba4b:	48 8b 95 98 00 00 00 	mov    0x98(%rbp),%rdx
    ba52:	48 85 d2             	test   %rdx,%rdx
    ba55:	0f 95 c1             	setne  %cl
    ba58:	48 83 bd a0 00 00 00 	cmpq   $0x0,0xa0(%rbp)
    ba5f:	00 
    ba60:	0f 95 c0             	setne  %al
    ba63:	38 c1                	cmp    %al,%cl
    ba65:	75 23                	jne    ba8a <iscsi_open+0x324>
    ba67:	48 83 bd a8 00 00 00 	cmpq   $0x0,0xa8(%rbp)
    ba6e:	00 
    ba6f:	0f 95 c0             	setne  %al
    ba72:	48 83 bd b0 00 00 00 	cmpq   $0x0,0xb0(%rbp)
    ba79:	00 
    ba7a:	0f 95 c1             	setne  %cl
    ba7d:	38 c8                	cmp    %cl,%al
    ba7f:	75 09                	jne    ba8a <iscsi_open+0x324>
    ba81:	48 85 d2             	test   %rdx,%rdx
    ba84:	75 0c                	jne    ba92 <iscsi_open+0x32c>
    ba86:	84 c0                	test   %al,%al
    ba88:	74 08                	je     ba92 <iscsi_open+0x32c>
    ba8a:	41 bc 7e 9d f2 e3    	mov    $0xe3f29d7e,%r12d
    ba90:	eb 4a                	jmp    badc <iscsi_open+0x376>
    ba92:	48 83 7d 78 00       	cmpq   $0x0,0x78(%rbp)
    ba97:	75 08                	jne    baa1 <iscsi_open+0x33b>
    ba99:	41 bc 7d 9c f2 c3    	mov    $0xc3f29c7d,%r12d
    ba9f:	eb 3b                	jmp    badc <iscsi_open+0x376>
    baa1:	48 83 bd 88 00 00 00 	cmpq   $0x0,0x88(%rbp)
    baa8:	00 
    baa9:	75 08                	jne    bab3 <iscsi_open+0x34d>
    baab:	41 bc 7e 9b f2 e3    	mov    $0xe3f29b7e,%r12d
    bab1:	eb 29                	jmp    badc <iscsi_open+0x376>
    bab3:	48 89 ef             	mov    %rbp,%rdi
    bab6:	e8 ec fb ff ff       	call   b6a7 <iscsi_open_connection>
    babb:	41 89 c4             	mov    %eax,%r12d
    babe:	85 c0                	test   %eax,%eax
    bac0:	75 1a                	jne    badc <iscsi_open+0x376>
    bac2:	48 8d 95 d8 01 00 00 	lea    0x1d8(%rbp),%rdx
    bac9:	48 8d 75 10          	lea    0x10(%rbp),%rsi
    bacd:	4c 89 f7             	mov    %r14,%rdi
    bad0:	e8 49 57 00 00       	call   1121e <scsi_open>
    bad5:	41 89 c4             	mov    %eax,%r12d
    bad8:	85 c0                	test   %eax,%eax
    bada:	74 0b                	je     bae7 <iscsi_open+0x381>
    badc:	44 89 e6             	mov    %r12d,%esi
    badf:	48 89 ef             	mov    %rbp,%rdi
    bae2:	e8 5f f5 ff ff       	call   b046 <iscsi_close>
    bae7:	48 89 ef             	mov    %rbp,%rdi
    baea:	e8 2b 44 00 00       	call   ff1a <ref_decrement>
    baef:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    baf4:	48 2b 05 55 e5 01 00 	sub    0x1e555(%rip),%rax        # 2a050 <__stack_chk_guard>
    bafb:	74 05                	je     bb02 <iscsi_open+0x39c>
    bafd:	e8 5e 6f ff ff       	call   2a60 <__stack_chk_fail>
    bb02:	48 83 c4 40          	add    $0x40,%rsp
    bb06:	44 89 e0             	mov    %r12d,%eax
    bb09:	5d                   	pop    %rbp
    bb0a:	41 5c                	pop    %r12
    bb0c:	41 5d                	pop    %r13
    bb0e:	41 5e                	pop    %r14
    bb10:	41 5f                	pop    %r15
    bb12:	c3                   	ret    

000000000000bb13 <iscsi_rx_data>:
    bb13:	f3 0f 1e fa          	endbr64 
    bb17:	41 57                	push   %r15
    bb19:	41 56                	push   %r14
    bb1b:	49 89 fe             	mov    %rdi,%r14
    bb1e:	41 55                	push   %r13
    bb20:	41 54                	push   %r12
    bb22:	55                   	push   %rbp
    bb23:	53                   	push   %rbx
    bb24:	48 89 cb             	mov    %rcx,%rbx
    bb27:	48 83 ec 38          	sub    $0x38,%rsp
    bb2b:	48 8b 05 1e e5 01 00 	mov    0x1e51e(%rip),%rax        # 2a050 <__stack_chk_guard>
    bb32:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    bb37:	8b 87 7c 01 00 00    	mov    0x17c(%rdi),%eax
    bb3d:	0f c8                	bswap  %eax
    bb3f:	89 87 04 01 00 00    	mov    %eax,0x104(%rdi)
    bb45:	8b 87 78 01 00 00    	mov    0x178(%rdi),%eax
    bb4b:	0f c8                	bswap  %eax
    bb4d:	89 87 08 01 00 00    	mov    %eax,0x108(%rdi)
    bb53:	8a 87 60 01 00 00    	mov    0x160(%rdi),%al
    bb59:	83 e0 3f             	and    $0x3f,%eax
    bb5c:	3c 23                	cmp    $0x23,%al
    bb5e:	74 60                	je     bbc0 <iscsi_rx_data+0xad>
    bb60:	77 18                	ja     bb7a <iscsi_rx_data+0x67>
    bb62:	45 31 ff             	xor    %r15d,%r15d
    bb65:	3c 20                	cmp    $0x20,%al
    bb67:	0f 84 4f 04 00 00    	je     bfbc <iscsi_rx_data+0x4a9>
    bb6d:	3c 21                	cmp    $0x21,%al
    bb6f:	0f 84 1e 01 00 00    	je     bc93 <iscsi_rx_data+0x180>
    bb75:	e9 7d 02 00 00       	jmp    bdf7 <iscsi_rx_data+0x2e4>
    bb7a:	3c 25                	cmp    $0x25,%al
    bb7c:	0f 84 08 02 00 00    	je     bd8a <iscsi_rx_data+0x277>
    bb82:	3c 31                	cmp    $0x31,%al
    bb84:	0f 85 6d 02 00 00    	jne    bdf7 <iscsi_rx_data+0x2e4>
    bb8a:	8b 87 74 01 00 00    	mov    0x174(%rdi),%eax
    bb90:	31 f6                	xor    %esi,%esi
    bb92:	0f c8                	bswap  %eax
    bb94:	89 87 f8 00 00 00    	mov    %eax,0xf8(%rdi)
    bb9a:	8b 87 88 01 00 00    	mov    0x188(%rdi),%eax
    bba0:	0f c8                	bswap  %eax
    bba2:	89 87 fc 00 00 00    	mov    %eax,0xfc(%rdi)
    bba8:	8b 87 8c 01 00 00    	mov    0x18c(%rdi),%eax
    bbae:	0f c8                	bswap  %eax
    bbb0:	89 87 00 01 00 00    	mov    %eax,0x100(%rdi)
    bbb6:	e8 f2 ef ff ff       	call   abad <iscsi_start_data_out>
    bbbb:	e9 2f 02 00 00       	jmp    bdef <iscsi_rx_data+0x2dc>
    bbc0:	e8 bf f0 ff ff       	call   ac84 <iscsi_rx_buffered_data>
    bbc5:	41 89 c7             	mov    %eax,%r15d
    bbc8:	85 c0                	test   %eax,%eax
    bbca:	0f 85 ec 03 00 00    	jne    bfbc <iscsi_rx_data+0x4a9>
    bbd0:	48 85 db             	test   %rbx,%rbx
    bbd3:	0f 85 16 02 00 00    	jne    bdef <iscsi_rx_data+0x2dc>
    bbd9:	4d 8b ae a0 01 00 00 	mov    0x1a0(%r14),%r13
    bbe0:	49 8b 9e a8 01 00 00 	mov    0x1a8(%r14),%rbx
    bbe7:	4c 89 ee             	mov    %r13,%rsi
    bbea:	48 89 df             	mov    %rbx,%rdi
    bbed:	e8 0d 7e 00 00       	call   139ff <strnlen>
    bbf2:	4c 8d 60 01          	lea    0x1(%rax),%r12
    bbf6:	4d 39 e5             	cmp    %r12,%r13
    bbf9:	0f 82 10 02 00 00    	jb     be0f <iscsi_rx_data+0x2fc>
    bbff:	be 3d 00 00 00       	mov    $0x3d,%esi
    bc04:	48 89 df             	mov    %rbx,%rdi
    bc07:	e8 17 7e 00 00       	call   13a23 <strchr>
    bc0c:	48 85 c0             	test   %rax,%rax
    bc0f:	75 0b                	jne    bc1c <iscsi_rx_data+0x109>
    bc11:	41 bf 68 9a f2 bc    	mov    $0xbcf29a68,%r15d
    bc17:	e9 a0 03 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bc1c:	48 89 c1             	mov    %rax,%rcx
    bc1f:	48 8d 68 01          	lea    0x1(%rax),%rbp
    bc23:	48 8d 35 bc 77 01 00 	lea    0x177bc(%rip),%rsi        # 233e6 <.LC10>
    bc2a:	48 29 d9             	sub    %rbx,%rcx
    bc2d:	48 89 ef             	mov    %rbp,%rdi
    bc30:	48 89 0c 24          	mov    %rcx,(%rsp)
    bc34:	e8 83 7d 00 00       	call   139bc <strcmp>
    bc39:	85 c0                	test   %eax,%eax
    bc3b:	75 0b                	jne    bc48 <iscsi_rx_data+0x135>
    bc3d:	41 bf 68 99 f2 bc    	mov    $0xbcf29968,%r15d
    bc43:	e9 74 03 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bc48:	48 8d 0d 31 aa 01 00 	lea    0x1aa31(%rip),%rcx        # 26680 <iscsi_string_types>
    bc4f:	48 8b 31             	mov    (%rcx),%rsi
    bc52:	48 85 f6             	test   %rsi,%rsi
    bc55:	74 31                	je     bc88 <iscsi_rx_data+0x175>
    bc57:	48 8b 14 24          	mov    (%rsp),%rdx
    bc5b:	48 89 df             	mov    %rbx,%rdi
    bc5e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    bc63:	e8 2b 7d 00 00       	call   13993 <strncmp>
    bc68:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    bc6d:	85 c0                	test   %eax,%eax
    bc6f:	74 06                	je     bc77 <iscsi_rx_data+0x164>
    bc71:	48 83 c1 10          	add    $0x10,%rcx
    bc75:	eb d8                	jmp    bc4f <iscsi_rx_data+0x13c>
    bc77:	48 89 ee             	mov    %rbp,%rsi
    bc7a:	4c 89 f7             	mov    %r14,%rdi
    bc7d:	ff 51 08             	call   *0x8(%rcx)
    bc80:	85 c0                	test   %eax,%eax
    bc82:	0f 85 7f 01 00 00    	jne    be07 <iscsi_rx_data+0x2f4>
    bc88:	4c 01 e3             	add    %r12,%rbx
    bc8b:	4d 29 e5             	sub    %r12,%r13
    bc8e:	e9 54 ff ff ff       	jmp    bbe7 <iscsi_rx_data+0xd4>
    bc93:	e8 ec ef ff ff       	call   ac84 <iscsi_rx_buffered_data>
    bc98:	41 89 c7             	mov    %eax,%r15d
    bc9b:	85 c0                	test   %eax,%eax
    bc9d:	0f 85 19 03 00 00    	jne    bfbc <iscsi_rx_data+0x4a9>
    bca3:	48 85 db             	test   %rbx,%rbx
    bca6:	0f 85 10 03 00 00    	jne    bfbc <iscsi_rx_data+0x4a9>
    bcac:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    bcb1:	48 89 ef             	mov    %rbp,%rdi
    bcb4:	ab                   	stos   %eax,%es:(%rdi)
    bcb5:	ab                   	stos   %eax,%es:(%rdi)
    bcb6:	ab                   	stos   %eax,%es:(%rdi)
    bcb7:	ab                   	stos   %eax,%es:(%rdi)
    bcb8:	ab                   	stos   %eax,%es:(%rdi)
    bcb9:	ab                   	stos   %eax,%es:(%rdi)
    bcba:	41 8a 86 63 01 00 00 	mov    0x163(%r14),%al
    bcc1:	41 8a 96 61 01 00 00 	mov    0x161(%r14),%dl
    bcc8:	88 44 24 10          	mov    %al,0x10(%rsp)
    bccc:	41 8b 86 8c 01 00 00 	mov    0x18c(%r14),%eax
    bcd3:	0f c8                	bswap  %eax
    bcd5:	f6 c2 04             	test   $0x4,%dl
    bcd8:	74 04                	je     bcde <iscsi_rx_data+0x1cb>
    bcda:	89 c0                	mov    %eax,%eax
    bcdc:	eb 07                	jmp    bce5 <iscsi_rx_data+0x1d2>
    bcde:	80 e2 02             	and    $0x2,%dl
    bce1:	74 07                	je     bcea <iscsi_rx_data+0x1d7>
    bce3:	f7 d8                	neg    %eax
    bce5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bcea:	41 8b 86 64 01 00 00 	mov    0x164(%r14),%eax
    bcf1:	0f c8                	bswap  %eax
    bcf3:	25 ff ff ff 00       	and    $0xffffff,%eax
    bcf8:	89 c6                	mov    %eax,%esi
    bcfa:	74 19                	je     bd15 <iscsi_rx_data+0x202>
    bcfc:	49 8b 86 a8 01 00 00 	mov    0x1a8(%r14),%rax
    bd03:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    bd08:	48 83 ee 02          	sub    $0x2,%rsi
    bd0c:	48 8d 78 02          	lea    0x2(%rax),%rdi
    bd10:	e8 dd 54 00 00       	call   111f2 <scsi_parse_sense>
    bd15:	49 8b be a8 01 00 00 	mov    0x1a8(%r14),%rdi
    bd1c:	e8 01 0a 00 00       	call   c722 <free>
    bd21:	41 80 be 62 01 00 00 	cmpb   $0x0,0x162(%r14)
    bd28:	00 
    bd29:	49 c7 86 a8 01 00 00 	movq   $0x0,0x1a8(%r14)
    bd30:	00 00 00 00 
    bd34:	74 0b                	je     bd41 <iscsi_rx_data+0x22e>
    bd36:	41 bf 68 9f f2 e2    	mov    $0xe2f29f68,%r15d
    bd3c:	e9 7b 02 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bd41:	49 8b be b0 01 00 00 	mov    0x1b0(%r14),%rdi
    bd48:	41 8b 9e f4 00 00 00 	mov    0xf4(%r14),%ebx
    bd4f:	4d 8d 66 30          	lea    0x30(%r14),%r12
    bd53:	e8 ca 09 00 00       	call   c722 <free>
    bd58:	48 89 ee             	mov    %rbp,%rsi
    bd5b:	4c 89 e7             	mov    %r12,%rdi
    bd5e:	49 c7 86 b0 01 00 00 	movq   $0x0,0x1b0(%r14)
    bd65:	00 00 00 00 
    bd69:	e8 64 4f 00 00       	call   10cd2 <scsi_response>
    bd6e:	41 3b 9e f4 00 00 00 	cmp    0xf4(%r14),%ebx
    bd75:	0f 85 41 02 00 00    	jne    bfbc <iscsi_rx_data+0x4a9>
    bd7b:	31 f6                	xor    %esi,%esi
    bd7d:	4c 89 e7             	mov    %r12,%rdi
    bd80:	e8 93 db ff ff       	call   9918 <intf_restart>
    bd85:	e9 32 02 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bd8a:	48 8b 8f b0 01 00 00 	mov    0x1b0(%rdi),%rcx
    bd91:	8b 87 88 01 00 00    	mov    0x188(%rdi),%eax
    bd97:	48 8b bf 98 01 00 00 	mov    0x198(%rdi),%rdi
    bd9e:	0f c8                	bswap  %eax
    bda0:	48 03 79 28          	add    0x28(%rcx),%rdi
    bda4:	89 c0                	mov    %eax,%eax
    bda6:	48 01 c7             	add    %rax,%rdi
    bda9:	e8 3b b6 00 00       	call   173e9 <__memcpy>
    bdae:	48 85 db             	test   %rbx,%rbx
    bdb1:	75 3c                	jne    bdef <iscsi_rx_data+0x2dc>
    bdb3:	41 f6 86 61 01 00 00 	testb  $0x1,0x161(%r14)
    bdba:	01 
    bdbb:	74 32                	je     bdef <iscsi_rx_data+0x2dc>
    bdbd:	49 8b be b0 01 00 00 	mov    0x1b0(%r14),%rdi
    bdc4:	41 8b 9e f4 00 00 00 	mov    0xf4(%r14),%ebx
    bdcb:	e8 52 09 00 00       	call   c722 <free>
    bdd0:	49 c7 86 b0 01 00 00 	movq   $0x0,0x1b0(%r14)
    bdd7:	00 00 00 00 
    bddb:	41 3b 9e f4 00 00 00 	cmp    0xf4(%r14),%ebx
    bde2:	75 0b                	jne    bdef <iscsi_rx_data+0x2dc>
    bde4:	49 8d 7e 30          	lea    0x30(%r14),%rdi
    bde8:	31 f6                	xor    %esi,%esi
    bdea:	e8 29 db ff ff       	call   9918 <intf_restart>
    bdef:	45 31 ff             	xor    %r15d,%r15d
    bdf2:	e9 c5 01 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bdf7:	48 85 db             	test   %rbx,%rbx
    bdfa:	75 f3                	jne    bdef <iscsi_rx_data+0x2dc>
    bdfc:	41 bf 7d 9d f2 c3    	mov    $0xc3f29d7d,%r15d
    be02:	e9 b5 01 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    be07:	41 89 c7             	mov    %eax,%r15d
    be0a:	e9 ad 01 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    be0f:	49 8b be a8 01 00 00 	mov    0x1a8(%r14),%rdi
    be16:	e8 07 09 00 00       	call   c722 <free>
    be1b:	41 8a 96 84 01 00 00 	mov    0x184(%r14),%dl
    be22:	49 c7 86 a8 01 00 00 	movq   $0x0,0x1a8(%r14)
    be29:	00 00 00 00 
    be2d:	80 fa 01             	cmp    $0x1,%dl
    be30:	0f 85 82 00 00 00    	jne    beb8 <iscsi_rx_data+0x3a5>
    be36:	31 f6                	xor    %esi,%esi
    be38:	49 8d 7e 50          	lea    0x50(%r14),%rdi
    be3c:	e8 d7 da ff ff       	call   9918 <intf_restart>
    be41:	49 8d be d0 00 00 00 	lea    0xd0(%r14),%rdi
    be48:	41 c7 86 90 00 00 00 	movl   $0x0,0x90(%r14)
    be4f:	00 00 00 00 
    be53:	41 c7 86 3c 01 00 00 	movl   $0x0,0x13c(%r14)
    be5a:	00 00 00 00 
    be5e:	41 c7 86 90 01 00 00 	movl   $0x0,0x190(%r14)
    be65:	00 00 00 00 
    be69:	49 c7 86 98 01 00 00 	movq   $0x0,0x198(%r14)
    be70:	00 00 00 00 
    be74:	e8 ef d3 00 00       	call   19268 <chap_finish>
    be79:	49 8b be a8 01 00 00 	mov    0x1a8(%r14),%rdi
    be80:	e8 9d 08 00 00       	call   c722 <free>
    be85:	49 c7 86 a8 01 00 00 	movq   $0x0,0x1a8(%r14)
    be8c:	00 00 00 00 
    be90:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    be95:	48 2b 05 b4 e1 01 00 	sub    0x1e1b4(%rip),%rax        # 2a050 <__stack_chk_guard>
    be9c:	0f 85 28 01 00 00    	jne    bfca <iscsi_rx_data+0x4b7>
    bea2:	48 83 c4 38          	add    $0x38,%rsp
    bea6:	4c 89 f7             	mov    %r14,%rdi
    bea9:	5b                   	pop    %rbx
    beaa:	5d                   	pop    %rbp
    beab:	41 5c                	pop    %r12
    bead:	41 5d                	pop    %r13
    beaf:	41 5e                	pop    %r14
    beb1:	41 5f                	pop    %r15
    beb3:	e9 ef f7 ff ff       	jmp    b6a7 <iscsi_open_connection>
    beb8:	84 d2                	test   %dl,%dl
    beba:	0f 84 81 00 00 00    	je     bf41 <iscsi_rx_data+0x42e>
    bec0:	41 8a 86 85 01 00 00 	mov    0x185(%r14),%al
    bec7:	80 fa 02             	cmp    $0x2,%dl
    beca:	74 07                	je     bed3 <iscsi_rx_data+0x3c0>
    becc:	80 fa 03             	cmp    $0x3,%dl
    becf:	74 3f                	je     bf10 <iscsi_rx_data+0x3fd>
    bed1:	eb 66                	jmp    bf39 <iscsi_rx_data+0x426>
    bed3:	3c 02                	cmp    $0x2,%al
    bed5:	74 23                	je     befa <iscsi_rx_data+0x3e7>
    bed7:	77 0f                	ja     bee8 <iscsi_rx_data+0x3d5>
    bed9:	fe c8                	dec    %al
    bedb:	75 28                	jne    bf05 <iscsi_rx_data+0x3f2>
    bedd:	41 bf 71 9e f2 be    	mov    $0xbef29e71,%r15d
    bee3:	e9 d4 00 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bee8:	83 e8 03             	sub    $0x3,%eax
    beeb:	3c 01                	cmp    $0x1,%al
    beed:	77 16                	ja     bf05 <iscsi_rx_data+0x3f2>
    beef:	41 bf 79 9f f2 d3    	mov    $0xd3f29f79,%r15d
    bef5:	e9 c2 00 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    befa:	41 bf 71 9d f2 be    	mov    $0xbef29d71,%r15d
    bf00:	e9 b7 00 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bf05:	41 bf 7d 9e f2 c3    	mov    $0xc3f29e7d,%r15d
    bf0b:	e9 ac 00 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bf10:	3c 01                	cmp    $0x1,%al
    bf12:	74 0f                	je     bf23 <iscsi_rx_data+0x410>
    bf14:	3c 02                	cmp    $0x2,%al
    bf16:	75 16                	jne    bf2e <iscsi_rx_data+0x41b>
    bf18:	41 bf 68 9d f2 e2    	mov    $0xe2f29d68,%r15d
    bf1e:	e9 99 00 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bf23:	41 bf 68 9e f2 e2    	mov    $0xe2f29e68,%r15d
    bf29:	e9 8e 00 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bf2e:	41 bf 7d 9b f2 c3    	mov    $0xc3f29b7d,%r15d
    bf34:	e9 83 00 00 00       	jmp    bfbc <iscsi_rx_data+0x4a9>
    bf39:	41 bf 7e 9f f2 e3    	mov    $0xe3f29f7e,%r15d
    bf3f:	eb 7b                	jmp    bfbc <iscsi_rx_data+0x4a9>
    bf41:	41 8a 96 61 01 00 00 	mov    0x161(%r14),%dl
    bf48:	41 8b 86 90 00 00 00 	mov    0x90(%r14),%eax
    bf4f:	84 d2                	test   %dl,%dl
    bf51:	79 31                	jns    bf84 <iscsi_rx_data+0x471>
    bf53:	83 e2 03             	and    $0x3,%edx
    bf56:	25 f0 00 ff ff       	and    $0xffff00f0,%eax
    bf5b:	80 fa 01             	cmp    $0x1,%dl
    bf5e:	74 0a                	je     bf6a <iscsi_rx_data+0x457>
    bf60:	80 fa 03             	cmp    $0x3,%dl
    bf63:	75 13                	jne    bf78 <iscsi_rx_data+0x465>
    bf65:	83 c8 0c             	or     $0xc,%eax
    bf68:	eb 05                	jmp    bf6f <iscsi_rx_data+0x45c>
    bf6a:	0d 07 10 00 00       	or     $0x1007,%eax
    bf6f:	41 89 86 90 00 00 00 	mov    %eax,0x90(%r14)
    bf76:	eb 0c                	jmp    bf84 <iscsi_rx_data+0x471>
    bf78:	41 89 86 90 00 00 00 	mov    %eax,0x90(%r14)
    bf7f:	e9 b2 fd ff ff       	jmp    bd36 <iscsi_rx_data+0x223>
    bf84:	41 8b 86 90 00 00 00 	mov    0x90(%r14),%eax
    bf8b:	89 c2                	mov    %eax,%edx
    bf8d:	83 e2 0f             	and    $0xf,%edx
    bf90:	83 fa 0c             	cmp    $0xc,%edx
    bf93:	74 0a                	je     bf9f <iscsi_rx_data+0x48c>
    bf95:	4c 89 f7             	mov    %r14,%rdi
    bf98:	e8 6c f6 ff ff       	call   b609 <iscsi_start_login>
    bf9d:	eb 1d                	jmp    bfbc <iscsi_rx_data+0x4a9>
    bf9f:	25 00 00 06 00       	and    $0x60000,%eax
    bfa4:	3d 00 00 02 00       	cmp    $0x20000,%eax
    bfa9:	75 08                	jne    bfb3 <iscsi_rx_data+0x4a0>
    bfab:	41 bf 68 9f f2 bc    	mov    $0xbcf29f68,%r15d
    bfb1:	eb 09                	jmp    bfbc <iscsi_rx_data+0x4a9>
    bfb3:	49 8d 7e 10          	lea    0x10(%r14),%rdi
    bfb7:	e8 c4 b5 00 00       	call   17580 <xfer_window_changed>
    bfbc:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    bfc1:	48 2b 05 88 e0 01 00 	sub    0x1e088(%rip),%rax        # 2a050 <__stack_chk_guard>
    bfc8:	74 05                	je     bfcf <iscsi_rx_data+0x4bc>
    bfca:	e8 91 6a ff ff       	call   2a60 <__stack_chk_fail>
    bfcf:	48 83 c4 38          	add    $0x38,%rsp
    bfd3:	44 89 f8             	mov    %r15d,%eax
    bfd6:	5b                   	pop    %rbx
    bfd7:	5d                   	pop    %rbp
    bfd8:	41 5c                	pop    %r12
    bfda:	41 5d                	pop    %r13
    bfdc:	41 5e                	pop    %r14
    bfde:	41 5f                	pop    %r15
    bfe0:	c3                   	ret    

000000000000bfe1 <job_progress>:
    bfe1:	f3 0f 1e fa          	endbr64 
    bfe5:	41 54                	push   %r12
    bfe7:	55                   	push   %rbp
    bfe8:	48 89 f5             	mov    %rsi,%rbp
    bfeb:	48 8d 35 ef ff ff ff 	lea    -0x11(%rip),%rsi        # bfe1 <job_progress>
    bff2:	53                   	push   %rbx
    bff3:	48 83 ec 10          	sub    $0x10,%rsp
    bff7:	48 8b 05 52 e0 01 00 	mov    0x1e052(%rip),%rax        # 2a050 <__stack_chk_guard>
    bffe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c003:	31 c0                	xor    %eax,%eax
    c005:	48 89 e2             	mov    %rsp,%rdx
    c008:	e8 c8 d8 ff ff       	call   98d5 <intf_get_dest_op_untyped>
    c00d:	48 8b 3c 24          	mov    (%rsp),%rdi
    c011:	48 89 c3             	mov    %rax,%rbx
    c014:	e8 66 d8 ff ff       	call   987f <intf_object>
    c019:	48 89 ef             	mov    %rbp,%rdi
    c01c:	b9 30 00 00 00       	mov    $0x30,%ecx
    c021:	49 89 c0             	mov    %rax,%r8
    c024:	31 c0                	xor    %eax,%eax
    c026:	f3 aa                	rep stos %al,%es:(%rdi)
    c028:	45 31 e4             	xor    %r12d,%r12d
    c02b:	48 85 db             	test   %rbx,%rbx
    c02e:	74 0b                	je     c03b <job_progress+0x5a>
    c030:	48 89 ee             	mov    %rbp,%rsi
    c033:	4c 89 c7             	mov    %r8,%rdi
    c036:	ff d3                	call   *%rbx
    c038:	41 89 c4             	mov    %eax,%r12d
    c03b:	48 8b 3c 24          	mov    (%rsp),%rdi
    c03f:	e8 cc d7 ff ff       	call   9810 <intf_put>
    c044:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c049:	48 2b 05 00 e0 01 00 	sub    0x1e000(%rip),%rax        # 2a050 <__stack_chk_guard>
    c050:	74 05                	je     c057 <job_progress+0x76>
    c052:	e8 09 6a ff ff       	call   2a60 <__stack_chk_fail>
    c057:	48 83 c4 10          	add    $0x10,%rsp
    c05b:	44 89 e0             	mov    %r12d,%eax
    c05e:	5b                   	pop    %rbx
    c05f:	5d                   	pop    %rbp
    c060:	41 5c                	pop    %r12
    c062:	c3                   	ret    

000000000000c063 <buffered_line>:
    c063:	f3 0f 1e fa          	endbr64 
    c067:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    c06b:	31 c0                	xor    %eax,%eax
    c06d:	48 85 d2             	test   %rdx,%rdx
    c070:	74 2a                	je     c09c <buffered_line+0x39>
    c072:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
    c077:	74 23                	je     c09c <buffered_line+0x39>
    c079:	48 8b 0f             	mov    (%rdi),%rcx
    c07c:	48 01 ca             	add    %rcx,%rdx
    c07f:	80 7a ff 00          	cmpb   $0x0,-0x1(%rdx)
    c083:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    c087:	75 11                	jne    c09a <buffered_line+0x37>
    c089:	48 39 c1             	cmp    %rax,%rcx
    c08c:	73 0e                	jae    c09c <buffered_line+0x39>
    c08e:	80 78 ff 00          	cmpb   $0x0,-0x1(%rax)
    c092:	74 05                	je     c099 <buffered_line+0x36>
    c094:	48 ff c8             	dec    %rax
    c097:	eb f0                	jmp    c089 <buffered_line+0x26>
    c099:	c3                   	ret    
    c09a:	31 c0                	xor    %eax,%eax
    c09c:	c3                   	ret    

000000000000c09d <empty_line_buffer>:
    c09d:	f3 0f 1e fa          	endbr64 
    c0a1:	53                   	push   %rbx
    c0a2:	48 89 fb             	mov    %rdi,%rbx
    c0a5:	48 8b 3f             	mov    (%rdi),%rdi
    c0a8:	e8 75 06 00 00       	call   c722 <free>
    c0ad:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    c0b4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    c0bb:	00 
    c0bc:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    c0c3:	00 
    c0c4:	5b                   	pop    %rbx
    c0c5:	c3                   	ret    

000000000000c0c6 <line_buffer>:
    c0c6:	f3 0f 1e fa          	endbr64 
    c0ca:	41 57                	push   %r15
    c0cc:	41 56                	push   %r14
    c0ce:	41 55                	push   %r13
    c0d0:	49 89 f5             	mov    %rsi,%r13
    c0d3:	be 0a 00 00 00       	mov    $0xa,%esi
    c0d8:	41 54                	push   %r12
    c0da:	55                   	push   %rbp
    c0db:	48 89 fd             	mov    %rdi,%rbp
    c0de:	4c 89 ef             	mov    %r13,%rdi
    c0e1:	53                   	push   %rbx
    c0e2:	48 89 d3             	mov    %rdx,%rbx
    c0e5:	51                   	push   %rcx
    c0e6:	e8 66 78 00 00       	call   13951 <memchr>
    c0eb:	49 89 c6             	mov    %rax,%r14
    c0ee:	48 85 c0             	test   %rax,%rax
    c0f1:	74 09                	je     c0fc <line_buffer+0x36>
    c0f3:	48 89 c3             	mov    %rax,%rbx
    c0f6:	4c 29 eb             	sub    %r13,%rbx
    c0f9:	48 ff c3             	inc    %rbx
    c0fc:	31 f6                	xor    %esi,%esi
    c0fe:	48 89 da             	mov    %rbx,%rdx
    c101:	4c 89 ef             	mov    %r13,%rdi
    c104:	e8 48 78 00 00       	call   13951 <memchr>
    c109:	48 85 c0             	test   %rax,%rax
    c10c:	74 07                	je     c115 <line_buffer+0x4f>
    c10e:	b8 7e df f9 e3       	mov    $0xe3f9df7e,%eax
    c113:	eb 70                	jmp    c185 <line_buffer+0xbf>
    c115:	4c 8b 7d 08          	mov    0x8(%rbp),%r15
    c119:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    c11d:	49 01 df             	add    %rbx,%r15
    c120:	49 8d 77 01          	lea    0x1(%r15),%rsi
    c124:	e8 f1 04 00 00       	call   c61a <realloc>
    c129:	49 89 c4             	mov    %rax,%r12
    c12c:	48 85 c0             	test   %rax,%rax
    c12f:	75 07                	jne    c138 <line_buffer+0x72>
    c131:	b8 77 df f9 ce       	mov    $0xcef9df77,%eax
    c136:	eb 4d                	jmp    c185 <line_buffer+0xbf>
    c138:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    c13c:	48 89 da             	mov    %rbx,%rdx
    c13f:	4c 89 ee             	mov    %r13,%rsi
    c142:	48 01 c7             	add    %rax,%rdi
    c145:	e8 9f b2 00 00       	call   173e9 <__memcpy>
    c14a:	43 c6 04 3c 00       	movb   $0x0,(%r12,%r15,1)
    c14f:	4c 89 65 00          	mov    %r12,0x0(%rbp)
    c153:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
    c157:	4d 85 f6             	test   %r14,%r14
    c15a:	74 23                	je     c17f <line_buffer+0xb9>
    c15c:	4b 8d 54 3c ff       	lea    -0x1(%r12,%r15,1),%rdx
    c161:	c6 02 00             	movb   $0x0,(%rdx)
    c164:	48 8b 45 08          	mov    0x8(%rbp),%rax
    c168:	48 83 f8 01          	cmp    $0x1,%rax
    c16c:	76 11                	jbe    c17f <line_buffer+0xb9>
    c16e:	80 7a ff 0d          	cmpb   $0xd,-0x1(%rdx)
    c172:	75 0b                	jne    c17f <line_buffer+0xb9>
    c174:	48 ff c8             	dec    %rax
    c177:	48 89 45 08          	mov    %rax,0x8(%rbp)
    c17b:	c6 42 ff 00          	movb   $0x0,-0x1(%rdx)
    c17f:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    c183:	89 d8                	mov    %ebx,%eax
    c185:	5a                   	pop    %rdx
    c186:	5b                   	pop    %rbx
    c187:	5d                   	pop    %rbp
    c188:	41 5c                	pop    %r12
    c18a:	41 5d                	pop    %r13
    c18c:	41 5e                	pop    %r14
    c18e:	41 5f                	pop    %r15
    c190:	c3                   	ret    

000000000000c191 <extern_list_add>:
    c191:	f3 0f 1e fa          	endbr64 
    c195:	48 8b 06             	mov    (%rsi),%rax
    c198:	48 89 78 08          	mov    %rdi,0x8(%rax)
    c19c:	48 89 07             	mov    %rax,(%rdi)
    c19f:	48 89 77 08          	mov    %rsi,0x8(%rdi)
    c1a3:	48 89 3e             	mov    %rdi,(%rsi)
    c1a6:	c3                   	ret    

000000000000c1a7 <extern_list_add_tail>:
    c1a7:	f3 0f 1e fa          	endbr64 
    c1ab:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c1af:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
    c1b3:	48 89 37             	mov    %rsi,(%rdi)
    c1b6:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c1ba:	48 89 38             	mov    %rdi,(%rax)
    c1bd:	c3                   	ret    

000000000000c1be <login_exec>:
    c1be:	f3 0f 1e fa          	endbr64 
    c1c2:	41 54                	push   %r12
    c1c4:	48 8d 15 35 a5 01 00 	lea    0x1a535(%rip),%rdx        # 26700 <login_cmd>
    c1cb:	48 83 ec 10          	sub    $0x10,%rsp
    c1cf:	48 8b 05 7a de 01 00 	mov    0x1de7a(%rip),%rax        # 2a050 <__stack_chk_guard>
    c1d6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c1db:	31 c0                	xor    %eax,%eax
    c1dd:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
    c1e2:	e8 a4 30 00 00       	call   f28b <parse_options>
    c1e7:	41 89 c4             	mov    %eax,%r12d
    c1ea:	85 c0                	test   %eax,%eax
    c1ec:	75 24                	jne    c212 <login_exec+0x54>
    c1ee:	e8 3c 00 00 00       	call   c22f <login_ui>
    c1f3:	41 89 c4             	mov    %eax,%r12d
    c1f6:	85 c0                	test   %eax,%eax
    c1f8:	74 18                	je     c212 <login_exec+0x54>
    c1fa:	89 c7                	mov    %eax,%edi
    c1fc:	e8 77 76 00 00       	call   13878 <strerror>
    c201:	48 8d 3d a3 72 01 00 	lea    0x172a3(%rip),%rdi        # 234ab <.LC0>
    c208:	48 89 c6             	mov    %rax,%rsi
    c20b:	31 c0                	xor    %eax,%eax
    c20d:	e8 68 b0 00 00       	call   1727a <printf>
    c212:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c217:	48 2b 05 32 de 01 00 	sub    0x1de32(%rip),%rax        # 2a050 <__stack_chk_guard>
    c21e:	74 05                	je     c225 <login_exec+0x67>
    c220:	e8 3b 68 ff ff       	call   2a60 <__stack_chk_fail>
    c225:	48 83 c4 10          	add    $0x10,%rsp
    c229:	44 89 e0             	mov    %r12d,%eax
    c22c:	41 5c                	pop    %r12
    c22e:	c3                   	ret    

000000000000c22f <login_ui>:
    c22f:	f3 0f 1e fa          	endbr64 
    c233:	41 57                	push   %r15
    c235:	41 56                	push   %r14
    c237:	41 55                	push   %r13
    c239:	41 54                	push   %r12
    c23b:	55                   	push   %rbp
    c23c:	53                   	push   %rbx
    c23d:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    c244:	48 8b 05 05 de 01 00 	mov    0x1de05(%rip),%rax        # 2a050 <__stack_chk_guard>
    c24b:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
    c252:	00 
    c253:	31 c0                	xor    %eax,%eax
    c255:	4c 8d b4 24 98 00 00 	lea    0x98(%rsp),%r14
    c25c:	00 
    c25d:	31 ff                	xor    %edi,%edi
    c25f:	4c 8d ac 24 d8 00 00 	lea    0xd8(%rsp),%r13
    c266:	00 
    c267:	b9 40 00 00 00       	mov    $0x40,%ecx
    c26c:	4c 89 f2             	mov    %r14,%rdx
    c26f:	48 8d 35 82 d5 01 00 	lea    0x1d582(%rip),%rsi        # 297f8 <username_setting>
    c276:	48 8d 5c 24 18       	lea    0x18(%rsp),%rbx
    c27b:	e8 74 5c 00 00       	call   11ef4 <fetch_string_setting>
    c280:	31 ff                	xor    %edi,%edi
    c282:	b9 40 00 00 00       	mov    $0x40,%ecx
    c287:	4c 89 ea             	mov    %r13,%rdx
    c28a:	48 8d 35 3f d5 01 00 	lea    0x1d53f(%rip),%rsi        # 297d0 <password_setting>
    c291:	48 8d 2d c8 a6 01 00 	lea    0x1a6c8(%rip),%rbp        # 26960 <_stdscr>
    c298:	e8 57 5c 00 00       	call   11ef4 <fetch_string_setting>
    c29d:	e8 a0 b0 00 00       	call   17342 <initscr>
    c2a2:	8b 15 ec 83 01 00    	mov    0x183ec(%rip),%edx        # 24694 <console_width>
    c2a8:	6a 00                	push   $0x0
    c2aa:	31 c9                	xor    %ecx,%ecx
    c2ac:	8b 05 de 83 01 00    	mov    0x183de(%rip),%eax        # 24690 <console_height>
    c2b2:	6a 14                	push   $0x14
    c2b4:	4c 89 f6             	mov    %r14,%rsi
    c2b7:	48 89 df             	mov    %rbx,%rdi
    c2ba:	d1 ea                	shr    %edx
    c2bc:	d1 e8                	shr    %eax
    c2be:	44 8d 4a f6          	lea    -0xa(%rdx),%r9d
    c2c2:	ba 40 00 00 00       	mov    $0x40,%edx
    c2c7:	44 8d 40 fe          	lea    -0x2(%rax),%r8d
    c2cb:	4c 8d 64 24 68       	lea    0x68(%rsp),%r12
    c2d0:	e8 02 eb 00 00       	call   1add7 <init_editbox>
    c2d5:	8b 15 b9 83 01 00    	mov    0x183b9(%rip),%edx        # 24694 <console_width>
    c2db:	6a 01                	push   $0x1
    c2dd:	31 c9                	xor    %ecx,%ecx
    c2df:	8b 05 ab 83 01 00    	mov    0x183ab(%rip),%eax        # 24690 <console_height>
    c2e5:	6a 14                	push   $0x14
    c2e7:	4c 89 ee             	mov    %r13,%rsi
    c2ea:	4c 89 e7             	mov    %r12,%rdi
    c2ed:	d1 ea                	shr    %edx
    c2ef:	d1 e8                	shr    %eax
    c2f1:	44 8d 4a f6          	lea    -0xa(%rdx),%r9d
    c2f5:	ba 40 00 00 00       	mov    $0x40,%edx
    c2fa:	44 8d 40 04          	lea    0x4(%rax),%r8d
    c2fe:	e8 d4 ea 00 00       	call   1add7 <init_editbox>
    c303:	31 d2                	xor    %edx,%edx
    c305:	48 83 c4 20          	add    $0x20,%rsp
    c309:	be 01 00 00 00       	mov    $0x1,%esi
    c30e:	48 89 ef             	mov    %rbp,%rdi
    c311:	e8 0b b0 00 00       	call   17321 <wcolour_set>
    c316:	e8 b2 cf 00 00       	call   192cd <erase>
    c31b:	be 00 00 04 00       	mov    $0x40000,%esi
    c320:	48 89 ef             	mov    %rbp,%rdi
    c323:	e8 db af 00 00       	call   17303 <wattron>
    c328:	8b 15 66 83 01 00    	mov    0x18366(%rip),%edx        # 24694 <console_width>
    c32e:	8b 35 5c 83 01 00    	mov    0x1835c(%rip),%esi        # 24690 <console_height>
    c334:	48 89 ef             	mov    %rbp,%rdi
    c337:	d1 ea                	shr    %edx
    c339:	d1 ee                	shr    %esi
    c33b:	83 ea 04             	sub    $0x4,%edx
    c33e:	83 ee 04             	sub    $0x4,%esi
    c341:	e8 75 12 00 00       	call   d5bb <wmove>
    c346:	85 c0                	test   %eax,%eax
    c348:	75 0f                	jne    c359 <login_ui+0x12a>
    c34a:	48 8d 35 7f 71 01 00 	lea    0x1717f(%rip),%rsi        # 234d0 <.LC0>
    c351:	48 89 ef             	mov    %rbp,%rdi
    c354:	e8 3f 36 00 00       	call   f998 <wprintw>
    c359:	8b 15 35 83 01 00    	mov    0x18335(%rip),%edx        # 24694 <console_width>
    c35f:	8b 35 2b 83 01 00    	mov    0x1832b(%rip),%esi        # 24690 <console_height>
    c365:	48 89 ef             	mov    %rbp,%rdi
    c368:	d1 ea                	shr    %edx
    c36a:	d1 ee                	shr    %esi
    c36c:	83 ea 04             	sub    $0x4,%edx
    c36f:	83 c6 02             	add    $0x2,%esi
    c372:	e8 44 12 00 00       	call   d5bb <wmove>
    c377:	85 c0                	test   %eax,%eax
    c379:	75 0f                	jne    c38a <login_ui+0x15b>
    c37b:	48 8d 35 58 71 01 00 	lea    0x17158(%rip),%rsi        # 234da <.LC1>
    c382:	48 89 ef             	mov    %rbp,%rdi
    c385:	e8 0e 36 00 00       	call   f998 <wprintw>
    c38a:	be 00 00 04 00       	mov    $0x40000,%esi
    c38f:	48 89 ef             	mov    %rbp,%rdi
    c392:	41 bf 6c 1f e8 e5    	mov    $0xe5e81f6c,%r15d
    c398:	e8 5a af 00 00       	call   172f7 <wattroff>
    c39d:	31 d2                	xor    %edx,%edx
    c39f:	be 04 00 00 00       	mov    $0x4,%esi
    c3a4:	48 89 ef             	mov    %rbp,%rdi
    c3a7:	e8 75 af 00 00       	call   17321 <wcolour_set>
    c3ac:	48 89 df             	mov    %rbx,%rdi
    c3af:	e8 84 ea 00 00       	call   1ae38 <draw_editbox>
    c3b4:	4c 89 e7             	mov    %r12,%rdi
    c3b7:	e8 7c ea 00 00       	call   1ae38 <draw_editbox>
    c3bc:	48 89 da             	mov    %rbx,%rdx
    c3bf:	41 81 ff 6c 1f e8 e5 	cmp    $0xe5e81f6c,%r15d
    c3c6:	75 7f                	jne    c447 <login_ui+0x218>
    c3c8:	48 89 d7             	mov    %rdx,%rdi
    c3cb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    c3d0:	e8 63 ea 00 00       	call   1ae38 <draw_editbox>
    c3d5:	31 ff                	xor    %edi,%edi
    c3d7:	e8 5f 20 01 00       	call   1e43b <getkey>
    c3dc:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c3e1:	83 f8 1b             	cmp    $0x1b,%eax
    c3e4:	89 c6                	mov    %eax,%esi
    c3e6:	74 36                	je     c41e <login_ui+0x1ef>
    c3e8:	7f 11                	jg     c3fb <login_ui+0x1cc>
    c3ea:	83 f8 09             	cmp    $0x9,%eax
    c3ed:	74 1c                	je     c40b <login_ui+0x1dc>
    c3ef:	83 f8 0a             	cmp    $0xa,%eax
    c3f2:	74 23                	je     c417 <login_ui+0x1e8>
    c3f4:	83 f8 03             	cmp    $0x3,%eax
    c3f7:	74 25                	je     c41e <login_ui+0x1ef>
    c3f9:	eb 2b                	jmp    c426 <login_ui+0x1f7>
    c3fb:	3d 41 01 00 00       	cmp    $0x141,%eax
    c400:	74 ba                	je     c3bc <login_ui+0x18d>
    c402:	3d 42 01 00 00       	cmp    $0x142,%eax
    c407:	74 31                	je     c43a <login_ui+0x20b>
    c409:	eb 1b                	jmp    c426 <login_ui+0x1f7>
    c40b:	48 39 da             	cmp    %rbx,%rdx
    c40e:	4c 89 e2             	mov    %r12,%rdx
    c411:	48 0f 45 d3          	cmovne %rbx,%rdx
    c415:	eb a8                	jmp    c3bf <login_ui+0x190>
    c417:	48 39 da             	cmp    %rbx,%rdx
    c41a:	75 23                	jne    c43f <login_ui+0x210>
    c41c:	eb 1c                	jmp    c43a <login_ui+0x20b>
    c41e:	41 bf 6b 1f e8 f4    	mov    $0xf4e81f6b,%r15d
    c424:	eb 99                	jmp    c3bf <login_ui+0x190>
    c426:	48 89 d7             	mov    %rdx,%rdi
    c429:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    c42e:	e8 59 ec 00 00       	call   1b08c <edit_string>
    c433:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c438:	eb 85                	jmp    c3bf <login_ui+0x190>
    c43a:	4c 89 e2             	mov    %r12,%rdx
    c43d:	eb 80                	jmp    c3bf <login_ui+0x190>
    c43f:	45 31 ff             	xor    %r15d,%r15d
    c442:	e9 78 ff ff ff       	jmp    c3bf <login_ui+0x190>
    c447:	31 d2                	xor    %edx,%edx
    c449:	be 01 00 00 00       	mov    $0x1,%esi
    c44e:	48 89 ef             	mov    %rbp,%rdi
    c451:	e8 cb ae 00 00       	call   17321 <wcolour_set>
    c456:	e8 72 ce 00 00       	call   192cd <erase>
    c45b:	e8 26 af 00 00       	call   17386 <endwin>
    c460:	b8 6b 1f e8 f4       	mov    $0xf4e81f6b,%eax
    c465:	45 85 ff             	test   %r15d,%r15d
    c468:	75 3c                	jne    c4a6 <login_ui+0x277>
    c46a:	4c 89 f7             	mov    %r14,%rdi
    c46d:	e8 a4 75 00 00       	call   13a16 <strlen>
    c472:	31 ff                	xor    %edi,%edi
    c474:	4c 89 f2             	mov    %r14,%rdx
    c477:	48 8d 35 7a d3 01 00 	lea    0x1d37a(%rip),%rsi        # 297f8 <username_setting>
    c47e:	48 89 c1             	mov    %rax,%rcx
    c481:	e8 dd 5d 00 00       	call   12263 <store_setting>
    c486:	85 c0                	test   %eax,%eax
    c488:	75 1c                	jne    c4a6 <login_ui+0x277>
    c48a:	4c 89 ef             	mov    %r13,%rdi
    c48d:	e8 84 75 00 00       	call   13a16 <strlen>
    c492:	4c 89 ea             	mov    %r13,%rdx
    c495:	48 8d 35 34 d3 01 00 	lea    0x1d334(%rip),%rsi        # 297d0 <password_setting>
    c49c:	31 ff                	xor    %edi,%edi
    c49e:	48 89 c1             	mov    %rax,%rcx
    c4a1:	e8 bd 5d 00 00       	call   12263 <store_setting>
    c4a6:	48 8b 94 24 18 01 00 	mov    0x118(%rsp),%rdx
    c4ad:	00 
    c4ae:	48 2b 15 9b db 01 00 	sub    0x1db9b(%rip),%rdx        # 2a050 <__stack_chk_guard>
    c4b5:	74 05                	je     c4bc <login_ui+0x28d>
    c4b7:	e8 a4 65 ff ff       	call   2a60 <__stack_chk_fail>
    c4bc:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    c4c3:	5b                   	pop    %rbx
    c4c4:	5d                   	pop    %rbp
    c4c5:	41 5c                	pop    %r12
    c4c7:	41 5d                	pop    %r13
    c4c9:	41 5e                	pop    %r14
    c4cb:	41 5f                	pop    %r15
    c4cd:	c3                   	ret    

000000000000c4ce <init_heap>:
    c4ce:	f3 0f 1e fa          	endbr64 
    c4d2:	c3                   	ret    

000000000000c4d3 <shutdown_cache>:
    c4d3:	f3 0f 1e fa          	endbr64 
    c4d7:	55                   	push   %rbp
    c4d8:	48 8d 2d 59 c0 01 00 	lea    0x1c059(%rip),%rbp        # 28538 <config_command>
    c4df:	53                   	push   %rbx
    c4e0:	52                   	push   %rdx
    c4e1:	48 8d 1d 38 c0 01 00 	lea    0x1c038(%rip),%rbx        # 28520 <net_discarder>
    c4e8:	48 39 eb             	cmp    %rbp,%rbx
    c4eb:	73 0c                	jae    c4f9 <shutdown_cache+0x26>
    c4ed:	ff 13                	call   *(%rbx)
    c4ef:	85 c0                	test   %eax,%eax
    c4f1:	75 ee                	jne    c4e1 <shutdown_cache+0xe>
    c4f3:	48 83 c3 08          	add    $0x8,%rbx
    c4f7:	eb ef                	jmp    c4e8 <shutdown_cache+0x15>
    c4f9:	58                   	pop    %rax
    c4fa:	5b                   	pop    %rbx
    c4fb:	5d                   	pop    %rbp
    c4fc:	c3                   	ret    

000000000000c4fd <alloc_memblock>:
    c4fd:	f3 0f 1e fa          	endbr64 
    c501:	41 54                	push   %r12
    c503:	4c 8d 24 37          	lea    (%rdi,%rsi,1),%r12
    c507:	b9 04 00 00 00       	mov    $0x4,%ecx
    c50c:	55                   	push   %rbp
    c50d:	48 89 d5             	mov    %rdx,%rbp
    c510:	49 8d 54 24 04       	lea    0x4(%r12),%rdx
    c515:	53                   	push   %rbx
    c516:	48 89 f3             	mov    %rsi,%rbx
    c519:	48 83 ec 30          	sub    $0x30,%rsp
    c51d:	48 8b 05 2c db 01 00 	mov    0x1db2c(%rip),%rax        # 2a050 <__stack_chk_guard>
    c524:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    c529:	31 c0                	xor    %eax,%eax
    c52b:	48 8b 05 46 db 01 00 	mov    0x1db46(%rip),%rax        # 2a078 <efi_systab>
    c532:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
    c537:	48 8b 40 60          	mov    0x60(%rax),%rax
    c53b:	ff 50 40             	call   *0x40(%rax)
    c53e:	48 83 c4 20          	add    $0x20,%rsp
    c542:	48 85 c0             	test   %rax,%rax
    c545:	74 0e                	je     c555 <alloc_memblock+0x58>
    c547:	8a 05 bd 80 01 00    	mov    0x180bd(%rip),%al        # 2460a <loop>
    c54d:	84 c0                	test   %al,%al
    c54f:	75 f6                	jne    c547 <alloc_memblock+0x4a>
    c551:	31 c0                	xor    %eax,%eax
    c553:	eb 65                	jmp    c5ba <alloc_memblock+0xbd>
    c555:	48 85 db             	test   %rbx,%rbx
    c558:	74 25                	je     c57f <alloc_memblock+0x82>
    c55a:	48 8b 14 24          	mov    (%rsp),%rdx
    c55e:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    c562:	48 85 d0             	test   %rdx,%rax
    c565:	74 18                	je     c57f <alloc_memblock+0x82>
    c567:	48 8d 44 1a 03       	lea    0x3(%rdx,%rbx,1),%rax
    c56c:	48 f7 db             	neg    %rbx
    c56f:	48 21 d8             	and    %rbx,%rax
    c572:	48 89 c1             	mov    %rax,%rcx
    c575:	48 29 d1             	sub    %rdx,%rcx
    c578:	89 48 fc             	mov    %ecx,-0x4(%rax)
    c57b:	48 89 04 24          	mov    %rax,(%rsp)
    c57f:	49 81 fc 00 10 00 00 	cmp    $0x1000,%r12
    c586:	76 0a                	jbe    c592 <alloc_memblock+0x95>
    c588:	8a 05 7c 80 01 00    	mov    0x1807c(%rip),%al        # 2460a <loop>
    c58e:	84 c0                	test   %al,%al
    c590:	75 f6                	jne    c588 <alloc_memblock+0x8b>
    c592:	48 85 ed             	test   %rbp,%rbp
    c595:	74 0e                	je     c5a5 <alloc_memblock+0xa8>
    c597:	8a 05 6d 80 01 00    	mov    0x1806d(%rip),%al        # 2460a <loop>
    c59d:	84 c0                	test   %al,%al
    c59f:	75 f6                	jne    c597 <alloc_memblock+0x9a>
    c5a1:	48 01 2c 24          	add    %rbp,(%rsp)
    c5a5:	48 8b 04 24          	mov    (%rsp),%rax
    c5a9:	48 85 c0             	test   %rax,%rax
    c5ac:	75 0c                	jne    c5ba <alloc_memblock+0xbd>
    c5ae:	8a 05 56 80 01 00    	mov    0x18056(%rip),%al        # 2460a <loop>
    c5b4:	84 c0                	test   %al,%al
    c5b6:	75 f6                	jne    c5ae <alloc_memblock+0xb1>
    c5b8:	eb 97                	jmp    c551 <alloc_memblock+0x54>
    c5ba:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c5bf:	48 2b 15 8a da 01 00 	sub    0x1da8a(%rip),%rdx        # 2a050 <__stack_chk_guard>
    c5c6:	74 05                	je     c5cd <alloc_memblock+0xd0>
    c5c8:	e8 93 64 ff ff       	call   2a60 <__stack_chk_fail>
    c5cd:	48 83 c4 10          	add    $0x10,%rsp
    c5d1:	5b                   	pop    %rbx
    c5d2:	5d                   	pop    %rbp
    c5d3:	41 5c                	pop    %r12
    c5d5:	c3                   	ret    

000000000000c5d6 <free_memblock>:
    c5d6:	f3 0f 1e fa          	endbr64 
    c5da:	52                   	push   %rdx
    c5db:	48 8b 05 96 da 01 00 	mov    0x1da96(%rip),%rax        # 2a078 <efi_systab>
    c5e2:	48 89 f9             	mov    %rdi,%rcx
    c5e5:	48 8b 40 60          	mov    0x60(%rax),%rax
    c5e9:	48 85 f6             	test   %rsi,%rsi
    c5ec:	75 0a                	jne    c5f8 <free_memblock+0x22>
    c5ee:	8a 15 16 80 01 00    	mov    0x18016(%rip),%dl        # 2460a <loop>
    c5f4:	84 d2                	test   %dl,%dl
    c5f6:	75 f6                	jne    c5ee <free_memblock+0x18>
    c5f8:	8b 51 fc             	mov    -0x4(%rcx),%edx
    c5fb:	48 83 ec 20          	sub    $0x20,%rsp
    c5ff:	48 29 d1             	sub    %rdx,%rcx
    c602:	ff 50 48             	call   *0x48(%rax)
    c605:	48 83 c4 20          	add    $0x20,%rsp
    c609:	48 85 c0             	test   %rax,%rax
    c60c:	74 0a                	je     c618 <free_memblock+0x42>
    c60e:	8a 05 f6 7f 01 00    	mov    0x17ff6(%rip),%al        # 2460a <loop>
    c614:	84 c0                	test   %al,%al
    c616:	eb f4                	jmp    c60c <free_memblock+0x36>
    c618:	58                   	pop    %rax
    c619:	c3                   	ret    

000000000000c61a <realloc>:
    c61a:	f3 0f 1e fa          	endbr64 
    c61e:	41 55                	push   %r13
    c620:	41 54                	push   %r12
    c622:	53                   	push   %rbx
    c623:	48 83 ec 10          	sub    $0x10,%rsp
    c627:	48 8b 05 22 da 01 00 	mov    0x1da22(%rip),%rax        # 2a050 <__stack_chk_guard>
    c62e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c633:	48 8b 05 3e da 01 00 	mov    0x1da3e(%rip),%rax        # 2a078 <efi_systab>
    c63a:	48 8b 58 60          	mov    0x60(%rax),%rbx
    c63e:	48 89 f8             	mov    %rdi,%rax
    c641:	48 09 f0             	or     %rsi,%rax
    c644:	75 0c                	jne    c652 <realloc+0x38>
    c646:	8a 05 be 7f 01 00    	mov    0x17fbe(%rip),%al        # 2460a <loop>
    c64c:	84 c0                	test   %al,%al
    c64e:	75 f6                	jne    c646 <realloc+0x2c>
    c650:	eb 19                	jmp    c66b <realloc+0x51>
    c652:	49 89 fc             	mov    %rdi,%r12
    c655:	49 89 f5             	mov    %rsi,%r13
    c658:	48 85 f6             	test   %rsi,%rsi
    c65b:	75 15                	jne    c672 <realloc+0x58>
    c65d:	48 83 ec 20          	sub    $0x20,%rsp
    c661:	48 89 f9             	mov    %rdi,%rcx
    c664:	ff 53 48             	call   *0x48(%rbx)
    c667:	48 83 c4 20          	add    $0x20,%rsp
    c66b:	31 ff                	xor    %edi,%edi
    c66d:	e9 83 00 00 00       	jmp    c6f5 <realloc+0xdb>
    c672:	48 83 ec 20          	sub    $0x20,%rsp
    c676:	48 89 f2             	mov    %rsi,%rdx
    c679:	b9 04 00 00 00       	mov    $0x4,%ecx
    c67e:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
    c683:	ff 53 40             	call   *0x40(%rbx)
    c686:	48 83 c4 20          	add    $0x20,%rsp
    c68a:	48 85 c0             	test   %rax,%rax
    c68d:	74 0c                	je     c69b <realloc+0x81>
    c68f:	8a 05 75 7f 01 00    	mov    0x17f75(%rip),%al        # 2460a <loop>
    c695:	84 c0                	test   %al,%al
    c697:	75 f6                	jne    c68f <realloc+0x75>
    c699:	eb d0                	jmp    c66b <realloc+0x51>
    c69b:	48 8b 3c 24          	mov    (%rsp),%rdi
    c69f:	4d 85 e4             	test   %r12,%r12
    c6a2:	74 51                	je     c6f5 <realloc+0xdb>
    c6a4:	41 8b 44 24 e8       	mov    -0x18(%r12),%eax
    c6a9:	25 ff ff ff fe       	and    $0xfeffffff,%eax
    c6ae:	3d 70 68 64 30       	cmp    $0x30646870,%eax
    c6b3:	74 0a                	je     c6bf <realloc+0xa5>
    c6b5:	8a 05 4f 7f 01 00    	mov    0x17f4f(%rip),%al        # 2460a <loop>
    c6bb:	84 c0                	test   %al,%al
    c6bd:	eb f4                	jmp    c6b3 <realloc+0x99>
    c6bf:	49 8b 54 24 f8       	mov    -0x8(%r12),%rdx
    c6c4:	49 39 d5             	cmp    %rdx,%r13
    c6c7:	77 03                	ja     c6cc <realloc+0xb2>
    c6c9:	4c 89 ea             	mov    %r13,%rdx
    c6cc:	4c 89 e6             	mov    %r12,%rsi
    c6cf:	e8 15 ad 00 00       	call   173e9 <__memcpy>
    c6d4:	48 83 ec 20          	sub    $0x20,%rsp
    c6d8:	4c 89 e1             	mov    %r12,%rcx
    c6db:	ff 53 48             	call   *0x48(%rbx)
    c6de:	48 83 c4 20          	add    $0x20,%rsp
    c6e2:	48 85 c0             	test   %rax,%rax
    c6e5:	74 0a                	je     c6f1 <realloc+0xd7>
    c6e7:	8a 05 1d 7f 01 00    	mov    0x17f1d(%rip),%al        # 2460a <loop>
    c6ed:	84 c0                	test   %al,%al
    c6ef:	eb f4                	jmp    c6e5 <realloc+0xcb>
    c6f1:	48 8b 3c 24          	mov    (%rsp),%rdi
    c6f5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c6fa:	48 2b 05 4f d9 01 00 	sub    0x1d94f(%rip),%rax        # 2a050 <__stack_chk_guard>
    c701:	74 05                	je     c708 <realloc+0xee>
    c703:	e8 58 63 ff ff       	call   2a60 <__stack_chk_fail>
    c708:	48 83 c4 10          	add    $0x10,%rsp
    c70c:	48 89 f8             	mov    %rdi,%rax
    c70f:	5b                   	pop    %rbx
    c710:	41 5c                	pop    %r12
    c712:	41 5d                	pop    %r13
    c714:	c3                   	ret    

000000000000c715 <malloc>:
    c715:	f3 0f 1e fa          	endbr64 
    c719:	31 d2                	xor    %edx,%edx
    c71b:	31 f6                	xor    %esi,%esi
    c71d:	e9 db fd ff ff       	jmp    c4fd <alloc_memblock>

000000000000c722 <free>:
    c722:	f3 0f 1e fa          	endbr64 
    c726:	48 85 ff             	test   %rdi,%rdi
    c729:	74 0a                	je     c735 <free+0x13>
    c72b:	be 01 00 00 00       	mov    $0x1,%esi
    c730:	e9 a1 fe ff ff       	jmp    c5d6 <free_memblock>
    c735:	c3                   	ret    

000000000000c736 <zalloc>:
    c736:	f3 0f 1e fa          	endbr64 
    c73a:	53                   	push   %rbx
    c73b:	48 89 fb             	mov    %rdi,%rbx
    c73e:	e8 d2 ff ff ff       	call   c715 <malloc>
    c743:	49 89 c0             	mov    %rax,%r8
    c746:	48 85 c0             	test   %rax,%rax
    c749:	74 0a                	je     c755 <zalloc+0x1f>
    c74b:	48 89 c7             	mov    %rax,%rdi
    c74e:	48 89 d9             	mov    %rbx,%rcx
    c751:	31 c0                	xor    %eax,%eax
    c753:	f3 aa                	rep stos %al,%es:(%rdi)
    c755:	4c 89 c0             	mov    %r8,%rax
    c758:	5b                   	pop    %rbx
    c759:	c3                   	ret    

000000000000c75a <md5_f_0_15>:
    c75a:	f3 0f 1e fa          	endbr64 
    c75e:	8b 57 0c             	mov    0xc(%rdi),%edx
    c761:	8b 47 08             	mov    0x8(%rdi),%eax
    c764:	31 d0                	xor    %edx,%eax
    c766:	23 47 04             	and    0x4(%rdi),%eax
    c769:	31 d0                	xor    %edx,%eax
    c76b:	c3                   	ret    

000000000000c76c <md5_f_16_31>:
    c76c:	f3 0f 1e fa          	endbr64 
    c770:	8b 57 08             	mov    0x8(%rdi),%edx
    c773:	8b 47 04             	mov    0x4(%rdi),%eax
    c776:	31 d0                	xor    %edx,%eax
    c778:	23 47 0c             	and    0xc(%rdi),%eax
    c77b:	31 d0                	xor    %edx,%eax
    c77d:	c3                   	ret    

000000000000c77e <md5_f_32_47>:
    c77e:	f3 0f 1e fa          	endbr64 
    c782:	8b 47 04             	mov    0x4(%rdi),%eax
    c785:	33 47 08             	xor    0x8(%rdi),%eax
    c788:	33 47 0c             	xor    0xc(%rdi),%eax
    c78b:	c3                   	ret    

000000000000c78c <md5_f_48_63>:
    c78c:	f3 0f 1e fa          	endbr64 
    c790:	8b 47 0c             	mov    0xc(%rdi),%eax
    c793:	f7 d0                	not    %eax
    c795:	0b 47 04             	or     0x4(%rdi),%eax
    c798:	33 47 08             	xor    0x8(%rdi),%eax
    c79b:	c3                   	ret    

000000000000c79c <md5_init>:
    c79c:	f3 0f 1e fa          	endbr64 
    c7a0:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    c7a7:	ab cd ef 
    c7aa:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    c7b1:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c7b5:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    c7bc:	54 32 10 
    c7bf:	48 89 47 10          	mov    %rax,0x10(%rdi)
    c7c3:	c3                   	ret    

000000000000c7c4 <md5_update>:
    c7c4:	f3 0f 1e fa          	endbr64 
    c7c8:	41 57                	push   %r15
    c7ca:	41 56                	push   %r14
    c7cc:	4c 8d 35 8d 9f 01 00 	lea    0x19f8d(%rip),%r14        # 26760 <md5_steps>
    c7d3:	41 55                	push   %r13
    c7d5:	49 89 f5             	mov    %rsi,%r13
    c7d8:	41 54                	push   %r12
    c7da:	49 89 fc             	mov    %rdi,%r12
    c7dd:	55                   	push   %rbp
    c7de:	53                   	push   %rbx
    c7df:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    c7e6:	48 8b 05 63 d8 01 00 	mov    0x1d863(%rip),%rax        # 2a050 <__stack_chk_guard>
    c7ed:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    c7f2:	31 c0                	xor    %eax,%eax
    c7f4:	48 8d 04 16          	lea    (%rsi,%rdx,1),%rax
    c7f8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c7fd:	4c 3b 6c 24 08       	cmp    0x8(%rsp),%r13
    c802:	0f 84 ee 00 00 00    	je     c8f6 <md5_update+0x132>
    c808:	49 8b 1c 24          	mov    (%r12),%rbx
    c80c:	41 8a 55 00          	mov    0x0(%r13),%dl
    c810:	49 ff c5             	inc    %r13
    c813:	48 89 d8             	mov    %rbx,%rax
    c816:	48 ff c3             	inc    %rbx
    c819:	83 e0 3f             	and    $0x3f,%eax
    c81c:	41 88 54 04 18       	mov    %dl,0x18(%r12,%rax,1)
    c821:	49 89 1c 24          	mov    %rbx,(%r12)
    c825:	83 e3 3f             	and    $0x3f,%ebx
    c828:	75 d3                	jne    c7fd <md5_update+0x39>
    c82a:	31 c0                	xor    %eax,%eax
    c82c:	48 8d 6c 24 28       	lea    0x28(%rsp),%rbp
    c831:	41 8b 54 04 08       	mov    0x8(%r12,%rax,1),%edx
    c836:	48 83 c0 04          	add    $0x4,%rax
    c83a:	89 54 28 fc          	mov    %edx,-0x4(%rax,%rbp,1)
    c83e:	48 83 f8 50          	cmp    $0x50,%rax
    c842:	75 ed                	jne    c831 <md5_update+0x6d>
    c844:	45 31 ff             	xor    %r15d,%r15d
    c847:	44 89 f9             	mov    %r15d,%ecx
    c84a:	48 89 ef             	mov    %rbp,%rdi
    c84d:	c1 e9 04             	shr    $0x4,%ecx
    c850:	49 89 c8             	mov    %rcx,%r8
    c853:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    c858:	49 c1 e0 04          	shl    $0x4,%r8
    c85c:	4d 01 f0             	add    %r14,%r8
    c85f:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    c864:	41 ff 10             	call   *(%r8)
    c867:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    c86c:	4c 8d 0d 6d 5c 01 00 	lea    0x15c6d(%rip),%r9        # 224e0 <k>
    c873:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    c878:	03 44 24 28          	add    0x28(%rsp),%eax
    c87c:	43 03 04 b9          	add    (%r9,%r15,4),%eax
    c880:	4c 8d 0d 39 5c 01 00 	lea    0x15c39(%rip),%r9        # 224c0 <r>
    c887:	41 0f b6 50 08       	movzbl 0x8(%r8),%edx
    c88c:	41 0f b6 78 09       	movzbl 0x9(%r8),%edi
    c891:	49 8d 0c 89          	lea    (%r9,%rcx,4),%rcx
    c895:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
    c89a:	41 0f af d7          	imul   %r15d,%edx
    c89e:	01 fa                	add    %edi,%edx
    c8a0:	8b 7c 24 34          	mov    0x34(%rsp),%edi
    c8a4:	44 89 44 24 34       	mov    %r8d,0x34(%rsp)
    c8a9:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
    c8ae:	83 e2 0f             	and    $0xf,%edx
    c8b1:	44 89 44 24 30       	mov    %r8d,0x30(%rsp)
    c8b6:	03 44 94 38          	add    0x38(%rsp,%rdx,4),%eax
    c8ba:	4c 89 fa             	mov    %r15,%rdx
    c8bd:	49 ff c7             	inc    %r15
    c8c0:	83 e2 03             	and    $0x3,%edx
    c8c3:	89 7c 24 28          	mov    %edi,0x28(%rsp)
    c8c7:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c8cb:	d3 c0                	rol    %cl,%eax
    c8cd:	44 01 c0             	add    %r8d,%eax
    c8d0:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    c8d4:	49 83 ff 40          	cmp    $0x40,%r15
    c8d8:	0f 85 69 ff ff ff    	jne    c847 <md5_update+0x83>
    c8de:	8b 44 1d 00          	mov    0x0(%rbp,%rbx,1),%eax
    c8e2:	41 01 44 1c 08       	add    %eax,0x8(%r12,%rbx,1)
    c8e7:	48 83 c3 04          	add    $0x4,%rbx
    c8eb:	48 83 fb 10          	cmp    $0x10,%rbx
    c8ef:	75 ed                	jne    c8de <md5_update+0x11a>
    c8f1:	e9 07 ff ff ff       	jmp    c7fd <md5_update+0x39>
    c8f6:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    c8fb:	48 2b 05 4e d7 01 00 	sub    0x1d74e(%rip),%rax        # 2a050 <__stack_chk_guard>
    c902:	74 05                	je     c909 <md5_update+0x145>
    c904:	e8 57 61 ff ff       	call   2a60 <__stack_chk_fail>
    c909:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    c910:	5b                   	pop    %rbx
    c911:	5d                   	pop    %rbp
    c912:	41 5c                	pop    %r12
    c914:	41 5d                	pop    %r13
    c916:	41 5e                	pop    %r14
    c918:	41 5f                	pop    %r15
    c91a:	c3                   	ret    

000000000000c91b <md5_final>:
    c91b:	f3 0f 1e fa          	endbr64 
    c91f:	41 54                	push   %r12
    c921:	55                   	push   %rbp
    c922:	48 89 f5             	mov    %rsi,%rbp
    c925:	53                   	push   %rbx
    c926:	48 89 fb             	mov    %rdi,%rbx
    c929:	48 83 ec 20          	sub    $0x20,%rsp
    c92d:	48 8b 05 1c d7 01 00 	mov    0x1d71c(%rip),%rax        # 2a050 <__stack_chk_guard>
    c934:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c939:	48 8b 07             	mov    (%rdi),%rax
    c93c:	c6 44 24 0f 80       	movb   $0x80,0xf(%rsp)
    c941:	4c 8d 64 24 0f       	lea    0xf(%rsp),%r12
    c946:	48 c1 e0 03          	shl    $0x3,%rax
    c94a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    c94f:	ba 01 00 00 00       	mov    $0x1,%edx
    c954:	4c 89 e6             	mov    %r12,%rsi
    c957:	48 89 df             	mov    %rbx,%rdi
    c95a:	e8 65 fe ff ff       	call   c7c4 <md5_update>
    c95f:	48 8b 03             	mov    (%rbx),%rax
    c962:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
    c967:	83 e0 3f             	and    $0x3f,%eax
    c96a:	48 83 f8 38          	cmp    $0x38,%rax
    c96e:	75 df                	jne    c94f <md5_final+0x34>
    c970:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    c975:	48 89 df             	mov    %rbx,%rdi
    c978:	ba 08 00 00 00       	mov    $0x8,%edx
    c97d:	e8 42 fe ff ff       	call   c7c4 <md5_update>
    c982:	48 8d 73 08          	lea    0x8(%rbx),%rsi
    c986:	48 89 ef             	mov    %rbp,%rdi
    c989:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c98a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c98b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c98c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c98d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c992:	48 2b 05 b7 d6 01 00 	sub    0x1d6b7(%rip),%rax        # 2a050 <__stack_chk_guard>
    c999:	74 05                	je     c9a0 <md5_final+0x85>
    c99b:	e8 c0 60 ff ff       	call   2a60 <__stack_chk_fail>
    c9a0:	48 83 c4 20          	add    $0x20,%rsp
    c9a4:	5b                   	pop    %rbx
    c9a5:	5d                   	pop    %rbp
    c9a6:	41 5c                	pop    %r12
    c9a8:	c3                   	ret    

000000000000c9a9 <choose_exec>:
    c9a9:	f3 0f 1e fa          	endbr64 
    c9ad:	41 54                	push   %r12
    c9af:	48 8d 15 ea 9d 01 00 	lea    0x19dea(%rip),%rdx        # 267a0 <choose_cmd>
    c9b6:	53                   	push   %rbx
    c9b7:	48 89 f3             	mov    %rsi,%rbx
    c9ba:	48 83 ec 78          	sub    $0x78,%rsp
    c9be:	48 8b 05 8b d6 01 00 	mov    0x1d68b(%rip),%rax        # 2a050 <__stack_chk_guard>
    c9c5:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    c9ca:	31 c0                	xor    %eax,%eax
    c9cc:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    c9d1:	e8 b5 28 00 00       	call   f28b <parse_options>
    c9d6:	41 89 c4             	mov    %eax,%r12d
    c9d9:	85 c0                	test   %eax,%eax
    c9db:	0f 85 bb 00 00 00    	jne    ca9c <choose_exec+0xf3>
    c9e1:	48 63 05 a0 d6 01 00 	movslq 0x1d6a0(%rip),%rax        # 2a088 <optind>
    c9e8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    c9ed:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    c9f1:	e8 79 25 00 00       	call   ef6f <parse_autovivified_setting>
    c9f6:	41 89 c4             	mov    %eax,%r12d
    c9f9:	85 c0                	test   %eax,%eax
    c9fb:	0f 85 9b 00 00 00    	jne    ca9c <choose_exec+0xf3>
    ca01:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    ca06:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    ca0b:	e8 63 24 00 00       	call   ee73 <parse_menu>
    ca10:	41 89 c4             	mov    %eax,%r12d
    ca13:	85 c0                	test   %eax,%eax
    ca15:	0f 85 81 00 00 00    	jne    ca9c <choose_exec+0xf3>
    ca1b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    ca20:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    ca25:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    ca2a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    ca2f:	e8 e7 04 00 00       	call   cf1b <show_menu>
    ca34:	41 89 c4             	mov    %eax,%r12d
    ca37:	85 c0                	test   %eax,%eax
    ca39:	75 50                	jne    ca8b <choose_exec+0xe2>
    ca3b:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
    ca41:	75 0c                	jne    ca4f <choose_exec+0xa6>
    ca43:	48 8d 05 36 c8 01 00 	lea    0x1c836(%rip),%rax        # 29280 <setting_type_string>
    ca4a:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    ca4f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    ca54:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    ca59:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    ca5e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ca62:	e8 14 5b 00 00       	call   1257b <storef_setting>
    ca67:	41 89 c4             	mov    %eax,%r12d
    ca6a:	85 c0                	test   %eax,%eax
    ca6c:	74 1d                	je     ca8b <choose_exec+0xe2>
    ca6e:	89 c7                	mov    %eax,%edi
    ca70:	e8 03 6e 00 00       	call   13878 <strerror>
    ca75:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    ca7a:	48 8d 3d 6c 6a 01 00 	lea    0x16a6c(%rip),%rdi        # 234ed <.LC0>
    ca81:	48 89 c2             	mov    %rax,%rdx
    ca84:	31 c0                	xor    %eax,%eax
    ca86:	e8 ef a7 00 00       	call   1727a <printf>
    ca8b:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    ca90:	75 0a                	jne    ca9c <choose_exec+0xf3>
    ca92:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    ca97:	e8 b1 34 01 00       	call   1ff4d <destroy_menu>
    ca9c:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    caa1:	48 2b 05 a8 d5 01 00 	sub    0x1d5a8(%rip),%rax        # 2a050 <__stack_chk_guard>
    caa8:	74 05                	je     caaf <choose_exec+0x106>
    caaa:	e8 b1 5f ff ff       	call   2a60 <__stack_chk_fail>
    caaf:	48 83 c4 78          	add    $0x78,%rsp
    cab3:	44 89 e0             	mov    %r12d,%eax
    cab6:	5b                   	pop    %rbx
    cab7:	41 5c                	pop    %r12
    cab9:	c3                   	ret    

000000000000caba <item_exec>:
    caba:	f3 0f 1e fa          	endbr64 
    cabe:	41 55                	push   %r13
    cac0:	48 8d 15 59 9d 01 00 	lea    0x19d59(%rip),%rdx        # 26820 <item_cmd>
    cac7:	41 54                	push   %r12
    cac9:	55                   	push   %rbp
    caca:	48 89 f5             	mov    %rsi,%rbp
    cacd:	53                   	push   %rbx
    cace:	89 fb                	mov    %edi,%ebx
    cad0:	48 83 ec 38          	sub    $0x38,%rsp
    cad4:	48 8b 05 75 d5 01 00 	mov    0x1d575(%rip),%rax        # 2a050 <__stack_chk_guard>
    cadb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    cae0:	31 c0                	xor    %eax,%eax
    cae2:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    cae7:	e8 9f 27 00 00       	call   f28b <parse_options>
    caec:	41 89 c4             	mov    %eax,%r12d
    caef:	85 c0                	test   %eax,%eax
    caf1:	0f 85 93 00 00 00    	jne    cb8a <item_exec+0xd0>
    caf7:	45 31 ed             	xor    %r13d,%r13d
    cafa:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
    caff:	75 15                	jne    cb16 <item_exec+0x5c>
    cb01:	48 63 05 80 d5 01 00 	movslq 0x1d580(%rip),%rax        # 2a088 <optind>
    cb08:	8d 50 01             	lea    0x1(%rax),%edx
    cb0b:	4c 8b 6c c5 00       	mov    0x0(%rbp,%rax,8),%r13
    cb10:	89 15 72 d5 01 00    	mov    %edx,0x1d572(%rip)        # 2a088 <optind>
    cb16:	48 63 05 6b d5 01 00 	movslq 0x1d56b(%rip),%rax        # 2a088 <optind>
    cb1d:	39 d8                	cmp    %ebx,%eax
    cb1f:	7d 1a                	jge    cb3b <item_exec+0x81>
    cb21:	48 8d 7c c5 00       	lea    0x0(%rbp,%rax,8),%rdi
    cb26:	e8 a1 15 01 00       	call   1e0cc <concat_args>
    cb2b:	48 89 c5             	mov    %rax,%rbp
    cb2e:	48 85 c0             	test   %rax,%rax
    cb31:	75 0a                	jne    cb3d <item_exec+0x83>
    cb33:	41 bc 77 1f d2 ce    	mov    $0xced21f77,%r12d
    cb39:	eb 4f                	jmp    cb8a <item_exec+0xd0>
    cb3b:	31 ed                	xor    %ebp,%ebp
    cb3d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    cb42:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    cb47:	e8 27 23 00 00       	call   ee73 <parse_menu>
    cb4c:	41 89 c4             	mov    %eax,%r12d
    cb4f:	85 c0                	test   %eax,%eax
    cb51:	75 2f                	jne    cb82 <item_exec+0xc8>
    cb53:	48 85 ed             	test   %rbp,%rbp
    cb56:	44 8b 44 24 1c       	mov    0x1c(%rsp),%r8d
    cb5b:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    cb5f:	4c 89 ee             	mov    %r13,%rsi
    cb62:	48 8d 15 4b 79 01 00 	lea    0x1794b(%rip),%rdx        # 244b4 <.LC0>
    cb69:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    cb6e:	48 0f 45 d5          	cmovne %rbp,%rdx
    cb72:	e8 15 33 01 00       	call   1fe8c <add_menu_item>
    cb77:	48 85 c0             	test   %rax,%rax
    cb7a:	75 06                	jne    cb82 <item_exec+0xc8>
    cb7c:	41 bc 77 1f d2 ce    	mov    $0xced21f77,%r12d
    cb82:	48 89 ef             	mov    %rbp,%rdi
    cb85:	e8 98 fb ff ff       	call   c722 <free>
    cb8a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    cb8f:	48 2b 05 ba d4 01 00 	sub    0x1d4ba(%rip),%rax        # 2a050 <__stack_chk_guard>
    cb96:	74 05                	je     cb9d <item_exec+0xe3>
    cb98:	e8 c3 5e ff ff       	call   2a60 <__stack_chk_fail>
    cb9d:	48 83 c4 38          	add    $0x38,%rsp
    cba1:	44 89 e0             	mov    %r12d,%eax
    cba4:	5b                   	pop    %rbx
    cba5:	5d                   	pop    %rbp
    cba6:	41 5c                	pop    %r12
    cba8:	41 5d                	pop    %r13
    cbaa:	c3                   	ret    

000000000000cbab <menu_exec>:
    cbab:	f3 0f 1e fa          	endbr64 
    cbaf:	55                   	push   %rbp
    cbb0:	48 8d 15 e9 9c 01 00 	lea    0x19ce9(%rip),%rdx        # 268a0 <menu_cmd>
    cbb7:	53                   	push   %rbx
    cbb8:	48 89 f3             	mov    %rsi,%rbx
    cbbb:	48 83 ec 28          	sub    $0x28,%rsp
    cbbf:	48 8b 05 8a d4 01 00 	mov    0x1d48a(%rip),%rax        # 2a050 <__stack_chk_guard>
    cbc6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    cbcb:	31 c0                	xor    %eax,%eax
    cbcd:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    cbd2:	e8 b4 26 00 00       	call   f28b <parse_options>
    cbd7:	85 c0                	test   %eax,%eax
    cbd9:	75 54                	jne    cc2f <menu_exec+0x84>
    cbdb:	48 63 05 a6 d4 01 00 	movslq 0x1d4a6(%rip),%rax        # 2a088 <optind>
    cbe2:	48 8d 3c c3          	lea    (%rbx,%rax,8),%rdi
    cbe6:	e8 e1 14 01 00       	call   1e0cc <concat_args>
    cbeb:	48 89 c5             	mov    %rax,%rbp
    cbee:	48 85 c0             	test   %rax,%rax
    cbf1:	75 07                	jne    cbfa <menu_exec+0x4f>
    cbf3:	b8 77 1f d2 ce       	mov    $0xced21f77,%eax
    cbf8:	eb 35                	jmp    cc2f <menu_exec+0x84>
    cbfa:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    cbff:	48 89 c6             	mov    %rax,%rsi
    cc02:	e8 db 33 01 00       	call   1ffe2 <create_menu>
    cc07:	48 89 c7             	mov    %rax,%rdi
    cc0a:	48 85 c0             	test   %rax,%rax
    cc0d:	75 07                	jne    cc16 <menu_exec+0x6b>
    cc0f:	bb 77 1f d2 ce       	mov    $0xced21f77,%ebx
    cc14:	eb 0f                	jmp    cc25 <menu_exec+0x7a>
    cc16:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    cc1a:	85 db                	test   %ebx,%ebx
    cc1c:	74 07                	je     cc25 <menu_exec+0x7a>
    cc1e:	e8 2a 33 01 00       	call   1ff4d <destroy_menu>
    cc23:	31 db                	xor    %ebx,%ebx
    cc25:	48 89 ef             	mov    %rbp,%rdi
    cc28:	e8 f5 fa ff ff       	call   c722 <free>
    cc2d:	89 d8                	mov    %ebx,%eax
    cc2f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    cc34:	48 2b 15 15 d4 01 00 	sub    0x1d415(%rip),%rdx        # 2a050 <__stack_chk_guard>
    cc3b:	74 05                	je     cc42 <menu_exec+0x97>
    cc3d:	e8 1e 5e ff ff       	call   2a60 <__stack_chk_fail>
    cc42:	48 83 c4 28          	add    $0x28,%rsp
    cc46:	5b                   	pop    %rbx
    cc47:	5d                   	pop    %rbp
    cc48:	c3                   	ret    

000000000000cc49 <colour_set.constprop.0.isra.0>:
    cc49:	0f bf f7             	movswl %di,%esi
    cc4c:	31 d2                	xor    %edx,%edx
    cc4e:	48 8d 3d 0b 9d 01 00 	lea    0x19d0b(%rip),%rdi        # 26960 <_stdscr>
    cc55:	e9 c7 a6 00 00       	jmp    17321 <wcolour_set>

000000000000cc5a <mvaddstr.constprop.0.isra.0>:
    cc5a:	41 54                	push   %r12
    cc5c:	4c 8d 25 fd 9c 01 00 	lea    0x19cfd(%rip),%r12        # 26960 <_stdscr>
    cc63:	ba 03 00 00 00       	mov    $0x3,%edx
    cc68:	55                   	push   %rbp
    cc69:	48 89 f5             	mov    %rsi,%rbp
    cc6c:	89 fe                	mov    %edi,%esi
    cc6e:	4c 89 e7             	mov    %r12,%rdi
    cc71:	41 50                	push   %r8
    cc73:	e8 43 09 00 00       	call   d5bb <wmove>
    cc78:	85 c0                	test   %eax,%eax
    cc7a:	75 12                	jne    cc8e <mvaddstr.constprop.0.isra.0+0x34>
    cc7c:	59                   	pop    %rcx
    cc7d:	48 89 ee             	mov    %rbp,%rsi
    cc80:	4c 89 e7             	mov    %r12,%rdi
    cc83:	5d                   	pop    %rbp
    cc84:	83 ca ff             	or     $0xffffffff,%edx
    cc87:	41 5c                	pop    %r12
    cc89:	e9 b0 2c 00 00       	jmp    f93e <waddnstr>
    cc8e:	58                   	pop    %rax
    cc8f:	5d                   	pop    %rbp
    cc90:	41 5c                	pop    %r12
    cc92:	c3                   	ret    

000000000000cc93 <draw_menu_item>:
    cc93:	55                   	push   %rbp
    cc94:	48 89 e5             	mov    %rsp,%rbp
    cc97:	41 57                	push   %r15
    cc99:	41 56                	push   %r14
    cc9b:	41 89 f6             	mov    %esi,%r14d
    cc9e:	41 55                	push   %r13
    cca0:	41 54                	push   %r12
    cca2:	49 89 fc             	mov    %rdi,%r12
    cca5:	53                   	push   %rbx
    cca6:	48 83 ec 28          	sub    $0x28,%rsp
    ccaa:	48 8b 05 9f d3 01 00 	mov    0x1d39f(%rip),%rax        # 2a050 <__stack_chk_guard>
    ccb1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ccb5:	8b 05 d9 79 01 00    	mov    0x179d9(%rip),%eax        # 24694 <console_width>
    ccbb:	48 89 e2             	mov    %rsp,%rdx
    ccbe:	8d 58 ff             	lea    -0x1(%rax),%ebx
    ccc1:	48 8d 43 0f          	lea    0xf(%rbx),%rax
    ccc5:	48 c1 e8 04          	shr    $0x4,%rax
    ccc9:	48 c1 e0 04          	shl    $0x4,%rax
    cccd:	48 89 c1             	mov    %rax,%rcx
    ccd0:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    ccd7:	48 29 ca             	sub    %rcx,%rdx
    ccda:	48 39 d4             	cmp    %rdx,%rsp
    ccdd:	74 12                	je     ccf1 <draw_menu_item+0x5e>
    ccdf:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    cce6:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    cced:	00 00 
    ccef:	eb e9                	jmp    ccda <draw_menu_item+0x47>
    ccf1:	25 ff 0f 00 00       	and    $0xfff,%eax
    ccf6:	48 29 c4             	sub    %rax,%rsp
    ccf9:	48 85 c0             	test   %rax,%rax
    ccfc:	74 06                	je     cd04 <draw_menu_item+0x71>
    ccfe:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    cd04:	41 8d 46 03          	lea    0x3(%r14),%eax
    cd08:	41 2b 44 24 14       	sub    0x14(%r12),%eax
    cd0d:	ba 01 00 00 00       	mov    $0x1,%edx
    cd12:	49 89 e7             	mov    %rsp,%r15
    cd15:	4c 8d 2d 44 9c 01 00 	lea    0x19c44(%rip),%r13        # 26960 <_stdscr>
    cd1c:	89 c6                	mov    %eax,%esi
    cd1e:	89 45 bc             	mov    %eax,-0x44(%rbp)
    cd21:	4c 89 ef             	mov    %r13,%rdi
    cd24:	e8 92 08 00 00       	call   d5bb <wmove>
    cd29:	49 8b 04 24          	mov    (%r12),%rax
    cd2d:	44 89 f1             	mov    %r14d,%ecx
    cd30:	48 8b 50 20          	mov    0x20(%rax),%rdx
    cd34:	48 83 c0 20          	add    $0x20,%rax
    cd38:	48 39 c2             	cmp    %rax,%rdx
    cd3b:	0f 84 20 01 00 00    	je     ce61 <draw_menu_item+0x1ce>
    cd41:	85 c9                	test   %ecx,%ecx
    cd43:	75 0a                	jne    cd4f <draw_menu_item+0xbc>
    cd45:	48 85 d2             	test   %rdx,%rdx
    cd48:	75 0c                	jne    cd56 <draw_menu_item+0xc3>
    cd4a:	e9 12 01 00 00       	jmp    ce61 <draw_menu_item+0x1ce>
    cd4f:	48 8b 12             	mov    (%rdx),%rdx
    cd52:	ff c9                	dec    %ecx
    cd54:	eb e2                	jmp    cd38 <draw_menu_item+0xa5>
    cd56:	48 83 7a 10 00       	cmpq   $0x0,0x10(%rdx)
    cd5b:	75 12                	jne    cd6f <draw_menu_item+0xdc>
    cd5d:	bf 03 00 00 00       	mov    $0x3,%edi
    cd62:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    cd66:	e8 de fe ff ff       	call   cc49 <colour_set.constprop.0.isra.0>
    cd6b:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    cd6f:	45 39 74 24 10       	cmp    %r14d,0x10(%r12)
    cd74:	75 1f                	jne    cd95 <draw_menu_item+0x102>
    cd76:	bf 02 00 00 00       	mov    $0x2,%edi
    cd7b:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    cd7f:	e8 c5 fe ff ff       	call   cc49 <colour_set.constprop.0.isra.0>
    cd84:	be 00 00 04 00       	mov    $0x40000,%esi
    cd89:	4c 89 ef             	mov    %r13,%rdi
    cd8c:	e8 72 a5 00 00       	call   17303 <wattron>
    cd91:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    cd95:	48 8d 4b ff          	lea    -0x1(%rbx),%rcx
    cd99:	4c 89 ff             	mov    %r15,%rdi
    cd9c:	b8 20 00 00 00       	mov    $0x20,%eax
    cda1:	f3 aa                	rep stos %al,%es:(%rdi)
    cda3:	41 c6 44 1f ff 00    	movb   $0x0,-0x1(%r15,%rbx,1)
    cda9:	48 8b 72 18          	mov    0x18(%rdx),%rsi
    cdad:	48 83 eb 05          	sub    $0x5,%rbx
    cdb1:	48 89 f7             	mov    %rsi,%rdi
    cdb4:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    cdb8:	e8 59 6c 00 00       	call   13a16 <strlen>
    cdbd:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    cdc1:	49 8d 7f 02          	lea    0x2(%r15),%rdi
    cdc5:	48 39 c3             	cmp    %rax,%rbx
    cdc8:	48 0f 46 c3          	cmovbe %rbx,%rax
    cdcc:	48 89 c2             	mov    %rax,%rdx
    cdcf:	e8 15 a6 00 00       	call   173e9 <__memcpy>
    cdd4:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    cdd9:	4c 8d 45 c2          	lea    -0x3e(%rbp),%r8
    cddd:	48 8d 15 7c 67 01 00 	lea    0x1677c(%rip),%rdx        # 23560 <.LC0>
    cde4:	4c 89 c7             	mov    %r8,%rdi
    cde7:	be 06 00 00 00       	mov    $0x6,%esi
    cdec:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    cdf0:	48 8d 88 ff 03 00 00 	lea    0x3ff(%rax),%rcx
    cdf7:	31 c0                	xor    %eax,%eax
    cdf9:	48 c1 e9 0a          	shr    $0xa,%rcx
    cdfd:	e8 5b a3 00 00       	call   1715d <snprintf>
    ce02:	45 39 74 24 10       	cmp    %r14d,0x10(%r12)
    ce07:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    ce0b:	75 27                	jne    ce34 <draw_menu_item+0x1a1>
    ce0d:	49 83 7c 24 18 00    	cmpq   $0x0,0x18(%r12)
    ce13:	74 1f                	je     ce34 <draw_menu_item+0x1a1>
    ce15:	48 63 d0             	movslq %eax,%rdx
    ce18:	8b 05 76 78 01 00    	mov    0x17876(%rip),%eax        # 24694 <console_width>
    ce1e:	4c 89 f9             	mov    %r15,%rcx
    ce21:	4c 89 c6             	mov    %r8,%rsi
    ce24:	48 29 d1             	sub    %rdx,%rcx
    ce27:	83 e8 02             	sub    $0x2,%eax
    ce2a:	48 8d 7c 01 fe       	lea    -0x2(%rcx,%rax,1),%rdi
    ce2f:	e8 b5 a5 00 00       	call   173e9 <__memcpy>
    ce34:	4c 89 fa             	mov    %r15,%rdx
    ce37:	48 8d 35 c3 68 01 00 	lea    0x168c3(%rip),%rsi        # 23701 <.LC0>
    ce3e:	4c 89 ef             	mov    %r13,%rdi
    ce41:	31 c0                	xor    %eax,%eax
    ce43:	e8 50 2b 00 00       	call   f998 <wprintw>
    ce48:	bf 01 00 00 00       	mov    $0x1,%edi
    ce4d:	e8 f7 fd ff ff       	call   cc49 <colour_set.constprop.0.isra.0>
    ce52:	be 00 00 04 00       	mov    $0x40000,%esi
    ce57:	4c 89 ef             	mov    %r13,%rdi
    ce5a:	e8 98 a4 00 00       	call   172f7 <wattroff>
    ce5f:	eb 08                	jmp    ce69 <draw_menu_item+0x1d6>
    ce61:	4c 89 ef             	mov    %r13,%rdi
    ce64:	e8 1e c4 00 00       	call   19287 <wclrtoeol>
    ce69:	8b 75 bc             	mov    -0x44(%rbp),%esi
    ce6c:	ba 01 00 00 00       	mov    $0x1,%edx
    ce71:	4c 89 ef             	mov    %r13,%rdi
    ce74:	e8 42 07 00 00       	call   d5bb <wmove>
    ce79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ce7d:	48 2b 05 cc d1 01 00 	sub    0x1d1cc(%rip),%rax        # 2a050 <__stack_chk_guard>
    ce84:	74 05                	je     ce8b <draw_menu_item+0x1f8>
    ce86:	e8 d5 5b ff ff       	call   2a60 <__stack_chk_fail>
    ce8b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    ce8f:	5b                   	pop    %rbx
    ce90:	41 5c                	pop    %r12
    ce92:	41 5d                	pop    %r13
    ce94:	41 5e                	pop    %r14
    ce96:	41 5f                	pop    %r15
    ce98:	5d                   	pop    %rbp
    ce99:	c3                   	ret    

000000000000ce9a <draw_menu_items>:
    ce9a:	41 54                	push   %r12
    ce9c:	4c 8d 25 e0 6f 01 00 	lea    0x16fe0(%rip),%r12        # 23e83 <.LC0>
    cea3:	55                   	push   %rbp
    cea4:	48 8d 2d 89 6b 01 00 	lea    0x16b89(%rip),%rbp        # 23a34 <.LC2>
    ceab:	53                   	push   %rbx
    ceac:	48 89 fb             	mov    %rdi,%rbx
    ceaf:	bf 03 00 00 00       	mov    $0x3,%edi
    ceb4:	e8 90 fd ff ff       	call   cc49 <colour_set.constprop.0.isra.0>
    ceb9:	83 7b 14 00          	cmpl   $0x0,0x14(%rbx)
    cebd:	4c 89 e6             	mov    %r12,%rsi
    cec0:	bf 02 00 00 00       	mov    $0x2,%edi
    cec5:	48 0f 44 f5          	cmove  %rbp,%rsi
    cec9:	e8 8c fd ff ff       	call   cc5a <mvaddstr.constprop.0.isra.0>
    cece:	8b 43 08             	mov    0x8(%rbx),%eax
    ced1:	4c 89 e6             	mov    %r12,%rsi
    ced4:	03 43 14             	add    0x14(%rbx),%eax
    ced7:	3b 43 0c             	cmp    0xc(%rbx),%eax
    ceda:	8b 05 b0 77 01 00    	mov    0x177b0(%rip),%eax        # 24690 <console_height>
    cee0:	48 0f 43 f5          	cmovae %rbp,%rsi
    cee4:	31 ed                	xor    %ebp,%ebp
    cee6:	8d 78 fe             	lea    -0x2(%rax),%edi
    cee9:	e8 6c fd ff ff       	call   cc5a <mvaddstr.constprop.0.isra.0>
    ceee:	bf 01 00 00 00       	mov    $0x1,%edi
    cef3:	e8 51 fd ff ff       	call   cc49 <colour_set.constprop.0.isra.0>
    cef8:	8b 05 92 77 01 00    	mov    0x17792(%rip),%eax        # 24690 <console_height>
    cefe:	83 e8 05             	sub    $0x5,%eax
    cf01:	39 e8                	cmp    %ebp,%eax
    cf03:	76 11                	jbe    cf16 <draw_menu_items+0x7c>
    cf05:	8b 73 14             	mov    0x14(%rbx),%esi
    cf08:	48 89 df             	mov    %rbx,%rdi
    cf0b:	01 ee                	add    %ebp,%esi
    cf0d:	ff c5                	inc    %ebp
    cf0f:	e8 7f fd ff ff       	call   cc93 <draw_menu_item>
    cf14:	eb e2                	jmp    cef8 <draw_menu_items+0x5e>
    cf16:	5b                   	pop    %rbx
    cf17:	5d                   	pop    %rbp
    cf18:	41 5c                	pop    %r12
    cf1a:	c3                   	ret    

000000000000cf1b <show_menu>:
    cf1b:	f3 0f 1e fa          	endbr64 
    cf1f:	55                   	push   %rbp
    cf20:	49 89 f8             	mov    %rdi,%r8
    cf23:	48 89 e5             	mov    %rsp,%rbp
    cf26:	41 57                	push   %r15
    cf28:	49 89 d7             	mov    %rdx,%r15
    cf2b:	41 56                	push   %r14
    cf2d:	41 55                	push   %r13
    cf2f:	41 54                	push   %r12
    cf31:	53                   	push   %rbx
    cf32:	48 83 ec 58          	sub    $0x58,%rsp
    cf36:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
    cf3a:	48 8b 05 0f d1 01 00 	mov    0x1d10f(%rip),%rax        # 2a050 <__stack_chk_guard>
    cf41:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    cf45:	8b 05 49 77 01 00    	mov    0x17749(%rip),%eax        # 24694 <console_width>
    cf4b:	48 89 e2             	mov    %rsp,%rdx
    cf4e:	44 8d 70 ff          	lea    -0x1(%rax),%r14d
    cf52:	49 8d 46 0f          	lea    0xf(%r14),%rax
    cf56:	48 c1 e8 04          	shr    $0x4,%rax
    cf5a:	48 c1 e0 04          	shl    $0x4,%rax
    cf5e:	48 89 c1             	mov    %rax,%rcx
    cf61:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    cf68:	48 29 ca             	sub    %rcx,%rdx
    cf6b:	48 39 d4             	cmp    %rdx,%rsp
    cf6e:	74 12                	je     cf82 <show_menu+0x67>
    cf70:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    cf77:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    cf7e:	00 00 
    cf80:	eb e9                	jmp    cf6b <show_menu+0x50>
    cf82:	25 ff 0f 00 00       	and    $0xfff,%eax
    cf87:	48 29 c4             	sub    %rax,%rsp
    cf8a:	48 85 c0             	test   %rax,%rax
    cf8d:	74 06                	je     cf95 <show_menu+0x7a>
    cf8f:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    cf95:	48 8d 5d a8          	lea    -0x58(%rbp),%rbx
    cf99:	49 89 e5             	mov    %rsp,%r13
    cf9c:	b9 20 00 00 00       	mov    $0x20,%ecx
    cfa1:	31 c0                	xor    %eax,%eax
    cfa3:	48 89 df             	mov    %rbx,%rdi
    cfa6:	f3 aa                	rep stos %al,%es:(%rdi)
    cfa8:	8b 05 e2 76 01 00    	mov    0x176e2(%rip),%eax        # 24690 <console_height>
    cfae:	49 8b 48 20          	mov    0x20(%r8),%rcx
    cfb2:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    cfb6:	45 31 e4             	xor    %r12d,%r12d
    cfb9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    cfbd:	83 e8 05             	sub    $0x5,%eax
    cfc0:	89 45 b0             	mov    %eax,-0x50(%rbp)
    cfc3:	49 8d 40 20          	lea    0x20(%r8),%rax
    cfc7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    cfcb:	48 3b 4d 98          	cmp    -0x68(%rbp),%rcx
    cfcf:	74 4b                	je     d01c <show_menu+0x101>
    cfd1:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    cfd5:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    cfd8:	48 85 f6             	test   %rsi,%rsi
    cfdb:	74 35                	je     d012 <show_menu+0xf7>
    cfdd:	45 85 e4             	test   %r12d,%r12d
    cfe0:	75 03                	jne    cfe5 <show_menu+0xca>
    cfe2:	89 55 b8             	mov    %edx,-0x48(%rbp)
    cfe5:	41 ff c4             	inc    %r12d
    cfe8:	4d 85 ff             	test   %r15,%r15
    cfeb:	74 1c                	je     d009 <show_menu+0xee>
    cfed:	4c 89 ff             	mov    %r15,%rdi
    cff0:	89 55 90             	mov    %edx,-0x70(%rbp)
    cff3:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    cff7:	e8 c0 69 00 00       	call   139bc <strcmp>
    cffc:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    d000:	8b 55 90             	mov    -0x70(%rbp),%edx
    d003:	85 c0                	test   %eax,%eax
    d005:	75 0b                	jne    d012 <show_menu+0xf7>
    d007:	eb 06                	jmp    d00f <show_menu+0xf4>
    d009:	83 79 24 00          	cmpl   $0x0,0x24(%rcx)
    d00d:	74 03                	je     d012 <show_menu+0xf7>
    d00f:	89 55 b8             	mov    %edx,-0x48(%rbp)
    d012:	ff c2                	inc    %edx
    d014:	48 8b 09             	mov    (%rcx),%rcx
    d017:	89 55 b4             	mov    %edx,-0x4c(%rbp)
    d01a:	eb af                	jmp    cfcb <show_menu+0xb0>
    d01c:	45 85 e4             	test   %r12d,%r12d
    d01f:	75 0b                	jne    d02c <show_menu+0x111>
    d021:	41 bc 72 1f d3 d2    	mov    $0xd2d31f72,%r12d
    d027:	e9 59 02 00 00       	jmp    d285 <show_menu+0x36a>
    d02c:	e8 11 a3 00 00       	call   17342 <initscr>
    d031:	bf 01 00 00 00       	mov    $0x1,%edi
    d036:	4c 8d 25 23 99 01 00 	lea    0x19923(%rip),%r12        # 26960 <_stdscr>
    d03d:	4c 8d 3d bd 66 01 00 	lea    0x166bd(%rip),%r15        # 23701 <.LC0>
    d044:	e8 00 fc ff ff       	call   cc49 <colour_set.constprop.0.isra.0>
    d049:	31 ff                	xor    %edi,%edi
    d04b:	e8 8d 05 00 00       	call   d5dd <curs_set>
    d050:	e8 78 c2 00 00       	call   192cd <erase>
    d055:	be 00 00 04 00       	mov    $0x40000,%esi
    d05a:	4c 89 e7             	mov    %r12,%rdi
    d05d:	e8 a1 a2 00 00       	call   17303 <wattron>
    d062:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d066:	4c 89 fa             	mov    %r15,%rdx
    d069:	4c 89 f6             	mov    %r14,%rsi
    d06c:	4c 89 ef             	mov    %r13,%rdi
    d06f:	48 8b 48 18          	mov    0x18(%rax),%rcx
    d073:	31 c0                	xor    %eax,%eax
    d075:	e8 e3 a0 00 00       	call   1715d <snprintf>
    d07a:	4c 89 ef             	mov    %r13,%rdi
    d07d:	e8 94 69 00 00       	call   13a16 <strlen>
    d082:	8b 15 0c 76 01 00    	mov    0x1760c(%rip),%edx        # 24694 <console_width>
    d088:	be 01 00 00 00       	mov    $0x1,%esi
    d08d:	4c 89 e7             	mov    %r12,%rdi
    d090:	48 29 c2             	sub    %rax,%rdx
    d093:	48 d1 ea             	shr    %rdx
    d096:	e8 20 05 00 00       	call   d5bb <wmove>
    d09b:	85 c0                	test   %eax,%eax
    d09d:	75 0e                	jne    d0ad <show_menu+0x192>
    d09f:	4c 89 ea             	mov    %r13,%rdx
    d0a2:	4c 89 fe             	mov    %r15,%rsi
    d0a5:	4c 89 e7             	mov    %r12,%rdi
    d0a8:	e8 eb 28 00 00       	call   f998 <wprintw>
    d0ad:	be 00 00 04 00       	mov    $0x40000,%esi
    d0b2:	4c 89 e7             	mov    %r12,%rdi
    d0b5:	4c 8d 75 b0          	lea    -0x50(%rbp),%r14
    d0b9:	e8 39 a2 00 00       	call   172f7 <wattroff>
    d0be:	4c 89 f7             	mov    %r14,%rdi
    d0c1:	e8 8f 2d 01 00       	call   1fe55 <jump_scroll>
    d0c6:	48 89 df             	mov    %rbx,%rdi
    d0c9:	e8 cc fd ff ff       	call   ce9a <draw_menu_items>
    d0ce:	8b 75 b8             	mov    -0x48(%rbp),%esi
    d0d1:	48 89 df             	mov    %rbx,%rdi
    d0d4:	e8 ba fb ff ff       	call   cc93 <draw_menu_item>
    d0d9:	8b 45 b8             	mov    -0x48(%rbp),%eax
    d0dc:	89 45 98             	mov    %eax,-0x68(%rbp)
    d0df:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d0e3:	49 89 c5             	mov    %rax,%r13
    d0e6:	41 81 e5 ff 03 00 00 	and    $0x3ff,%r13d
    d0ed:	75 0e                	jne    d0fd <show_menu+0x1e2>
    d0ef:	45 31 ed             	xor    %r13d,%r13d
    d0f2:	48 85 c0             	test   %rax,%rax
    d0f5:	41 0f 95 c5          	setne  %r13b
    d0f9:	49 c1 e5 0a          	shl    $0xa,%r13
    d0fd:	4c 29 e8             	sub    %r13,%rax
    d100:	4c 89 ef             	mov    %r13,%rdi
    d103:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d107:	e8 2f 13 01 00       	call   1e43b <getkey>
    d10c:	85 c0                	test   %eax,%eax
    d10e:	79 16                	jns    d126 <show_menu+0x20b>
    d110:	45 31 ff             	xor    %r15d,%r15d
    d113:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    d118:	41 0f 94 c7          	sete   %r15b
    d11c:	45 31 e4             	xor    %r12d,%r12d
    d11f:	31 f6                	xor    %esi,%esi
    d121:	e9 af 00 00 00       	jmp    d1d5 <show_menu+0x2ba>
    d126:	89 c6                	mov    %eax,%esi
    d128:	4c 89 f7             	mov    %r14,%rdi
    d12b:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    d132:	00 
    d133:	89 45 80             	mov    %eax,-0x80(%rbp)
    d136:	e8 84 2c 01 00       	call   1fdbf <jump_scroll_key>
    d13b:	8b 55 80             	mov    -0x80(%rbp),%edx
    d13e:	89 c6                	mov    %eax,%esi
    d140:	83 fa 0d             	cmp    $0xd,%edx
    d143:	0f 84 83 00 00 00    	je     d1cc <show_menu+0x2b1>
    d149:	7f 15                	jg     d160 <show_menu+0x245>
    d14b:	83 fa 03             	cmp    $0x3,%edx
    d14e:	74 15                	je     d165 <show_menu+0x24a>
    d150:	45 31 e4             	xor    %r12d,%r12d
    d153:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    d159:	83 fa 0a             	cmp    $0xa,%edx
    d15c:	74 77                	je     d1d5 <show_menu+0x2ba>
    d15e:	eb 10                	jmp    d170 <show_menu+0x255>
    d160:	83 fa 1b             	cmp    $0x1b,%edx
    d163:	75 0b                	jne    d170 <show_menu+0x255>
    d165:	41 bc 6b 1f d3 f4    	mov    $0xf4d31f6b,%r12d
    d16b:	45 31 ff             	xor    %r15d,%r15d
    d16e:	eb 65                	jmp    d1d5 <show_menu+0x2ba>
    d170:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    d174:	45 31 c9             	xor    %r9d,%r9d
    d177:	45 31 ff             	xor    %r15d,%r15d
    d17a:	45 31 c0             	xor    %r8d,%r8d
    d17d:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    d183:	48 8b 47 20          	mov    0x20(%rdi),%rax
    d187:	48 83 c7 20          	add    $0x20,%rdi
    d18b:	48 39 f8             	cmp    %rdi,%rax
    d18e:	74 2c                	je     d1bc <show_menu+0x2a1>
    d190:	44 8b 58 20          	mov    0x20(%rax),%r11d
    d194:	44 39 da             	cmp    %r11d,%edx
    d197:	75 05                	jne    d19e <show_menu+0x283>
    d199:	45 85 db             	test   %r11d,%r11d
    d19c:	75 05                	jne    d1a3 <show_menu+0x288>
    d19e:	41 ff c0             	inc    %r8d
    d1a1:	eb 14                	jmp    d1b7 <show_menu+0x29c>
    d1a3:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    d1a8:	44 89 45 94          	mov    %r8d,-0x6c(%rbp)
    d1ac:	41 b1 01             	mov    $0x1,%r9b
    d1af:	41 0f 44 f2          	cmove  %r10d,%esi
    d1b3:	45 0f 45 fa          	cmovne %r10d,%r15d
    d1b7:	48 8b 00             	mov    (%rax),%rax
    d1ba:	eb cf                	jmp    d18b <show_menu+0x270>
    d1bc:	45 84 c9             	test   %r9b,%r9b
    d1bf:	74 06                	je     d1c7 <show_menu+0x2ac>
    d1c1:	8b 45 94             	mov    -0x6c(%rbp),%eax
    d1c4:	89 45 b8             	mov    %eax,-0x48(%rbp)
    d1c7:	45 31 e4             	xor    %r12d,%r12d
    d1ca:	eb 09                	jmp    d1d5 <show_menu+0x2ba>
    d1cc:	45 31 e4             	xor    %r12d,%r12d
    d1cf:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    d1d5:	85 f6                	test   %esi,%esi
    d1d7:	74 33                	je     d20c <show_menu+0x2f1>
    d1d9:	4c 89 f7             	mov    %r14,%rdi
    d1dc:	e8 3b 2c 01 00       	call   1fe1c <jump_scroll_move>
    d1e1:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d1e5:	8b 7d b8             	mov    -0x48(%rbp),%edi
    d1e8:	89 c6                	mov    %eax,%esi
    d1ea:	48 83 c2 20          	add    $0x20,%rdx
    d1ee:	48 8b 02             	mov    (%rdx),%rax
    d1f1:	48 39 d0             	cmp    %rdx,%rax
    d1f4:	0f 84 81 00 00 00    	je     d27b <show_menu+0x360>
    d1fa:	85 ff                	test   %edi,%edi
    d1fc:	74 07                	je     d205 <show_menu+0x2ea>
    d1fe:	48 8b 00             	mov    (%rax),%rax
    d201:	ff cf                	dec    %edi
    d203:	eb ec                	jmp    d1f1 <show_menu+0x2d6>
    d205:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    d20a:	74 c9                	je     d1d5 <show_menu+0x2ba>
    d20c:	8b 45 98             	mov    -0x68(%rbp),%eax
    d20f:	39 45 b8             	cmp    %eax,-0x48(%rbp)
    d212:	75 05                	jne    d219 <show_menu+0x2fe>
    d214:	4d 85 ed             	test   %r13,%r13
    d217:	74 2a                	je     d243 <show_menu+0x328>
    d219:	8b 75 98             	mov    -0x68(%rbp),%esi
    d21c:	48 89 df             	mov    %rbx,%rdi
    d21f:	e8 6f fa ff ff       	call   cc93 <draw_menu_item>
    d224:	4c 89 f7             	mov    %r14,%rdi
    d227:	e8 29 2c 01 00       	call   1fe55 <jump_scroll>
    d22c:	85 c0                	test   %eax,%eax
    d22e:	74 08                	je     d238 <show_menu+0x31d>
    d230:	48 89 df             	mov    %rbx,%rdi
    d233:	e8 62 fc ff ff       	call   ce9a <draw_menu_items>
    d238:	8b 75 b8             	mov    -0x48(%rbp),%esi
    d23b:	48 89 df             	mov    %rbx,%rdi
    d23e:	e8 50 fa ff ff       	call   cc93 <draw_menu_item>
    d243:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d247:	8b 75 b8             	mov    -0x48(%rbp),%esi
    d24a:	48 8b 42 20          	mov    0x20(%rdx),%rax
    d24e:	48 83 c2 20          	add    $0x20,%rdx
    d252:	48 39 d0             	cmp    %rdx,%rax
    d255:	74 0b                	je     d262 <show_menu+0x347>
    d257:	85 f6                	test   %esi,%esi
    d259:	74 09                	je     d264 <show_menu+0x349>
    d25b:	48 8b 00             	mov    (%rax),%rax
    d25e:	ff ce                	dec    %esi
    d260:	eb f0                	jmp    d252 <show_menu+0x337>
    d262:	31 c0                	xor    %eax,%eax
    d264:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    d268:	45 09 e7             	or     %r12d,%r15d
    d26b:	48 89 01             	mov    %rax,(%rcx)
    d26e:	0f 84 65 fe ff ff    	je     d0d9 <show_menu+0x1be>
    d274:	e8 0d a1 00 00       	call   17386 <endwin>
    d279:	eb 0a                	jmp    d285 <show_menu+0x36a>
    d27b:	48 8b 04 25 10 00 00 	mov    0x10,%rax
    d282:	00 
    d283:	0f 0b                	ud2    
    d285:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d289:	48 2b 05 c0 cd 01 00 	sub    0x1cdc0(%rip),%rax        # 2a050 <__stack_chk_guard>
    d290:	74 05                	je     d297 <show_menu+0x37c>
    d292:	e8 c9 57 ff ff       	call   2a60 <__stack_chk_fail>
    d297:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    d29b:	44 89 e0             	mov    %r12d,%eax
    d29e:	5b                   	pop    %rbx
    d29f:	41 5c                	pop    %r12
    d2a1:	41 5d                	pop    %r13
    d2a3:	41 5e                	pop    %r14
    d2a5:	41 5f                	pop    %r15
    d2a7:	5d                   	pop    %rbp
    d2a8:	c3                   	ret    

000000000000d2a9 <monojob_close>:
    d2a9:	f3 0f 1e fa          	endbr64 
    d2ad:	89 35 91 ca 01 00    	mov    %esi,0x1ca91(%rip)        # 29d44 <monojob_rc>
    d2b3:	e9 60 c6 ff ff       	jmp    9918 <intf_restart>

000000000000d2b8 <monojob_clear>:
    d2b8:	55                   	push   %rbp
    d2b9:	31 ed                	xor    %ebp,%ebp
    d2bb:	53                   	push   %rbx
    d2bc:	48 89 fb             	mov    %rdi,%rbx
    d2bf:	52                   	push   %rdx
    d2c0:	89 e8                	mov    %ebp,%eax
    d2c2:	48 39 d8             	cmp    %rbx,%rax
    d2c5:	73 0e                	jae    d2d5 <monojob_clear+0x1d>
    d2c7:	bf 08 00 00 00       	mov    $0x8,%edi
    d2cc:	ff c5                	inc    %ebp
    d2ce:	e8 57 c0 00 00       	call   1932a <putchar>
    d2d3:	eb eb                	jmp    d2c0 <monojob_clear+0x8>
    d2d5:	31 ed                	xor    %ebp,%ebp
    d2d7:	89 e8                	mov    %ebp,%eax
    d2d9:	48 39 d8             	cmp    %rbx,%rax
    d2dc:	73 0e                	jae    d2ec <monojob_clear+0x34>
    d2de:	bf 20 00 00 00       	mov    $0x20,%edi
    d2e3:	ff c5                	inc    %ebp
    d2e5:	e8 40 c0 00 00       	call   1932a <putchar>
    d2ea:	eb eb                	jmp    d2d7 <monojob_clear+0x1f>
    d2ec:	31 ed                	xor    %ebp,%ebp
    d2ee:	89 e8                	mov    %ebp,%eax
    d2f0:	48 39 d8             	cmp    %rbx,%rax
    d2f3:	73 0e                	jae    d303 <monojob_clear+0x4b>
    d2f5:	bf 08 00 00 00       	mov    $0x8,%edi
    d2fa:	ff c5                	inc    %ebp
    d2fc:	e8 29 c0 00 00       	call   1932a <putchar>
    d301:	eb eb                	jmp    d2ee <monojob_clear+0x36>
    d303:	58                   	pop    %rax
    d304:	5b                   	pop    %rbx
    d305:	5d                   	pop    %rbp
    d306:	c3                   	ret    

000000000000d307 <monojob_wait>:
    d307:	f3 0f 1e fa          	endbr64 
    d30b:	41 57                	push   %r15
    d30d:	41 56                	push   %r14
    d30f:	41 55                	push   %r13
    d311:	41 54                	push   %r12
    d313:	49 89 fc             	mov    %rdi,%r12
    d316:	55                   	push   %rbp
    d317:	53                   	push   %rbx
    d318:	48 83 ec 58          	sub    $0x58,%rsp
    d31c:	48 8b 05 2d cd 01 00 	mov    0x1cd2d(%rip),%rax        # 2a050 <__stack_chk_guard>
    d323:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    d328:	31 c0                	xor    %eax,%eax
    d32a:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    d32f:	48 85 ff             	test   %rdi,%rdi
    d332:	74 0f                	je     d343 <monojob_wait+0x3c>
    d334:	48 89 fe             	mov    %rdi,%rsi
    d337:	48 8d 3d 28 62 01 00 	lea    0x16228(%rip),%rdi        # 23566 <.LC0>
    d33e:	e8 37 9f 00 00       	call   1727a <printf>
    d343:	c7 05 f7 c9 01 00 6c 	movl   $0xe5f8df6c,0x1c9f7(%rip)        # 29d44 <monojob_rc>
    d34a:	df f8 e5 
    d34d:	31 ed                	xor    %ebp,%ebp
    d34f:	45 31 ff             	xor    %r15d,%r15d
    d352:	e8 56 8a 00 00       	call   15dad <currticks>
    d357:	48 89 c3             	mov    %rax,%rbx
    d35a:	49 89 c5             	mov    %rax,%r13
    d35d:	49 89 c6             	mov    %rax,%r14
    d360:	48 89 1c 24          	mov    %rbx,(%rsp)
    d364:	81 3d d6 c9 01 00 6c 	cmpl   $0xe5f8df6c,0x1c9d6(%rip)        # 29d44 <monojob_rc>
    d36b:	df f8 e5 
    d36e:	0f 85 0c 01 00 00    	jne    d480 <monojob_wait+0x179>
    d374:	e8 0f 27 00 00       	call   fa88 <step>
    d379:	e8 2f 8a 00 00       	call   15dad <currticks>
    d37e:	48 89 c3             	mov    %rax,%rbx
    d381:	48 39 04 24          	cmp    %rax,(%rsp)
    d385:	74 dd                	je     d364 <monojob_wait+0x5d>
    d387:	e8 df bf 00 00       	call   1936b <iskey>
    d38c:	85 c0                	test   %eax,%eax
    d38e:	74 19                	je     d3a9 <monojob_wait+0xa2>
    d390:	e8 a2 bf 00 00       	call   19337 <getchar>
    d395:	83 f8 03             	cmp    $0x3,%eax
    d398:	75 0f                	jne    d3a9 <monojob_wait+0xa2>
    d39a:	c7 05 a0 c9 01 00 6b 	movl   $0xf4f8df6b,0x1c9a0(%rip)        # 29d44 <monojob_rc>
    d3a1:	df f8 f4 
    d3a4:	e9 d7 00 00 00       	jmp    d480 <monojob_wait+0x179>
    d3a9:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    d3ae:	48 8d 3d 4b 95 01 00 	lea    0x1954b(%rip),%rdi        # 26900 <monojob>
    d3b5:	e8 27 ec ff ff       	call   bfe1 <job_progress>
    d3ba:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    d3bf:	48 89 14 24          	mov    %rdx,(%rsp)
    d3c3:	4c 39 fa             	cmp    %r15,%rdx
    d3c6:	75 28                	jne    d3f0 <monojob_wait+0xe9>
    d3c8:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    d3cd:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    d3d1:	48 89 da             	mov    %rbx,%rdx
    d3d4:	4c 29 f2             	sub    %r14,%rdx
    d3d7:	48 39 d1             	cmp    %rdx,%rcx
    d3da:	73 17                	jae    d3f3 <monojob_wait+0xec>
    d3dc:	85 c0                	test   %eax,%eax
    d3de:	75 05                	jne    d3e5 <monojob_wait+0xde>
    d3e0:	b8 6e df f8 b3       	mov    $0xb3f8df6e,%eax
    d3e5:	89 05 59 c9 01 00    	mov    %eax,0x1c959(%rip)        # 29d44 <monojob_rc>
    d3eb:	e9 90 00 00 00       	jmp    d480 <monojob_wait+0x179>
    d3f0:	49 89 de             	mov    %rbx,%r14
    d3f3:	48 89 d8             	mov    %rbx,%rax
    d3f6:	4c 29 e8             	sub    %r13,%rax
    d3f9:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    d3ff:	76 76                	jbe    d477 <monojob_wait+0x170>
    d401:	4d 85 e4             	test   %r12,%r12
    d404:	74 71                	je     d477 <monojob_wait+0x170>
    d406:	48 89 ef             	mov    %rbp,%rdi
    d409:	e8 aa fe ff ff       	call   d2b8 <monojob_clear>
    d40e:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    d413:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    d418:	48 83 f9 7f          	cmp    $0x7f,%rcx
    d41c:	76 27                	jbe    d445 <monojob_wait+0x13e>
    d41e:	48 c1 e8 07          	shr    $0x7,%rax
    d422:	48 c1 e9 07          	shr    $0x7,%rcx
    d426:	31 d2                	xor    %edx,%edx
    d428:	48 8d 3d 3d 61 01 00 	lea    0x1613d(%rip),%rdi        # 2356c <.LC1>
    d42f:	48 6b c0 64          	imul   $0x64,%rax,%rax
    d433:	48 f7 f1             	div    %rcx
    d436:	48 89 c6             	mov    %rax,%rsi
    d439:	31 c0                	xor    %eax,%eax
    d43b:	e8 3a 9e 00 00       	call   1727a <printf>
    d440:	48 63 e8             	movslq %eax,%rbp
    d443:	eb 10                	jmp    d455 <monojob_wait+0x14e>
    d445:	48 8d 3d 39 6a 01 00 	lea    0x16a39(%rip),%rdi        # 23e85 <.LC1>
    d44c:	31 c0                	xor    %eax,%eax
    d44e:	31 ed                	xor    %ebp,%ebp
    d450:	e8 25 9e 00 00       	call   1727a <printf>
    d455:	80 7c 24 28 00       	cmpb   $0x0,0x28(%rsp)
    d45a:	49 89 dd             	mov    %rbx,%r13
    d45d:	74 18                	je     d477 <monojob_wait+0x170>
    d45f:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
    d464:	48 8d 3d 09 59 01 00 	lea    0x15909(%rip),%rdi        # 22d74 <.LC3>
    d46b:	31 c0                	xor    %eax,%eax
    d46d:	e8 08 9e 00 00       	call   1727a <printf>
    d472:	48 98                	cltq   
    d474:	48 01 c5             	add    %rax,%rbp
    d477:	4c 8b 3c 24          	mov    (%rsp),%r15
    d47b:	e9 e0 fe ff ff       	jmp    d360 <monojob_wait+0x59>
    d480:	44 8b 2d bd c8 01 00 	mov    0x1c8bd(%rip),%r13d        # 29d44 <monojob_rc>
    d487:	48 8d 3d 72 94 01 00 	lea    0x19472(%rip),%rdi        # 26900 <monojob>
    d48e:	44 89 ee             	mov    %r13d,%esi
    d491:	e8 13 fe ff ff       	call   d2a9 <monojob_close>
    d496:	48 89 ef             	mov    %rbp,%rdi
    d499:	e8 1a fe ff ff       	call   d2b8 <monojob_clear>
    d49e:	4d 85 e4             	test   %r12,%r12
    d4a1:	74 2e                	je     d4d1 <monojob_wait+0x1ca>
    d4a3:	45 85 ed             	test   %r13d,%r13d
    d4a6:	74 1b                	je     d4c3 <monojob_wait+0x1bc>
    d4a8:	44 89 ef             	mov    %r13d,%edi
    d4ab:	e8 c8 63 00 00       	call   13878 <strerror>
    d4b0:	48 8d 3d 11 61 01 00 	lea    0x16111(%rip),%rdi        # 235c8 <.LC4>
    d4b7:	48 89 c6             	mov    %rax,%rsi
    d4ba:	31 c0                	xor    %eax,%eax
    d4bc:	e8 b9 9d 00 00       	call   1727a <printf>
    d4c1:	eb 0e                	jmp    d4d1 <monojob_wait+0x1ca>
    d4c3:	48 8d 3d a8 60 01 00 	lea    0x160a8(%rip),%rdi        # 23572 <.LC5>
    d4ca:	31 c0                	xor    %eax,%eax
    d4cc:	e8 a9 9d 00 00       	call   1727a <printf>
    d4d1:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    d4d6:	48 2b 05 73 cb 01 00 	sub    0x1cb73(%rip),%rax        # 2a050 <__stack_chk_guard>
    d4dd:	74 05                	je     d4e4 <monojob_wait+0x1dd>
    d4df:	e8 7c 55 ff ff       	call   2a60 <__stack_chk_fail>
    d4e4:	48 83 c4 58          	add    $0x58,%rsp
    d4e8:	44 89 e8             	mov    %r13d,%eax
    d4eb:	5b                   	pop    %rbx
    d4ec:	5d                   	pop    %rbp
    d4ed:	41 5c                	pop    %r12
    d4ef:	41 5d                	pop    %r13
    d4f1:	41 5e                	pop    %r14
    d4f3:	41 5f                	pop    %r15
    d4f5:	c3                   	ret    

000000000000d4f6 <_wupdcurs>:
    d4f6:	4c 8b 07             	mov    (%rdi),%r8
    d4f9:	8b 57 14             	mov    0x14(%rdi),%edx
    d4fc:	8b 77 18             	mov    0x18(%rdi),%esi
    d4ff:	03 57 0c             	add    0xc(%rdi),%edx
    d502:	03 77 10             	add    0x10(%rdi),%esi
    d505:	49 8b 40 28          	mov    0x28(%r8),%rax
    d509:	4c 89 c7             	mov    %r8,%rdi
    d50c:	ff e0                	jmp    *%rax

000000000000d50e <_wputch>:
    d50e:	f3 0f 1e fa          	endbr64 
    d512:	55                   	push   %rbp
    d513:	89 d5                	mov    %edx,%ebp
    d515:	53                   	push   %rbx
    d516:	48 89 fb             	mov    %rdi,%rbx
    d519:	48 83 ec 18          	sub    $0x18,%rsp
    d51d:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    d521:	e8 d0 ff ff ff       	call   d4f6 <_wupdcurs>
    d526:	48 8b 03             	mov    (%rbx),%rax
    d529:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    d52d:	48 89 c7             	mov    %rax,%rdi
    d530:	ff 50 30             	call   *0x30(%rax)
    d533:	8b 43 14             	mov    0x14(%rbx),%eax
    d536:	8d 50 01             	lea    0x1(%rax),%edx
    d539:	89 53 14             	mov    %edx,0x14(%rbx)
    d53c:	3b 53 1c             	cmp    0x1c(%rbx),%edx
    d53f:	75 24                	jne    d565 <_wputch+0x57>
    d541:	85 ed                	test   %ebp,%ebp
    d543:	75 1d                	jne    d562 <_wputch+0x54>
    d545:	8b 43 18             	mov    0x18(%rbx),%eax
    d548:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%rbx)
    d54f:	ff c0                	inc    %eax
    d551:	89 43 18             	mov    %eax,0x18(%rbx)
    d554:	3b 43 20             	cmp    0x20(%rbx),%eax
    d557:	75 0c                	jne    d565 <_wputch+0x57>
    d559:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
    d560:	eb 03                	jmp    d565 <_wputch+0x57>
    d562:	89 43 14             	mov    %eax,0x14(%rbx)
    d565:	48 83 c4 18          	add    $0x18,%rsp
    d569:	5b                   	pop    %rbx
    d56a:	5d                   	pop    %rbp
    d56b:	c3                   	ret    

000000000000d56c <_wputc>:
    d56c:	f3 0f 1e fa          	endbr64 
    d570:	40 0f b6 f6          	movzbl %sil,%esi
    d574:	0b 77 08             	or     0x8(%rdi),%esi
    d577:	e9 92 ff ff ff       	jmp    d50e <_wputch>

000000000000d57c <_wputstr>:
    d57c:	f3 0f 1e fa          	endbr64 
    d580:	41 55                	push   %r13
    d582:	41 89 d5             	mov    %edx,%r13d
    d585:	41 54                	push   %r12
    d587:	49 89 fc             	mov    %rdi,%r12
    d58a:	55                   	push   %rbp
    d58b:	89 cd                	mov    %ecx,%ebp
    d58d:	53                   	push   %rbx
    d58e:	48 01 f5             	add    %rsi,%rbp
    d591:	48 89 f3             	mov    %rsi,%rbx
    d594:	41 50                	push   %r8
    d596:	0f be 33             	movsbl (%rbx),%esi
    d599:	40 84 f6             	test   %sil,%sil
    d59c:	74 15                	je     d5b3 <_wputstr+0x37>
    d59e:	48 39 eb             	cmp    %rbp,%rbx
    d5a1:	74 10                	je     d5b3 <_wputstr+0x37>
    d5a3:	44 89 ea             	mov    %r13d,%edx
    d5a6:	4c 89 e7             	mov    %r12,%rdi
    d5a9:	48 ff c3             	inc    %rbx
    d5ac:	e8 bb ff ff ff       	call   d56c <_wputc>
    d5b1:	eb e3                	jmp    d596 <_wputstr+0x1a>
    d5b3:	58                   	pop    %rax
    d5b4:	5b                   	pop    %rbx
    d5b5:	5d                   	pop    %rbp
    d5b6:	41 5c                	pop    %r12
    d5b8:	41 5d                	pop    %r13
    d5ba:	c3                   	ret    

000000000000d5bb <wmove>:
    d5bb:	f3 0f 1e fa          	endbr64 
    d5bf:	83 c8 ff             	or     $0xffffffff,%eax
    d5c2:	39 77 20             	cmp    %esi,0x20(%rdi)
    d5c5:	76 15                	jbe    d5dc <wmove+0x21>
    d5c7:	39 57 1c             	cmp    %edx,0x1c(%rdi)
    d5ca:	76 10                	jbe    d5dc <wmove+0x21>
    d5cc:	50                   	push   %rax
    d5cd:	89 57 14             	mov    %edx,0x14(%rdi)
    d5d0:	89 77 18             	mov    %esi,0x18(%rdi)
    d5d3:	e8 1e ff ff ff       	call   d4f6 <_wupdcurs>
    d5d8:	31 c0                	xor    %eax,%eax
    d5da:	5a                   	pop    %rdx
    d5db:	c3                   	ret    
    d5dc:	c3                   	ret    

000000000000d5dd <curs_set>:
    d5dd:	f3 0f 1e fa          	endbr64 
    d5e1:	50                   	push   %rax
    d5e2:	48 8b 05 77 93 01 00 	mov    0x19377(%rip),%rax        # 26960 <_stdscr>
    d5e9:	89 fe                	mov    %edi,%esi
    d5eb:	48 89 c7             	mov    %rax,%rdi
    d5ee:	ff 50 48             	call   *0x48(%rax)
    d5f1:	31 c0                	xor    %eax,%eax
    d5f3:	5a                   	pop    %rdx
    d5f4:	c3                   	ret    

000000000000d5f5 <neighbour_find>:
    d5f5:	41 57                	push   %r15
    d5f7:	41 56                	push   %r14
    d5f9:	4c 8d 35 90 93 01 00 	lea    0x19390(%rip),%r14        # 26990 <neighbours>
    d600:	41 55                	push   %r13
    d602:	49 89 d5             	mov    %rdx,%r13
    d605:	41 54                	push   %r12
    d607:	55                   	push   %rbp
    d608:	48 89 fd             	mov    %rdi,%rbp
    d60b:	53                   	push   %rbx
    d60c:	48 89 f3             	mov    %rsi,%rbx
    d60f:	51                   	push   %rcx
    d610:	48 8b 05 79 93 01 00 	mov    0x19379(%rip),%rax        # 26990 <neighbours>
    d617:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
    d61b:	4d 8d 7c 24 10       	lea    0x10(%r12),%r15
    d620:	4d 39 f7             	cmp    %r14,%r15
    d623:	74 4c                	je     d671 <neighbour_find+0x7c>
    d625:	49 39 6c 24 20       	cmp    %rbp,0x20(%r12)
    d62a:	75 3a                	jne    d666 <neighbour_find+0x71>
    d62c:	49 39 5c 24 28       	cmp    %rbx,0x28(%r12)
    d631:	75 33                	jne    d666 <neighbour_find+0x71>
    d633:	0f b6 53 1a          	movzbl 0x1a(%rbx),%edx
    d637:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    d63c:	4c 89 ee             	mov    %r13,%rsi
    d63f:	e8 ec 62 00 00       	call   13930 <memcmp>
    d644:	85 c0                	test   %eax,%eax
    d646:	75 1e                	jne    d666 <neighbour_find+0x71>
    d648:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
    d64d:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    d652:	4c 89 f6             	mov    %r14,%rsi
    d655:	4c 89 ff             	mov    %r15,%rdi
    d658:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d65c:	48 89 10             	mov    %rdx,(%rax)
    d65f:	e8 2d eb ff ff       	call   c191 <extern_list_add>
    d664:	eb 0e                	jmp    d674 <neighbour_find+0x7f>
    d666:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
    d66b:	49 83 ec 10          	sub    $0x10,%r12
    d66f:	eb aa                	jmp    d61b <neighbour_find+0x26>
    d671:	45 31 e4             	xor    %r12d,%r12d
    d674:	5a                   	pop    %rdx
    d675:	4c 89 e0             	mov    %r12,%rax
    d678:	5b                   	pop    %rbx
    d679:	5d                   	pop    %rbp
    d67a:	41 5c                	pop    %r12
    d67c:	41 5d                	pop    %r13
    d67e:	41 5e                	pop    %r14
    d680:	41 5f                	pop    %r15
    d682:	c3                   	ret    

000000000000d683 <neighbour_free>:
    d683:	f3 0f 1e fa          	endbr64 
    d687:	55                   	push   %rbp
    d688:	48 89 fd             	mov    %rdi,%rbp
    d68b:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    d68f:	e8 86 28 00 00       	call   ff1a <ref_decrement>
    d694:	48 89 ef             	mov    %rbp,%rdi
    d697:	5d                   	pop    %rbp
    d698:	e9 85 f0 ff ff       	jmp    c722 <free>

000000000000d69d <neighbour_create>:
    d69d:	41 55                	push   %r13
    d69f:	49 89 d5             	mov    %rdx,%r13
    d6a2:	41 54                	push   %r12
    d6a4:	55                   	push   %rbp
    d6a5:	48 89 fd             	mov    %rdi,%rbp
    d6a8:	bf d0 00 00 00       	mov    $0xd0,%edi
    d6ad:	53                   	push   %rbx
    d6ae:	48 89 f3             	mov    %rsi,%rbx
    d6b1:	51                   	push   %rcx
    d6b2:	e8 7f f0 ff ff       	call   c736 <zalloc>
    d6b7:	49 89 c4             	mov    %rax,%r12
    d6ba:	48 85 c0             	test   %rax,%rax
    d6bd:	0f 84 87 00 00 00    	je     d74a <neighbour_create+0xad>
    d6c3:	48 8d 05 b9 ff ff ff 	lea    -0x47(%rip),%rax        # d683 <neighbour_free>
    d6ca:	48 89 ef             	mov    %rbp,%rdi
    d6cd:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    d6d2:	e8 37 28 00 00       	call   ff0e <ref_increment>
    d6d7:	0f b6 53 1a          	movzbl 0x1a(%rbx),%edx
    d6db:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    d6e0:	4c 89 ee             	mov    %r13,%rsi
    d6e3:	49 89 6c 24 20       	mov    %rbp,0x20(%r12)
    d6e8:	49 89 5c 24 28       	mov    %rbx,0x28(%r12)
    d6ed:	e8 f7 9c 00 00       	call   173e9 <__memcpy>
    d6f2:	48 8d 05 40 01 00 00 	lea    0x140(%rip),%rax        # d839 <neighbour_expired>
    d6f9:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    d6fe:	4d 89 a4 24 b8 00 00 	mov    %r12,0xb8(%r12)
    d705:	00 
    d706:	49 89 84 24 b0 00 00 	mov    %rax,0xb0(%r12)
    d70d:	00 
    d70e:	48 8d 35 7b 92 01 00 	lea    0x1927b(%rip),%rsi        # 26990 <neighbours>
    d715:	49 8d 84 24 c0 00 00 	lea    0xc0(%r12),%rax
    d71c:	00 
    d71d:	49 c7 84 24 90 00 00 	movq   $0x80,0x90(%r12)
    d724:	00 80 00 00 00 
    d729:	49 c7 84 24 98 00 00 	movq   $0xc00,0x98(%r12)
    d730:	00 00 0c 00 00 
    d735:	49 89 84 24 c0 00 00 	mov    %rax,0xc0(%r12)
    d73c:	00 
    d73d:	49 89 84 24 c8 00 00 	mov    %rax,0xc8(%r12)
    d744:	00 
    d745:	e8 47 ea ff ff       	call   c191 <extern_list_add>
    d74a:	5a                   	pop    %rdx
    d74b:	4c 89 e0             	mov    %r12,%rax
    d74e:	5b                   	pop    %rbx
    d74f:	5d                   	pop    %rbp
    d750:	41 5c                	pop    %r12
    d752:	41 5d                	pop    %r13
    d754:	c3                   	ret    

000000000000d755 <neighbour_discovered>:
    d755:	41 56                	push   %r14
    d757:	41 55                	push   %r13
    d759:	41 54                	push   %r12
    d75b:	55                   	push   %rbp
    d75c:	48 89 fd             	mov    %rdi,%rbp
    d75f:	48 83 c7 40          	add    $0x40,%rdi
    d763:	53                   	push   %rbx
    d764:	4c 8b 67 e0          	mov    -0x20(%rdi),%r12
    d768:	48 89 f3             	mov    %rsi,%rbx
    d76b:	4c 8d b5 c0 00 00 00 	lea    0xc0(%rbp),%r14
    d772:	4c 8b 6f e8          	mov    -0x18(%rdi),%r13
    d776:	49 8b 44 24 50       	mov    0x50(%r12),%rax
    d77b:	0f b6 50 43          	movzbl 0x43(%rax),%edx
    d77f:	e8 65 9c 00 00       	call   173e9 <__memcpy>
    d784:	48 8d 7d 70          	lea    0x70(%rbp),%rdi
    d788:	e8 1f 2c 00 00       	call   103ac <stop_timer>
    d78d:	48 89 ef             	mov    %rbp,%rdi
    d790:	e8 79 27 00 00       	call   ff0e <ref_increment>
    d795:	48 8b bd c0 00 00 00 	mov    0xc0(%rbp),%rdi
    d79c:	4c 39 f7             	cmp    %r14,%rdi
    d79f:	74 28                	je     d7c9 <neighbour_discovered+0x74>
    d7a1:	48 85 ff             	test   %rdi,%rdi
    d7a4:	74 23                	je     d7c9 <neighbour_discovered+0x74>
    d7a6:	48 8b 17             	mov    (%rdi),%rdx
    d7a9:	48 8b 47 08          	mov    0x8(%rdi),%rax
    d7ad:	4d 8d 44 24 60       	lea    0x60(%r12),%r8
    d7b2:	48 89 d9             	mov    %rbx,%rcx
    d7b5:	4c 89 e6             	mov    %r12,%rsi
    d7b8:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d7bc:	48 89 10             	mov    %rdx,(%rax)
    d7bf:	4c 89 ea             	mov    %r13,%rdx
    d7c2:	e8 15 0b 00 00       	call   e2dc <net_tx>
    d7c7:	eb cc                	jmp    d795 <neighbour_discovered+0x40>
    d7c9:	5b                   	pop    %rbx
    d7ca:	48 89 ef             	mov    %rbp,%rdi
    d7cd:	5d                   	pop    %rbp
    d7ce:	41 5c                	pop    %r12
    d7d0:	41 5d                	pop    %r13
    d7d2:	41 5e                	pop    %r14
    d7d4:	e9 41 27 00 00       	jmp    ff1a <ref_decrement>

000000000000d7d9 <neighbour_destroy>:
    d7d9:	41 54                	push   %r12
    d7db:	55                   	push   %rbp
    d7dc:	48 89 fd             	mov    %rdi,%rbp
    d7df:	48 83 c7 70          	add    $0x70,%rdi
    d7e3:	53                   	push   %rbx
    d7e4:	48 8b 57 a0          	mov    -0x60(%rdi),%rdx
    d7e8:	89 f3                	mov    %esi,%ebx
    d7ea:	4c 8d a5 c0 00 00 00 	lea    0xc0(%rbp),%r12
    d7f1:	48 8b 47 a8          	mov    -0x58(%rdi),%rax
    d7f5:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d7f9:	48 89 10             	mov    %rdx,(%rax)
    d7fc:	e8 ab 2b 00 00       	call   103ac <stop_timer>
    d801:	48 8b b5 c0 00 00 00 	mov    0xc0(%rbp),%rsi
    d808:	48 85 f6             	test   %rsi,%rsi
    d80b:	74 20                	je     d82d <neighbour_destroy+0x54>
    d80d:	4c 39 e6             	cmp    %r12,%rsi
    d810:	74 1b                	je     d82d <neighbour_destroy+0x54>
    d812:	48 8b 16             	mov    (%rsi),%rdx
    d815:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d819:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    d81d:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d821:	48 89 10             	mov    %rdx,(%rax)
    d824:	89 da                	mov    %ebx,%edx
    d826:	e8 42 03 00 00       	call   db6d <netdev_tx_err>
    d82b:	eb d4                	jmp    d801 <neighbour_destroy+0x28>
    d82d:	5b                   	pop    %rbx
    d82e:	48 89 ef             	mov    %rbp,%rdi
    d831:	5d                   	pop    %rbp
    d832:	41 5c                	pop    %r12
    d834:	e9 e1 26 00 00       	jmp    ff1a <ref_decrement>

000000000000d839 <neighbour_expired>:
    d839:	f3 0f 1e fa          	endbr64 
    d83d:	41 55                	push   %r13
    d83f:	41 54                	push   %r12
    d841:	55                   	push   %rbp
    d842:	53                   	push   %rbx
    d843:	48 89 fb             	mov    %rdi,%rbx
    d846:	41 52                	push   %r10
    d848:	48 8b 6f b0          	mov    -0x50(%rdi),%rbp
    d84c:	4c 8b 67 b8          	mov    -0x48(%rdi),%r12
    d850:	4c 8b 6f e8          	mov    -0x18(%rdi),%r13
    d854:	85 f6                	test   %esi,%esi
    d856:	74 16                	je     d86e <neighbour_expired+0x35>
    d858:	be 6e 9f c8 b3       	mov    $0xb3c89f6e,%esi
    d85d:	41 59                	pop    %r9
    d85f:	48 8d 7f 90          	lea    -0x70(%rdi),%rdi
    d863:	5b                   	pop    %rbx
    d864:	5d                   	pop    %rbp
    d865:	41 5c                	pop    %r12
    d867:	41 5d                	pop    %r13
    d869:	e9 6b ff ff ff       	jmp    d7d9 <neighbour_destroy>
    d86e:	e8 0b 2b 00 00       	call   1037e <start_timer>
    d873:	49 8b 45 08          	mov    0x8(%r13),%rax
    d877:	48 8d 4b f0          	lea    -0x10(%rbx),%rcx
    d87b:	41 58                	pop    %r8
    d87d:	48 8d 53 c0          	lea    -0x40(%rbx),%rdx
    d881:	4c 89 e6             	mov    %r12,%rsi
    d884:	5b                   	pop    %rbx
    d885:	48 89 ef             	mov    %rbp,%rdi
    d888:	5d                   	pop    %rbp
    d889:	41 5c                	pop    %r12
    d88b:	41 5d                	pop    %r13
    d88d:	ff e0                	jmp    *%rax

000000000000d88f <neighbour_flush>:
    d88f:	f3 0f 1e fa          	endbr64 
    d893:	f6 87 80 00 00 00 01 	testb  $0x1,0x80(%rdi)
    d89a:	75 40                	jne    d8dc <neighbour_flush+0x4d>
    d89c:	55                   	push   %rbp
    d89d:	48 8d 2d ec 90 01 00 	lea    0x190ec(%rip),%rbp        # 26990 <neighbours>
    d8a4:	53                   	push   %rbx
    d8a5:	52                   	push   %rdx
    d8a6:	48 8b 05 e3 90 01 00 	mov    0x190e3(%rip),%rax        # 26990 <neighbours>
    d8ad:	48 8b 18             	mov    (%rax),%rbx
    d8b0:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
    d8b4:	48 83 eb 10          	sub    $0x10,%rbx
    d8b8:	48 8d 47 10          	lea    0x10(%rdi),%rax
    d8bc:	48 39 e8             	cmp    %rbp,%rax
    d8bf:	74 17                	je     d8d8 <neighbour_flush+0x49>
    d8c1:	be 79 9f c8 d3       	mov    $0xd3c89f79,%esi
    d8c6:	e8 0e ff ff ff       	call   d7d9 <neighbour_destroy>
    d8cb:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d8cf:	48 89 df             	mov    %rbx,%rdi
    d8d2:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    d8d6:	eb e0                	jmp    d8b8 <neighbour_flush+0x29>
    d8d8:	58                   	pop    %rax
    d8d9:	5b                   	pop    %rbx
    d8da:	5d                   	pop    %rbp
    d8db:	c3                   	ret    
    d8dc:	c3                   	ret    

000000000000d8dd <neighbour_discard>:
    d8dd:	f3 0f 1e fa          	endbr64 
    d8e1:	48 8d 15 a8 90 01 00 	lea    0x190a8(%rip),%rdx        # 26990 <neighbours>
    d8e8:	48 39 12             	cmp    %rdx,(%rdx)
    d8eb:	74 1d                	je     d90a <neighbour_discard+0x2d>
    d8ed:	50                   	push   %rax
    d8ee:	48 8b 05 a3 90 01 00 	mov    0x190a3(%rip),%rax        # 26998 <neighbours+0x8>
    d8f5:	be 77 9f c8 d5       	mov    $0xd5c89f77,%esi
    d8fa:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
    d8fe:	e8 d6 fe ff ff       	call   d7d9 <neighbour_destroy>
    d903:	b8 01 00 00 00       	mov    $0x1,%eax
    d908:	5a                   	pop    %rdx
    d909:	c3                   	ret    
    d90a:	31 c0                	xor    %eax,%eax
    d90c:	c3                   	ret    

000000000000d90d <neighbour_tx>:
    d90d:	f3 0f 1e fa          	endbr64 
    d911:	41 57                	push   %r15
    d913:	41 56                	push   %r14
    d915:	4d 89 ce             	mov    %r9,%r14
    d918:	41 55                	push   %r13
    d91a:	49 89 fd             	mov    %rdi,%r13
    d91d:	41 54                	push   %r12
    d91f:	49 89 d4             	mov    %rdx,%r12
    d922:	48 89 ca             	mov    %rcx,%rdx
    d925:	55                   	push   %rbp
    d926:	48 89 f5             	mov    %rsi,%rbp
    d929:	4c 89 e6             	mov    %r12,%rsi
    d92c:	53                   	push   %rbx
    d92d:	48 89 ef             	mov    %rbp,%rdi
    d930:	48 83 ec 18          	sub    $0x18,%rsp
    d934:	4c 89 04 24          	mov    %r8,(%rsp)
    d938:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    d93d:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    d942:	e8 ae fc ff ff       	call   d5f5 <neighbour_find>
    d947:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    d94c:	48 85 c0             	test   %rax,%rax
    d94f:	48 89 c3             	mov    %rax,%rbx
    d952:	75 41                	jne    d995 <neighbour_tx+0x88>
    d954:	4c 89 e6             	mov    %r12,%rsi
    d957:	48 89 ef             	mov    %rbp,%rdi
    d95a:	e8 3e fd ff ff       	call   d69d <neighbour_create>
    d95f:	48 89 c3             	mov    %rax,%rbx
    d962:	48 85 c0             	test   %rax,%rax
    d965:	75 07                	jne    d96e <neighbour_tx+0x61>
    d967:	b8 77 9f c8 ce       	mov    $0xcec89f77,%eax
    d96c:	eb 64                	jmp    d9d2 <neighbour_tx+0xc5>
    d96e:	48 8b 0c 24          	mov    (%rsp),%rcx
    d972:	48 8b 40 28          	mov    0x28(%rax),%rax
    d976:	48 8d 7b 60          	lea    0x60(%rbx),%rdi
    d97a:	4c 89 f6             	mov    %r14,%rsi
    d97d:	48 89 4b 58          	mov    %rcx,0x58(%rbx)
    d981:	0f b6 50 1a          	movzbl 0x1a(%rax),%edx
    d985:	e8 5f 9a 00 00       	call   173e9 <__memcpy>
    d98a:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    d98e:	31 f6                	xor    %esi,%esi
    d990:	e8 a9 29 00 00       	call   1033e <start_timer_fixed>
    d995:	83 bb 80 00 00 00 00 	cmpl   $0x0,0x80(%rbx)
    d99c:	75 23                	jne    d9c1 <neighbour_tx+0xb4>
    d99e:	48 83 c4 18          	add    $0x18,%rsp
    d9a2:	48 8d 4b 40          	lea    0x40(%rbx),%rcx
    d9a6:	4d 89 f8             	mov    %r15,%r8
    d9a9:	4c 89 e2             	mov    %r12,%rdx
    d9ac:	5b                   	pop    %rbx
    d9ad:	48 89 ee             	mov    %rbp,%rsi
    d9b0:	4c 89 ef             	mov    %r13,%rdi
    d9b3:	5d                   	pop    %rbp
    d9b4:	41 5c                	pop    %r12
    d9b6:	41 5d                	pop    %r13
    d9b8:	41 5e                	pop    %r14
    d9ba:	41 5f                	pop    %r15
    d9bc:	e9 1b 09 00 00       	jmp    e2dc <net_tx>
    d9c1:	48 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%rsi
    d9c8:	4c 89 ef             	mov    %r13,%rdi
    d9cb:	e8 d7 e7 ff ff       	call   c1a7 <extern_list_add_tail>
    d9d0:	31 c0                	xor    %eax,%eax
    d9d2:	48 83 c4 18          	add    $0x18,%rsp
    d9d6:	5b                   	pop    %rbx
    d9d7:	5d                   	pop    %rbp
    d9d8:	41 5c                	pop    %r12
    d9da:	41 5d                	pop    %r13
    d9dc:	41 5e                	pop    %r14
    d9de:	41 5f                	pop    %r15
    d9e0:	c3                   	ret    

000000000000d9e1 <neighbour_update>:
    d9e1:	f3 0f 1e fa          	endbr64 
    d9e5:	55                   	push   %rbp
    d9e6:	48 89 cd             	mov    %rcx,%rbp
    d9e9:	e8 07 fc ff ff       	call   d5f5 <neighbour_find>
    d9ee:	48 85 c0             	test   %rax,%rax
    d9f1:	75 07                	jne    d9fa <neighbour_update+0x19>
    d9f3:	b8 72 9f c8 d2       	mov    $0xd2c89f72,%eax
    d9f8:	eb 0d                	jmp    da07 <neighbour_update+0x26>
    d9fa:	48 89 c7             	mov    %rax,%rdi
    d9fd:	48 89 ee             	mov    %rbp,%rsi
    da00:	e8 50 fd ff ff       	call   d755 <neighbour_discovered>
    da05:	31 c0                	xor    %eax,%eax
    da07:	5d                   	pop    %rbp
    da08:	c3                   	ret    

000000000000da09 <inline_list_del>:
    da09:	48 8b 17             	mov    (%rdi),%rdx
    da0c:	48 8b 47 08          	mov    0x8(%rdi),%rax
    da10:	48 89 42 08          	mov    %rax,0x8(%rdx)
    da14:	48 89 10             	mov    %rdx,(%rax)
    da17:	c3                   	ret    

000000000000da18 <netdev_notify>:
    da18:	41 54                	push   %r12
    da1a:	4c 8d 25 87 b3 01 00 	lea    0x1b387(%rip),%r12        # 28da8 <ipv4_protocol>
    da21:	55                   	push   %rbp
    da22:	48 89 fd             	mov    %rdi,%rbp
    da25:	53                   	push   %rbx
    da26:	48 8d 1d 3b b3 01 00 	lea    0x1b33b(%rip),%rbx        # 28d68 <efi_snp_driver>
    da2d:	4c 39 e3             	cmp    %r12,%rbx
    da30:	73 14                	jae    da46 <netdev_notify+0x2e>
    da32:	48 8b 43 10          	mov    0x10(%rbx),%rax
    da36:	48 85 c0             	test   %rax,%rax
    da39:	74 05                	je     da40 <netdev_notify+0x28>
    da3b:	48 89 ef             	mov    %rbp,%rdi
    da3e:	ff d0                	call   *%rax
    da40:	48 83 c3 20          	add    $0x20,%rbx
    da44:	eb e7                	jmp    da2d <netdev_notify+0x15>
    da46:	5b                   	pop    %rbx
    da47:	5d                   	pop    %rbp
    da48:	41 5c                	pop    %r12
    da4a:	c3                   	ret    

000000000000da4b <netdev_link_block_expired>:
    da4b:	f3 0f 1e fa          	endbr64 
    da4f:	c3                   	ret    

000000000000da50 <net_discard>:
    da50:	f3 0f 1e fa          	endbr64 
    da54:	48 8b 05 a5 8f 01 00 	mov    0x18fa5(%rip),%rax        # 26a00 <net_devices>
    da5b:	41 54                	push   %r12
    da5d:	45 31 e4             	xor    %r12d,%r12d
    da60:	55                   	push   %rbp
    da61:	48 8d 2d 98 8f 01 00 	lea    0x18f98(%rip),%rbp        # 26a00 <net_devices>
    da68:	53                   	push   %rbx
    da69:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    da6d:	48 8d 43 10          	lea    0x10(%rbx),%rax
    da71:	48 39 e8             	cmp    %rbp,%rax
    da74:	74 2f                	je     daa5 <net_discard+0x55>
    da76:	48 8b bb f8 00 00 00 	mov    0xf8(%rbx),%rdi
    da7d:	48 8d 83 f8 00 00 00 	lea    0xf8(%rbx),%rax
    da84:	48 39 c7             	cmp    %rax,%rdi
    da87:	74 12                	je     da9b <net_discard+0x4b>
    da89:	48 85 ff             	test   %rdi,%rdi
    da8c:	74 0d                	je     da9b <net_discard+0x4b>
    da8e:	e8 76 ff ff ff       	call   da09 <inline_list_del>
    da93:	41 ff c4             	inc    %r12d
    da96:	e8 cb c2 ff ff       	call   9d66 <free_iob>
    da9b:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    da9f:	48 83 eb 10          	sub    $0x10,%rbx
    daa3:	eb c8                	jmp    da6d <net_discard+0x1d>
    daa5:	44 89 e0             	mov    %r12d,%eax
    daa8:	5b                   	pop    %rbx
    daa9:	5d                   	pop    %rbp
    daaa:	41 5c                	pop    %r12
    daac:	c3                   	ret    

000000000000daad <netdev_config_close>:
    daad:	f3 0f 1e fa          	endbr64 
    dab1:	55                   	push   %rbp
    dab2:	89 f5                	mov    %esi,%ebp
    dab4:	53                   	push   %rbx
    dab5:	48 89 fb             	mov    %rdi,%rbx
    dab8:	48 8d 7f 18          	lea    0x18(%rdi),%rdi
    dabc:	50                   	push   %rax
    dabd:	e8 56 be ff ff       	call   9918 <intf_restart>
    dac2:	89 6b 10             	mov    %ebp,0x10(%rbx)
    dac5:	5a                   	pop    %rdx
    dac6:	5b                   	pop    %rbx
    dac7:	5d                   	pop    %rbp
    dac8:	c3                   	ret    

000000000000dac9 <netdev_record_stat.part.0>:
    dac9:	ff 47 04             	incl   0x4(%rdi)
    dacc:	48 8d 57 08          	lea    0x8(%rdi),%rdx
    dad0:	31 c0                	xor    %eax,%eax
    dad2:	48 89 d1             	mov    %rdx,%rcx
    dad5:	44 8b 41 04          	mov    0x4(%rcx),%r8d
    dad9:	39 31                	cmp    %esi,(%rcx)
    dadb:	75 09                	jne    dae6 <netdev_record_stat.part.0+0x1d>
    dadd:	41 ff c0             	inc    %r8d
    dae0:	44 89 44 c7 0c       	mov    %r8d,0xc(%rdi,%rax,8)
    dae5:	c3                   	ret    
    dae6:	44 39 42 04          	cmp    %r8d,0x4(%rdx)
    daea:	76 03                	jbe    daef <netdev_record_stat.part.0+0x26>
    daec:	48 89 ca             	mov    %rcx,%rdx
    daef:	ff c0                	inc    %eax
    daf1:	48 83 c1 08          	add    $0x8,%rcx
    daf5:	83 f8 04             	cmp    $0x4,%eax
    daf8:	75 db                	jne    dad5 <netdev_record_stat.part.0+0xc>
    dafa:	89 32                	mov    %esi,(%rdx)
    dafc:	c7 42 04 01 00 00 00 	movl   $0x1,0x4(%rdx)
    db03:	c3                   	ret    

000000000000db04 <netdev_link_err>:
    db04:	f3 0f 1e fa          	endbr64 
    db08:	55                   	push   %rbp
    db09:	48 89 fd             	mov    %rdi,%rbp
    db0c:	48 8d bf 88 00 00 00 	lea    0x88(%rdi),%rdi
    db13:	53                   	push   %rbx
    db14:	89 f3                	mov    %esi,%ebx
    db16:	50                   	push   %rax
    db17:	e8 90 28 00 00       	call   103ac <stop_timer>
    db1c:	89 9d 84 00 00 00    	mov    %ebx,0x84(%rbp)
    db22:	48 89 ef             	mov    %rbp,%rdi
    db25:	5a                   	pop    %rdx
    db26:	5b                   	pop    %rbx
    db27:	5d                   	pop    %rbp
    db28:	e9 eb fe ff ff       	jmp    da18 <netdev_notify>

000000000000db2d <netdev_link_down>:
    db2d:	f3 0f 1e fa          	endbr64 
    db31:	8b 87 84 00 00 00    	mov    0x84(%rdi),%eax
    db37:	85 c0                	test   %eax,%eax
    db39:	74 07                	je     db42 <netdev_link_down+0x15>
    db3b:	3d 6c 9e f7 e5       	cmp    $0xe5f79e6c,%eax
    db40:	75 0a                	jne    db4c <netdev_link_down+0x1f>
    db42:	be 6d 9e f7 c7       	mov    $0xc7f79e6d,%esi
    db47:	e9 b8 ff ff ff       	jmp    db04 <netdev_link_err>
    db4c:	c3                   	ret    

000000000000db4d <netdev_link_block>:
    db4d:	f3 0f 1e fa          	endbr64 
    db51:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
    db58:	e9 e1 27 00 00       	jmp    1033e <start_timer_fixed>

000000000000db5d <netdev_link_unblock>:
    db5d:	f3 0f 1e fa          	endbr64 
    db61:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
    db68:	e9 3f 28 00 00       	jmp    103ac <stop_timer>

000000000000db6d <netdev_tx_err>:
    db6d:	f3 0f 1e fa          	endbr64 
    db71:	49 89 f1             	mov    %rsi,%r9
    db74:	85 d2                	test   %edx,%edx
    db76:	75 0b                	jne    db83 <netdev_tx_err+0x16>
    db78:	ff 87 18 01 00 00    	incl   0x118(%rdi)
    db7e:	48 89 f7             	mov    %rsi,%rdi
    db81:	eb 13                	jmp    db96 <netdev_tx_err+0x29>
    db83:	50                   	push   %rax
    db84:	89 d6                	mov    %edx,%esi
    db86:	48 81 c7 18 01 00 00 	add    $0x118,%rdi
    db8d:	e8 37 ff ff ff       	call   dac9 <netdev_record_stat.part.0>
    db92:	4c 89 cf             	mov    %r9,%rdi
    db95:	5a                   	pop    %rdx
    db96:	e9 cb c1 ff ff       	jmp    9d66 <free_iob>

000000000000db9b <netdev_tx_complete_err>:
    db9b:	f3 0f 1e fa          	endbr64 
    db9f:	41 54                	push   %r12
    dba1:	55                   	push   %rbp
    dba2:	48 89 fd             	mov    %rdi,%rbp
    dba5:	48 89 f7             	mov    %rsi,%rdi
    dba8:	53                   	push   %rbx
    dba9:	89 d3                	mov    %edx,%ebx
    dbab:	4c 8d a5 f8 00 00 00 	lea    0xf8(%rbp),%r12
    dbb2:	e8 52 fe ff ff       	call   da09 <inline_list_del>
    dbb7:	89 da                	mov    %ebx,%edx
    dbb9:	48 89 ef             	mov    %rbp,%rdi
    dbbc:	e8 ac ff ff ff       	call   db6d <netdev_tx_err>
    dbc1:	48 8b b5 f8 00 00 00 	mov    0xf8(%rbp),%rsi
    dbc8:	48 85 f6             	test   %rsi,%rsi
    dbcb:	74 2c                	je     dbf9 <netdev_tx_complete_err+0x5e>
    dbcd:	4c 39 e6             	cmp    %r12,%rsi
    dbd0:	74 27                	je     dbf9 <netdev_tx_complete_err+0x5e>
    dbd2:	48 89 f7             	mov    %rsi,%rdi
    dbd5:	e8 2f fe ff ff       	call   da09 <inline_list_del>
    dbda:	85 db                	test   %ebx,%ebx
    dbdc:	74 0f                	je     dbed <netdev_tx_complete_err+0x52>
    dbde:	ba 6b 9f f7 f4       	mov    $0xf4f79f6b,%edx
    dbe3:	48 89 ef             	mov    %rbp,%rdi
    dbe6:	e8 82 ff ff ff       	call   db6d <netdev_tx_err>
    dbeb:	eb d4                	jmp    dbc1 <netdev_tx_complete_err+0x26>
    dbed:	5b                   	pop    %rbx
    dbee:	48 89 ef             	mov    %rbp,%rdi
    dbf1:	5d                   	pop    %rbp
    dbf2:	41 5c                	pop    %r12
    dbf4:	e9 05 00 00 00       	jmp    dbfe <netdev_tx>
    dbf9:	5b                   	pop    %rbx
    dbfa:	5d                   	pop    %rbp
    dbfb:	41 5c                	pop    %r12
    dbfd:	c3                   	ret    

000000000000dbfe <netdev_tx>:
    dbfe:	f3 0f 1e fa          	endbr64 
    dc02:	41 55                	push   %r13
    dc04:	49 89 f5             	mov    %rsi,%r13
    dc07:	48 8d b7 e8 00 00 00 	lea    0xe8(%rdi),%rsi
    dc0e:	55                   	push   %rbp
    dc0f:	48 89 fd             	mov    %rdi,%rbp
    dc12:	4c 89 ef             	mov    %r13,%rdi
    dc15:	48 83 ec 18          	sub    $0x18,%rsp
    dc19:	e8 89 e5 ff ff       	call   c1a7 <extern_list_add_tail>
    dc1e:	f6 85 80 00 00 00 01 	testb  $0x1,0x80(%rbp)
    dc25:	75 07                	jne    dc2e <netdev_tx+0x30>
    dc27:	b8 70 9f f7 d7       	mov    $0xd7f79f70,%eax
    dc2c:	eb 11                	jmp    dc3f <netdev_tx+0x41>
    dc2e:	48 8b 45 48          	mov    0x48(%rbp),%rax
    dc32:	4c 89 ee             	mov    %r13,%rsi
    dc35:	48 89 ef             	mov    %rbp,%rdi
    dc38:	ff 50 10             	call   *0x10(%rax)
    dc3b:	85 c0                	test   %eax,%eax
    dc3d:	74 15                	je     dc54 <netdev_tx+0x56>
    dc3f:	89 c2                	mov    %eax,%edx
    dc41:	4c 89 ee             	mov    %r13,%rsi
    dc44:	48 89 ef             	mov    %rbp,%rdi
    dc47:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    dc4b:	e8 4b ff ff ff       	call   db9b <netdev_tx_complete_err>
    dc50:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    dc54:	48 83 c4 18          	add    $0x18,%rsp
    dc58:	5d                   	pop    %rbp
    dc59:	41 5d                	pop    %r13
    dc5b:	c3                   	ret    

000000000000dc5c <netdev_tx_complete_next_err>:
    dc5c:	f3 0f 1e fa          	endbr64 
    dc60:	89 f2                	mov    %esi,%edx
    dc62:	48 8b b7 e8 00 00 00 	mov    0xe8(%rdi),%rsi
    dc69:	48 8d 87 e8 00 00 00 	lea    0xe8(%rdi),%rax
    dc70:	48 39 c6             	cmp    %rax,%rsi
    dc73:	74 0a                	je     dc7f <netdev_tx_complete_next_err+0x23>
    dc75:	48 85 f6             	test   %rsi,%rsi
    dc78:	74 05                	je     dc7f <netdev_tx_complete_next_err+0x23>
    dc7a:	e9 1c ff ff ff       	jmp    db9b <netdev_tx_complete_err>
    dc7f:	c3                   	ret    

000000000000dc80 <netdev_tx_flush>:
    dc80:	55                   	push   %rbp
    dc81:	48 8d af e8 00 00 00 	lea    0xe8(%rdi),%rbp
    dc88:	53                   	push   %rbx
    dc89:	48 89 fb             	mov    %rdi,%rbx
    dc8c:	52                   	push   %rdx
    dc8d:	48 39 ab e8 00 00 00 	cmp    %rbp,0xe8(%rbx)
    dc94:	74 0f                	je     dca5 <netdev_tx_flush+0x25>
    dc96:	be 6b 9f f7 f4       	mov    $0xf4f79f6b,%esi
    dc9b:	48 89 df             	mov    %rbx,%rdi
    dc9e:	e8 b9 ff ff ff       	call   dc5c <netdev_tx_complete_next_err>
    dca3:	eb e8                	jmp    dc8d <netdev_tx_flush+0xd>
    dca5:	58                   	pop    %rax
    dca6:	5b                   	pop    %rbx
    dca7:	5d                   	pop    %rbp
    dca8:	c3                   	ret    

000000000000dca9 <netdev_rx>:
    dca9:	f3 0f 1e fa          	endbr64 
    dcad:	53                   	push   %rbx
    dcae:	48 89 fb             	mov    %rdi,%rbx
    dcb1:	48 89 f7             	mov    %rsi,%rdi
    dcb4:	48 8d b3 08 01 00 00 	lea    0x108(%rbx),%rsi
    dcbb:	e8 e7 e4 ff ff       	call   c1a7 <extern_list_add_tail>
    dcc0:	ff 83 40 01 00 00    	incl   0x140(%rbx)
    dcc6:	5b                   	pop    %rbx
    dcc7:	c3                   	ret    

000000000000dcc8 <netdev_rx_err>:
    dcc8:	f3 0f 1e fa          	endbr64 
    dccc:	55                   	push   %rbp
    dccd:	89 d5                	mov    %edx,%ebp
    dccf:	53                   	push   %rbx
    dcd0:	48 89 fb             	mov    %rdi,%rbx
    dcd3:	48 89 f7             	mov    %rsi,%rdi
    dcd6:	51                   	push   %rcx
    dcd7:	e8 8a c0 ff ff       	call   9d66 <free_iob>
    dcdc:	85 ed                	test   %ebp,%ebp
    dcde:	75 0a                	jne    dcea <netdev_rx_err+0x22>
    dce0:	ff 83 40 01 00 00    	incl   0x140(%rbx)
    dce6:	5a                   	pop    %rdx
    dce7:	5b                   	pop    %rbx
    dce8:	5d                   	pop    %rbp
    dce9:	c3                   	ret    
    dcea:	58                   	pop    %rax
    dceb:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    dcf2:	89 ee                	mov    %ebp,%esi
    dcf4:	5b                   	pop    %rbx
    dcf5:	5d                   	pop    %rbp
    dcf6:	e9 ce fd ff ff       	jmp    dac9 <netdev_record_stat.part.0>

000000000000dcfb <netdev_poll>:
    dcfb:	f3 0f 1e fa          	endbr64 
    dcff:	f6 87 80 00 00 00 01 	testb  $0x1,0x80(%rdi)
    dd06:	74 07                	je     dd0f <netdev_poll+0x14>
    dd08:	48 8b 47 48          	mov    0x48(%rdi),%rax
    dd0c:	ff 60 18             	jmp    *0x18(%rax)
    dd0f:	c3                   	ret    

000000000000dd10 <netdev_rx_dequeue>:
    dd10:	f3 0f 1e fa          	endbr64 
    dd14:	4c 8b 87 08 01 00 00 	mov    0x108(%rdi),%r8
    dd1b:	4d 85 c0             	test   %r8,%r8
    dd1e:	74 16                	je     dd36 <netdev_rx_dequeue+0x26>
    dd20:	48 81 c7 08 01 00 00 	add    $0x108,%rdi
    dd27:	49 39 f8             	cmp    %rdi,%r8
    dd2a:	74 0a                	je     dd36 <netdev_rx_dequeue+0x26>
    dd2c:	4c 89 c7             	mov    %r8,%rdi
    dd2f:	e8 d5 fc ff ff       	call   da09 <inline_list_del>
    dd34:	eb 03                	jmp    dd39 <netdev_rx_dequeue+0x29>
    dd36:	45 31 c0             	xor    %r8d,%r8d
    dd39:	4c 89 c0             	mov    %r8,%rax
    dd3c:	c3                   	ret    

000000000000dd3d <netdev_rx_flush>:
    dd3d:	53                   	push   %rbx
    dd3e:	48 89 fb             	mov    %rdi,%rbx
    dd41:	48 89 df             	mov    %rbx,%rdi
    dd44:	e8 c7 ff ff ff       	call   dd10 <netdev_rx_dequeue>
    dd49:	48 89 c6             	mov    %rax,%rsi
    dd4c:	48 85 c0             	test   %rax,%rax
    dd4f:	74 0f                	je     dd60 <netdev_rx_flush+0x23>
    dd51:	ba 6b 9f f7 f4       	mov    $0xf4f79f6b,%edx
    dd56:	48 89 df             	mov    %rbx,%rdi
    dd59:	e8 6a ff ff ff       	call   dcc8 <netdev_rx_err>
    dd5e:	eb e1                	jmp    dd41 <netdev_rx_flush+0x4>
    dd60:	5b                   	pop    %rbx
    dd61:	c3                   	ret    

000000000000dd62 <free_netdev>:
    dd62:	f3 0f 1e fa          	endbr64 
    dd66:	55                   	push   %rbp
    dd67:	48 89 fd             	mov    %rdi,%rbp
    dd6a:	48 8d bf 88 00 00 00 	lea    0x88(%rdi),%rdi
    dd71:	e8 36 26 00 00       	call   103ac <stop_timer>
    dd76:	48 89 ef             	mov    %rbp,%rdi
    dd79:	e8 02 ff ff ff       	call   dc80 <netdev_tx_flush>
    dd7e:	48 89 ef             	mov    %rbp,%rdi
    dd81:	e8 b7 ff ff ff       	call   dd3d <netdev_rx_flush>
    dd86:	48 8d bd 68 01 00 00 	lea    0x168(%rbp),%rdi
    dd8d:	e8 45 3d 00 00       	call   11ad7 <clear_settings>
    dd92:	48 89 ef             	mov    %rbp,%rdi
    dd95:	5d                   	pop    %rbp
    dd96:	e9 87 e9 ff ff       	jmp    c722 <free>

000000000000dd9b <alloc_netdev>:
    dd9b:	f3 0f 1e fa          	endbr64 
    dd9f:	53                   	push   %rbx
    dda0:	48 8d 05 a9 af 01 00 	lea    0x1afa9(%rip),%rax        # 28d50 <dhcp_configurator>
    dda7:	48 8d 1d ba af 01 00 	lea    0x1afba(%rip),%rbx        # 28d68 <efi_snp_driver>
    ddae:	48 29 c3             	sub    %rax,%rbx
    ddb1:	48 c1 fb 03          	sar    $0x3,%rbx
    ddb5:	69 db ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%ebx
    ddbb:	48 6b db 38          	imul   $0x38,%rbx,%rbx
    ddbf:	48 8d bc 3b d0 01 00 	lea    0x1d0(%rbx,%rdi,1),%rdi
    ddc6:	00 
    ddc7:	e8 6a e9 ff ff       	call   c736 <zalloc>
    ddcc:	48 85 c0             	test   %rax,%rax
    ddcf:	0f 84 27 01 00 00    	je     defc <alloc_netdev+0x161>
    ddd5:	48 8d 35 86 ff ff ff 	lea    -0x7a(%rip),%rsi        # dd62 <free_netdev>
    dddc:	48 89 70 08          	mov    %rsi,0x8(%rax)
    dde0:	48 8d 90 e8 00 00 00 	lea    0xe8(%rax),%rdx
    dde7:	48 89 80 d0 00 00 00 	mov    %rax,0xd0(%rax)
    ddee:	48 8d 0d 56 fc ff ff 	lea    -0x3aa(%rip),%rcx        # da4b <netdev_link_block_expired>
    ddf5:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
    ddfc:	48 8d 35 bd a1 01 00 	lea    0x1a1bd(%rip),%rsi        # 27fc0 <netdev_settings_operations>
    de03:	48 8d 3d 5e af 01 00 	lea    0x1af5e(%rip),%rdi        # 28d68 <efi_snp_driver>
    de0a:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)
    de11:	48 8d 90 f8 00 00 00 	lea    0xf8(%rax),%rdx
    de18:	4c 8d 05 a1 86 01 00 	lea    0x186a1(%rip),%r8        # 264c0 <null_intf>
    de1f:	48 89 90 f8 00 00 00 	mov    %rdx,0xf8(%rax)
    de26:	48 89 90 00 01 00 00 	mov    %rdx,0x100(%rax)
    de2d:	48 8d 90 08 01 00 00 	lea    0x108(%rax),%rdx
    de34:	48 89 90 08 01 00 00 	mov    %rdx,0x108(%rax)
    de3b:	48 89 90 10 01 00 00 	mov    %rdx,0x110(%rax)
    de42:	48 8d 90 80 01 00 00 	lea    0x180(%rax),%rdx
    de49:	48 89 90 80 01 00 00 	mov    %rdx,0x180(%rax)
    de50:	48 89 90 88 01 00 00 	mov    %rdx,0x188(%rax)
    de57:	48 8d 90 90 01 00 00 	lea    0x190(%rax),%rdx
    de5e:	c7 80 84 00 00 00 6c 	movl   $0xe5f79e6c,0x84(%rax)
    de65:	9e f7 e5 
    de68:	48 89 80 68 01 00 00 	mov    %rax,0x168(%rax)
    de6f:	48 c7 80 a8 01 00 00 	movq   $0x0,0x1a8(%rax)
    de76:	00 00 00 00 
    de7a:	48 89 90 90 01 00 00 	mov    %rdx,0x190(%rax)
    de81:	48 89 90 98 01 00 00 	mov    %rdx,0x198(%rax)
    de88:	48 8d 90 b8 01 00 00 	lea    0x1b8(%rax),%rdx
    de8f:	48 89 88 c8 00 00 00 	mov    %rcx,0xc8(%rax)
    de96:	48 8d 0d b3 ae 01 00 	lea    0x1aeb3(%rip),%rcx        # 28d50 <dhcp_configurator>
    de9d:	48 89 90 b8 01 00 00 	mov    %rdx,0x1b8(%rax)
    dea4:	48 89 90 c0 01 00 00 	mov    %rdx,0x1c0(%rax)
    deab:	48 8d 90 d0 01 00 00 	lea    0x1d0(%rax),%rdx
    deb2:	48 89 b0 a0 01 00 00 	mov    %rsi,0x1a0(%rax)
    deb9:	48 8d 35 00 8b 01 00 	lea    0x18b00(%rip),%rsi        # 269c0 <netdev_config_desc>
    dec0:	48 39 f9             	cmp    %rdi,%rcx
    dec3:	73 28                	jae    deed <alloc_netdev+0x152>
    dec5:	48 89 02             	mov    %rax,(%rdx)
    dec8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    decc:	c7 42 10 6c 9d f7 e5 	movl   $0xe5f79d6c,0x10(%rdx)
    ded3:	48 83 c1 18          	add    $0x18,%rcx
    ded7:	48 83 c2 38          	add    $0x38,%rdx
    dedb:	4c 89 42 e0          	mov    %r8,-0x20(%rdx)
    dedf:	48 89 42 e8          	mov    %rax,-0x18(%rdx)
    dee3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    dee7:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    deeb:	eb d3                	jmp    dec0 <alloc_netdev+0x125>
    deed:	48 8d 94 18 d0 01 00 	lea    0x1d0(%rax,%rbx,1),%rdx
    def4:	00 
    def5:	48 89 90 c8 01 00 00 	mov    %rdx,0x1c8(%rax)
    defc:	5b                   	pop    %rbx
    defd:	c3                   	ret    

000000000000defe <netdev_open>:
    defe:	f3 0f 1e fa          	endbr64 
    df02:	41 54                	push   %r12
    df04:	45 31 e4             	xor    %r12d,%r12d
    df07:	55                   	push   %rbp
    df08:	51                   	push   %rcx
    df09:	8b 87 80 00 00 00    	mov    0x80(%rdi),%eax
    df0f:	a8 01                	test   $0x1,%al
    df11:	75 3a                	jne    df4d <netdev_open+0x4f>
    df13:	83 c8 01             	or     $0x1,%eax
    df16:	48 89 fd             	mov    %rdi,%rbp
    df19:	89 87 80 00 00 00    	mov    %eax,0x80(%rdi)
    df1f:	48 8b 47 48          	mov    0x48(%rdi),%rax
    df23:	ff 10                	call   *(%rax)
    df25:	41 89 c4             	mov    %eax,%r12d
    df28:	85 c0                	test   %eax,%eax
    df2a:	74 09                	je     df35 <netdev_open+0x37>
    df2c:	83 a5 80 00 00 00 fe 	andl   $0xfffffffe,0x80(%rbp)
    df33:	eb 18                	jmp    df4d <netdev_open+0x4f>
    df35:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    df39:	48 8d 35 b0 8a 01 00 	lea    0x18ab0(%rip),%rsi        # 269f0 <open_net_devices>
    df40:	e8 4c e2 ff ff       	call   c191 <extern_list_add>
    df45:	48 89 ef             	mov    %rbp,%rdi
    df48:	e8 cb fa ff ff       	call   da18 <netdev_notify>
    df4d:	44 89 e0             	mov    %r12d,%eax
    df50:	5a                   	pop    %rdx
    df51:	5d                   	pop    %rbp
    df52:	41 5c                	pop    %r12
    df54:	c3                   	ret    

000000000000df55 <netdev_close>:
    df55:	f3 0f 1e fa          	endbr64 
    df59:	f6 87 80 00 00 00 01 	testb  $0x1,0x80(%rdi)
    df60:	0f 84 83 00 00 00    	je     dfe9 <netdev_close+0x94>
    df66:	48 8d 05 fb ad 01 00 	lea    0x1adfb(%rip),%rax        # 28d68 <efi_snp_driver>
    df6d:	48 8d 15 dc ad 01 00 	lea    0x1addc(%rip),%rdx        # 28d50 <dhcp_configurator>
    df74:	41 54                	push   %r12
    df76:	48 29 d0             	sub    %rdx,%rax
    df79:	55                   	push   %rbp
    df7a:	48 89 fd             	mov    %rdi,%rbp
    df7d:	48 c1 f8 03          	sar    $0x3,%rax
    df81:	53                   	push   %rbx
    df82:	48 8d 9f e8 01 00 00 	lea    0x1e8(%rdi),%rbx
    df89:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax
    df8f:	48 6b c0 38          	imul   $0x38,%rax,%rax
    df93:	4c 8d a4 07 e8 01 00 	lea    0x1e8(%rdi,%rax,1),%r12
    df9a:	00 
    df9b:	4c 39 e3             	cmp    %r12,%rbx
    df9e:	74 13                	je     dfb3 <netdev_close+0x5e>
    dfa0:	be 6b 9f f7 f4       	mov    $0xf4f79f6b,%esi
    dfa5:	48 89 df             	mov    %rbx,%rdi
    dfa8:	48 83 c3 38          	add    $0x38,%rbx
    dfac:	e8 7e b9 ff ff       	call   992f <intf_close>
    dfb1:	eb e8                	jmp    df9b <netdev_close+0x46>
    dfb3:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    dfb7:	e8 4d fa ff ff       	call   da09 <inline_list_del>
    dfbc:	83 a5 80 00 00 00 fe 	andl   $0xfffffffe,0x80(%rbp)
    dfc3:	48 89 ef             	mov    %rbp,%rdi
    dfc6:	e8 4d fa ff ff       	call   da18 <netdev_notify>
    dfcb:	48 8b 45 48          	mov    0x48(%rbp),%rax
    dfcf:	48 89 ef             	mov    %rbp,%rdi
    dfd2:	ff 50 08             	call   *0x8(%rax)
    dfd5:	48 89 ef             	mov    %rbp,%rdi
    dfd8:	e8 a3 fc ff ff       	call   dc80 <netdev_tx_flush>
    dfdd:	5b                   	pop    %rbx
    dfde:	48 89 ef             	mov    %rbp,%rdi
    dfe1:	5d                   	pop    %rbp
    dfe2:	41 5c                	pop    %r12
    dfe4:	e9 54 fd ff ff       	jmp    dd3d <netdev_rx_flush>
    dfe9:	c3                   	ret    

000000000000dfea <unregister_netdev>:
    dfea:	f3 0f 1e fa          	endbr64 
    dfee:	41 54                	push   %r12
    dff0:	4c 8d 25 71 ad 01 00 	lea    0x1ad71(%rip),%r12        # 28d68 <efi_snp_driver>
    dff7:	55                   	push   %rbp
    dff8:	48 89 fd             	mov    %rdi,%rbp
    dffb:	53                   	push   %rbx
    dffc:	48 8d 1d 85 ad 01 00 	lea    0x1ad85(%rip),%rbx        # 28d88 <neighbour_net_driver>
    e003:	e8 4d ff ff ff       	call   df55 <netdev_close>
    e008:	4c 39 e3             	cmp    %r12,%rbx
    e00b:	72 14                	jb     e021 <unregister_netdev+0x37>
    e00d:	48 8b 43 18          	mov    0x18(%rbx),%rax
    e011:	48 85 c0             	test   %rax,%rax
    e014:	74 05                	je     e01b <unregister_netdev+0x31>
    e016:	48 89 ef             	mov    %rbp,%rdi
    e019:	ff d0                	call   *%rax
    e01b:	48 83 eb 20          	sub    $0x20,%rbx
    e01f:	eb e7                	jmp    e008 <unregister_netdev+0x1e>
    e021:	4c 8d a5 68 01 00 00 	lea    0x168(%rbp),%r12
    e028:	4c 89 e7             	mov    %r12,%rdi
    e02b:	e8 a7 3a 00 00       	call   11ad7 <clear_settings>
    e030:	4c 89 e7             	mov    %r12,%rdi
    e033:	e8 06 39 00 00       	call   1193e <unregister_settings>
    e038:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    e03c:	e8 c8 f9 ff ff       	call   da09 <inline_list_del>
    e041:	48 89 ef             	mov    %rbp,%rdi
    e044:	e8 d1 1e 00 00       	call   ff1a <ref_decrement>
    e049:	48 8d 05 b0 89 01 00 	lea    0x189b0(%rip),%rax        # 26a00 <net_devices>
    e050:	48 39 00             	cmp    %rax,(%rax)
    e053:	75 0a                	jne    e05f <unregister_netdev+0x75>
    e055:	c7 05 ed bc 01 00 00 	movl   $0x0,0x1bced(%rip)        # 29d4c <netdev_index>
    e05c:	00 00 00 
    e05f:	5b                   	pop    %rbx
    e060:	5d                   	pop    %rbp
    e061:	41 5c                	pop    %r12
    e063:	c3                   	ret    

000000000000e064 <find_netdev_by_ll_addr>:
    e064:	f3 0f 1e fa          	endbr64 
    e068:	41 55                	push   %r13
    e06a:	4c 8d 2d 8f 89 01 00 	lea    0x1898f(%rip),%r13        # 26a00 <net_devices>
    e071:	41 54                	push   %r12
    e073:	55                   	push   %rbp
    e074:	48 89 f5             	mov    %rsi,%rbp
    e077:	53                   	push   %rbx
    e078:	48 89 fb             	mov    %rdi,%rbx
    e07b:	51                   	push   %rcx
    e07c:	48 8b 05 7d 89 01 00 	mov    0x1897d(%rip),%rax        # 26a00 <net_devices>
    e083:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
    e087:	49 8d 44 24 10       	lea    0x10(%r12),%rax
    e08c:	4c 39 e8             	cmp    %r13,%rax
    e08f:	74 27                	je     e0b8 <find_netdev_by_ll_addr+0x54>
    e091:	49 39 5c 24 50       	cmp    %rbx,0x50(%r12)
    e096:	75 15                	jne    e0ad <find_netdev_by_ll_addr+0x49>
    e098:	0f b6 53 43          	movzbl 0x43(%rbx),%edx
    e09c:	49 8d 7c 24 60       	lea    0x60(%r12),%rdi
    e0a1:	48 89 ee             	mov    %rbp,%rsi
    e0a4:	e8 87 58 00 00       	call   13930 <memcmp>
    e0a9:	85 c0                	test   %eax,%eax
    e0ab:	74 0e                	je     e0bb <find_netdev_by_ll_addr+0x57>
    e0ad:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
    e0b2:	49 83 ec 10          	sub    $0x10,%r12
    e0b6:	eb cf                	jmp    e087 <find_netdev_by_ll_addr+0x23>
    e0b8:	45 31 e4             	xor    %r12d,%r12d
    e0bb:	5a                   	pop    %rdx
    e0bc:	4c 89 e0             	mov    %r12,%rax
    e0bf:	5b                   	pop    %rbx
    e0c0:	5d                   	pop    %rbp
    e0c1:	41 5c                	pop    %r12
    e0c3:	41 5d                	pop    %r13
    e0c5:	c3                   	ret    

000000000000e0c6 <last_opened_netdev>:
    e0c6:	f3 0f 1e fa          	endbr64 
    e0ca:	48 8b 15 1f 89 01 00 	mov    0x1891f(%rip),%rdx        # 269f0 <open_net_devices>
    e0d1:	48 8d 0d 18 89 01 00 	lea    0x18918(%rip),%rcx        # 269f0 <open_net_devices>
    e0d8:	31 c0                	xor    %eax,%eax
    e0da:	48 39 ca             	cmp    %rcx,%rdx
    e0dd:	74 04                	je     e0e3 <last_opened_netdev+0x1d>
    e0df:	48 8d 42 e0          	lea    -0x20(%rdx),%rax
    e0e3:	c3                   	ret    

000000000000e0e4 <find_netdev>:
    e0e4:	f3 0f 1e fa          	endbr64 
    e0e8:	41 54                	push   %r12
    e0ea:	48 8d 35 90 54 01 00 	lea    0x15490(%rip),%rsi        # 23581 <.LC0>
    e0f1:	55                   	push   %rbp
    e0f2:	53                   	push   %rbx
    e0f3:	48 89 fb             	mov    %rdi,%rbx
    e0f6:	e8 c1 58 00 00       	call   139bc <strcmp>
    e0fb:	85 c0                	test   %eax,%eax
    e0fd:	75 09                	jne    e108 <find_netdev+0x24>
    e0ff:	5b                   	pop    %rbx
    e100:	5d                   	pop    %rbp
    e101:	41 5c                	pop    %r12
    e103:	e9 be ff ff ff       	jmp    e0c6 <last_opened_netdev>
    e108:	48 8b 05 f1 88 01 00 	mov    0x188f1(%rip),%rax        # 26a00 <net_devices>
    e10f:	48 8d 2d ea 88 01 00 	lea    0x188ea(%rip),%rbp        # 26a00 <net_devices>
    e116:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
    e11a:	49 8d 44 24 10       	lea    0x10(%r12),%rax
    e11f:	48 39 e8             	cmp    %rbp,%rax
    e122:	74 1c                	je     e140 <find_netdev+0x5c>
    e124:	49 8d 7c 24 34       	lea    0x34(%r12),%rdi
    e129:	48 89 de             	mov    %rbx,%rsi
    e12c:	e8 8b 58 00 00       	call   139bc <strcmp>
    e131:	85 c0                	test   %eax,%eax
    e133:	74 0e                	je     e143 <find_netdev+0x5f>
    e135:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
    e13a:	49 83 ec 10          	sub    $0x10,%r12
    e13e:	eb da                	jmp    e11a <find_netdev+0x36>
    e140:	45 31 e4             	xor    %r12d,%r12d
    e143:	4c 89 e0             	mov    %r12,%rax
    e146:	5b                   	pop    %rbx
    e147:	5d                   	pop    %rbp
    e148:	41 5c                	pop    %r12
    e14a:	c3                   	ret    

000000000000e14b <register_netdev>:
    e14b:	f3 0f 1e fa          	endbr64 
    e14f:	41 57                	push   %r15
    e151:	31 c0                	xor    %eax,%eax
    e153:	41 56                	push   %r14
    e155:	41 55                	push   %r13
    e157:	4c 8d 6f 60          	lea    0x60(%rdi),%r13
    e15b:	41 54                	push   %r12
    e15d:	55                   	push   %rbp
    e15e:	48 89 fd             	mov    %rdi,%rbp
    e161:	53                   	push   %rbx
    e162:	51                   	push   %rcx
    e163:	48 8b 5f 50          	mov    0x50(%rdi),%rbx
    e167:	48 ff c0             	inc    %rax
    e16a:	80 7c 05 5f 00       	cmpb   $0x0,0x5f(%rbp,%rax,1)
    e16f:	75 10                	jne    e181 <register_netdev+0x36>
    e171:	48 83 f8 14          	cmp    $0x14,%rax
    e175:	75 f0                	jne    e167 <register_netdev+0x1c>
    e177:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
    e17b:	4c 89 ee             	mov    %r13,%rsi
    e17e:	ff 53 18             	call   *0x18(%rbx)
    e181:	48 83 bd e0 00 00 00 	cmpq   $0x0,0xe0(%rbp)
    e188:	00 
    e189:	75 15                	jne    e1a0 <register_netdev+0x55>
    e18b:	0f b6 53 44          	movzbl 0x44(%rbx),%edx
    e18f:	48 8b 85 d8 00 00 00 	mov    0xd8(%rbp),%rax
    e196:	48 29 d0             	sub    %rdx,%rax
    e199:	48 89 85 e0 00 00 00 	mov    %rax,0xe0(%rbp)
    e1a0:	4c 89 ee             	mov    %r13,%rsi
    e1a3:	48 89 df             	mov    %rbx,%rdi
    e1a6:	e8 b9 fe ff ff       	call   e064 <find_netdev_by_ll_addr>
    e1ab:	48 85 c0             	test   %rax,%rax
    e1ae:	74 0c                	je     e1bc <register_netdev+0x71>
    e1b0:	48 8b 4d 40          	mov    0x40(%rbp),%rcx
    e1b4:	48 39 48 40          	cmp    %rcx,0x40(%rax)
    e1b8:	74 02                	je     e1bc <register_netdev+0x71>
    e1ba:	eb 17                	jmp    e1d3 <register_netdev+0x88>
    e1bc:	80 7d 34 00          	cmpb   $0x0,0x34(%rbp)
    e1c0:	4c 8d 65 34          	lea    0x34(%rbp),%r12
    e1c4:	74 18                	je     e1de <register_netdev+0x93>
    e1c6:	4c 89 e7             	mov    %r12,%rdi
    e1c9:	e8 16 ff ff ff       	call   e0e4 <find_netdev>
    e1ce:	48 85 c0             	test   %rax,%rax
    e1d1:	74 27                	je     e1fa <register_netdev+0xaf>
    e1d3:	41 bf 78 9f f7 eb    	mov    $0xebf79f78,%r15d
    e1d9:	e9 ef 00 00 00       	jmp    e2cd <register_netdev+0x182>
    e1de:	8b 0d 68 bb 01 00    	mov    0x1bb68(%rip),%ecx        # 29d4c <netdev_index>
    e1e4:	be 0c 00 00 00       	mov    $0xc,%esi
    e1e9:	4c 89 e7             	mov    %r12,%rdi
    e1ec:	31 c0                	xor    %eax,%eax
    e1ee:	48 8d 15 91 53 01 00 	lea    0x15391(%rip),%rdx        # 23586 <.LC1>
    e1f5:	e8 63 8f 00 00       	call   1715d <snprintf>
    e1fa:	8b 05 4c bb 01 00    	mov    0x1bb4c(%rip),%eax        # 29d4c <netdev_index>
    e200:	4c 8d 75 10          	lea    0x10(%rbp),%r14
    e204:	ff c0                	inc    %eax
    e206:	89 45 30             	mov    %eax,0x30(%rbp)
    e209:	89 05 3d bb 01 00    	mov    %eax,0x1bb3d(%rip)        # 29d4c <netdev_index>
    e20f:	0f b6 43 43          	movzbl 0x43(%rbx),%eax
    e213:	41 8b 5c 05 fc       	mov    -0x4(%r13,%rax,1),%ebx
    e218:	4c 8d ad 68 01 00 00 	lea    0x168(%rbp),%r13
    e21f:	e8 f9 18 00 00       	call   fb1d <random>
    e224:	31 c3                	xor    %eax,%ebx
    e226:	89 df                	mov    %ebx,%edi
    e228:	48 8d 1d 39 ab 01 00 	lea    0x1ab39(%rip),%rbx        # 28d68 <efi_snp_driver>
    e22f:	e8 d4 18 00 00       	call   fb08 <srandom>
    e234:	48 89 ef             	mov    %rbp,%rdi
    e237:	e8 d2 1c 00 00       	call   ff0e <ref_increment>
    e23c:	48 8d 35 bd 87 01 00 	lea    0x187bd(%rip),%rsi        # 26a00 <net_devices>
    e243:	4c 89 f7             	mov    %r14,%rdi
    e246:	e8 5c df ff ff       	call   c1a7 <extern_list_add_tail>
    e24b:	4c 89 e2             	mov    %r12,%rdx
    e24e:	31 f6                	xor    %esi,%esi
    e250:	4c 89 ef             	mov    %r13,%rdi
    e253:	e8 42 3e 00 00       	call   1209a <register_settings>
    e258:	41 89 c7             	mov    %eax,%r15d
    e25b:	85 c0                	test   %eax,%eax
    e25d:	75 5e                	jne    e2bd <register_netdev+0x172>
    e25f:	48 8d 05 42 ab 01 00 	lea    0x1ab42(%rip),%rax        # 28da8 <ipv4_protocol>
    e266:	48 39 c3             	cmp    %rax,%rbx
    e269:	73 62                	jae    e2cd <register_netdev+0x182>
    e26b:	48 8b 43 08          	mov    0x8(%rbx),%rax
    e26f:	48 85 c0             	test   %rax,%rax
    e272:	74 19                	je     e28d <register_netdev+0x142>
    e274:	48 89 ef             	mov    %rbp,%rdi
    e277:	ff d0                	call   *%rax
    e279:	41 89 c4             	mov    %eax,%r12d
    e27c:	85 c0                	test   %eax,%eax
    e27e:	74 0d                	je     e28d <register_netdev+0x142>
    e280:	48 83 eb 20          	sub    $0x20,%rbx
    e284:	4c 8d 3d dd aa 01 00 	lea    0x1aadd(%rip),%r15        # 28d68 <efi_snp_driver>
    e28b:	eb 18                	jmp    e2a5 <register_netdev+0x15a>
    e28d:	48 83 c3 20          	add    $0x20,%rbx
    e291:	eb cc                	jmp    e25f <register_netdev+0x114>
    e293:	48 8b 43 18          	mov    0x18(%rbx),%rax
    e297:	48 85 c0             	test   %rax,%rax
    e29a:	74 05                	je     e2a1 <register_netdev+0x156>
    e29c:	48 89 ef             	mov    %rbp,%rdi
    e29f:	ff d0                	call   *%rax
    e2a1:	48 83 eb 20          	sub    $0x20,%rbx
    e2a5:	4c 39 fb             	cmp    %r15,%rbx
    e2a8:	73 e9                	jae    e293 <register_netdev+0x148>
    e2aa:	4c 89 ef             	mov    %r13,%rdi
    e2ad:	45 89 e7             	mov    %r12d,%r15d
    e2b0:	e8 22 38 00 00       	call   11ad7 <clear_settings>
    e2b5:	4c 89 ef             	mov    %r13,%rdi
    e2b8:	e8 81 36 00 00       	call   1193e <unregister_settings>
    e2bd:	4c 89 f7             	mov    %r14,%rdi
    e2c0:	e8 44 f7 ff ff       	call   da09 <inline_list_del>
    e2c5:	48 89 ef             	mov    %rbp,%rdi
    e2c8:	e8 4d 1c 00 00       	call   ff1a <ref_decrement>
    e2cd:	5a                   	pop    %rdx
    e2ce:	44 89 f8             	mov    %r15d,%eax
    e2d1:	5b                   	pop    %rbx
    e2d2:	5d                   	pop    %rbp
    e2d3:	41 5c                	pop    %r12
    e2d5:	41 5d                	pop    %r13
    e2d7:	41 5e                	pop    %r14
    e2d9:	41 5f                	pop    %r15
    e2db:	c3                   	ret    

000000000000e2dc <net_tx>:
    e2dc:	f3 0f 1e fa          	endbr64 
    e2e0:	55                   	push   %rbp
    e2e1:	49 89 d1             	mov    %rdx,%r9
    e2e4:	48 89 fd             	mov    %rdi,%rbp
    e2e7:	48 89 f7             	mov    %rsi,%rdi
    e2ea:	48 89 ca             	mov    %rcx,%rdx
    e2ed:	4c 89 c1             	mov    %r8,%rcx
    e2f0:	48 83 ec 10          	sub    $0x10,%rsp
    e2f4:	48 8b 46 50          	mov    0x50(%rsi),%rax
    e2f8:	45 0f b7 41 18       	movzwl 0x18(%r9),%r8d
    e2fd:	48 89 ee             	mov    %rbp,%rsi
    e300:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    e305:	ff 50 08             	call   *0x8(%rax)
    e308:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    e30d:	85 c0                	test   %eax,%eax
    e30f:	75 0d                	jne    e31e <net_tx+0x42>
    e311:	48 83 c4 10          	add    $0x10,%rsp
    e315:	48 89 ee             	mov    %rbp,%rsi
    e318:	5d                   	pop    %rbp
    e319:	e9 e0 f8 ff ff       	jmp    dbfe <netdev_tx>
    e31e:	89 c2                	mov    %eax,%edx
    e320:	48 89 ee             	mov    %rbp,%rsi
    e323:	89 44 24 08          	mov    %eax,0x8(%rsp)
    e327:	e8 41 f8 ff ff       	call   db6d <netdev_tx_err>
    e32c:	8b 44 24 08          	mov    0x8(%rsp),%eax
    e330:	48 83 c4 10          	add    $0x10,%rsp
    e334:	5d                   	pop    %rbp
    e335:	c3                   	ret    

000000000000e336 <net_rx>:
    e336:	f3 0f 1e fa          	endbr64 
    e33a:	49 89 ca             	mov    %rcx,%r10
    e33d:	48 8d 05 64 aa 01 00 	lea    0x1aa64(%rip),%rax        # 28da8 <ipv4_protocol>
    e344:	4c 89 c1             	mov    %r8,%rcx
    e347:	45 89 c8             	mov    %r9d,%r8d
    e34a:	4c 8d 0d f7 aa 01 00 	lea    0x1aaf7(%rip),%r9        # 28e48 <intel_driver>
    e351:	4c 39 c8             	cmp    %r9,%rax
    e354:	73 15                	jae    e36b <net_rx+0x35>
    e356:	66 39 50 18          	cmp    %dx,0x18(%rax)
    e35a:	75 09                	jne    e365 <net_rx+0x2f>
    e35c:	48 8b 40 08          	mov    0x8(%rax),%rax
    e360:	4c 89 d2             	mov    %r10,%rdx
    e363:	ff e0                	jmp    *%rax
    e365:	48 83 c0 20          	add    $0x20,%rax
    e369:	eb e6                	jmp    e351 <net_rx+0x1b>
    e36b:	50                   	push   %rax
    e36c:	e8 f5 b9 ff ff       	call   9d66 <free_iob>
    e371:	b8 7d 9f f7 c3       	mov    $0xc3f79f7d,%eax
    e376:	5a                   	pop    %rdx
    e377:	c3                   	ret    

000000000000e378 <net_poll>:
    e378:	f3 0f 1e fa          	endbr64 
    e37c:	41 55                	push   %r13
    e37e:	41 54                	push   %r12
    e380:	4c 8d 25 79 86 01 00 	lea    0x18679(%rip),%r12        # 26a00 <net_devices>
    e387:	55                   	push   %rbp
    e388:	53                   	push   %rbx
    e389:	48 83 ec 28          	sub    $0x28,%rsp
    e38d:	48 8b 05 bc bc 01 00 	mov    0x1bcbc(%rip),%rax        # 2a050 <__stack_chk_guard>
    e394:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    e399:	48 8b 05 60 86 01 00 	mov    0x18660(%rip),%rax        # 26a00 <net_devices>
    e3a0:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    e3a4:	48 8d 43 10          	lea    0x10(%rbx),%rax
    e3a8:	4c 39 e0             	cmp    %r12,%rax
    e3ab:	0f 84 8e 00 00 00    	je     e43f <net_poll+0xc7>
    e3b1:	48 89 df             	mov    %rbx,%rdi
    e3b4:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    e3b9:	e8 3d f9 ff ff       	call   dcfb <netdev_poll>
    e3be:	f6 83 80 00 00 00 04 	testb  $0x4,0x80(%rbx)
    e3c5:	74 35                	je     e3fc <net_poll+0x84>
    e3c7:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    e3cb:	48 83 eb 10          	sub    $0x10,%rbx
    e3cf:	eb d3                	jmp    e3a4 <net_poll+0x2c>
    e3d1:	48 8b 43 50          	mov    0x50(%rbx),%rax
    e3d5:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    e3da:	4d 89 e9             	mov    %r13,%r9
    e3dd:	48 89 ee             	mov    %rbp,%rsi
    e3e0:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    e3e5:	4c 8d 44 24 02       	lea    0x2(%rsp),%r8
    e3ea:	48 89 df             	mov    %rbx,%rdi
    e3ed:	ff 50 10             	call   *0x10(%rax)
    e3f0:	85 c0                	test   %eax,%eax
    e3f2:	74 1a                	je     e40e <net_poll+0x96>
    e3f4:	48 89 ef             	mov    %rbp,%rdi
    e3f7:	e8 6a b9 ff ff       	call   9d66 <free_iob>
    e3fc:	48 89 df             	mov    %rbx,%rdi
    e3ff:	e8 0c f9 ff ff       	call   dd10 <netdev_rx_dequeue>
    e404:	48 89 c5             	mov    %rax,%rbp
    e407:	48 85 c0             	test   %rax,%rax
    e40a:	75 c5                	jne    e3d1 <net_poll+0x59>
    e40c:	eb b9                	jmp    e3c7 <net_poll+0x4f>
    e40e:	0f b7 54 24 02       	movzwl 0x2(%rsp),%edx
    e413:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
    e418:	48 89 de             	mov    %rbx,%rsi
    e41b:	48 89 ef             	mov    %rbp,%rdi
    e41e:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    e423:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e428:	e8 09 ff ff ff       	call   e336 <net_rx>
    e42d:	89 c2                	mov    %eax,%edx
    e42f:	85 c0                	test   %eax,%eax
    e431:	74 c9                	je     e3fc <net_poll+0x84>
    e433:	31 f6                	xor    %esi,%esi
    e435:	48 89 df             	mov    %rbx,%rdi
    e438:	e8 8b f8 ff ff       	call   dcc8 <netdev_rx_err>
    e43d:	eb bd                	jmp    e3fc <net_poll+0x84>
    e43f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    e444:	48 2b 05 05 bc 01 00 	sub    0x1bc05(%rip),%rax        # 2a050 <__stack_chk_guard>
    e44b:	74 05                	je     e452 <net_poll+0xda>
    e44d:	e8 0e 46 ff ff       	call   2a60 <__stack_chk_fail>
    e452:	48 83 c4 28          	add    $0x28,%rsp
    e456:	5b                   	pop    %rbx
    e457:	5d                   	pop    %rbp
    e458:	41 5c                	pop    %r12
    e45a:	41 5d                	pop    %r13
    e45c:	c3                   	ret    

000000000000e45d <net_step>:
    e45d:	f3 0f 1e fa          	endbr64 
    e461:	e9 12 ff ff ff       	jmp    e378 <net_poll>

000000000000e466 <vlan_tag>:
    e466:	f3 0f 1e fa          	endbr64 
    e46a:	31 c0                	xor    %eax,%eax
    e46c:	c3                   	ret    

000000000000e46d <find_netdev_configurator>:
    e46d:	f3 0f 1e fa          	endbr64 
    e471:	41 54                	push   %r12
    e473:	4c 8d 25 d6 a8 01 00 	lea    0x1a8d6(%rip),%r12        # 28d50 <dhcp_configurator>
    e47a:	55                   	push   %rbp
    e47b:	48 8d 2d e6 a8 01 00 	lea    0x1a8e6(%rip),%rbp        # 28d68 <efi_snp_driver>
    e482:	53                   	push   %rbx
    e483:	48 89 fb             	mov    %rdi,%rbx
    e486:	49 39 ec             	cmp    %rbp,%r12
    e489:	73 16                	jae    e4a1 <find_netdev_configurator+0x34>
    e48b:	49 8b 3c 24          	mov    (%r12),%rdi
    e48f:	48 89 de             	mov    %rbx,%rsi
    e492:	e8 25 55 00 00       	call   139bc <strcmp>
    e497:	85 c0                	test   %eax,%eax
    e499:	74 09                	je     e4a4 <find_netdev_configurator+0x37>
    e49b:	49 83 c4 18          	add    $0x18,%r12
    e49f:	eb e5                	jmp    e486 <find_netdev_configurator+0x19>
    e4a1:	45 31 e4             	xor    %r12d,%r12d
    e4a4:	4c 89 e0             	mov    %r12,%rax
    e4a7:	5b                   	pop    %rbx
    e4a8:	5d                   	pop    %rbp
    e4a9:	41 5c                	pop    %r12
    e4ab:	c3                   	ret    

000000000000e4ac <netdev_configure>:
    e4ac:	f3 0f 1e fa          	endbr64 
    e4b0:	41 55                	push   %r13
    e4b2:	48 8d 05 97 a8 01 00 	lea    0x1a897(%rip),%rax        # 28d50 <dhcp_configurator>
    e4b9:	41 54                	push   %r12
    e4bb:	49 89 fc             	mov    %rdi,%r12
    e4be:	55                   	push   %rbp
    e4bf:	48 89 f5             	mov    %rsi,%rbp
    e4c2:	53                   	push   %rbx
    e4c3:	48 89 f3             	mov    %rsi,%rbx
    e4c6:	48 29 c3             	sub    %rax,%rbx
    e4c9:	51                   	push   %rcx
    e4ca:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    e4d1:	aa aa aa 
    e4d4:	48 c1 fb 03          	sar    $0x3,%rbx
    e4d8:	48 0f af d8          	imul   %rax,%rbx
    e4dc:	48 8b 46 08          	mov    0x8(%rsi),%rax
    e4e0:	48 85 c0             	test   %rax,%rax
    e4e3:	74 0d                	je     e4f2 <netdev_configure+0x46>
    e4e5:	ff d0                	call   *%rax
    e4e7:	85 c0                	test   %eax,%eax
    e4e9:	75 07                	jne    e4f2 <netdev_configure+0x46>
    e4eb:	b8 7d 9f f7 c3       	mov    $0xc3f79f7d,%eax
    e4f0:	eb 3b                	jmp    e52d <netdev_configure+0x81>
    e4f2:	89 db                	mov    %ebx,%ebx
    e4f4:	be 6b 9f f7 f4       	mov    $0xf4f79f6b,%esi
    e4f9:	48 6b db 38          	imul   $0x38,%rbx,%rbx
    e4fd:	4d 8d ac 1c e8 01 00 	lea    0x1e8(%r12,%rbx,1),%r13
    e504:	00 
    e505:	4c 89 ef             	mov    %r13,%rdi
    e508:	e8 0b b4 ff ff       	call   9918 <intf_restart>
    e50d:	4c 01 e3             	add    %r12,%rbx
    e510:	4c 89 e6             	mov    %r12,%rsi
    e513:	4c 89 ef             	mov    %r13,%rdi
    e516:	c7 83 e0 01 00 00 6c 	movl   $0xe5f79c6c,0x1e0(%rbx)
    e51d:	9c f7 e5 
    e520:	ff 55 10             	call   *0x10(%rbp)
    e523:	85 c0                	test   %eax,%eax
    e525:	74 06                	je     e52d <netdev_configure+0x81>
    e527:	89 83 e0 01 00 00    	mov    %eax,0x1e0(%rbx)
    e52d:	5a                   	pop    %rdx
    e52e:	5b                   	pop    %rbx
    e52f:	5d                   	pop    %rbp
    e530:	41 5c                	pop    %r12
    e532:	41 5d                	pop    %r13
    e534:	c3                   	ret    

000000000000e535 <netdev_configure_all>:
    e535:	f3 0f 1e fa          	endbr64 
    e539:	41 54                	push   %r12
    e53b:	4c 8d 25 26 a8 01 00 	lea    0x1a826(%rip),%r12        # 28d68 <efi_snp_driver>
    e542:	55                   	push   %rbp
    e543:	48 89 fd             	mov    %rdi,%rbp
    e546:	53                   	push   %rbx
    e547:	48 8d 1d 02 a8 01 00 	lea    0x1a802(%rip),%rbx        # 28d50 <dhcp_configurator>
    e54e:	4c 39 e3             	cmp    %r12,%rbx
    e551:	73 29                	jae    e57c <netdev_configure_all+0x47>
    e553:	48 8b 43 08          	mov    0x8(%rbx),%rax
    e557:	48 85 c0             	test   %rax,%rax
    e55a:	75 11                	jne    e56d <netdev_configure_all+0x38>
    e55c:	48 89 de             	mov    %rbx,%rsi
    e55f:	48 89 ef             	mov    %rbp,%rdi
    e562:	e8 45 ff ff ff       	call   e4ac <netdev_configure>
    e567:	85 c0                	test   %eax,%eax
    e569:	74 0b                	je     e576 <netdev_configure_all+0x41>
    e56b:	eb 11                	jmp    e57e <netdev_configure_all+0x49>
    e56d:	48 89 ef             	mov    %rbp,%rdi
    e570:	ff d0                	call   *%rax
    e572:	85 c0                	test   %eax,%eax
    e574:	75 e6                	jne    e55c <netdev_configure_all+0x27>
    e576:	48 83 c3 18          	add    $0x18,%rbx
    e57a:	eb d2                	jmp    e54e <netdev_configure_all+0x19>
    e57c:	31 c0                	xor    %eax,%eax
    e57e:	5b                   	pop    %rbx
    e57f:	5d                   	pop    %rbp
    e580:	41 5c                	pop    %r12
    e582:	c3                   	ret    

000000000000e583 <netdev_configuration_in_progress>:
    e583:	f3 0f 1e fa          	endbr64 
    e587:	48 8d 15 c2 a7 01 00 	lea    0x1a7c2(%rip),%rdx        # 28d50 <dhcp_configurator>
    e58e:	48 8d 05 d3 a7 01 00 	lea    0x1a7d3(%rip),%rax        # 28d68 <efi_snp_driver>
    e595:	48 29 d0             	sub    %rdx,%rax
    e598:	31 d2                	xor    %edx,%edx
    e59a:	48 c1 f8 03          	sar    $0x3,%rax
    e59e:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax
    e5a4:	39 d0                	cmp    %edx,%eax
    e5a6:	76 1a                	jbe    e5c2 <netdev_configuration_in_progress+0x3f>
    e5a8:	48 ff c2             	inc    %rdx
    e5ab:	48 6b ca 38          	imul   $0x38,%rdx,%rcx
    e5af:	81 bc 0f a8 01 00 00 	cmpl   $0xe5f79c6c,0x1a8(%rdi,%rcx,1)
    e5b6:	6c 9c f7 e5 
    e5ba:	75 e8                	jne    e5a4 <netdev_configuration_in_progress+0x21>
    e5bc:	b8 01 00 00 00       	mov    $0x1,%eax
    e5c1:	c3                   	ret    
    e5c2:	31 c0                	xor    %eax,%eax
    e5c4:	c3                   	ret    

000000000000e5c5 <netdev_configuration_ok>:
    e5c5:	f3 0f 1e fa          	endbr64 
    e5c9:	48 8d 15 80 a7 01 00 	lea    0x1a780(%rip),%rdx        # 28d50 <dhcp_configurator>
    e5d0:	48 8d 05 91 a7 01 00 	lea    0x1a791(%rip),%rax        # 28d68 <efi_snp_driver>
    e5d7:	48 29 d0             	sub    %rdx,%rax
    e5da:	31 d2                	xor    %edx,%edx
    e5dc:	48 c1 f8 03          	sar    $0x3,%rax
    e5e0:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax
    e5e6:	39 d0                	cmp    %edx,%eax
    e5e8:	76 17                	jbe    e601 <netdev_configuration_ok+0x3c>
    e5ea:	48 ff c2             	inc    %rdx
    e5ed:	48 6b ca 38          	imul   $0x38,%rdx,%rcx
    e5f1:	83 bc 0f a8 01 00 00 	cmpl   $0x0,0x1a8(%rdi,%rcx,1)
    e5f8:	00 
    e5f9:	75 eb                	jne    e5e6 <netdev_configuration_ok+0x21>
    e5fb:	b8 01 00 00 00       	mov    $0x1,%eax
    e600:	c3                   	ret    
    e601:	31 c0                	xor    %eax,%eax
    e603:	c3                   	ret    

000000000000e604 <null_open>:
    e604:	f3 0f 1e fa          	endbr64 
    e608:	b8 79 9f f6 d3       	mov    $0xd3f69f79,%eax
    e60d:	c3                   	ret    

000000000000e60e <null_close>:
    e60e:	f3 0f 1e fa          	endbr64 
    e612:	c3                   	ret    

000000000000e613 <null_transmit>:
    e613:	f3 0f 1e fa          	endbr64 
    e617:	b8 79 9f f6 d3       	mov    $0xd3f69f79,%eax
    e61c:	c3                   	ret    

000000000000e61d <null_irq>:
    e61d:	f3 0f 1e fa          	endbr64 
    e621:	c3                   	ret    

000000000000e622 <null_poll>:
    e622:	f3 0f 1e fa          	endbr64 
    e626:	c3                   	ret    

000000000000e627 <nvo_applies>:
    e627:	f3 0f 1e fa          	endbr64 
    e62b:	48 83 7e 20 00       	cmpq   $0x0,0x20(%rsi)
    e630:	75 13                	jne    e645 <nvo_applies+0x1e>
    e632:	50                   	push   %rax
    e633:	8b 7e 18             	mov    0x18(%rsi),%edi
    e636:	e8 b7 c2 00 00       	call   1a8f2 <dhcpopt_applies>
    e63b:	5a                   	pop    %rdx
    e63c:	85 c0                	test   %eax,%eax
    e63e:	0f 95 c0             	setne  %al
    e641:	0f b6 c0             	movzbl %al,%eax
    e644:	c3                   	ret    
    e645:	31 c0                	xor    %eax,%eax
    e647:	c3                   	ret    

000000000000e648 <clear_value>:
    e648:	f3 0f 1e fa          	endbr64 
    e64c:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    e653:	31 c0                	xor    %eax,%eax
    e655:	c3                   	ret    

000000000000e656 <inc_exec>:
    e656:	f3 0f 1e fa          	endbr64 
    e65a:	41 54                	push   %r12
    e65c:	48 8d 15 ed 83 01 00 	lea    0x183ed(%rip),%rdx        # 26a50 <inc_cmd>
    e663:	55                   	push   %rbp
    e664:	89 fd                	mov    %edi,%ebp
    e666:	53                   	push   %rbx
    e667:	48 89 f3             	mov    %rsi,%rbx
    e66a:	48 83 ec 50          	sub    $0x50,%rsp
    e66e:	48 8d 4c 24 0b       	lea    0xb(%rsp),%rcx
    e673:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
    e67a:	00 
    e67b:	48 8b 05 ce b9 01 00 	mov    0x1b9ce(%rip),%rax        # 2a050 <__stack_chk_guard>
    e682:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    e687:	31 c0                	xor    %eax,%eax
    e689:	e8 fd 0b 00 00       	call   f28b <parse_options>
    e68e:	41 89 c4             	mov    %eax,%r12d
    e691:	85 c0                	test   %eax,%eax
    e693:	0f 85 c4 00 00 00    	jne    e75d <inc_exec+0x107>
    e699:	48 63 05 e8 b9 01 00 	movslq 0x1b9e8(%rip),%rax        # 2a088 <optind>
    e6a0:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    e6a5:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    e6a9:	e8 b1 08 00 00       	call   ef5f <parse_existing_setting>
    e6ae:	41 89 c4             	mov    %eax,%r12d
    e6b1:	85 c0                	test   %eax,%eax
    e6b3:	0f 85 a4 00 00 00    	jne    e75d <inc_exec+0x107>
    e6b9:	48 63 05 c8 b9 01 00 	movslq 0x1b9c8(%rip),%rax        # 2a088 <optind>
    e6c0:	8d 50 01             	lea    0x1(%rax),%edx
    e6c3:	39 ea                	cmp    %ebp,%edx
    e6c5:	7c 22                	jl     e6e9 <inc_exec+0x93>
    e6c7:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
    e6cc:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e6d1:	31 d2                	xor    %edx,%edx
    e6d3:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    e6d8:	48 89 e9             	mov    %rbp,%rcx
    e6db:	48 89 ee             	mov    %rbp,%rsi
    e6de:	e8 47 3f 00 00       	call   1262a <fetchn_setting>
    e6e3:	85 c0                	test   %eax,%eax
    e6e5:	75 1a                	jne    e701 <inc_exec+0xab>
    e6e7:	eb 35                	jmp    e71e <inc_exec+0xc8>
    e6e9:	48 8b 7c c3 08       	mov    0x8(%rbx,%rax,8),%rdi
    e6ee:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    e6f3:	e8 56 06 00 00       	call   ed4e <parse_integer>
    e6f8:	41 89 c4             	mov    %eax,%r12d
    e6fb:	85 c0                	test   %eax,%eax
    e6fd:	74 c8                	je     e6c7 <inc_exec+0x71>
    e6ff:	eb 5c                	jmp    e75d <inc_exec+0x107>
    e701:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    e708:	00 00 
    e70a:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
    e710:	75 0c                	jne    e71e <inc_exec+0xc8>
    e712:	48 8d 05 77 aa 01 00 	lea    0x1aa77(%rip),%rax        # 29190 <setting_type_int32>
    e719:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    e71e:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e723:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    e727:	48 89 ee             	mov    %rbp,%rsi
    e72a:	48 03 54 24 10       	add    0x10(%rsp),%rdx
    e72f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    e734:	e8 6c 3f 00 00       	call   126a5 <storen_setting>
    e739:	41 89 c4             	mov    %eax,%r12d
    e73c:	85 c0                	test   %eax,%eax
    e73e:	74 1d                	je     e75d <inc_exec+0x107>
    e740:	89 c7                	mov    %eax,%edi
    e742:	e8 31 51 00 00       	call   13878 <strerror>
    e747:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    e74c:	48 8d 3d 9a 4d 01 00 	lea    0x14d9a(%rip),%rdi        # 234ed <.LC0>
    e753:	48 89 c2             	mov    %rax,%rdx
    e756:	31 c0                	xor    %eax,%eax
    e758:	e8 1d 8b 00 00       	call   1727a <printf>
    e75d:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    e762:	48 2b 05 e7 b8 01 00 	sub    0x1b8e7(%rip),%rax        # 2a050 <__stack_chk_guard>
    e769:	74 05                	je     e770 <inc_exec+0x11a>
    e76b:	e8 f0 42 ff ff       	call   2a60 <__stack_chk_fail>
    e770:	48 83 c4 50          	add    $0x50,%rsp
    e774:	44 89 e0             	mov    %r12d,%eax
    e777:	5b                   	pop    %rbx
    e778:	5d                   	pop    %rbp
    e779:	41 5c                	pop    %r12
    e77b:	c3                   	ret    

000000000000e77c <read_value>:
    e77c:	f3 0f 1e fa          	endbr64 
    e780:	41 54                	push   %r12
    e782:	48 8d 77 08          	lea    0x8(%rdi),%rsi
    e786:	49 89 d4             	mov    %rdx,%r12
    e789:	31 d2                	xor    %edx,%edx
    e78b:	48 89 f1             	mov    %rsi,%rcx
    e78e:	48 83 ec 10          	sub    $0x10,%rsp
    e792:	48 8b 3f             	mov    (%rdi),%rdi
    e795:	48 8b 05 b4 b8 01 00 	mov    0x1b8b4(%rip),%rax        # 2a050 <__stack_chk_guard>
    e79c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    e7a1:	31 c0                	xor    %eax,%eax
    e7a3:	49 89 e0             	mov    %rsp,%r8
    e7a6:	e8 1a 3d 00 00       	call   124c5 <fetchf_setting_copy>
    e7ab:	48 8b 34 24          	mov    (%rsp),%rsi
    e7af:	31 ff                	xor    %edi,%edi
    e7b1:	4c 89 e1             	mov    %r12,%rcx
    e7b4:	31 d2                	xor    %edx,%edx
    e7b6:	e8 8d 14 00 00       	call   fc48 <readline_history>
    e7bb:	48 8b 3c 24          	mov    (%rsp),%rdi
    e7bf:	41 89 c4             	mov    %eax,%r12d
    e7c2:	e8 5b df ff ff       	call   c722 <free>
    e7c7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    e7cc:	48 2b 05 7d b8 01 00 	sub    0x1b87d(%rip),%rax        # 2a050 <__stack_chk_guard>
    e7d3:	74 05                	je     e7da <read_value+0x5e>
    e7d5:	e8 86 42 ff ff       	call   2a60 <__stack_chk_fail>
    e7da:	48 83 c4 10          	add    $0x10,%rsp
    e7de:	44 89 e0             	mov    %r12d,%eax
    e7e1:	41 5c                	pop    %r12
    e7e3:	c3                   	ret    

000000000000e7e4 <set_core_exec>:
    e7e4:	41 55                	push   %r13
    e7e6:	41 54                	push   %r12
    e7e8:	55                   	push   %rbp
    e7e9:	48 89 cd             	mov    %rcx,%rbp
    e7ec:	53                   	push   %rbx
    e7ed:	48 89 f3             	mov    %rsi,%rbx
    e7f0:	48 83 ec 58          	sub    $0x58,%rsp
    e7f4:	48 8b 05 55 b8 01 00 	mov    0x1b855(%rip),%rax        # 2a050 <__stack_chk_guard>
    e7fb:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    e800:	31 c0                	xor    %eax,%eax
    e802:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
    e807:	e8 7f 0a 00 00       	call   f28b <parse_options>
    e80c:	41 89 c4             	mov    %eax,%r12d
    e80f:	85 c0                	test   %eax,%eax
    e811:	0f 85 92 00 00 00    	jne    e8a9 <set_core_exec+0xc5>
    e817:	48 63 05 6a b8 01 00 	movslq 0x1b86a(%rip),%rax        # 2a088 <optind>
    e81e:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    e823:	4c 89 ee             	mov    %r13,%rsi
    e826:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    e82a:	e8 40 07 00 00       	call   ef6f <parse_autovivified_setting>
    e82f:	41 89 c4             	mov    %eax,%r12d
    e832:	85 c0                	test   %eax,%eax
    e834:	75 73                	jne    e8a9 <set_core_exec+0xc5>
    e836:	48 63 05 4b b8 01 00 	movslq 0x1b84b(%rip),%rax        # 2a088 <optind>
    e83d:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    e842:	4c 89 ef             	mov    %r13,%rdi
    e845:	48 8d 74 c3 08       	lea    0x8(%rbx,%rax,8),%rsi
    e84a:	ff d5                	call   *%rbp
    e84c:	41 89 c4             	mov    %eax,%r12d
    e84f:	85 c0                	test   %eax,%eax
    e851:	75 56                	jne    e8a9 <set_core_exec+0xc5>
    e853:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
    e859:	75 0c                	jne    e867 <set_core_exec+0x83>
    e85b:	48 8d 05 1e aa 01 00 	lea    0x1aa1e(%rip),%rax        # 29280 <setting_type_string>
    e862:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    e867:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    e86c:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e871:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    e876:	e8 00 3d 00 00       	call   1257b <storef_setting>
    e87b:	41 89 c4             	mov    %eax,%r12d
    e87e:	85 c0                	test   %eax,%eax
    e880:	74 1d                	je     e89f <set_core_exec+0xbb>
    e882:	89 c7                	mov    %eax,%edi
    e884:	e8 ef 4f 00 00       	call   13878 <strerror>
    e889:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    e88e:	48 8d 3d 58 4c 01 00 	lea    0x14c58(%rip),%rdi        # 234ed <.LC0>
    e895:	48 89 c2             	mov    %rax,%rdx
    e898:	31 c0                	xor    %eax,%eax
    e89a:	e8 db 89 00 00       	call   1727a <printf>
    e89f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    e8a4:	e8 79 de ff ff       	call   c722 <free>
    e8a9:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    e8ae:	48 2b 05 9b b7 01 00 	sub    0x1b79b(%rip),%rax        # 2a050 <__stack_chk_guard>
    e8b5:	74 05                	je     e8bc <set_core_exec+0xd8>
    e8b7:	e8 a4 41 ff ff       	call   2a60 <__stack_chk_fail>
    e8bc:	48 83 c4 58          	add    $0x58,%rsp
    e8c0:	44 89 e0             	mov    %r12d,%eax
    e8c3:	5b                   	pop    %rbx
    e8c4:	5d                   	pop    %rbp
    e8c5:	41 5c                	pop    %r12
    e8c7:	41 5d                	pop    %r13
    e8c9:	c3                   	ret    

000000000000e8ca <read_exec>:
    e8ca:	f3 0f 1e fa          	endbr64 
    e8ce:	48 8d 0d a7 fe ff ff 	lea    -0x159(%rip),%rcx        # e77c <read_value>
    e8d5:	48 8d 15 94 81 01 00 	lea    0x18194(%rip),%rdx        # 26a70 <clear_read_cmd>
    e8dc:	e9 03 ff ff ff       	jmp    e7e4 <set_core_exec>

000000000000e8e1 <clear_exec>:
    e8e1:	f3 0f 1e fa          	endbr64 
    e8e5:	48 8d 0d 5c fd ff ff 	lea    -0x2a4(%rip),%rcx        # e648 <clear_value>
    e8ec:	48 8d 15 7d 81 01 00 	lea    0x1817d(%rip),%rdx        # 26a70 <clear_read_cmd>
    e8f3:	e9 ec fe ff ff       	jmp    e7e4 <set_core_exec>

000000000000e8f8 <set_exec>:
    e8f8:	f3 0f 1e fa          	endbr64 
    e8fc:	48 8d 0d 0c 00 00 00 	lea    0xc(%rip),%rcx        # e90f <set_value>
    e903:	48 8d 15 86 81 01 00 	lea    0x18186(%rip),%rdx        # 26a90 <set_cmd>
    e90a:	e9 d5 fe ff ff       	jmp    e7e4 <set_core_exec>

000000000000e90f <set_value>:
    e90f:	f3 0f 1e fa          	endbr64 
    e913:	53                   	push   %rbx
    e914:	48 89 f7             	mov    %rsi,%rdi
    e917:	48 89 d3             	mov    %rdx,%rbx
    e91a:	e8 ad f7 00 00       	call   1e0cc <concat_args>
    e91f:	45 31 c0             	xor    %r8d,%r8d
    e922:	48 89 03             	mov    %rax,(%rbx)
    e925:	48 85 c0             	test   %rax,%rax
    e928:	75 06                	jne    e930 <set_value+0x21>
    e92a:	41 b8 77 1f dc ce    	mov    $0xcedc1f77,%r8d
    e930:	44 89 c0             	mov    %r8d,%eax
    e933:	5b                   	pop    %rbx
    e934:	c3                   	ret    

000000000000e935 <show_exec>:
    e935:	f3 0f 1e fa          	endbr64 
    e939:	41 55                	push   %r13
    e93b:	48 8d 15 6e 81 01 00 	lea    0x1816e(%rip),%rdx        # 26ab0 <show_cmd>
    e942:	41 54                	push   %r12
    e944:	55                   	push   %rbp
    e945:	53                   	push   %rbx
    e946:	48 89 f3             	mov    %rsi,%rbx
    e949:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    e950:	48 8b 05 f9 b6 01 00 	mov    0x1b6f9(%rip),%rax        # 2a050 <__stack_chk_guard>
    e957:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    e95e:	00 
    e95f:	31 c0                	xor    %eax,%eax
    e961:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
    e966:	e8 20 09 00 00       	call   f28b <parse_options>
    e96b:	41 89 c4             	mov    %eax,%r12d
    e96e:	85 c0                	test   %eax,%eax
    e970:	0f 85 a3 00 00 00    	jne    ea19 <show_exec+0xe4>
    e976:	48 63 05 0b b7 01 00 	movslq 0x1b70b(%rip),%rax        # 2a088 <optind>
    e97d:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
    e982:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    e986:	e8 d4 05 00 00       	call   ef5f <parse_existing_setting>
    e98b:	41 89 c4             	mov    %eax,%r12d
    e98e:	85 c0                	test   %eax,%eax
    e990:	0f 85 83 00 00 00    	jne    ea19 <show_exec+0xe4>
    e996:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    e99b:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    e9a0:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    e9a5:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
    e9aa:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
    e9af:	4c 89 e9             	mov    %r13,%rcx
    e9b2:	e8 0e 3b 00 00       	call   124c5 <fetchf_setting_copy>
    e9b7:	89 c3                	mov    %eax,%ebx
    e9b9:	85 c0                	test   %eax,%eax
    e9bb:	79 22                	jns    e9df <show_exec+0xaa>
    e9bd:	89 c7                	mov    %eax,%edi
    e9bf:	41 89 dc             	mov    %ebx,%r12d
    e9c2:	e8 b1 4e 00 00       	call   13878 <strerror>
    e9c7:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    e9cc:	48 8d 3d e1 4b 01 00 	lea    0x14be1(%rip),%rdi        # 235b4 <.LC1>
    e9d3:	48 89 c2             	mov    %rax,%rdx
    e9d6:	31 c0                	xor    %eax,%eax
    e9d8:	e8 9d 88 00 00       	call   1727a <printf>
    e9dd:	eb 3a                	jmp    ea19 <show_exec+0xe4>
    e9df:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    e9e4:	48 8d 6c 24 78       	lea    0x78(%rsp),%rbp
    e9e9:	b9 20 00 00 00       	mov    $0x20,%ecx
    e9ee:	4c 89 ee             	mov    %r13,%rsi
    e9f1:	48 89 ea             	mov    %rbp,%rdx
    e9f4:	e8 21 3f 00 00       	call   1291a <setting_name>
    e9f9:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    e9fe:	48 89 ee             	mov    %rbp,%rsi
    ea01:	31 c0                	xor    %eax,%eax
    ea03:	48 8d 3d c3 4b 01 00 	lea    0x14bc3(%rip),%rdi        # 235cd <.LC2>
    ea0a:	e8 6b 88 00 00       	call   1727a <printf>
    ea0f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    ea14:	e8 09 dd ff ff       	call   c722 <free>
    ea19:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    ea20:	00 
    ea21:	48 2b 05 28 b6 01 00 	sub    0x1b628(%rip),%rax        # 2a050 <__stack_chk_guard>
    ea28:	74 05                	je     ea2f <show_exec+0xfa>
    ea2a:	e8 31 40 ff ff       	call   2a60 <__stack_chk_fail>
    ea2f:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    ea36:	44 89 e0             	mov    %r12d,%eax
    ea39:	5b                   	pop    %rbx
    ea3a:	5d                   	pop    %rbp
    ea3b:	41 5c                	pop    %r12
    ea3d:	41 5d                	pop    %r13
    ea3f:	c3                   	ret    

000000000000ea40 <nvs_read>:
    ea40:	f3 0f 1e fa          	endbr64 
    ea44:	41 56                	push   %r14
    ea46:	41 55                	push   %r13
    ea48:	49 89 d5             	mov    %rdx,%r13
    ea4b:	41 54                	push   %r12
    ea4d:	41 89 f4             	mov    %esi,%r12d
    ea50:	55                   	push   %rbp
    ea51:	48 89 fd             	mov    %rdi,%rbp
    ea54:	53                   	push   %rbx
    ea55:	48 89 cb             	mov    %rcx,%rbx
    ea58:	48 85 db             	test   %rbx,%rbx
    ea5b:	74 48                	je     eaa5 <nvs_read+0x65>
    ea5d:	8b 45 08             	mov    0x8(%rbp),%eax
    ea60:	8b 4d 00             	mov    0x0(%rbp),%ecx
    ea63:	49 89 de             	mov    %rbx,%r14
    ea66:	85 c0                	test   %eax,%eax
    ea68:	74 14                	je     ea7e <nvs_read+0x3e>
    ea6a:	8d 50 ff             	lea    -0x1(%rax),%edx
    ea6d:	44 21 e2             	and    %r12d,%edx
    ea70:	29 d0                	sub    %edx,%eax
    ea72:	d3 e0                	shl    %cl,%eax
    ea74:	48 39 d8             	cmp    %rbx,%rax
    ea77:	48 0f 47 c3          	cmova  %rbx,%rax
    ea7b:	49 89 c6             	mov    %rax,%r14
    ea7e:	4c 89 f1             	mov    %r14,%rcx
    ea81:	4c 89 ea             	mov    %r13,%rdx
    ea84:	44 89 e6             	mov    %r12d,%esi
    ea87:	48 89 ef             	mov    %rbp,%rdi
    ea8a:	ff 55 10             	call   *0x10(%rbp)
    ea8d:	85 c0                	test   %eax,%eax
    ea8f:	75 16                	jne    eaa7 <nvs_read+0x67>
    ea91:	8b 4d 00             	mov    0x0(%rbp),%ecx
    ea94:	4c 89 f0             	mov    %r14,%rax
    ea97:	4d 01 f5             	add    %r14,%r13
    ea9a:	4c 29 f3             	sub    %r14,%rbx
    ea9d:	48 d3 e8             	shr    %cl,%rax
    eaa0:	41 01 c4             	add    %eax,%r12d
    eaa3:	eb b3                	jmp    ea58 <nvs_read+0x18>
    eaa5:	31 c0                	xor    %eax,%eax
    eaa7:	5b                   	pop    %rbx
    eaa8:	5d                   	pop    %rbp
    eaa9:	41 5c                	pop    %r12
    eaab:	41 5d                	pop    %r13
    eaad:	41 5e                	pop    %r14
    eaaf:	c3                   	ret    

000000000000eab0 <xfer_uri_opener>:
    eab0:	f3 0f 1e fa          	endbr64 
    eab4:	41 54                	push   %r12
    eab6:	4c 8d 25 4b b0 01 00 	lea    0x1b04b(%rip),%r12        # 29b08 <efi_local_uri_opener>
    eabd:	55                   	push   %rbp
    eabe:	48 8d 2d d3 b0 01 00 	lea    0x1b0d3(%rip),%rbp        # 29b98 <__licence__bsd2__ibft>
    eac5:	53                   	push   %rbx
    eac6:	48 89 fb             	mov    %rdi,%rbx
    eac9:	49 39 ec             	cmp    %rbp,%r12
    eacc:	73 16                	jae    eae4 <xfer_uri_opener+0x34>
    eace:	49 8b 34 24          	mov    (%r12),%rsi
    ead2:	48 89 df             	mov    %rbx,%rdi
    ead5:	e8 e2 4e 00 00       	call   139bc <strcmp>
    eada:	85 c0                	test   %eax,%eax
    eadc:	74 09                	je     eae7 <xfer_uri_opener+0x37>
    eade:	49 83 c4 10          	add    $0x10,%r12
    eae2:	eb e5                	jmp    eac9 <xfer_uri_opener+0x19>
    eae4:	45 31 e4             	xor    %r12d,%r12d
    eae7:	4c 89 e0             	mov    %r12,%rax
    eaea:	5b                   	pop    %rbx
    eaeb:	5d                   	pop    %rbp
    eaec:	41 5c                	pop    %r12
    eaee:	c3                   	ret    

000000000000eaef <xfer_open_uri>:
    eaef:	f3 0f 1e fa          	endbr64 
    eaf3:	41 54                	push   %r12
    eaf5:	49 89 fc             	mov    %rdi,%r12
    eaf8:	55                   	push   %rbp
    eaf9:	48 83 ec 18          	sub    $0x18,%rsp
    eafd:	48 8b 3d 6c b4 01 00 	mov    0x1b46c(%rip),%rdi        # 29f70 <cwuri>
    eb04:	e8 09 7f 00 00       	call   16a12 <resolve_uri>
    eb09:	48 85 c0             	test   %rax,%rax
    eb0c:	75 07                	jne    eb15 <xfer_open_uri+0x26>
    eb0e:	b8 77 df f6 ce       	mov    $0xcef6df77,%eax
    eb13:	eb 31                	jmp    eb46 <xfer_open_uri+0x57>
    eb15:	48 8b 78 10          	mov    0x10(%rax),%rdi
    eb19:	48 89 c5             	mov    %rax,%rbp
    eb1c:	e8 8f ff ff ff       	call   eab0 <xfer_uri_opener>
    eb21:	48 85 c0             	test   %rax,%rax
    eb24:	75 07                	jne    eb2d <xfer_open_uri+0x3e>
    eb26:	b8 7d df f6 c3       	mov    $0xc3f6df7d,%eax
    eb2b:	eb 09                	jmp    eb36 <xfer_open_uri+0x47>
    eb2d:	48 89 ee             	mov    %rbp,%rsi
    eb30:	4c 89 e7             	mov    %r12,%rdi
    eb33:	ff 50 08             	call   *0x8(%rax)
    eb36:	48 89 ef             	mov    %rbp,%rdi
    eb39:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    eb3d:	e8 d8 13 00 00       	call   ff1a <ref_decrement>
    eb42:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    eb46:	48 83 c4 18          	add    $0x18,%rsp
    eb4a:	5d                   	pop    %rbp
    eb4b:	41 5c                	pop    %r12
    eb4d:	c3                   	ret    

000000000000eb4e <xfer_open_uri_string>:
    eb4e:	f3 0f 1e fa          	endbr64 
    eb52:	41 54                	push   %r12
    eb54:	49 89 fc             	mov    %rdi,%r12
    eb57:	48 89 f7             	mov    %rsi,%rdi
    eb5a:	55                   	push   %rbp
    eb5b:	48 83 ec 18          	sub    $0x18,%rsp
    eb5f:	e8 cb 79 00 00       	call   1652f <parse_uri>
    eb64:	48 85 c0             	test   %rax,%rax
    eb67:	75 07                	jne    eb70 <xfer_open_uri_string+0x22>
    eb69:	b8 77 df f6 ce       	mov    $0xcef6df77,%eax
    eb6e:	eb 1e                	jmp    eb8e <xfer_open_uri_string+0x40>
    eb70:	48 89 c5             	mov    %rax,%rbp
    eb73:	48 89 c6             	mov    %rax,%rsi
    eb76:	4c 89 e7             	mov    %r12,%rdi
    eb79:	e8 71 ff ff ff       	call   eaef <xfer_open_uri>
    eb7e:	48 89 ef             	mov    %rbp,%rdi
    eb81:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    eb85:	e8 90 13 00 00       	call   ff1a <ref_decrement>
    eb8a:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    eb8e:	48 83 c4 18          	add    $0x18,%rsp
    eb92:	5d                   	pop    %rbp
    eb93:	41 5c                	pop    %r12
    eb95:	c3                   	ret    

000000000000eb96 <xfer_open_socket>:
    eb96:	f3 0f 1e fa          	endbr64 
    eb9a:	41 89 f0             	mov    %esi,%r8d
    eb9d:	48 8d 05 4c ae 01 00 	lea    0x1ae4c(%rip),%rax        # 299f0 <tcp_socket_opener>
    eba4:	48 89 d6             	mov    %rdx,%rsi
    eba7:	48 89 ca             	mov    %rcx,%rdx
    ebaa:	48 8d 0d 5f ae 01 00 	lea    0x1ae5f(%rip),%rcx        # 29a10 <heap_startup_fn>
    ebb1:	48 39 c8             	cmp    %rcx,%rax
    ebb4:	73 0e                	jae    ebc4 <xfer_open_socket+0x2e>
    ebb6:	44 3b 00             	cmp    (%rax),%r8d
    ebb9:	75 03                	jne    ebbe <xfer_open_socket+0x28>
    ebbb:	ff 60 08             	jmp    *0x8(%rax)
    ebbe:	48 83 c0 10          	add    $0x10,%rax
    ebc2:	eb ed                	jmp    ebb1 <xfer_open_socket+0x1b>
    ebc4:	b8 7d df f6 c3       	mov    $0xc3f6df7d,%eax
    ebc9:	c3                   	ret    

000000000000ebca <xfer_vopen>:
    ebca:	f3 0f 1e fa          	endbr64 
    ebce:	48 89 d0             	mov    %rdx,%rax
    ebd1:	83 fe 02             	cmp    $0x2,%esi
    ebd4:	74 0f                	je     ebe5 <xfer_vopen+0x1b>
    ebd6:	83 fe 03             	cmp    $0x3,%esi
    ebd9:	74 5a                	je     ec35 <xfer_vopen+0x6b>
    ebdb:	ff ce                	dec    %esi
    ebdd:	0f 85 c2 00 00 00    	jne    eca5 <xfer_vopen+0xdb>
    ebe3:	eb 28                	jmp    ec0d <xfer_vopen+0x43>
    ebe5:	8b 0a                	mov    (%rdx),%ecx
    ebe7:	83 f9 2f             	cmp    $0x2f,%ecx
    ebea:	77 0d                	ja     ebf9 <xfer_vopen+0x2f>
    ebec:	89 ca                	mov    %ecx,%edx
    ebee:	83 c1 08             	add    $0x8,%ecx
    ebf1:	48 03 50 10          	add    0x10(%rax),%rdx
    ebf5:	89 08                	mov    %ecx,(%rax)
    ebf7:	eb 0c                	jmp    ec05 <xfer_vopen+0x3b>
    ebf9:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    ebfd:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    ec01:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ec05:	48 8b 32             	mov    (%rdx),%rsi
    ec08:	e9 41 ff ff ff       	jmp    eb4e <xfer_open_uri_string>
    ec0d:	8b 0a                	mov    (%rdx),%ecx
    ec0f:	83 f9 2f             	cmp    $0x2f,%ecx
    ec12:	77 0d                	ja     ec21 <xfer_vopen+0x57>
    ec14:	89 ca                	mov    %ecx,%edx
    ec16:	83 c1 08             	add    $0x8,%ecx
    ec19:	48 03 50 10          	add    0x10(%rax),%rdx
    ec1d:	89 08                	mov    %ecx,(%rax)
    ec1f:	eb 0c                	jmp    ec2d <xfer_vopen+0x63>
    ec21:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    ec25:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    ec29:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ec2d:	48 8b 32             	mov    (%rdx),%rsi
    ec30:	e9 ba fe ff ff       	jmp    eaef <xfer_open_uri>
    ec35:	8b 0a                	mov    (%rdx),%ecx
    ec37:	83 f9 2f             	cmp    $0x2f,%ecx
    ec3a:	77 0d                	ja     ec49 <xfer_vopen+0x7f>
    ec3c:	89 ca                	mov    %ecx,%edx
    ec3e:	83 c1 08             	add    $0x8,%ecx
    ec41:	48 03 50 10          	add    0x10(%rax),%rdx
    ec45:	89 08                	mov    %ecx,(%rax)
    ec47:	eb 0c                	jmp    ec55 <xfer_vopen+0x8b>
    ec49:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    ec4d:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    ec51:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ec55:	8b 08                	mov    (%rax),%ecx
    ec57:	8b 32                	mov    (%rdx),%esi
    ec59:	83 f9 2f             	cmp    $0x2f,%ecx
    ec5c:	77 0d                	ja     ec6b <xfer_vopen+0xa1>
    ec5e:	89 ca                	mov    %ecx,%edx
    ec60:	83 c1 08             	add    $0x8,%ecx
    ec63:	48 03 50 10          	add    0x10(%rax),%rdx
    ec67:	89 08                	mov    %ecx,(%rax)
    ec69:	eb 0c                	jmp    ec77 <xfer_vopen+0xad>
    ec6b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ec6f:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    ec73:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ec77:	8b 08                	mov    (%rax),%ecx
    ec79:	4c 8b 02             	mov    (%rdx),%r8
    ec7c:	83 f9 2f             	cmp    $0x2f,%ecx
    ec7f:	77 0d                	ja     ec8e <xfer_vopen+0xc4>
    ec81:	89 ca                	mov    %ecx,%edx
    ec83:	83 c1 08             	add    $0x8,%ecx
    ec86:	48 03 50 10          	add    0x10(%rax),%rdx
    ec8a:	89 08                	mov    %ecx,(%rax)
    ec8c:	eb 0c                	jmp    ec9a <xfer_vopen+0xd0>
    ec8e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ec92:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    ec96:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ec9a:	48 8b 0a             	mov    (%rdx),%rcx
    ec9d:	4c 89 c2             	mov    %r8,%rdx
    eca0:	e9 f1 fe ff ff       	jmp    eb96 <xfer_open_socket>
    eca5:	b8 7d df f6 c3       	mov    $0xc3f6df7d,%eax
    ecaa:	c3                   	ret    

000000000000ecab <xfer_open>:
    ecab:	f3 0f 1e fa          	endbr64 
    ecaf:	48 83 ec 58          	sub    $0x58,%rsp
    ecb3:	48 8b 05 96 b3 01 00 	mov    0x1b396(%rip),%rax        # 2a050 <__stack_chk_guard>
    ecba:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    ecbf:	31 c0                	xor    %eax,%eax
    ecc1:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    ecc6:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    eccb:	48 89 e2             	mov    %rsp,%rdx
    ecce:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ecd3:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    ecd8:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    ecdd:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    ece2:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    ece7:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
    ecee:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    ecf3:	e8 d2 fe ff ff       	call   ebca <xfer_vopen>
    ecf8:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    ecfd:	48 2b 15 4c b3 01 00 	sub    0x1b34c(%rip),%rdx        # 2a050 <__stack_chk_guard>
    ed04:	74 05                	je     ed0b <xfer_open+0x60>
    ed06:	e8 55 3d ff ff       	call   2a60 <__stack_chk_fail>
    ed0b:	48 83 c4 58          	add    $0x58,%rsp
    ed0f:	c3                   	ret    

000000000000ed10 <xfer_vreopen>:
    ed10:	f3 0f 1e fa          	endbr64 
    ed14:	41 54                	push   %r12
    ed16:	41 89 f4             	mov    %esi,%r12d
    ed19:	31 f6                	xor    %esi,%esi
    ed1b:	48 83 ec 10          	sub    $0x10,%rsp
    ed1f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    ed24:	48 89 3c 24          	mov    %rdi,(%rsp)
    ed28:	e8 eb ab ff ff       	call   9918 <intf_restart>
    ed2d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    ed32:	48 8b 3c 24          	mov    (%rsp),%rdi
    ed36:	48 83 c4 10          	add    $0x10,%rsp
    ed3a:	44 89 e6             	mov    %r12d,%esi
    ed3d:	41 5c                	pop    %r12
    ed3f:	e9 86 fe ff ff       	jmp    ebca <xfer_vopen>

000000000000ed44 <parse_string>:
    ed44:	f3 0f 1e fa          	endbr64 
    ed48:	48 89 3e             	mov    %rdi,(%rsi)
    ed4b:	31 c0                	xor    %eax,%eax
    ed4d:	c3                   	ret    

000000000000ed4e <parse_integer>:
    ed4e:	f3 0f 1e fa          	endbr64 
    ed52:	55                   	push   %rbp
    ed53:	31 d2                	xor    %edx,%edx
    ed55:	48 89 fd             	mov    %rdi,%rbp
    ed58:	53                   	push   %rbx
    ed59:	48 89 f3             	mov    %rsi,%rbx
    ed5c:	48 83 ec 18          	sub    $0x18,%rsp
    ed60:	48 8b 05 e9 b2 01 00 	mov    0x1b2e9(%rip),%rax        # 2a050 <__stack_chk_guard>
    ed67:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ed6c:	31 c0                	xor    %eax,%eax
    ed6e:	48 89 e6             	mov    %rsp,%rsi
    ed71:	e8 e1 4d 00 00       	call   13b57 <strtoul>
    ed76:	89 03                	mov    %eax,(%rbx)
    ed78:	48 8b 04 24          	mov    (%rsp),%rax
    ed7c:	80 38 00             	cmpb   $0x0,(%rax)
    ed7f:	75 08                	jne    ed89 <parse_integer+0x3b>
    ed81:	31 c0                	xor    %eax,%eax
    ed83:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
    ed87:	75 16                	jne    ed9f <parse_integer+0x51>
    ed89:	48 89 ee             	mov    %rbp,%rsi
    ed8c:	48 8d 3d 81 48 01 00 	lea    0x14881(%rip),%rdi        # 23614 <.LC0>
    ed93:	31 c0                	xor    %eax,%eax
    ed95:	e8 e0 84 00 00       	call   1727a <printf>
    ed9a:	b8 7e de e9 e3       	mov    $0xe3e9de7e,%eax
    ed9f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    eda4:	48 2b 15 a5 b2 01 00 	sub    0x1b2a5(%rip),%rdx        # 2a050 <__stack_chk_guard>
    edab:	74 05                	je     edb2 <parse_integer+0x64>
    edad:	e8 ae 3c ff ff       	call   2a60 <__stack_chk_fail>
    edb2:	48 83 c4 18          	add    $0x18,%rsp
    edb6:	5b                   	pop    %rbx
    edb7:	5d                   	pop    %rbp
    edb8:	c3                   	ret    

000000000000edb9 <parse_timeout>:
    edb9:	f3 0f 1e fa          	endbr64 
    edbd:	53                   	push   %rbx
    edbe:	48 89 f3             	mov    %rsi,%rbx
    edc1:	48 83 ec 10          	sub    $0x10,%rsp
    edc5:	48 8b 05 84 b2 01 00 	mov    0x1b284(%rip),%rax        # 2a050 <__stack_chk_guard>
    edcc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    edd1:	31 c0                	xor    %eax,%eax
    edd3:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    edd8:	e8 71 ff ff ff       	call   ed4e <parse_integer>
    eddd:	85 c0                	test   %eax,%eax
    eddf:	75 07                	jne    ede8 <parse_timeout+0x2f>
    ede1:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    ede5:	48 89 0b             	mov    %rcx,(%rbx)
    ede8:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    eded:	48 2b 15 5c b2 01 00 	sub    0x1b25c(%rip),%rdx        # 2a050 <__stack_chk_guard>
    edf4:	74 05                	je     edfb <parse_timeout+0x42>
    edf6:	e8 65 3c ff ff       	call   2a60 <__stack_chk_fail>
    edfb:	48 83 c4 10          	add    $0x10,%rsp
    edff:	5b                   	pop    %rbx
    ee00:	c3                   	ret    

000000000000ee01 <parse_netdev>:
    ee01:	f3 0f 1e fa          	endbr64 
    ee05:	55                   	push   %rbp
    ee06:	48 89 fd             	mov    %rdi,%rbp
    ee09:	53                   	push   %rbx
    ee0a:	48 89 f3             	mov    %rsi,%rbx
    ee0d:	51                   	push   %rcx
    ee0e:	e8 d1 f2 ff ff       	call   e0e4 <find_netdev>
    ee13:	45 31 c0             	xor    %r8d,%r8d
    ee16:	48 89 03             	mov    %rax,(%rbx)
    ee19:	48 85 c0             	test   %rax,%rax
    ee1c:	75 15                	jne    ee33 <parse_netdev+0x32>
    ee1e:	48 89 ee             	mov    %rbp,%rsi
    ee21:	48 8d 3d 09 48 01 00 	lea    0x14809(%rip),%rdi        # 23631 <.LC1>
    ee28:	e8 4d 84 00 00       	call   1727a <printf>
    ee2d:	41 b8 79 df e9 d3    	mov    $0xd3e9df79,%r8d
    ee33:	5a                   	pop    %rdx
    ee34:	44 89 c0             	mov    %r8d,%eax
    ee37:	5b                   	pop    %rbx
    ee38:	5d                   	pop    %rbp
    ee39:	c3                   	ret    

000000000000ee3a <parse_netdev_configurator>:
    ee3a:	f3 0f 1e fa          	endbr64 
    ee3e:	55                   	push   %rbp
    ee3f:	48 89 fd             	mov    %rdi,%rbp
    ee42:	53                   	push   %rbx
    ee43:	48 89 f3             	mov    %rsi,%rbx
    ee46:	51                   	push   %rcx
    ee47:	e8 21 f6 ff ff       	call   e46d <find_netdev_configurator>
    ee4c:	45 31 c0             	xor    %r8d,%r8d
    ee4f:	48 89 03             	mov    %rax,(%rbx)
    ee52:	48 85 c0             	test   %rax,%rax
    ee55:	75 15                	jne    ee6c <parse_netdev_configurator+0x32>
    ee57:	48 89 ee             	mov    %rbp,%rsi
    ee5a:	48 8d 3d ee 47 01 00 	lea    0x147ee(%rip),%rdi        # 2364f <.LC2>
    ee61:	e8 14 84 00 00       	call   1727a <printf>
    ee66:	41 b8 7d df e9 c3    	mov    $0xc3e9df7d,%r8d
    ee6c:	5a                   	pop    %rdx
    ee6d:	44 89 c0             	mov    %r8d,%eax
    ee70:	5b                   	pop    %rbx
    ee71:	5d                   	pop    %rbp
    ee72:	c3                   	ret    

000000000000ee73 <parse_menu>:
    ee73:	f3 0f 1e fa          	endbr64 
    ee77:	55                   	push   %rbp
    ee78:	48 89 fd             	mov    %rdi,%rbp
    ee7b:	53                   	push   %rbx
    ee7c:	48 89 f3             	mov    %rsi,%rbx
    ee7f:	51                   	push   %rcx
    ee80:	e8 18 11 01 00       	call   1ff9d <find_menu>
    ee85:	45 31 c0             	xor    %r8d,%r8d
    ee88:	48 89 03             	mov    %rax,(%rbx)
    ee8b:	48 85 c0             	test   %rax,%rax
    ee8e:	75 2a                	jne    eeba <parse_menu+0x47>
    ee90:	48 85 ed             	test   %rbp,%rbp
    ee93:	74 11                	je     eea6 <parse_menu+0x33>
    ee95:	48 89 ee             	mov    %rbp,%rsi
    ee98:	48 8d 3d cc 47 01 00 	lea    0x147cc(%rip),%rdi        # 2366b <.LC3>
    ee9f:	e8 d6 83 00 00       	call   1727a <printf>
    eea4:	eb 0e                	jmp    eeb4 <parse_menu+0x41>
    eea6:	48 8d 3d d2 47 01 00 	lea    0x147d2(%rip),%rdi        # 2367f <.LC4>
    eead:	31 c0                	xor    %eax,%eax
    eeaf:	e8 c6 83 00 00       	call   1727a <printf>
    eeb4:	41 b8 72 df e9 d2    	mov    $0xd2e9df72,%r8d
    eeba:	5a                   	pop    %rdx
    eebb:	44 89 c0             	mov    %r8d,%eax
    eebe:	5b                   	pop    %rbx
    eebf:	5d                   	pop    %rbp
    eec0:	c3                   	ret    

000000000000eec1 <parse_flag>:
    eec1:	f3 0f 1e fa          	endbr64 
    eec5:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
    eecb:	31 c0                	xor    %eax,%eax
    eecd:	c3                   	ret    

000000000000eece <parse_key>:
    eece:	f3 0f 1e fa          	endbr64 
    eed2:	0f be 07             	movsbl (%rdi),%eax
    eed5:	84 c0                	test   %al,%al
    eed7:	74 06                	je     eedf <parse_key+0x11>
    eed9:	80 7f 01 00          	cmpb   $0x0,0x1(%rdi)
    eedd:	74 05                	je     eee4 <parse_key+0x16>
    eedf:	e9 6a fe ff ff       	jmp    ed4e <parse_integer>
    eee4:	89 06                	mov    %eax,(%rsi)
    eee6:	31 c0                	xor    %eax,%eax
    eee8:	c3                   	ret    

000000000000eee9 <parse_settings>:
    eee9:	f3 0f 1e fa          	endbr64 
    eeed:	55                   	push   %rbp
    eeee:	48 89 fd             	mov    %rdi,%rbp
    eef1:	53                   	push   %rbx
    eef2:	48 89 f3             	mov    %rsi,%rbx
    eef5:	51                   	push   %rcx
    eef6:	e8 33 2a 00 00       	call   1192e <find_settings>
    eefb:	45 31 c0             	xor    %r8d,%r8d
    eefe:	48 89 03             	mov    %rax,(%rbx)
    ef01:	48 85 c0             	test   %rax,%rax
    ef04:	75 15                	jne    ef1b <parse_settings+0x32>
    ef06:	48 89 ee             	mov    %rbp,%rsi
    ef09:	48 8d 3d 80 47 01 00 	lea    0x14780(%rip),%rdi        # 23690 <.LC5>
    ef10:	e8 65 83 00 00       	call   1727a <printf>
    ef15:	41 b8 7e df e9 e3    	mov    $0xe3e9df7e,%r8d
    ef1b:	5a                   	pop    %rdx
    ef1c:	44 89 c0             	mov    %r8d,%eax
    ef1f:	5b                   	pop    %rbx
    ef20:	5d                   	pop    %rbp
    ef21:	c3                   	ret    

000000000000ef22 <parse_setting>:
    ef22:	f3 0f 1e fa          	endbr64 
    ef26:	41 54                	push   %r12
    ef28:	49 89 f0             	mov    %rsi,%r8
    ef2b:	48 89 d6             	mov    %rdx,%rsi
    ef2e:	55                   	push   %rbp
    ef2f:	4c 89 c2             	mov    %r8,%rdx
    ef32:	48 89 fd             	mov    %rdi,%rbp
    ef35:	51                   	push   %rcx
    ef36:	49 8d 48 08          	lea    0x8(%r8),%rcx
    ef3a:	e8 2e 38 00 00       	call   1276d <parse_setting_name>
    ef3f:	41 89 c4             	mov    %eax,%r12d
    ef42:	85 c0                	test   %eax,%eax
    ef44:	74 11                	je     ef57 <parse_setting+0x35>
    ef46:	48 89 ee             	mov    %rbp,%rsi
    ef49:	48 8d 3d 55 47 01 00 	lea    0x14755(%rip),%rdi        # 236a5 <.LC6>
    ef50:	31 c0                	xor    %eax,%eax
    ef52:	e8 23 83 00 00       	call   1727a <printf>
    ef57:	44 89 e0             	mov    %r12d,%eax
    ef5a:	5a                   	pop    %rdx
    ef5b:	5d                   	pop    %rbp
    ef5c:	41 5c                	pop    %r12
    ef5e:	c3                   	ret    

000000000000ef5f <parse_existing_setting>:
    ef5f:	f3 0f 1e fa          	endbr64 
    ef63:	48 8d 15 4e 2a 00 00 	lea    0x2a4e(%rip),%rdx        # 119b8 <find_child_settings>
    ef6a:	e9 b3 ff ff ff       	jmp    ef22 <parse_setting>

000000000000ef6f <parse_autovivified_setting>:
    ef6f:	f3 0f 1e fa          	endbr64 
    ef73:	48 8d 15 8b 31 00 00 	lea    0x318b(%rip),%rdx        # 12105 <autovivify_child_settings>
    ef7a:	e9 a3 ff ff ff       	jmp    ef22 <parse_setting>

000000000000ef7f <print_usage>:
    ef7f:	f3 0f 1e fa          	endbr64 
    ef83:	41 57                	push   %r15
    ef85:	31 c0                	xor    %eax,%eax
    ef87:	41 56                	push   %r14
    ef89:	4c 8d 35 74 47 01 00 	lea    0x14774(%rip),%r14        # 23704 <.LC13>
    ef90:	41 55                	push   %r13
    ef92:	45 31 ed             	xor    %r13d,%r13d
    ef95:	41 54                	push   %r12
    ef97:	49 89 f4             	mov    %rsi,%r12
    ef9a:	55                   	push   %rbp
    ef9b:	48 89 fd             	mov    %rdi,%rbp
    ef9e:	48 8d 3d 52 47 01 00 	lea    0x14752(%rip),%rdi        # 236f7 <.LC12>
    efa5:	53                   	push   %rbx
    efa6:	51                   	push   %rcx
    efa7:	48 8b 36             	mov    (%rsi),%rsi
    efaa:	e8 cb 82 00 00       	call   1727a <printf>
    efaf:	0f b6 45 08          	movzbl 0x8(%rbp),%eax
    efb3:	44 39 e8             	cmp    %r13d,%eax
    efb6:	76 63                	jbe    f01b <print_usage+0x9c>
    efb8:	49 6b dd 18          	imul   $0x18,%r13,%rbx
    efbc:	48 03 5d 00          	add    0x0(%rbp),%rbx
    efc0:	31 c0                	xor    %eax,%eax
    efc2:	4c 89 f7             	mov    %r14,%rdi
    efc5:	48 8b 13             	mov    (%rbx),%rdx
    efc8:	0f be 73 08          	movsbl 0x8(%rbx),%esi
    efcc:	4c 8d 3d 07 3c 01 00 	lea    0x13c07(%rip),%r15        # 22bda <.LC9>
    efd3:	e8 a2 82 00 00       	call   1727a <printf>
    efd8:	8a 53 09             	mov    0x9(%rbx),%dl
    efdb:	84 d2                	test   %dl,%dl
    efdd:	74 2d                	je     f00c <print_usage+0x8d>
    efdf:	48 8d 05 ce 54 01 00 	lea    0x154ce(%rip),%rax        # 244b4 <.LC0>
    efe6:	80 fa 02             	cmp    $0x2,%dl
    efe9:	48 8d 35 05 47 01 00 	lea    0x14705(%rip),%rsi        # 236f5 <.LC11>
    eff0:	48 8b 13             	mov    (%rbx),%rdx
    eff3:	48 89 c1             	mov    %rax,%rcx
    eff6:	48 0f 45 f0          	cmovne %rax,%rsi
    effa:	48 8d 3d 0e 47 01 00 	lea    0x1470e(%rip),%rdi        # 2370f <.LC14>
    f001:	49 0f 44 cf          	cmove  %r15,%rcx
    f005:	31 c0                	xor    %eax,%eax
    f007:	e8 6e 82 00 00       	call   1727a <printf>
    f00c:	4c 89 ff             	mov    %r15,%rdi
    f00f:	31 c0                	xor    %eax,%eax
    f011:	49 ff c5             	inc    %r13
    f014:	e8 61 82 00 00       	call   1727a <printf>
    f019:	eb 94                	jmp    efaf <print_usage+0x30>
    f01b:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    f01f:	48 85 f6             	test   %rsi,%rsi
    f022:	74 0e                	je     f032 <print_usage+0xb3>
    f024:	48 8d 3d d5 46 01 00 	lea    0x146d5(%rip),%rdi        # 23700 <.LC15>
    f02b:	31 c0                	xor    %eax,%eax
    f02d:	e8 48 82 00 00       	call   1727a <printf>
    f032:	49 8b 34 24          	mov    (%r12),%rsi
    f036:	48 8d 3d dc 46 01 00 	lea    0x146dc(%rip),%rdi        # 23719 <.LC16>
    f03d:	5a                   	pop    %rdx
    f03e:	31 c0                	xor    %eax,%eax
    f040:	5b                   	pop    %rbx
    f041:	5d                   	pop    %rbp
    f042:	41 5c                	pop    %r12
    f044:	41 5d                	pop    %r13
    f046:	41 5e                	pop    %r14
    f048:	41 5f                	pop    %r15
    f04a:	e9 2b 82 00 00       	jmp    1727a <printf>

000000000000f04f <reparse_options>:
    f04f:	f3 0f 1e fa          	endbr64 
    f053:	55                   	push   %rbp
    f054:	48 89 e5             	mov    %rsp,%rbp
    f057:	41 57                	push   %r15
    f059:	41 56                	push   %r14
    f05b:	49 89 f6             	mov    %rsi,%r14
    f05e:	41 55                	push   %r13
    f060:	41 54                	push   %r12
    f062:	49 89 d4             	mov    %rdx,%r12
    f065:	53                   	push   %rbx
    f066:	89 fb                	mov    %edi,%ebx
    f068:	48 83 ec 28          	sub    $0x28,%rsp
    f06c:	0f b6 52 08          	movzbl 0x8(%rdx),%edx
    f070:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    f074:	48 8b 05 d5 af 01 00 	mov    0x1afd5(%rip),%rax        # 2a050 <__stack_chk_guard>
    f07b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f07f:	31 c0                	xor    %eax,%eax
    f081:	48 89 e6             	mov    %rsp,%rsi
    f084:	8d 42 02             	lea    0x2(%rdx),%eax
    f087:	48 98                	cltq   
    f089:	48 89 c1             	mov    %rax,%rcx
    f08c:	48 c1 e1 05          	shl    $0x5,%rcx
    f090:	48 89 cf             	mov    %rcx,%rdi
    f093:	48 89 c8             	mov    %rcx,%rax
    f096:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    f09d:	48 29 fe             	sub    %rdi,%rsi
    f0a0:	48 39 f4             	cmp    %rsi,%rsp
    f0a3:	74 12                	je     f0b7 <reparse_options+0x68>
    f0a5:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    f0ac:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    f0b3:	00 00 
    f0b5:	eb e9                	jmp    f0a0 <reparse_options+0x51>
    f0b7:	25 ff 0f 00 00       	and    $0xfff,%eax
    f0bc:	48 29 c4             	sub    %rax,%rsp
    f0bf:	48 85 c0             	test   %rax,%rax
    f0c2:	74 06                	je     f0ca <reparse_options+0x7b>
    f0c4:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    f0ca:	8d 14 52             	lea    (%rdx,%rdx,2),%edx
    f0cd:	49 89 e7             	mov    %rsp,%r15
    f0d0:	48 8d 42 11          	lea    0x11(%rdx),%rax
    f0d4:	48 89 e2             	mov    %rsp,%rdx
    f0d7:	25 f0 0f 00 00       	and    $0xff0,%eax
    f0dc:	48 39 d4             	cmp    %rdx,%rsp
    f0df:	74 12                	je     f0f3 <reparse_options+0xa4>
    f0e1:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    f0e8:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    f0ef:	00 00 
    f0f1:	eb e9                	jmp    f0dc <reparse_options+0x8d>
    f0f3:	48 29 c4             	sub    %rax,%rsp
    f0f6:	25 ff 0f 00 00       	and    $0xfff,%eax
    f0fb:	74 06                	je     f103 <reparse_options+0xb4>
    f0fd:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    f103:	49 89 e5             	mov    %rsp,%r13
    f106:	4c 89 ff             	mov    %r15,%rdi
    f109:	31 c0                	xor    %eax,%eax
    f10b:	f3 aa                	rep stos %al,%es:(%rdi)
    f10d:	41 0f b6 44 24 08    	movzbl 0x8(%r12),%eax
    f113:	4d 89 f8             	mov    %r15,%r8
    f116:	45 31 c9             	xor    %r9d,%r9d
    f119:	31 c9                	xor    %ecx,%ecx
    f11b:	8d 71 01             	lea    0x1(%rcx),%esi
    f11e:	44 39 c8             	cmp    %r9d,%eax
    f121:	76 50                	jbe    f173 <reparse_options+0x124>
    f123:	49 6b f9 18          	imul   $0x18,%r9,%rdi
    f127:	49 03 3c 24          	add    (%r12),%rdi
    f12b:	4c 8b 17             	mov    (%rdi),%r10
    f12e:	4d 89 10             	mov    %r10,(%r8)
    f131:	44 0f b6 57 09       	movzbl 0x9(%rdi),%r10d
    f136:	45 89 50 08          	mov    %r10d,0x8(%r8)
    f13a:	44 0f be 5f 08       	movsbl 0x8(%rdi),%r11d
    f13f:	45 89 58 18          	mov    %r11d,0x18(%r8)
    f143:	45 88 5c 0d 00       	mov    %r11b,0x0(%r13,%rcx,1)
    f148:	0f b6 4f 09          	movzbl 0x9(%rdi),%ecx
    f14c:	89 f7                	mov    %esi,%edi
    f14e:	41 89 ca             	mov    %ecx,%r10d
    f151:	44 8d 5f 01          	lea    0x1(%rdi),%r11d
    f155:	45 85 d2             	test   %r10d,%r10d
    f158:	74 0e                	je     f168 <reparse_options+0x119>
    f15a:	41 c6 44 3d 00 3a    	movb   $0x3a,0x0(%r13,%rdi,1)
    f160:	41 ff ca             	dec    %r10d
    f163:	44 89 df             	mov    %r11d,%edi
    f166:	eb e9                	jmp    f151 <reparse_options+0x102>
    f168:	01 f1                	add    %esi,%ecx
    f16a:	49 ff c1             	inc    %r9
    f16d:	49 83 c0 20          	add    $0x20,%r8
    f171:	eb a8                	jmp    f11b <reparse_options+0xcc>
    f173:	48 c1 e0 05          	shl    $0x5,%rax
    f177:	48 8d 15 d1 45 01 00 	lea    0x145d1(%rip),%rdx        # 2374f <.LC17>
    f17e:	41 c6 44 0d 00 68    	movb   $0x68,0x0(%r13,%rcx,1)
    f184:	4c 01 f8             	add    %r15,%rax
    f187:	41 c6 44 35 00 00    	movb   $0x0,0x0(%r13,%rsi,1)
    f18d:	48 89 10             	mov    %rdx,(%rax)
    f190:	c7 40 18 68 00 00 00 	movl   $0x68,0x18(%rax)
    f197:	45 31 c0             	xor    %r8d,%r8d
    f19a:	4c 89 f9             	mov    %r15,%rcx
    f19d:	4c 89 ea             	mov    %r13,%rdx
    f1a0:	4c 89 f6             	mov    %r14,%rsi
    f1a3:	89 df                	mov    %ebx,%edi
    f1a5:	e8 63 7d ff ff       	call   6f0d <getopt_long>
    f1aa:	85 c0                	test   %eax,%eax
    f1ac:	0f 88 8c 00 00 00    	js     f23e <reparse_options+0x1ef>
    f1b2:	83 f8 3f             	cmp    $0x3f,%eax
    f1b5:	74 29                	je     f1e0 <reparse_options+0x191>
    f1b7:	83 f8 68             	cmp    $0x68,%eax
    f1ba:	74 0f                	je     f1cb <reparse_options+0x17c>
    f1bc:	83 f8 3a             	cmp    $0x3a,%eax
    f1bf:	74 31                	je     f1f2 <reparse_options+0x1a3>
    f1c1:	41 0f b6 7c 24 08    	movzbl 0x8(%r12),%edi
    f1c7:	31 f6                	xor    %esi,%esi
    f1c9:	eb 4e                	jmp    f219 <reparse_options+0x1ca>
    f1cb:	4c 89 f6             	mov    %r14,%rsi
    f1ce:	4c 89 e7             	mov    %r12,%rdi
    f1d1:	e8 a9 fd ff ff       	call   ef7f <print_usage>
    f1d6:	b8 6b de e9 f4       	mov    $0xf4e9de6b,%eax
    f1db:	e9 8a 00 00 00       	jmp    f26a <reparse_options+0x21b>
    f1e0:	4c 89 f6             	mov    %r14,%rsi
    f1e3:	4c 89 e7             	mov    %r12,%rdi
    f1e6:	e8 94 fd ff ff       	call   ef7f <print_usage>
    f1eb:	b8 7e dd e9 e3       	mov    $0xe3e9dd7e,%eax
    f1f0:	eb 78                	jmp    f26a <reparse_options+0x21b>
    f1f2:	4c 89 f6             	mov    %r14,%rsi
    f1f5:	4c 89 e7             	mov    %r12,%rdi
    f1f8:	e8 82 fd ff ff       	call   ef7f <print_usage>
    f1fd:	b8 7e dc e9 e3       	mov    $0xe3e9dc7e,%eax
    f202:	eb 66                	jmp    f26a <reparse_options+0x21b>
    f204:	48 6b ce 18          	imul   $0x18,%rsi,%rcx
    f208:	49 03 0c 24          	add    (%r12),%rcx
    f20c:	48 ff c6             	inc    %rsi
    f20f:	44 0f be 41 08       	movsbl 0x8(%rcx),%r8d
    f214:	41 39 c0             	cmp    %eax,%r8d
    f217:	74 09                	je     f222 <reparse_options+0x1d3>
    f219:	39 f7                	cmp    %esi,%edi
    f21b:	77 e7                	ja     f204 <reparse_options+0x1b5>
    f21d:	e9 75 ff ff ff       	jmp    f197 <reparse_options+0x148>
    f222:	0f b7 71 0a          	movzwl 0xa(%rcx),%esi
    f226:	48 8b 3d 53 ae 01 00 	mov    0x1ae53(%rip),%rdi        # 2a080 <optarg>
    f22d:	48 03 75 b8          	add    -0x48(%rbp),%rsi
    f231:	ff 51 10             	call   *0x10(%rcx)
    f234:	85 c0                	test   %eax,%eax
    f236:	0f 84 5b ff ff ff    	je     f197 <reparse_options+0x148>
    f23c:	eb 2c                	jmp    f26a <reparse_options+0x21b>
    f23e:	41 0f b6 44 24 0a    	movzbl 0xa(%r12),%eax
    f244:	2b 1d 3e ae 01 00    	sub    0x1ae3e(%rip),%ebx        # 2a088 <optind>
    f24a:	39 d8                	cmp    %ebx,%eax
    f24c:	77 0c                	ja     f25a <reparse_options+0x20b>
    f24e:	41 0f b6 54 24 0b    	movzbl 0xb(%r12),%edx
    f254:	31 c0                	xor    %eax,%eax
    f256:	39 da                	cmp    %ebx,%edx
    f258:	73 10                	jae    f26a <reparse_options+0x21b>
    f25a:	4c 89 f6             	mov    %r14,%rsi
    f25d:	4c 89 e7             	mov    %r12,%rdi
    f260:	e8 1a fd ff ff       	call   ef7f <print_usage>
    f265:	b8 7b df e9 b9       	mov    $0xb9e9df7b,%eax
    f26a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f26e:	48 2b 15 db ad 01 00 	sub    0x1addb(%rip),%rdx        # 2a050 <__stack_chk_guard>
    f275:	74 05                	je     f27c <reparse_options+0x22d>
    f277:	e8 e4 37 ff ff       	call   2a60 <__stack_chk_fail>
    f27c:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    f280:	5b                   	pop    %rbx
    f281:	41 5c                	pop    %r12
    f283:	41 5d                	pop    %r13
    f285:	41 5e                	pop    %r14
    f287:	41 5f                	pop    %r15
    f289:	5d                   	pop    %rbp
    f28a:	c3                   	ret    

000000000000f28b <parse_options>:
    f28b:	f3 0f 1e fa          	endbr64 
    f28f:	49 89 c8             	mov    %rcx,%r8
    f292:	41 89 f9             	mov    %edi,%r9d
    f295:	0f b6 4a 09          	movzbl 0x9(%rdx),%ecx
    f299:	31 c0                	xor    %eax,%eax
    f29b:	4c 89 c7             	mov    %r8,%rdi
    f29e:	f3 aa                	rep stos %al,%es:(%rdi)
    f2a0:	4c 89 c1             	mov    %r8,%rcx
    f2a3:	44 89 cf             	mov    %r9d,%edi
    f2a6:	e9 a4 fd ff ff       	jmp    f04f <reparse_options>

000000000000f2ab <pci_bar>:
    f2ab:	53                   	push   %rbx
    f2ac:	89 f3                	mov    %esi,%ebx
    f2ae:	81 ce 00 00 02 00    	or     $0x20000,%esi
    f2b4:	48 83 ec 20          	sub    $0x20,%rsp
    f2b8:	48 8b 05 91 ad 01 00 	mov    0x1ad91(%rip),%rax        # 2a050 <__stack_chk_guard>
    f2bf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f2c4:	31 c0                	xor    %eax,%eax
    f2c6:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    f2cb:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    f2d0:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%rsp)
    f2d7:	ff 
    f2d8:	e8 b3 de 00 00       	call   1d190 <efipci_read>
    f2dd:	8b 44 24 10          	mov    0x10(%rsp),%eax
    f2e1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    f2e6:	83 e0 07             	and    $0x7,%eax
    f2e9:	83 f8 04             	cmp    $0x4,%eax
    f2ec:	75 30                	jne    f31e <pci_bar+0x73>
    f2ee:	8d 73 04             	lea    0x4(%rbx),%esi
    f2f1:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
    f2f6:	c7 44 24 14 ff ff ff 	movl   $0xffffffff,0x14(%rsp)
    f2fd:	ff 
    f2fe:	81 ce 00 00 02 00    	or     $0x20000,%esi
    f304:	e8 87 de 00 00       	call   1d190 <efipci_read>
    f309:	8b 44 24 14          	mov    0x14(%rsp),%eax
    f30d:	85 c0                	test   %eax,%eax
    f30f:	74 0d                	je     f31e <pci_bar+0x73>
    f311:	8b 54 24 10          	mov    0x10(%rsp),%edx
    f315:	48 c1 e0 20          	shl    $0x20,%rax
    f319:	48 09 d0             	or     %rdx,%rax
    f31c:	eb 04                	jmp    f322 <pci_bar+0x77>
    f31e:	8b 44 24 10          	mov    0x10(%rsp),%eax
    f322:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    f327:	48 2b 15 22 ad 01 00 	sub    0x1ad22(%rip),%rdx        # 2a050 <__stack_chk_guard>
    f32e:	74 05                	je     f335 <pci_bar+0x8a>
    f330:	e8 2b 37 ff ff       	call   2a60 <__stack_chk_fail>
    f335:	48 83 c4 20          	add    $0x20,%rsp
    f339:	5b                   	pop    %rbx
    f33a:	c3                   	ret    

000000000000f33b <adjust_pci_device>:
    f33b:	f3 0f 1e fa          	endbr64 
    f33f:	55                   	push   %rbp
    f340:	be 04 00 01 00       	mov    $0x10004,%esi
    f345:	48 89 fd             	mov    %rdi,%rbp
    f348:	48 83 ec 10          	sub    $0x10,%rsp
    f34c:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
    f351:	66 c7 44 24 06 ff ff 	movw   $0xffff,0x6(%rsp)
    f358:	48 8b 05 f1 ac 01 00 	mov    0x1acf1(%rip),%rax        # 2a050 <__stack_chk_guard>
    f35f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f364:	31 c0                	xor    %eax,%eax
    f366:	e8 25 de 00 00       	call   1d190 <efipci_read>
    f36b:	66 8b 44 24 06       	mov    0x6(%rsp),%ax
    f370:	89 c2                	mov    %eax,%edx
    f372:	83 ca 07             	or     $0x7,%edx
    f375:	66 39 d0             	cmp    %dx,%ax
    f378:	74 10                	je     f38a <adjust_pci_device+0x4f>
    f37a:	0f b7 d2             	movzwl %dx,%edx
    f37d:	be 04 00 01 00       	mov    $0x10004,%esi
    f382:	48 89 ef             	mov    %rbp,%rdi
    f385:	e8 e1 de 00 00       	call   1d26b <efipci_write>
    f38a:	48 8d 54 24 05       	lea    0x5(%rsp),%rdx
    f38f:	be 0d 00 00 00       	mov    $0xd,%esi
    f394:	48 89 ef             	mov    %rbp,%rdi
    f397:	c6 44 24 05 ff       	movb   $0xff,0x5(%rsp)
    f39c:	e8 ef dd 00 00       	call   1d190 <efipci_read>
    f3a1:	80 7c 24 05 1f       	cmpb   $0x1f,0x5(%rsp)
    f3a6:	77 12                	ja     f3ba <adjust_pci_device+0x7f>
    f3a8:	ba 20 00 00 00       	mov    $0x20,%edx
    f3ad:	be 0d 00 00 00       	mov    $0xd,%esi
    f3b2:	48 89 ef             	mov    %rbp,%rdi
    f3b5:	e8 b1 de 00 00       	call   1d26b <efipci_write>
    f3ba:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    f3bf:	48 2b 05 8a ac 01 00 	sub    0x1ac8a(%rip),%rax        # 2a050 <__stack_chk_guard>
    f3c6:	74 05                	je     f3cd <adjust_pci_device+0x92>
    f3c8:	e8 93 36 ff ff       	call   2a60 <__stack_chk_fail>
    f3cd:	48 83 c4 10          	add    $0x10,%rsp
    f3d1:	5d                   	pop    %rbp
    f3d2:	c3                   	ret    

000000000000f3d3 <pci_read_config>:
    f3d3:	f3 0f 1e fa          	endbr64 
    f3d7:	41 54                	push   %r12
    f3d9:	55                   	push   %rbp
    f3da:	53                   	push   %rbx
    f3db:	48 89 fb             	mov    %rdi,%rbx
    f3de:	48 83 ec 10          	sub    $0x10,%rsp
    f3e2:	8b af 9c 00 00 00    	mov    0x9c(%rdi),%ebp
    f3e8:	48 8b 05 61 ac 01 00 	mov    0x1ac61(%rip),%rax        # 2a050 <__stack_chk_guard>
    f3ef:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f3f4:	31 c0                	xor    %eax,%eax
    f3f6:	40 f6 c5 07          	test   $0x7,%bpl
    f3fa:	74 2e                	je     f42a <pci_read_config+0x57>
    f3fc:	89 e8                	mov    %ebp,%eax
    f3fe:	48 8d 54 24 03       	lea    0x3(%rsp),%rdx
    f403:	be 0e 00 00 00       	mov    $0xe,%esi
    f408:	c6 44 24 03 ff       	movb   $0xff,0x3(%rsp)
    f40d:	83 e0 f8             	and    $0xfffffff8,%eax
    f410:	89 87 9c 00 00 00    	mov    %eax,0x9c(%rdi)
    f416:	e8 75 dd 00 00       	call   1d190 <efipci_read>
    f41b:	80 7c 24 03 00       	cmpb   $0x0,0x3(%rsp)
    f420:	89 ab 9c 00 00 00    	mov    %ebp,0x9c(%rbx)
    f426:	78 02                	js     f42a <pci_read_config+0x57>
    f428:	eb 29                	jmp    f453 <pci_read_config+0x80>
    f42a:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    f42f:	be 00 00 02 00       	mov    $0x20000,%esi
    f434:	48 89 df             	mov    %rbx,%rdi
    f437:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
    f43e:	ff 
    f43f:	4c 89 e2             	mov    %r12,%rdx
    f442:	e8 49 dd 00 00       	call   1d190 <efipci_read>
    f447:	8b 44 24 04          	mov    0x4(%rsp),%eax
    f44b:	8d 50 ff             	lea    -0x1(%rax),%edx
    f44e:	83 fa fd             	cmp    $0xfffffffd,%edx
    f451:	76 0a                	jbe    f45d <pci_read_config+0x8a>
    f453:	b8 79 bf fb d3       	mov    $0xd3fbbf79,%eax
    f458:	e9 2e 01 00 00       	jmp    f58b <pci_read_config+0x1b8>
    f45d:	4c 89 e2             	mov    %r12,%rdx
    f460:	be 08 00 02 00       	mov    $0x20008,%esi
    f465:	48 89 df             	mov    %rbx,%rdi
    f468:	bd 10 00 00 00       	mov    $0x10,%ebp
    f46d:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    f473:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
    f47a:	ff 
    f47b:	e8 10 dd 00 00       	call   1d190 <efipci_read>
    f480:	8b 44 24 04          	mov    0x4(%rsp),%eax
    f484:	be 3c 00 00 00       	mov    $0x3c,%esi
    f489:	48 89 df             	mov    %rbx,%rdi
    f48c:	c6 83 98 00 00 00 ff 	movb   $0xff,0x98(%rbx)
    f493:	48 8d 93 98 00 00 00 	lea    0x98(%rbx),%rdx
    f49a:	c1 e8 08             	shr    $0x8,%eax
    f49d:	89 83 94 00 00 00    	mov    %eax,0x94(%rbx)
    f4a3:	e8 e8 dc 00 00       	call   1d190 <efipci_read>
    f4a8:	89 ee                	mov    %ebp,%esi
    f4aa:	48 89 df             	mov    %rbx,%rdi
    f4ad:	e8 f9 fd ff ff       	call   f2ab <pci_bar>
    f4b2:	a8 01                	test   $0x1,%al
    f4b4:	74 17                	je     f4cd <pci_read_config+0xfa>
    f4b6:	48 83 bb 88 00 00 00 	cmpq   $0x0,0x88(%rbx)
    f4bd:	00 
    f4be:	75 2c                	jne    f4ec <pci_read_config+0x119>
    f4c0:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    f4c4:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
    f4cb:	eb 1f                	jmp    f4ec <pci_read_config+0x119>
    f4cd:	48 83 bb 80 00 00 00 	cmpq   $0x0,0x80(%rbx)
    f4d4:	00 
    f4d5:	75 0e                	jne    f4e5 <pci_read_config+0x112>
    f4d7:	48 89 c2             	mov    %rax,%rdx
    f4da:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
    f4de:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    f4e5:	a8 04                	test   $0x4,%al
    f4e7:	74 03                	je     f4ec <pci_read_config+0x119>
    f4e9:	83 c5 04             	add    $0x4,%ebp
    f4ec:	83 c5 04             	add    $0x4,%ebp
    f4ef:	83 fd 24             	cmp    $0x24,%ebp
    f4f2:	7e b4                	jle    f4a8 <pci_read_config+0xd5>
    f4f4:	8b 83 9c 00 00 00    	mov    0x9c(%rbx),%eax
    f4fa:	56                   	push   %rsi
    f4fb:	48 89 df             	mov    %rbx,%rdi
    f4fe:	48 8d 15 4f 42 01 00 	lea    0x1424f(%rip),%rdx        # 23754 <.LC0>
    f505:	be 28 00 00 00       	mov    $0x28,%esi
    f50a:	0f b6 cc             	movzbl %ah,%ecx
    f50d:	41 89 c1             	mov    %eax,%r9d
    f510:	41 89 c8             	mov    %ecx,%r8d
    f513:	89 c1                	mov    %eax,%ecx
    f515:	83 e0 07             	and    $0x7,%eax
    f518:	41 c1 e9 03          	shr    $0x3,%r9d
    f51c:	50                   	push   %rax
    f51d:	c1 e9 10             	shr    $0x10,%ecx
    f520:	41 83 e1 1f          	and    $0x1f,%r9d
    f524:	31 c0                	xor    %eax,%eax
    f526:	e8 32 7c 00 00       	call   1715d <snprintf>
    f52b:	8b 83 9c 00 00 00    	mov    0x9c(%rbx),%eax
    f531:	5f                   	pop    %rdi
    f532:	c7 43 30 01 00 00 00 	movl   $0x1,0x30(%rbx)
    f539:	41 58                	pop    %r8
    f53b:	89 43 34             	mov    %eax,0x34(%rbx)
    f53e:	0f b7 83 90 00 00 00 	movzwl 0x90(%rbx),%eax
    f545:	89 43 38             	mov    %eax,0x38(%rbx)
    f548:	0f b7 83 92 00 00 00 	movzwl 0x92(%rbx),%eax
    f54f:	89 43 3c             	mov    %eax,0x3c(%rbx)
    f552:	8b 83 94 00 00 00    	mov    0x94(%rbx),%eax
    f558:	48 89 43 40          	mov    %rax,0x40(%rbx)
    f55c:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    f563:	48 89 43 48          	mov    %rax,0x48(%rbx)
    f567:	0f b6 83 98 00 00 00 	movzbl 0x98(%rbx),%eax
    f56e:	89 43 50             	mov    %eax,0x50(%rbx)
    f571:	48 8d 43 58          	lea    0x58(%rbx),%rax
    f575:	48 89 43 58          	mov    %rax,0x58(%rbx)
    f579:	48 89 43 60          	mov    %rax,0x60(%rbx)
    f57d:	48 8d 43 68          	lea    0x68(%rbx),%rax
    f581:	48 89 43 68          	mov    %rax,0x68(%rbx)
    f585:	48 89 43 70          	mov    %rax,0x70(%rbx)
    f589:	31 c0                	xor    %eax,%eax
    f58b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    f590:	48 2b 15 b9 aa 01 00 	sub    0x1aab9(%rip),%rdx        # 2a050 <__stack_chk_guard>
    f597:	74 05                	je     f59e <pci_read_config+0x1cb>
    f599:	e8 c2 34 ff ff       	call   2a60 <__stack_chk_fail>
    f59e:	48 83 c4 10          	add    $0x10,%rsp
    f5a2:	5b                   	pop    %rbx
    f5a3:	5d                   	pop    %rbp
    f5a4:	41 5c                	pop    %r12
    f5a6:	c3                   	ret    

000000000000f5a7 <pci_find_next>:
    f5a7:	f3 0f 1e fa          	endbr64 
    f5ab:	83 3d aa a7 01 00 00 	cmpl   $0x0,0x1a7aa(%rip)        # 29d5c <end.0>
    f5b2:	41 54                	push   %r12
    f5b4:	55                   	push   %rbp
    f5b5:	53                   	push   %rbx
    f5b6:	74 17                	je     f5cf <pci_find_next+0x28>
    f5b8:	48 89 fd             	mov    %rdi,%rbp
    f5bb:	89 f3                	mov    %esi,%ebx
    f5bd:	41 bc b8 00 00 00    	mov    $0xb8,%r12d
    f5c3:	eb 02                	jmp    f5c7 <pci_find_next+0x20>
    f5c5:	ff c3                	inc    %ebx
    f5c7:	39 1d 8f a7 01 00    	cmp    %ebx,0x1a78f(%rip)        # 29d5c <end.0>
    f5cd:	77 07                	ja     f5d6 <pci_find_next+0x2f>
    f5cf:	b8 79 bf fb d3       	mov    $0xd3fbbf79,%eax
    f5d4:	eb 1e                	jmp    f5f4 <pci_find_next+0x4d>
    f5d6:	48 89 ef             	mov    %rbp,%rdi
    f5d9:	4c 89 e1             	mov    %r12,%rcx
    f5dc:	31 c0                	xor    %eax,%eax
    f5de:	f3 aa                	rep stos %al,%es:(%rdi)
    f5e0:	89 9d 9c 00 00 00    	mov    %ebx,0x9c(%rbp)
    f5e6:	48 89 ef             	mov    %rbp,%rdi
    f5e9:	e8 e5 fd ff ff       	call   f3d3 <pci_read_config>
    f5ee:	85 c0                	test   %eax,%eax
    f5f0:	75 d3                	jne    f5c5 <pci_find_next+0x1e>
    f5f2:	89 d8                	mov    %ebx,%eax
    f5f4:	5b                   	pop    %rbx
    f5f5:	5d                   	pop    %rbp
    f5f6:	41 5c                	pop    %r12
    f5f8:	c3                   	ret    

000000000000f5f9 <pci_find_driver>:
    f5f9:	f3 0f 1e fa          	endbr64 
    f5fd:	48 8d 05 44 98 01 00 	lea    0x19844(%rip),%rax        # 28e48 <intel_driver>
    f604:	4c 8d 05 65 98 01 00 	lea    0x19865(%rip),%r8        # 28e70 <net_process>
    f60b:	4c 39 c0             	cmp    %r8,%rax
    f60e:	73 68                	jae    f678 <pci_find_driver+0x7f>
    f610:	8b 50 0c             	mov    0xc(%rax),%edx
    f613:	33 97 94 00 00 00    	xor    0x94(%rdi),%edx
    f619:	23 50 10             	and    0x10(%rax),%edx
    f61c:	75 54                	jne    f672 <pci_find_driver+0x79>
    f61e:	44 8b 48 08          	mov    0x8(%rax),%r9d
    f622:	31 c9                	xor    %ecx,%ecx
    f624:	41 39 c9             	cmp    %ecx,%r9d
    f627:	76 49                	jbe    f672 <pci_find_driver+0x79>
    f629:	48 6b d1 18          	imul   $0x18,%rcx,%rdx
    f62d:	48 03 10             	add    (%rax),%rdx
    f630:	8b 72 08             	mov    0x8(%rdx),%esi
    f633:	66 83 fe ff          	cmp    $0xffff,%si
    f637:	74 09                	je     f642 <pci_find_driver+0x49>
    f639:	66 3b b7 90 00 00 00 	cmp    0x90(%rdi),%si
    f640:	75 2b                	jne    f66d <pci_find_driver+0x74>
    f642:	66 8b 72 0a          	mov    0xa(%rdx),%si
    f646:	66 83 fe ff          	cmp    $0xffff,%si
    f64a:	75 18                	jne    f664 <pci_find_driver+0x6b>
    f64c:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
    f653:	48 8b 02             	mov    (%rdx),%rax
    f656:	48 89 97 b0 00 00 00 	mov    %rdx,0xb0(%rdi)
    f65d:	48 89 47 28          	mov    %rax,0x28(%rdi)
    f661:	31 c0                	xor    %eax,%eax
    f663:	c3                   	ret    
    f664:	66 3b b7 92 00 00 00 	cmp    0x92(%rdi),%si
    f66b:	74 df                	je     f64c <pci_find_driver+0x53>
    f66d:	48 ff c1             	inc    %rcx
    f670:	eb b2                	jmp    f624 <pci_find_driver+0x2b>
    f672:	48 83 c0 28          	add    $0x28,%rax
    f676:	eb 93                	jmp    f60b <pci_find_driver+0x12>
    f678:	b8 72 bf fb d2       	mov    $0xd2fbbf72,%eax
    f67d:	c3                   	ret    

000000000000f67e <pci_probe>:
    f67e:	f3 0f 1e fa          	endbr64 
    f682:	48 8b 87 a0 00 00 00 	mov    0xa0(%rdi),%rax
    f689:	ff 60 18             	jmp    *0x18(%rax)

000000000000f68c <pci_remove>:
    f68c:	f3 0f 1e fa          	endbr64 
    f690:	48 8b 87 a0 00 00 00 	mov    0xa0(%rdi),%rax
    f697:	ff 60 20             	jmp    *0x20(%rax)

000000000000f69a <pcibus_remove>:
    f69a:	f3 0f 1e fa          	endbr64 
    f69e:	41 54                	push   %r12
    f6a0:	4c 8d 67 68          	lea    0x68(%rdi),%r12
    f6a4:	55                   	push   %rbp
    f6a5:	53                   	push   %rbx
    f6a6:	48 8b 47 68          	mov    0x68(%rdi),%rax
    f6aa:	48 8b 18             	mov    (%rax),%rbx
    f6ad:	48 8d 68 a8          	lea    -0x58(%rax),%rbp
    f6b1:	48 83 eb 58          	sub    $0x58,%rbx
    f6b5:	48 8d 45 58          	lea    0x58(%rbp),%rax
    f6b9:	4c 39 e0             	cmp    %r12,%rax
    f6bc:	74 2c                	je     f6ea <pcibus_remove+0x50>
    f6be:	48 89 ef             	mov    %rbp,%rdi
    f6c1:	e8 c6 ff ff ff       	call   f68c <pci_remove>
    f6c6:	48 8b 45 60          	mov    0x60(%rbp),%rax
    f6ca:	48 8b 55 58          	mov    0x58(%rbp),%rdx
    f6ce:	48 89 ef             	mov    %rbp,%rdi
    f6d1:	48 89 dd             	mov    %rbx,%rbp
    f6d4:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f6d8:	48 89 10             	mov    %rdx,(%rax)
    f6db:	e8 42 d0 ff ff       	call   c722 <free>
    f6e0:	48 8b 43 58          	mov    0x58(%rbx),%rax
    f6e4:	48 8d 58 a8          	lea    -0x58(%rax),%rbx
    f6e8:	eb cb                	jmp    f6b5 <pcibus_remove+0x1b>
    f6ea:	5b                   	pop    %rbx
    f6eb:	5d                   	pop    %rbp
    f6ec:	41 5c                	pop    %r12
    f6ee:	c3                   	ret    

000000000000f6ef <pcibus_probe>:
    f6ef:	f3 0f 1e fa          	endbr64 
    f6f3:	41 56                	push   %r14
    f6f5:	4c 8d 77 68          	lea    0x68(%rdi),%r14
    f6f9:	41 55                	push   %r13
    f6fb:	49 89 fd             	mov    %rdi,%r13
    f6fe:	41 54                	push   %r12
    f700:	45 31 e4             	xor    %r12d,%r12d
    f703:	55                   	push   %rbp
    f704:	31 ed                	xor    %ebp,%ebp
    f706:	51                   	push   %rcx
    f707:	48 85 ed             	test   %rbp,%rbp
    f70a:	75 28                	jne    f734 <pcibus_probe+0x45>
    f70c:	bf b8 00 00 00       	mov    $0xb8,%edi
    f711:	e8 ff cf ff ff       	call   c715 <malloc>
    f716:	48 89 c5             	mov    %rax,%rbp
    f719:	48 85 c0             	test   %rax,%rax
    f71c:	75 16                	jne    f734 <pcibus_probe+0x45>
    f71e:	31 ff                	xor    %edi,%edi
    f720:	e8 fd cf ff ff       	call   c722 <free>
    f725:	4c 89 ef             	mov    %r13,%rdi
    f728:	e8 6d ff ff ff       	call   f69a <pcibus_remove>
    f72d:	b8 77 bf fb ce       	mov    $0xcefbbf77,%eax
    f732:	eb 59                	jmp    f78d <pcibus_probe+0x9e>
    f734:	44 89 e6             	mov    %r12d,%esi
    f737:	48 89 ef             	mov    %rbp,%rdi
    f73a:	e8 68 fe ff ff       	call   f5a7 <pci_find_next>
    f73f:	48 89 ef             	mov    %rbp,%rdi
    f742:	41 89 c4             	mov    %eax,%r12d
    f745:	85 c0                	test   %eax,%eax
    f747:	78 3d                	js     f786 <pcibus_probe+0x97>
    f749:	e8 ab fe ff ff       	call   f5f9 <pci_find_driver>
    f74e:	85 c0                	test   %eax,%eax
    f750:	75 2f                	jne    f781 <pcibus_probe+0x92>
    f752:	4c 89 6d 78          	mov    %r13,0x78(%rbp)
    f756:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
    f75a:	4c 89 f6             	mov    %r14,%rsi
    f75d:	e8 2f ca ff ff       	call   c191 <extern_list_add>
    f762:	48 89 ef             	mov    %rbp,%rdi
    f765:	e8 14 ff ff ff       	call   f67e <pci_probe>
    f76a:	85 c0                	test   %eax,%eax
    f76c:	74 11                	je     f77f <pcibus_probe+0x90>
    f76e:	48 8b 55 58          	mov    0x58(%rbp),%rdx
    f772:	48 8b 45 60          	mov    0x60(%rbp),%rax
    f776:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f77a:	48 89 10             	mov    %rdx,(%rax)
    f77d:	eb 02                	jmp    f781 <pcibus_probe+0x92>
    f77f:	31 ed                	xor    %ebp,%ebp
    f781:	41 ff c4             	inc    %r12d
    f784:	eb 81                	jmp    f707 <pcibus_probe+0x18>
    f786:	e8 97 cf ff ff       	call   c722 <free>
    f78b:	31 c0                	xor    %eax,%eax
    f78d:	5a                   	pop    %rdx
    f78e:	5d                   	pop    %rbp
    f78f:	41 5c                	pop    %r12
    f791:	41 5d                	pop    %r13
    f793:	41 5e                	pop    %r14
    f795:	c3                   	ret    

000000000000f796 <pci_settings_applies>:
    f796:	f3 0f 1e fa          	endbr64 
    f79a:	48 8d 05 3f 2e 01 00 	lea    0x12e3f(%rip),%rax        # 225e0 <pci_settings_scope>
    f7a1:	48 39 46 20          	cmp    %rax,0x20(%rsi)
    f7a5:	0f 94 c0             	sete   %al
    f7a8:	0f b6 c0             	movzbl %al,%eax
    f7ab:	c3                   	ret    

000000000000f7ac <pci_settings_init>:
    f7ac:	f3 0f 1e fa          	endbr64 
    f7b0:	48 8d 15 af 3f 01 00 	lea    0x13faf(%rip),%rdx        # 23766 <.LC0>
    f7b7:	31 f6                	xor    %esi,%esi
    f7b9:	48 8d 3d 20 73 01 00 	lea    0x17320(%rip),%rdi        # 26ae0 <pci_settings>
    f7c0:	e9 d5 28 00 00       	jmp    1209a <register_settings>

000000000000f7c5 <pci_settings_fetch>:
    f7c5:	f3 0f 1e fa          	endbr64 
    f7c9:	41 57                	push   %r15
    f7cb:	41 56                	push   %r14
    f7cd:	41 55                	push   %r13
    f7cf:	41 54                	push   %r12
    f7d1:	55                   	push   %rbp
    f7d2:	48 89 cd             	mov    %rcx,%rbp
    f7d5:	b9 b8 00 00 00       	mov    $0xb8,%ecx
    f7da:	53                   	push   %rbx
    f7db:	48 89 f3             	mov    %rsi,%rbx
    f7de:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    f7e5:	48 8b 76 18          	mov    0x18(%rsi),%rsi
    f7e9:	48 8b 05 60 a8 01 00 	mov    0x1a860(%rip),%rax        # 2a050 <__stack_chk_guard>
    f7f0:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    f7f7:	00 
    f7f8:	31 c0                	xor    %eax,%eax
    f7fa:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    f7ff:	89 f0                	mov    %esi,%eax
    f801:	44 0f b6 ee          	movzbl %sil,%r13d
    f805:	4c 89 ff             	mov    %r15,%rdi
    f808:	0f b6 c4             	movzbl %ah,%eax
    f80b:	4d 89 ee             	mov    %r13,%r14
    f80e:	41 89 c4             	mov    %eax,%r12d
    f811:	31 c0                	xor    %eax,%eax
    f813:	f3 aa                	rep stos %al,%es:(%rdi)
    f815:	48 c1 ee 10          	shr    $0x10,%rsi
    f819:	48 8d 04 2a          	lea    (%rdx,%rbp,1),%rax
    f81d:	45 01 ec             	add    %r13d,%r12d
    f820:	49 01 d5             	add    %rdx,%r13
    f823:	89 b4 24 ac 00 00 00 	mov    %esi,0xac(%rsp)
    f82a:	41 01 d4             	add    %edx,%r12d
    f82d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f832:	4c 39 ea             	cmp    %r13,%rdx
    f835:	74 20                	je     f857 <pci_settings_fetch+0x92>
    f837:	48 3b 54 24 08       	cmp    0x8(%rsp),%rdx
    f83c:	74 19                	je     f857 <pci_settings_fetch+0x92>
    f83e:	c6 02 ff             	movb   $0xff,(%rdx)
    f841:	48 8d 6a 01          	lea    0x1(%rdx),%rbp
    f845:	44 89 e6             	mov    %r12d,%esi
    f848:	4c 89 ff             	mov    %r15,%rdi
    f84b:	29 ee                	sub    %ebp,%esi
    f84d:	e8 3e d9 00 00       	call   1d190 <efipci_read>
    f852:	48 89 ea             	mov    %rbp,%rdx
    f855:	eb db                	jmp    f832 <pci_settings_fetch+0x6d>
    f857:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    f85c:	75 0b                	jne    f869 <pci_settings_fetch+0xa4>
    f85e:	48 8d 05 3b 98 01 00 	lea    0x1983b(%rip),%rax        # 290a0 <setting_type_hexraw>
    f865:	48 89 43 10          	mov    %rax,0x10(%rbx)
    f869:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    f870:	00 
    f871:	48 2b 05 d8 a7 01 00 	sub    0x1a7d8(%rip),%rax        # 2a050 <__stack_chk_guard>
    f878:	74 05                	je     f87f <pci_settings_fetch+0xba>
    f87a:	e8 e1 31 ff ff       	call   2a60 <__stack_chk_fail>
    f87f:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    f886:	44 89 f0             	mov    %r14d,%eax
    f889:	5b                   	pop    %rbx
    f88a:	5d                   	pop    %rbp
    f88b:	41 5c                	pop    %r12
    f88d:	41 5d                	pop    %r13
    f88f:	41 5e                	pop    %r14
    f891:	41 5f                	pop    %r15
    f893:	c3                   	ret    

000000000000f894 <pool_recycle>:
    f894:	f3 0f 1e fa          	endbr64 
    f898:	48 8d 35 f5 ff ff ff 	lea    -0xb(%rip),%rsi        # f894 <pool_recycle>
    f89f:	e9 6f a3 ff ff       	jmp    9c13 <intf_poke>

000000000000f8a4 <pool_reopen>:
    f8a4:	f3 0f 1e fa          	endbr64 
    f8a8:	48 8d 35 f5 ff ff ff 	lea    -0xb(%rip),%rsi        # f8a4 <pool_reopen>
    f8af:	e9 5f a3 ff ff       	jmp    9c13 <intf_poke>

000000000000f8b4 <pool_add>:
    f8b4:	f3 0f 1e fa          	endbr64 
    f8b8:	55                   	push   %rbp
    f8b9:	48 89 d5             	mov    %rdx,%rbp
    f8bc:	53                   	push   %rbx
    f8bd:	48 89 fb             	mov    %rdi,%rbx
    f8c0:	50                   	push   %rax
    f8c1:	e8 e1 c8 ff ff       	call   c1a7 <extern_list_add_tail>
    f8c6:	5a                   	pop    %rdx
    f8c7:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    f8cb:	48 89 ee             	mov    %rbp,%rsi
    f8ce:	5b                   	pop    %rbx
    f8cf:	5d                   	pop    %rbp
    f8d0:	e9 69 0a 00 00       	jmp    1033e <start_timer_fixed>

000000000000f8d5 <pool_del>:
    f8d5:	f3 0f 1e fa          	endbr64 
    f8d9:	53                   	push   %rbx
    f8da:	48 8b 17             	mov    (%rdi),%rdx
    f8dd:	48 89 fb             	mov    %rdi,%rbx
    f8e0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f8e4:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f8e8:	48 89 10             	mov    %rdx,(%rax)
    f8eb:	48 89 3f             	mov    %rdi,(%rdi)
    f8ee:	48 89 7f 08          	mov    %rdi,0x8(%rdi)
    f8f2:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
    f8f6:	e8 b1 0a 00 00       	call   103ac <stop_timer>
    f8fb:	c7 43 68 02 00 00 00 	movl   $0x2,0x68(%rbx)
    f902:	5b                   	pop    %rbx
    f903:	c3                   	ret    

000000000000f904 <pool_expired>:
    f904:	f3 0f 1e fa          	endbr64 
    f908:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
    f90c:	48 8b 57 f0          	mov    -0x10(%rdi),%rdx
    f910:	4c 8d 47 f0          	lea    -0x10(%rdi),%r8
    f914:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f918:	48 89 10             	mov    %rdx,(%rax)
    f91b:	48 8b 47 50          	mov    0x50(%rdi),%rax
    f91f:	4c 89 47 f0          	mov    %r8,-0x10(%rdi)
    f923:	4c 89 47 f8          	mov    %r8,-0x8(%rdi)
    f927:	4c 89 c7             	mov    %r8,%rdi
    f92a:	ff e0                	jmp    *%rax

000000000000f92c <_printw_handler>:
    f92c:	f3 0f 1e fa          	endbr64 
    f930:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    f934:	31 d2                	xor    %edx,%edx
    f936:	0b 77 08             	or     0x8(%rdi),%esi
    f939:	e9 d0 db ff ff       	jmp    d50e <_wputch>

000000000000f93e <waddnstr>:
    f93e:	f3 0f 1e fa          	endbr64 
    f942:	50                   	push   %rax
    f943:	89 d1                	mov    %edx,%ecx
    f945:	31 d2                	xor    %edx,%edx
    f947:	e8 30 dc ff ff       	call   d57c <_wputstr>
    f94c:	31 c0                	xor    %eax,%eax
    f94e:	5a                   	pop    %rdx
    f94f:	c3                   	ret    

000000000000f950 <vw_printw>:
    f950:	f3 0f 1e fa          	endbr64 
    f954:	48 83 ec 28          	sub    $0x28,%rsp
    f958:	48 8b 05 f1 a6 01 00 	mov    0x1a6f1(%rip),%rax        # 2a050 <__stack_chk_guard>
    f95f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f964:	31 c0                	xor    %eax,%eax
    f966:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    f96b:	48 89 e7             	mov    %rsp,%rdi
    f96e:	48 8d 05 b7 ff ff ff 	lea    -0x49(%rip),%rax        # f92c <_printw_handler>
    f975:	48 89 04 24          	mov    %rax,(%rsp)
    f979:	e8 55 73 00 00       	call   16cd3 <vcprintf>
    f97e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    f983:	48 2b 05 c6 a6 01 00 	sub    0x1a6c6(%rip),%rax        # 2a050 <__stack_chk_guard>
    f98a:	74 05                	je     f991 <vw_printw+0x41>
    f98c:	e8 cf 30 ff ff       	call   2a60 <__stack_chk_fail>
    f991:	31 c0                	xor    %eax,%eax
    f993:	48 83 c4 28          	add    $0x28,%rsp
    f997:	c3                   	ret    

000000000000f998 <wprintw>:
    f998:	f3 0f 1e fa          	endbr64 
    f99c:	48 83 ec 58          	sub    $0x58,%rsp
    f9a0:	48 8b 05 a9 a6 01 00 	mov    0x1a6a9(%rip),%rax        # 2a050 <__stack_chk_guard>
    f9a7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f9ac:	31 c0                	xor    %eax,%eax
    f9ae:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    f9b3:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    f9b8:	48 89 e2             	mov    %rsp,%rdx
    f9bb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f9c0:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    f9c5:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    f9ca:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    f9cf:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    f9d4:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
    f9db:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    f9e0:	e8 6b ff ff ff       	call   f950 <vw_printw>
    f9e5:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    f9ea:	48 2b 15 5f a6 01 00 	sub    0x1a65f(%rip),%rdx        # 2a050 <__stack_chk_guard>
    f9f1:	74 05                	je     f9f8 <wprintw+0x60>
    f9f3:	e8 68 30 ff ff       	call   2a60 <__stack_chk_fail>
    f9f8:	48 83 c4 58          	add    $0x58,%rsp
    f9fc:	c3                   	ret    

000000000000f9fd <process_object>:
    f9fd:	f3 0f 1e fa          	endbr64 
    fa01:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    fa05:	48 89 f8             	mov    %rdi,%rax
    fa08:	48 2b 42 08          	sub    0x8(%rdx),%rax
    fa0c:	c3                   	ret    

000000000000fa0d <process_add>:
    fa0d:	f3 0f 1e fa          	endbr64 
    fa11:	48 39 3f             	cmp    %rdi,(%rdi)
    fa14:	75 1d                	jne    fa33 <process_add+0x26>
    fa16:	55                   	push   %rbp
    fa17:	48 89 fd             	mov    %rdi,%rbp
    fa1a:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    fa1e:	e8 eb 04 00 00       	call   ff0e <ref_increment>
    fa23:	48 89 ef             	mov    %rbp,%rdi
    fa26:	48 8d 35 43 71 01 00 	lea    0x17143(%rip),%rsi        # 26b70 <run_queue>
    fa2d:	5d                   	pop    %rbp
    fa2e:	e9 74 c7 ff ff       	jmp    c1a7 <extern_list_add_tail>
    fa33:	c3                   	ret    

000000000000fa34 <init_processes>:
    fa34:	f3 0f 1e fa          	endbr64 
    fa38:	55                   	push   %rbp
    fa39:	48 8d 2d 70 94 01 00 	lea    0x19470(%rip),%rbp        # 28eb0 <__table_entries.0>
    fa40:	53                   	push   %rbx
    fa41:	48 8d 1d 28 94 01 00 	lea    0x19428(%rip),%rbx        # 28e70 <net_process>
    fa48:	52                   	push   %rdx
    fa49:	48 39 eb             	cmp    %rbp,%rbx
    fa4c:	73 0e                	jae    fa5c <init_processes+0x28>
    fa4e:	48 89 df             	mov    %rbx,%rdi
    fa51:	48 83 c3 20          	add    $0x20,%rbx
    fa55:	e8 b3 ff ff ff       	call   fa0d <process_add>
    fa5a:	eb ed                	jmp    fa49 <init_processes+0x15>
    fa5c:	58                   	pop    %rax
    fa5d:	5b                   	pop    %rbx
    fa5e:	5d                   	pop    %rbp
    fa5f:	c3                   	ret    

000000000000fa60 <process_del>:
    fa60:	f3 0f 1e fa          	endbr64 
    fa64:	48 8b 07             	mov    (%rdi),%rax
    fa67:	48 39 f8             	cmp    %rdi,%rax
    fa6a:	74 1b                	je     fa87 <process_del+0x27>
    fa6c:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    fa70:	48 89 50 08          	mov    %rdx,0x8(%rax)
    fa74:	48 89 02             	mov    %rax,(%rdx)
    fa77:	48 89 3f             	mov    %rdi,(%rdi)
    fa7a:	48 89 7f 08          	mov    %rdi,0x8(%rdi)
    fa7e:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    fa82:	e9 93 04 00 00       	jmp    ff1a <ref_decrement>
    fa87:	c3                   	ret    

000000000000fa88 <step>:
    fa88:	f3 0f 1e fa          	endbr64 
    fa8c:	41 55                	push   %r13
    fa8e:	4c 8d 2d db 70 01 00 	lea    0x170db(%rip),%r13        # 26b70 <run_queue>
    fa95:	41 54                	push   %r12
    fa97:	55                   	push   %rbp
    fa98:	53                   	push   %rbx
    fa99:	51                   	push   %rcx
    fa9a:	48 8b 1d cf 70 01 00 	mov    0x170cf(%rip),%rbx        # 26b70 <run_queue>
    faa1:	4c 39 eb             	cmp    %r13,%rbx
    faa4:	74 5a                	je     fb00 <step+0x78>
    faa6:	48 85 db             	test   %rbx,%rbx
    faa9:	74 55                	je     fb00 <step+0x78>
    faab:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    faaf:	e8 5a 04 00 00       	call   ff0e <ref_increment>
    fab4:	4c 8b 63 10          	mov    0x10(%rbx),%r12
    fab8:	48 89 df             	mov    %rbx,%rdi
    fabb:	e8 3d ff ff ff       	call   f9fd <process_object>
    fac0:	41 83 7c 24 18 00    	cmpl   $0x0,0x18(%r12)
    fac6:	48 89 c5             	mov    %rax,%rbp
    fac9:	74 18                	je     fae3 <step+0x5b>
    facb:	48 8b 13             	mov    (%rbx),%rdx
    face:	48 8b 43 08          	mov    0x8(%rbx),%rax
    fad2:	4c 89 ee             	mov    %r13,%rsi
    fad5:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fad9:	48 89 10             	mov    %rdx,(%rax)
    fadc:	e8 c6 c6 ff ff       	call   c1a7 <extern_list_add_tail>
    fae1:	eb 05                	jmp    fae8 <step+0x60>
    fae3:	e8 78 ff ff ff       	call   fa60 <process_del>
    fae8:	48 89 ef             	mov    %rbp,%rdi
    faeb:	41 ff 54 24 10       	call   *0x10(%r12)
    faf0:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    faf4:	5a                   	pop    %rdx
    faf5:	5b                   	pop    %rbx
    faf6:	5d                   	pop    %rbp
    faf7:	41 5c                	pop    %r12
    faf9:	41 5d                	pop    %r13
    fafb:	e9 1a 04 00 00       	jmp    ff1a <ref_decrement>
    fb00:	58                   	pop    %rax
    fb01:	5b                   	pop    %rbx
    fb02:	5d                   	pop    %rbp
    fb03:	41 5c                	pop    %r12
    fb05:	41 5d                	pop    %r13
    fb07:	c3                   	ret    

000000000000fb08 <srandom>:
    fb08:	f3 0f 1e fa          	endbr64 
    fb0c:	85 ff                	test   %edi,%edi
    fb0e:	b8 04 00 00 00       	mov    $0x4,%eax
    fb13:	0f 44 f8             	cmove  %eax,%edi
    fb16:	89 3d 48 a2 01 00    	mov    %edi,0x1a248(%rip)        # 29d64 <rnd_seed>
    fb1c:	c3                   	ret    

000000000000fb1d <random>:
    fb1d:	f3 0f 1e fa          	endbr64 
    fb21:	51                   	push   %rcx
    fb22:	83 3d 3b a2 01 00 00 	cmpl   $0x0,0x1a23b(%rip)        # 29d64 <rnd_seed>
    fb29:	75 0c                	jne    fb37 <random+0x1a>
    fb2b:	e8 7d 62 00 00       	call   15dad <currticks>
    fb30:	89 c7                	mov    %eax,%edi
    fb32:	e8 d1 ff ff ff       	call   fb08 <srandom>
    fb37:	8b 05 27 a2 01 00    	mov    0x1a227(%rip),%eax        # 29d64 <rnd_seed>
    fb3d:	b9 a4 d1 00 00       	mov    $0xd1a4,%ecx
    fb42:	99                   	cltd   
    fb43:	f7 f9                	idiv   %ecx
    fb45:	69 d0 5c 2e ff ff    	imul   $0xffff2e5c,%eax,%edx
    fb4b:	03 15 13 a2 01 00    	add    0x1a213(%rip),%edx        # 29d64 <rnd_seed>
    fb51:	69 d2 4e 9c 00 00    	imul   $0x9c4e,%edx,%edx
    fb57:	69 c0 4d d0 ff ff    	imul   $0xffffd04d,%eax,%eax
    fb5d:	01 d0                	add    %edx,%eax
    fb5f:	8d 90 ab ff ff 7f    	lea    0x7fffffab(%rax),%edx
    fb65:	0f 48 c2             	cmovs  %edx,%eax
    fb68:	89 05 f6 a1 01 00    	mov    %eax,0x1a1f6(%rip)        # 29d64 <rnd_seed>
    fb6e:	48 98                	cltq   
    fb70:	5a                   	pop    %rdx
    fb71:	c3                   	ret    

000000000000fb72 <sync_console>:
    fb72:	41 57                	push   %r15
    fb74:	41 56                	push   %r14
    fb76:	41 55                	push   %r13
    fb78:	41 54                	push   %r12
    fb7a:	55                   	push   %rbp
    fb7b:	48 89 fd             	mov    %rdi,%rbp
    fb7e:	53                   	push   %rbx
    fb7f:	52                   	push   %rdx
    fb80:	8b 5f 14             	mov    0x14(%rdi),%ebx
    fb83:	48 8b 3f             	mov    (%rdi),%rdi
    fb86:	41 89 df             	mov    %ebx,%r15d
    fb89:	e8 88 3e 00 00       	call   13a16 <strlen>
    fb8e:	44 8b 6d 18          	mov    0x18(%rbp),%r13d
    fb92:	44 8b 65 10          	mov    0x10(%rbp),%r12d
    fb96:	49 89 c6             	mov    %rax,%r14
    fb99:	8b 45 1c             	mov    0x1c(%rbp),%eax
    fb9c:	44 39 eb             	cmp    %r13d,%ebx
    fb9f:	44 0f 46 eb          	cmovbe %ebx,%r13d
    fba3:	41 39 c4             	cmp    %eax,%r12d
    fba6:	44 0f 42 e0          	cmovb  %eax,%r12d
    fbaa:	45 39 fd             	cmp    %r15d,%r13d
    fbad:	73 0f                	jae    fbbe <sync_console+0x4c>
    fbaf:	bf 08 00 00 00       	mov    $0x8,%edi
    fbb4:	41 ff cf             	dec    %r15d
    fbb7:	e8 6e 97 00 00       	call   1932a <putchar>
    fbbc:	eb ec                	jmp    fbaa <sync_console+0x38>
    fbbe:	44 89 e8             	mov    %r13d,%eax
    fbc1:	31 d2                	xor    %edx,%edx
    fbc3:	29 d8                	sub    %ebx,%eax
    fbc5:	41 39 dd             	cmp    %ebx,%r13d
    fbc8:	0f 47 c2             	cmova  %edx,%eax
    fbcb:	44 8d 2c 03          	lea    (%rbx,%rax,1),%r13d
    fbcf:	4c 89 eb             	mov    %r13,%rbx
    fbd2:	45 39 ec             	cmp    %r13d,%r12d
    fbd5:	76 1d                	jbe    fbf4 <sync_console+0x82>
    fbd7:	bf 20 00 00 00       	mov    $0x20,%edi
    fbdc:	4d 39 ee             	cmp    %r13,%r14
    fbdf:	76 09                	jbe    fbea <sync_console+0x78>
    fbe1:	48 8b 45 00          	mov    0x0(%rbp),%rax
    fbe5:	42 0f be 3c 28       	movsbl (%rax,%r13,1),%edi
    fbea:	e8 3b 97 00 00       	call   1932a <putchar>
    fbef:	49 ff c5             	inc    %r13
    fbf2:	eb de                	jmp    fbd2 <sync_console+0x60>
    fbf4:	44 89 e0             	mov    %r12d,%eax
    fbf7:	31 d2                	xor    %edx,%edx
    fbf9:	29 d8                	sub    %ebx,%eax
    fbfb:	41 39 dc             	cmp    %ebx,%r12d
    fbfe:	0f 42 c2             	cmovb  %edx,%eax
    fc01:	01 c3                	add    %eax,%ebx
    fc03:	39 5d 10             	cmp    %ebx,0x10(%rbp)
    fc06:	73 0e                	jae    fc16 <sync_console+0xa4>
    fc08:	bf 08 00 00 00       	mov    $0x8,%edi
    fc0d:	ff cb                	dec    %ebx
    fc0f:	e8 16 97 00 00       	call   1932a <putchar>
    fc14:	eb ed                	jmp    fc03 <sync_console+0x91>
    fc16:	58                   	pop    %rax
    fc17:	5b                   	pop    %rbx
    fc18:	5d                   	pop    %rbp
    fc19:	41 5c                	pop    %r12
    fc1b:	41 5d                	pop    %r13
    fc1d:	41 5e                	pop    %r14
    fc1f:	41 5f                	pop    %r15
    fc21:	c3                   	ret    

000000000000fc22 <history_free>:
    fc22:	f3 0f 1e fa          	endbr64 
    fc26:	55                   	push   %rbp
    fc27:	48 8d af 80 00 00 00 	lea    0x80(%rdi),%rbp
    fc2e:	53                   	push   %rbx
    fc2f:	48 89 fb             	mov    %rdi,%rbx
    fc32:	52                   	push   %rdx
    fc33:	48 8b 3b             	mov    (%rbx),%rdi
    fc36:	48 83 c3 10          	add    $0x10,%rbx
    fc3a:	e8 e3 ca ff ff       	call   c722 <free>
    fc3f:	48 39 eb             	cmp    %rbp,%rbx
    fc42:	75 ef                	jne    fc33 <history_free+0x11>
    fc44:	58                   	pop    %rax
    fc45:	5b                   	pop    %rbx
    fc46:	5d                   	pop    %rbp
    fc47:	c3                   	ret    

000000000000fc48 <readline_history>:
    fc48:	f3 0f 1e fa          	endbr64 
    fc4c:	41 57                	push   %r15
    fc4e:	41 56                	push   %r14
    fc50:	49 89 ce             	mov    %rcx,%r14
    fc53:	41 55                	push   %r13
    fc55:	41 54                	push   %r12
    fc57:	55                   	push   %rbp
    fc58:	48 89 f5             	mov    %rsi,%rbp
    fc5b:	53                   	push   %rbx
    fc5c:	48 89 d3             	mov    %rdx,%rbx
    fc5f:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
    fc66:	48 8b 05 e3 a3 01 00 	mov    0x1a3e3(%rip),%rax        # 2a050 <__stack_chk_guard>
    fc6d:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
    fc74:	00 
    fc75:	31 c0                	xor    %eax,%eax
    fc77:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    fc7e:	48 85 ff             	test   %rdi,%rdi
    fc81:	74 0f                	je     fc92 <readline_history+0x4a>
    fc83:	48 89 fe             	mov    %rdi,%rsi
    fc86:	48 8d 3d 74 3a 01 00 	lea    0x13a74(%rip),%rdi        # 23701 <.LC0>
    fc8d:	e8 e8 75 00 00       	call   1727a <printf>
    fc92:	48 8d 3d d1 3a 01 00 	lea    0x13ad1(%rip),%rdi        # 2376a <.LC1>
    fc99:	31 c0                	xor    %eax,%eax
    fc9b:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
    fca0:	e8 d5 75 00 00       	call   1727a <printf>
    fca5:	4c 89 ef             	mov    %r13,%rdi
    fca8:	b9 20 00 00 00       	mov    $0x20,%ecx
    fcad:	31 c0                	xor    %eax,%eax
    fcaf:	f3 aa                	rep stos %al,%es:(%rdi)
    fcb1:	4c 8d 7c 24 48       	lea    0x48(%rsp),%r15
    fcb6:	c6 44 24 48 00       	movb   $0x0,0x48(%rsp)
    fcbb:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
    fcc0:	48 c7 44 24 30 00 01 	movq   $0x100,0x30(%rsp)
    fcc7:	00 00 
    fcc9:	48 85 ed             	test   %rbp,%rbp
    fccc:	74 13                	je     fce1 <readline_history+0x99>
    fcce:	48 89 ee             	mov    %rbp,%rsi
    fcd1:	4c 89 ef             	mov    %r13,%rdi
    fcd4:	e8 9c b3 00 00       	call   1b075 <replace_string>
    fcd9:	4c 89 ef             	mov    %r13,%rdi
    fcdc:	e8 91 fe ff ff       	call   fb72 <sync_console>
    fce1:	31 ff                	xor    %edi,%edi
    fce3:	e8 53 e7 00 00       	call   1e43b <getkey>
    fce8:	4c 89 ef             	mov    %r13,%rdi
    fceb:	89 c6                	mov    %eax,%esi
    fced:	e8 9a b3 00 00       	call   1b08c <edit_string>
    fcf2:	4c 89 ef             	mov    %r13,%rdi
    fcf5:	89 c5                	mov    %eax,%ebp
    fcf7:	e8 76 fe ff ff       	call   fb72 <sync_console>
    fcfc:	81 fd 41 01 00 00    	cmp    $0x141,%ebp
    fd02:	74 4a                	je     fd4e <readline_history+0x106>
    fd04:	7f 13                	jg     fd19 <readline_history+0xd1>
    fd06:	83 fd 0a             	cmp    $0xa,%ebp
    fd09:	74 20                	je     fd2b <readline_history+0xe3>
    fd0b:	83 fd 0d             	cmp    $0xd,%ebp
    fd0e:	74 1b                	je     fd2b <readline_history+0xe3>
    fd10:	83 fd 03             	cmp    $0x3,%ebp
    fd13:	74 31                	je     fd46 <readline_history+0xfe>
    fd15:	31 ed                	xor    %ebp,%ebp
    fd17:	eb 3a                	jmp    fd53 <readline_history+0x10b>
    fd19:	81 fd 42 01 00 00    	cmp    $0x142,%ebp
    fd1f:	40 0f 94 c5          	sete   %bpl
    fd23:	40 0f b6 ed          	movzbl %bpl,%ebp
    fd27:	f7 dd                	neg    %ebp
    fd29:	eb 28                	jmp    fd53 <readline_history+0x10b>
    fd2b:	4c 89 ff             	mov    %r15,%rdi
    fd2e:	45 31 e4             	xor    %r12d,%r12d
    fd31:	e8 f3 3d 00 00       	call   13b29 <strdup>
    fd36:	49 89 06             	mov    %rax,(%r14)
    fd39:	48 85 c0             	test   %rax,%rax
    fd3c:	75 56                	jne    fd94 <readline_history+0x14c>
    fd3e:	41 bc 77 1f cd ce    	mov    $0xcecd1f77,%r12d
    fd44:	eb 4e                	jmp    fd94 <readline_history+0x14c>
    fd46:	41 bc 6b 1f cd f4    	mov    $0xf4cd1f6b,%r12d
    fd4c:	eb 46                	jmp    fd94 <readline_history+0x14c>
    fd4e:	bd 01 00 00 00       	mov    $0x1,%ebp
    fd53:	85 ed                	test   %ebp,%ebp
    fd55:	74 8a                	je     fce1 <readline_history+0x99>
    fd57:	48 85 db             	test   %rbx,%rbx
    fd5a:	74 85                	je     fce1 <readline_history+0x99>
    fd5c:	8b 93 84 00 00 00    	mov    0x84(%rbx),%edx
    fd62:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax
    fd68:	01 d5                	add    %edx,%ebp
    fd6a:	29 e8                	sub    %ebp,%eax
    fd6c:	83 e0 07             	and    $0x7,%eax
    fd6f:	48 c1 e0 04          	shl    $0x4,%rax
    fd73:	48 01 d8             	add    %rbx,%rax
    fd76:	48 8b 70 08          	mov    0x8(%rax),%rsi
    fd7a:	48 85 f6             	test   %rsi,%rsi
    fd7d:	0f 85 a4 00 00 00    	jne    fe27 <readline_history+0x1df>
    fd83:	48 8b 30             	mov    (%rax),%rsi
    fd86:	48 85 f6             	test   %rsi,%rsi
    fd89:	0f 85 98 00 00 00    	jne    fe27 <readline_history+0x1df>
    fd8f:	e9 4d ff ff ff       	jmp    fce1 <readline_history+0x99>
    fd94:	bf 0a 00 00 00       	mov    $0xa,%edi
    fd99:	e8 8c 95 00 00       	call   1932a <putchar>
    fd9e:	48 85 db             	test   %rbx,%rbx
    fda1:	0f 84 e6 00 00 00    	je     fe8d <readline_history+0x245>
    fda7:	49 8b 3e             	mov    (%r14),%rdi
    fdaa:	48 85 ff             	test   %rdi,%rdi
    fdad:	74 4a                	je     fdf9 <readline_history+0x1b1>
    fdaf:	80 3f 00             	cmpb   $0x0,(%rdi)
    fdb2:	74 45                	je     fdf9 <readline_history+0x1b1>
    fdb4:	8b ab 80 00 00 00    	mov    0x80(%rbx),%ebp
    fdba:	e8 6a 3d 00 00       	call   13b29 <strdup>
    fdbf:	83 e5 07             	and    $0x7,%ebp
    fdc2:	48 c1 e5 04          	shl    $0x4,%rbp
    fdc6:	48 89 04 2b          	mov    %rax,(%rbx,%rbp,1)
    fdca:	48 85 c0             	test   %rax,%rax
    fdcd:	74 2a                	je     fdf9 <readline_history+0x1b1>
    fdcf:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax
    fdd5:	8d 68 01             	lea    0x1(%rax),%ebp
    fdd8:	89 ab 80 00 00 00    	mov    %ebp,0x80(%rbx)
    fdde:	83 e5 07             	and    $0x7,%ebp
    fde1:	48 c1 e5 04          	shl    $0x4,%rbp
    fde5:	48 01 dd             	add    %rbx,%rbp
    fde8:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    fdec:	e8 31 c9 ff ff       	call   c722 <free>
    fdf1:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    fdf8:	00 
    fdf9:	31 ed                	xor    %ebp,%ebp
    fdfb:	48 8b 7c 2b 08       	mov    0x8(%rbx,%rbp,1),%rdi
    fe00:	e8 1d c9 ff ff       	call   c722 <free>
    fe05:	48 c7 44 2b 08 00 00 	movq   $0x0,0x8(%rbx,%rbp,1)
    fe0c:	00 00 
    fe0e:	48 83 c5 10          	add    $0x10,%rbp
    fe12:	48 81 fd 80 00 00 00 	cmp    $0x80,%rbp
    fe19:	75 e0                	jne    fdfb <readline_history+0x1b3>
    fe1b:	c7 83 84 00 00 00 00 	movl   $0x0,0x84(%rbx)
    fe22:	00 00 00 
    fe25:	eb 66                	jmp    fe8d <readline_history+0x245>
    fe27:	83 fd 07             	cmp    $0x7,%ebp
    fe2a:	0f 87 b1 fe ff ff    	ja     fce1 <readline_history+0x99>
    fe30:	4c 89 ff             	mov    %r15,%rdi
    fe33:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    fe38:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    fe3c:	e8 e8 3c 00 00       	call   13b29 <strdup>
    fe41:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    fe46:	48 85 c0             	test   %rax,%rax
    fe49:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    fe4e:	74 32                	je     fe82 <readline_history+0x23a>
    fe50:	44 8b a3 80 00 00 00 	mov    0x80(%rbx),%r12d
    fe57:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    fe5b:	41 29 d4             	sub    %edx,%r12d
    fe5e:	41 83 e4 07          	and    $0x7,%r12d
    fe62:	49 c1 e4 04          	shl    $0x4,%r12
    fe66:	49 01 dc             	add    %rbx,%r12
    fe69:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    fe6e:	e8 af c8 ff ff       	call   c722 <free>
    fe73:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    fe78:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    fe7d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    fe82:	89 ab 84 00 00 00    	mov    %ebp,0x84(%rbx)
    fe88:	e9 44 fe ff ff       	jmp    fcd1 <readline_history+0x89>
    fe8d:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
    fe94:	00 
    fe95:	48 2b 05 b4 a1 01 00 	sub    0x1a1b4(%rip),%rax        # 2a050 <__stack_chk_guard>
    fe9c:	74 05                	je     fea3 <readline_history+0x25b>
    fe9e:	e8 bd 2b ff ff       	call   2a60 <__stack_chk_fail>
    fea3:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
    feaa:	44 89 e0             	mov    %r12d,%eax
    fead:	5b                   	pop    %rbx
    feae:	5d                   	pop    %rbp
    feaf:	41 5c                	pop    %r12
    feb1:	41 5d                	pop    %r13
    feb3:	41 5e                	pop    %r14
    feb5:	41 5f                	pop    %r15
    feb7:	c3                   	ret    

000000000000feb8 <reboot_exec>:
    feb8:	f3 0f 1e fa          	endbr64 
    febc:	41 54                	push   %r12
    febe:	48 8d 15 bb 6c 01 00 	lea    0x16cbb(%rip),%rdx        # 26b80 <reboot_cmd>
    fec5:	48 83 ec 10          	sub    $0x10,%rsp
    fec9:	48 8b 05 80 a1 01 00 	mov    0x1a180(%rip),%rax        # 2a050 <__stack_chk_guard>
    fed0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fed5:	31 c0                	xor    %eax,%eax
    fed7:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
    fedc:	e8 aa f3 ff ff       	call   f28b <parse_options>
    fee1:	41 89 c4             	mov    %eax,%r12d
    fee4:	85 c0                	test   %eax,%eax
    fee6:	75 09                	jne    fef1 <reboot_exec+0x39>
    fee8:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    feec:	e8 88 d7 00 00       	call   1d679 <reboot>
    fef1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    fef6:	48 2b 05 53 a1 01 00 	sub    0x1a153(%rip),%rax        # 2a050 <__stack_chk_guard>
    fefd:	74 05                	je     ff04 <reboot_exec+0x4c>
    feff:	e8 5c 2b ff ff       	call   2a60 <__stack_chk_fail>
    ff04:	48 83 c4 10          	add    $0x10,%rsp
    ff08:	44 89 e0             	mov    %r12d,%eax
    ff0b:	41 5c                	pop    %r12
    ff0d:	c3                   	ret    

000000000000ff0e <ref_increment>:
    ff0e:	f3 0f 1e fa          	endbr64 
    ff12:	48 85 ff             	test   %rdi,%rdi
    ff15:	74 02                	je     ff19 <ref_increment+0xb>
    ff17:	ff 07                	incl   (%rdi)
    ff19:	c3                   	ret    

000000000000ff1a <ref_decrement>:
    ff1a:	f3 0f 1e fa          	endbr64 
    ff1e:	48 85 ff             	test   %rdi,%rdi
    ff21:	74 1a                	je     ff3d <ref_decrement+0x23>
    ff23:	8b 07                	mov    (%rdi),%eax
    ff25:	ff c8                	dec    %eax
    ff27:	89 07                	mov    %eax,(%rdi)
    ff29:	ff c0                	inc    %eax
    ff2b:	75 10                	jne    ff3d <ref_decrement+0x23>
    ff2d:	48 8b 47 08          	mov    0x8(%rdi),%rax
    ff31:	48 85 c0             	test   %rax,%rax
    ff34:	74 02                	je     ff38 <ref_decrement+0x1e>
    ff36:	ff e0                	jmp    *%rax
    ff38:	e9 e5 c7 ff ff       	jmp    c722 <free>
    ff3d:	c3                   	ret    

000000000000ff3e <resmux_try>:
    ff3e:	48 8b 47 50          	mov    0x50(%rdi),%rax
    ff42:	4c 8d 47 30          	lea    0x30(%rdi),%r8
    ff46:	48 8d 57 58          	lea    0x58(%rdi),%rdx
    ff4a:	48 8d 77 78          	lea    0x78(%rdi),%rsi
    ff4e:	4c 89 c7             	mov    %r8,%rdi
    ff51:	48 8b 40 08          	mov    0x8(%rax),%rax
    ff55:	ff e0                	jmp    *%rax

000000000000ff57 <named_window>:
    ff57:	f3 0f 1e fa          	endbr64 
    ff5b:	31 c0                	xor    %eax,%eax
    ff5d:	c3                   	ret    

000000000000ff5e <resolv_done>:
    ff5e:	f3 0f 1e fa          	endbr64 
    ff62:	55                   	push   %rbp
    ff63:	48 89 f5             	mov    %rsi,%rbp
    ff66:	48 8d 35 f1 ff ff ff 	lea    -0xf(%rip),%rsi        # ff5e <resolv_done>
    ff6d:	53                   	push   %rbx
    ff6e:	48 83 ec 18          	sub    $0x18,%rsp
    ff72:	48 8b 05 d7 a0 01 00 	mov    0x1a0d7(%rip),%rax        # 2a050 <__stack_chk_guard>
    ff79:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ff7e:	31 c0                	xor    %eax,%eax
    ff80:	48 89 e2             	mov    %rsp,%rdx
    ff83:	e8 4d 99 ff ff       	call   98d5 <intf_get_dest_op_untyped>
    ff88:	48 85 c0             	test   %rax,%rax
    ff8b:	74 14                	je     ffa1 <resolv_done+0x43>
    ff8d:	48 8b 3c 24          	mov    (%rsp),%rdi
    ff91:	48 89 c3             	mov    %rax,%rbx
    ff94:	e8 e6 98 ff ff       	call   987f <intf_object>
    ff99:	48 89 ee             	mov    %rbp,%rsi
    ff9c:	48 89 c7             	mov    %rax,%rdi
    ff9f:	ff d3                	call   *%rbx
    ffa1:	48 8b 3c 24          	mov    (%rsp),%rdi
    ffa5:	e8 66 98 ff ff       	call   9810 <intf_put>
    ffaa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ffaf:	48 2b 05 9a a0 01 00 	sub    0x1a09a(%rip),%rax        # 2a050 <__stack_chk_guard>
    ffb6:	74 05                	je     ffbd <resolv_done+0x5f>
    ffb8:	e8 a3 2a ff ff       	call   2a60 <__stack_chk_fail>
    ffbd:	48 83 c4 18          	add    $0x18,%rsp
    ffc1:	5b                   	pop    %rbx
    ffc2:	5d                   	pop    %rbp
    ffc3:	c3                   	ret    

000000000000ffc4 <numeric_step>:
    ffc4:	f3 0f 1e fa          	endbr64 
    ffc8:	55                   	push   %rbp
    ffc9:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
    ffcd:	53                   	push   %rbx
    ffce:	48 89 fb             	mov    %rdi,%rbx
    ffd1:	52                   	push   %rdx
    ffd2:	83 7f 70 00          	cmpl   $0x0,0x70(%rdi)
    ffd6:	75 0c                	jne    ffe4 <numeric_step+0x20>
    ffd8:	48 8d 77 50          	lea    0x50(%rdi),%rsi
    ffdc:	48 89 ef             	mov    %rbp,%rdi
    ffdf:	e8 7a ff ff ff       	call   ff5e <resolv_done>
    ffe4:	8b 73 70             	mov    0x70(%rbx),%esi
    ffe7:	48 89 ef             	mov    %rbp,%rdi
    ffea:	58                   	pop    %rax
    ffeb:	5b                   	pop    %rbx
    ffec:	5d                   	pop    %rbp
    ffed:	e9 ad 99 ff ff       	jmp    999f <intf_shutdown>

000000000000fff2 <resmux_close>:
    fff2:	f3 0f 1e fa          	endbr64 
    fff6:	53                   	push   %rbx
    fff7:	48 89 fb             	mov    %rdi,%rbx
    fffa:	48 8d 7f 30          	lea    0x30(%rdi),%rdi
    fffe:	48 83 ec 10          	sub    $0x10,%rsp
   10002:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   10006:	e8 94 99 ff ff       	call   999f <intf_shutdown>
   1000b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1000f:	48 83 c4 10          	add    $0x10,%rsp
   10013:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   10017:	5b                   	pop    %rbx
   10018:	e9 82 99 ff ff       	jmp    999f <intf_shutdown>

000000000001001d <named_close>:
   1001d:	f3 0f 1e fa          	endbr64 
   10021:	e9 cc ff ff ff       	jmp    fff2 <resmux_close>

0000000000010026 <numeric_resolv>:
   10026:	f3 0f 1e fa          	endbr64 
   1002a:	41 57                	push   %r15
   1002c:	41 56                	push   %r14
   1002e:	49 89 d6             	mov    %rdx,%r14
   10031:	41 55                	push   %r13
   10033:	49 89 f5             	mov    %rsi,%r13
   10036:	41 54                	push   %r12
   10038:	49 89 fc             	mov    %rdi,%r12
   1003b:	bf 78 00 00 00       	mov    $0x78,%edi
   10040:	55                   	push   %rbp
   10041:	e8 f0 c6 ff ff       	call   c736 <zalloc>
   10046:	48 85 c0             	test   %rax,%rax
   10049:	75 07                	jne    10052 <numeric_resolv+0x2c>
   1004b:	b8 77 df f4 ce       	mov    $0xcef4df77,%eax
   10050:	eb 79                	jmp    100cb <numeric_resolv+0xa5>
   10052:	48 89 c5             	mov    %rax,%rbp
   10055:	48 8d 05 64 64 01 00 	lea    0x16464(%rip),%rax        # 264c0 <null_intf>
   1005c:	48 89 45 10          	mov    %rax,0x10(%rbp)
   10060:	48 8d 05 79 64 01 00 	lea    0x16479(%rip),%rax        # 264e0 <null_intf_desc>
   10067:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   1006b:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1006f:	4c 8d 7d 50          	lea    0x50(%rbp),%r15
   10073:	48 89 45 28          	mov    %rax,0x28(%rbp)
   10077:	48 8d 05 42 6c 01 00 	lea    0x16c42(%rip),%rax        # 26cc0 <numeric_process_desc>
   1007e:	48 89 7d 30          	mov    %rdi,0x30(%rbp)
   10082:	48 89 7d 38          	mov    %rdi,0x38(%rbp)
   10086:	48 89 45 40          	mov    %rax,0x40(%rbp)
   1008a:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   1008e:	48 89 6d 48          	mov    %rbp,0x48(%rbp)
   10092:	e8 76 f9 ff ff       	call   fa0d <process_add>
   10097:	ba 20 00 00 00       	mov    $0x20,%edx
   1009c:	4c 89 f6             	mov    %r14,%rsi
   1009f:	4c 89 ff             	mov    %r15,%rdi
   100a2:	e8 42 73 00 00       	call   173e9 <__memcpy>
   100a7:	4c 89 fe             	mov    %r15,%rsi
   100aa:	4c 89 ef             	mov    %r13,%rdi
   100ad:	e8 7a 37 00 00       	call   1382c <sock_aton>
   100b2:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   100b6:	4c 89 e6             	mov    %r12,%rsi
   100b9:	89 45 70             	mov    %eax,0x70(%rbp)
   100bc:	e8 80 97 ff ff       	call   9841 <intf_plug_plug>
   100c1:	48 89 ef             	mov    %rbp,%rdi
   100c4:	e8 51 fe ff ff       	call   ff1a <ref_decrement>
   100c9:	31 c0                	xor    %eax,%eax
   100cb:	5d                   	pop    %rbp
   100cc:	41 5c                	pop    %r12
   100ce:	41 5d                	pop    %r13
   100d0:	41 5e                	pop    %r14
   100d2:	41 5f                	pop    %r15
   100d4:	c3                   	ret    

00000000000100d5 <resmux_child_close>:
   100d5:	f3 0f 1e fa          	endbr64 
   100d9:	41 54                	push   %r12
   100db:	49 89 fc             	mov    %rdi,%r12
   100de:	48 83 c7 30          	add    $0x30,%rdi
   100e2:	48 83 ec 10          	sub    $0x10,%rsp
   100e6:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   100ea:	e8 29 98 ff ff       	call   9918 <intf_restart>
   100ef:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   100f3:	85 f6                	test   %esi,%esi
   100f5:	74 28                	je     1011f <resmux_child_close+0x4a>
   100f7:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   100fc:	48 8d 15 d5 8d 01 00 	lea    0x18dd5(%rip),%rdx        # 28ed8 <efi_root_device>
   10103:	48 83 c0 10          	add    $0x10,%rax
   10107:	49 89 44 24 50       	mov    %rax,0x50(%r12)
   1010c:	48 39 d0             	cmp    %rdx,%rax
   1010f:	73 0e                	jae    1011f <resmux_child_close+0x4a>
   10111:	4c 89 e7             	mov    %r12,%rdi
   10114:	e8 25 fe ff ff       	call   ff3e <resmux_try>
   10119:	89 c6                	mov    %eax,%esi
   1011b:	85 c0                	test   %eax,%eax
   1011d:	74 0e                	je     1012d <resmux_child_close+0x58>
   1011f:	48 83 c4 10          	add    $0x10,%rsp
   10123:	4c 89 e7             	mov    %r12,%rdi
   10126:	41 5c                	pop    %r12
   10128:	e9 c5 fe ff ff       	jmp    fff2 <resmux_close>
   1012d:	48 83 c4 10          	add    $0x10,%rsp
   10131:	41 5c                	pop    %r12
   10133:	c3                   	ret    

0000000000010134 <named_resolv_done>:
   10134:	f3 0f 1e fa          	endbr64 
   10138:	41 55                	push   %r13
   1013a:	4c 8d 6f 10          	lea    0x10(%rdi),%r13
   1013e:	41 54                	push   %r12
   10140:	49 89 f4             	mov    %rsi,%r12
   10143:	55                   	push   %rbp
   10144:	48 89 fd             	mov    %rdi,%rbp
   10147:	4c 89 ef             	mov    %r13,%rdi
   1014a:	e8 99 96 ff ff       	call   97e8 <intf_nullify>
   1014f:	83 7d 74 00          	cmpl   $0x0,0x74(%rbp)
   10153:	4c 8d 45 54          	lea    0x54(%rbp),%r8
   10157:	75 03                	jne    1015c <named_resolv_done+0x28>
   10159:	45 31 c0             	xor    %r8d,%r8d
   1015c:	8b 55 50             	mov    0x50(%rbp),%edx
   1015f:	4c 89 e1             	mov    %r12,%rcx
   10162:	be 03 00 00 00       	mov    $0x3,%esi
   10167:	4c 89 ef             	mov    %r13,%rdi
   1016a:	31 c0                	xor    %eax,%eax
   1016c:	e8 0c 76 00 00       	call   1777d <xfer_redirect>
   10171:	41 89 c4             	mov    %eax,%r12d
   10174:	85 c0                	test   %eax,%eax
   10176:	75 08                	jne    10180 <named_resolv_done+0x4c>
   10178:	4c 89 ef             	mov    %r13,%rdi
   1017b:	e8 e3 96 ff ff       	call   9863 <intf_unplug>
   10180:	44 89 e6             	mov    %r12d,%esi
   10183:	48 89 ef             	mov    %rbp,%rdi
   10186:	5d                   	pop    %rbp
   10187:	41 5c                	pop    %r12
   10189:	41 5d                	pop    %r13
   1018b:	e9 62 fe ff ff       	jmp    fff2 <resmux_close>

0000000000010190 <resolv>:
   10190:	f3 0f 1e fa          	endbr64 
   10194:	41 57                	push   %r15
   10196:	49 89 d7             	mov    %rdx,%r15
   10199:	41 56                	push   %r14
   1019b:	41 55                	push   %r13
   1019d:	49 89 fd             	mov    %rdi,%r13
   101a0:	48 89 f7             	mov    %rsi,%rdi
   101a3:	41 54                	push   %r12
   101a5:	49 89 f4             	mov    %rsi,%r12
   101a8:	55                   	push   %rbp
   101a9:	e8 68 38 00 00       	call   13a16 <strlen>
   101ae:	48 8d 78 79          	lea    0x79(%rax),%rdi
   101b2:	4c 8d 70 01          	lea    0x1(%rax),%r14
   101b6:	e8 7b c5 ff ff       	call   c736 <zalloc>
   101bb:	48 85 c0             	test   %rax,%rax
   101be:	75 0b                	jne    101cb <resolv+0x3b>
   101c0:	41 bc 77 df f4 ce    	mov    $0xcef4df77,%r12d
   101c6:	e9 8b 00 00 00       	jmp    10256 <resolv+0xc6>
   101cb:	48 89 c5             	mov    %rax,%rbp
   101ce:	48 8d 05 eb 62 01 00 	lea    0x162eb(%rip),%rax        # 264c0 <null_intf>
   101d5:	48 8d 15 64 6a 01 00 	lea    0x16a64(%rip),%rdx        # 26c40 <resmux_parent_desc>
   101dc:	48 89 45 10          	mov    %rax,0x10(%rbp)
   101e0:	48 89 45 30          	mov    %rax,0x30(%rbp)
   101e4:	48 8d 05 95 6a 01 00 	lea    0x16a95(%rip),%rax        # 26c80 <resmux_child_desc>
   101eb:	48 89 45 40          	mov    %rax,0x40(%rbp)
   101ef:	48 89 45 48          	mov    %rax,0x48(%rbp)
   101f3:	48 8d 05 be 8c 01 00 	lea    0x18cbe(%rip),%rax        # 28eb8 <numeric_resolver>
   101fa:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   101fe:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   10202:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   10206:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   1020a:	48 89 45 50          	mov    %rax,0x50(%rbp)
   1020e:	4d 85 ff             	test   %r15,%r15
   10211:	74 11                	je     10224 <resolv+0x94>
   10213:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
   10217:	ba 20 00 00 00       	mov    $0x20,%edx
   1021c:	4c 89 fe             	mov    %r15,%rsi
   1021f:	e8 c5 71 00 00       	call   173e9 <__memcpy>
   10224:	4c 89 e6             	mov    %r12,%rsi
   10227:	48 8d 7d 78          	lea    0x78(%rbp),%rdi
   1022b:	4c 89 f2             	mov    %r14,%rdx
   1022e:	e8 b6 71 00 00       	call   173e9 <__memcpy>
   10233:	48 89 ef             	mov    %rbp,%rdi
   10236:	e8 03 fd ff ff       	call   ff3e <resmux_try>
   1023b:	41 89 c4             	mov    %eax,%r12d
   1023e:	85 c0                	test   %eax,%eax
   10240:	75 0c                	jne    1024e <resolv+0xbe>
   10242:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   10246:	4c 89 ee             	mov    %r13,%rsi
   10249:	e8 f3 95 ff ff       	call   9841 <intf_plug_plug>
   1024e:	48 89 ef             	mov    %rbp,%rdi
   10251:	e8 c4 fc ff ff       	call   ff1a <ref_decrement>
   10256:	5d                   	pop    %rbp
   10257:	44 89 e0             	mov    %r12d,%eax
   1025a:	41 5c                	pop    %r12
   1025c:	41 5d                	pop    %r13
   1025e:	41 5e                	pop    %r14
   10260:	41 5f                	pop    %r15
   10262:	c3                   	ret    

0000000000010263 <xfer_open_named_socket>:
   10263:	f3 0f 1e fa          	endbr64 
   10267:	41 57                	push   %r15
   10269:	49 89 d7             	mov    %rdx,%r15
   1026c:	41 56                	push   %r14
   1026e:	49 89 ce             	mov    %rcx,%r14
   10271:	41 55                	push   %r13
   10273:	49 89 fd             	mov    %rdi,%r13
   10276:	bf 78 00 00 00       	mov    $0x78,%edi
   1027b:	41 54                	push   %r12
   1027d:	4d 89 c4             	mov    %r8,%r12
   10280:	55                   	push   %rbp
   10281:	53                   	push   %rbx
   10282:	89 f3                	mov    %esi,%ebx
   10284:	48 83 ec 18          	sub    $0x18,%rsp
   10288:	e8 a9 c4 ff ff       	call   c736 <zalloc>
   1028d:	48 85 c0             	test   %rax,%rax
   10290:	75 0b                	jne    1029d <xfer_open_named_socket+0x3a>
   10292:	41 bc 77 df f4 ce    	mov    $0xcef4df77,%r12d
   10298:	e9 8f 00 00 00       	jmp    1032c <xfer_open_named_socket+0xc9>
   1029d:	48 89 c5             	mov    %rax,%rbp
   102a0:	48 8d 05 19 62 01 00 	lea    0x16219(%rip),%rax        # 264c0 <null_intf>
   102a7:	48 8d 15 52 69 01 00 	lea    0x16952(%rip),%rdx        # 26c00 <named_xfer_desc>
   102ae:	48 89 45 10          	mov    %rax,0x10(%rbp)
   102b2:	4c 8d 45 30          	lea    0x30(%rbp),%r8
   102b6:	48 89 45 30          	mov    %rax,0x30(%rbp)
   102ba:	48 8d 05 ff 68 01 00 	lea    0x168ff(%rip),%rax        # 26bc0 <named_resolv_desc>
   102c1:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   102c5:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   102c9:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   102cd:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   102d1:	48 89 45 40          	mov    %rax,0x40(%rbp)
   102d5:	48 89 45 48          	mov    %rax,0x48(%rbp)
   102d9:	89 5d 50             	mov    %ebx,0x50(%rbp)
   102dc:	4d 85 e4             	test   %r12,%r12
   102df:	74 22                	je     10303 <xfer_open_named_socket+0xa0>
   102e1:	48 8d 7d 54          	lea    0x54(%rbp),%rdi
   102e5:	ba 20 00 00 00       	mov    $0x20,%edx
   102ea:	4c 89 e6             	mov    %r12,%rsi
   102ed:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   102f2:	e8 f2 70 00 00       	call   173e9 <__memcpy>
   102f7:	c7 45 74 01 00 00 00 	movl   $0x1,0x74(%rbp)
   102fe:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   10303:	4c 89 fa             	mov    %r15,%rdx
   10306:	4c 89 f6             	mov    %r14,%rsi
   10309:	4c 89 c7             	mov    %r8,%rdi
   1030c:	e8 7f fe ff ff       	call   10190 <resolv>
   10311:	41 89 c4             	mov    %eax,%r12d
   10314:	85 c0                	test   %eax,%eax
   10316:	75 0c                	jne    10324 <xfer_open_named_socket+0xc1>
   10318:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   1031c:	4c 89 ee             	mov    %r13,%rsi
   1031f:	e8 1d 95 ff ff       	call   9841 <intf_plug_plug>
   10324:	48 89 ef             	mov    %rbp,%rdi
   10327:	e8 ee fb ff ff       	call   ff1a <ref_decrement>
   1032c:	48 83 c4 18          	add    $0x18,%rsp
   10330:	44 89 e0             	mov    %r12d,%eax
   10333:	5b                   	pop    %rbx
   10334:	5d                   	pop    %rbp
   10335:	41 5c                	pop    %r12
   10337:	41 5d                	pop    %r13
   10339:	41 5e                	pop    %r14
   1033b:	41 5f                	pop    %r15
   1033d:	c3                   	ret    

000000000001033e <start_timer_fixed>:
   1033e:	f3 0f 1e fa          	endbr64 
   10342:	55                   	push   %rbp
   10343:	48 89 f5             	mov    %rsi,%rbp
   10346:	53                   	push   %rbx
   10347:	48 89 fb             	mov    %rdi,%rbx
   1034a:	52                   	push   %rdx
   1034b:	83 7f 10 00          	cmpl   $0x0,0x10(%rdi)
   1034f:	75 1c                	jne    1036d <start_timer_fixed+0x2f>
   10351:	48 8d 35 a8 69 01 00 	lea    0x169a8(%rip),%rsi        # 26d00 <timers>
   10358:	e8 34 be ff ff       	call   c191 <extern_list_add>
   1035d:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   10361:	e8 a8 fb ff ff       	call   ff0e <ref_increment>
   10366:	c7 43 10 01 00 00 00 	movl   $0x1,0x10(%rbx)
   1036d:	e8 3b 5a 00 00       	call   15dad <currticks>
   10372:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   10376:	48 89 43 30          	mov    %rax,0x30(%rbx)
   1037a:	58                   	pop    %rax
   1037b:	5b                   	pop    %rbx
   1037c:	5d                   	pop    %rbp
   1037d:	c3                   	ret    

000000000001037e <start_timer>:
   1037e:	f3 0f 1e fa          	endbr64 
   10382:	48 8b 47 20          	mov    0x20(%rdi),%rax
   10386:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   1038a:	be 00 01 00 00       	mov    $0x100,%esi
   1038f:	48 85 c0             	test   %rax,%rax
   10392:	74 0c                	je     103a0 <start_timer+0x22>
   10394:	be 07 00 00 00       	mov    $0x7,%esi
   10399:	48 39 f0             	cmp    %rsi,%rax
   1039c:	48 0f 43 f0          	cmovae %rax,%rsi
   103a0:	48 39 d6             	cmp    %rdx,%rsi
   103a3:	48 0f 42 f2          	cmovb  %rdx,%rsi
   103a7:	e9 92 ff ff ff       	jmp    1033e <start_timer_fixed>

00000000000103ac <stop_timer>:
   103ac:	f3 0f 1e fa          	endbr64 
   103b0:	53                   	push   %rbx
   103b1:	48 89 fb             	mov    %rdi,%rbx
   103b4:	e8 f4 59 00 00       	call   15dad <currticks>
   103b9:	83 7b 10 00          	cmpl   $0x0,0x10(%rbx)
   103bd:	74 4c                	je     1040b <stop_timer+0x5f>
   103bf:	48 8b 0b             	mov    (%rbx),%rcx
   103c2:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   103c6:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   103ca:	48 89 0a             	mov    %rcx,(%rdx)
   103cd:	8b 53 38             	mov    0x38(%rbx),%edx
   103d0:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
   103d7:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   103db:	85 d2                	test   %edx,%edx
   103dd:	74 07                	je     103e6 <stop_timer+0x3a>
   103df:	ff ca                	dec    %edx
   103e1:	89 53 38             	mov    %edx,0x38(%rbx)
   103e4:	eb 1b                	jmp    10401 <stop_timer+0x55>
   103e6:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   103ea:	48 29 c8             	sub    %rcx,%rax
   103ed:	48 d1 e8             	shr    %rax
   103f0:	48 89 d6             	mov    %rdx,%rsi
   103f3:	48 c1 ee 03          	shr    $0x3,%rsi
   103f7:	48 29 f2             	sub    %rsi,%rdx
   103fa:	48 01 c2             	add    %rax,%rdx
   103fd:	48 89 53 18          	mov    %rdx,0x18(%rbx)
   10401:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   10405:	5b                   	pop    %rbx
   10406:	e9 0f fb ff ff       	jmp    ff1a <ref_decrement>
   1040b:	5b                   	pop    %rbx
   1040c:	c3                   	ret    

000000000001040d <retry_poll>:
   1040d:	f3 0f 1e fa          	endbr64 
   10411:	55                   	push   %rbp
   10412:	e8 96 59 00 00       	call   15dad <currticks>
   10417:	48 8b 15 e2 68 01 00 	mov    0x168e2(%rip),%rdx        # 26d00 <timers>
   1041e:	48 8d 35 db 68 01 00 	lea    0x168db(%rip),%rsi        # 26d00 <timers>
   10425:	48 39 f2             	cmp    %rsi,%rdx
   10428:	74 68                	je     10492 <retry_poll+0x85>
   1042a:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   1042e:	49 89 c0             	mov    %rax,%r8
   10431:	4c 2b 42 30          	sub    0x30(%rdx),%r8
   10435:	48 8b 3a             	mov    (%rdx),%rdi
   10438:	49 39 c8             	cmp    %rcx,%r8
   1043b:	72 50                	jb     1048d <retry_poll+0x80>
   1043d:	48 8b 72 28          	mov    0x28(%rdx),%rsi
   10441:	48 8b 6a 48          	mov    0x48(%rdx),%rbp
   10445:	48 85 f6             	test   %rsi,%rsi
   10448:	75 05                	jne    1044f <retry_poll+0x42>
   1044a:	be 00 28 00 00       	mov    $0x2800,%esi
   1044f:	48 8b 42 08          	mov    0x8(%rdx),%rax
   10453:	48 89 47 08          	mov    %rax,0x8(%rdi)
   10457:	48 89 38             	mov    %rdi,(%rax)
   1045a:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
   1045e:	48 89 f1             	mov    %rsi,%rcx
   10461:	48 89 d7             	mov    %rdx,%rdi
   10464:	ff 42 38             	incl   0x38(%rdx)
   10467:	48 39 f0             	cmp    %rsi,%rax
   1046a:	48 0f 46 c8          	cmovbe %rax,%rcx
   1046e:	40 0f 97 c6          	seta   %sil
   10472:	c7 42 10 00 00 00 00 	movl   $0x0,0x10(%rdx)
   10479:	40 0f b6 f6          	movzbl %sil,%esi
   1047d:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
   10481:	ff 52 40             	call   *0x40(%rdx)
   10484:	48 89 ef             	mov    %rbp,%rdi
   10487:	5d                   	pop    %rbp
   10488:	e9 8d fa ff ff       	jmp    ff1a <ref_decrement>
   1048d:	48 89 fa             	mov    %rdi,%rdx
   10490:	eb 93                	jmp    10425 <retry_poll+0x18>
   10492:	5d                   	pop    %rbp
   10493:	c3                   	ret    

0000000000010494 <retry_step>:
   10494:	f3 0f 1e fa          	endbr64 
   10498:	e9 70 ff ff ff       	jmp    1040d <retry_poll>

000000000001049d <route_exec>:
   1049d:	f3 0f 1e fa          	endbr64 
   104a1:	41 54                	push   %r12
   104a3:	48 8d 15 66 68 01 00 	lea    0x16866(%rip),%rdx        # 26d10 <route_cmd>
   104aa:	48 83 ec 10          	sub    $0x10,%rsp
   104ae:	48 8b 05 9b 9b 01 00 	mov    0x19b9b(%rip),%rax        # 2a050 <__stack_chk_guard>
   104b5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   104ba:	31 c0                	xor    %eax,%eax
   104bc:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   104c1:	e8 c5 ed ff ff       	call   f28b <parse_options>
   104c6:	41 89 c4             	mov    %eax,%r12d
   104c9:	85 c0                	test   %eax,%eax
   104cb:	75 05                	jne    104d2 <route_exec+0x35>
   104cd:	e8 7d 00 01 00       	call   2054f <route>
   104d2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   104d7:	48 2b 05 72 9b 01 00 	sub    0x19b72(%rip),%rax        # 2a050 <__stack_chk_guard>
   104de:	74 05                	je     104e5 <route_exec+0x48>
   104e0:	e8 7b 25 ff ff       	call   2a60 <__stack_chk_fail>
   104e5:	48 83 c4 10          	add    $0x10,%rsp
   104e9:	44 89 e0             	mov    %r12d,%eax
   104ec:	41 5c                	pop    %r12
   104ee:	c3                   	ret    

00000000000104ef <sanboot_core_exec>:
   104ef:	55                   	push   %rbp
   104f0:	48 89 e5             	mov    %rsp,%rbp
   104f3:	41 57                	push   %r15
   104f5:	41 89 cf             	mov    %ecx,%r15d
   104f8:	41 56                	push   %r14
   104fa:	41 89 fe             	mov    %edi,%r14d
   104fd:	41 55                	push   %r13
   104ff:	41 54                	push   %r12
   10501:	49 89 f4             	mov    %rsi,%r12
   10504:	53                   	push   %rbx
   10505:	48 83 ec 48          	sub    $0x48,%rsp
   10509:	44 89 45 ac          	mov    %r8d,-0x54(%rbp)
   1050d:	48 8b 05 3c 9b 01 00 	mov    0x19b3c(%rip),%rax        # 2a050 <__stack_chk_guard>
   10514:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   10518:	31 c0                	xor    %eax,%eax
   1051a:	48 63 c7             	movslq %edi,%rax
   1051d:	48 89 e6             	mov    %rsp,%rsi
   10520:	48 8d 0c c5 0f 00 00 	lea    0xf(,%rax,8),%rcx
   10527:	00 
   10528:	48 89 c8             	mov    %rcx,%rax
   1052b:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
   10532:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   10536:	48 29 ce             	sub    %rcx,%rsi
   10539:	48 39 f4             	cmp    %rsi,%rsp
   1053c:	74 12                	je     10550 <sanboot_core_exec+0x61>
   1053e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   10545:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1054c:	00 00 
   1054e:	eb e9                	jmp    10539 <sanboot_core_exec+0x4a>
   10550:	25 ff 0f 00 00       	and    $0xfff,%eax
   10555:	48 29 c4             	sub    %rax,%rsp
   10558:	48 85 c0             	test   %rax,%rax
   1055b:	74 06                	je     10563 <sanboot_core_exec+0x74>
   1055d:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   10563:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   10567:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   1056b:	49 89 e5             	mov    %rsp,%r13
   1056e:	31 c0                	xor    %eax,%eax
   10570:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   10574:	48 89 cf             	mov    %rcx,%rdi
   10577:	ab                   	stos   %eax,%es:(%rdi)
   10578:	ab                   	stos   %eax,%es:(%rdi)
   10579:	ab                   	stos   %eax,%es:(%rdi)
   1057a:	ab                   	stos   %eax,%es:(%rdi)
   1057b:	ab                   	stos   %eax,%es:(%rdi)
   1057c:	ab                   	stos   %eax,%es:(%rdi)
   1057d:	e8 8e 08 01 00       	call   20e10 <san_default_drive>
   10582:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   10586:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1058a:	4c 89 e6             	mov    %r12,%rsi
   1058d:	44 89 f7             	mov    %r14d,%edi
   10590:	89 45 b0             	mov    %eax,-0x50(%rbp)
   10593:	e8 b7 ea ff ff       	call   f04f <reparse_options>
   10598:	85 c0                	test   %eax,%eax
   1059a:	0f 85 94 00 00 00    	jne    10634 <sanboot_core_exec+0x145>
   105a0:	44 2b 35 e1 9a 01 00 	sub    0x19ae1(%rip),%r14d        # 2a088 <optind>
   105a7:	31 c9                	xor    %ecx,%ecx
   105a9:	89 cb                	mov    %ecx,%ebx
   105ab:	41 39 ce             	cmp    %ecx,%r14d
   105ae:	7e 2f                	jle    105df <sanboot_core_exec+0xf0>
   105b0:	89 c8                	mov    %ecx,%eax
   105b2:	03 05 d0 9a 01 00    	add    0x19ad0(%rip),%eax        # 2a088 <optind>
   105b8:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   105bc:	48 98                	cltq   
   105be:	49 8b 3c c4          	mov    (%r12,%rax,8),%rdi
   105c2:	e8 68 5f 00 00       	call   1652f <parse_uri>
   105c7:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   105cb:	49 89 44 cd 00       	mov    %rax,0x0(%r13,%rcx,8)
   105d0:	48 ff c1             	inc    %rcx
   105d3:	48 85 c0             	test   %rax,%rax
   105d6:	75 d1                	jne    105a9 <sanboot_core_exec+0xba>
   105d8:	b8 77 1f df ce       	mov    $0xcedf1f77,%eax
   105dd:	eb 37                	jmp    10616 <sanboot_core_exec+0x127>
   105df:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   105e3:	74 04                	je     105e9 <sanboot_core_exec+0xfa>
   105e5:	41 83 cf 01          	or     $0x1,%r15d
   105e9:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   105ed:	74 04                	je     105f3 <sanboot_core_exec+0x104>
   105ef:	41 83 cf 04          	or     $0x4,%r15d
   105f3:	45 85 f6             	test   %r14d,%r14d
   105f6:	75 04                	jne    105fc <sanboot_core_exec+0x10d>
   105f8:	44 0b 7d ac          	or     -0x54(%rbp),%r15d
   105fc:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   10600:	8b 4d b0             	mov    -0x50(%rbp),%ecx
   10603:	45 89 f9             	mov    %r15d,%r9d
   10606:	44 89 f2             	mov    %r14d,%edx
   10609:	4c 89 ee             	mov    %r13,%rsi
   1060c:	31 ff                	xor    %edi,%edi
   1060e:	44 89 f3             	mov    %r14d,%ebx
   10611:	e8 07 7c 00 00       	call   1821d <uriboot>
   10616:	ff cb                	dec    %ebx
   10618:	48 63 db             	movslq %ebx,%rbx
   1061b:	85 db                	test   %ebx,%ebx
   1061d:	78 15                	js     10634 <sanboot_core_exec+0x145>
   1061f:	49 8b 7c dd 00       	mov    0x0(%r13,%rbx,8),%rdi
   10624:	89 45 ac             	mov    %eax,-0x54(%rbp)
   10627:	48 ff cb             	dec    %rbx
   1062a:	e8 eb f8 ff ff       	call   ff1a <ref_decrement>
   1062f:	8b 45 ac             	mov    -0x54(%rbp),%eax
   10632:	eb e7                	jmp    1061b <sanboot_core_exec+0x12c>
   10634:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10638:	48 2b 15 11 9a 01 00 	sub    0x19a11(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1063f:	74 05                	je     10646 <sanboot_core_exec+0x157>
   10641:	e8 1a 24 ff ff       	call   2a60 <__stack_chk_fail>
   10646:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1064a:	5b                   	pop    %rbx
   1064b:	41 5c                	pop    %r12
   1064d:	41 5d                	pop    %r13
   1064f:	41 5e                	pop    %r14
   10651:	41 5f                	pop    %r15
   10653:	5d                   	pop    %rbp
   10654:	c3                   	ret    

0000000000010655 <sanunhook_exec>:
   10655:	f3 0f 1e fa          	endbr64 
   10659:	45 31 c0             	xor    %r8d,%r8d
   1065c:	b9 03 00 00 00       	mov    $0x3,%ecx
   10661:	48 8d 15 d8 66 01 00 	lea    0x166d8(%rip),%rdx        # 26d40 <sanunhook_cmd>
   10668:	e9 82 fe ff ff       	jmp    104ef <sanboot_core_exec>

000000000001066d <sanboot_exec>:
   1066d:	f3 0f 1e fa          	endbr64 
   10671:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   10677:	31 c9                	xor    %ecx,%ecx
   10679:	48 8d 15 e0 66 01 00 	lea    0x166e0(%rip),%rdx        # 26d60 <sanboot_cmd>
   10680:	e9 6a fe ff ff       	jmp    104ef <sanboot_core_exec>

0000000000010685 <sanhook_exec>:
   10685:	f3 0f 1e fa          	endbr64 
   10689:	45 31 c0             	xor    %r8d,%r8d
   1068c:	b9 06 00 00 00       	mov    $0x6,%ecx
   10691:	48 8d 15 e8 66 01 00 	lea    0x166e8(%rip),%rdx        # 26d80 <sanhook_cmd>
   10698:	e9 52 fe ff ff       	jmp    104ef <sanboot_core_exec>

000000000001069d <terminate_on_label_found>:
   1069d:	f3 0f 1e fa          	endbr64 
   106a1:	31 c0                	xor    %eax,%eax
   106a3:	85 ff                	test   %edi,%edi
   106a5:	0f 94 c0             	sete   %al
   106a8:	c3                   	ret    

00000000000106a9 <terminate_on_exit_or_failure>:
   106a9:	f3 0f 1e fa          	endbr64 
   106ad:	53                   	push   %rbx
   106ae:	89 fb                	mov    %edi,%ebx
   106b0:	bf 02 00 00 00       	mov    $0x2,%edi
   106b5:	e8 78 d7 00 00       	call   1de32 <shell_stopped>
   106ba:	09 d8                	or     %ebx,%eax
   106bc:	5b                   	pop    %rbx
   106bd:	0f 95 c0             	setne  %al
   106c0:	0f b6 c0             	movzbl %al,%eax
   106c3:	c3                   	ret    

00000000000106c4 <script_exec_line>:
   106c4:	f3 0f 1e fa          	endbr64 
   106c8:	48 89 cf             	mov    %rcx,%rdi
   106cb:	e9 7e d7 00 00       	jmp    1de4e <system>

00000000000106d0 <process_script>:
   106d0:	41 57                	push   %r15
   106d2:	41 56                	push   %r14
   106d4:	41 55                	push   %r13
   106d6:	45 31 ed             	xor    %r13d,%r13d
   106d9:	41 54                	push   %r12
   106db:	55                   	push   %rbp
   106dc:	31 ed                	xor    %ebp,%ebp
   106de:	53                   	push   %rbx
   106df:	48 89 fb             	mov    %rdi,%rbx
   106e2:	48 83 ec 28          	sub    $0x28,%rsp
   106e6:	48 c7 05 8f 96 01 00 	movq   $0x0,0x1968f(%rip)        # 29d80 <script_offset>
   106ed:	00 00 00 00 
   106f1:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   106f6:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   106fb:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   10702:	00 
   10703:	4c 8b 73 48          	mov    0x48(%rbx),%r14
   10707:	4c 8b 4b 40          	mov    0x40(%rbx),%r9
   1070b:	be 0a 00 00 00       	mov    $0xa,%esi
   10710:	4c 8b 3d 69 96 01 00 	mov    0x19669(%rip),%r15        # 29d80 <script_offset>
   10717:	4c 89 f2             	mov    %r14,%rdx
   1071a:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1071f:	4c 29 fa             	sub    %r15,%rdx
   10722:	4b 8d 3c 0f          	lea    (%r15,%r9,1),%rdi
   10726:	e8 26 32 00 00       	call   13951 <memchr>
   1072b:	49 89 c4             	mov    %rax,%r12
   1072e:	48 85 c0             	test   %rax,%rax
   10731:	74 0a                	je     1073d <process_script+0x6d>
   10733:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   10738:	4d 29 cc             	sub    %r9,%r12
   1073b:	79 03                	jns    10740 <process_script+0x70>
   1073d:	4d 89 f4             	mov    %r14,%r12
   10740:	4d 29 fc             	sub    %r15,%r12
   10743:	48 89 ef             	mov    %rbp,%rdi
   10746:	4f 8d 74 25 00       	lea    0x0(%r13,%r12,1),%r14
   1074b:	49 8d 76 01          	lea    0x1(%r14),%rsi
   1074f:	e8 c6 be ff ff       	call   c61a <realloc>
   10754:	49 89 c7             	mov    %rax,%r15
   10757:	48 85 c0             	test   %rax,%rax
   1075a:	75 0b                	jne    10767 <process_script+0x97>
   1075c:	41 bc 77 7f fd ce    	mov    $0xcefd7f77,%r12d
   10762:	e9 07 01 00 00       	jmp    1086e <process_script+0x19e>
   10767:	48 8b 73 40          	mov    0x40(%rbx),%rsi
   1076b:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
   1076f:	4c 89 e2             	mov    %r12,%rdx
   10772:	48 03 35 07 96 01 00 	add    0x19607(%rip),%rsi        # 29d80 <script_offset>
   10779:	e8 6b 6c 00 00       	call   173e9 <__memcpy>
   1077e:	48 8b 05 fb 95 01 00 	mov    0x195fb(%rip),%rax        # 29d80 <script_offset>
   10785:	49 8d 44 04 01       	lea    0x1(%r12,%rax,1),%rax
   1078a:	48 89 05 ef 95 01 00 	mov    %rax,0x195ef(%rip)        # 29d80 <script_offset>
   10791:	4d 85 f6             	test   %r14,%r14
   10794:	74 30                	je     107c6 <process_script+0xf6>
   10796:	43 80 7c 37 ff 0d    	cmpb   $0xd,-0x1(%r15,%r14,1)
   1079c:	49 8d 46 ff          	lea    -0x1(%r14),%rax
   107a0:	75 07                	jne    107a9 <process_script+0xd9>
   107a2:	48 85 c0             	test   %rax,%rax
   107a5:	75 05                	jne    107ac <process_script+0xdc>
   107a7:	eb 1f                	jmp    107c8 <process_script+0xf8>
   107a9:	4c 89 f0             	mov    %r14,%rax
   107ac:	41 80 7c 07 ff 5c    	cmpb   $0x5c,-0x1(%r15,%rax,1)
   107b2:	4c 8d 68 ff          	lea    -0x1(%rax),%r13
   107b6:	75 10                	jne    107c8 <process_script+0xf8>
   107b8:	41 bc 7e 7f fd e3    	mov    $0xe3fd7f7e,%r12d
   107be:	4c 89 fd             	mov    %r15,%rbp
   107c1:	e9 92 00 00 00       	jmp    10858 <process_script+0x188>
   107c6:	31 c0                	xor    %eax,%eax
   107c8:	41 c6 04 07 00       	movb   $0x0,(%r15,%rax,1)
   107cd:	4d 89 fc             	mov    %r15,%r12
   107d0:	41 0f be 3c 24       	movsbl (%r12),%edi
   107d5:	e8 b2 8c 00 00       	call   1948c <isspace>
   107da:	85 c0                	test   %eax,%eax
   107dc:	74 05                	je     107e3 <process_script+0x113>
   107de:	49 ff c4             	inc    %r12
   107e1:	eb ed                	jmp    107d0 <process_script+0x100>
   107e3:	45 31 ed             	xor    %r13d,%r13d
   107e6:	41 80 3c 24 3a       	cmpb   $0x3a,(%r12)
   107eb:	75 2f                	jne    1081c <process_script+0x14c>
   107ed:	4d 8d 6c 24 01       	lea    0x1(%r12),%r13
   107f2:	4d 89 ec             	mov    %r13,%r12
   107f5:	41 0f be 3c 24       	movsbl (%r12),%edi
   107fa:	40 84 ff             	test   %dil,%dil
   107fd:	74 1d                	je     1081c <process_script+0x14c>
   107ff:	e8 88 8c 00 00       	call   1948c <isspace>
   10804:	85 c0                	test   %eax,%eax
   10806:	75 05                	jne    1080d <process_script+0x13d>
   10808:	49 ff c4             	inc    %r12
   1080b:	eb e8                	jmp    107f5 <process_script+0x125>
   1080d:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   10812:	74 08                	je     1081c <process_script+0x14c>
   10814:	41 c6 04 24 00       	movb   $0x0,(%r12)
   10819:	49 ff c4             	inc    %r12
   1081c:	4c 89 e1             	mov    %r12,%rcx
   1081f:	48 89 df             	mov    %rbx,%rdi
   10822:	48 8b 34 24          	mov    (%rsp),%rsi
   10826:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1082b:	4c 89 ea             	mov    %r13,%rdx
   1082e:	ff d0                	call   *%rax
   10830:	41 89 c4             	mov    %eax,%r12d
   10833:	89 c7                	mov    %eax,%edi
   10835:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1083a:	ff d0                	call   *%rax
   1083c:	85 c0                	test   %eax,%eax
   1083e:	75 2b                	jne    1086b <process_script+0x19b>
   10840:	4c 89 ff             	mov    %r15,%rdi
   10843:	31 ed                	xor    %ebp,%ebp
   10845:	45 31 ed             	xor    %r13d,%r13d
   10848:	e8 d5 be ff ff       	call   c722 <free>
   1084d:	48 8b 05 2c 95 01 00 	mov    0x1952c(%rip),%rax        # 29d80 <script_offset>
   10854:	48 89 04 24          	mov    %rax,(%rsp)
   10858:	48 8b 05 21 95 01 00 	mov    0x19521(%rip),%rax        # 29d80 <script_offset>
   1085f:	48 39 43 48          	cmp    %rax,0x48(%rbx)
   10863:	0f 87 9a fe ff ff    	ja     10703 <process_script+0x33>
   10869:	eb 03                	jmp    1086e <process_script+0x19e>
   1086b:	4c 89 fd             	mov    %r15,%rbp
   1086e:	48 89 ef             	mov    %rbp,%rdi
   10871:	e8 ac be ff ff       	call   c722 <free>
   10876:	48 83 c4 28          	add    $0x28,%rsp
   1087a:	44 89 e0             	mov    %r12d,%eax
   1087d:	5b                   	pop    %rbx
   1087e:	5d                   	pop    %rbp
   1087f:	41 5c                	pop    %r12
   10881:	41 5d                	pop    %r13
   10883:	41 5e                	pop    %r14
   10885:	41 5f                	pop    %r15
   10887:	c3                   	ret    

0000000000010888 <script_exec>:
   10888:	f3 0f 1e fa          	endbr64 
   1088c:	41 54                	push   %r12
   1088e:	55                   	push   %rbp
   1088f:	48 89 fd             	mov    %rdi,%rbp
   10892:	53                   	push   %rbx
   10893:	e8 4f f2 00 00       	call   1fae7 <unregister_image>
   10898:	48 8b 1d e1 94 01 00 	mov    0x194e1(%rip),%rbx        # 29d80 <script_offset>
   1089f:	48 8d 15 03 fe ff ff 	lea    -0x1fd(%rip),%rdx        # 106a9 <terminate_on_exit_or_failure>
   108a6:	48 89 ef             	mov    %rbp,%rdi
   108a9:	48 8d 35 14 fe ff ff 	lea    -0x1ec(%rip),%rsi        # 106c4 <script_exec_line>
   108b0:	e8 1b fe ff ff       	call   106d0 <process_script>
   108b5:	48 83 7d 58 00       	cmpq   $0x0,0x58(%rbp)
   108ba:	48 89 1d bf 94 01 00 	mov    %rbx,0x194bf(%rip)        # 29d80 <script_offset>
   108c1:	41 89 c4             	mov    %eax,%r12d
   108c4:	75 08                	jne    108ce <script_exec+0x46>
   108c6:	48 89 ef             	mov    %rbp,%rdi
   108c9:	e8 1a f4 00 00       	call   1fce8 <register_image>
   108ce:	44 89 e0             	mov    %r12d,%eax
   108d1:	5b                   	pop    %rbx
   108d2:	5d                   	pop    %rbp
   108d3:	41 5c                	pop    %r12
   108d5:	c3                   	ret    

00000000000108d6 <script_probe>:
   108d6:	f3 0f 1e fa          	endbr64 
   108da:	55                   	push   %rbp
   108db:	48 83 ec 10          	sub    $0x10,%rsp
   108df:	48 8b 05 6a 97 01 00 	mov    0x1976a(%rip),%rax        # 2a050 <__stack_chk_guard>
   108e6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   108eb:	31 c0                	xor    %eax,%eax
   108ed:	48 83 7f 48 06       	cmpq   $0x6,0x48(%rdi)
   108f2:	77 02                	ja     108f6 <script_probe+0x20>
   108f4:	eb 40                	jmp    10936 <script_probe+0x60>
   108f6:	48 8d 6c 24 01       	lea    0x1(%rsp),%rbp
   108fb:	48 8b 77 40          	mov    0x40(%rdi),%rsi
   108ff:	48 89 ef             	mov    %rbp,%rdi
   10902:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   10903:	66 a5                	movsw  %ds:(%rsi),%es:(%rdi)
   10905:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   10906:	ba 06 00 00 00       	mov    $0x6,%edx
   1090b:	48 8d 35 d6 1c 01 00 	lea    0x11cd6(%rip),%rsi        # 225e8 <ipxe_magic.1>
   10912:	48 89 ef             	mov    %rbp,%rdi
   10915:	e8 16 30 00 00       	call   13930 <memcmp>
   1091a:	85 c0                	test   %eax,%eax
   1091c:	74 1f                	je     1093d <script_probe+0x67>
   1091e:	ba 06 00 00 00       	mov    $0x6,%edx
   10923:	48 8d 35 b7 1c 01 00 	lea    0x11cb7(%rip),%rsi        # 225e1 <gpxe_magic.0>
   1092a:	48 89 ef             	mov    %rbp,%rdi
   1092d:	e8 fe 2f 00 00       	call   13930 <memcmp>
   10932:	85 c0                	test   %eax,%eax
   10934:	74 07                	je     1093d <script_probe+0x67>
   10936:	b8 7f 7f fd d1       	mov    $0xd1fd7f7f,%eax
   1093b:	eb 10                	jmp    1094d <script_probe+0x77>
   1093d:	0f be 7c 24 07       	movsbl 0x7(%rsp),%edi
   10942:	e8 45 8b 00 00       	call   1948c <isspace>
   10947:	85 c0                	test   %eax,%eax
   10949:	74 eb                	je     10936 <script_probe+0x60>
   1094b:	31 c0                	xor    %eax,%eax
   1094d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10952:	48 2b 15 f7 96 01 00 	sub    0x196f7(%rip),%rdx        # 2a050 <__stack_chk_guard>
   10959:	74 05                	je     10960 <script_probe+0x8a>
   1095b:	e8 00 21 ff ff       	call   2a60 <__stack_chk_fail>
   10960:	48 83 c4 10          	add    $0x10,%rsp
   10964:	5d                   	pop    %rbp
   10965:	c3                   	ret    

0000000000010966 <goto_find_label>:
   10966:	f3 0f 1e fa          	endbr64 
   1096a:	48 85 d2             	test   %rdx,%rdx
   1096d:	75 06                	jne    10975 <goto_find_label+0xf>
   1096f:	b8 72 7f fd d2       	mov    $0xd2fd7f72,%eax
   10974:	c3                   	ret    
   10975:	53                   	push   %rbx
   10976:	48 8b 3d fb 93 01 00 	mov    0x193fb(%rip),%rdi        # 29d78 <goto_label>
   1097d:	48 89 f3             	mov    %rsi,%rbx
   10980:	48 89 d6             	mov    %rdx,%rsi
   10983:	e8 34 30 00 00       	call   139bc <strcmp>
   10988:	85 c0                	test   %eax,%eax
   1098a:	74 07                	je     10993 <goto_find_label+0x2d>
   1098c:	b8 72 7f fd d2       	mov    $0xd2fd7f72,%eax
   10991:	eb 07                	jmp    1099a <goto_find_label+0x34>
   10993:	48 89 1d e6 93 01 00 	mov    %rbx,0x193e6(%rip)        # 29d80 <script_offset>
   1099a:	5b                   	pop    %rbx
   1099b:	c3                   	ret    

000000000001099c <prompt_exec>:
   1099c:	f3 0f 1e fa          	endbr64 
   109a0:	41 54                	push   %r12
   109a2:	48 8d 15 57 64 01 00 	lea    0x16457(%rip),%rdx        # 26e00 <prompt_cmd>
   109a9:	53                   	push   %rbx
   109aa:	48 89 f3             	mov    %rsi,%rbx
   109ad:	48 83 ec 38          	sub    $0x38,%rsp
   109b1:	48 8b 05 98 96 01 00 	mov    0x19698(%rip),%rax        # 2a050 <__stack_chk_guard>
   109b8:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   109bd:	31 c0                	xor    %eax,%eax
   109bf:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   109c4:	e8 c2 e8 ff ff       	call   f28b <parse_options>
   109c9:	41 89 c4             	mov    %eax,%r12d
   109cc:	85 c0                	test   %eax,%eax
   109ce:	75 40                	jne    10a10 <prompt_exec+0x74>
   109d0:	48 63 05 b1 96 01 00 	movslq 0x196b1(%rip),%rax        # 2a088 <optind>
   109d7:	48 8d 3c c3          	lea    (%rbx,%rax,8),%rdi
   109db:	e8 ec d6 00 00       	call   1e0cc <concat_args>
   109e0:	48 89 c7             	mov    %rax,%rdi
   109e3:	48 85 c0             	test   %rax,%rax
   109e6:	75 08                	jne    109f0 <prompt_exec+0x54>
   109e8:	41 bc 77 7f fd ce    	mov    $0xcefd7f77,%r12d
   109ee:	eb 20                	jmp    10a10 <prompt_exec+0x74>
   109f0:	8b 54 24 18          	mov    0x18(%rsp),%edx
   109f4:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   109f9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   109fe:	e8 db fa 00 00       	call   204de <prompt>
   10a03:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   10a08:	41 89 c4             	mov    %eax,%r12d
   10a0b:	e8 12 bd ff ff       	call   c722 <free>
   10a10:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   10a15:	48 2b 05 34 96 01 00 	sub    0x19634(%rip),%rax        # 2a050 <__stack_chk_guard>
   10a1c:	74 05                	je     10a23 <prompt_exec+0x87>
   10a1e:	e8 3d 20 ff ff       	call   2a60 <__stack_chk_fail>
   10a23:	48 83 c4 38          	add    $0x38,%rsp
   10a27:	44 89 e0             	mov    %r12d,%eax
   10a2a:	5b                   	pop    %rbx
   10a2b:	41 5c                	pop    %r12
   10a2d:	c3                   	ret    

0000000000010a2e <goto_exec>:
   10a2e:	f3 0f 1e fa          	endbr64 
   10a32:	53                   	push   %rbx
   10a33:	48 8d 15 16 64 01 00 	lea    0x16416(%rip),%rdx        # 26e50 <goto_cmd>
   10a3a:	48 89 f3             	mov    %rsi,%rbx
   10a3d:	48 83 ec 20          	sub    $0x20,%rsp
   10a41:	48 8b 05 08 96 01 00 	mov    0x19608(%rip),%rax        # 2a050 <__stack_chk_guard>
   10a48:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10a4d:	31 c0                	xor    %eax,%eax
   10a4f:	48 8d 4c 24 17       	lea    0x17(%rsp),%rcx
   10a54:	e8 32 e8 ff ff       	call   f28b <parse_options>
   10a59:	85 c0                	test   %eax,%eax
   10a5b:	75 79                	jne    10ad6 <goto_exec+0xa8>
   10a5d:	48 8b 3d 44 96 01 00 	mov    0x19644(%rip),%rdi        # 2a0a8 <current_image>
   10a64:	48 85 ff             	test   %rdi,%rdi
   10a67:	75 22                	jne    10a8b <goto_exec+0x5d>
   10a69:	bf 7d 7f fd c2       	mov    $0xc2fd7f7d,%edi
   10a6e:	e8 05 2e 00 00       	call   13878 <strerror>
   10a73:	48 8d 3d 69 2d 01 00 	lea    0x12d69(%rip),%rdi        # 237e3 <.LC0>
   10a7a:	48 89 c6             	mov    %rax,%rsi
   10a7d:	31 c0                	xor    %eax,%eax
   10a7f:	e8 f6 67 00 00       	call   1727a <printf>
   10a84:	b8 7d 7f fd c2       	mov    $0xc2fd7f7d,%eax
   10a89:	eb 4b                	jmp    10ad6 <goto_exec+0xa8>
   10a8b:	48 63 05 f6 95 01 00 	movslq 0x195f6(%rip),%rax        # 2a088 <optind>
   10a92:	48 8d 15 04 fc ff ff 	lea    -0x3fc(%rip),%rdx        # 1069d <terminate_on_label_found>
   10a99:	48 8d 35 c6 fe ff ff 	lea    -0x13a(%rip),%rsi        # 10966 <goto_find_label>
   10aa0:	48 8b 04 c3          	mov    (%rbx,%rax,8),%rax
   10aa4:	48 8b 1d d5 92 01 00 	mov    0x192d5(%rip),%rbx        # 29d80 <script_offset>
   10aab:	48 89 05 c6 92 01 00 	mov    %rax,0x192c6(%rip)        # 29d78 <goto_label>
   10ab2:	e8 19 fc ff ff       	call   106d0 <process_script>
   10ab7:	85 c0                	test   %eax,%eax
   10ab9:	74 09                	je     10ac4 <goto_exec+0x96>
   10abb:	48 89 1d be 92 01 00 	mov    %rbx,0x192be(%rip)        # 29d80 <script_offset>
   10ac2:	eb 12                	jmp    10ad6 <goto_exec+0xa8>
   10ac4:	bf 01 00 00 00       	mov    $0x1,%edi
   10ac9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   10acd:	e8 55 d3 00 00       	call   1de27 <shell_stop>
   10ad2:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   10ad6:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   10adb:	48 2b 15 6e 95 01 00 	sub    0x1956e(%rip),%rdx        # 2a050 <__stack_chk_guard>
   10ae2:	74 05                	je     10ae9 <goto_exec+0xbb>
   10ae4:	e8 77 1f ff ff       	call   2a60 <__stack_chk_fail>
   10ae9:	48 83 c4 20          	add    $0x20,%rsp
   10aed:	5b                   	pop    %rbx
   10aee:	c3                   	ret    

0000000000010aef <scsicmd_read_capacity_cmd>:
   10aef:	f3 0f 1e fa          	endbr64 
   10af3:	83 bf 94 00 00 00 00 	cmpl   $0x0,0x94(%rdi)
   10afa:	48 8d 97 98 00 00 00 	lea    0x98(%rdi),%rdx
   10b01:	74 14                	je     10b17 <scsicmd_read_capacity_cmd+0x28>
   10b03:	66 c7 46 08 9e 10    	movw   $0x109e,0x8(%rsi)
   10b09:	b8 20 00 00 00       	mov    $0x20,%eax
   10b0e:	c7 46 12 00 00 00 20 	movl   $0x20000000,0x12(%rsi)
   10b15:	eb 09                	jmp    10b20 <scsicmd_read_capacity_cmd+0x31>
   10b17:	c6 46 08 25          	movb   $0x25,0x8(%rsi)
   10b1b:	b8 08 00 00 00       	mov    $0x8,%eax
   10b20:	48 89 56 28          	mov    %rdx,0x28(%rsi)
   10b24:	48 89 46 30          	mov    %rax,0x30(%rsi)
   10b28:	c3                   	ret    

0000000000010b29 <scsicmd_test_unit_ready_cmd>:
   10b29:	f3 0f 1e fa          	endbr64 
   10b2d:	c6 46 08 00          	movb   $0x0,0x8(%rsi)
   10b31:	c3                   	ret    

0000000000010b32 <scsicmd_write_cmd>:
   10b32:	f3 0f 1e fa          	endbr64 
   10b36:	8b 4f 78             	mov    0x78(%rdi),%ecx
   10b39:	48 8b 57 70          	mov    0x70(%rdi),%rdx
   10b3d:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   10b43:	48 89 c8             	mov    %rcx,%rax
   10b46:	48 01 d1             	add    %rdx,%rcx
   10b49:	4c 39 c1             	cmp    %r8,%rcx
   10b4c:	76 12                	jbe    10b60 <scsicmd_write_cmd+0x2e>
   10b4e:	48 0f ca             	bswap  %rdx
   10b51:	0f c8                	bswap  %eax
   10b53:	c6 46 08 8a          	movb   $0x8a,0x8(%rsi)
   10b57:	48 89 56 0a          	mov    %rdx,0xa(%rsi)
   10b5b:	89 46 12             	mov    %eax,0x12(%rsi)
   10b5e:	eb 0f                	jmp    10b6f <scsicmd_write_cmd+0x3d>
   10b60:	0f ca                	bswap  %edx
   10b62:	86 c4                	xchg   %al,%ah
   10b64:	c6 46 08 2a          	movb   $0x2a,0x8(%rsi)
   10b68:	89 56 0a             	mov    %edx,0xa(%rsi)
   10b6b:	66 89 46 0f          	mov    %ax,0xf(%rsi)
   10b6f:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   10b76:	48 89 46 18          	mov    %rax,0x18(%rsi)
   10b7a:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   10b81:	48 89 46 20          	mov    %rax,0x20(%rsi)
   10b85:	c3                   	ret    

0000000000010b86 <scsicmd_read_cmd>:
   10b86:	f3 0f 1e fa          	endbr64 
   10b8a:	8b 4f 78             	mov    0x78(%rdi),%ecx
   10b8d:	48 8b 57 70          	mov    0x70(%rdi),%rdx
   10b91:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   10b97:	48 89 c8             	mov    %rcx,%rax
   10b9a:	48 01 d1             	add    %rdx,%rcx
   10b9d:	4c 39 c1             	cmp    %r8,%rcx
   10ba0:	76 12                	jbe    10bb4 <scsicmd_read_cmd+0x2e>
   10ba2:	48 0f ca             	bswap  %rdx
   10ba5:	0f c8                	bswap  %eax
   10ba7:	c6 46 08 88          	movb   $0x88,0x8(%rsi)
   10bab:	48 89 56 0a          	mov    %rdx,0xa(%rsi)
   10baf:	89 46 12             	mov    %eax,0x12(%rsi)
   10bb2:	eb 0f                	jmp    10bc3 <scsicmd_read_cmd+0x3d>
   10bb4:	0f ca                	bswap  %edx
   10bb6:	86 c4                	xchg   %al,%ah
   10bb8:	c6 46 08 28          	movb   $0x28,0x8(%rsi)
   10bbc:	89 56 0a             	mov    %edx,0xa(%rsi)
   10bbf:	66 89 46 0f          	mov    %ax,0xf(%rsi)
   10bc3:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   10bca:	48 89 46 28          	mov    %rax,0x28(%rsi)
   10bce:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   10bd5:	48 89 46 30          	mov    %rax,0x30(%rsi)
   10bd9:	c3                   	ret    

0000000000010bda <scsi_command>:
   10bda:	f3 0f 1e fa          	endbr64 
   10bde:	41 55                	push   %r13
   10be0:	49 89 d5             	mov    %rdx,%r13
   10be3:	41 54                	push   %r12
   10be5:	55                   	push   %rbp
   10be6:	48 89 f5             	mov    %rsi,%rbp
   10be9:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 10bda <scsi_command>
   10bf0:	48 83 ec 10          	sub    $0x10,%rsp
   10bf4:	48 8b 05 55 94 01 00 	mov    0x19455(%rip),%rax        # 2a050 <__stack_chk_guard>
   10bfb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10c00:	31 c0                	xor    %eax,%eax
   10c02:	48 89 e2             	mov    %rsp,%rdx
   10c05:	e8 cb 8c ff ff       	call   98d5 <intf_get_dest_op_untyped>
   10c0a:	48 8b 3c 24          	mov    (%rsp),%rdi
   10c0e:	49 89 c4             	mov    %rax,%r12
   10c11:	e8 69 8c ff ff       	call   987f <intf_object>
   10c16:	4d 85 e4             	test   %r12,%r12
   10c19:	74 11                	je     10c2c <scsi_command+0x52>
   10c1b:	48 89 c7             	mov    %rax,%rdi
   10c1e:	4c 89 ea             	mov    %r13,%rdx
   10c21:	48 89 ee             	mov    %rbp,%rsi
   10c24:	41 ff d4             	call   *%r12
   10c27:	41 89 c4             	mov    %eax,%r12d
   10c2a:	eb 06                	jmp    10c32 <scsi_command+0x58>
   10c2c:	41 bc 7d bf 8f c0    	mov    $0xc08fbf7d,%r12d
   10c32:	48 8b 3c 24          	mov    (%rsp),%rdi
   10c36:	e8 d5 8b ff ff       	call   9810 <intf_put>
   10c3b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10c40:	48 2b 05 09 94 01 00 	sub    0x19409(%rip),%rax        # 2a050 <__stack_chk_guard>
   10c47:	74 05                	je     10c4e <scsi_command+0x74>
   10c49:	e8 12 1e ff ff       	call   2a60 <__stack_chk_fail>
   10c4e:	48 83 c4 10          	add    $0x10,%rsp
   10c52:	44 89 e0             	mov    %r12d,%eax
   10c55:	5d                   	pop    %rbp
   10c56:	41 5c                	pop    %r12
   10c58:	41 5d                	pop    %r13
   10c5a:	c3                   	ret    

0000000000010c5b <scsicmd_command>:
   10c5b:	41 54                	push   %r12
   10c5d:	b9 38 00 00 00       	mov    $0x38,%ecx
   10c62:	55                   	push   %rbp
   10c63:	53                   	push   %rbx
   10c64:	48 89 fb             	mov    %rdi,%rbx
   10c67:	48 83 ec 40          	sub    $0x40,%rsp
   10c6b:	48 8b 6f 10          	mov    0x10(%rdi),%rbp
   10c6f:	48 8b 05 da 93 01 00 	mov    0x193da(%rip),%rax        # 2a050 <__stack_chk_guard>
   10c76:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10c7b:	31 c0                	xor    %eax,%eax
   10c7d:	49 89 e4             	mov    %rsp,%r12
   10c80:	4c 89 e7             	mov    %r12,%rdi
   10c83:	f3 aa                	rep stos %al,%es:(%rdi)
   10c85:	48 8b 45 50          	mov    0x50(%rbp),%rax
   10c89:	4c 89 e6             	mov    %r12,%rsi
   10c8c:	48 89 df             	mov    %rbx,%rdi
   10c8f:	48 89 04 24          	mov    %rax,(%rsp)
   10c93:	48 8b 43 68          	mov    0x68(%rbx),%rax
   10c97:	ff 50 10             	call   *0x10(%rax)
   10c9a:	48 8d 73 48          	lea    0x48(%rbx),%rsi
   10c9e:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   10ca2:	4c 89 e2             	mov    %r12,%rdx
   10ca5:	e8 30 ff ff ff       	call   10bda <scsi_command>
   10caa:	85 c0                	test   %eax,%eax
   10cac:	78 08                	js     10cb6 <scsicmd_command+0x5b>
   10cae:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
   10cb4:	31 c0                	xor    %eax,%eax
   10cb6:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   10cbb:	48 2b 15 8e 93 01 00 	sub    0x1938e(%rip),%rdx        # 2a050 <__stack_chk_guard>
   10cc2:	74 05                	je     10cc9 <scsicmd_command+0x6e>
   10cc4:	e8 97 1d ff ff       	call   2a60 <__stack_chk_fail>
   10cc9:	48 83 c4 40          	add    $0x40,%rsp
   10ccd:	5b                   	pop    %rbx
   10cce:	5d                   	pop    %rbp
   10ccf:	41 5c                	pop    %r12
   10cd1:	c3                   	ret    

0000000000010cd2 <scsi_response>:
   10cd2:	f3 0f 1e fa          	endbr64 
   10cd6:	55                   	push   %rbp
   10cd7:	48 89 f5             	mov    %rsi,%rbp
   10cda:	48 8d 35 f1 ff ff ff 	lea    -0xf(%rip),%rsi        # 10cd2 <scsi_response>
   10ce1:	53                   	push   %rbx
   10ce2:	48 83 ec 18          	sub    $0x18,%rsp
   10ce6:	48 8b 05 63 93 01 00 	mov    0x19363(%rip),%rax        # 2a050 <__stack_chk_guard>
   10ced:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10cf2:	31 c0                	xor    %eax,%eax
   10cf4:	48 89 e2             	mov    %rsp,%rdx
   10cf7:	e8 d9 8b ff ff       	call   98d5 <intf_get_dest_op_untyped>
   10cfc:	48 85 c0             	test   %rax,%rax
   10cff:	74 14                	je     10d15 <scsi_response+0x43>
   10d01:	48 8b 3c 24          	mov    (%rsp),%rdi
   10d05:	48 89 c3             	mov    %rax,%rbx
   10d08:	e8 72 8b ff ff       	call   987f <intf_object>
   10d0d:	48 89 ee             	mov    %rbp,%rsi
   10d10:	48 89 c7             	mov    %rax,%rdi
   10d13:	ff d3                	call   *%rbx
   10d15:	48 8b 3c 24          	mov    (%rsp),%rdi
   10d19:	e8 f2 8a ff ff       	call   9810 <intf_put>
   10d1e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10d23:	48 2b 05 26 93 01 00 	sub    0x19326(%rip),%rax        # 2a050 <__stack_chk_guard>
   10d2a:	74 05                	je     10d31 <scsi_response+0x5f>
   10d2c:	e8 2f 1d ff ff       	call   2a60 <__stack_chk_fail>
   10d31:	48 83 c4 18          	add    $0x18,%rsp
   10d35:	5b                   	pop    %rbx
   10d36:	5d                   	pop    %rbp
   10d37:	c3                   	ret    

0000000000010d38 <scsidev_window>:
   10d38:	f3 0f 1e fa          	endbr64 
   10d3c:	f6 47 58 02          	testb  $0x2,0x58(%rdi)
   10d40:	74 09                	je     10d4b <scsidev_window+0x13>
   10d42:	48 83 c7 30          	add    $0x30,%rdi
   10d46:	e9 c9 67 00 00       	jmp    17514 <xfer_window>
   10d4b:	31 c0                	xor    %eax,%eax
   10d4d:	c3                   	ret    

0000000000010d4e <scsicmd_close>:
   10d4e:	f3 0f 1e fa          	endbr64 
   10d52:	55                   	push   %rbp
   10d53:	48 89 fd             	mov    %rdi,%rbp
   10d56:	31 c9                	xor    %ecx,%ecx
   10d58:	89 f7                	mov    %esi,%edi
   10d5a:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   10d5e:	48 8b 45 20          	mov    0x20(%rbp),%rax
   10d62:	48 8d 75 48          	lea    0x48(%rbp),%rsi
   10d66:	48 89 42 08          	mov    %rax,0x8(%rdx)
   10d6a:	48 89 10             	mov    %rdx,(%rax)
   10d6d:	48 8d 55 28          	lea    0x28(%rbp),%rdx
   10d71:	31 c0                	xor    %eax,%eax
   10d73:	e8 38 8d ff ff       	call   9ab0 <intfs_shutdown>
   10d78:	48 89 ef             	mov    %rbp,%rdi
   10d7b:	5d                   	pop    %rbp
   10d7c:	e9 99 f1 ff ff       	jmp    ff1a <ref_decrement>

0000000000010d81 <scsicmd_done>:
   10d81:	f3 0f 1e fa          	endbr64 
   10d85:	55                   	push   %rbp
   10d86:	48 89 fd             	mov    %rdi,%rbp
   10d89:	48 8d 7f 48          	lea    0x48(%rdi),%rdi
   10d8d:	48 83 ec 10          	sub    $0x10,%rsp
   10d91:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   10d95:	e8 7e 8b ff ff       	call   9918 <intf_restart>
   10d9a:	48 8b 45 68          	mov    0x68(%rbp),%rax
   10d9e:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   10da2:	48 89 ef             	mov    %rbp,%rdi
   10da5:	48 8b 40 18          	mov    0x18(%rax),%rax
   10da9:	48 83 c4 10          	add    $0x10,%rsp
   10dad:	5d                   	pop    %rbp
   10dae:	ff e0                	jmp    *%rax

0000000000010db0 <scsicmd_free>:
   10db0:	f3 0f 1e fa          	endbr64 
   10db4:	55                   	push   %rbp
   10db5:	48 89 fd             	mov    %rdi,%rbp
   10db8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   10dbc:	e8 59 f1 ff ff       	call   ff1a <ref_decrement>
   10dc1:	48 89 ef             	mov    %rbp,%rdi
   10dc4:	5d                   	pop    %rbp
   10dc5:	e9 58 b9 ff ff       	jmp    c722 <free>

0000000000010dca <scsidev_command>:
   10dca:	41 57                	push   %r15
   10dcc:	49 89 cf             	mov    %rcx,%r15
   10dcf:	41 56                	push   %r14
   10dd1:	45 89 c6             	mov    %r8d,%r14d
   10dd4:	41 55                	push   %r13
   10dd6:	49 89 f5             	mov    %rsi,%r13
   10dd9:	41 54                	push   %r12
   10ddb:	49 89 d4             	mov    %rdx,%r12
   10dde:	55                   	push   %rbp
   10ddf:	53                   	push   %rbx
   10de0:	48 89 fb             	mov    %rdi,%rbx
   10de3:	48 83 ec 18          	sub    $0x18,%rsp
   10de7:	48 8b 42 08          	mov    0x8(%rdx),%rax
   10deb:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   10df0:	48 8d b8 98 00 00 00 	lea    0x98(%rax),%rdi
   10df7:	e8 3a b9 ff ff       	call   c736 <zalloc>
   10dfc:	48 85 c0             	test   %rax,%rax
   10dff:	75 0b                	jne    10e0c <scsidev_command+0x42>
   10e01:	41 bc 77 bf 8f ce    	mov    $0xce8fbf77,%r12d
   10e07:	e9 b2 00 00 00       	jmp    10ebe <scsidev_command+0xf4>
   10e0c:	48 89 c5             	mov    %rax,%rbp
   10e0f:	48 8d 05 9a ff ff ff 	lea    -0x66(%rip),%rax        # 10db0 <scsicmd_free>
   10e16:	48 8d 0d c3 61 01 00 	lea    0x161c3(%rip),%rcx        # 26fe0 <scsicmd_block_desc>
   10e1d:	48 89 df             	mov    %rbx,%rdi
   10e20:	48 89 45 08          	mov    %rax,0x8(%rbp)
   10e24:	48 8d 05 95 56 01 00 	lea    0x15695(%rip),%rax        # 264c0 <null_intf>
   10e2b:	48 89 45 28          	mov    %rax,0x28(%rbp)
   10e2f:	48 89 45 48          	mov    %rax,0x48(%rbp)
   10e33:	48 8d 05 66 61 01 00 	lea    0x16166(%rip),%rax        # 26fa0 <scsicmd_scsi_desc>
   10e3a:	48 89 4d 38          	mov    %rcx,0x38(%rbp)
   10e3e:	48 89 4d 40          	mov    %rcx,0x40(%rbp)
   10e42:	48 89 45 58          	mov    %rax,0x58(%rbp)
   10e46:	48 89 45 60          	mov    %rax,0x60(%rbp)
   10e4a:	48 89 6d 30          	mov    %rbp,0x30(%rbp)
   10e4e:	48 89 6d 50          	mov    %rbp,0x50(%rbp)
   10e52:	e8 b7 f0 ff ff       	call   ff0e <ref_increment>
   10e57:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
   10e5b:	48 8d b3 a8 00 00 00 	lea    0xa8(%rbx),%rsi
   10e62:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   10e66:	e8 26 b3 ff ff       	call   c191 <extern_list_add>
   10e6b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10e70:	4c 89 65 68          	mov    %r12,0x68(%rbp)
   10e74:	48 89 ef             	mov    %rbp,%rdi
   10e77:	4c 89 7d 70          	mov    %r15,0x70(%rbp)
   10e7b:	48 89 85 80 00 00 00 	mov    %rax,0x80(%rbp)
   10e82:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   10e87:	44 89 75 78          	mov    %r14d,0x78(%rbp)
   10e8b:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
   10e92:	e8 c4 fd ff ff       	call   10c5b <scsicmd_command>
   10e97:	41 89 c4             	mov    %eax,%r12d
   10e9a:	85 c0                	test   %eax,%eax
   10e9c:	74 14                	je     10eb2 <scsidev_command+0xe8>
   10e9e:	48 89 ef             	mov    %rbp,%rdi
   10ea1:	89 c6                	mov    %eax,%esi
   10ea3:	e8 a6 fe ff ff       	call   10d4e <scsicmd_close>
   10ea8:	48 89 ef             	mov    %rbp,%rdi
   10eab:	e8 6a f0 ff ff       	call   ff1a <ref_decrement>
   10eb0:	eb 0c                	jmp    10ebe <scsidev_command+0xf4>
   10eb2:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
   10eb6:	4c 89 ee             	mov    %r13,%rsi
   10eb9:	e8 83 89 ff ff       	call   9841 <intf_plug_plug>
   10ebe:	48 83 c4 18          	add    $0x18,%rsp
   10ec2:	44 89 e0             	mov    %r12d,%eax
   10ec5:	5b                   	pop    %rbx
   10ec6:	5d                   	pop    %rbp
   10ec7:	41 5c                	pop    %r12
   10ec9:	41 5d                	pop    %r13
   10ecb:	41 5e                	pop    %r14
   10ecd:	41 5f                	pop    %r15
   10ecf:	c3                   	ret    

0000000000010ed0 <scsidev_read_capacity>:
   10ed0:	f3 0f 1e fa          	endbr64 
   10ed4:	48 83 ec 10          	sub    $0x10,%rsp
   10ed8:	45 31 c9             	xor    %r9d,%r9d
   10edb:	45 31 c0             	xor    %r8d,%r8d
   10ede:	31 c9                	xor    %ecx,%ecx
   10ee0:	6a 00                	push   $0x0
   10ee2:	48 8d 15 57 61 01 00 	lea    0x16157(%rip),%rdx        # 27040 <scsicmd_read_capacity>
   10ee9:	e8 dc fe ff ff       	call   10dca <scsidev_command>
   10eee:	48 83 c4 18          	add    $0x18,%rsp
   10ef2:	c3                   	ret    

0000000000010ef3 <scsidev_write>:
   10ef3:	f3 0f 1e fa          	endbr64 
   10ef7:	48 83 ec 10          	sub    $0x10,%rsp
   10efb:	41 51                	push   %r9
   10efd:	4d 89 c1             	mov    %r8,%r9
   10f00:	41 89 c8             	mov    %ecx,%r8d
   10f03:	48 89 d1             	mov    %rdx,%rcx
   10f06:	48 8d 15 53 61 01 00 	lea    0x16153(%rip),%rdx        # 27060 <scsicmd_write>
   10f0d:	e8 b8 fe ff ff       	call   10dca <scsidev_command>
   10f12:	48 83 c4 18          	add    $0x18,%rsp
   10f16:	c3                   	ret    

0000000000010f17 <scsidev_read>:
   10f17:	f3 0f 1e fa          	endbr64 
   10f1b:	48 83 ec 10          	sub    $0x10,%rsp
   10f1f:	41 51                	push   %r9
   10f21:	4d 89 c1             	mov    %r8,%r9
   10f24:	41 89 c8             	mov    %ecx,%r8d
   10f27:	48 89 d1             	mov    %rdx,%rcx
   10f2a:	48 8d 15 4f 61 01 00 	lea    0x1614f(%rip),%rdx        # 27080 <scsicmd_read>
   10f31:	e8 94 fe ff ff       	call   10dca <scsidev_command>
   10f36:	48 83 c4 18          	add    $0x18,%rsp
   10f3a:	c3                   	ret    

0000000000010f3b <scsidev_close>:
   10f3b:	f3 0f 1e fa          	endbr64 
   10f3f:	41 54                	push   %r12
   10f41:	41 89 f4             	mov    %esi,%r12d
   10f44:	55                   	push   %rbp
   10f45:	53                   	push   %rbx
   10f46:	48 89 fb             	mov    %rdi,%rbx
   10f49:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   10f4d:	e8 0e eb ff ff       	call   fa60 <process_del>
   10f52:	48 8d 4b 60          	lea    0x60(%rbx),%rcx
   10f56:	48 8d 53 30          	lea    0x30(%rbx),%rdx
   10f5a:	44 89 e7             	mov    %r12d,%edi
   10f5d:	48 8d 73 10          	lea    0x10(%rbx),%rsi
   10f61:	31 c0                	xor    %eax,%eax
   10f63:	45 31 c0             	xor    %r8d,%r8d
   10f66:	48 81 c3 a8 00 00 00 	add    $0xa8,%rbx
   10f6d:	e8 3e 8b ff ff       	call   9ab0 <intfs_shutdown>
   10f72:	48 8b 03             	mov    (%rbx),%rax
   10f75:	48 8b 28             	mov    (%rax),%rbp
   10f78:	48 8d 78 e8          	lea    -0x18(%rax),%rdi
   10f7c:	48 83 ed 18          	sub    $0x18,%rbp
   10f80:	48 8d 47 18          	lea    0x18(%rdi),%rax
   10f84:	48 39 d8             	cmp    %rbx,%rax
   10f87:	74 15                	je     10f9e <scsidev_close+0x63>
   10f89:	44 89 e6             	mov    %r12d,%esi
   10f8c:	e8 bd fd ff ff       	call   10d4e <scsicmd_close>
   10f91:	48 8b 45 18          	mov    0x18(%rbp),%rax
   10f95:	48 89 ef             	mov    %rbp,%rdi
   10f98:	48 8d 68 e8          	lea    -0x18(%rax),%rbp
   10f9c:	eb e2                	jmp    10f80 <scsidev_close+0x45>
   10f9e:	5b                   	pop    %rbx
   10f9f:	5d                   	pop    %rbp
   10fa0:	41 5c                	pop    %r12
   10fa2:	c3                   	ret    

0000000000010fa3 <scsicmd_read_capacity_done>:
   10fa3:	f3 0f 1e fa          	endbr64 
   10fa7:	55                   	push   %rbp
   10fa8:	48 89 fd             	mov    %rdi,%rbp
   10fab:	48 83 ec 20          	sub    $0x20,%rsp
   10faf:	48 8b 05 9a 90 01 00 	mov    0x1909a(%rip),%rax        # 2a050 <__stack_chk_guard>
   10fb6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10fbb:	31 c0                	xor    %eax,%eax
   10fbd:	85 f6                	test   %esi,%esi
   10fbf:	74 1c                	je     10fdd <scsicmd_read_capacity_done+0x3a>
   10fc1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10fc6:	48 2b 05 83 90 01 00 	sub    0x19083(%rip),%rax        # 2a050 <__stack_chk_guard>
   10fcd:	0f 85 9b 00 00 00    	jne    1106e <scsicmd_read_capacity_done+0xcb>
   10fd3:	48 83 c4 20          	add    $0x20,%rsp
   10fd7:	5d                   	pop    %rbp
   10fd8:	e9 71 fd ff ff       	jmp    10d4e <scsicmd_close>
   10fdd:	83 bf 94 00 00 00 00 	cmpl   $0x0,0x94(%rdi)
   10fe4:	74 22                	je     11008 <scsicmd_read_capacity_done+0x65>
   10fe6:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
   10fed:	48 0f c8             	bswap  %rax
   10ff0:	48 ff c0             	inc    %rax
   10ff3:	48 89 04 24          	mov    %rax,(%rsp)
   10ff7:	8b 87 a0 00 00 00    	mov    0xa0(%rdi),%eax
   10ffd:	0f c8                	bswap  %eax
   10fff:	89 c0                	mov    %eax,%eax
   11001:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11006:	eb 3a                	jmp    11042 <scsicmd_read_capacity_done+0x9f>
   11008:	8b 87 98 00 00 00    	mov    0x98(%rdi),%eax
   1100e:	0f c8                	bswap  %eax
   11010:	8d 50 01             	lea    0x1(%rax),%edx
   11013:	8b 87 9c 00 00 00    	mov    0x9c(%rdi),%eax
   11019:	0f c8                	bswap  %eax
   1101b:	89 c0                	mov    %eax,%eax
   1101d:	48 89 14 24          	mov    %rdx,(%rsp)
   11021:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11026:	48 85 d2             	test   %rdx,%rdx
   11029:	75 17                	jne    11042 <scsicmd_read_capacity_done+0x9f>
   1102b:	c7 87 94 00 00 00 01 	movl   $0x1,0x94(%rdi)
   11032:	00 00 00 
   11035:	e8 21 fc ff ff       	call   10c5b <scsicmd_command>
   1103a:	89 c6                	mov    %eax,%esi
   1103c:	85 c0                	test   %eax,%eax
   1103e:	74 20                	je     11060 <scsicmd_read_capacity_done+0xbd>
   11040:	eb 16                	jmp    11058 <scsicmd_read_capacity_done+0xb5>
   11042:	48 89 e6             	mov    %rsp,%rsi
   11045:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
   11049:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%rsp)
   11050:	ff 
   11051:	e8 6d 7f 00 00       	call   18fc3 <block_capacity>
   11056:	31 f6                	xor    %esi,%esi
   11058:	48 89 ef             	mov    %rbp,%rdi
   1105b:	e8 ee fc ff ff       	call   10d4e <scsicmd_close>
   11060:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   11065:	48 2b 05 e4 8f 01 00 	sub    0x18fe4(%rip),%rax        # 2a050 <__stack_chk_guard>
   1106c:	74 05                	je     11073 <scsicmd_read_capacity_done+0xd0>
   1106e:	e8 ed 19 ff ff       	call   2a60 <__stack_chk_fail>
   11073:	48 83 c4 20          	add    $0x20,%rsp
   11077:	5d                   	pop    %rbp
   11078:	c3                   	ret    

0000000000011079 <scsicmd_response>:
   11079:	f3 0f 1e fa          	endbr64 
   1107d:	80 3e 00             	cmpb   $0x0,(%rsi)
   11080:	75 04                	jne    11086 <scsicmd_response+0xd>
   11082:	31 f6                	xor    %esi,%esi
   11084:	eb 15                	jmp    1109b <scsicmd_response+0x22>
   11086:	0f b6 76 11          	movzbl 0x11(%rsi),%esi
   1108a:	c1 e6 08             	shl    $0x8,%esi
   1108d:	81 e6 00 0f 00 00    	and    $0xf00,%esi
   11093:	81 ce 98 40 70 1d    	or     $0x1d704098,%esi
   11099:	f7 de                	neg    %esi
   1109b:	e9 e1 fc ff ff       	jmp    10d81 <scsicmd_done>

00000000000110a0 <scsidev_step>:
   110a0:	f3 0f 1e fa          	endbr64 
   110a4:	f6 47 58 01          	testb  $0x1,0x58(%rdi)
   110a8:	75 47                	jne    110f1 <scsidev_step+0x51>
   110aa:	55                   	push   %rbp
   110ab:	48 89 fd             	mov    %rdi,%rbp
   110ae:	48 8d 7f 30          	lea    0x30(%rdi),%rdi
   110b2:	e8 5d 64 00 00       	call   17514 <xfer_window>
   110b7:	48 85 c0             	test   %rax,%rax
   110ba:	74 33                	je     110ef <scsidev_step+0x4f>
   110bc:	83 4d 58 01          	orl    $0x1,0x58(%rbp)
   110c0:	48 8d 75 60          	lea    0x60(%rbp),%rsi
   110c4:	31 c9                	xor    %ecx,%ecx
   110c6:	45 31 c9             	xor    %r9d,%r9d
   110c9:	50                   	push   %rax
   110ca:	48 8d 15 4f 5f 01 00 	lea    0x15f4f(%rip),%rdx        # 27020 <scsicmd_test_unit_ready>
   110d1:	45 31 c0             	xor    %r8d,%r8d
   110d4:	48 89 ef             	mov    %rbp,%rdi
   110d7:	6a 00                	push   $0x0
   110d9:	e8 ec fc ff ff       	call   10dca <scsidev_command>
   110de:	5a                   	pop    %rdx
   110df:	59                   	pop    %rcx
   110e0:	89 c6                	mov    %eax,%esi
   110e2:	85 c0                	test   %eax,%eax
   110e4:	74 09                	je     110ef <scsidev_step+0x4f>
   110e6:	48 89 ef             	mov    %rbp,%rdi
   110e9:	5d                   	pop    %rbp
   110ea:	e9 4c fe ff ff       	jmp    10f3b <scsidev_close>
   110ef:	5d                   	pop    %rbp
   110f0:	c3                   	ret    
   110f1:	c3                   	ret    

00000000000110f2 <scsidev_ready>:
   110f2:	f3 0f 1e fa          	endbr64 
   110f6:	55                   	push   %rbp
   110f7:	48 89 fd             	mov    %rdi,%rbp
   110fa:	48 83 c7 60          	add    $0x60,%rdi
   110fe:	48 83 ec 10          	sub    $0x10,%rsp
   11102:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   11106:	e8 0d 88 ff ff       	call   9918 <intf_restart>
   1110b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1110f:	85 f6                	test   %esi,%esi
   11111:	75 12                	jne    11125 <scsidev_ready+0x33>
   11113:	83 4d 58 02          	orl    $0x2,0x58(%rbp)
   11117:	48 83 c4 10          	add    $0x10,%rsp
   1111b:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   1111f:	5d                   	pop    %rbp
   11120:	e9 5b 64 00 00       	jmp    17580 <xfer_window_changed>
   11125:	8b 85 a0 00 00 00    	mov    0xa0(%rbp),%eax
   1112b:	8d 50 01             	lea    0x1(%rax),%edx
   1112e:	89 95 a0 00 00 00    	mov    %edx,0xa0(%rbp)
   11134:	83 f8 09             	cmp    $0x9,%eax
   11137:	77 15                	ja     1114e <scsidev_ready+0x5c>
   11139:	83 65 58 fe          	andl   $0xfffffffe,0x58(%rbp)
   1113d:	48 83 c4 10          	add    $0x10,%rsp
   11141:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
   11148:	5d                   	pop    %rbp
   11149:	e9 bf e8 ff ff       	jmp    fa0d <process_add>
   1114e:	48 83 c4 10          	add    $0x10,%rsp
   11152:	48 89 ef             	mov    %rbp,%rdi
   11155:	5d                   	pop    %rbp
   11156:	e9 e0 fd ff ff       	jmp    10f3b <scsidev_close>

000000000001115b <scsi_parse_lun>:
   1115b:	f3 0f 1e fa          	endbr64 
   1115f:	41 54                	push   %r12
   11161:	55                   	push   %rbp
   11162:	53                   	push   %rbx
   11163:	48 83 ec 10          	sub    $0x10,%rsp
   11167:	48 8b 05 e2 8e 01 00 	mov    0x18ee2(%rip),%rax        # 2a050 <__stack_chk_guard>
   1116e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11173:	31 c0                	xor    %eax,%eax
   11175:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   1117c:	48 85 ff             	test   %rdi,%rdi
   1117f:	75 04                	jne    11185 <scsi_parse_lun+0x2a>
   11181:	31 c0                	xor    %eax,%eax
   11183:	eb 51                	jmp    111d6 <scsi_parse_lun+0x7b>
   11185:	48 89 3c 24          	mov    %rdi,(%rsp)
   11189:	48 89 f5             	mov    %rsi,%rbp
   1118c:	31 db                	xor    %ebx,%ebx
   1118e:	49 89 e4             	mov    %rsp,%r12
   11191:	48 8b 3c 24          	mov    (%rsp),%rdi
   11195:	ba 10 00 00 00       	mov    $0x10,%edx
   1119a:	4c 89 e6             	mov    %r12,%rsi
   1119d:	e8 b5 29 00 00       	call   13b57 <strtoul>
   111a2:	86 c4                	xchg   %al,%ah
   111a4:	66 89 44 5d 00       	mov    %ax,0x0(%rbp,%rbx,2)
   111a9:	48 8b 04 24          	mov    (%rsp),%rax
   111ad:	8a 10                	mov    (%rax),%dl
   111af:	84 d2                	test   %dl,%dl
   111b1:	74 ce                	je     11181 <scsi_parse_lun+0x26>
   111b3:	80 fa 2d             	cmp    $0x2d,%dl
   111b6:	74 02                	je     111ba <scsi_parse_lun+0x5f>
   111b8:	eb 17                	jmp    111d1 <scsi_parse_lun+0x76>
   111ba:	48 8d 50 01          	lea    0x1(%rax),%rdx
   111be:	48 ff c3             	inc    %rbx
   111c1:	48 89 14 24          	mov    %rdx,(%rsp)
   111c5:	48 83 fb 04          	cmp    $0x4,%rbx
   111c9:	75 c6                	jne    11191 <scsi_parse_lun+0x36>
   111cb:	80 78 01 00          	cmpb   $0x0,0x1(%rax)
   111cf:	74 b0                	je     11181 <scsi_parse_lun+0x26>
   111d1:	b8 7e bf 8f e3       	mov    $0xe38fbf7e,%eax
   111d6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   111db:	48 2b 15 6e 8e 01 00 	sub    0x18e6e(%rip),%rdx        # 2a050 <__stack_chk_guard>
   111e2:	74 05                	je     111e9 <scsi_parse_lun+0x8e>
   111e4:	e8 77 18 ff ff       	call   2a60 <__stack_chk_fail>
   111e9:	48 83 c4 10          	add    $0x10,%rsp
   111ed:	5b                   	pop    %rbx
   111ee:	5d                   	pop    %rbp
   111ef:	41 5c                	pop    %r12
   111f1:	c3                   	ret    

00000000000111f2 <scsi_parse_sense>:
   111f2:	f3 0f 1e fa          	endbr64 
   111f6:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
   111fc:	48 83 fe 03          	cmp    $0x3,%rsi
   11200:	76 1b                	jbe    1121d <scsi_parse_sense+0x2b>
   11202:	8b 07                	mov    (%rdi),%eax
   11204:	89 02                	mov    %eax,(%rdx)
   11206:	48 83 fe 0d          	cmp    $0xd,%rsi
   1120a:	76 11                	jbe    1121d <scsi_parse_sense+0x2b>
   1120c:	8a 07                	mov    (%rdi),%al
   1120e:	83 e0 7e             	and    $0x7e,%eax
   11211:	3c 70                	cmp    $0x70,%al
   11213:	75 08                	jne    1121d <scsi_parse_sense+0x2b>
   11215:	66 8b 47 0c          	mov    0xc(%rdi),%ax
   11219:	66 89 42 02          	mov    %ax,0x2(%rdx)
   1121d:	c3                   	ret    

000000000001121e <scsi_open>:
   1121e:	f3 0f 1e fa          	endbr64 
   11222:	41 55                	push   %r13
   11224:	49 89 f5             	mov    %rsi,%r13
   11227:	41 54                	push   %r12
   11229:	49 89 fc             	mov    %rdi,%r12
   1122c:	bf b8 00 00 00       	mov    $0xb8,%edi
   11231:	55                   	push   %rbp
   11232:	53                   	push   %rbx
   11233:	48 89 d3             	mov    %rdx,%rbx
   11236:	51                   	push   %rcx
   11237:	e8 fa b4 ff ff       	call   c736 <zalloc>
   1123c:	48 85 c0             	test   %rax,%rax
   1123f:	75 0a                	jne    1124b <scsi_open+0x2d>
   11241:	b8 77 bf 8f ce       	mov    $0xce8fbf77,%eax
   11246:	e9 bc 00 00 00       	jmp    11307 <scsi_open+0xe9>
   1124b:	48 89 c5             	mov    %rax,%rbp
   1124e:	48 8d 05 6b 52 01 00 	lea    0x1526b(%rip),%rax        # 264c0 <null_intf>
   11255:	48 8d 15 c4 5c 01 00 	lea    0x15cc4(%rip),%rdx        # 26f20 <scsidev_block_desc>
   1125c:	48 89 45 10          	mov    %rax,0x10(%rbp)
   11260:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
   11267:	48 89 45 30          	mov    %rax,0x30(%rbp)
   1126b:	48 89 45 60          	mov    %rax,0x60(%rbp)
   1126f:	48 8d 05 6a 5c 01 00 	lea    0x15c6a(%rip),%rax        # 26ee0 <scsidev_ready_desc>
   11276:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1127a:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   1127e:	48 8d 15 1b 5c 01 00 	lea    0x15c1b(%rip),%rdx        # 26ea0 <scsidev_scsi_desc>
   11285:	48 89 45 70          	mov    %rax,0x70(%rbp)
   11289:	48 89 45 78          	mov    %rax,0x78(%rbp)
   1128d:	48 8d 05 ec 5b 01 00 	lea    0x15bec(%rip),%rax        # 26e80 <scsidev_process_desc>
   11294:	48 89 55 40          	mov    %rdx,0x40(%rbp)
   11298:	48 89 55 48          	mov    %rdx,0x48(%rbp)
   1129c:	48 89 bd 80 00 00 00 	mov    %rdi,0x80(%rbp)
   112a3:	48 89 bd 88 00 00 00 	mov    %rdi,0x88(%rbp)
   112aa:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   112b1:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   112b5:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   112b9:	48 89 6d 68          	mov    %rbp,0x68(%rbp)
   112bd:	48 89 ad 98 00 00 00 	mov    %rbp,0x98(%rbp)
   112c4:	e8 44 e7 ff ff       	call   fa0d <process_add>
   112c9:	48 8d 85 a8 00 00 00 	lea    0xa8(%rbp),%rax
   112d0:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   112d4:	4c 89 ee             	mov    %r13,%rsi
   112d7:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   112de:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   112e5:	48 8b 03             	mov    (%rbx),%rax
   112e8:	48 89 45 50          	mov    %rax,0x50(%rbp)
   112ec:	e8 50 85 ff ff       	call   9841 <intf_plug_plug>
   112f1:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   112f5:	4c 89 e6             	mov    %r12,%rsi
   112f8:	e8 44 85 ff ff       	call   9841 <intf_plug_plug>
   112fd:	48 89 ef             	mov    %rbp,%rdi
   11300:	e8 15 ec ff ff       	call   ff1a <ref_decrement>
   11305:	31 c0                	xor    %eax,%eax
   11307:	5a                   	pop    %rdx
   11308:	5b                   	pop    %rbx
   11309:	5d                   	pop    %rbp
   1130a:	41 5c                	pop    %r12
   1130c:	41 5d                	pop    %r13
   1130e:	c3                   	ret    

000000000001130f <apply_settings>:
   1130f:	55                   	push   %rbp
   11310:	48 8d 2d c1 86 01 00 	lea    0x186c1(%rip),%rbp        # 299d8 <ipv4_sockaddr_converter>
   11317:	53                   	push   %rbx
   11318:	48 8d 1d 91 86 01 00 	lea    0x18691(%rip),%rbx        # 299b0 <dns_applicator>
   1131f:	51                   	push   %rcx
   11320:	48 39 eb             	cmp    %rbp,%rbx
   11323:	73 0c                	jae    11331 <apply_settings+0x22>
   11325:	ff 13                	call   *(%rbx)
   11327:	85 c0                	test   %eax,%eax
   11329:	75 08                	jne    11333 <apply_settings+0x24>
   1132b:	48 83 c3 08          	add    $0x8,%rbx
   1132f:	eb ef                	jmp    11320 <apply_settings+0x11>
   11331:	31 c0                	xor    %eax,%eax
   11333:	5a                   	pop    %rdx
   11334:	5b                   	pop    %rbx
   11335:	5d                   	pop    %rbp
   11336:	c3                   	ret    

0000000000011337 <numeric_setting_value>:
   11337:	48 89 d0             	mov    %rdx,%rax
   1133a:	49 89 f0             	mov    %rsi,%r8
   1133d:	31 d2                	xor    %edx,%edx
   1133f:	48 85 c0             	test   %rax,%rax
   11342:	74 0a                	je     1134e <numeric_setting_value+0x17>
   11344:	80 3e 00             	cmpb   $0x0,(%rsi)
   11347:	79 05                	jns    1134e <numeric_setting_value+0x17>
   11349:	f7 df                	neg    %edi
   1134b:	48 19 d2             	sbb    %rdx,%rdx
   1134e:	48 89 11             	mov    %rdx,(%rcx)
   11351:	89 d6                	mov    %edx,%esi
   11353:	45 31 c9             	xor    %r9d,%r9d
   11356:	44 89 ca             	mov    %r9d,%edx
   11359:	48 39 c2             	cmp    %rax,%rdx
   1135c:	73 2b                	jae    11389 <numeric_setting_value+0x52>
   1135e:	48 8b 39             	mov    (%rcx),%rdi
   11361:	45 0f b6 1c 10       	movzbl (%r8,%rdx,1),%r11d
   11366:	48 83 c2 08          	add    $0x8,%rdx
   1136a:	48 c1 e7 08          	shl    $0x8,%rdi
   1136e:	4c 09 df             	or     %r11,%rdi
   11371:	48 89 39             	mov    %rdi,(%rcx)
   11374:	48 39 c2             	cmp    %rax,%rdx
   11377:	73 0b                	jae    11384 <numeric_setting_value+0x4d>
   11379:	44 38 de             	cmp    %r11b,%sil
   1137c:	74 06                	je     11384 <numeric_setting_value+0x4d>
   1137e:	b8 7b df f3 b9       	mov    $0xb9f3df7b,%eax
   11383:	c3                   	ret    
   11384:	41 ff c1             	inc    %r9d
   11387:	eb cd                	jmp    11356 <numeric_setting_value+0x1f>
   11389:	c3                   	ret    

000000000001138a <parse_ipv6_setting>:
   1138a:	f3 0f 1e fa          	endbr64 
   1138e:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   11393:	c3                   	ret    

0000000000011394 <format_ipv6_setting>:
   11394:	f3 0f 1e fa          	endbr64 
   11398:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   1139d:	c3                   	ret    

000000000001139e <numerate_int_setting>:
   1139e:	f3 0f 1e fa          	endbr64 
   113a2:	48 8b 3f             	mov    (%rdi),%rdi
   113a5:	48 8d 05 54 12 01 00 	lea    0x11254(%rip),%rax        # 22600 <setting_type_int_name>
   113ac:	48 29 c7             	sub    %rax,%rdi
   113af:	83 e7 01             	and    $0x1,%edi
   113b2:	e8 80 ff ff ff       	call   11337 <numeric_setting_value>
   113b7:	31 d2                	xor    %edx,%edx
   113b9:	85 c0                	test   %eax,%eax
   113bb:	0f 4f c2             	cmovg  %edx,%eax
   113be:	c3                   	ret    

00000000000113bf <builtin_applies>:
   113bf:	f3 0f 1e fa          	endbr64 
   113c3:	48 8d 05 cb 8c 01 00 	lea    0x18ccb(%rip),%rax        # 2a095 <builtin_scope>
   113ca:	48 39 46 20          	cmp    %rax,0x20(%rsi)
   113ce:	0f 94 c0             	sete   %al
   113d1:	0f b6 c0             	movzbl %al,%eax
   113d4:	c3                   	ret    

00000000000113d5 <format_string_setting>:
   113d5:	f3 0f 1e fa          	endbr64 
   113d9:	53                   	push   %rbx
   113da:	49 89 c9             	mov    %rcx,%r9
   113dd:	48 89 cf             	mov    %rcx,%rdi
   113e0:	48 89 d3             	mov    %rdx,%rbx
   113e3:	4c 89 c1             	mov    %r8,%rcx
   113e6:	31 c0                	xor    %eax,%eax
   113e8:	f3 aa                	rep stos %al,%es:(%rdi)
   113ea:	49 39 d0             	cmp    %rdx,%r8
   113ed:	4c 89 c2             	mov    %r8,%rdx
   113f0:	4c 89 cf             	mov    %r9,%rdi
   113f3:	48 0f 47 d3          	cmova  %rbx,%rdx
   113f7:	e8 ed 5f 00 00       	call   173e9 <__memcpy>
   113fc:	89 d8                	mov    %ebx,%eax
   113fe:	5b                   	pop    %rbx
   113ff:	c3                   	ret    

0000000000011400 <errno_fetch>:
   11400:	f3 0f 1e fa          	endbr64 
   11404:	48 83 ec 18          	sub    $0x18,%rsp
   11408:	48 8b 05 41 8c 01 00 	mov    0x18c41(%rip),%rax        # 2a050 <__stack_chk_guard>
   1140f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11414:	8b 05 8a 8c 01 00    	mov    0x18c8a(%rip),%eax        # 2a0a4 <errno>
   1141a:	0f c8                	bswap  %eax
   1141c:	89 44 24 04          	mov    %eax,0x4(%rsp)
   11420:	b8 04 00 00 00       	mov    $0x4,%eax
   11425:	48 39 c6             	cmp    %rax,%rsi
   11428:	48 0f 46 c6          	cmovbe %rsi,%rax
   1142c:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   11431:	48 89 c2             	mov    %rax,%rdx
   11434:	e8 b0 5f 00 00       	call   173e9 <__memcpy>
   11439:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1143e:	48 2b 05 0b 8c 01 00 	sub    0x18c0b(%rip),%rax        # 2a050 <__stack_chk_guard>
   11445:	74 05                	je     1144c <errno_fetch+0x4c>
   11447:	e8 14 16 ff ff       	call   2a60 <__stack_chk_fail>
   1144c:	b8 04 00 00 00       	mov    $0x4,%eax
   11451:	48 83 c4 18          	add    $0x18,%rsp
   11455:	c3                   	ret    

0000000000011456 <parse_string_setting>:
   11456:	f3 0f 1e fa          	endbr64 
   1145a:	41 55                	push   %r13
   1145c:	48 89 f7             	mov    %rsi,%rdi
   1145f:	49 89 d5             	mov    %rdx,%r13
   11462:	55                   	push   %rbp
   11463:	48 89 cd             	mov    %rcx,%rbp
   11466:	53                   	push   %rbx
   11467:	48 83 ec 10          	sub    $0x10,%rsp
   1146b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   11470:	e8 a1 25 00 00       	call   13a16 <strlen>
   11475:	48 89 ea             	mov    %rbp,%rdx
   11478:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1147d:	4c 89 ef             	mov    %r13,%rdi
   11480:	48 39 e8             	cmp    %rbp,%rax
   11483:	48 89 c3             	mov    %rax,%rbx
   11486:	48 0f 46 d0          	cmovbe %rax,%rdx
   1148a:	e8 5a 5f 00 00       	call   173e9 <__memcpy>
   1148f:	48 83 c4 10          	add    $0x10,%rsp
   11493:	89 d8                	mov    %ebx,%eax
   11495:	5b                   	pop    %rbx
   11496:	5d                   	pop    %rbp
   11497:	41 5d                	pop    %r13
   11499:	c3                   	ret    

000000000001149a <format_uristring_setting>:
   1149a:	f3 0f 1e fa          	endbr64 
   1149e:	50                   	push   %rax
   1149f:	31 ff                	xor    %edi,%edi
   114a1:	e8 94 4f 00 00       	call   1643a <uri_encode>
   114a6:	5a                   	pop    %rdx
   114a7:	c3                   	ret    

00000000000114a8 <parse_uristring_setting>:
   114a8:	f3 0f 1e fa          	endbr64 
   114ac:	50                   	push   %rax
   114ad:	48 89 f7             	mov    %rsi,%rdi
   114b0:	48 89 d6             	mov    %rdx,%rsi
   114b3:	48 89 ca             	mov    %rcx,%rdx
   114b6:	e8 ba 4e 00 00       	call   16375 <uri_decode>
   114bb:	5a                   	pop    %rdx
   114bc:	c3                   	ret    

00000000000114bd <format_int_setting>:
   114bd:	f3 0f 1e fa          	endbr64 
   114c1:	41 54                	push   %r12
   114c3:	4d 89 c4             	mov    %r8,%r12
   114c6:	55                   	push   %rbp
   114c7:	48 89 cd             	mov    %rcx,%rbp
   114ca:	48 83 ec 18          	sub    $0x18,%rsp
   114ce:	48 8b 05 7b 8b 01 00 	mov    0x18b7b(%rip),%rax        # 2a050 <__stack_chk_guard>
   114d5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   114da:	31 c0                	xor    %eax,%eax
   114dc:	48 89 e1             	mov    %rsp,%rcx
   114df:	ff 57 20             	call   *0x20(%rdi)
   114e2:	85 c0                	test   %eax,%eax
   114e4:	78 18                	js     114fe <format_int_setting+0x41>
   114e6:	48 8b 0c 24          	mov    (%rsp),%rcx
   114ea:	48 8d 15 61 23 01 00 	lea    0x12361(%rip),%rdx        # 23852 <.LC0>
   114f1:	4c 89 e6             	mov    %r12,%rsi
   114f4:	31 c0                	xor    %eax,%eax
   114f6:	48 89 ef             	mov    %rbp,%rdi
   114f9:	e8 5f 5c 00 00       	call   1715d <snprintf>
   114fe:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11503:	48 2b 15 46 8b 01 00 	sub    0x18b46(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1150a:	74 05                	je     11511 <format_int_setting+0x54>
   1150c:	e8 4f 15 ff ff       	call   2a60 <__stack_chk_fail>
   11511:	48 83 c4 18          	add    $0x18,%rsp
   11515:	5d                   	pop    %rbp
   11516:	41 5c                	pop    %r12
   11518:	c3                   	ret    

0000000000011519 <format_uint_setting>:
   11519:	f3 0f 1e fa          	endbr64 
   1151d:	41 54                	push   %r12
   1151f:	4d 89 c4             	mov    %r8,%r12
   11522:	55                   	push   %rbp
   11523:	48 89 cd             	mov    %rcx,%rbp
   11526:	48 83 ec 18          	sub    $0x18,%rsp
   1152a:	48 8b 05 1f 8b 01 00 	mov    0x18b1f(%rip),%rax        # 2a050 <__stack_chk_guard>
   11531:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11536:	31 c0                	xor    %eax,%eax
   11538:	48 89 e1             	mov    %rsp,%rcx
   1153b:	ff 57 20             	call   *0x20(%rdi)
   1153e:	85 c0                	test   %eax,%eax
   11540:	78 18                	js     1155a <format_uint_setting+0x41>
   11542:	48 8b 0c 24          	mov    (%rsp),%rcx
   11546:	48 8d 15 09 23 01 00 	lea    0x12309(%rip),%rdx        # 23856 <.LC1>
   1154d:	4c 89 e6             	mov    %r12,%rsi
   11550:	31 c0                	xor    %eax,%eax
   11552:	48 89 ef             	mov    %rbp,%rdi
   11555:	e8 03 5c 00 00       	call   1715d <snprintf>
   1155a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1155f:	48 2b 15 ea 8a 01 00 	sub    0x18aea(%rip),%rdx        # 2a050 <__stack_chk_guard>
   11566:	74 05                	je     1156d <format_uint_setting+0x54>
   11568:	e8 f3 14 ff ff       	call   2a60 <__stack_chk_fail>
   1156d:	48 83 c4 18          	add    $0x18,%rsp
   11571:	5d                   	pop    %rbp
   11572:	41 5c                	pop    %r12
   11574:	c3                   	ret    

0000000000011575 <format_busdevfn_setting>:
   11575:	f3 0f 1e fa          	endbr64 
   11579:	55                   	push   %rbp
   1157a:	49 89 ca             	mov    %rcx,%r10
   1157d:	31 ff                	xor    %edi,%edi
   1157f:	4c 89 c5             	mov    %r8,%rbp
   11582:	48 83 ec 10          	sub    $0x10,%rsp
   11586:	48 8b 05 c3 8a 01 00 	mov    0x18ac3(%rip),%rax        # 2a050 <__stack_chk_guard>
   1158d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11592:	31 c0                	xor    %eax,%eax
   11594:	48 89 e1             	mov    %rsp,%rcx
   11597:	e8 9b fd ff ff       	call   11337 <numeric_setting_value>
   1159c:	85 c0                	test   %eax,%eax
   1159e:	78 36                	js     115d6 <format_busdevfn_setting+0x61>
   115a0:	48 8b 04 24          	mov    (%rsp),%rax
   115a4:	56                   	push   %rsi
   115a5:	48 8d 15 a8 21 01 00 	lea    0x121a8(%rip),%rdx        # 23754 <.LC0>
   115ac:	48 89 ee             	mov    %rbp,%rsi
   115af:	0f b6 fc             	movzbl %ah,%edi
   115b2:	49 89 c1             	mov    %rax,%r9
   115b5:	89 c1                	mov    %eax,%ecx
   115b7:	83 e0 07             	and    $0x7,%eax
   115ba:	50                   	push   %rax
   115bb:	49 c1 e9 03          	shr    $0x3,%r9
   115bf:	41 89 f8             	mov    %edi,%r8d
   115c2:	c1 e9 10             	shr    $0x10,%ecx
   115c5:	4c 89 d7             	mov    %r10,%rdi
   115c8:	41 83 e1 1f          	and    $0x1f,%r9d
   115cc:	31 c0                	xor    %eax,%eax
   115ce:	e8 8a 5b 00 00       	call   1715d <snprintf>
   115d3:	5f                   	pop    %rdi
   115d4:	41 58                	pop    %r8
   115d6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   115db:	48 2b 15 6e 8a 01 00 	sub    0x18a6e(%rip),%rdx        # 2a050 <__stack_chk_guard>
   115e2:	74 05                	je     115e9 <format_busdevfn_setting+0x74>
   115e4:	e8 77 14 ff ff       	call   2a60 <__stack_chk_fail>
   115e9:	48 83 c4 10          	add    $0x10,%rsp
   115ed:	5d                   	pop    %rbp
   115ee:	c3                   	ret    

00000000000115ef <format_hex_colon_setting>:
   115ef:	f3 0f 1e fa          	endbr64 
   115f3:	50                   	push   %rax
   115f4:	bf 3a 00 00 00       	mov    $0x3a,%edi
   115f9:	e8 02 74 00 00       	call   18a00 <hex_encode>
   115fe:	5a                   	pop    %rdx
   115ff:	c3                   	ret    

0000000000011600 <format_hex_hyphen_setting>:
   11600:	f3 0f 1e fa          	endbr64 
   11604:	50                   	push   %rax
   11605:	bf 2d 00 00 00       	mov    $0x2d,%edi
   1160a:	e8 f1 73 00 00       	call   18a00 <hex_encode>
   1160f:	5a                   	pop    %rdx
   11610:	c3                   	ret    

0000000000011611 <format_hex_raw_setting>:
   11611:	f3 0f 1e fa          	endbr64 
   11615:	50                   	push   %rax
   11616:	31 ff                	xor    %edi,%edi
   11618:	e8 e3 73 00 00       	call   18a00 <hex_encode>
   1161d:	5a                   	pop    %rdx
   1161e:	c3                   	ret    

000000000001161f <parse_hex_setting>:
   1161f:	f3 0f 1e fa          	endbr64 
   11623:	bf 3a 00 00 00       	mov    $0x3a,%edi
   11628:	e9 83 74 00 00       	jmp    18ab0 <hex_decode>

000000000001162d <parse_hex_hyphen_setting>:
   1162d:	f3 0f 1e fa          	endbr64 
   11631:	bf 2d 00 00 00       	mov    $0x2d,%edi
   11636:	e9 75 74 00 00       	jmp    18ab0 <hex_decode>

000000000001163b <parse_hex_raw_setting>:
   1163b:	f3 0f 1e fa          	endbr64 
   1163f:	31 ff                	xor    %edi,%edi
   11641:	e9 6a 74 00 00       	jmp    18ab0 <hex_decode>

0000000000011646 <format_base64_setting>:
   11646:	f3 0f 1e fa          	endbr64 
   1164a:	50                   	push   %rax
   1164b:	48 89 f7             	mov    %rsi,%rdi
   1164e:	48 89 d6             	mov    %rdx,%rsi
   11651:	48 89 ca             	mov    %rcx,%rdx
   11654:	4c 89 c1             	mov    %r8,%rcx
   11657:	e8 e8 74 00 00       	call   18b44 <base64_encode>
   1165c:	5a                   	pop    %rdx
   1165d:	c3                   	ret    

000000000001165e <parse_base64_setting>:
   1165e:	f3 0f 1e fa          	endbr64 
   11662:	48 89 f7             	mov    %rsi,%rdi
   11665:	48 89 d6             	mov    %rdx,%rsi
   11668:	48 89 ca             	mov    %rcx,%rdx
   1166b:	e9 7e 75 00 00       	jmp    18bee <base64_decode>

0000000000011670 <fetch_string_setting_copy_alloc>:
   11670:	f3 0f 1e fa          	endbr64 
   11674:	48 ff c7             	inc    %rdi
   11677:	e9 ba b0 ff ff       	jmp    c736 <zalloc>

000000000001167c <generic_settings_clear>:
   1167c:	f3 0f 1e fa          	endbr64 
   11680:	55                   	push   %rbp
   11681:	53                   	push   %rbx
   11682:	48 8d 5f 50          	lea    0x50(%rdi),%rbx
   11686:	52                   	push   %rdx
   11687:	4c 8b 47 50          	mov    0x50(%rdi),%r8
   1168b:	49 8b 28             	mov    (%r8),%rbp
   1168e:	49 39 d8             	cmp    %rbx,%r8
   11691:	74 1f                	je     116b2 <generic_settings_clear+0x36>
   11693:	49 8b 10             	mov    (%r8),%rdx
   11696:	49 8b 40 08          	mov    0x8(%r8),%rax
   1169a:	4c 89 c7             	mov    %r8,%rdi
   1169d:	48 89 42 08          	mov    %rax,0x8(%rdx)
   116a1:	48 89 10             	mov    %rdx,(%rax)
   116a4:	e8 79 b0 ff ff       	call   c722 <free>
   116a9:	49 89 e8             	mov    %rbp,%r8
   116ac:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
   116b0:	eb dc                	jmp    1168e <generic_settings_clear+0x12>
   116b2:	58                   	pop    %rax
   116b3:	5b                   	pop    %rbx
   116b4:	5d                   	pop    %rbp
   116b5:	c3                   	ret    

00000000000116b6 <autovivified_settings_free>:
   116b6:	f3 0f 1e fa          	endbr64 
   116ba:	55                   	push   %rbp
   116bb:	48 89 fd             	mov    %rdi,%rbp
   116be:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
   116c2:	e8 b5 ff ff ff       	call   1167c <generic_settings_clear>
   116c7:	48 89 ef             	mov    %rbp,%rdi
   116ca:	5d                   	pop    %rbp
   116cb:	e9 52 b0 ff ff       	jmp    c722 <free>

00000000000116d0 <parse_settings_name>:
   116d0:	41 56                	push   %r14
   116d2:	41 55                	push   %r13
   116d4:	49 89 f5             	mov    %rsi,%r13
   116d7:	41 54                	push   %r12
   116d9:	55                   	push   %rbp
   116da:	48 8d 2d 5f 5a 01 00 	lea    0x15a5f(%rip),%rbp        # 27140 <generic_settings_root>
   116e1:	53                   	push   %rbx
   116e2:	e8 42 24 00 00       	call   13b29 <strdup>
   116e7:	49 89 c4             	mov    %rax,%r12
   116ea:	49 89 c6             	mov    %rax,%r14
   116ed:	48 85 c0             	test   %rax,%rax
   116f0:	74 41                	je     11733 <parse_settings_name+0x63>
   116f2:	be 2e 00 00 00       	mov    $0x2e,%esi
   116f7:	4c 89 f7             	mov    %r14,%rdi
   116fa:	e8 24 23 00 00       	call   13a23 <strchr>
   116ff:	48 89 c3             	mov    %rax,%rbx
   11702:	48 85 c0             	test   %rax,%rax
   11705:	74 06                	je     1170d <parse_settings_name+0x3d>
   11707:	c6 00 00             	movb   $0x0,(%rax)
   1170a:	48 ff c3             	inc    %rbx
   1170d:	48 89 ef             	mov    %rbp,%rdi
   11710:	4c 89 f6             	mov    %r14,%rsi
   11713:	41 ff d5             	call   *%r13
   11716:	48 89 c5             	mov    %rax,%rbp
   11719:	48 85 c0             	test   %rax,%rax
   1171c:	74 0a                	je     11728 <parse_settings_name+0x58>
   1171e:	48 85 db             	test   %rbx,%rbx
   11721:	74 05                	je     11728 <parse_settings_name+0x58>
   11723:	49 89 de             	mov    %rbx,%r14
   11726:	eb ca                	jmp    116f2 <parse_settings_name+0x22>
   11728:	4c 89 e7             	mov    %r12,%rdi
   1172b:	49 89 ec             	mov    %rbp,%r12
   1172e:	e8 ef af ff ff       	call   c722 <free>
   11733:	5b                   	pop    %rbx
   11734:	4c 89 e0             	mov    %r12,%rax
   11737:	5d                   	pop    %rbp
   11738:	41 5c                	pop    %r12
   1173a:	41 5d                	pop    %r13
   1173c:	41 5e                	pop    %r14
   1173e:	c3                   	ret    

000000000001173f <buildarch_fetch>:
   1173f:	f3 0f 1e fa          	endbr64 
   11743:	50                   	push   %rax
   11744:	48 89 f2             	mov    %rsi,%rdx
   11747:	48 8d 35 a6 0e 01 00 	lea    0x10ea6(%rip),%rsi        # 225f4 <buildarch.1>
   1174e:	e8 5a 23 00 00       	call   13aad <strncpy>
   11753:	b8 06 00 00 00       	mov    $0x6,%eax
   11758:	5a                   	pop    %rdx
   11759:	c3                   	ret    

000000000001175a <platform_fetch>:
   1175a:	f3 0f 1e fa          	endbr64 
   1175e:	50                   	push   %rax
   1175f:	48 89 f2             	mov    %rsi,%rdx
   11762:	48 8d 35 87 0e 01 00 	lea    0x10e87(%rip),%rsi        # 225f0 <platform.0>
   11769:	e8 3f 23 00 00       	call   13aad <strncpy>
   1176e:	b8 03 00 00 00       	mov    $0x3,%eax
   11773:	5a                   	pop    %rdx
   11774:	c3                   	ret    

0000000000011775 <version_fetch>:
   11775:	f3 0f 1e fa          	endbr64 
   11779:	55                   	push   %rbp
   1177a:	48 8d 2d 7f 0c 01 00 	lea    0x10c7f(%rip),%rbp        # 22400 <product_version>
   11781:	48 89 f2             	mov    %rsi,%rdx
   11784:	48 89 ee             	mov    %rbp,%rsi
   11787:	e8 21 23 00 00       	call   13aad <strncpy>
   1178c:	48 89 ef             	mov    %rbp,%rdi
   1178f:	e8 82 22 00 00       	call   13a16 <strlen>
   11794:	5d                   	pop    %rbp
   11795:	c3                   	ret    

0000000000011796 <unixtime_fetch>:
   11796:	f3 0f 1e fa          	endbr64 
   1179a:	53                   	push   %rbx
   1179b:	48 89 f3             	mov    %rsi,%rbx
   1179e:	48 83 ec 20          	sub    $0x20,%rsp
   117a2:	48 8b 05 a7 88 01 00 	mov    0x188a7(%rip),%rax        # 2a050 <__stack_chk_guard>
   117a9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   117ae:	31 c0                	xor    %eax,%eax
   117b0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   117b5:	e8 e9 be 00 00       	call   1d6a3 <time_now>
   117ba:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   117bf:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   117c4:	48 03 05 cd 88 01 00 	add    0x188cd(%rip),%rax        # 2a098 <time_offset>
   117cb:	0f c8                	bswap  %eax
   117cd:	89 44 24 14          	mov    %eax,0x14(%rsp)
   117d1:	b8 04 00 00 00       	mov    $0x4,%eax
   117d6:	48 39 c3             	cmp    %rax,%rbx
   117d9:	48 0f 46 c3          	cmovbe %rbx,%rax
   117dd:	48 89 c2             	mov    %rax,%rdx
   117e0:	e8 04 5c 00 00       	call   173e9 <__memcpy>
   117e5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   117ea:	48 2b 05 5f 88 01 00 	sub    0x1885f(%rip),%rax        # 2a050 <__stack_chk_guard>
   117f1:	74 05                	je     117f8 <unixtime_fetch+0x62>
   117f3:	e8 68 12 ff ff       	call   2a60 <__stack_chk_fail>
   117f8:	48 83 c4 20          	add    $0x20,%rsp
   117fc:	b8 04 00 00 00       	mov    $0x4,%eax
   11801:	5b                   	pop    %rbx
   11802:	c3                   	ret    

0000000000011803 <parse_int_setting>:
   11803:	f3 0f 1e fa          	endbr64 
   11807:	41 54                	push   %r12
   11809:	49 89 d4             	mov    %rdx,%r12
   1180c:	31 d2                	xor    %edx,%edx
   1180e:	53                   	push   %rbx
   1180f:	48 89 fb             	mov    %rdi,%rbx
   11812:	48 89 f7             	mov    %rsi,%rdi
   11815:	48 83 ec 28          	sub    $0x28,%rsp
   11819:	48 8b 05 30 88 01 00 	mov    0x18830(%rip),%rax        # 2a050 <__stack_chk_guard>
   11820:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11825:	31 c0                	xor    %eax,%eax
   11827:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1182c:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   11831:	e8 21 23 00 00       	call   13b57 <strtoul>
   11836:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1183b:	48 89 c6             	mov    %rax,%rsi
   1183e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   11843:	80 38 00             	cmpb   $0x0,(%rax)
   11846:	74 07                	je     1184f <parse_int_setting+0x4c>
   11848:	b8 7e df f3 e3       	mov    $0xe3f3df7e,%eax
   1184d:	eb 09                	jmp    11858 <parse_int_setting+0x55>
   1184f:	4c 89 e2             	mov    %r12,%rdx
   11852:	48 89 df             	mov    %rbx,%rdi
   11855:	ff 53 18             	call   *0x18(%rbx)
   11858:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1185d:	48 2b 15 ec 87 01 00 	sub    0x187ec(%rip),%rdx        # 2a050 <__stack_chk_guard>
   11864:	74 05                	je     1186b <parse_int_setting+0x68>
   11866:	e8 f5 11 ff ff       	call   2a60 <__stack_chk_fail>
   1186b:	48 83 c4 28          	add    $0x28,%rsp
   1186f:	5b                   	pop    %rbx
   11870:	41 5c                	pop    %r12
   11872:	c3                   	ret    

0000000000011873 <format_uuid_setting>:
   11873:	f3 0f 1e fa          	endbr64 
   11877:	48 83 fa 10          	cmp    $0x10,%rdx
   1187b:	75 2e                	jne    118ab <format_uuid_setting+0x38>
   1187d:	41 54                	push   %r12
   1187f:	48 89 f7             	mov    %rsi,%rdi
   11882:	4d 89 c4             	mov    %r8,%r12
   11885:	55                   	push   %rbp
   11886:	48 89 cd             	mov    %rcx,%rbp
   11889:	50                   	push   %rax
   1188a:	e8 a2 53 00 00       	call   16c31 <uuid_ntoa>
   1188f:	41 58                	pop    %r8
   11891:	4c 89 e6             	mov    %r12,%rsi
   11894:	48 89 ef             	mov    %rbp,%rdi
   11897:	48 89 c1             	mov    %rax,%rcx
   1189a:	5d                   	pop    %rbp
   1189b:	48 8d 15 5f 1e 01 00 	lea    0x11e5f(%rip),%rdx        # 23701 <.LC0>
   118a2:	31 c0                	xor    %eax,%eax
   118a4:	41 5c                	pop    %r12
   118a6:	e9 b2 58 00 00       	jmp    1715d <snprintf>
   118ab:	b8 7b df f3 b9       	mov    $0xb9f3df7b,%eax
   118b0:	c3                   	ret    

00000000000118b1 <denumerate_int_setting>:
   118b1:	f3 0f 1e fa          	endbr64 
   118b5:	41 54                	push   %r12
   118b7:	49 89 f9             	mov    %rdi,%r9
   118ba:	49 89 c8             	mov    %rcx,%r8
   118bd:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   118c3:	0f ce                	bswap  %esi
   118c5:	48 89 d7             	mov    %rdx,%rdi
   118c8:	4c 89 c2             	mov    %r8,%rdx
   118cb:	48 83 ec 10          	sub    $0x10,%rsp
   118cf:	49 8b 09             	mov    (%r9),%rcx
   118d2:	48 8b 05 77 87 01 00 	mov    0x18777(%rip),%rax        # 2a050 <__stack_chk_guard>
   118d9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   118de:	31 c0                	xor    %eax,%eax
   118e0:	48 8d 05 19 0d 01 00 	lea    0x10d19(%rip),%rax        # 22600 <setting_type_int_name>
   118e7:	89 74 24 04          	mov    %esi,0x4(%rsp)
   118eb:	48 29 c1             	sub    %rax,%rcx
   118ee:	b8 04 00 00 00       	mov    $0x4,%eax
   118f3:	48 c1 e9 03          	shr    $0x3,%rcx
   118f7:	41 d3 e4             	shl    %cl,%r12d
   118fa:	44 89 e1             	mov    %r12d,%ecx
   118fd:	4c 39 c1             	cmp    %r8,%rcx
   11900:	48 0f 46 d1          	cmovbe %rcx,%rdx
   11904:	48 29 c8             	sub    %rcx,%rax
   11907:	48 8d 74 04 04       	lea    0x4(%rsp,%rax,1),%rsi
   1190c:	e8 d8 5a 00 00       	call   173e9 <__memcpy>
   11911:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11916:	48 2b 05 33 87 01 00 	sub    0x18733(%rip),%rax        # 2a050 <__stack_chk_guard>
   1191d:	74 05                	je     11924 <denumerate_int_setting+0x73>
   1191f:	e8 3c 11 ff ff       	call   2a60 <__stack_chk_fail>
   11924:	48 83 c4 10          	add    $0x10,%rsp
   11928:	44 89 e0             	mov    %r12d,%eax
   1192b:	41 5c                	pop    %r12
   1192d:	c3                   	ret    

000000000001192e <find_settings>:
   1192e:	f3 0f 1e fa          	endbr64 
   11932:	48 8d 35 7f 00 00 00 	lea    0x7f(%rip),%rsi        # 119b8 <find_child_settings>
   11939:	e9 92 fd ff ff       	jmp    116d0 <parse_settings_name>

000000000001193e <unregister_settings>:
   1193e:	f3 0f 1e fa          	endbr64 
   11942:	55                   	push   %rbp
   11943:	48 8d 6f 28          	lea    0x28(%rdi),%rbp
   11947:	53                   	push   %rbx
   11948:	48 89 fb             	mov    %rdi,%rbx
   1194b:	52                   	push   %rdx
   1194c:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   11950:	48 39 ef             	cmp    %rbp,%rdi
   11953:	74 0b                	je     11960 <unregister_settings+0x22>
   11955:	48 83 ef 18          	sub    $0x18,%rdi
   11959:	e8 e0 ff ff ff       	call   1193e <unregister_settings>
   1195e:	eb ec                	jmp    1194c <unregister_settings+0xe>
   11960:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11964:	48 8b 38             	mov    (%rax),%rdi
   11967:	e8 ae e5 ff ff       	call   ff1a <ref_decrement>
   1196c:	48 8b 43 20          	mov    0x20(%rbx),%rax
   11970:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   11974:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1197b:	00 
   1197c:	48 8b 3b             	mov    (%rbx),%rdi
   1197f:	48 89 42 08          	mov    %rax,0x8(%rdx)
   11983:	48 89 10             	mov    %rdx,(%rax)
   11986:	e8 8f e5 ff ff       	call   ff1a <ref_decrement>
   1198b:	58                   	pop    %rax
   1198c:	5b                   	pop    %rbx
   1198d:	5d                   	pop    %rbp
   1198e:	e9 7c f9 ff ff       	jmp    1130f <apply_settings>

0000000000011993 <settings_target>:
   11993:	f3 0f 1e fa          	endbr64 
   11997:	48 89 f8             	mov    %rdi,%rax
   1199a:	48 85 ff             	test   %rdi,%rdi
   1199d:	75 07                	jne    119a6 <settings_target+0x13>
   1199f:	48 8d 05 9a 57 01 00 	lea    0x1579a(%rip),%rax        # 27140 <generic_settings_root>
   119a6:	48 8b 50 38          	mov    0x38(%rax),%rdx
   119aa:	48 8b 12             	mov    (%rdx),%rdx
   119ad:	48 85 d2             	test   %rdx,%rdx
   119b0:	74 05                	je     119b7 <settings_target+0x24>
   119b2:	48 89 c7             	mov    %rax,%rdi
   119b5:	ff e2                	jmp    *%rdx
   119b7:	c3                   	ret    

00000000000119b8 <find_child_settings>:
   119b8:	f3 0f 1e fa          	endbr64 
   119bc:	41 54                	push   %r12
   119be:	49 89 f4             	mov    %rsi,%r12
   119c1:	55                   	push   %rbp
   119c2:	53                   	push   %rbx
   119c3:	e8 cb ff ff ff       	call   11993 <settings_target>
   119c8:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   119cd:	74 3d                	je     11a0c <find_child_settings+0x54>
   119cf:	48 8b 50 28          	mov    0x28(%rax),%rdx
   119d3:	48 8d 58 28          	lea    0x28(%rax),%rbx
   119d7:	48 8d 6a e8          	lea    -0x18(%rdx),%rbp
   119db:	48 8d 45 18          	lea    0x18(%rbp),%rax
   119df:	48 39 d8             	cmp    %rbx,%rax
   119e2:	74 26                	je     11a0a <find_child_settings+0x52>
   119e4:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   119e8:	4c 89 e6             	mov    %r12,%rsi
   119eb:	e8 cc 1f 00 00       	call   139bc <strcmp>
   119f0:	85 c0                	test   %eax,%eax
   119f2:	75 0c                	jne    11a00 <find_child_settings+0x48>
   119f4:	5b                   	pop    %rbx
   119f5:	48 89 ef             	mov    %rbp,%rdi
   119f8:	5d                   	pop    %rbp
   119f9:	41 5c                	pop    %r12
   119fb:	e9 93 ff ff ff       	jmp    11993 <settings_target>
   11a00:	48 8b 6d 18          	mov    0x18(%rbp),%rbp
   11a04:	48 83 ed 18          	sub    $0x18,%rbp
   11a08:	eb d1                	jmp    119db <find_child_settings+0x23>
   11a0a:	31 c0                	xor    %eax,%eax
   11a0c:	5b                   	pop    %rbx
   11a0d:	5d                   	pop    %rbp
   11a0e:	41 5c                	pop    %r12
   11a10:	c3                   	ret    

0000000000011a11 <settings_name>:
   11a11:	f3 0f 1e fa          	endbr64 
   11a15:	41 54                	push   %r12
   11a17:	4c 8d 25 82 83 01 00 	lea    0x18382(%rip),%r12        # 29da0 <buf.2>
   11a1e:	53                   	push   %rbx
   11a1f:	48 83 ec 28          	sub    $0x28,%rsp
   11a23:	48 8b 05 26 86 01 00 	mov    0x18626(%rip),%rax        # 2a050 <__stack_chk_guard>
   11a2a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11a2f:	31 c0                	xor    %eax,%eax
   11a31:	e8 5d ff ff ff       	call   11993 <settings_target>
   11a36:	c6 05 63 83 01 00 00 	movb   $0x0,0x18363(%rip)        # 29da0 <buf.2>
   11a3d:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   11a42:	48 89 c3             	mov    %rax,%rbx
   11a45:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   11a4a:	74 36                	je     11a82 <settings_name+0x71>
   11a4c:	4c 8d 44 24 07       	lea    0x7(%rsp),%r8
   11a51:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   11a56:	4c 89 e6             	mov    %r12,%rsi
   11a59:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   11a5a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   11a5b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   11a5c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   11a5d:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   11a61:	48 8d 15 3e 0e 01 00 	lea    0x10e3e(%rip),%rdx        # 228a6 <.LC4>
   11a68:	4c 89 e7             	mov    %r12,%rdi
   11a6b:	31 c0                	xor    %eax,%eax
   11a6d:	be 10 00 00 00       	mov    $0x10,%esi
   11a72:	e8 e6 56 00 00       	call   1715d <snprintf>
   11a77:	c6 44 24 07 2e       	movb   $0x2e,0x7(%rsp)
   11a7c:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   11a80:	eb c3                	jmp    11a45 <settings_name+0x34>
   11a82:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   11a87:	48 2b 05 c2 85 01 00 	sub    0x185c2(%rip),%rax        # 2a050 <__stack_chk_guard>
   11a8e:	74 05                	je     11a95 <settings_name+0x84>
   11a90:	e8 cb 0f ff ff       	call   2a60 <__stack_chk_fail>
   11a95:	48 83 c4 28          	add    $0x28,%rsp
   11a99:	4c 89 e0             	mov    %r12,%rax
   11a9c:	5b                   	pop    %rbx
   11a9d:	41 5c                	pop    %r12
   11a9f:	c3                   	ret    

0000000000011aa0 <setting_applies>:
   11aa0:	f3 0f 1e fa          	endbr64 
   11aa4:	48 83 ec 18          	sub    $0x18,%rsp
   11aa8:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   11aad:	e8 e1 fe ff ff       	call   11993 <settings_target>
   11ab2:	48 89 c7             	mov    %rax,%rdi
   11ab5:	48 8b 40 38          	mov    0x38(%rax),%rax
   11ab9:	48 8b 40 08          	mov    0x8(%rax),%rax
   11abd:	48 85 c0             	test   %rax,%rax
   11ac0:	74 0b                	je     11acd <setting_applies+0x2d>
   11ac2:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11ac7:	48 83 c4 18          	add    $0x18,%rsp
   11acb:	ff e0                	jmp    *%rax
   11acd:	b8 01 00 00 00       	mov    $0x1,%eax
   11ad2:	48 83 c4 18          	add    $0x18,%rsp
   11ad6:	c3                   	ret    

0000000000011ad7 <clear_settings>:
   11ad7:	f3 0f 1e fa          	endbr64 
   11adb:	51                   	push   %rcx
   11adc:	e8 b2 fe ff ff       	call   11993 <settings_target>
   11ae1:	48 89 c7             	mov    %rax,%rdi
   11ae4:	48 8b 40 38          	mov    0x38(%rax),%rax
   11ae8:	48 8b 40 20          	mov    0x20(%rax),%rax
   11aec:	48 85 c0             	test   %rax,%rax
   11aef:	74 03                	je     11af4 <clear_settings+0x1d>
   11af1:	5a                   	pop    %rdx
   11af2:	ff e0                	jmp    *%rax
   11af4:	58                   	pop    %rax
   11af5:	c3                   	ret    

0000000000011af6 <setting_cmp>:
   11af6:	f3 0f 1e fa          	endbr64 
   11afa:	48 8b 47 18          	mov    0x18(%rdi),%rax
   11afe:	48 85 c0             	test   %rax,%rax
   11b01:	74 10                	je     11b13 <setting_cmp+0x1d>
   11b03:	48 3b 46 18          	cmp    0x18(%rsi),%rax
   11b07:	75 0a                	jne    11b13 <setting_cmp+0x1d>
   11b09:	48 8b 46 20          	mov    0x20(%rsi),%rax
   11b0d:	48 39 47 20          	cmp    %rax,0x20(%rdi)
   11b11:	74 1f                	je     11b32 <setting_cmp+0x3c>
   11b13:	48 8b 3f             	mov    (%rdi),%rdi
   11b16:	48 85 ff             	test   %rdi,%rdi
   11b19:	74 1a                	je     11b35 <setting_cmp+0x3f>
   11b1b:	48 8b 36             	mov    (%rsi),%rsi
   11b1e:	b8 01 00 00 00       	mov    $0x1,%eax
   11b23:	48 85 f6             	test   %rsi,%rsi
   11b26:	74 13                	je     11b3b <setting_cmp+0x45>
   11b28:	80 3f 00             	cmpb   $0x0,(%rdi)
   11b2b:	74 0e                	je     11b3b <setting_cmp+0x45>
   11b2d:	e9 8a 1e 00 00       	jmp    139bc <strcmp>
   11b32:	31 c0                	xor    %eax,%eax
   11b34:	c3                   	ret    
   11b35:	b8 01 00 00 00       	mov    $0x1,%eax
   11b3a:	c3                   	ret    
   11b3b:	c3                   	ret    

0000000000011b3c <generic_settings_store>:
   11b3c:	f3 0f 1e fa          	endbr64 
   11b40:	41 57                	push   %r15
   11b42:	48 8d 47 50          	lea    0x50(%rdi),%rax
   11b46:	41 56                	push   %r14
   11b48:	49 89 d6             	mov    %rdx,%r14
   11b4b:	41 55                	push   %r13
   11b4d:	49 89 cd             	mov    %rcx,%r13
   11b50:	41 54                	push   %r12
   11b52:	55                   	push   %rbp
   11b53:	53                   	push   %rbx
   11b54:	48 89 f3             	mov    %rsi,%rbx
   11b57:	48 83 ec 18          	sub    $0x18,%rsp
   11b5b:	4c 8b 67 50          	mov    0x50(%rdi),%r12
   11b5f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11b64:	4c 3b 64 24 08       	cmp    0x8(%rsp),%r12
   11b69:	74 22                	je     11b8d <generic_settings_store+0x51>
   11b6b:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
   11b70:	48 89 de             	mov    %rbx,%rsi
   11b73:	e8 7e ff ff ff       	call   11af6 <setting_cmp>
   11b78:	85 c0                	test   %eax,%eax
   11b7a:	74 06                	je     11b82 <generic_settings_store+0x46>
   11b7c:	4d 8b 24 24          	mov    (%r12),%r12
   11b80:	eb e2                	jmp    11b64 <generic_settings_store+0x28>
   11b82:	4d 85 ed             	test   %r13,%r13
   11b85:	0f 84 a6 00 00 00    	je     11c31 <generic_settings_store+0xf5>
   11b8b:	eb 0c                	jmp    11b99 <generic_settings_store+0x5d>
   11b8d:	4d 85 ed             	test   %r13,%r13
   11b90:	0f 84 97 00 00 00    	je     11c2d <generic_settings_store+0xf1>
   11b96:	45 31 e4             	xor    %r12d,%r12d
   11b99:	48 8b 3b             	mov    (%rbx),%rdi
   11b9c:	e8 75 1e 00 00       	call   13a16 <strlen>
   11ba1:	49 8d 7c 05 49       	lea    0x49(%r13,%rax,1),%rdi
   11ba6:	4c 8d 78 01          	lea    0x1(%rax),%r15
   11baa:	e8 87 ab ff ff       	call   c736 <zalloc>
   11baf:	48 89 c5             	mov    %rax,%rbp
   11bb2:	48 85 c0             	test   %rax,%rax
   11bb5:	75 07                	jne    11bbe <generic_settings_store+0x82>
   11bb7:	b8 77 df f3 ce       	mov    $0xcef3df77,%eax
   11bbc:	eb 7c                	jmp    11c3a <generic_settings_store+0xfe>
   11bbe:	4c 89 78 38          	mov    %r15,0x38(%rax)
   11bc2:	48 8d 78 10          	lea    0x10(%rax),%rdi
   11bc6:	ba 28 00 00 00       	mov    $0x28,%edx
   11bcb:	48 89 de             	mov    %rbx,%rsi
   11bce:	4c 89 68 40          	mov    %r13,0x40(%rax)
   11bd2:	e8 12 58 00 00       	call   173e9 <__memcpy>
   11bd7:	48 8d 7d 48          	lea    0x48(%rbp),%rdi
   11bdb:	48 8b 33             	mov    (%rbx),%rsi
   11bde:	4c 89 fa             	mov    %r15,%rdx
   11be1:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   11be5:	e8 ff 57 00 00       	call   173e9 <__memcpy>
   11bea:	48 8b 45 38          	mov    0x38(%rbp),%rax
   11bee:	4c 89 ea             	mov    %r13,%rdx
   11bf1:	4c 89 f6             	mov    %r14,%rsi
   11bf4:	48 8d 7c 05 48       	lea    0x48(%rbp,%rax,1),%rdi
   11bf9:	e8 eb 57 00 00       	call   173e9 <__memcpy>
   11bfe:	4d 85 e4             	test   %r12,%r12
   11c01:	74 1d                	je     11c20 <generic_settings_store+0xe4>
   11c03:	49 8b 14 24          	mov    (%r12),%rdx
   11c07:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   11c0c:	4c 89 e7             	mov    %r12,%rdi
   11c0f:	48 89 42 08          	mov    %rax,0x8(%rdx)
   11c13:	48 89 10             	mov    %rdx,(%rax)
   11c16:	e8 07 ab ff ff       	call   c722 <free>
   11c1b:	48 85 ed             	test   %rbp,%rbp
   11c1e:	74 0d                	je     11c2d <generic_settings_store+0xf1>
   11c20:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11c25:	48 89 ef             	mov    %rbp,%rdi
   11c28:	e8 64 a5 ff ff       	call   c191 <extern_list_add>
   11c2d:	31 c0                	xor    %eax,%eax
   11c2f:	eb 09                	jmp    11c3a <generic_settings_store+0xfe>
   11c31:	31 ed                	xor    %ebp,%ebp
   11c33:	4d 85 e4             	test   %r12,%r12
   11c36:	75 cb                	jne    11c03 <generic_settings_store+0xc7>
   11c38:	eb f3                	jmp    11c2d <generic_settings_store+0xf1>
   11c3a:	48 83 c4 18          	add    $0x18,%rsp
   11c3e:	5b                   	pop    %rbx
   11c3f:	5d                   	pop    %rbp
   11c40:	41 5c                	pop    %r12
   11c42:	41 5d                	pop    %r13
   11c44:	41 5e                	pop    %r14
   11c46:	41 5f                	pop    %r15
   11c48:	c3                   	ret    

0000000000011c49 <fetch_setting>:
   11c49:	f3 0f 1e fa          	endbr64 
   11c4d:	41 57                	push   %r15
   11c4f:	4d 89 cf             	mov    %r9,%r15
   11c52:	41 56                	push   %r14
   11c54:	49 89 fe             	mov    %rdi,%r14
   11c57:	4c 89 c7             	mov    %r8,%rdi
   11c5a:	41 55                	push   %r13
   11c5c:	49 89 cd             	mov    %rcx,%r13
   11c5f:	4c 89 c9             	mov    %r9,%rcx
   11c62:	41 54                	push   %r12
   11c64:	49 89 d4             	mov    %rdx,%r12
   11c67:	55                   	push   %rbp
   11c68:	48 89 f5             	mov    %rsi,%rbp
   11c6b:	53                   	push   %rbx
   11c6c:	48 83 ec 48          	sub    $0x48,%rsp
   11c70:	48 8b 05 d9 83 01 00 	mov    0x183d9(%rip),%rax        # 2a050 <__stack_chk_guard>
   11c77:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11c7c:	31 c0                	xor    %eax,%eax
   11c7e:	4c 89 04 24          	mov    %r8,(%rsp)
   11c82:	f3 aa                	rep stos %al,%es:(%rdi)
   11c84:	48 85 d2             	test   %rdx,%rdx
   11c87:	74 07                	je     11c90 <fetch_setting+0x47>
   11c89:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   11c90:	4d 85 ed             	test   %r13,%r13
   11c93:	74 10                	je     11ca5 <fetch_setting+0x5c>
   11c95:	ba 28 00 00 00       	mov    $0x28,%edx
   11c9a:	48 89 ee             	mov    %rbp,%rsi
   11c9d:	4c 89 ef             	mov    %r13,%rdi
   11ca0:	e8 44 57 00 00       	call   173e9 <__memcpy>
   11ca5:	4c 89 f7             	mov    %r14,%rdi
   11ca8:	e8 e6 fc ff ff       	call   11993 <settings_target>
   11cad:	49 89 c6             	mov    %rax,%r14
   11cb0:	48 8b 40 38          	mov    0x38(%rax),%rax
   11cb4:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
   11cb9:	75 0b                	jne    11cc6 <fetch_setting+0x7d>
   11cbb:	41 b8 7d df f3 c3    	mov    $0xc3f3df7d,%r8d
   11cc1:	e9 0f 01 00 00       	jmp    11dd5 <fetch_setting+0x18c>
   11cc6:	48 89 ee             	mov    %rbp,%rsi
   11cc9:	4c 89 f7             	mov    %r14,%rdi
   11ccc:	48 8d 1d dd 7c 01 00 	lea    0x17cdd(%rip),%rbx        # 299b0 <dns_applicator>
   11cd3:	e8 c8 fd ff ff       	call   11aa0 <setting_applies>
   11cd8:	48 8d 35 c9 75 01 00 	lea    0x175c9(%rip),%rsi        # 292a8 <busid_setting>
   11cdf:	85 c0                	test   %eax,%eax
   11ce1:	75 3d                	jne    11d20 <fetch_setting+0xd7>
   11ce3:	48 39 de             	cmp    %rbx,%rsi
   11ce6:	0f 83 a5 00 00 00    	jae    11d91 <fetch_setting+0x148>
   11cec:	48 89 ef             	mov    %rbp,%rdi
   11cef:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   11cf4:	e8 fd fd ff ff       	call   11af6 <setting_cmp>
   11cf9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11cfe:	85 c0                	test   %eax,%eax
   11d00:	74 06                	je     11d08 <fetch_setting+0xbf>
   11d02:	48 83 c6 28          	add    $0x28,%rsi
   11d06:	eb db                	jmp    11ce3 <fetch_setting+0x9a>
   11d08:	4c 89 f7             	mov    %r14,%rdi
   11d0b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   11d10:	e8 8b fd ff ff       	call   11aa0 <setting_applies>
   11d15:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11d1a:	85 c0                	test   %eax,%eax
   11d1c:	74 e4                	je     11d02 <fetch_setting+0xb9>
   11d1e:	eb 03                	jmp    11d23 <fetch_setting+0xda>
   11d20:	48 89 ee             	mov    %rbp,%rsi
   11d23:	48 85 f6             	test   %rsi,%rsi
   11d26:	74 69                	je     11d91 <fetch_setting+0x148>
   11d28:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   11d2d:	ba 28 00 00 00       	mov    $0x28,%edx
   11d32:	48 89 df             	mov    %rbx,%rdi
   11d35:	e8 af 56 00 00       	call   173e9 <__memcpy>
   11d3a:	49 8b 46 38          	mov    0x38(%r14),%rax
   11d3e:	48 8b 14 24          	mov    (%rsp),%rdx
   11d42:	4c 89 f9             	mov    %r15,%rcx
   11d45:	48 89 de             	mov    %rbx,%rsi
   11d48:	4c 89 f7             	mov    %r14,%rdi
   11d4b:	ff 50 18             	call   *0x18(%rax)
   11d4e:	41 89 c0             	mov    %eax,%r8d
   11d51:	85 c0                	test   %eax,%eax
   11d53:	78 3c                	js     11d91 <fetch_setting+0x148>
   11d55:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   11d5b:	75 0c                	jne    11d69 <fetch_setting+0x120>
   11d5d:	48 8d 05 1c 75 01 00 	lea    0x1751c(%rip),%rax        # 29280 <setting_type_string>
   11d64:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   11d69:	4d 85 e4             	test   %r12,%r12
   11d6c:	74 04                	je     11d72 <fetch_setting+0x129>
   11d6e:	4d 89 34 24          	mov    %r14,(%r12)
   11d72:	4d 85 ed             	test   %r13,%r13
   11d75:	74 5e                	je     11dd5 <fetch_setting+0x18c>
   11d77:	ba 28 00 00 00       	mov    $0x28,%edx
   11d7c:	48 89 de             	mov    %rbx,%rsi
   11d7f:	4c 89 ef             	mov    %r13,%rdi
   11d82:	44 89 04 24          	mov    %r8d,(%rsp)
   11d86:	e8 5e 56 00 00       	call   173e9 <__memcpy>
   11d8b:	44 8b 04 24          	mov    (%rsp),%r8d
   11d8f:	eb 44                	jmp    11dd5 <fetch_setting+0x18c>
   11d91:	49 8b 46 28          	mov    0x28(%r14),%rax
   11d95:	49 83 c6 28          	add    $0x28,%r14
   11d99:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
   11d9d:	48 8d 43 18          	lea    0x18(%rbx),%rax
   11da1:	4c 39 f0             	cmp    %r14,%rax
   11da4:	74 29                	je     11dcf <fetch_setting+0x186>
   11da6:	4c 8b 04 24          	mov    (%rsp),%r8
   11daa:	4d 89 f9             	mov    %r15,%r9
   11dad:	4c 89 e9             	mov    %r13,%rcx
   11db0:	4c 89 e2             	mov    %r12,%rdx
   11db3:	48 89 ee             	mov    %rbp,%rsi
   11db6:	48 89 df             	mov    %rbx,%rdi
   11db9:	e8 8b fe ff ff       	call   11c49 <fetch_setting>
   11dbe:	41 89 c0             	mov    %eax,%r8d
   11dc1:	85 c0                	test   %eax,%eax
   11dc3:	79 10                	jns    11dd5 <fetch_setting+0x18c>
   11dc5:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   11dc9:	48 8d 5f e8          	lea    -0x18(%rdi),%rbx
   11dcd:	eb ce                	jmp    11d9d <fetch_setting+0x154>
   11dcf:	41 b8 72 df f3 d2    	mov    $0xd2f3df72,%r8d
   11dd5:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   11dda:	48 2b 05 6f 82 01 00 	sub    0x1826f(%rip),%rax        # 2a050 <__stack_chk_guard>
   11de1:	74 05                	je     11de8 <fetch_setting+0x19f>
   11de3:	e8 78 0c ff ff       	call   2a60 <__stack_chk_fail>
   11de8:	48 83 c4 48          	add    $0x48,%rsp
   11dec:	44 89 c0             	mov    %r8d,%eax
   11def:	5b                   	pop    %rbx
   11df0:	5d                   	pop    %rbp
   11df1:	41 5c                	pop    %r12
   11df3:	41 5d                	pop    %r13
   11df5:	41 5e                	pop    %r14
   11df7:	41 5f                	pop    %r15
   11df9:	c3                   	ret    

0000000000011dfa <fetch_setting_alloc>:
   11dfa:	41 57                	push   %r15
   11dfc:	4d 89 cf             	mov    %r9,%r15
   11dff:	41 56                	push   %r14
   11e01:	41 55                	push   %r13
   11e03:	4d 89 c5             	mov    %r8,%r13
   11e06:	41 54                	push   %r12
   11e08:	55                   	push   %rbp
   11e09:	48 89 cd             	mov    %rcx,%rbp
   11e0c:	53                   	push   %rbx
   11e0d:	48 83 ec 48          	sub    $0x48,%rsp
   11e11:	48 8b 05 38 82 01 00 	mov    0x18238(%rip),%rax        # 2a050 <__stack_chk_guard>
   11e18:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11e1d:	31 c0                	xor    %eax,%eax
   11e1f:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   11e24:	48 85 d2             	test   %rdx,%rdx
   11e27:	74 03                	je     11e2c <fetch_setting_alloc+0x32>
   11e29:	48 89 d3             	mov    %rdx,%rbx
   11e2c:	48 85 ed             	test   %rbp,%rbp
   11e2f:	75 05                	jne    11e36 <fetch_setting_alloc+0x3c>
   11e31:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   11e36:	45 31 c9             	xor    %r9d,%r9d
   11e39:	45 31 c0             	xor    %r8d,%r8d
   11e3c:	48 89 e9             	mov    %rbp,%rcx
   11e3f:	48 89 da             	mov    %rbx,%rdx
   11e42:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   11e49:	00 
   11e4a:	e8 fa fd ff ff       	call   11c49 <fetch_setting>
   11e4f:	41 89 c4             	mov    %eax,%r12d
   11e52:	85 c0                	test   %eax,%eax
   11e54:	78 2f                	js     11e85 <fetch_setting_alloc+0x8b>
   11e56:	4c 63 f0             	movslq %eax,%r14
   11e59:	4c 89 f7             	mov    %r14,%rdi
   11e5c:	41 ff d7             	call   *%r15
   11e5f:	49 89 45 00          	mov    %rax,0x0(%r13)
   11e63:	49 89 c0             	mov    %rax,%r8
   11e66:	48 85 c0             	test   %rax,%rax
   11e69:	75 08                	jne    11e73 <fetch_setting_alloc+0x79>
   11e6b:	41 bc 77 df f3 ce    	mov    $0xcef3df77,%r12d
   11e71:	eb 12                	jmp    11e85 <fetch_setting_alloc+0x8b>
   11e73:	48 8b 3b             	mov    (%rbx),%rdi
   11e76:	4d 89 f1             	mov    %r14,%r9
   11e79:	31 c9                	xor    %ecx,%ecx
   11e7b:	31 d2                	xor    %edx,%edx
   11e7d:	48 89 ee             	mov    %rbp,%rsi
   11e80:	e8 c4 fd ff ff       	call   11c49 <fetch_setting>
   11e85:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   11e8a:	48 2b 05 bf 81 01 00 	sub    0x181bf(%rip),%rax        # 2a050 <__stack_chk_guard>
   11e91:	74 05                	je     11e98 <fetch_setting_alloc+0x9e>
   11e93:	e8 c8 0b ff ff       	call   2a60 <__stack_chk_fail>
   11e98:	48 83 c4 48          	add    $0x48,%rsp
   11e9c:	44 89 e0             	mov    %r12d,%eax
   11e9f:	5b                   	pop    %rbx
   11ea0:	5d                   	pop    %rbp
   11ea1:	41 5c                	pop    %r12
   11ea3:	41 5d                	pop    %r13
   11ea5:	41 5e                	pop    %r14
   11ea7:	41 5f                	pop    %r15
   11ea9:	c3                   	ret    

0000000000011eaa <fetch_setting_copy>:
   11eaa:	f3 0f 1e fa          	endbr64 
   11eae:	4c 8d 0d 60 a8 ff ff 	lea    -0x57a0(%rip),%r9        # c715 <malloc>
   11eb5:	e9 40 ff ff ff       	jmp    11dfa <fetch_setting_alloc>

0000000000011eba <fetch_raw_setting_copy>:
   11eba:	f3 0f 1e fa          	endbr64 
   11ebe:	49 89 d0             	mov    %rdx,%r8
   11ec1:	31 c9                	xor    %ecx,%ecx
   11ec3:	31 d2                	xor    %edx,%edx
   11ec5:	e9 e0 ff ff ff       	jmp    11eaa <fetch_setting_copy>

0000000000011eca <fetch_string_setting_copy>:
   11eca:	f3 0f 1e fa          	endbr64 
   11ece:	49 89 d0             	mov    %rdx,%r8
   11ed1:	4c 8d 0d 98 f7 ff ff 	lea    -0x868(%rip),%r9        # 11670 <fetch_string_setting_copy_alloc>
   11ed8:	31 c9                	xor    %ecx,%ecx
   11eda:	31 d2                	xor    %edx,%edx
   11edc:	e9 19 ff ff ff       	jmp    11dfa <fetch_setting_alloc>

0000000000011ee1 <fetch_raw_setting>:
   11ee1:	f3 0f 1e fa          	endbr64 
   11ee5:	49 89 d0             	mov    %rdx,%r8
   11ee8:	49 89 c9             	mov    %rcx,%r9
   11eeb:	31 d2                	xor    %edx,%edx
   11eed:	31 c9                	xor    %ecx,%ecx
   11eef:	e9 55 fd ff ff       	jmp    11c49 <fetch_setting>

0000000000011ef4 <fetch_string_setting>:
   11ef4:	f3 0f 1e fa          	endbr64 
   11ef8:	49 89 f9             	mov    %rdi,%r9
   11efb:	49 89 c8             	mov    %rcx,%r8
   11efe:	48 89 d7             	mov    %rdx,%rdi
   11f01:	31 c0                	xor    %eax,%eax
   11f03:	f3 aa                	rep stos %al,%es:(%rdi)
   11f05:	49 83 f8 01          	cmp    $0x1,%r8
   11f09:	4c 89 cf             	mov    %r9,%rdi
   11f0c:	49 83 d0 ff          	adc    $0xffffffffffffffff,%r8
   11f10:	4c 89 c1             	mov    %r8,%rcx
   11f13:	e9 c9 ff ff ff       	jmp    11ee1 <fetch_raw_setting>

0000000000011f18 <fetch_ipv4_array_setting>:
   11f18:	f3 0f 1e fa          	endbr64 
   11f1c:	41 50                	push   %r8
   11f1e:	89 c9                	mov    %ecx,%ecx
   11f20:	48 c1 e1 02          	shl    $0x2,%rcx
   11f24:	e8 b8 ff ff ff       	call   11ee1 <fetch_raw_setting>
   11f29:	85 c0                	test   %eax,%eax
   11f2b:	78 09                	js     11f36 <fetch_ipv4_array_setting+0x1e>
   11f2d:	a8 03                	test   $0x3,%al
   11f2f:	74 05                	je     11f36 <fetch_ipv4_array_setting+0x1e>
   11f31:	b8 7b df f3 b9       	mov    $0xb9f3df7b,%eax
   11f36:	5a                   	pop    %rdx
   11f37:	c3                   	ret    

0000000000011f38 <fetch_ipv4_setting>:
   11f38:	f3 0f 1e fa          	endbr64 
   11f3c:	b9 01 00 00 00       	mov    $0x1,%ecx
   11f41:	e9 d2 ff ff ff       	jmp    11f18 <fetch_ipv4_array_setting>

0000000000011f46 <fetch_numeric_setting>:
   11f46:	f3 0f 1e fa          	endbr64 
   11f4a:	41 55                	push   %r13
   11f4c:	41 54                	push   %r12
   11f4e:	49 89 d4             	mov    %rdx,%r12
   11f51:	55                   	push   %rbp
   11f52:	89 cd                	mov    %ecx,%ebp
   11f54:	b9 08 00 00 00       	mov    $0x8,%ecx
   11f59:	48 83 ec 10          	sub    $0x10,%rsp
   11f5d:	48 8b 05 ec 80 01 00 	mov    0x180ec(%rip),%rax        # 2a050 <__stack_chk_guard>
   11f64:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11f69:	31 c0                	xor    %eax,%eax
   11f6b:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   11f72:	49 89 e5             	mov    %rsp,%r13
   11f75:	4c 89 ea             	mov    %r13,%rdx
   11f78:	e8 64 ff ff ff       	call   11ee1 <fetch_raw_setting>
   11f7d:	85 c0                	test   %eax,%eax
   11f7f:	78 10                	js     11f91 <fetch_numeric_setting+0x4b>
   11f81:	48 63 d0             	movslq %eax,%rdx
   11f84:	4c 89 e1             	mov    %r12,%rcx
   11f87:	4c 89 ee             	mov    %r13,%rsi
   11f8a:	89 ef                	mov    %ebp,%edi
   11f8c:	e8 a6 f3 ff ff       	call   11337 <numeric_setting_value>
   11f91:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11f96:	48 2b 15 b3 80 01 00 	sub    0x180b3(%rip),%rdx        # 2a050 <__stack_chk_guard>
   11f9d:	74 05                	je     11fa4 <fetch_numeric_setting+0x5e>
   11f9f:	e8 bc 0a ff ff       	call   2a60 <__stack_chk_fail>
   11fa4:	48 83 c4 10          	add    $0x10,%rsp
   11fa8:	5d                   	pop    %rbp
   11fa9:	41 5c                	pop    %r12
   11fab:	41 5d                	pop    %r13
   11fad:	c3                   	ret    

0000000000011fae <fetch_uint_setting>:
   11fae:	f3 0f 1e fa          	endbr64 
   11fb2:	31 c9                	xor    %ecx,%ecx
   11fb4:	e9 8d ff ff ff       	jmp    11f46 <fetch_numeric_setting>

0000000000011fb9 <fetch_intz_setting>:
   11fb9:	f3 0f 1e fa          	endbr64 
   11fbd:	48 83 ec 18          	sub    $0x18,%rsp
   11fc1:	b9 01 00 00 00       	mov    $0x1,%ecx
   11fc6:	48 8b 05 83 80 01 00 	mov    0x18083(%rip),%rax        # 2a050 <__stack_chk_guard>
   11fcd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11fd2:	31 c0                	xor    %eax,%eax
   11fd4:	48 89 e2             	mov    %rsp,%rdx
   11fd7:	e8 6a ff ff ff       	call   11f46 <fetch_numeric_setting>
   11fdc:	48 8b 04 24          	mov    (%rsp),%rax
   11fe0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11fe5:	48 2b 15 64 80 01 00 	sub    0x18064(%rip),%rdx        # 2a050 <__stack_chk_guard>
   11fec:	74 05                	je     11ff3 <fetch_intz_setting+0x3a>
   11fee:	e8 6d 0a ff ff       	call   2a60 <__stack_chk_fail>
   11ff3:	48 83 c4 18          	add    $0x18,%rsp
   11ff7:	c3                   	ret    

0000000000011ff8 <reprioritise_settings>:
   11ff8:	41 57                	push   %r15
   11ffa:	49 89 ff             	mov    %rdi,%r15
   11ffd:	41 56                	push   %r14
   11fff:	41 55                	push   %r13
   12001:	4c 8d 2d 08 79 01 00 	lea    0x17908(%rip),%r13        # 29910 <priority_setting>
   12008:	41 54                	push   %r12
   1200a:	55                   	push   %rbp
   1200b:	53                   	push   %rbx
   1200c:	48 83 ec 18          	sub    $0x18,%rsp
   12010:	49 8b 6f 10          	mov    0x10(%r15),%rbp
   12014:	48 85 ed             	test   %rbp,%rbp
   12017:	74 72                	je     1208b <reprioritise_settings+0x93>
   12019:	4c 89 ee             	mov    %r13,%rsi
   1201c:	4c 89 ff             	mov    %r15,%rdi
   1201f:	4d 8d 67 18          	lea    0x18(%r15),%r12
   12023:	e8 91 ff ff ff       	call   11fb9 <fetch_intz_setting>
   12028:	49 8b 57 18          	mov    0x18(%r15),%rdx
   1202c:	48 89 04 24          	mov    %rax,(%rsp)
   12030:	49 8b 47 20          	mov    0x20(%r15),%rax
   12034:	48 89 42 08          	mov    %rax,0x8(%rdx)
   12038:	48 89 10             	mov    %rdx,(%rax)
   1203b:	48 8b 45 28          	mov    0x28(%rbp),%rax
   1203f:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
   12043:	48 8d 45 28          	lea    0x28(%rbp),%rax
   12047:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1204c:	4c 8d 73 18          	lea    0x18(%rbx),%r14
   12050:	4c 3b 74 24 08       	cmp    0x8(%rsp),%r14
   12055:	74 11                	je     12068 <reprioritise_settings+0x70>
   12057:	4c 89 ee             	mov    %r13,%rsi
   1205a:	48 89 df             	mov    %rbx,%rdi
   1205d:	e8 57 ff ff ff       	call   11fb9 <fetch_intz_setting>
   12062:	48 3b 04 24          	cmp    (%rsp),%rax
   12066:	7d 10                	jge    12078 <reprioritise_settings+0x80>
   12068:	4c 89 f6             	mov    %r14,%rsi
   1206b:	4c 89 e7             	mov    %r12,%rdi
   1206e:	49 89 ef             	mov    %rbp,%r15
   12071:	e8 31 a1 ff ff       	call   c1a7 <extern_list_add_tail>
   12076:	eb 98                	jmp    12010 <reprioritise_settings+0x18>
   12078:	8b 43 48             	mov    0x48(%rbx),%eax
   1207b:	41 39 47 48          	cmp    %eax,0x48(%r15)
   1207f:	7f e7                	jg     12068 <reprioritise_settings+0x70>
   12081:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
   12085:	48 83 eb 18          	sub    $0x18,%rbx
   12089:	eb c1                	jmp    1204c <reprioritise_settings+0x54>
   1208b:	48 83 c4 18          	add    $0x18,%rsp
   1208f:	5b                   	pop    %rbx
   12090:	5d                   	pop    %rbp
   12091:	41 5c                	pop    %r12
   12093:	41 5d                	pop    %r13
   12095:	41 5e                	pop    %r14
   12097:	41 5f                	pop    %r15
   12099:	c3                   	ret    

000000000001209a <register_settings>:
   1209a:	f3 0f 1e fa          	endbr64 
   1209e:	41 54                	push   %r12
   120a0:	49 89 d4             	mov    %rdx,%r12
   120a3:	55                   	push   %rbp
   120a4:	48 89 fd             	mov    %rdi,%rbp
   120a7:	48 89 f7             	mov    %rsi,%rdi
   120aa:	53                   	push   %rbx
   120ab:	e8 e3 f8 ff ff       	call   11993 <settings_target>
   120b0:	4c 89 65 08          	mov    %r12,0x8(%rbp)
   120b4:	4c 89 e6             	mov    %r12,%rsi
   120b7:	48 89 c7             	mov    %rax,%rdi
   120ba:	48 89 c3             	mov    %rax,%rbx
   120bd:	e8 f6 f8 ff ff       	call   119b8 <find_child_settings>
   120c2:	48 85 c0             	test   %rax,%rax
   120c5:	74 08                	je     120cf <register_settings+0x35>
   120c7:	48 89 c7             	mov    %rax,%rdi
   120ca:	e8 6f f8 ff ff       	call   1193e <unregister_settings>
   120cf:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   120d3:	e8 36 de ff ff       	call   ff0e <ref_increment>
   120d8:	48 8b 3b             	mov    (%rbx),%rdi
   120db:	e8 2e de ff ff       	call   ff0e <ref_increment>
   120e0:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
   120e4:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   120e8:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   120ec:	e8 b6 a0 ff ff       	call   c1a7 <extern_list_add_tail>
   120f1:	48 89 ef             	mov    %rbp,%rdi
   120f4:	e8 ff fe ff ff       	call   11ff8 <reprioritise_settings>
   120f9:	e8 11 f2 ff ff       	call   1130f <apply_settings>
   120fe:	5b                   	pop    %rbx
   120ff:	31 c0                	xor    %eax,%eax
   12101:	5d                   	pop    %rbp
   12102:	41 5c                	pop    %r12
   12104:	c3                   	ret    

0000000000012105 <autovivify_child_settings>:
   12105:	f3 0f 1e fa          	endbr64 
   12109:	41 56                	push   %r14
   1210b:	41 55                	push   %r13
   1210d:	41 54                	push   %r12
   1210f:	49 89 fc             	mov    %rdi,%r12
   12112:	48 89 f7             	mov    %rsi,%rdi
   12115:	55                   	push   %rbp
   12116:	48 89 f5             	mov    %rsi,%rbp
   12119:	53                   	push   %rbx
   1211a:	e8 f7 18 00 00       	call   13a16 <strlen>
   1211f:	4c 89 e7             	mov    %r12,%rdi
   12122:	48 89 c3             	mov    %rax,%rbx
   12125:	e8 69 f8 ff ff       	call   11993 <settings_target>
   1212a:	48 89 ee             	mov    %rbp,%rsi
   1212d:	48 89 c7             	mov    %rax,%rdi
   12130:	49 89 c5             	mov    %rax,%r13
   12133:	e8 80 f8 ff ff       	call   119b8 <find_child_settings>
   12138:	49 89 c4             	mov    %rax,%r12
   1213b:	48 85 c0             	test   %rax,%rax
   1213e:	0f 85 9f 00 00 00    	jne    121e3 <autovivify_child_settings+0xde>
   12144:	48 8d 7b 78          	lea    0x78(%rbx),%rdi
   12148:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1214c:	e8 e5 a5 ff ff       	call   c736 <zalloc>
   12151:	49 89 c4             	mov    %rax,%r12
   12154:	48 85 c0             	test   %rax,%rax
   12157:	0f 84 86 00 00 00    	je     121e3 <autovivify_child_settings+0xde>
   1215d:	4c 8d 70 70          	lea    0x70(%rax),%r14
   12161:	48 8d 53 01          	lea    0x1(%rbx),%rdx
   12165:	48 89 ee             	mov    %rbp,%rsi
   12168:	4c 89 f7             	mov    %r14,%rdi
   1216b:	49 8d 5c 24 10       	lea    0x10(%r12),%rbx
   12170:	e8 74 52 00 00       	call   173e9 <__memcpy>
   12175:	4d 89 64 24 10       	mov    %r12,0x10(%r12)
   1217a:	4c 89 f2             	mov    %r14,%rdx
   1217d:	4c 89 ee             	mov    %r13,%rsi
   12180:	48 8d 05 2f f5 ff ff 	lea    -0xad1(%rip),%rax        # 116b6 <autovivified_settings_free>
   12187:	48 89 df             	mov    %rbx,%rdi
   1218a:	49 c7 44 24 50 00 00 	movq   $0x0,0x50(%r12)
   12191:	00 00 
   12193:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   12198:	49 8d 44 24 28       	lea    0x28(%r12),%rax
   1219d:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   121a2:	49 89 44 24 30       	mov    %rax,0x30(%r12)
   121a7:	49 8d 44 24 38       	lea    0x38(%r12),%rax
   121ac:	49 89 44 24 38       	mov    %rax,0x38(%r12)
   121b1:	49 89 44 24 40       	mov    %rax,0x40(%r12)
   121b6:	48 8d 05 e3 4f 01 00 	lea    0x14fe3(%rip),%rax        # 271a0 <generic_settings_operations>
   121bd:	49 89 44 24 48       	mov    %rax,0x48(%r12)
   121c2:	49 8d 44 24 60       	lea    0x60(%r12),%rax
   121c7:	49 89 44 24 60       	mov    %rax,0x60(%r12)
   121cc:	49 89 44 24 68       	mov    %rax,0x68(%r12)
   121d1:	e8 c4 fe ff ff       	call   1209a <register_settings>
   121d6:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   121db:	49 89 dc             	mov    %rbx,%r12
   121de:	e8 37 dd ff ff       	call   ff1a <ref_decrement>
   121e3:	5b                   	pop    %rbx
   121e4:	4c 89 e0             	mov    %r12,%rax
   121e7:	5d                   	pop    %rbp
   121e8:	41 5c                	pop    %r12
   121ea:	41 5d                	pop    %r13
   121ec:	41 5e                	pop    %r14
   121ee:	c3                   	ret    

00000000000121ef <builtin_init>:
   121ef:	f3 0f 1e fa          	endbr64 
   121f3:	48 8d 15 61 16 01 00 	lea    0x11661(%rip),%rdx        # 2385b <.LC5>
   121fa:	31 f6                	xor    %esi,%esi
   121fc:	48 8d 3d 9d 4e 01 00 	lea    0x14e9d(%rip),%rdi        # 270a0 <builtin_settings>
   12203:	e9 92 fe ff ff       	jmp    1209a <register_settings>

0000000000012208 <fetch_uintz_setting>:
   12208:	f3 0f 1e fa          	endbr64 
   1220c:	48 83 ec 18          	sub    $0x18,%rsp
   12210:	31 c9                	xor    %ecx,%ecx
   12212:	48 8b 05 37 7e 01 00 	mov    0x17e37(%rip),%rax        # 2a050 <__stack_chk_guard>
   12219:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1221e:	31 c0                	xor    %eax,%eax
   12220:	48 89 e2             	mov    %rsp,%rdx
   12223:	e8 1e fd ff ff       	call   11f46 <fetch_numeric_setting>
   12228:	48 8b 04 24          	mov    (%rsp),%rax
   1222c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   12231:	48 2b 15 18 7e 01 00 	sub    0x17e18(%rip),%rdx        # 2a050 <__stack_chk_guard>
   12238:	74 05                	je     1223f <fetch_uintz_setting+0x37>
   1223a:	e8 21 08 ff ff       	call   2a60 <__stack_chk_fail>
   1223f:	48 83 c4 18          	add    $0x18,%rsp
   12243:	c3                   	ret    

0000000000012244 <fetch_uuid_setting>:
   12244:	f3 0f 1e fa          	endbr64 
   12248:	51                   	push   %rcx
   12249:	b9 10 00 00 00       	mov    $0x10,%ecx
   1224e:	e8 8e fc ff ff       	call   11ee1 <fetch_raw_setting>
   12253:	85 c0                	test   %eax,%eax
   12255:	78 0a                	js     12261 <fetch_uuid_setting+0x1d>
   12257:	83 f8 10             	cmp    $0x10,%eax
   1225a:	74 05                	je     12261 <fetch_uuid_setting+0x1d>
   1225c:	b8 7b df f3 b9       	mov    $0xb9f3df7b,%eax
   12261:	5a                   	pop    %rdx
   12262:	c3                   	ret    

0000000000012263 <store_setting>:
   12263:	f3 0f 1e fa          	endbr64 
   12267:	41 54                	push   %r12
   12269:	55                   	push   %rbp
   1226a:	48 89 f5             	mov    %rsi,%rbp
   1226d:	53                   	push   %rbx
   1226e:	48 83 ec 10          	sub    $0x10,%rsp
   12272:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   12277:	48 89 0c 24          	mov    %rcx,(%rsp)
   1227b:	e8 13 f7 ff ff       	call   11993 <settings_target>
   12280:	48 89 ee             	mov    %rbp,%rsi
   12283:	48 89 c7             	mov    %rax,%rdi
   12286:	48 89 c3             	mov    %rax,%rbx
   12289:	e8 12 f8 ff ff       	call   11aa0 <setting_applies>
   1228e:	48 8b 0c 24          	mov    (%rsp),%rcx
   12292:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   12297:	85 c0                	test   %eax,%eax
   12299:	75 08                	jne    122a3 <store_setting+0x40>
   1229b:	41 bc 7d df f3 c2    	mov    $0xc2f3df7d,%r12d
   122a1:	eb 61                	jmp    12304 <store_setting+0xa1>
   122a3:	48 8b 43 38          	mov    0x38(%rbx),%rax
   122a7:	48 8b 40 10          	mov    0x10(%rax),%rax
   122ab:	48 85 c0             	test   %rax,%rax
   122ae:	75 08                	jne    122b8 <store_setting+0x55>
   122b0:	41 bc 7d df f3 c3    	mov    $0xc3f3df7d,%r12d
   122b6:	eb 4c                	jmp    12304 <store_setting+0xa1>
   122b8:	48 89 ee             	mov    %rbp,%rsi
   122bb:	48 89 df             	mov    %rbx,%rdi
   122be:	ff d0                	call   *%rax
   122c0:	41 89 c4             	mov    %eax,%r12d
   122c3:	85 c0                	test   %eax,%eax
   122c5:	75 3d                	jne    12304 <store_setting+0xa1>
   122c7:	48 8d 35 42 76 01 00 	lea    0x17642(%rip),%rsi        # 29910 <priority_setting>
   122ce:	48 89 ef             	mov    %rbp,%rdi
   122d1:	e8 20 f8 ff ff       	call   11af6 <setting_cmp>
   122d6:	85 c0                	test   %eax,%eax
   122d8:	75 08                	jne    122e2 <store_setting+0x7f>
   122da:	48 89 df             	mov    %rbx,%rdi
   122dd:	e8 16 fd ff ff       	call   11ff8 <reprioritise_settings>
   122e2:	48 8d 05 57 4e 01 00 	lea    0x14e57(%rip),%rax        # 27140 <generic_settings_root>
   122e9:	48 39 c3             	cmp    %rax,%rbx
   122ec:	75 0d                	jne    122fb <store_setting+0x98>
   122ee:	48 83 c4 10          	add    $0x10,%rsp
   122f2:	5b                   	pop    %rbx
   122f3:	5d                   	pop    %rbp
   122f4:	41 5c                	pop    %r12
   122f6:	e9 14 f0 ff ff       	jmp    1130f <apply_settings>
   122fb:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   122ff:	48 85 db             	test   %rbx,%rbx
   12302:	75 e5                	jne    122e9 <store_setting+0x86>
   12304:	48 83 c4 10          	add    $0x10,%rsp
   12308:	44 89 e0             	mov    %r12d,%eax
   1230b:	5b                   	pop    %rbx
   1230c:	5d                   	pop    %rbp
   1230d:	41 5c                	pop    %r12
   1230f:	c3                   	ret    

0000000000012310 <builtin_fetch>:
   12310:	f3 0f 1e fa          	endbr64 
   12314:	41 56                	push   %r14
   12316:	4c 8d 35 03 62 01 00 	lea    0x16203(%rip),%r14        # 28520 <net_discarder>
   1231d:	41 55                	push   %r13
   1231f:	49 89 cd             	mov    %rcx,%r13
   12322:	41 54                	push   %r12
   12324:	49 89 d4             	mov    %rdx,%r12
   12327:	55                   	push   %rbp
   12328:	48 89 f5             	mov    %rsi,%rbp
   1232b:	53                   	push   %rbx
   1232c:	48 8d 1d 9d 61 01 00 	lea    0x1619d(%rip),%rbx        # 284d0 <unixtime_builtin_setting>
   12333:	4c 39 f3             	cmp    %r14,%rbx
   12336:	73 29                	jae    12361 <builtin_fetch+0x51>
   12338:	48 8b 33             	mov    (%rbx),%rsi
   1233b:	48 89 ef             	mov    %rbp,%rdi
   1233e:	e8 b3 f7 ff ff       	call   11af6 <setting_cmp>
   12343:	85 c0                	test   %eax,%eax
   12345:	75 14                	jne    1235b <builtin_fetch+0x4b>
   12347:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1234b:	4c 89 ee             	mov    %r13,%rsi
   1234e:	5b                   	pop    %rbx
   1234f:	4c 89 e7             	mov    %r12,%rdi
   12352:	5d                   	pop    %rbp
   12353:	41 5c                	pop    %r12
   12355:	41 5d                	pop    %r13
   12357:	41 5e                	pop    %r14
   12359:	ff e0                	jmp    *%rax
   1235b:	48 83 c3 10          	add    $0x10,%rbx
   1235f:	eb d2                	jmp    12333 <builtin_fetch+0x23>
   12361:	b8 72 df f3 d2       	mov    $0xd2f3df72,%eax
   12366:	5b                   	pop    %rbx
   12367:	5d                   	pop    %rbp
   12368:	41 5c                	pop    %r12
   1236a:	41 5d                	pop    %r13
   1236c:	41 5e                	pop    %r14
   1236e:	c3                   	ret    

000000000001236f <generic_settings_fetch>:
   1236f:	f3 0f 1e fa          	endbr64 
   12373:	41 56                	push   %r14
   12375:	49 89 d6             	mov    %rdx,%r14
   12378:	41 55                	push   %r13
   1237a:	49 89 f5             	mov    %rsi,%r13
   1237d:	41 54                	push   %r12
   1237f:	4c 8d 67 50          	lea    0x50(%rdi),%r12
   12383:	55                   	push   %rbp
   12384:	48 89 cd             	mov    %rcx,%rbp
   12387:	53                   	push   %rbx
   12388:	48 8b 5f 50          	mov    0x50(%rdi),%rbx
   1238c:	4c 39 e3             	cmp    %r12,%rbx
   1238f:	74 1c                	je     123ad <generic_settings_fetch+0x3e>
   12391:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   12395:	4c 89 ee             	mov    %r13,%rsi
   12398:	e8 59 f7 ff ff       	call   11af6 <setting_cmp>
   1239d:	85 c0                	test   %eax,%eax
   1239f:	75 07                	jne    123a8 <generic_settings_fetch+0x39>
   123a1:	48 85 db             	test   %rbx,%rbx
   123a4:	75 0e                	jne    123b4 <generic_settings_fetch+0x45>
   123a6:	eb 05                	jmp    123ad <generic_settings_fetch+0x3e>
   123a8:	48 8b 1b             	mov    (%rbx),%rbx
   123ab:	eb df                	jmp    1238c <generic_settings_fetch+0x1d>
   123ad:	b8 72 df f3 d2       	mov    $0xd2f3df72,%eax
   123b2:	eb 31                	jmp    123e5 <generic_settings_fetch+0x76>
   123b4:	48 8b 43 40          	mov    0x40(%rbx),%rax
   123b8:	4c 89 f7             	mov    %r14,%rdi
   123bb:	48 39 c5             	cmp    %rax,%rbp
   123be:	48 0f 46 c5          	cmovbe %rbp,%rax
   123c2:	48 89 c2             	mov    %rax,%rdx
   123c5:	48 8b 43 38          	mov    0x38(%rbx),%rax
   123c9:	48 8d 74 03 48       	lea    0x48(%rbx,%rax,1),%rsi
   123ce:	e8 16 50 00 00       	call   173e9 <__memcpy>
   123d3:	49 83 7d 10 00       	cmpq   $0x0,0x10(%r13)
   123d8:	75 08                	jne    123e2 <generic_settings_fetch+0x73>
   123da:	48 8b 43 20          	mov    0x20(%rbx),%rax
   123de:	49 89 45 10          	mov    %rax,0x10(%r13)
   123e2:	8b 43 40             	mov    0x40(%rbx),%eax
   123e5:	5b                   	pop    %rbx
   123e6:	5d                   	pop    %rbp
   123e7:	41 5c                	pop    %r12
   123e9:	41 5d                	pop    %r13
   123eb:	41 5e                	pop    %r14
   123ed:	c3                   	ret    

00000000000123ee <setting_format>:
   123ee:	f3 0f 1e fa          	endbr64 
   123f2:	48 8b 47 10          	mov    0x10(%rdi),%rax
   123f6:	48 85 c0             	test   %rax,%rax
   123f9:	74 02                	je     123fd <setting_format+0xf>
   123fb:	ff e0                	jmp    *%rax
   123fd:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   12402:	c3                   	ret    

0000000000012403 <setting_parse>:
   12403:	f3 0f 1e fa          	endbr64 
   12407:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1240b:	48 85 c0             	test   %rax,%rax
   1240e:	74 02                	je     12412 <setting_parse+0xf>
   12410:	ff e0                	jmp    *%rax
   12412:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   12417:	c3                   	ret    

0000000000012418 <setting_numerate>:
   12418:	f3 0f 1e fa          	endbr64 
   1241c:	48 8b 47 20          	mov    0x20(%rdi),%rax
   12420:	48 85 c0             	test   %rax,%rax
   12423:	74 02                	je     12427 <setting_numerate+0xf>
   12425:	ff e0                	jmp    *%rax
   12427:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   1242c:	c3                   	ret    

000000000001242d <setting_denumerate>:
   1242d:	f3 0f 1e fa          	endbr64 
   12431:	48 8b 47 18          	mov    0x18(%rdi),%rax
   12435:	48 85 c0             	test   %rax,%rax
   12438:	74 02                	je     1243c <setting_denumerate+0xf>
   1243a:	ff e0                	jmp    *%rax
   1243c:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   12441:	c3                   	ret    

0000000000012442 <fetchf_setting>:
   12442:	f3 0f 1e fa          	endbr64 
   12446:	41 54                	push   %r12
   12448:	4d 89 c4             	mov    %r8,%r12
   1244b:	55                   	push   %rbp
   1244c:	4c 89 cd             	mov    %r9,%rbp
   1244f:	53                   	push   %rbx
   12450:	48 83 ec 50          	sub    $0x50,%rsp
   12454:	48 8b 05 f5 7b 01 00 	mov    0x17bf5(%rip),%rax        # 2a050 <__stack_chk_guard>
   1245b:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   12460:	31 c0                	xor    %eax,%eax
   12462:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
   12467:	48 85 c9             	test   %rcx,%rcx
   1246a:	74 03                	je     1246f <fetchf_setting+0x2d>
   1246c:	48 89 cb             	mov    %rcx,%rbx
   1246f:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   12474:	48 89 d9             	mov    %rbx,%rcx
   12477:	e8 2e fa ff ff       	call   11eaa <fetch_setting_copy>
   1247c:	85 c0                	test   %eax,%eax
   1247e:	78 29                	js     124a9 <fetchf_setting+0x67>
   12480:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   12484:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   12489:	48 63 d0             	movslq %eax,%rdx
   1248c:	49 89 e8             	mov    %rbp,%r8
   1248f:	4c 89 e1             	mov    %r12,%rcx
   12492:	e8 57 ff ff ff       	call   123ee <setting_format>
   12497:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1249c:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   124a0:	e8 7d a2 ff ff       	call   c722 <free>
   124a5:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   124a9:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   124ae:	48 2b 15 9b 7b 01 00 	sub    0x17b9b(%rip),%rdx        # 2a050 <__stack_chk_guard>
   124b5:	74 05                	je     124bc <fetchf_setting+0x7a>
   124b7:	e8 a4 05 ff ff       	call   2a60 <__stack_chk_fail>
   124bc:	48 83 c4 50          	add    $0x50,%rsp
   124c0:	5b                   	pop    %rbx
   124c1:	5d                   	pop    %rbp
   124c2:	41 5c                	pop    %r12
   124c4:	c3                   	ret    

00000000000124c5 <fetchf_setting_copy>:
   124c5:	f3 0f 1e fa          	endbr64 
   124c9:	41 55                	push   %r13
   124cb:	4d 89 c5             	mov    %r8,%r13
   124ce:	41 54                	push   %r12
   124d0:	55                   	push   %rbp
   124d1:	48 89 cd             	mov    %rcx,%rbp
   124d4:	53                   	push   %rbx
   124d5:	48 83 ec 58          	sub    $0x58,%rsp
   124d9:	48 8b 05 70 7b 01 00 	mov    0x17b70(%rip),%rax        # 2a050 <__stack_chk_guard>
   124e0:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   124e5:	31 c0                	xor    %eax,%eax
   124e7:	48 8d 5c 24 18       	lea    0x18(%rsp),%rbx
   124ec:	48 85 d2             	test   %rdx,%rdx
   124ef:	74 03                	je     124f4 <fetchf_setting_copy+0x2f>
   124f1:	48 89 d3             	mov    %rdx,%rbx
   124f4:	48 85 ed             	test   %rbp,%rbp
   124f7:	75 05                	jne    124fe <fetchf_setting_copy+0x39>
   124f9:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   124fe:	45 31 c9             	xor    %r9d,%r9d
   12501:	45 31 c0             	xor    %r8d,%r8d
   12504:	48 89 e9             	mov    %rbp,%rcx
   12507:	48 89 da             	mov    %rbx,%rdx
   1250a:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   12511:	00 
   12512:	e8 2b ff ff ff       	call   12442 <fetchf_setting>
   12517:	41 89 c4             	mov    %eax,%r12d
   1251a:	85 c0                	test   %eax,%eax
   1251c:	78 3c                	js     1255a <fetchf_setting_copy+0x95>
   1251e:	44 8d 48 01          	lea    0x1(%rax),%r9d
   12522:	4d 63 c9             	movslq %r9d,%r9
   12525:	4c 89 cf             	mov    %r9,%rdi
   12528:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1252d:	e8 04 a2 ff ff       	call   c736 <zalloc>
   12532:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   12537:	48 85 c0             	test   %rax,%rax
   1253a:	49 89 45 00          	mov    %rax,0x0(%r13)
   1253e:	49 89 c0             	mov    %rax,%r8
   12541:	75 08                	jne    1254b <fetchf_setting_copy+0x86>
   12543:	41 bc 77 df f3 ce    	mov    $0xcef3df77,%r12d
   12549:	eb 0f                	jmp    1255a <fetchf_setting_copy+0x95>
   1254b:	48 8b 3b             	mov    (%rbx),%rdi
   1254e:	31 c9                	xor    %ecx,%ecx
   12550:	31 d2                	xor    %edx,%edx
   12552:	48 89 ee             	mov    %rbp,%rsi
   12555:	e8 e8 fe ff ff       	call   12442 <fetchf_setting>
   1255a:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1255f:	48 2b 05 ea 7a 01 00 	sub    0x17aea(%rip),%rax        # 2a050 <__stack_chk_guard>
   12566:	74 05                	je     1256d <fetchf_setting_copy+0xa8>
   12568:	e8 f3 04 ff ff       	call   2a60 <__stack_chk_fail>
   1256d:	48 83 c4 58          	add    $0x58,%rsp
   12571:	44 89 e0             	mov    %r12d,%eax
   12574:	5b                   	pop    %rbx
   12575:	5d                   	pop    %rbp
   12576:	41 5c                	pop    %r12
   12578:	41 5d                	pop    %r13
   1257a:	c3                   	ret    

000000000001257b <storef_setting>:
   1257b:	f3 0f 1e fa          	endbr64 
   1257f:	41 57                	push   %r15
   12581:	41 56                	push   %r14
   12583:	49 89 f6             	mov    %rsi,%r14
   12586:	41 55                	push   %r13
   12588:	49 89 fd             	mov    %rdi,%r13
   1258b:	41 54                	push   %r12
   1258d:	55                   	push   %rbp
   1258e:	48 83 ec 10          	sub    $0x10,%rsp
   12592:	48 85 d2             	test   %rdx,%rdx
   12595:	74 08                	je     1259f <storef_setting+0x24>
   12597:	80 3a 00             	cmpb   $0x0,(%rdx)
   1259a:	49 89 d7             	mov    %rdx,%r15
   1259d:	75 1c                	jne    125bb <storef_setting+0x40>
   1259f:	48 83 c4 10          	add    $0x10,%rsp
   125a3:	4c 89 f6             	mov    %r14,%rsi
   125a6:	4c 89 ef             	mov    %r13,%rdi
   125a9:	31 c9                	xor    %ecx,%ecx
   125ab:	5d                   	pop    %rbp
   125ac:	31 d2                	xor    %edx,%edx
   125ae:	41 5c                	pop    %r12
   125b0:	41 5d                	pop    %r13
   125b2:	41 5e                	pop    %r14
   125b4:	41 5f                	pop    %r15
   125b6:	e9 a8 fc ff ff       	jmp    12263 <store_setting>
   125bb:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
   125bf:	31 c9                	xor    %ecx,%ecx
   125c1:	31 d2                	xor    %edx,%edx
   125c3:	4c 89 fe             	mov    %r15,%rsi
   125c6:	e8 38 fe ff ff       	call   12403 <setting_parse>
   125cb:	85 c0                	test   %eax,%eax
   125cd:	78 4d                	js     1261c <storef_setting+0xa1>
   125cf:	4c 63 e0             	movslq %eax,%r12
   125d2:	4c 89 e7             	mov    %r12,%rdi
   125d5:	e8 3b a1 ff ff       	call   c715 <malloc>
   125da:	48 89 c5             	mov    %rax,%rbp
   125dd:	48 85 c0             	test   %rax,%rax
   125e0:	75 07                	jne    125e9 <storef_setting+0x6e>
   125e2:	b8 77 df f3 ce       	mov    $0xcef3df77,%eax
   125e7:	eb 33                	jmp    1261c <storef_setting+0xa1>
   125e9:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   125ed:	4c 89 e1             	mov    %r12,%rcx
   125f0:	48 89 c2             	mov    %rax,%rdx
   125f3:	4c 89 fe             	mov    %r15,%rsi
   125f6:	e8 08 fe ff ff       	call   12403 <setting_parse>
   125fb:	4c 89 e1             	mov    %r12,%rcx
   125fe:	48 89 ea             	mov    %rbp,%rdx
   12601:	4c 89 f6             	mov    %r14,%rsi
   12604:	4c 89 ef             	mov    %r13,%rdi
   12607:	e8 57 fc ff ff       	call   12263 <store_setting>
   1260c:	48 89 ef             	mov    %rbp,%rdi
   1260f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   12613:	e8 0a a1 ff ff       	call   c722 <free>
   12618:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1261c:	48 83 c4 10          	add    $0x10,%rsp
   12620:	5d                   	pop    %rbp
   12621:	41 5c                	pop    %r12
   12623:	41 5d                	pop    %r13
   12625:	41 5e                	pop    %r14
   12627:	41 5f                	pop    %r15
   12629:	c3                   	ret    

000000000001262a <fetchn_setting>:
   1262a:	f3 0f 1e fa          	endbr64 
   1262e:	41 54                	push   %r12
   12630:	4d 89 c4             	mov    %r8,%r12
   12633:	53                   	push   %rbx
   12634:	48 83 ec 58          	sub    $0x58,%rsp
   12638:	48 8b 05 11 7a 01 00 	mov    0x17a11(%rip),%rax        # 2a050 <__stack_chk_guard>
   1263f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   12644:	31 c0                	xor    %eax,%eax
   12646:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
   1264b:	48 85 c9             	test   %rcx,%rcx
   1264e:	74 03                	je     12653 <fetchn_setting+0x29>
   12650:	48 89 cb             	mov    %rcx,%rbx
   12653:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   12658:	48 89 d9             	mov    %rbx,%rcx
   1265b:	e8 4a f8 ff ff       	call   11eaa <fetch_setting_copy>
   12660:	85 c0                	test   %eax,%eax
   12662:	78 26                	js     1268a <fetchn_setting+0x60>
   12664:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   12668:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1266d:	48 63 d0             	movslq %eax,%rdx
   12670:	4c 89 e1             	mov    %r12,%rcx
   12673:	e8 a0 fd ff ff       	call   12418 <setting_numerate>
   12678:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1267d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   12681:	e8 9c a0 ff ff       	call   c722 <free>
   12686:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1268a:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1268f:	48 2b 15 ba 79 01 00 	sub    0x179ba(%rip),%rdx        # 2a050 <__stack_chk_guard>
   12696:	74 05                	je     1269d <fetchn_setting+0x73>
   12698:	e8 c3 03 ff ff       	call   2a60 <__stack_chk_fail>
   1269d:	48 83 c4 58          	add    $0x58,%rsp
   126a1:	5b                   	pop    %rbx
   126a2:	41 5c                	pop    %r12
   126a4:	c3                   	ret    

00000000000126a5 <storen_setting>:
   126a5:	f3 0f 1e fa          	endbr64 
   126a9:	41 57                	push   %r15
   126ab:	31 c9                	xor    %ecx,%ecx
   126ad:	49 89 f7             	mov    %rsi,%r15
   126b0:	41 56                	push   %r14
   126b2:	49 89 d6             	mov    %rdx,%r14
   126b5:	31 d2                	xor    %edx,%edx
   126b7:	41 55                	push   %r13
   126b9:	49 89 fd             	mov    %rdi,%r13
   126bc:	41 54                	push   %r12
   126be:	55                   	push   %rbp
   126bf:	48 83 ec 10          	sub    $0x10,%rsp
   126c3:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
   126c7:	4c 89 f6             	mov    %r14,%rsi
   126ca:	e8 5e fd ff ff       	call   1242d <setting_denumerate>
   126cf:	85 c0                	test   %eax,%eax
   126d1:	78 4d                	js     12720 <storen_setting+0x7b>
   126d3:	4c 63 e0             	movslq %eax,%r12
   126d6:	4c 89 e7             	mov    %r12,%rdi
   126d9:	e8 37 a0 ff ff       	call   c715 <malloc>
   126de:	48 89 c5             	mov    %rax,%rbp
   126e1:	48 85 c0             	test   %rax,%rax
   126e4:	75 07                	jne    126ed <storen_setting+0x48>
   126e6:	b8 77 df f3 ce       	mov    $0xcef3df77,%eax
   126eb:	eb 33                	jmp    12720 <storen_setting+0x7b>
   126ed:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   126f1:	4c 89 e1             	mov    %r12,%rcx
   126f4:	48 89 c2             	mov    %rax,%rdx
   126f7:	4c 89 f6             	mov    %r14,%rsi
   126fa:	e8 2e fd ff ff       	call   1242d <setting_denumerate>
   126ff:	4c 89 e1             	mov    %r12,%rcx
   12702:	48 89 ea             	mov    %rbp,%rdx
   12705:	4c 89 fe             	mov    %r15,%rsi
   12708:	4c 89 ef             	mov    %r13,%rdi
   1270b:	e8 53 fb ff ff       	call   12263 <store_setting>
   12710:	48 89 ef             	mov    %rbp,%rdi
   12713:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   12717:	e8 06 a0 ff ff       	call   c722 <free>
   1271c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   12720:	48 83 c4 10          	add    $0x10,%rsp
   12724:	5d                   	pop    %rbp
   12725:	41 5c                	pop    %r12
   12727:	41 5d                	pop    %r13
   12729:	41 5e                	pop    %r14
   1272b:	41 5f                	pop    %r15
   1272d:	c3                   	ret    

000000000001272e <find_setting>:
   1272e:	f3 0f 1e fa          	endbr64 
   12732:	41 54                	push   %r12
   12734:	4c 8d 25 6d 6b 01 00 	lea    0x16b6d(%rip),%r12        # 292a8 <busid_setting>
   1273b:	55                   	push   %rbp
   1273c:	48 8d 2d 6d 72 01 00 	lea    0x1726d(%rip),%rbp        # 299b0 <dns_applicator>
   12743:	53                   	push   %rbx
   12744:	48 89 fb             	mov    %rdi,%rbx
   12747:	49 39 ec             	cmp    %rbp,%r12
   1274a:	73 16                	jae    12762 <find_setting+0x34>
   1274c:	49 8b 34 24          	mov    (%r12),%rsi
   12750:	48 89 df             	mov    %rbx,%rdi
   12753:	e8 64 12 00 00       	call   139bc <strcmp>
   12758:	85 c0                	test   %eax,%eax
   1275a:	74 09                	je     12765 <find_setting+0x37>
   1275c:	49 83 c4 28          	add    $0x28,%r12
   12760:	eb e5                	jmp    12747 <find_setting+0x19>
   12762:	45 31 e4             	xor    %r12d,%r12d
   12765:	4c 89 e0             	mov    %r12,%rax
   12768:	5b                   	pop    %rbx
   12769:	5d                   	pop    %rbp
   1276a:	41 5c                	pop    %r12
   1276c:	c3                   	ret    

000000000001276d <parse_setting_name>:
   1276d:	f3 0f 1e fa          	endbr64 
   12771:	41 57                	push   %r15
   12773:	49 89 f7             	mov    %rsi,%r15
   12776:	41 56                	push   %r14
   12778:	49 89 d6             	mov    %rdx,%r14
   1277b:	41 55                	push   %r13
   1277d:	41 54                	push   %r12
   1277f:	49 89 fc             	mov    %rdi,%r12
   12782:	48 89 cf             	mov    %rcx,%rdi
   12785:	55                   	push   %rbp
   12786:	48 89 cd             	mov    %rcx,%rbp
   12789:	b9 28 00 00 00       	mov    $0x28,%ecx
   1278e:	53                   	push   %rbx
   1278f:	48 83 ec 28          	sub    $0x28,%rsp
   12793:	48 8b 05 b6 78 01 00 	mov    0x178b6(%rip),%rax        # 2a050 <__stack_chk_guard>
   1279a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1279f:	48 8d 05 9a 49 01 00 	lea    0x1499a(%rip),%rax        # 27140 <generic_settings_root>
   127a6:	48 89 02             	mov    %rax,(%rdx)
   127a9:	31 c0                	xor    %eax,%eax
   127ab:	f3 aa                	rep stos %al,%es:(%rdi)
   127ad:	48 8d 05 00 1d 01 00 	lea    0x11d00(%rip),%rax        # 244b4 <.LC0>
   127b4:	be 2f 00 00 00       	mov    $0x2f,%esi
   127b9:	4c 89 e7             	mov    %r12,%rdi
   127bc:	48 89 45 00          	mov    %rax,0x0(%rbp)
   127c0:	e8 5e 12 00 00       	call   13a23 <strchr>
   127c5:	49 89 c5             	mov    %rax,%r13
   127c8:	48 85 c0             	test   %rax,%rax
   127cb:	74 0f                	je     127dc <parse_setting_name+0x6f>
   127cd:	48 8d 40 01          	lea    0x1(%rax),%rax
   127d1:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   127d6:	4d 89 e5             	mov    %r12,%r13
   127d9:	49 89 c4             	mov    %rax,%r12
   127dc:	be 3a 00 00 00       	mov    $0x3a,%esi
   127e1:	4c 89 e7             	mov    %r12,%rdi
   127e4:	e8 3a 12 00 00       	call   13a23 <strchr>
   127e9:	48 89 c3             	mov    %rax,%rbx
   127ec:	48 85 c0             	test   %rax,%rax
   127ef:	74 06                	je     127f7 <parse_setting_name+0x8a>
   127f1:	c6 00 00             	movb   $0x0,(%rax)
   127f4:	48 ff c3             	inc    %rbx
   127f7:	4d 85 ed             	test   %r13,%r13
   127fa:	74 1d                	je     12819 <parse_setting_name+0xac>
   127fc:	4c 89 fe             	mov    %r15,%rsi
   127ff:	4c 89 ef             	mov    %r13,%rdi
   12802:	e8 c9 ee ff ff       	call   116d0 <parse_settings_name>
   12807:	49 89 06             	mov    %rax,(%r14)
   1280a:	48 85 c0             	test   %rax,%rax
   1280d:	75 0a                	jne    12819 <parse_setting_name+0xac>
   1280f:	b8 79 df f3 d3       	mov    $0xd3f3df79,%eax
   12814:	e9 d0 00 00 00       	jmp    128e9 <parse_setting_name+0x17c>
   12819:	4c 89 e7             	mov    %r12,%rdi
   1281c:	31 c0                	xor    %eax,%eax
   1281e:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   12823:	48 c1 e0 08          	shl    $0x8,%rax
   12827:	31 d2                	xor    %edx,%edx
   12829:	4c 89 fe             	mov    %r15,%rsi
   1282c:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   12831:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   12836:	e8 1c 13 00 00       	call   13b57 <strtoul>
   1283b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   12840:	48 0b 44 24 08       	or     0x8(%rsp),%rax
   12845:	8a 17                	mov    (%rdi),%dl
   12847:	84 d2                	test   %dl,%dl
   12849:	74 0c                	je     12857 <parse_setting_name+0xea>
   1284b:	80 fa 2e             	cmp    $0x2e,%dl
   1284e:	75 05                	jne    12855 <parse_setting_name+0xe8>
   12850:	48 ff c7             	inc    %rdi
   12853:	eb ce                	jmp    12823 <parse_setting_name+0xb6>
   12855:	31 c0                	xor    %eax,%eax
   12857:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1285b:	49 8b 06             	mov    (%r14),%rax
   1285e:	4c 8d 3d 4b 71 01 00 	lea    0x1714b(%rip),%r15        # 299b0 <dns_applicator>
   12865:	4c 8d 35 3c 6a 01 00 	lea    0x16a3c(%rip),%r14        # 292a8 <busid_setting>
   1286c:	48 8b 40 40          	mov    0x40(%rax),%rax
   12870:	4c 89 65 00          	mov    %r12,0x0(%rbp)
   12874:	48 89 45 20          	mov    %rax,0x20(%rbp)
   12878:	4d 39 fe             	cmp    %r15,%r14
   1287b:	73 27                	jae    128a4 <parse_setting_name+0x137>
   1287d:	48 89 ee             	mov    %rbp,%rsi
   12880:	4c 89 f7             	mov    %r14,%rdi
   12883:	e8 6e f2 ff ff       	call   11af6 <setting_cmp>
   12888:	85 c0                	test   %eax,%eax
   1288a:	75 12                	jne    1289e <parse_setting_name+0x131>
   1288c:	ba 28 00 00 00       	mov    $0x28,%edx
   12891:	4c 89 f6             	mov    %r14,%rsi
   12894:	48 89 ef             	mov    %rbp,%rdi
   12897:	e8 4d 4b 00 00       	call   173e9 <__memcpy>
   1289c:	eb 06                	jmp    128a4 <parse_setting_name+0x137>
   1289e:	49 83 c6 28          	add    $0x28,%r14
   128a2:	eb d4                	jmp    12878 <parse_setting_name+0x10b>
   128a4:	4c 8d 35 55 67 01 00 	lea    0x16755(%rip),%r14        # 29000 <setting_type_dnssl>
   128ab:	4c 8d 3d f6 69 01 00 	lea    0x169f6(%rip),%r15        # 292a8 <busid_setting>
   128b2:	48 85 db             	test   %rbx,%rbx
   128b5:	75 17                	jne    128ce <parse_setting_name+0x161>
   128b7:	31 c0                	xor    %eax,%eax
   128b9:	eb 3d                	jmp    128f8 <parse_setting_name+0x18b>
   128bb:	49 8b 36             	mov    (%r14),%rsi
   128be:	48 89 df             	mov    %rbx,%rdi
   128c1:	e8 f6 10 00 00       	call   139bc <strcmp>
   128c6:	85 c0                	test   %eax,%eax
   128c8:	74 0c                	je     128d6 <parse_setting_name+0x169>
   128ca:	49 83 c6 28          	add    $0x28,%r14
   128ce:	4d 39 fe             	cmp    %r15,%r14
   128d1:	72 e8                	jb     128bb <parse_setting_name+0x14e>
   128d3:	45 31 f6             	xor    %r14d,%r14d
   128d6:	4c 89 75 10          	mov    %r14,0x10(%rbp)
   128da:	4d 85 f6             	test   %r14,%r14
   128dd:	75 d8                	jne    128b7 <parse_setting_name+0x14a>
   128df:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   128e4:	4d 85 ed             	test   %r13,%r13
   128e7:	74 0b                	je     128f4 <parse_setting_name+0x187>
   128e9:	41 c6 44 24 ff 2f    	movb   $0x2f,-0x1(%r12)
   128ef:	48 85 db             	test   %rbx,%rbx
   128f2:	74 04                	je     128f8 <parse_setting_name+0x18b>
   128f4:	c6 43 ff 3a          	movb   $0x3a,-0x1(%rbx)
   128f8:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   128fd:	48 2b 15 4c 77 01 00 	sub    0x1774c(%rip),%rdx        # 2a050 <__stack_chk_guard>
   12904:	74 05                	je     1290b <parse_setting_name+0x19e>
   12906:	e8 55 01 ff ff       	call   2a60 <__stack_chk_fail>
   1290b:	48 83 c4 28          	add    $0x28,%rsp
   1290f:	5b                   	pop    %rbx
   12910:	5d                   	pop    %rbp
   12911:	41 5c                	pop    %r12
   12913:	41 5d                	pop    %r13
   12915:	41 5e                	pop    %r14
   12917:	41 5f                	pop    %r15
   12919:	c3                   	ret    

000000000001291a <setting_name>:
   1291a:	f3 0f 1e fa          	endbr64 
   1291e:	41 54                	push   %r12
   12920:	49 89 cc             	mov    %rcx,%r12
   12923:	55                   	push   %rbp
   12924:	48 89 d5             	mov    %rdx,%rbp
   12927:	53                   	push   %rbx
   12928:	48 89 f3             	mov    %rsi,%rbx
   1292b:	e8 63 f0 ff ff       	call   11993 <settings_target>
   12930:	48 89 c7             	mov    %rax,%rdi
   12933:	e8 d9 f0 ff ff       	call   11a11 <settings_name>
   12938:	4c 8b 0b             	mov    (%rbx),%r9
   1293b:	4c 89 e6             	mov    %r12,%rsi
   1293e:	48 89 ef             	mov    %rbp,%rdi
   12941:	48 89 c1             	mov    %rax,%rcx
   12944:	48 8b 43 10          	mov    0x10(%rbx),%rax
   12948:	48 8d 15 65 1b 01 00 	lea    0x11b65(%rip),%rdx        # 244b4 <.LC0>
   1294f:	4c 8d 05 8a 10 01 00 	lea    0x1108a(%rip),%r8        # 239e0 <.LC0>
   12956:	80 39 00             	cmpb   $0x0,(%rcx)
   12959:	4c 0f 44 c2          	cmove  %rdx,%r8
   1295d:	52                   	push   %rdx
   1295e:	48 8d 15 fe 0e 01 00 	lea    0x10efe(%rip),%rdx        # 23863 <.LC8>
   12965:	ff 30                	push   (%rax)
   12967:	31 c0                	xor    %eax,%eax
   12969:	e8 ef 47 00 00       	call   1715d <snprintf>
   1296e:	59                   	pop    %rcx
   1296f:	5e                   	pop    %rsi
   12970:	5b                   	pop    %rbx
   12971:	5d                   	pop    %rbp
   12972:	41 5c                	pop    %r12
   12974:	c3                   	ret    

0000000000012975 <expand_settings>:
   12975:	f3 0f 1e fa          	endbr64 
   12979:	41 56                	push   %r14
   1297b:	41 55                	push   %r13
   1297d:	41 54                	push   %r12
   1297f:	55                   	push   %rbp
   12980:	53                   	push   %rbx
   12981:	48 83 ec 50          	sub    $0x50,%rsp
   12985:	48 8b 05 c4 76 01 00 	mov    0x176c4(%rip),%rax        # 2a050 <__stack_chk_guard>
   1298c:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   12991:	31 c0                	xor    %eax,%eax
   12993:	e8 91 11 00 00       	call   13b29 <strdup>
   12998:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1299d:	48 85 c0             	test   %rax,%rax
   129a0:	0f 84 b5 00 00 00    	je     12a5b <expand_settings+0xe6>
   129a6:	48 8d 2d 0b f0 ff ff 	lea    -0xff5(%rip),%rbp        # 119b8 <find_child_settings>
   129ad:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   129b2:	31 ff                	xor    %edi,%edi
   129b4:	48 89 d8             	mov    %rbx,%rax
   129b7:	8a 10                	mov    (%rax),%dl
   129b9:	84 d2                	test   %dl,%dl
   129bb:	0f 84 b6 00 00 00    	je     12a77 <expand_settings+0x102>
   129c1:	80 fa 24             	cmp    $0x24,%dl
   129c4:	4c 8d 60 01          	lea    0x1(%rax),%r12
   129c8:	75 06                	jne    129d0 <expand_settings+0x5b>
   129ca:	80 78 01 7b          	cmpb   $0x7b,0x1(%rax)
   129ce:	74 0c                	je     129dc <expand_settings+0x67>
   129d0:	48 85 ff             	test   %rdi,%rdi
   129d3:	74 0a                	je     129df <expand_settings+0x6a>
   129d5:	80 fa 7d             	cmp    $0x7d,%dl
   129d8:	75 05                	jne    129df <expand_settings+0x6a>
   129da:	eb 08                	jmp    129e4 <expand_settings+0x6f>
   129dc:	48 89 c7             	mov    %rax,%rdi
   129df:	4c 89 e0             	mov    %r12,%rax
   129e2:	eb d3                	jmp    129b7 <expand_settings+0x42>
   129e4:	c6 07 00             	movb   $0x0,(%rdi)
   129e7:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   129ec:	48 83 c7 02          	add    $0x2,%rdi
   129f0:	48 89 ee             	mov    %rbp,%rsi
   129f3:	c6 00 00             	movb   $0x0,(%rax)
   129f6:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   129fb:	4c 89 e9             	mov    %r13,%rcx
   129fe:	e8 6a fd ff ff       	call   1276d <parse_setting_name>
   12a03:	85 c0                	test   %eax,%eax
   12a05:	74 58                	je     12a5f <expand_settings+0xea>
   12a07:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   12a0e:	00 00 
   12a10:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   12a15:	48 89 da             	mov    %rbx,%rdx
   12a18:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   12a1d:	4d 89 e0             	mov    %r12,%r8
   12a20:	48 8d 0d 8d 1a 01 00 	lea    0x11a8d(%rip),%rcx        # 244b4 <.LC0>
   12a27:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   12a2c:	4d 85 ed             	test   %r13,%r13
   12a2f:	48 8d 35 6e fe 00 00 	lea    0xfe6e(%rip),%rsi        # 228a4 <.LC3>
   12a36:	49 0f 45 cd          	cmovne %r13,%rcx
   12a3a:	31 c0                	xor    %eax,%eax
   12a3c:	e8 3e 57 00 00       	call   1817f <asprintf>
   12a41:	4c 89 ef             	mov    %r13,%rdi
   12a44:	89 c3                	mov    %eax,%ebx
   12a46:	e8 d7 9c ff ff       	call   c722 <free>
   12a4b:	4c 89 f7             	mov    %r14,%rdi
   12a4e:	e8 cf 9c ff ff       	call   c722 <free>
   12a53:	85 db                	test   %ebx,%ebx
   12a55:	0f 89 52 ff ff ff    	jns    129ad <expand_settings+0x38>
   12a5b:	31 db                	xor    %ebx,%ebx
   12a5d:	eb 18                	jmp    12a77 <expand_settings+0x102>
   12a5f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   12a64:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   12a69:	31 c9                	xor    %ecx,%ecx
   12a6b:	31 d2                	xor    %edx,%edx
   12a6d:	4c 89 ee             	mov    %r13,%rsi
   12a70:	e8 50 fa ff ff       	call   124c5 <fetchf_setting_copy>
   12a75:	eb 99                	jmp    12a10 <expand_settings+0x9b>
   12a77:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   12a7c:	48 2b 05 cd 75 01 00 	sub    0x175cd(%rip),%rax        # 2a050 <__stack_chk_guard>
   12a83:	74 05                	je     12a8a <expand_settings+0x115>
   12a85:	e8 d6 ff fe ff       	call   2a60 <__stack_chk_fail>
   12a8a:	48 83 c4 50          	add    $0x50,%rsp
   12a8e:	48 89 d8             	mov    %rbx,%rax
   12a91:	5b                   	pop    %rbx
   12a92:	5d                   	pop    %rbp
   12a93:	41 5c                	pop    %r12
   12a95:	41 5d                	pop    %r13
   12a97:	41 5e                	pop    %r14
   12a99:	c3                   	ret    

0000000000012a9a <vmsg>:
   12a9a:	55                   	push   %rbp
   12a9b:	49 89 f0             	mov    %rsi,%r8
   12a9e:	48 89 d1             	mov    %rdx,%rcx
   12aa1:	48 89 e5             	mov    %rsp,%rbp
   12aa4:	41 54                	push   %r12
   12aa6:	41 89 fc             	mov    %edi,%r12d
   12aa9:	48 83 ec 18          	sub    $0x18,%rsp
   12aad:	8b 35 e1 1b 01 00    	mov    0x11be1(%rip),%esi        # 24694 <console_width>
   12ab3:	48 8b 05 96 75 01 00 	mov    0x17596(%rip),%rax        # 2a050 <__stack_chk_guard>
   12aba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12abe:	31 c0                	xor    %eax,%eax
   12ac0:	48 89 e2             	mov    %rsp,%rdx
   12ac3:	48 8d 46 0f          	lea    0xf(%rsi),%rax
   12ac7:	48 c1 e8 04          	shr    $0x4,%rax
   12acb:	48 c1 e0 04          	shl    $0x4,%rax
   12acf:	48 89 c7             	mov    %rax,%rdi
   12ad2:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
   12ad9:	48 29 fa             	sub    %rdi,%rdx
   12adc:	48 39 d4             	cmp    %rdx,%rsp
   12adf:	74 12                	je     12af3 <vmsg+0x59>
   12ae1:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   12ae8:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   12aef:	00 00 
   12af1:	eb e9                	jmp    12adc <vmsg+0x42>
   12af3:	25 ff 0f 00 00       	and    $0xfff,%eax
   12af8:	48 29 c4             	sub    %rax,%rsp
   12afb:	48 85 c0             	test   %rax,%rax
   12afe:	74 06                	je     12b06 <vmsg+0x6c>
   12b00:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   12b06:	4c 89 c2             	mov    %r8,%rdx
   12b09:	48 89 e7             	mov    %rsp,%rdi
   12b0c:	e8 df 45 00 00       	call   170f0 <vsnprintf>
   12b11:	8b 15 7d 1b 01 00    	mov    0x11b7d(%rip),%edx        # 24694 <console_width>
   12b17:	44 89 e6             	mov    %r12d,%esi
   12b1a:	4c 8d 25 3f 3e 01 00 	lea    0x13e3f(%rip),%r12        # 26960 <_stdscr>
   12b21:	48 98                	cltq   
   12b23:	4c 89 e7             	mov    %r12,%rdi
   12b26:	48 29 c2             	sub    %rax,%rdx
   12b29:	48 d1 ea             	shr    %rdx
   12b2c:	e8 8a aa ff ff       	call   d5bb <wmove>
   12b31:	85 c0                	test   %eax,%eax
   12b33:	75 12                	jne    12b47 <vmsg+0xad>
   12b35:	48 89 e2             	mov    %rsp,%rdx
   12b38:	48 8d 35 c2 0b 01 00 	lea    0x10bc2(%rip),%rsi        # 23701 <.LC0>
   12b3f:	4c 89 e7             	mov    %r12,%rdi
   12b42:	e8 51 ce ff ff       	call   f998 <wprintw>
   12b47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b4b:	48 2b 05 fe 74 01 00 	sub    0x174fe(%rip),%rax        # 2a050 <__stack_chk_guard>
   12b52:	74 05                	je     12b59 <vmsg+0xbf>
   12b54:	e8 07 ff fe ff       	call   2a60 <__stack_chk_fail>
   12b59:	4c 8b 65 f8          	mov    -0x8(%rbp),%r12
   12b5d:	c9                   	leave  
   12b5e:	c3                   	ret    

0000000000012b5f <msg>:
   12b5f:	48 83 ec 58          	sub    $0x58,%rsp
   12b63:	48 8b 05 e6 74 01 00 	mov    0x174e6(%rip),%rax        # 2a050 <__stack_chk_guard>
   12b6a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   12b6f:	31 c0                	xor    %eax,%eax
   12b71:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   12b76:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   12b7b:	48 89 e2             	mov    %rsp,%rdx
   12b7e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   12b83:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   12b88:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   12b8d:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   12b92:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   12b97:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   12b9c:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   12ba3:	e8 f2 fe ff ff       	call   12a9a <vmsg>
   12ba8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   12bad:	48 2b 05 9c 74 01 00 	sub    0x1749c(%rip),%rax        # 2a050 <__stack_chk_guard>
   12bb4:	74 05                	je     12bbb <msg+0x5c>
   12bb6:	e8 a5 fe fe ff       	call   2a60 <__stack_chk_fail>
   12bbb:	48 83 c4 58          	add    $0x58,%rsp
   12bbf:	c3                   	ret    

0000000000012bc0 <string_copy>:
   12bc0:	41 55                	push   %r13
   12bc2:	49 89 fd             	mov    %rdi,%r13
   12bc5:	48 89 f7             	mov    %rsi,%rdi
   12bc8:	41 54                	push   %r12
   12bca:	49 89 d4             	mov    %rdx,%r12
   12bcd:	48 83 ec 18          	sub    $0x18,%rsp
   12bd1:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   12bd6:	e8 3b 0e 00 00       	call   13a16 <strlen>
   12bdb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   12be0:	4c 89 ef             	mov    %r13,%rdi
   12be3:	4c 39 e0             	cmp    %r12,%rax
   12be6:	4c 0f 46 e0          	cmovbe %rax,%r12
   12bea:	4c 89 e2             	mov    %r12,%rdx
   12bed:	e8 f7 47 00 00       	call   173e9 <__memcpy>
   12bf2:	48 83 c4 18          	add    $0x18,%rsp
   12bf6:	4c 89 e0             	mov    %r12,%rax
   12bf9:	41 5c                	pop    %r12
   12bfb:	41 5d                	pop    %r13
   12bfd:	c3                   	ret    

0000000000012bfe <select_setting_row>:
   12bfe:	41 57                	push   %r15
   12c00:	b9 88 01 00 00       	mov    $0x188,%ecx
   12c05:	41 56                	push   %r14
   12c07:	41 55                	push   %r13
   12c09:	41 89 f5             	mov    %esi,%r13d
   12c0c:	41 54                	push   %r12
   12c0e:	55                   	push   %rbp
   12c0f:	53                   	push   %rbx
   12c10:	48 89 fb             	mov    %rdi,%rbx
   12c13:	48 83 c7 18          	add    $0x18,%rdi
   12c17:	48 83 ec 18          	sub    $0x18,%rsp
   12c1b:	8b 05 73 1a 01 00    	mov    0x11a73(%rip),%eax        # 24694 <console_width>
   12c21:	83 e8 14             	sub    $0x14,%eax
   12c24:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   12c28:	31 c0                	xor    %eax,%eax
   12c2a:	f3 aa                	rep stos %al,%es:(%rdi)
   12c2c:	8d 46 03             	lea    0x3(%rsi),%eax
   12c2f:	2b 43 14             	sub    0x14(%rbx),%eax
   12c32:	4c 8d b3 9c 00 00 00 	lea    0x9c(%rbx),%r14
   12c39:	45 31 e4             	xor    %r12d,%r12d
   12c3c:	89 43 50             	mov    %eax,0x50(%rbx)
   12c3f:	48 8b 03             	mov    (%rbx),%rax
   12c42:	48 8b 40 10          	mov    0x10(%rax),%rax
   12c46:	48 85 c0             	test   %rax,%rax
   12c49:	74 24                	je     12c6f <select_setting_row+0x71>
   12c4b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   12c51:	85 f6                	test   %esi,%esi
   12c53:	75 1a                	jne    12c6f <select_setting_row+0x71>
   12c55:	48 89 43 18          	mov    %rax,0x18(%rbx)
   12c59:	48 8d 15 7e 0d 01 00 	lea    0x10d7e(%rip),%rdx        # 239de <.LC1>
   12c60:	4c 89 f7             	mov    %r14,%rdi
   12c63:	31 c0                	xor    %eax,%eax
   12c65:	be 00 01 00 00       	mov    $0x100,%esi
   12c6a:	e8 ee 44 00 00       	call   1715d <snprintf>
   12c6f:	48 8b 03             	mov    (%rbx),%rax
   12c72:	4c 8d 3d a8 18 01 00 	lea    0x118a8(%rip),%r15        # 24521 <.LC2>
   12c79:	48 8b 68 28          	mov    0x28(%rax),%rbp
   12c7d:	48 83 ed 18          	sub    $0x18,%rbp
   12c81:	48 8b 03             	mov    (%rbx),%rax
   12c84:	48 8d 55 18          	lea    0x18(%rbp),%rdx
   12c88:	48 83 c0 28          	add    $0x28,%rax
   12c8c:	48 39 c2             	cmp    %rax,%rdx
   12c8f:	74 2c                	je     12cbd <select_setting_row+0xbf>
   12c91:	45 39 e5             	cmp    %r12d,%r13d
   12c94:	75 1a                	jne    12cb0 <select_setting_row+0xb2>
   12c96:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   12c9a:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
   12c9e:	4c 89 fa             	mov    %r15,%rdx
   12ca1:	be 00 01 00 00       	mov    $0x100,%esi
   12ca6:	4c 89 f7             	mov    %r14,%rdi
   12ca9:	31 c0                	xor    %eax,%eax
   12cab:	e8 ad 44 00 00       	call   1715d <snprintf>
   12cb0:	48 8b 6d 18          	mov    0x18(%rbp),%rbp
   12cb4:	41 ff c4             	inc    %r12d
   12cb7:	48 83 ed 18          	sub    $0x18,%rbp
   12cbb:	eb c4                	jmp    12c81 <select_setting_row+0x83>
   12cbd:	45 31 ff             	xor    %r15d,%r15d
   12cc0:	48 8d 2d e1 65 01 00 	lea    0x165e1(%rip),%rbp        # 292a8 <busid_setting>
   12cc7:	48 8d 05 e2 6c 01 00 	lea    0x16ce2(%rip),%rax        # 299b0 <dns_applicator>
   12cce:	48 39 c5             	cmp    %rax,%rbp
   12cd1:	73 59                	jae    12d2c <select_setting_row+0x12e>
   12cd3:	48 8b 3b             	mov    (%rbx),%rdi
   12cd6:	48 89 ee             	mov    %rbp,%rsi
   12cd9:	e8 c2 ed ff ff       	call   11aa0 <setting_applies>
   12cde:	85 c0                	test   %eax,%eax
   12ce0:	74 44                	je     12d26 <select_setting_row+0x128>
   12ce2:	4d 85 ff             	test   %r15,%r15
   12ce5:	75 28                	jne    12d0f <select_setting_row+0x111>
   12ce7:	45 8d 7c 24 01       	lea    0x1(%r12),%r15d
   12cec:	45 39 ec             	cmp    %r13d,%r12d
   12cef:	75 2f                	jne    12d20 <select_setting_row+0x122>
   12cf1:	48 8b 3b             	mov    (%rbx),%rdi
   12cf4:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
   12cf8:	48 8d 53 20          	lea    0x20(%rbx),%rdx
   12cfc:	4d 89 f0             	mov    %r14,%r8
   12cff:	41 b9 00 01 00 00    	mov    $0x100,%r9d
   12d05:	48 89 ee             	mov    %rbp,%rsi
   12d08:	e8 35 f7 ff ff       	call   12442 <fetchf_setting>
   12d0d:	eb 11                	jmp    12d20 <select_setting_row+0x122>
   12d0f:	4c 89 fe             	mov    %r15,%rsi
   12d12:	48 89 ef             	mov    %rbp,%rdi
   12d15:	e8 dc ed ff ff       	call   11af6 <setting_cmp>
   12d1a:	85 c0                	test   %eax,%eax
   12d1c:	75 c9                	jne    12ce7 <select_setting_row+0xe9>
   12d1e:	eb 06                	jmp    12d26 <select_setting_row+0x128>
   12d20:	45 89 fc             	mov    %r15d,%r12d
   12d23:	49 89 ef             	mov    %rbp,%r15
   12d26:	48 83 c5 28          	add    $0x28,%rbp
   12d2a:	eb 9b                	jmp    12cc7 <select_setting_row+0xc9>
   12d2c:	6a 00                	push   $0x0
   12d2e:	8b 44 24 14          	mov    0x14(%rsp),%eax
   12d32:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
   12d36:	4c 89 f6             	mov    %r14,%rsi
   12d39:	44 8b 43 50          	mov    0x50(%rbx),%r8d
   12d3d:	41 b9 12 00 00 00    	mov    $0x12,%r9d
   12d43:	31 c9                	xor    %ecx,%ecx
   12d45:	ba 00 01 00 00       	mov    $0x100,%edx
   12d4a:	50                   	push   %rax
   12d4b:	e8 87 80 00 00       	call   1add7 <init_editbox>
   12d50:	48 83 c4 28          	add    $0x28,%rsp
   12d54:	44 89 e0             	mov    %r12d,%eax
   12d57:	5b                   	pop    %rbx
   12d58:	5d                   	pop    %rbp
   12d59:	41 5c                	pop    %r12
   12d5b:	41 5d                	pop    %r13
   12d5d:	41 5e                	pop    %r14
   12d5f:	41 5f                	pop    %r15
   12d61:	c3                   	ret    

0000000000012d62 <colour_set.constprop.0>:
   12d62:	0f bf f7             	movswl %di,%esi
   12d65:	31 d2                	xor    %edx,%edx
   12d67:	48 8d 3d f2 3b 01 00 	lea    0x13bf2(%rip),%rdi        # 26960 <_stdscr>
   12d6e:	e9 ae 45 00 00       	jmp    17321 <wcolour_set>

0000000000012d73 <mvaddstr.constprop.0.isra.0>:
   12d73:	41 54                	push   %r12
   12d75:	4c 8d 25 e4 3b 01 00 	lea    0x13be4(%rip),%r12        # 26960 <_stdscr>
   12d7c:	ba 02 00 00 00       	mov    $0x2,%edx
   12d81:	55                   	push   %rbp
   12d82:	48 89 f5             	mov    %rsi,%rbp
   12d85:	89 fe                	mov    %edi,%esi
   12d87:	4c 89 e7             	mov    %r12,%rdi
   12d8a:	41 50                	push   %r8
   12d8c:	e8 2a a8 ff ff       	call   d5bb <wmove>
   12d91:	85 c0                	test   %eax,%eax
   12d93:	75 12                	jne    12da7 <mvaddstr.constprop.0.isra.0+0x34>
   12d95:	59                   	pop    %rcx
   12d96:	48 89 ee             	mov    %rbp,%rsi
   12d99:	4c 89 e7             	mov    %r12,%rdi
   12d9c:	5d                   	pop    %rbp
   12d9d:	83 ca ff             	or     $0xffffffff,%edx
   12da0:	41 5c                	pop    %r12
   12da2:	e9 97 cb ff ff       	jmp    f93e <waddnstr>
   12da7:	58                   	pop    %rax
   12da8:	5d                   	pop    %rbp
   12da9:	41 5c                	pop    %r12
   12dab:	c3                   	ret    

0000000000012dac <draw_setting_row>:
   12dac:	55                   	push   %rbp
   12dad:	48 89 e5             	mov    %rsp,%rbp
   12db0:	41 56                	push   %r14
   12db2:	41 55                	push   %r13
   12db4:	41 54                	push   %r12
   12db6:	53                   	push   %rbx
   12db7:	48 89 fb             	mov    %rdi,%rbx
   12dba:	48 83 ec 10          	sub    $0x10,%rsp
   12dbe:	48 8b 05 8b 72 01 00 	mov    0x1728b(%rip),%rax        # 2a050 <__stack_chk_guard>
   12dc5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12dc9:	8b 05 c5 18 01 00    	mov    0x118c5(%rip),%eax        # 24694 <console_width>
   12dcf:	48 89 e6             	mov    %rsp,%rsi
   12dd2:	44 8d 60 ec          	lea    -0x14(%rax),%r12d
   12dd6:	44 8d 40 fc          	lea    -0x4(%rax),%r8d
   12dda:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
   12ddf:	4c 39 c2             	cmp    %r8,%rdx
   12de2:	49 0f 42 d0          	cmovb  %r8,%rdx
   12de6:	48 8d 42 12          	lea    0x12(%rdx),%rax
   12dea:	48 8d 4a 03          	lea    0x3(%rdx),%rcx
   12dee:	48 c1 e8 04          	shr    $0x4,%rax
   12df2:	48 c1 e0 04          	shl    $0x4,%rax
   12df6:	48 89 c7             	mov    %rax,%rdi
   12df9:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
   12e00:	48 29 fe             	sub    %rdi,%rsi
   12e03:	48 39 f4             	cmp    %rsi,%rsp
   12e06:	74 12                	je     12e1a <draw_setting_row+0x6e>
   12e08:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   12e0f:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   12e16:	00 00 
   12e18:	eb e9                	jmp    12e03 <draw_setting_row+0x57>
   12e1a:	25 ff 0f 00 00       	and    $0xfff,%eax
   12e1f:	48 29 c4             	sub    %rax,%rsp
   12e22:	48 85 c0             	test   %rax,%rax
   12e25:	74 06                	je     12e2d <draw_setting_row+0x81>
   12e27:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   12e2d:	49 89 e5             	mov    %rsp,%r13
   12e30:	48 89 e7             	mov    %rsp,%rdi
   12e33:	b8 20 00 00 00       	mov    $0x20,%eax
   12e38:	f3 aa                	rep stos %al,%es:(%rdi)
   12e3a:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
   12e3f:	c6 44 14 02 00       	movb   $0x0,0x2(%rsp,%rdx,1)
   12e44:	4c 8d 4c 24 01       	lea    0x1(%rsp),%r9
   12e49:	4c 8d b3 9c 00 00 00 	lea    0x9c(%rbx),%r14
   12e50:	74 14                	je     12e66 <draw_setting_row+0xba>
   12e52:	4c 89 c2             	mov    %r8,%rdx
   12e55:	4c 89 f6             	mov    %r14,%rsi
   12e58:	4c 89 cf             	mov    %r9,%rdi
   12e5b:	e8 60 fd ff ff       	call   12bc0 <string_copy>
   12e60:	44 8d 60 01          	lea    0x1(%rax),%r12d
   12e64:	eb 46                	jmp    12eac <draw_setting_row+0x100>
   12e66:	4c 89 cf             	mov    %r9,%rdi
   12e69:	b9 0f 00 00 00       	mov    $0xf,%ecx
   12e6e:	b8 2e 00 00 00       	mov    $0x2e,%eax
   12e73:	f3 aa                	rep stos %al,%es:(%rdi)
   12e75:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   12e79:	4c 89 cf             	mov    %r9,%rdi
   12e7c:	ba 0f 00 00 00       	mov    $0xf,%edx
   12e81:	e8 3a fd ff ff       	call   12bc0 <string_copy>
   12e86:	80 bb 9c 00 00 00 00 	cmpb   $0x0,0x9c(%rbx)
   12e8d:	4c 89 e2             	mov    %r12,%rdx
   12e90:	48 8d 05 4b 0b 01 00 	lea    0x10b4b(%rip),%rax        # 239e2 <.LC3>
   12e97:	4c 0f 44 f0          	cmove  %rax,%r14
   12e9b:	48 8d 7c 24 11       	lea    0x11(%rsp),%rdi
   12ea0:	4c 89 f6             	mov    %r14,%rsi
   12ea3:	e8 18 fd ff ff       	call   12bc0 <string_copy>
   12ea8:	44 8d 60 11          	lea    0x11(%rax),%r12d
   12eac:	48 8b 03             	mov    (%rbx),%rax
   12eaf:	48 39 43 20          	cmp    %rax,0x20(%rbx)
   12eb3:	4c 8d 35 a6 3a 01 00 	lea    0x13aa6(%rip),%r14        # 26960 <_stdscr>
   12eba:	74 07                	je     12ec3 <draw_setting_row+0x117>
   12ebc:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
   12ec1:	74 0d                	je     12ed0 <draw_setting_row+0x124>
   12ec3:	be 00 00 04 00       	mov    $0x40000,%esi
   12ec8:	4c 89 f7             	mov    %r14,%rdi
   12ecb:	e8 33 44 00 00       	call   17303 <wattron>
   12ed0:	8b 73 50             	mov    0x50(%rbx),%esi
   12ed3:	ba 01 00 00 00       	mov    $0x1,%edx
   12ed8:	4c 89 f7             	mov    %r14,%rdi
   12edb:	e8 db a6 ff ff       	call   d5bb <wmove>
   12ee0:	85 c0                	test   %eax,%eax
   12ee2:	75 12                	jne    12ef6 <draw_setting_row+0x14a>
   12ee4:	4c 89 ea             	mov    %r13,%rdx
   12ee7:	48 8d 35 13 08 01 00 	lea    0x10813(%rip),%rsi        # 23701 <.LC0>
   12eee:	4c 89 f7             	mov    %r14,%rdi
   12ef1:	e8 a2 ca ff ff       	call   f998 <wprintw>
   12ef6:	be 00 00 04 00       	mov    $0x40000,%esi
   12efb:	4c 89 f7             	mov    %r14,%rdi
   12efe:	e8 f4 43 00 00       	call   172f7 <wattroff>
   12f03:	8b 73 50             	mov    0x50(%rbx),%esi
   12f06:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   12f0b:	4c 89 f7             	mov    %r14,%rdi
   12f0e:	e8 a8 a6 ff ff       	call   d5bb <wmove>
   12f13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f17:	48 2b 05 32 71 01 00 	sub    0x17132(%rip),%rax        # 2a050 <__stack_chk_guard>
   12f1e:	74 05                	je     12f25 <draw_setting_row+0x179>
   12f20:	e8 3b fb fe ff       	call   2a60 <__stack_chk_fail>
   12f25:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
   12f29:	5b                   	pop    %rbx
   12f2a:	41 5c                	pop    %r12
   12f2c:	41 5d                	pop    %r13
   12f2e:	41 5e                	pop    %r14
   12f30:	5d                   	pop    %rbp
   12f31:	c3                   	ret    

0000000000012f32 <clearmsg>:
   12f32:	55                   	push   %rbp
   12f33:	48 8d 2d 26 3a 01 00 	lea    0x13a26(%rip),%rbp        # 26960 <_stdscr>
   12f3a:	89 fe                	mov    %edi,%esi
   12f3c:	31 d2                	xor    %edx,%edx
   12f3e:	48 89 ef             	mov    %rbp,%rdi
   12f41:	e8 75 a6 ff ff       	call   d5bb <wmove>
   12f46:	48 89 ef             	mov    %rbp,%rdi
   12f49:	5d                   	pop    %rbp
   12f4a:	e9 38 63 00 00       	jmp    19287 <wclrtoeol>

0000000000012f4f <draw_setting_rows>:
   12f4f:	41 54                	push   %r12
   12f51:	4c 8d 25 2b 0f 01 00 	lea    0x10f2b(%rip),%r12        # 23e83 <.LC0>
   12f58:	55                   	push   %rbp
   12f59:	48 8d 2d d4 0a 01 00 	lea    0x10ad4(%rip),%rbp        # 23a34 <.LC2>
   12f60:	53                   	push   %rbx
   12f61:	48 89 fb             	mov    %rdi,%rbx
   12f64:	bf 03 00 00 00       	mov    $0x3,%edi
   12f69:	e8 f4 fd ff ff       	call   12d62 <colour_set.constprop.0>
   12f6e:	83 7b 14 00          	cmpl   $0x0,0x14(%rbx)
   12f72:	4c 89 e6             	mov    %r12,%rsi
   12f75:	bf 02 00 00 00       	mov    $0x2,%edi
   12f7a:	48 0f 44 f5          	cmove  %rbp,%rsi
   12f7e:	e8 f0 fd ff ff       	call   12d73 <mvaddstr.constprop.0.isra.0>
   12f83:	8b 43 08             	mov    0x8(%rbx),%eax
   12f86:	4c 89 e6             	mov    %r12,%rsi
   12f89:	03 43 14             	add    0x14(%rbx),%eax
   12f8c:	3b 43 0c             	cmp    0xc(%rbx),%eax
   12f8f:	8b 05 fb 16 01 00    	mov    0x116fb(%rip),%eax        # 24690 <console_height>
   12f95:	48 0f 43 f5          	cmovae %rbp,%rsi
   12f99:	31 ed                	xor    %ebp,%ebp
   12f9b:	8d 78 fa             	lea    -0x6(%rax),%edi
   12f9e:	e8 d0 fd ff ff       	call   12d73 <mvaddstr.constprop.0.isra.0>
   12fa3:	bf 01 00 00 00       	mov    $0x1,%edi
   12fa8:	e8 b5 fd ff ff       	call   12d62 <colour_set.constprop.0>
   12fad:	8b 05 dd 16 01 00    	mov    0x116dd(%rip),%eax        # 24690 <console_height>
   12fb3:	83 e8 09             	sub    $0x9,%eax
   12fb6:	39 e8                	cmp    %ebp,%eax
   12fb8:	76 28                	jbe    12fe2 <draw_setting_rows+0x93>
   12fba:	8b 73 14             	mov    0x14(%rbx),%esi
   12fbd:	01 ee                	add    %ebp,%esi
   12fbf:	3b 73 0c             	cmp    0xc(%rbx),%esi
   12fc2:	73 12                	jae    12fd6 <draw_setting_rows+0x87>
   12fc4:	48 89 df             	mov    %rbx,%rdi
   12fc7:	e8 32 fc ff ff       	call   12bfe <select_setting_row>
   12fcc:	48 89 df             	mov    %rbx,%rdi
   12fcf:	e8 d8 fd ff ff       	call   12dac <draw_setting_row>
   12fd4:	eb 08                	jmp    12fde <draw_setting_rows+0x8f>
   12fd6:	8d 7d 03             	lea    0x3(%rbp),%edi
   12fd9:	e8 54 ff ff ff       	call   12f32 <clearmsg>
   12fde:	ff c5                	inc    %ebp
   12fe0:	eb cb                	jmp    12fad <draw_setting_rows+0x5e>
   12fe2:	5b                   	pop    %rbx
   12fe3:	5d                   	pop    %rbp
   12fe4:	41 5c                	pop    %r12
   12fe6:	c3                   	ret    

0000000000012fe7 <alert.constprop.0>:
   12fe7:	48 83 ec 58          	sub    $0x58,%rsp
   12feb:	48 8b 05 5e 70 01 00 	mov    0x1705e(%rip),%rax        # 2a050 <__stack_chk_guard>
   12ff2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   12ff7:	31 c0                	xor    %eax,%eax
   12ff9:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   12ffe:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   13003:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13008:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1300d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   13012:	8b 05 78 16 01 00    	mov    0x11678(%rip),%eax        # 24690 <console_height>
   13018:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1301d:	8d 78 fe             	lea    -0x2(%rax),%edi
   13020:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   13025:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1302a:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1302f:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   13036:	e8 f7 fe ff ff       	call   12f32 <clearmsg>
   1303b:	bf 05 00 00 00       	mov    $0x5,%edi
   13040:	e8 1d fd ff ff       	call   12d62 <colour_set.constprop.0>
   13045:	8b 05 45 16 01 00    	mov    0x11645(%rip),%eax        # 24690 <console_height>
   1304b:	48 89 e2             	mov    %rsp,%rdx
   1304e:	48 8d 35 9d 09 01 00 	lea    0x1099d(%rip),%rsi        # 239f2 <.LC6>
   13055:	8d 78 fe             	lea    -0x2(%rax),%edi
   13058:	e8 3d fa ff ff       	call   12a9a <vmsg>
   1305d:	bf 02 00 00 00       	mov    $0x2,%edi
   13062:	e8 99 2d 00 00       	call   15e00 <sleep>
   13067:	bf 01 00 00 00       	mov    $0x1,%edi
   1306c:	e8 f1 fc ff ff       	call   12d62 <colour_set.constprop.0>
   13071:	8b 05 19 16 01 00    	mov    0x11619(%rip),%eax        # 24690 <console_height>
   13077:	8d 78 fe             	lea    -0x2(%rax),%edi
   1307a:	e8 b3 fe ff ff       	call   12f32 <clearmsg>
   1307f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   13084:	48 2b 05 c5 6f 01 00 	sub    0x16fc5(%rip),%rax        # 2a050 <__stack_chk_guard>
   1308b:	74 05                	je     13092 <alert.constprop.0+0xab>
   1308d:	e8 ce f9 fe ff       	call   2a60 <__stack_chk_fail>
   13092:	48 83 c4 58          	add    $0x58,%rsp
   13096:	c3                   	ret    

0000000000013097 <select_settings>:
   13097:	41 55                	push   %r13
   13099:	4c 8d 2d c0 38 01 00 	lea    0x138c0(%rip),%r13        # 26960 <_stdscr>
   130a0:	41 54                	push   %r12
   130a2:	55                   	push   %rbp
   130a3:	48 89 fd             	mov    %rdi,%rbp
   130a6:	48 89 f7             	mov    %rsi,%rdi
   130a9:	e8 e5 e8 ff ff       	call   11993 <settings_target>
   130ae:	31 f6                	xor    %esi,%esi
   130b0:	48 89 ef             	mov    %rbp,%rdi
   130b3:	48 89 45 00          	mov    %rax,0x0(%rbp)
   130b7:	e8 42 fb ff ff       	call   12bfe <select_setting_row>
   130bc:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
   130c3:	00 
   130c4:	bf 01 00 00 00       	mov    $0x1,%edi
   130c9:	89 45 0c             	mov    %eax,0xc(%rbp)
   130cc:	8b 05 be 15 01 00    	mov    0x115be(%rip),%eax        # 24690 <console_height>
   130d2:	83 e8 09             	sub    $0x9,%eax
   130d5:	89 45 08             	mov    %eax,0x8(%rbp)
   130d8:	e8 55 fe ff ff       	call   12f32 <clearmsg>
   130dd:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   130e1:	e8 2b e9 ff ff       	call   11a11 <settings_name>
   130e6:	4c 89 ef             	mov    %r13,%rdi
   130e9:	be 00 00 04 00       	mov    $0x40000,%esi
   130ee:	49 89 c4             	mov    %rax,%r12
   130f1:	e8 0d 42 00 00       	call   17303 <wattron>
   130f6:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   130fb:	4c 89 e1             	mov    %r12,%rcx
   130fe:	bf 01 00 00 00       	mov    $0x1,%edi
   13103:	48 8d 05 aa 13 01 00 	lea    0x113aa(%rip),%rax        # 244b4 <.LC0>
   1310a:	48 8d 15 e6 08 01 00 	lea    0x108e6(%rip),%rdx        # 239f7 <.LC7>
   13111:	48 0f 44 d0          	cmove  %rax,%rdx
   13115:	48 8d 35 df 08 01 00 	lea    0x108df(%rip),%rsi        # 239fb <.LC9>
   1311c:	31 c0                	xor    %eax,%eax
   1311e:	e8 3c fa ff ff       	call   12b5f <msg>
   13123:	be 00 00 04 00       	mov    $0x40000,%esi
   13128:	4c 89 ef             	mov    %r13,%rdi
   1312b:	e8 c7 41 00 00       	call   172f7 <wattroff>
   13130:	48 89 ef             	mov    %rbp,%rdi
   13133:	e8 17 fe ff ff       	call   12f4f <draw_setting_rows>
   13138:	48 89 ef             	mov    %rbp,%rdi
   1313b:	31 f6                	xor    %esi,%esi
   1313d:	5d                   	pop    %rbp
   1313e:	41 5c                	pop    %r12
   13140:	41 5d                	pop    %r13
   13142:	e9 b7 fa ff ff       	jmp    12bfe <select_setting_row>

0000000000013147 <main_loop>:
   13147:	41 55                	push   %r13
   13149:	41 54                	push   %r12
   1314b:	55                   	push   %rbp
   1314c:	48 89 fd             	mov    %rdi,%rbp
   1314f:	bf 01 00 00 00       	mov    $0x1,%edi
   13154:	53                   	push   %rbx
   13155:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
   1315c:	48 8b 05 ed 6e 01 00 	mov    0x16eed(%rip),%rax        # 2a050 <__stack_chk_guard>
   13163:	48 89 84 24 c8 01 00 	mov    %rax,0x1c8(%rsp)
   1316a:	00 
   1316b:	31 c0                	xor    %eax,%eax
   1316d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   13172:	e8 eb fb ff ff       	call   12d62 <colour_set.constprop.0>
   13177:	48 89 df             	mov    %rbx,%rdi
   1317a:	b9 a0 01 00 00       	mov    $0x1a0,%ecx
   1317f:	31 c0                	xor    %eax,%eax
   13181:	f3 aa                	rep stos %al,%es:(%rdi)
   13183:	48 89 ee             	mov    %rbp,%rsi
   13186:	48 89 df             	mov    %rbx,%rdi
   13189:	4c 8d 2d 8b 08 01 00 	lea    0x1088b(%rip),%r13        # 23a1b <.LC10>
   13190:	e8 02 ff ff ff       	call   13097 <select_settings>
   13195:	be 01 00 00 00       	mov    $0x1,%esi
   1319a:	85 f6                	test   %esi,%esi
   1319c:	0f 84 4b 01 00 00    	je     132ed <main_loop+0x1a6>
   131a2:	8b 05 e8 14 01 00    	mov    0x114e8(%rip),%eax        # 24690 <console_height>
   131a8:	8d 78 fb             	lea    -0x5(%rax),%edi
   131ab:	e8 82 fd ff ff       	call   12f32 <clearmsg>
   131b0:	8b 05 da 14 01 00    	mov    0x114da(%rip),%eax        # 24690 <console_height>
   131b6:	8d 78 fc             	lea    -0x4(%rax),%edi
   131b9:	e8 74 fd ff ff       	call   12f32 <clearmsg>
   131be:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
   131c4:	0f 84 99 00 00 00    	je     13263 <main_loop+0x11c>
   131ca:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   131cf:	48 85 ff             	test   %rdi,%rdi
   131d2:	75 05                	jne    131d9 <main_loop+0x92>
   131d4:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   131d9:	4c 8d a4 24 a8 01 00 	lea    0x1a8(%rsp),%r12
   131e0:	00 
   131e1:	b9 20 00 00 00       	mov    $0x20,%ecx
   131e6:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   131eb:	4c 89 e2             	mov    %r12,%rdx
   131ee:	48 8d 2d 6b 37 01 00 	lea    0x1376b(%rip),%rbp        # 26960 <_stdscr>
   131f5:	e8 20 f7 ff ff       	call   1291a <setting_name>
   131fa:	be 00 00 04 00       	mov    $0x40000,%esi
   131ff:	48 89 ef             	mov    %rbp,%rdi
   13202:	e8 fc 40 00 00       	call   17303 <wattron>
   13207:	8b 05 83 14 01 00    	mov    0x11483(%rip),%eax        # 24690 <console_height>
   1320d:	4c 89 e2             	mov    %r12,%rdx
   13210:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   13215:	48 8d 35 1c 08 01 00 	lea    0x1081c(%rip),%rsi        # 23a38 <.LC11>
   1321c:	8d 78 fb             	lea    -0x5(%rax),%edi
   1321f:	31 c0                	xor    %eax,%eax
   13221:	e8 39 f9 ff ff       	call   12b5f <msg>
   13226:	be 00 00 04 00       	mov    $0x40000,%esi
   1322b:	48 89 ef             	mov    %rbp,%rdi
   1322e:	e8 c4 40 00 00       	call   172f7 <wattroff>
   13233:	bf 06 00 00 00       	mov    $0x6,%edi
   13238:	e8 25 fb ff ff       	call   12d62 <colour_set.constprop.0>
   1323d:	8b 05 4d 14 01 00    	mov    0x1144d(%rip),%eax        # 24690 <console_height>
   13243:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   13248:	48 8d 35 4b f7 00 00 	lea    0xf74b(%rip),%rsi        # 2299a <.LC12>
   1324f:	8d 78 fc             	lea    -0x4(%rax),%edi
   13252:	31 c0                	xor    %eax,%eax
   13254:	e8 06 f9 ff ff       	call   12b5f <msg>
   13259:	bf 01 00 00 00       	mov    $0x1,%edi
   1325e:	e8 ff fa ff ff       	call   12d62 <colour_set.constprop.0>
   13263:	8b 05 27 14 01 00    	mov    0x11427(%rip),%eax        # 24690 <console_height>
   13269:	8d 78 fe             	lea    -0x2(%rax),%edi
   1326c:	e8 c1 fc ff ff       	call   12f32 <clearmsg>
   13271:	83 bc 24 a0 00 00 00 	cmpl   $0x0,0xa0(%rsp)
   13278:	00 
   13279:	8b 3d 11 14 01 00    	mov    0x11411(%rip),%edi        # 24690 <console_height>
   1327f:	74 13                	je     13294 <main_loop+0x14d>
   13281:	83 ef 02             	sub    $0x2,%edi
   13284:	48 8d 35 b5 07 01 00 	lea    0x107b5(%rip),%rsi        # 23a40 <.LC13>
   1328b:	31 c0                	xor    %eax,%eax
   1328d:	e8 cd f8 ff ff       	call   12b5f <msg>
   13292:	eb 26                	jmp    132ba <main_loop+0x173>
   13294:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13299:	48 8d 15 14 12 01 00 	lea    0x11214(%rip),%rdx        # 244b4 <.LC0>
   132a0:	48 39 44 24 28       	cmp    %rax,0x28(%rsp)
   132a5:	48 8d 35 c8 07 01 00 	lea    0x107c8(%rip),%rsi        # 23a74 <.LC14>
   132ac:	49 0f 44 d5          	cmove  %r13,%rdx
   132b0:	83 ef 02             	sub    $0x2,%edi
   132b3:	31 c0                	xor    %eax,%eax
   132b5:	e8 a5 f8 ff ff       	call   12b5f <msg>
   132ba:	83 bc 24 a0 00 00 00 	cmpl   $0x1,0xa0(%rsp)
   132c1:	01 
   132c2:	19 ff                	sbb    %edi,%edi
   132c4:	83 e7 fe             	and    $0xfffffffe,%edi
   132c7:	83 c7 04             	add    $0x4,%edi
   132ca:	e8 93 fa ff ff       	call   12d62 <colour_set.constprop.0>
   132cf:	48 89 df             	mov    %rbx,%rdi
   132d2:	e8 d5 fa ff ff       	call   12dac <draw_setting_row>
   132d7:	bf 01 00 00 00       	mov    $0x1,%edi
   132dc:	e8 81 fa ff ff       	call   12d62 <colour_set.constprop.0>
   132e1:	8b bc 24 a0 00 00 00 	mov    0xa0(%rsp),%edi
   132e8:	e8 f0 a2 ff ff       	call   d5dd <curs_set>
   132ed:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   132f2:	83 bc 24 a0 00 00 00 	cmpl   $0x0,0xa0(%rsp)
   132f9:	00 
   132fa:	74 6d                	je     13369 <main_loop+0x222>
   132fc:	bf 04 00 00 00       	mov    $0x4,%edi
   13301:	48 8d 6c 24 60       	lea    0x60(%rsp),%rbp
   13306:	e8 57 fa ff ff       	call   12d62 <colour_set.constprop.0>
   1330b:	48 89 ef             	mov    %rbp,%rdi
   1330e:	e8 25 7b 00 00       	call   1ae38 <draw_editbox>
   13313:	bf 01 00 00 00       	mov    $0x1,%edi
   13318:	e8 45 fa ff ff       	call   12d62 <colour_set.constprop.0>
   1331d:	31 ff                	xor    %edi,%edi
   1331f:	e8 17 b1 00 00       	call   1e43b <getkey>
   13324:	48 89 ef             	mov    %rbp,%rdi
   13327:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   1332e:	01 00 00 00 
   13332:	89 c6                	mov    %eax,%esi
   13334:	e8 53 7d 00 00       	call   1b08c <edit_string>
   13339:	83 f8 0a             	cmp    $0xa,%eax
   1333c:	74 0f                	je     1334d <main_loop+0x206>
   1333e:	83 f8 0d             	cmp    $0xd,%eax
   13341:	74 0a                	je     1334d <main_loop+0x206>
   13343:	83 f8 03             	cmp    $0x3,%eax
   13346:	75 aa                	jne    132f2 <main_loop+0x1ab>
   13348:	e9 c1 00 00 00       	jmp    1340e <main_loop+0x2c7>
   1334d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   13352:	48 8d 94 24 a4 00 00 	lea    0xa4(%rsp),%rdx
   13359:	00 
   1335a:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1335f:	e8 17 f2 ff ff       	call   1257b <storef_setting>
   13364:	e9 89 00 00 00       	jmp    133f2 <main_loop+0x2ab>
   13369:	31 ff                	xor    %edi,%edi
   1336b:	e8 cb b0 00 00       	call   1e43b <getkey>
   13370:	4c 89 e7             	mov    %r12,%rdi
   13373:	89 c6                	mov    %eax,%esi
   13375:	89 c5                	mov    %eax,%ebp
   13377:	e8 43 ca 00 00       	call   1fdbf <jump_scroll_key>
   1337c:	89 c6                	mov    %eax,%esi
   1337e:	85 c0                	test   %eax,%eax
   13380:	74 34                	je     133b6 <main_loop+0x26f>
   13382:	4c 89 e7             	mov    %r12,%rdi
   13385:	8b 6c 24 18          	mov    0x18(%rsp),%ebp
   13389:	e8 8e ca 00 00       	call   1fe1c <jump_scroll_move>
   1338e:	39 6c 24 18          	cmp    %ebp,0x18(%rsp)
   13392:	0f 84 5a ff ff ff    	je     132f2 <main_loop+0x1ab>
   13398:	48 89 df             	mov    %rbx,%rdi
   1339b:	e8 0c fa ff ff       	call   12dac <draw_setting_row>
   133a0:	4c 89 e7             	mov    %r12,%rdi
   133a3:	e8 ad ca 00 00       	call   1fe55 <jump_scroll>
   133a8:	85 c0                	test   %eax,%eax
   133aa:	74 62                	je     1340e <main_loop+0x2c7>
   133ac:	48 89 df             	mov    %rbx,%rdi
   133af:	e8 9b fb ff ff       	call   12f4f <draw_setting_rows>
   133b4:	eb 58                	jmp    1340e <main_loop+0x2c7>
   133b6:	83 fd 0d             	cmp    $0xd,%ebp
   133b9:	74 7a                	je     13435 <main_loop+0x2ee>
   133bb:	7f 0f                	jg     133cc <main_loop+0x285>
   133bd:	83 fd 04             	cmp    $0x4,%ebp
   133c0:	74 11                	je     133d3 <main_loop+0x28c>
   133c2:	83 fd 0a             	cmp    $0xa,%ebp
   133c5:	74 6e                	je     13435 <main_loop+0x2ee>
   133c7:	e9 83 00 00 00       	jmp    1344f <main_loop+0x308>
   133cc:	83 fd 18             	cmp    $0x18,%ebp
   133cf:	74 4e                	je     1341f <main_loop+0x2d8>
   133d1:	eb 7c                	jmp    1344f <main_loop+0x308>
   133d3:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
   133d9:	0f 84 13 ff ff ff    	je     132f2 <main_loop+0x1ab>
   133df:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   133e4:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   133e9:	31 c9                	xor    %ecx,%ecx
   133eb:	31 d2                	xor    %edx,%edx
   133ed:	e8 71 ee ff ff       	call   12263 <store_setting>
   133f2:	89 c7                	mov    %eax,%edi
   133f4:	85 c0                	test   %eax,%eax
   133f6:	74 16                	je     1340e <main_loop+0x2c7>
   133f8:	e8 7b 04 00 00       	call   13878 <strerror>
   133fd:	48 8d 3d ee 05 01 00 	lea    0x105ee(%rip),%rdi        # 239f2 <.LC6>
   13404:	48 89 c6             	mov    %rax,%rsi
   13407:	31 c0                	xor    %eax,%eax
   13409:	e8 d9 fb ff ff       	call   12fe7 <alert.constprop.0>
   1340e:	8b 74 24 18          	mov    0x18(%rsp),%esi
   13412:	48 89 df             	mov    %rbx,%rdi
   13415:	e8 e4 f7 ff ff       	call   12bfe <select_setting_row>
   1341a:	e9 83 fd ff ff       	jmp    131a2 <main_loop+0x5b>
   1341f:	48 8b 84 24 c8 01 00 	mov    0x1c8(%rsp),%rax
   13426:	00 
   13427:	48 2b 05 22 6c 01 00 	sub    0x16c22(%rip),%rax        # 2a050 <__stack_chk_guard>
   1342e:	74 47                	je     13477 <main_loop+0x330>
   13430:	e8 2b f6 fe ff       	call   2a60 <__stack_chk_fail>
   13435:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   1343a:	4d 85 c0             	test   %r8,%r8
   1343d:	74 10                	je     1344f <main_loop+0x308>
   1343f:	4c 89 c6             	mov    %r8,%rsi
   13442:	48 89 df             	mov    %rbx,%rdi
   13445:	e8 4d fc ff ff       	call   13097 <select_settings>
   1344a:	be 01 00 00 00       	mov    $0x1,%esi
   1344f:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
   13455:	0f 84 3f fd ff ff    	je     1319a <main_loop+0x53>
   1345b:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   13460:	89 ee                	mov    %ebp,%esi
   13462:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   13469:	01 00 00 00 
   1346d:	e8 1a 7c 00 00       	call   1b08c <edit_string>
   13472:	e9 2b fd ff ff       	jmp    131a2 <main_loop+0x5b>
   13477:	48 81 c4 d8 01 00 00 	add    $0x1d8,%rsp
   1347e:	31 c0                	xor    %eax,%eax
   13480:	5b                   	pop    %rbx
   13481:	5d                   	pop    %rbp
   13482:	41 5c                	pop    %r12
   13484:	41 5d                	pop    %r13
   13486:	c3                   	ret    

0000000000013487 <settings_ui>:
   13487:	f3 0f 1e fa          	endbr64 
   1348b:	41 54                	push   %r12
   1348d:	49 89 fc             	mov    %rdi,%r12
   13490:	e8 ad 3e 00 00       	call   17342 <initscr>
   13495:	bf 01 00 00 00       	mov    $0x1,%edi
   1349a:	e8 c3 f8 ff ff       	call   12d62 <colour_set.constprop.0>
   1349f:	31 ff                	xor    %edi,%edi
   134a1:	e8 37 a1 ff ff       	call   d5dd <curs_set>
   134a6:	e8 22 5e 00 00       	call   192cd <erase>
   134ab:	4c 89 e7             	mov    %r12,%rdi
   134ae:	e8 94 fc ff ff       	call   13147 <main_loop>
   134b3:	41 89 c4             	mov    %eax,%r12d
   134b6:	e8 cb 3e 00 00       	call   17386 <endwin>
   134bb:	44 89 e0             	mov    %r12d,%eax
   134be:	41 5c                	pop    %r12
   134c0:	c3                   	ret    

00000000000134c1 <help_exec>:
   134c1:	f3 0f 1e fa          	endbr64 
   134c5:	41 55                	push   %r13
   134c7:	48 8d 3d cc 05 01 00 	lea    0x105cc(%rip),%rdi        # 23a9a <.LC0>
   134ce:	31 c0                	xor    %eax,%eax
   134d0:	41 54                	push   %r12
   134d2:	4c 8d 25 2f 53 01 00 	lea    0x1532f(%rip),%r12        # 28808 <efi_console>
   134d9:	55                   	push   %rbp
   134da:	48 8d 2d 57 50 01 00 	lea    0x15057(%rip),%rbp        # 28538 <config_command>
   134e1:	53                   	push   %rbx
   134e2:	31 db                	xor    %ebx,%ebx
   134e4:	51                   	push   %rcx
   134e5:	e8 90 3d 00 00       	call   1727a <printf>
   134ea:	4c 39 e5             	cmp    %r12,%rbp
   134ed:	73 4b                	jae    1353a <help_exec+0x79>
   134ef:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   134f3:	48 8d 3d 05 02 01 00 	lea    0x10205(%rip),%rdi        # 236ff <.LC1>
   134fa:	31 c0                	xor    %eax,%eax
   134fc:	4c 8d 2d 33 05 01 00 	lea    0x10533(%rip),%r13        # 23a36 <.LC1>
   13503:	e8 72 3d 00 00       	call   1727a <printf>
   13508:	01 c3                	add    %eax,%ebx
   1350a:	83 fb 40             	cmp    $0x40,%ebx
   1350d:	76 12                	jbe    13521 <help_exec+0x60>
   1350f:	48 8d 3d 99 05 01 00 	lea    0x10599(%rip),%rdi        # 23aaf <.LC0>
   13516:	31 c0                	xor    %eax,%eax
   13518:	31 db                	xor    %ebx,%ebx
   1351a:	e8 5b 3d 00 00       	call   1727a <printf>
   1351f:	eb 13                	jmp    13534 <help_exec+0x73>
   13521:	f6 c3 0f             	test   $0xf,%bl
   13524:	74 0e                	je     13534 <help_exec+0x73>
   13526:	4c 89 ef             	mov    %r13,%rdi
   13529:	31 c0                	xor    %eax,%eax
   1352b:	ff c3                	inc    %ebx
   1352d:	e8 48 3d 00 00       	call   1727a <printf>
   13532:	eb ed                	jmp    13521 <help_exec+0x60>
   13534:	48 83 c5 10          	add    $0x10,%rbp
   13538:	eb b0                	jmp    134ea <help_exec+0x29>
   1353a:	48 8d 3d 70 05 01 00 	lea    0x10570(%rip),%rdi        # 23ab1 <.LC4>
   13541:	31 c0                	xor    %eax,%eax
   13543:	e8 32 3d 00 00       	call   1727a <printf>
   13548:	5a                   	pop    %rdx
   13549:	31 c0                	xor    %eax,%eax
   1354b:	5b                   	pop    %rbx
   1354c:	5d                   	pop    %rbp
   1354d:	41 5c                	pop    %r12
   1354f:	41 5d                	pop    %r13
   13551:	c3                   	ret    

0000000000013552 <shell>:
   13552:	f3 0f 1e fa          	endbr64 
   13556:	41 54                	push   %r12
   13558:	b9 88 00 00 00       	mov    $0x88,%ecx
   1355d:	55                   	push   %rbp
   1355e:	53                   	push   %rbx
   1355f:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   13566:	48 8b 05 e3 6a 01 00 	mov    0x16ae3(%rip),%rax        # 2a050 <__stack_chk_guard>
   1356d:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   13574:	00 
   13575:	31 c0                	xor    %eax,%eax
   13577:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   1357c:	48 89 ef             	mov    %rbp,%rdi
   1357f:	f3 aa                	rep stos %al,%es:(%rdi)
   13581:	45 31 e4             	xor    %r12d,%r12d
   13584:	48 8d 1d 8d f0 00 00 	lea    0xf08d(%rip),%rbx        # 22618 <shell_prompt>
   1358b:	48 89 df             	mov    %rbx,%rdi
   1358e:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   13593:	48 89 ea             	mov    %rbp,%rdx
   13596:	31 f6                	xor    %esi,%esi
   13598:	e8 ab c6 ff ff       	call   fc48 <readline_history>
   1359d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   135a2:	48 85 ff             	test   %rdi,%rdi
   135a5:	74 12                	je     135b9 <shell+0x67>
   135a7:	e8 a2 a8 00 00       	call   1de4e <system>
   135ac:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   135b1:	41 89 c4             	mov    %eax,%r12d
   135b4:	e8 69 91 ff ff       	call   c722 <free>
   135b9:	bf 02 00 00 00       	mov    $0x2,%edi
   135be:	e8 6f a8 00 00       	call   1de32 <shell_stopped>
   135c3:	85 c0                	test   %eax,%eax
   135c5:	74 c4                	je     1358b <shell+0x39>
   135c7:	48 89 ef             	mov    %rbp,%rdi
   135ca:	e8 53 c6 ff ff       	call   fc22 <history_free>
   135cf:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   135d6:	00 
   135d7:	48 2b 05 72 6a 01 00 	sub    0x16a72(%rip),%rax        # 2a050 <__stack_chk_guard>
   135de:	74 05                	je     135e5 <shell+0x93>
   135e0:	e8 7b f4 fe ff       	call   2a60 <__stack_chk_fail>
   135e5:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   135ec:	44 89 e0             	mov    %r12d,%eax
   135ef:	5b                   	pop    %rbx
   135f0:	5d                   	pop    %rbp
   135f1:	41 5c                	pop    %r12
   135f3:	c3                   	ret    

00000000000135f4 <shell_exec>:
   135f4:	f3 0f 1e fa          	endbr64 
   135f8:	48 83 ec 18          	sub    $0x18,%rsp
   135fc:	48 8d 15 cd 3b 01 00 	lea    0x13bcd(%rip),%rdx        # 271d0 <shell_cmd>
   13603:	48 8b 05 46 6a 01 00 	mov    0x16a46(%rip),%rax        # 2a050 <__stack_chk_guard>
   1360a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1360f:	31 c0                	xor    %eax,%eax
   13611:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   13616:	e8 70 bc ff ff       	call   f28b <parse_options>
   1361b:	85 c0                	test   %eax,%eax
   1361d:	75 05                	jne    13624 <shell_exec+0x30>
   1361f:	e8 2e ff ff ff       	call   13552 <shell>
   13624:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   13629:	48 2b 15 20 6a 01 00 	sub    0x16a20(%rip),%rdx        # 2a050 <__stack_chk_guard>
   13630:	74 05                	je     13637 <shell_exec+0x43>
   13632:	e8 29 f4 fe ff       	call   2a60 <__stack_chk_fail>
   13637:	48 83 c4 18          	add    $0x18,%rsp
   1363b:	c3                   	ret    

000000000001363c <smbios_applies>:
   1363c:	f3 0f 1e fa          	endbr64 
   13640:	48 8d 05 d8 ef 00 00 	lea    0xefd8(%rip),%rax        # 2261f <smbios_settings_scope>
   13647:	48 39 46 20          	cmp    %rax,0x20(%rsi)
   1364b:	0f 94 c0             	sete   %al
   1364e:	0f b6 c0             	movzbl %al,%eax
   13651:	c3                   	ret    

0000000000013652 <smbios_init>:
   13652:	f3 0f 1e fa          	endbr64 
   13656:	48 8d 15 8e 04 01 00 	lea    0x1048e(%rip),%rdx        # 23aeb <.LC0>
   1365d:	31 f6                	xor    %esi,%esi
   1365f:	48 8d 3d 9a 3b 01 00 	lea    0x13b9a(%rip),%rdi        # 27200 <smbios_settings>
   13666:	e9 2f ea ff ff       	jmp    1209a <register_settings>

000000000001366b <smbios_fetch>:
   1366b:	f3 0f 1e fa          	endbr64 
   1366f:	55                   	push   %rbp
   13670:	48 89 e5             	mov    %rsp,%rbp
   13673:	41 57                	push   %r15
   13675:	41 56                	push   %r14
   13677:	4c 8d 75 a0          	lea    -0x60(%rbp),%r14
   1367b:	41 55                	push   %r13
   1367d:	49 89 d5             	mov    %rdx,%r13
   13680:	4c 89 f2             	mov    %r14,%rdx
   13683:	41 54                	push   %r12
   13685:	49 89 cc             	mov    %rcx,%r12
   13688:	53                   	push   %rbx
   13689:	48 89 f3             	mov    %rsi,%rbx
   1368c:	48 83 ec 48          	sub    $0x48,%rsp
   13690:	4c 8b 7e 18          	mov    0x18(%rsi),%r15
   13694:	48 8b 05 b5 69 01 00 	mov    0x169b5(%rip),%rax        # 2a050 <__stack_chk_guard>
   1369b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1369f:	31 c0                	xor    %eax,%eax
   136a1:	4c 89 ff             	mov    %r15,%rdi
   136a4:	44 89 fe             	mov    %r15d,%esi
   136a7:	48 c1 ef 10          	shr    $0x10,%rdi
   136ab:	c1 ee 18             	shr    $0x18,%esi
   136ae:	40 0f b6 ff          	movzbl %dil,%edi
   136b2:	e8 a8 d7 00 00       	call   20e5f <find_smbios_structure>
   136b7:	85 c0                	test   %eax,%eax
   136b9:	0f 85 21 01 00 00    	jne    137e0 <smbios_fetch+0x175>
   136bf:	0f b6 55 a1          	movzbl -0x5f(%rbp),%edx
   136c3:	48 89 65 98          	mov    %rsp,-0x68(%rbp)
   136c7:	48 89 e1             	mov    %rsp,%rcx
   136ca:	48 8d 42 0f          	lea    0xf(%rdx),%rax
   136ce:	25 f0 01 00 00       	and    $0x1f0,%eax
   136d3:	48 39 cc             	cmp    %rcx,%rsp
   136d6:	74 12                	je     136ea <smbios_fetch+0x7f>
   136d8:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   136df:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   136e6:	00 00 
   136e8:	eb e9                	jmp    136d3 <smbios_fetch+0x68>
   136ea:	48 29 c4             	sub    %rax,%rsp
   136ed:	25 ff 0f 00 00       	and    $0xfff,%eax
   136f2:	74 06                	je     136fa <smbios_fetch+0x8f>
   136f4:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   136fa:	48 89 e1             	mov    %rsp,%rcx
   136fd:	48 89 e6             	mov    %rsp,%rsi
   13700:	4c 89 f7             	mov    %r14,%rdi
   13703:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   13707:	e8 28 d8 00 00       	call   20f34 <read_smbios_structure>
   1370c:	85 c0                	test   %eax,%eax
   1370e:	0f 85 c8 00 00 00    	jne    137dc <smbios_fetch+0x171>
   13714:	44 89 f8             	mov    %r15d,%eax
   13717:	41 81 e7 ff 00 00 00 	and    $0xff,%r15d
   1371e:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   13722:	0f b6 f4             	movzbl %ah,%esi
   13725:	74 06                	je     1372d <smbios_fetch+0xc2>
   13727:	85 f6                	test   %esi,%esi
   13729:	75 3e                	jne    13769 <smbios_fetch+0xfe>
   1372b:	eb 0b                	jmp    13738 <smbios_fetch+0xcd>
   1372d:	85 f6                	test   %esi,%esi
   1372f:	74 07                	je     13738 <smbios_fetch+0xcd>
   13731:	89 f6                	mov    %esi,%esi
   13733:	44 0f b6 3c 31       	movzbl (%rcx,%rsi,1),%r15d
   13738:	4c 89 e1             	mov    %r12,%rcx
   1373b:	4c 89 ea             	mov    %r13,%rdx
   1373e:	44 89 fe             	mov    %r15d,%esi
   13741:	4c 89 f7             	mov    %r14,%rdi
   13744:	e8 18 d8 00 00       	call   20f61 <read_smbios_string>
   13749:	85 c0                	test   %eax,%eax
   1374b:	0f 88 8b 00 00 00    	js     137dc <smbios_fetch+0x171>
   13751:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   13756:	0f 85 80 00 00 00    	jne    137dc <smbios_fetch+0x171>
   1375c:	48 8d 0d 1d 5b 01 00 	lea    0x15b1d(%rip),%rcx        # 29280 <setting_type_string>
   13763:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   13767:	eb 73                	jmp    137dc <smbios_fetch+0x171>
   13769:	89 f6                	mov    %esi,%esi
   1376b:	48 8d 05 de 58 01 00 	lea    0x158de(%rip),%rax        # 29050 <setting_type_uuid>
   13772:	48 01 e6             	add    %rsp,%rsi
   13775:	48 39 43 10          	cmp    %rax,0x10(%rbx)
   13779:	75 3a                	jne    137b5 <smbios_fetch+0x14a>
   1377b:	41 83 ff 10          	cmp    $0x10,%r15d
   1377f:	75 34                	jne    137b5 <smbios_fetch+0x14a>
   13781:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   13785:	e8 67 d8 00 00       	call   20ff1 <smbios_version>
   1378a:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
   1378e:	3d 05 02 00 00       	cmp    $0x205,%eax
   13793:	7e 20                	jle    137b5 <smbios_fetch+0x14a>
   13795:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   13799:	48 89 c7             	mov    %rax,%rdi
   1379c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1379d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1379e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1379f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   137a0:	8b 55 b8             	mov    -0x48(%rbp),%edx
   137a3:	48 89 c6             	mov    %rax,%rsi
   137a6:	0f ca                	bswap  %edx
   137a8:	89 55 b8             	mov    %edx,-0x48(%rbp)
   137ab:	66 c1 4d bc 08       	rorw   $0x8,-0x44(%rbp)
   137b0:	66 c1 4d be 08       	rorw   $0x8,-0x42(%rbp)
   137b5:	44 89 fa             	mov    %r15d,%edx
   137b8:	4c 89 ef             	mov    %r13,%rdi
   137bb:	4c 39 e2             	cmp    %r12,%rdx
   137be:	49 0f 47 d4          	cmova  %r12,%rdx
   137c2:	e8 22 3c 00 00       	call   173e9 <__memcpy>
   137c7:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   137cc:	75 0b                	jne    137d9 <smbios_fetch+0x16e>
   137ce:	48 8d 05 1b 59 01 00 	lea    0x1591b(%rip),%rax        # 290f0 <setting_type_hex>
   137d5:	48 89 43 10          	mov    %rax,0x10(%rbx)
   137d9:	44 89 f8             	mov    %r15d,%eax
   137dc:	48 8b 65 98          	mov    -0x68(%rbp),%rsp
   137e0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   137e4:	48 2b 15 65 68 01 00 	sub    0x16865(%rip),%rdx        # 2a050 <__stack_chk_guard>
   137eb:	74 05                	je     137f2 <smbios_fetch+0x187>
   137ed:	e8 6e f2 fe ff       	call   2a60 <__stack_chk_fail>
   137f2:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   137f6:	5b                   	pop    %rbx
   137f7:	41 5c                	pop    %r12
   137f9:	41 5d                	pop    %r13
   137fb:	41 5e                	pop    %r14
   137fd:	41 5f                	pop    %r15
   137ff:	5d                   	pop    %rbp
   13800:	c3                   	ret    

0000000000013801 <sock_ntoa>:
   13801:	f3 0f 1e fa          	endbr64 
   13805:	48 8d 05 cc 61 01 00 	lea    0x161cc(%rip),%rax        # 299d8 <ipv4_sockaddr_converter>
   1380c:	48 8d 15 dd 61 01 00 	lea    0x161dd(%rip),%rdx        # 299f0 <tcp_socket_opener>
   13813:	48 39 d0             	cmp    %rdx,%rax
   13816:	73 11                	jae    13829 <sock_ntoa+0x28>
   13818:	66 8b 0f             	mov    (%rdi),%cx
   1381b:	66 39 08             	cmp    %cx,(%rax)
   1381e:	75 03                	jne    13823 <sock_ntoa+0x22>
   13820:	ff 60 08             	jmp    *0x8(%rax)
   13823:	48 83 c0 18          	add    $0x18,%rax
   13827:	eb ea                	jmp    13813 <sock_ntoa+0x12>
   13829:	31 c0                	xor    %eax,%eax
   1382b:	c3                   	ret    

000000000001382c <sock_aton>:
   1382c:	f3 0f 1e fa          	endbr64 
   13830:	41 55                	push   %r13
   13832:	4c 8d 2d b7 61 01 00 	lea    0x161b7(%rip),%r13        # 299f0 <tcp_socket_opener>
   13839:	41 54                	push   %r12
   1383b:	49 89 fc             	mov    %rdi,%r12
   1383e:	55                   	push   %rbp
   1383f:	48 89 f5             	mov    %rsi,%rbp
   13842:	53                   	push   %rbx
   13843:	48 8d 1d 8e 61 01 00 	lea    0x1618e(%rip),%rbx        # 299d8 <ipv4_sockaddr_converter>
   1384a:	51                   	push   %rcx
   1384b:	4c 39 eb             	cmp    %r13,%rbx
   1384e:	73 1b                	jae    1386b <sock_aton+0x3f>
   13850:	48 89 ee             	mov    %rbp,%rsi
   13853:	4c 89 e7             	mov    %r12,%rdi
   13856:	ff 53 10             	call   *0x10(%rbx)
   13859:	85 c0                	test   %eax,%eax
   1385b:	75 08                	jne    13865 <sock_aton+0x39>
   1385d:	8b 13                	mov    (%rbx),%edx
   1385f:	66 89 55 00          	mov    %dx,0x0(%rbp)
   13863:	eb 0b                	jmp    13870 <sock_aton+0x44>
   13865:	48 83 c3 18          	add    $0x18,%rbx
   13869:	eb e0                	jmp    1384b <sock_aton+0x1f>
   1386b:	b8 7e 9f c7 e3       	mov    $0xe3c79f7e,%eax
   13870:	5a                   	pop    %rdx
   13871:	5b                   	pop    %rbx
   13872:	5d                   	pop    %rbp
   13873:	41 5c                	pop    %r12
   13875:	41 5d                	pop    %r13
   13877:	c3                   	ret    

0000000000013878 <strerror>:
   13878:	f3 0f 1e fa          	endbr64 
   1387c:	41 89 f8             	mov    %edi,%r8d
   1387f:	51                   	push   %rcx
   13880:	48 8d 05 91 50 01 00 	lea    0x15091(%rip),%rax        # 28918 <http_errors>
   13887:	48 8d 15 0a 52 01 00 	lea    0x1520a(%rip),%rdx        # 28a98 <__feature_dns>
   1388e:	41 f7 d8             	neg    %r8d
   13891:	44 0f 48 c7          	cmovs  %edi,%r8d
   13895:	48 39 d0             	cmp    %rdx,%rax
   13898:	73 2b                	jae    138c5 <strerror+0x4d>
   1389a:	44 3b 00             	cmp    (%rax),%r8d
   1389d:	74 06                	je     138a5 <strerror+0x2d>
   1389f:	48 83 c0 10          	add    $0x10,%rax
   138a3:	eb f0                	jmp    13895 <strerror+0x1d>
   138a5:	48 8b 48 08          	mov    0x8(%rax),%rcx
   138a9:	48 8d 15 b3 02 01 00 	lea    0x102b3(%rip),%rdx        # 23b63 <.LC0>
   138b0:	be 40 00 00 00       	mov    $0x40,%esi
   138b5:	31 c0                	xor    %eax,%eax
   138b7:	48 8d 3d 22 65 01 00 	lea    0x16522(%rip),%rdi        # 29de0 <errbuf.0>
   138be:	e8 9a 38 00 00       	call   1715d <snprintf>
   138c3:	eb 3c                	jmp    13901 <strerror+0x89>
   138c5:	44 89 c1             	mov    %r8d,%ecx
   138c8:	48 8d 05 49 50 01 00 	lea    0x15049(%rip),%rax        # 28918 <http_errors>
   138cf:	81 e1 ff 00 00 7f    	and    $0x7f0000ff,%ecx
   138d5:	48 39 d0             	cmp    %rdx,%rax
   138d8:	73 0a                	jae    138e4 <strerror+0x6c>
   138da:	3b 08                	cmp    (%rax),%ecx
   138dc:	74 c7                	je     138a5 <strerror+0x2d>
   138de:	48 83 c0 10          	add    $0x10,%rax
   138e2:	eb f1                	jmp    138d5 <strerror+0x5d>
   138e4:	44 89 c1             	mov    %r8d,%ecx
   138e7:	48 8d 15 8f 02 01 00 	lea    0x1028f(%rip),%rdx        # 23b7d <.LC1>
   138ee:	be 40 00 00 00       	mov    $0x40,%esi
   138f3:	31 c0                	xor    %eax,%eax
   138f5:	48 8d 3d e4 64 01 00 	lea    0x164e4(%rip),%rdi        # 29de0 <errbuf.0>
   138fc:	e8 5c 38 00 00       	call   1715d <snprintf>
   13901:	48 8d 05 d8 64 01 00 	lea    0x164d8(%rip),%rax        # 29de0 <errbuf.0>
   13908:	5a                   	pop    %rdx
   13909:	c3                   	ret    

000000000001390a <generic_memcpy_reverse>:
   1390a:	f3 0f 1e fa          	endbr64 
   1390e:	48 89 f8             	mov    %rdi,%rax
   13911:	48 01 d6             	add    %rdx,%rsi
   13914:	48 8d 3c 17          	lea    (%rdi,%rdx,1),%rdi
   13918:	31 c9                	xor    %ecx,%ecx
   1391a:	48 f7 d2             	not    %rdx
   1391d:	48 ff c9             	dec    %rcx
   13920:	48 39 ca             	cmp    %rcx,%rdx
   13923:	74 0a                	je     1392f <generic_memcpy_reverse+0x25>
   13925:	44 8a 04 0e          	mov    (%rsi,%rcx,1),%r8b
   13929:	44 88 04 0f          	mov    %r8b,(%rdi,%rcx,1)
   1392d:	eb ee                	jmp    1391d <generic_memcpy_reverse+0x13>
   1392f:	c3                   	ret    

0000000000013930 <memcmp>:
   13930:	f3 0f 1e fa          	endbr64 
   13934:	31 c9                	xor    %ecx,%ecx
   13936:	48 39 d1             	cmp    %rdx,%rcx
   13939:	74 13                	je     1394e <memcmp+0x1e>
   1393b:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   1393f:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
   13944:	48 ff c1             	inc    %rcx
   13947:	44 29 c0             	sub    %r8d,%eax
   1394a:	74 ea                	je     13936 <memcmp+0x6>
   1394c:	eb 02                	jmp    13950 <memcmp+0x20>
   1394e:	31 c0                	xor    %eax,%eax
   13950:	c3                   	ret    

0000000000013951 <memchr>:
   13951:	f3 0f 1e fa          	endbr64 
   13955:	48 89 f8             	mov    %rdi,%rax
   13958:	48 01 fa             	add    %rdi,%rdx
   1395b:	48 39 d0             	cmp    %rdx,%rax
   1395e:	74 0c                	je     1396c <memchr+0x1b>
   13960:	0f b6 08             	movzbl (%rax),%ecx
   13963:	39 f1                	cmp    %esi,%ecx
   13965:	74 07                	je     1396e <memchr+0x1d>
   13967:	48 ff c0             	inc    %rax
   1396a:	eb ef                	jmp    1395b <memchr+0xa>
   1396c:	31 c0                	xor    %eax,%eax
   1396e:	c3                   	ret    

000000000001396f <memswap>:
   1396f:	f3 0f 1e fa          	endbr64 
   13973:	48 89 f8             	mov    %rdi,%rax
   13976:	31 c9                	xor    %ecx,%ecx
   13978:	48 39 ca             	cmp    %rcx,%rdx
   1397b:	74 15                	je     13992 <memswap+0x23>
   1397d:	40 8a 3c 08          	mov    (%rax,%rcx,1),%dil
   13981:	44 8a 04 0e          	mov    (%rsi,%rcx,1),%r8b
   13985:	44 88 04 08          	mov    %r8b,(%rax,%rcx,1)
   13989:	40 88 3c 0e          	mov    %dil,(%rsi,%rcx,1)
   1398d:	48 ff c1             	inc    %rcx
   13990:	eb e6                	jmp    13978 <memswap+0x9>
   13992:	c3                   	ret    

0000000000013993 <strncmp>:
   13993:	f3 0f 1e fa          	endbr64 
   13997:	31 c9                	xor    %ecx,%ecx
   13999:	48 39 ca             	cmp    %rcx,%rdx
   1399c:	74 1b                	je     139b9 <strncmp+0x26>
   1399e:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   139a2:	44 0f b6 0c 0e       	movzbl (%rsi,%rcx,1),%r9d
   139a7:	41 89 c0             	mov    %eax,%r8d
   139aa:	44 29 c8             	sub    %r9d,%eax
   139ad:	75 0c                	jne    139bb <strncmp+0x28>
   139af:	48 ff c1             	inc    %rcx
   139b2:	45 84 c0             	test   %r8b,%r8b
   139b5:	75 e2                	jne    13999 <strncmp+0x6>
   139b7:	eb 02                	jmp    139bb <strncmp+0x28>
   139b9:	31 c0                	xor    %eax,%eax
   139bb:	c3                   	ret    

00000000000139bc <strcmp>:
   139bc:	f3 0f 1e fa          	endbr64 
   139c0:	48 83 ca ff          	or     $0xffffffffffffffff,%rdx
   139c4:	e9 ca ff ff ff       	jmp    13993 <strncmp>

00000000000139c9 <strcasecmp>:
   139c9:	f3 0f 1e fa          	endbr64 
   139cd:	31 c9                	xor    %ecx,%ecx
   139cf:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   139d3:	8d 50 9f             	lea    -0x61(%rax),%edx
   139d6:	41 89 c0             	mov    %eax,%r8d
   139d9:	83 fa 19             	cmp    $0x19,%edx
   139dc:	77 03                	ja     139e1 <strcasecmp+0x18>
   139de:	83 e8 20             	sub    $0x20,%eax
   139e1:	0f b6 14 0e          	movzbl (%rsi,%rcx,1),%edx
   139e5:	44 8d 4a 9f          	lea    -0x61(%rdx),%r9d
   139e9:	41 83 f9 19          	cmp    $0x19,%r9d
   139ed:	77 03                	ja     139f2 <strcasecmp+0x29>
   139ef:	83 ea 20             	sub    $0x20,%edx
   139f2:	29 d0                	sub    %edx,%eax
   139f4:	75 08                	jne    139fe <strcasecmp+0x35>
   139f6:	48 ff c1             	inc    %rcx
   139f9:	45 84 c0             	test   %r8b,%r8b
   139fc:	75 d1                	jne    139cf <strcasecmp+0x6>
   139fe:	c3                   	ret    

00000000000139ff <strnlen>:
   139ff:	f3 0f 1e fa          	endbr64 
   13a03:	31 c0                	xor    %eax,%eax
   13a05:	48 39 f0             	cmp    %rsi,%rax
   13a08:	74 0b                	je     13a15 <strnlen+0x16>
   13a0a:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)
   13a0e:	74 05                	je     13a15 <strnlen+0x16>
   13a10:	48 ff c0             	inc    %rax
   13a13:	eb f0                	jmp    13a05 <strnlen+0x6>
   13a15:	c3                   	ret    

0000000000013a16 <strlen>:
   13a16:	f3 0f 1e fa          	endbr64 
   13a1a:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   13a1e:	e9 dc ff ff ff       	jmp    139ff <strnlen>

0000000000013a23 <strchr>:
   13a23:	f3 0f 1e fa          	endbr64 
   13a27:	48 89 f8             	mov    %rdi,%rax
   13a2a:	0f b6 08             	movzbl (%rax),%ecx
   13a2d:	39 f1                	cmp    %esi,%ecx
   13a2f:	74 0b                	je     13a3c <strchr+0x19>
   13a31:	84 c9                	test   %cl,%cl
   13a33:	74 05                	je     13a3a <strchr+0x17>
   13a35:	48 ff c0             	inc    %rax
   13a38:	eb f0                	jmp    13a2a <strchr+0x7>
   13a3a:	31 c0                	xor    %eax,%eax
   13a3c:	c3                   	ret    

0000000000013a3d <strrchr>:
   13a3d:	f3 0f 1e fa          	endbr64 
   13a41:	48 89 f8             	mov    %rdi,%rax
   13a44:	80 38 00             	cmpb   $0x0,(%rax)
   13a47:	74 0c                	je     13a55 <strrchr+0x18>
   13a49:	48 ff c0             	inc    %rax
   13a4c:	eb f6                	jmp    13a44 <strrchr+0x7>
   13a4e:	0f b6 10             	movzbl (%rax),%edx
   13a51:	39 f2                	cmp    %esi,%edx
   13a53:	74 0a                	je     13a5f <strrchr+0x22>
   13a55:	48 ff c8             	dec    %rax
   13a58:	48 39 f8             	cmp    %rdi,%rax
   13a5b:	73 f1                	jae    13a4e <strrchr+0x11>
   13a5d:	31 c0                	xor    %eax,%eax
   13a5f:	c3                   	ret    

0000000000013a60 <strstr>:
   13a60:	f3 0f 1e fa          	endbr64 
   13a64:	49 89 f9             	mov    %rdi,%r9
   13a67:	48 89 f7             	mov    %rsi,%rdi
   13a6a:	49 89 f2             	mov    %rsi,%r10
   13a6d:	e8 a4 ff ff ff       	call   13a16 <strlen>
   13a72:	48 89 c2             	mov    %rax,%rdx
   13a75:	41 80 39 00          	cmpb   $0x0,(%r9)
   13a79:	74 14                	je     13a8f <strstr+0x2f>
   13a7b:	4c 89 d6             	mov    %r10,%rsi
   13a7e:	4c 89 cf             	mov    %r9,%rdi
   13a81:	e8 aa fe ff ff       	call   13930 <memcmp>
   13a86:	85 c0                	test   %eax,%eax
   13a88:	74 08                	je     13a92 <strstr+0x32>
   13a8a:	49 ff c1             	inc    %r9
   13a8d:	eb e6                	jmp    13a75 <strstr+0x15>
   13a8f:	45 31 c9             	xor    %r9d,%r9d
   13a92:	4c 89 c8             	mov    %r9,%rax
   13a95:	c3                   	ret    

0000000000013a96 <strcpy>:
   13a96:	f3 0f 1e fa          	endbr64 
   13a9a:	48 89 f8             	mov    %rdi,%rax
   13a9d:	31 d2                	xor    %edx,%edx
   13a9f:	8a 0c 16             	mov    (%rsi,%rdx,1),%cl
   13aa2:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
   13aa5:	48 ff c2             	inc    %rdx
   13aa8:	84 c9                	test   %cl,%cl
   13aaa:	75 f3                	jne    13a9f <strcpy+0x9>
   13aac:	c3                   	ret    

0000000000013aad <strncpy>:
   13aad:	f3 0f 1e fa          	endbr64 
   13ab1:	48 89 f8             	mov    %rdi,%rax
   13ab4:	31 c9                	xor    %ecx,%ecx
   13ab6:	49 89 d0             	mov    %rdx,%r8
   13ab9:	4c 8d 0c 08          	lea    (%rax,%rcx,1),%r9
   13abd:	49 29 c8             	sub    %rcx,%r8
   13ac0:	48 39 ca             	cmp    %rcx,%rdx
   13ac3:	74 14                	je     13ad9 <strncpy+0x2c>
   13ac5:	40 8a 3c 0e          	mov    (%rsi,%rcx,1),%dil
   13ac9:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
   13acd:	48 ff c1             	inc    %rcx
   13ad0:	40 84 ff             	test   %dil,%dil
   13ad3:	75 e1                	jne    13ab6 <strncpy+0x9>
   13ad5:	31 d2                	xor    %edx,%edx
   13ad7:	eb 01                	jmp    13ada <strncpy+0x2d>
   13ad9:	c3                   	ret    
   13ada:	4c 39 c2             	cmp    %r8,%rdx
   13add:	74 0a                	je     13ae9 <strncpy+0x3c>
   13adf:	41 c6 04 11 00       	movb   $0x0,(%r9,%rdx,1)
   13ae4:	48 ff c2             	inc    %rdx
   13ae7:	eb f1                	jmp    13ada <strncpy+0x2d>
   13ae9:	c3                   	ret    

0000000000013aea <strndup>:
   13aea:	f3 0f 1e fa          	endbr64 
   13aee:	41 54                	push   %r12
   13af0:	55                   	push   %rbp
   13af1:	48 89 fd             	mov    %rdi,%rbp
   13af4:	53                   	push   %rbx
   13af5:	e8 05 ff ff ff       	call   139ff <strnlen>
   13afa:	48 8d 78 01          	lea    0x1(%rax),%rdi
   13afe:	48 89 c3             	mov    %rax,%rbx
   13b01:	e8 0f 8c ff ff       	call   c715 <malloc>
   13b06:	49 89 c4             	mov    %rax,%r12
   13b09:	48 85 c0             	test   %rax,%rax
   13b0c:	74 13                	je     13b21 <strndup+0x37>
   13b0e:	48 89 da             	mov    %rbx,%rdx
   13b11:	48 89 ee             	mov    %rbp,%rsi
   13b14:	48 89 c7             	mov    %rax,%rdi
   13b17:	e8 cd 38 00 00       	call   173e9 <__memcpy>
   13b1c:	41 c6 04 1c 00       	movb   $0x0,(%r12,%rbx,1)
   13b21:	4c 89 e0             	mov    %r12,%rax
   13b24:	5b                   	pop    %rbx
   13b25:	5d                   	pop    %rbp
   13b26:	41 5c                	pop    %r12
   13b28:	c3                   	ret    

0000000000013b29 <strdup>:
   13b29:	f3 0f 1e fa          	endbr64 
   13b2d:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   13b31:	e9 b4 ff ff ff       	jmp    13aea <strndup>

0000000000013b36 <digit_value>:
   13b36:	f3 0f 1e fa          	endbr64 
   13b3a:	89 f8                	mov    %edi,%eax
   13b3c:	83 ff 60             	cmp    $0x60,%edi
   13b3f:	76 04                	jbe    13b45 <digit_value+0xf>
   13b41:	83 e8 57             	sub    $0x57,%eax
   13b44:	c3                   	ret    
   13b45:	83 ff 40             	cmp    $0x40,%edi
   13b48:	76 04                	jbe    13b4e <digit_value+0x18>
   13b4a:	83 e8 37             	sub    $0x37,%eax
   13b4d:	c3                   	ret    
   13b4e:	83 ff 39             	cmp    $0x39,%edi
   13b51:	77 03                	ja     13b56 <digit_value+0x20>
   13b53:	83 e8 30             	sub    $0x30,%eax
   13b56:	c3                   	ret    

0000000000013b57 <strtoul>:
   13b57:	f3 0f 1e fa          	endbr64 
   13b5b:	41 54                	push   %r12
   13b5d:	49 89 f4             	mov    %rsi,%r12
   13b60:	55                   	push   %rbp
   13b61:	89 d5                	mov    %edx,%ebp
   13b63:	53                   	push   %rbx
   13b64:	48 89 fb             	mov    %rdi,%rbx
   13b67:	0f be 3b             	movsbl (%rbx),%edi
   13b6a:	e8 1d 59 00 00       	call   1948c <isspace>
   13b6f:	89 c2                	mov    %eax,%edx
   13b71:	85 c0                	test   %eax,%eax
   13b73:	74 05                	je     13b7a <strtoul+0x23>
   13b75:	48 ff c3             	inc    %rbx
   13b78:	eb ed                	jmp    13b67 <strtoul+0x10>
   13b7a:	8a 03                	mov    (%rbx),%al
   13b7c:	3c 2d                	cmp    $0x2d,%al
   13b7e:	75 0a                	jne    13b8a <strtoul+0x33>
   13b80:	48 ff c3             	inc    %rbx
   13b83:	ba 01 00 00 00       	mov    $0x1,%edx
   13b88:	eb 07                	jmp    13b91 <strtoul+0x3a>
   13b8a:	3c 2b                	cmp    $0x2b,%al
   13b8c:	75 03                	jne    13b91 <strtoul+0x3a>
   13b8e:	48 ff c3             	inc    %rbx
   13b91:	8a 03                	mov    (%rbx),%al
   13b93:	85 ed                	test   %ebp,%ebp
   13b95:	75 26                	jne    13bbd <strtoul+0x66>
   13b97:	bd 0a 00 00 00       	mov    $0xa,%ebp
   13b9c:	3c 30                	cmp    $0x30,%al
   13b9e:	75 1d                	jne    13bbd <strtoul+0x66>
   13ba0:	8a 43 01             	mov    0x1(%rbx),%al
   13ba3:	83 e0 df             	and    $0xffffffdf,%eax
   13ba6:	3c 58                	cmp    $0x58,%al
   13ba8:	74 0a                	je     13bb4 <strtoul+0x5d>
   13baa:	48 ff c3             	inc    %rbx
   13bad:	bd 08 00 00 00       	mov    $0x8,%ebp
   13bb2:	eb 09                	jmp    13bbd <strtoul+0x66>
   13bb4:	48 83 c3 02          	add    $0x2,%rbx
   13bb8:	bd 10 00 00 00       	mov    $0x10,%ebp
   13bbd:	45 31 c0             	xor    %r8d,%r8d
   13bc0:	48 63 cd             	movslq %ebp,%rcx
   13bc3:	0f be 3b             	movsbl (%rbx),%edi
   13bc6:	e8 6b ff ff ff       	call   13b36 <digit_value>
   13bcb:	39 c5                	cmp    %eax,%ebp
   13bcd:	76 0e                	jbe    13bdd <strtoul+0x86>
   13bcf:	4c 0f af c1          	imul   %rcx,%r8
   13bd3:	89 c0                	mov    %eax,%eax
   13bd5:	48 ff c3             	inc    %rbx
   13bd8:	49 01 c0             	add    %rax,%r8
   13bdb:	eb e6                	jmp    13bc3 <strtoul+0x6c>
   13bdd:	85 d2                	test   %edx,%edx
   13bdf:	74 03                	je     13be4 <strtoul+0x8d>
   13be1:	49 f7 d8             	neg    %r8
   13be4:	4d 85 e4             	test   %r12,%r12
   13be7:	74 04                	je     13bed <strtoul+0x96>
   13be9:	49 89 1c 24          	mov    %rbx,(%r12)
   13bed:	5b                   	pop    %rbx
   13bee:	4c 89 c0             	mov    %r8,%rax
   13bf1:	5d                   	pop    %rbp
   13bf2:	41 5c                	pop    %r12
   13bf4:	c3                   	ret    

0000000000013bf5 <sync_exec>:
   13bf5:	f3 0f 1e fa          	endbr64 
   13bf9:	41 54                	push   %r12
   13bfb:	48 8d 15 8e 36 01 00 	lea    0x1368e(%rip),%rdx        # 27290 <sync_cmd>
   13c02:	48 83 ec 10          	sub    $0x10,%rsp
   13c06:	48 8b 05 43 64 01 00 	mov    0x16443(%rip),%rax        # 2a050 <__stack_chk_guard>
   13c0d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13c12:	31 c0                	xor    %eax,%eax
   13c14:	48 89 e1             	mov    %rsp,%rcx
   13c17:	e8 6f b6 ff ff       	call   f28b <parse_options>
   13c1c:	41 89 c4             	mov    %eax,%r12d
   13c1f:	85 c0                	test   %eax,%eax
   13c21:	75 28                	jne    13c4b <sync_exec+0x56>
   13c23:	48 8b 3c 24          	mov    (%rsp),%rdi
   13c27:	e8 11 d4 00 00       	call   2103d <sync>
   13c2c:	41 89 c4             	mov    %eax,%r12d
   13c2f:	85 c0                	test   %eax,%eax
   13c31:	74 18                	je     13c4b <sync_exec+0x56>
   13c33:	89 c7                	mov    %eax,%edi
   13c35:	e8 3e fc ff ff       	call   13878 <strerror>
   13c3a:	48 8d 3d c4 00 01 00 	lea    0x100c4(%rip),%rdi        # 23d05 <.LC0>
   13c41:	48 89 c6             	mov    %rax,%rsi
   13c44:	31 c0                	xor    %eax,%eax
   13c46:	e8 2f 36 00 00       	call   1727a <printf>
   13c4b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13c50:	48 2b 05 f9 63 01 00 	sub    0x163f9(%rip),%rax        # 2a050 <__stack_chk_guard>
   13c57:	74 05                	je     13c5e <sync_exec+0x69>
   13c59:	e8 02 ee fe ff       	call   2a60 <__stack_chk_fail>
   13c5e:	48 83 c4 10          	add    $0x10,%rsp
   13c62:	44 89 e0             	mov    %r12d,%eax
   13c65:	41 5c                	pop    %r12
   13c67:	c3                   	ret    

0000000000013c68 <tcp_sack_block>:
   13c68:	8b 8f 8c 00 00 00    	mov    0x8c(%rdi),%ecx
   13c6e:	4c 8b 87 c8 00 00 00 	mov    0xc8(%rdi),%r8
   13c75:	48 81 c7 c8 00 00 00 	add    $0xc8,%rdi
   13c7c:	89 c8                	mov    %ecx,%eax
   13c7e:	49 39 f8             	cmp    %rdi,%r8
   13c81:	74 1d                	je     13ca0 <tcp_sack_block+0x38>
   13c83:	4d 8b 50 18          	mov    0x18(%r8),%r10
   13c87:	45 8b 0a             	mov    (%r10),%r9d
   13c8a:	45 89 cb             	mov    %r9d,%r11d
   13c8d:	41 29 c3             	sub    %eax,%r11d
   13c90:	45 85 db             	test   %r11d,%r11d
   13c93:	7e 21                	jle    13cb6 <tcp_sack_block+0x4e>
   13c95:	45 89 cb             	mov    %r9d,%r11d
   13c98:	41 29 f3             	sub    %esi,%r11d
   13c9b:	45 85 db             	test   %r11d,%r11d
   13c9e:	7e 13                	jle    13cb3 <tcp_sack_block+0x4b>
   13ca0:	45 31 c0             	xor    %r8d,%r8d
   13ca3:	39 f0                	cmp    %esi,%eax
   13ca5:	78 25                	js     13ccc <tcp_sack_block+0x64>
   13ca7:	89 42 04             	mov    %eax,0x4(%rdx)
   13caa:	29 c8                	sub    %ecx,%eax
   13cac:	89 0a                	mov    %ecx,(%rdx)
   13cae:	41 89 c0             	mov    %eax,%r8d
   13cb1:	eb 19                	jmp    13ccc <tcp_sack_block+0x64>
   13cb3:	44 89 c9             	mov    %r9d,%ecx
   13cb6:	45 8b 4a 04          	mov    0x4(%r10),%r9d
   13cba:	4d 8b 00             	mov    (%r8),%r8
   13cbd:	45 89 ca             	mov    %r9d,%r10d
   13cc0:	41 29 c2             	sub    %eax,%r10d
   13cc3:	45 85 d2             	test   %r10d,%r10d
   13cc6:	41 0f 4f c1          	cmovg  %r9d,%eax
   13cca:	eb b2                	jmp    13c7e <tcp_sack_block+0x16>
   13ccc:	44 89 c0             	mov    %r8d,%eax
   13ccf:	c3                   	ret    

0000000000013cd0 <tcp_rx_seq>:
   13cd0:	8b 97 8c 00 00 00    	mov    0x8c(%rdi),%edx
   13cd6:	8b 8f 90 00 00 00    	mov    0x90(%rdi),%ecx
   13cdc:	31 c0                	xor    %eax,%eax
   13cde:	01 f2                	add    %esi,%edx
   13ce0:	89 97 8c 00 00 00    	mov    %edx,0x8c(%rdi)
   13ce6:	39 f1                	cmp    %esi,%ecx
   13ce8:	76 04                	jbe    13cee <tcp_rx_seq+0x1e>
   13cea:	89 c8                	mov    %ecx,%eax
   13cec:	29 f0                	sub    %esi,%eax
   13cee:	89 87 90 00 00 00    	mov    %eax,0x90(%rdi)
   13cf4:	8b 87 94 00 00 00    	mov    0x94(%rdi),%eax
   13cfa:	4c 8d 87 b6 00 00 00 	lea    0xb6(%rdi),%r8
   13d01:	89 87 98 00 00 00    	mov    %eax,0x98(%rdi)
   13d07:	48 8d 87 9e 00 00 00 	lea    0x9e(%rdi),%rax
   13d0e:	8b 30                	mov    (%rax),%esi
   13d10:	8b 48 04             	mov    0x4(%rax),%ecx
   13d13:	39 ce                	cmp    %ecx,%esi
   13d15:	74 0d                	je     13d24 <tcp_rx_seq+0x54>
   13d17:	39 d6                	cmp    %edx,%esi
   13d19:	79 02                	jns    13d1d <tcp_rx_seq+0x4d>
   13d1b:	89 10                	mov    %edx,(%rax)
   13d1d:	39 d1                	cmp    %edx,%ecx
   13d1f:	79 03                	jns    13d24 <tcp_rx_seq+0x54>
   13d21:	89 50 04             	mov    %edx,0x4(%rax)
   13d24:	48 83 c0 08          	add    $0x8,%rax
   13d28:	49 39 c0             	cmp    %rax,%r8
   13d2b:	75 e1                	jne    13d0e <tcp_rx_seq+0x3e>
   13d2d:	83 4f 20 04          	orl    $0x4,0x20(%rdi)
   13d31:	c3                   	ret    

0000000000013d32 <tcp_discard>:
   13d32:	f3 0f 1e fa          	endbr64 
   13d36:	48 8b 05 23 36 01 00 	mov    0x13623(%rip),%rax        # 27360 <tcp_conns>
   13d3d:	41 54                	push   %r12
   13d3f:	45 31 e4             	xor    %r12d,%r12d
   13d42:	55                   	push   %rbp
   13d43:	48 8d 2d 16 36 01 00 	lea    0x13616(%rip),%rbp        # 27360 <tcp_conns>
   13d4a:	53                   	push   %rbx
   13d4b:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
   13d4f:	48 8d 43 10          	lea    0x10(%rbx),%rax
   13d53:	48 39 e8             	cmp    %rbp,%rax
   13d56:	74 33                	je     13d8b <tcp_discard+0x59>
   13d58:	48 8b bb d0 00 00 00 	mov    0xd0(%rbx),%rdi
   13d5f:	48 8d 83 c8 00 00 00 	lea    0xc8(%rbx),%rax
   13d66:	48 39 c7             	cmp    %rax,%rdi
   13d69:	74 16                	je     13d81 <tcp_discard+0x4f>
   13d6b:	48 8b 17             	mov    (%rdi),%rdx
   13d6e:	48 8b 47 08          	mov    0x8(%rdi),%rax
   13d72:	41 ff c4             	inc    %r12d
   13d75:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13d79:	48 89 10             	mov    %rdx,(%rax)
   13d7c:	e8 e5 5f ff ff       	call   9d66 <free_iob>
   13d81:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   13d85:	48 83 eb 10          	sub    $0x10,%rbx
   13d89:	eb c4                	jmp    13d4f <tcp_discard+0x1d>
   13d8b:	44 89 e0             	mov    %r12d,%eax
   13d8e:	5b                   	pop    %rbx
   13d8f:	5d                   	pop    %rbp
   13d90:	41 5c                	pop    %r12
   13d92:	c3                   	ret    

0000000000013d93 <tcp_open>:
   13d93:	f3 0f 1e fa          	endbr64 
   13d97:	41 57                	push   %r15
   13d99:	41 56                	push   %r14
   13d9b:	49 89 f6             	mov    %rsi,%r14
   13d9e:	41 55                	push   %r13
   13da0:	49 89 fd             	mov    %rdi,%r13
   13da3:	bf f0 01 00 00       	mov    $0x1f0,%edi
   13da8:	41 54                	push   %r12
   13daa:	49 89 d4             	mov    %rdx,%r12
   13dad:	55                   	push   %rbp
   13dae:	48 83 ec 10          	sub    $0x10,%rsp
   13db2:	e8 7f 89 ff ff       	call   c736 <zalloc>
   13db7:	48 85 c0             	test   %rax,%rax
   13dba:	75 0a                	jne    13dc6 <tcp_open+0x33>
   13dbc:	b8 77 9f f5 ce       	mov    $0xcef59f77,%eax
   13dc1:	e9 5d 01 00 00       	jmp    13f23 <tcp_open+0x190>
   13dc6:	48 89 c5             	mov    %rax,%rbp
   13dc9:	48 8d 05 f0 26 01 00 	lea    0x126f0(%rip),%rax        # 264c0 <null_intf>
   13dd0:	48 89 45 28          	mov    %rax,0x28(%rbp)
   13dd4:	48 8d 05 45 35 01 00 	lea    0x13545(%rip),%rax        # 27320 <tcp_xfer_desc>
   13ddb:	4c 8d 7d 48          	lea    0x48(%rbp),%r15
   13ddf:	48 89 45 38          	mov    %rax,0x38(%rbp)
   13de3:	48 89 45 40          	mov    %rax,0x40(%rbp)
   13de7:	48 8d 85 d8 00 00 00 	lea    0xd8(%rbp),%rax
   13dee:	48 89 85 d8 00 00 00 	mov    %rax,0xd8(%rbp)
   13df5:	48 89 85 e0 00 00 00 	mov    %rax,0xe0(%rbp)
   13dfc:	48 8d 05 3d 35 01 00 	lea    0x1353d(%rip),%rax        # 27340 <tcp_process_desc>
   13e03:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   13e0a:	48 8d 05 89 09 00 00 	lea    0x989(%rip),%rax        # 1479a <tcp_expired>
   13e11:	48 89 85 38 01 00 00 	mov    %rax,0x138(%rbp)
   13e18:	48 8d 05 56 06 00 00 	lea    0x656(%rip),%rax        # 14475 <tcp_keepalive_expired>
   13e1f:	48 89 85 88 01 00 00 	mov    %rax,0x188(%rbp)
   13e26:	48 8d 05 4a 09 00 00 	lea    0x94a(%rip),%rax        # 14777 <tcp_wait_expired>
   13e2d:	48 89 85 d8 01 00 00 	mov    %rax,0x1d8(%rbp)
   13e34:	48 b8 02 00 00 00 02 	movabs $0x200000002,%rax
   13e3b:	00 00 00 
   13e3e:	48 89 6d 30          	mov    %rbp,0x30(%rbp)
   13e42:	48 89 ad f0 00 00 00 	mov    %rbp,0xf0(%rbp)
   13e49:	48 89 ad 40 01 00 00 	mov    %rbp,0x140(%rbp)
   13e50:	48 89 ad 90 01 00 00 	mov    %rbp,0x190(%rbp)
   13e57:	48 89 ad e0 01 00 00 	mov    %rbp,0x1e0(%rbp)
   13e5e:	48 89 45 78          	mov    %rax,0x78(%rbp)
   13e62:	e8 b6 bc ff ff       	call   fb1d <random>
   13e67:	4c 89 ff             	mov    %r15,%rdi
   13e6a:	ba 20 00 00 00       	mov    $0x20,%edx
   13e6f:	4c 89 f6             	mov    %r14,%rsi
   13e72:	89 85 80 00 00 00    	mov    %eax,0x80(%rbp)
   13e78:	48 8d 85 b8 00 00 00 	lea    0xb8(%rbp),%rax
   13e7f:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   13e86:	48 89 85 c0 00 00 00 	mov    %rax,0xc0(%rbp)
   13e8d:	48 8d 85 c8 00 00 00 	lea    0xc8(%rbp),%rax
   13e94:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   13e9b:	48 89 85 d0 00 00 00 	mov    %rax,0xd0(%rbp)
   13ea2:	e8 42 35 00 00       	call   173e9 <__memcpy>
   13ea7:	4c 89 ff             	mov    %r15,%rdi
   13eaa:	e8 e2 10 00 00       	call   14f91 <tcpip_mtu>
   13eaf:	48 85 c0             	test   %rax,%rax
   13eb2:	75 07                	jne    13ebb <tcp_open+0x128>
   13eb4:	b8 70 9f f5 d7       	mov    $0xd7f59f70,%eax
   13eb9:	eb 58                	jmp    13f13 <tcp_open+0x180>
   13ebb:	48 83 e8 14          	sub    $0x14,%rax
   13ebf:	48 8d 35 6b 00 00 00 	lea    0x6b(%rip),%rsi        # 13f31 <tcp_port_available>
   13ec6:	4c 89 e7             	mov    %r12,%rdi
   13ec9:	48 89 45 70          	mov    %rax,0x70(%rbp)
   13ecd:	e8 04 11 00 00       	call   14fd6 <tcpip_bind>
   13ed2:	85 c0                	test   %eax,%eax
   13ed4:	78 3d                	js     13f13 <tcp_open+0x180>
   13ed6:	89 45 68             	mov    %eax,0x68(%rbp)
   13ed9:	31 f6                	xor    %esi,%esi
   13edb:	48 8d bd f8 00 00 00 	lea    0xf8(%rbp),%rdi
   13ee2:	e8 57 c4 ff ff       	call   1033e <start_timer_fixed>
   13ee7:	48 8d bd e8 01 00 00 	lea    0x1e8(%rbp),%rdi
   13eee:	e8 cc c5 00 00       	call   204bf <pending_get>
   13ef3:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
   13ef7:	4c 89 ee             	mov    %r13,%rsi
   13efa:	e8 42 59 ff ff       	call   9841 <intf_plug_plug>
   13eff:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   13f03:	48 8d 35 56 34 01 00 	lea    0x13456(%rip),%rsi        # 27360 <tcp_conns>
   13f0a:	e8 82 82 ff ff       	call   c191 <extern_list_add>
   13f0f:	31 c0                	xor    %eax,%eax
   13f11:	eb 10                	jmp    13f23 <tcp_open+0x190>
   13f13:	48 89 ef             	mov    %rbp,%rdi
   13f16:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   13f1a:	e8 fb bf ff ff       	call   ff1a <ref_decrement>
   13f1f:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13f23:	48 83 c4 10          	add    $0x10,%rsp
   13f27:	5d                   	pop    %rbp
   13f28:	41 5c                	pop    %r12
   13f2a:	41 5d                	pop    %r13
   13f2c:	41 5e                	pop    %r14
   13f2e:	41 5f                	pop    %r15
   13f30:	c3                   	ret    

0000000000013f31 <tcp_port_available>:
   13f31:	f3 0f 1e fa          	endbr64 
   13f35:	48 8b 0d 24 34 01 00 	mov    0x13424(%rip),%rcx        # 27360 <tcp_conns>
   13f3c:	89 f8                	mov    %edi,%eax
   13f3e:	48 8d 51 f0          	lea    -0x10(%rcx),%rdx
   13f42:	48 8d 0d 17 34 01 00 	lea    0x13417(%rip),%rcx        # 27360 <tcp_conns>
   13f49:	48 8d 72 10          	lea    0x10(%rdx),%rsi
   13f4d:	48 39 ce             	cmp    %rcx,%rsi
   13f50:	74 15                	je     13f67 <tcp_port_available+0x36>
   13f52:	3b 42 68             	cmp    0x68(%rdx),%eax
   13f55:	75 06                	jne    13f5d <tcp_port_available+0x2c>
   13f57:	b8 6c 9f f5 fc       	mov    $0xfcf59f6c,%eax
   13f5c:	c3                   	ret    
   13f5d:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   13f61:	48 83 ea 10          	sub    $0x10,%rdx
   13f65:	eb e2                	jmp    13f49 <tcp_port_available+0x18>
   13f67:	c3                   	ret    

0000000000013f68 <tcp_progress>:
   13f68:	f3 0f 1e fa          	endbr64 
   13f6c:	8b 47 78             	mov    0x78(%rdi),%eax
   13f6f:	25 00 02 02 00       	and    $0x20200,%eax
   13f74:	3d 00 02 02 00       	cmp    $0x20200,%eax
   13f79:	74 1c                	je     13f97 <tcp_progress+0x2f>
   13f7b:	50                   	push   %rax
   13f7c:	48 8d 7e 10          	lea    0x10(%rsi),%rdi
   13f80:	48 8d 15 a4 fd 00 00 	lea    0xfda4(%rip),%rdx        # 23d2b <.LC0>
   13f87:	31 c0                	xor    %eax,%eax
   13f89:	be 20 00 00 00       	mov    $0x20,%esi
   13f8e:	e8 ca 31 00 00       	call   1715d <snprintf>
   13f93:	31 c0                	xor    %eax,%eax
   13f95:	5a                   	pop    %rdx
   13f96:	c3                   	ret    
   13f97:	31 c0                	xor    %eax,%eax
   13f99:	c3                   	ret    

0000000000013f9a <tcp_open_uri>:
   13f9a:	f3 0f 1e fa          	endbr64 
   13f9e:	41 54                	push   %r12
   13fa0:	55                   	push   %rbp
   13fa1:	53                   	push   %rbx
   13fa2:	48 83 ec 30          	sub    $0x30,%rsp
   13fa6:	48 8b 05 a3 60 01 00 	mov    0x160a3(%rip),%rax        # 2a050 <__stack_chk_guard>
   13fad:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13fb2:	31 c0                	xor    %eax,%eax
   13fb4:	48 83 7e 30 00       	cmpq   $0x0,0x30(%rsi)
   13fb9:	75 07                	jne    13fc2 <tcp_open_uri+0x28>
   13fbb:	b8 7e 9f f5 e3       	mov    $0xe3f59f7e,%eax
   13fc0:	eb 40                	jmp    14002 <tcp_open_uri+0x68>
   13fc2:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   13fc7:	48 89 fd             	mov    %rdi,%rbp
   13fca:	48 89 f3             	mov    %rsi,%rbx
   13fcd:	b9 20 00 00 00       	mov    $0x20,%ecx
   13fd2:	4c 89 e7             	mov    %r12,%rdi
   13fd5:	31 c0                	xor    %eax,%eax
   13fd7:	f3 aa                	rep stos %al,%es:(%rdi)
   13fd9:	31 f6                	xor    %esi,%esi
   13fdb:	48 89 df             	mov    %rbx,%rdi
   13fde:	e8 63 27 00 00       	call   16746 <uri_port>
   13fe3:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   13fe7:	45 31 c0             	xor    %r8d,%r8d
   13fea:	4c 89 e2             	mov    %r12,%rdx
   13fed:	8b 35 19 06 01 00    	mov    0x10619(%rip),%esi        # 2460c <tcp_sock_stream>
   13ff3:	48 89 ef             	mov    %rbp,%rdi
   13ff6:	86 c4                	xchg   %al,%ah
   13ff8:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
   13ffd:	e8 61 c2 ff ff       	call   10263 <xfer_open_named_socket>
   14002:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   14007:	48 2b 15 42 60 01 00 	sub    0x16042(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1400e:	74 05                	je     14015 <tcp_open_uri+0x7b>
   14010:	e8 4b ea fe ff       	call   2a60 <__stack_chk_fail>
   14015:	48 83 c4 30          	add    $0x30,%rsp
   14019:	5b                   	pop    %rbx
   1401a:	5d                   	pop    %rbp
   1401b:	41 5c                	pop    %r12
   1401d:	c3                   	ret    

000000000001401e <tcp_xfer_window>:
   1401e:	f3 0f 1e fa          	endbr64 
   14022:	48 8d 97 b8 00 00 00 	lea    0xb8(%rdi),%rdx
   14029:	31 c0                	xor    %eax,%eax
   1402b:	48 39 97 b8 00 00 00 	cmp    %rdx,0xb8(%rdi)
   14032:	75 23                	jne    14057 <tcp_xfer_window+0x39>
   14034:	8b 57 78             	mov    0x78(%rdi),%edx
   14037:	81 e2 01 02 00 00    	and    $0x201,%edx
   1403d:	81 fa 00 02 00 00    	cmp    $0x200,%edx
   14043:	75 12                	jne    14057 <tcp_xfer_window+0x39>
   14045:	8b 87 88 00 00 00    	mov    0x88(%rdi),%eax
   1404b:	ba b8 04 00 00       	mov    $0x4b8,%edx
   14050:	48 39 d0             	cmp    %rdx,%rax
   14053:	48 0f 47 c2          	cmova  %rdx,%rax
   14057:	c3                   	ret    

0000000000014058 <tcp_xmit_sack.part.0>:
   14058:	41 57                	push   %r15
   1405a:	41 56                	push   %r14
   1405c:	41 89 f6             	mov    %esi,%r14d
   1405f:	41 55                	push   %r13
   14061:	41 54                	push   %r12
   14063:	45 31 e4             	xor    %r12d,%r12d
   14066:	55                   	push   %rbp
   14067:	53                   	push   %rbx
   14068:	48 89 fb             	mov    %rdi,%rbx
   1406b:	48 83 ec 48          	sub    $0x48,%rsp
   1406f:	8b 77 78             	mov    0x78(%rdi),%esi
   14072:	48 8b 05 d7 5f 01 00 	mov    0x15fd7(%rip),%rax        # 2a050 <__stack_chk_guard>
   14079:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1407e:	31 c0                	xor    %eax,%eax
   14080:	89 f0                	mov    %esi,%eax
   14082:	25 01 02 00 00       	and    $0x201,%eax
   14087:	3d 00 02 00 00       	cmp    $0x200,%eax
   1408c:	75 45                	jne    140d3 <tcp_xmit_sack.part.0+0x7b>
   1408e:	8b 87 88 00 00 00    	mov    0x88(%rdi),%eax
   14094:	ba b8 04 00 00       	mov    $0x4b8,%edx
   14099:	48 8b 8f b8 00 00 00 	mov    0xb8(%rdi),%rcx
   140a0:	4c 8d 83 b8 00 00 00 	lea    0xb8(%rbx),%r8
   140a7:	48 39 d0             	cmp    %rdx,%rax
   140aa:	48 8b 39             	mov    (%rcx),%rdi
   140ad:	48 0f 47 c2          	cmova  %rdx,%rax
   140b1:	4c 39 c1             	cmp    %r8,%rcx
   140b4:	74 1d                	je     140d3 <tcp_xmit_sack.part.0+0x7b>
   140b6:	48 8b 51 20          	mov    0x20(%rcx),%rdx
   140ba:	48 2b 51 18          	sub    0x18(%rcx),%rdx
   140be:	48 89 f9             	mov    %rdi,%rcx
   140c1:	48 39 c2             	cmp    %rax,%rdx
   140c4:	48 8b 3f             	mov    (%rdi),%rdi
   140c7:	48 0f 47 d0          	cmova  %rax,%rdx
   140cb:	49 01 d4             	add    %rdx,%r12
   140ce:	48 29 d0             	sub    %rdx,%rax
   140d1:	eb de                	jmp    140b1 <tcp_xmit_sack.part.0+0x59>
   140d3:	89 f0                	mov    %esi,%eax
   140d5:	0f b6 ec             	movzbl %ah,%ebp
   140d8:	f7 d5                	not    %ebp
   140da:	21 f5                	and    %esi,%ebp
   140dc:	40 0f b6 c5          	movzbl %bpl,%eax
   140e0:	89 44 24 04          	mov    %eax,0x4(%rsp)
   140e4:	89 e8                	mov    %ebp,%eax
   140e6:	83 e0 03             	and    $0x3,%eax
   140e9:	83 f8 01             	cmp    $0x1,%eax
   140ec:	44 89 e0             	mov    %r12d,%eax
   140ef:	83 d8 ff             	sbb    $0xffffffff,%eax
   140f2:	89 83 84 00 00 00    	mov    %eax,0x84(%rbx)
   140f8:	85 c0                	test   %eax,%eax
   140fa:	75 0b                	jne    14107 <tcp_xmit_sack.part.0+0xaf>
   140fc:	f6 43 20 04          	testb  $0x4,0x20(%rbx)
   14100:	75 11                	jne    14113 <tcp_xmit_sack.part.0+0xbb>
   14102:	e9 33 03 00 00       	jmp    1443a <tcp_xmit_sack.part.0+0x3e2>
   14107:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
   1410e:	e8 6b c2 ff ff       	call   1037e <start_timer>
   14113:	49 8d bc 24 90 00 00 	lea    0x90(%r12),%rdi
   1411a:	00 
   1411b:	e8 2c 5c ff ff       	call   9d4c <alloc_iob>
   14120:	49 89 c5             	mov    %rax,%r13
   14123:	48 85 c0             	test   %rax,%rax
   14126:	0f 84 0e 03 00 00    	je     1443a <tcp_xmit_sack.part.0+0x3e2>
   1412c:	48 81 40 18 90 00 00 	addq   $0x90,0x18(%rax)
   14133:	00 
   14134:	48 8d b3 b8 00 00 00 	lea    0xb8(%rbx),%rsi
   1413b:	4d 89 e7             	mov    %r12,%r15
   1413e:	48 81 40 20 90 00 00 	addq   $0x90,0x20(%rax)
   14145:	00 
   14146:	48 8b 83 b8 00 00 00 	mov    0xb8(%rbx),%rax
   1414d:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   14152:	4c 8b 00             	mov    (%rax),%r8
   14155:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
   1415a:	74 42                	je     1419e <tcp_xmit_sack.part.0+0x146>
   1415c:	48 8b 70 18          	mov    0x18(%rax),%rsi
   14160:	48 8b 50 20          	mov    0x20(%rax),%rdx
   14164:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   14169:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1416d:	48 29 f2             	sub    %rsi,%rdx
   14170:	4c 39 fa             	cmp    %r15,%rdx
   14173:	49 0f 47 d7          	cmova  %r15,%rdx
   14177:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   1417b:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   14180:	49 89 45 20          	mov    %rax,0x20(%r13)
   14184:	e8 60 32 00 00       	call   173e9 <__memcpy>
   14189:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   1418e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   14193:	4c 89 c0             	mov    %r8,%rax
   14196:	49 29 d7             	sub    %rdx,%r15
   14199:	4d 8b 00             	mov    (%r8),%r8
   1419c:	eb b7                	jmp    14155 <tcp_xmit_sack.part.0+0xfd>
   1419e:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   141a2:	e8 6d 33 00 00       	call   17514 <xfer_window>
   141a7:	0f b6 8b 9d 00 00 00 	movzbl 0x9d(%rbx),%ecx
   141ae:	ba ff ff 00 00       	mov    $0xffff,%edx
   141b3:	d3 e2                	shl    %cl,%edx
   141b5:	b9 00 00 04 00       	mov    $0x40000,%ecx
   141ba:	39 ca                	cmp    %ecx,%edx
   141bc:	0f 47 d1             	cmova  %ecx,%edx
   141bf:	39 c2                	cmp    %eax,%edx
   141c1:	0f 47 d0             	cmova  %eax,%edx
   141c4:	83 e2 fc             	and    $0xfffffffc,%edx
   141c7:	3b 93 90 00 00 00    	cmp    0x90(%rbx),%edx
   141cd:	76 06                	jbe    141d5 <tcp_xmit_sack.part.0+0x17d>
   141cf:	89 93 90 00 00 00    	mov    %edx,0x90(%rbx)
   141d5:	40 80 e5 02          	and    $0x2,%bpl
   141d9:	4d 8b 7d 18          	mov    0x18(%r13),%r15
   141dd:	0f 84 48 02 00 00    	je     1442b <tcp_xmit_sack.part.0+0x3d3>
   141e3:	49 8d 7f f4          	lea    -0xc(%r15),%rdi
   141e7:	41 c6 47 fc 02       	movb   $0x2,-0x4(%r15)
   141ec:	b9 02 00 00 00       	mov    $0x2,%ecx
   141f1:	41 c6 47 fd 04       	movb   $0x4,-0x3(%r15)
   141f6:	8b 43 70             	mov    0x70(%rbx),%eax
   141f9:	41 c6 47 f8 01       	movb   $0x1,-0x8(%r15)
   141fe:	86 c4                	xchg   %al,%ah
   14200:	41 c6 47 f9 03       	movb   $0x3,-0x7(%r15)
   14205:	66 41 89 47 fe       	mov    %ax,-0x2(%r15)
   1420a:	b8 01 00 00 00       	mov    $0x1,%eax
   1420f:	41 c6 47 fa 03       	movb   $0x3,-0x6(%r15)
   14214:	41 c6 47 fb 09       	movb   $0x9,-0x5(%r15)
   14219:	49 89 7d 18          	mov    %rdi,0x18(%r13)
   1421d:	f3 aa                	rep stos %al,%es:(%rdi)
   1421f:	41 c6 47 f6 04       	movb   $0x4,-0xa(%r15)
   14224:	41 c6 47 f7 02       	movb   $0x2,-0x9(%r15)
   14229:	49 8b 6d 18          	mov    0x18(%r13),%rbp
   1422d:	b9 02 00 00 00       	mov    $0x2,%ecx
   14232:	b8 01 00 00 00       	mov    $0x1,%eax
   14237:	48 8d 7d f4          	lea    -0xc(%rbp),%rdi
   1423b:	49 89 7d 18          	mov    %rdi,0x18(%r13)
   1423f:	f3 aa                	rep stos %al,%es:(%rdi)
   14241:	c6 45 f6 08          	movb   $0x8,-0xa(%rbp)
   14245:	c6 45 f7 0a          	movb   $0xa,-0x9(%rbp)
   14249:	e8 5f 1b 00 00       	call   15dad <currticks>
   1424e:	0f c8                	bswap  %eax
   14250:	89 45 f8             	mov    %eax,-0x8(%rbp)
   14253:	8b 83 98 00 00 00    	mov    0x98(%rbx),%eax
   14259:	0f c8                	bswap  %eax
   1425b:	89 45 fc             	mov    %eax,-0x4(%rbp)
   1425e:	f6 43 20 08          	testb  $0x8,0x20(%rbx)
   14262:	0f 84 1f 01 00 00    	je     14387 <tcp_xmit_sack.part.0+0x32f>
   14268:	48 8d 83 c8 00 00 00 	lea    0xc8(%rbx),%rax
   1426f:	48 39 83 c8 00 00 00 	cmp    %rax,0xc8(%rbx)
   14276:	0f 84 0b 01 00 00    	je     14387 <tcp_xmit_sack.part.0+0x32f>
   1427c:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   14281:	44 89 f6             	mov    %r14d,%esi
   14284:	48 89 df             	mov    %rbx,%rdi
   14287:	45 31 f6             	xor    %r14d,%r14d
   1428a:	48 89 ea             	mov    %rbp,%rdx
   1428d:	e8 d6 f9 ff ff       	call   13c68 <tcp_sack_block>
   14292:	85 c0                	test   %eax,%eax
   14294:	41 0f 95 c6          	setne  %r14b
   14298:	31 c9                	xor    %ecx,%ecx
   1429a:	8b b4 0b 9e 00 00 00 	mov    0x9e(%rbx,%rcx,1),%esi
   142a1:	3b b4 0b a2 00 00 00 	cmp    0xa2(%rbx,%rcx,1),%esi
   142a8:	74 43                	je     142ed <tcp_xmit_sack.part.0+0x295>
   142aa:	45 89 f0             	mov    %r14d,%r8d
   142ad:	48 89 df             	mov    %rbx,%rdi
   142b0:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   142b5:	4a 8d 54 c5 00       	lea    0x0(%rbp,%r8,8),%rdx
   142ba:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   142bf:	e8 a4 f9 ff ff       	call   13c68 <tcp_sack_block>
   142c4:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   142c9:	85 c0                	test   %eax,%eax
   142cb:	74 20                	je     142ed <tcp_xmit_sack.part.0+0x295>
   142cd:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   142d2:	31 c0                	xor    %eax,%eax
   142d4:	41 39 c6             	cmp    %eax,%r14d
   142d7:	76 11                	jbe    142ea <tcp_xmit_sack.part.0+0x292>
   142d9:	8b 54 c5 00          	mov    0x0(%rbp,%rax,8),%edx
   142dd:	48 ff c0             	inc    %rax
   142e0:	42 3b 54 c4 20       	cmp    0x20(%rsp,%r8,8),%edx
   142e5:	75 ed                	jne    142d4 <tcp_xmit_sack.part.0+0x27c>
   142e7:	41 ff ce             	dec    %r14d
   142ea:	41 ff c6             	inc    %r14d
   142ed:	48 83 f9 10          	cmp    $0x10,%rcx
   142f1:	74 0a                	je     142fd <tcp_xmit_sack.part.0+0x2a5>
   142f3:	48 83 c1 08          	add    $0x8,%rcx
   142f7:	41 83 fe 03          	cmp    $0x3,%r14d
   142fb:	75 9d                	jne    1429a <tcp_xmit_sack.part.0+0x242>
   142fd:	4c 8d 83 9e 00 00 00 	lea    0x9e(%rbx),%r8
   14304:	31 c0                	xor    %eax,%eax
   14306:	4c 89 c7             	mov    %r8,%rdi
   14309:	ab                   	stos   %eax,%es:(%rdi)
   1430a:	ab                   	stos   %eax,%es:(%rdi)
   1430b:	ab                   	stos   %eax,%es:(%rdi)
   1430c:	ab                   	stos   %eax,%es:(%rdi)
   1430d:	ab                   	stos   %eax,%es:(%rdi)
   1430e:	ab                   	stos   %eax,%es:(%rdi)
   1430f:	44 89 f0             	mov    %r14d,%eax
   14312:	48 89 ee             	mov    %rbp,%rsi
   14315:	4c 89 c7             	mov    %r8,%rdi
   14318:	4c 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%r9
   1431f:	00 
   14320:	4c 89 ca             	mov    %r9,%rdx
   14323:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   14328:	e8 bc 30 00 00       	call   173e9 <__memcpy>
   1432d:	45 85 f6             	test   %r14d,%r14d
   14330:	74 55                	je     14387 <tcp_xmit_sack.part.0+0x32f>
   14332:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   14337:	b9 02 00 00 00       	mov    $0x2,%ecx
   1433c:	b8 01 00 00 00       	mov    $0x1,%eax
   14341:	48 c7 c2 fc ff ff ff 	mov    $0xfffffffffffffffc,%rdx
   14348:	4c 29 ca             	sub    %r9,%rdx
   1434b:	49 03 55 18          	add    0x18(%r13),%rdx
   1434f:	49 89 55 18          	mov    %rdx,0x18(%r13)
   14353:	48 89 d7             	mov    %rdx,%rdi
   14356:	f3 aa                	rep stos %al,%es:(%rdi)
   14358:	c6 42 02 05          	movb   $0x5,0x2(%rdx)
   1435c:	41 8d 41 02          	lea    0x2(%r9),%eax
   14360:	88 42 03             	mov    %al,0x3(%rdx)
   14363:	31 c0                	xor    %eax,%eax
   14365:	8b 8c c3 9e 00 00 00 	mov    0x9e(%rbx,%rax,8),%ecx
   1436c:	0f c9                	bswap  %ecx
   1436e:	89 4c c2 04          	mov    %ecx,0x4(%rdx,%rax,8)
   14372:	8b 8c c3 a2 00 00 00 	mov    0xa2(%rbx,%rax,8),%ecx
   14379:	0f c9                	bswap  %ecx
   1437b:	89 4c c2 08          	mov    %ecx,0x8(%rdx,%rax,8)
   1437f:	48 ff c0             	inc    %rax
   14382:	41 39 c6             	cmp    %eax,%r14d
   14385:	77 de                	ja     14365 <tcp_xmit_sack.part.0+0x30d>
   14387:	4d 85 e4             	test   %r12,%r12
   1438a:	74 05                	je     14391 <tcp_xmit_sack.part.0+0x339>
   1438c:	83 4c 24 04 08       	orl    $0x8,0x4(%rsp)
   14391:	49 8b 6d 18          	mov    0x18(%r13),%rbp
   14395:	31 c0                	xor    %eax,%eax
   14397:	48 8d 7d ec          	lea    -0x14(%rbp),%rdi
   1439b:	49 89 7d 18          	mov    %rdi,0x18(%r13)
   1439f:	ab                   	stos   %eax,%es:(%rdi)
   143a0:	ab                   	stos   %eax,%es:(%rdi)
   143a1:	ab                   	stos   %eax,%es:(%rdi)
   143a2:	ab                   	stos   %eax,%es:(%rdi)
   143a3:	ab                   	stos   %eax,%es:(%rdi)
   143a4:	8b 43 68             	mov    0x68(%rbx),%eax
   143a7:	49 8b 7d 18          	mov    0x18(%r13),%rdi
   143ab:	86 c4                	xchg   %al,%ah
   143ad:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
   143b1:	8b 43 4c             	mov    0x4c(%rbx),%eax
   143b4:	49 29 ff             	sub    %rdi,%r15
   143b7:	41 c1 e7 02          	shl    $0x2,%r15d
   143bb:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
   143bf:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax
   143c5:	0f c8                	bswap  %eax
   143c7:	89 45 f0             	mov    %eax,-0x10(%rbp)
   143ca:	8b 83 8c 00 00 00    	mov    0x8c(%rbx),%eax
   143d0:	0f c8                	bswap  %eax
   143d2:	89 45 f4             	mov    %eax,-0xc(%rbp)
   143d5:	8a 44 24 04          	mov    0x4(%rsp),%al
   143d9:	44 88 7d f8          	mov    %r15b,-0x8(%rbp)
   143dd:	88 45 f9             	mov    %al,-0x7(%rbp)
   143e0:	0f b6 8b 9d 00 00 00 	movzbl 0x9d(%rbx),%ecx
   143e7:	8b 83 90 00 00 00    	mov    0x90(%rbx),%eax
   143ed:	49 8b 75 20          	mov    0x20(%r13),%rsi
   143f1:	d3 e8                	shr    %cl,%eax
   143f3:	48 29 fe             	sub    %rdi,%rsi
   143f6:	86 c4                	xchg   %al,%ah
   143f8:	66 89 45 fa          	mov    %ax,-0x6(%rbp)
   143fc:	e8 c4 0b 00 00       	call   14fc5 <tcpip_chksum>
   14401:	45 31 c0             	xor    %r8d,%r8d
   14404:	31 d2                	xor    %edx,%edx
   14406:	48 8d 4b 48          	lea    0x48(%rbx),%rcx
   1440a:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
   1440e:	4c 8d 4d fc          	lea    -0x4(%rbp),%r9
   14412:	48 8d 35 87 56 01 00 	lea    0x15687(%rip),%rsi        # 29aa0 <tcp_protocol>
   14419:	4c 89 ef             	mov    %r13,%rdi
   1441c:	e8 0c 0b 00 00       	call   14f2d <tcpip_tx>
   14421:	85 c0                	test   %eax,%eax
   14423:	75 15                	jne    1443a <tcp_xmit_sack.part.0+0x3e2>
   14425:	83 63 20 fb          	andl   $0xfffffffb,0x20(%rbx)
   14429:	eb 0f                	jmp    1443a <tcp_xmit_sack.part.0+0x3e2>
   1442b:	f6 43 20 02          	testb  $0x2,0x20(%rbx)
   1442f:	0f 85 f4 fd ff ff    	jne    14229 <tcp_xmit_sack.part.0+0x1d1>
   14435:	e9 24 fe ff ff       	jmp    1425e <tcp_xmit_sack.part.0+0x206>
   1443a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1443f:	48 2b 05 0a 5c 01 00 	sub    0x15c0a(%rip),%rax        # 2a050 <__stack_chk_guard>
   14446:	74 05                	je     1444d <tcp_xmit_sack.part.0+0x3f5>
   14448:	e8 13 e6 fe ff       	call   2a60 <__stack_chk_fail>
   1444d:	48 83 c4 48          	add    $0x48,%rsp
   14451:	5b                   	pop    %rbx
   14452:	5d                   	pop    %rbp
   14453:	41 5c                	pop    %r12
   14455:	41 5d                	pop    %r13
   14457:	41 5e                	pop    %r14
   14459:	41 5f                	pop    %r15
   1445b:	c3                   	ret    

000000000001445c <tcp_xmit>:
   1445c:	f3 0f 1e fa          	endbr64 
   14460:	83 bf 08 01 00 00 00 	cmpl   $0x0,0x108(%rdi)
   14467:	75 0b                	jne    14474 <tcp_xmit+0x18>
   14469:	8b b7 8c 00 00 00    	mov    0x8c(%rdi),%esi
   1446f:	e9 e4 fb ff ff       	jmp    14058 <tcp_xmit_sack.part.0>
   14474:	c3                   	ret    

0000000000014475 <tcp_keepalive_expired>:
   14475:	f3 0f 1e fa          	endbr64 
   14479:	55                   	push   %rbp
   1447a:	be 00 3c 00 00       	mov    $0x3c00,%esi
   1447f:	48 8d af b8 fe ff ff 	lea    -0x148(%rdi),%rbp
   14486:	53                   	push   %rbx
   14487:	48 89 fb             	mov    %rdi,%rbx
   1448a:	50                   	push   %rax
   1448b:	e8 ae be ff ff       	call   1033e <start_timer_fixed>
   14490:	83 8b d8 fe ff ff 04 	orl    $0x4,-0x128(%rbx)
   14497:	48 89 ef             	mov    %rbp,%rdi
   1449a:	5a                   	pop    %rdx
   1449b:	5b                   	pop    %rbx
   1449c:	5d                   	pop    %rbp
   1449d:	e9 ba ff ff ff       	jmp    1445c <tcp_xmit>

00000000000144a2 <tcp_xfer_deliver>:
   144a2:	f3 0f 1e fa          	endbr64 
   144a6:	55                   	push   %rbp
   144a7:	48 89 fd             	mov    %rdi,%rbp
   144aa:	48 89 f7             	mov    %rsi,%rdi
   144ad:	48 8d b5 b8 00 00 00 	lea    0xb8(%rbp),%rsi
   144b4:	e8 ee 7c ff ff       	call   c1a7 <extern_list_add_tail>
   144b9:	48 8d bd ec 01 00 00 	lea    0x1ec(%rbp),%rdi
   144c0:	e8 fa bf 00 00       	call   204bf <pending_get>
   144c5:	48 89 ef             	mov    %rbp,%rdi
   144c8:	e8 8f ff ff ff       	call   1445c <tcp_xmit>
   144cd:	31 c0                	xor    %eax,%eax
   144cf:	5d                   	pop    %rbp
   144d0:	c3                   	ret    

00000000000144d1 <tcp_rx_ack>:
   144d1:	41 57                	push   %r15
   144d3:	41 56                	push   %r14
   144d5:	41 55                	push   %r13
   144d7:	41 54                	push   %r12
   144d9:	41 89 f4             	mov    %esi,%r12d
   144dc:	55                   	push   %rbp
   144dd:	53                   	push   %rbx
   144de:	51                   	push   %rcx
   144df:	8b 47 78             	mov    0x78(%rdi),%eax
   144e2:	44 2b a7 80 00 00 00 	sub    0x80(%rdi),%r12d
   144e9:	44 39 a7 84 00 00 00 	cmp    %r12d,0x84(%rdi)
   144f0:	73 1a                	jae    1450c <tcp_rx_ack+0x3b>
   144f2:	25 00 02 02 00       	and    $0x20200,%eax
   144f7:	3d 00 02 02 00       	cmp    $0x20200,%eax
   144fc:	0f 84 02 01 00 00    	je     14604 <tcp_rx_ack+0x133>
   14502:	b8 7e 9f f5 e3       	mov    $0xe3f59f7e,%eax
   14507:	e9 fa 00 00 00       	jmp    14606 <tcp_rx_ack+0x135>
   1450c:	89 97 88 00 00 00    	mov    %edx,0x88(%rdi)
   14512:	48 89 fb             	mov    %rdi,%rbx
   14515:	41 89 f5             	mov    %esi,%r13d
   14518:	a8 01                	test   $0x1,%al
   1451a:	75 11                	jne    1452d <tcp_rx_ack+0x5c>
   1451c:	48 8d bf 48 01 00 00 	lea    0x148(%rdi),%rdi
   14523:	be 00 3c 00 00       	mov    $0x3c00,%esi
   14528:	e8 11 be ff ff       	call   1033e <start_timer_fixed>
   1452d:	45 85 e4             	test   %r12d,%r12d
   14530:	0f 84 ce 00 00 00    	je     14604 <tcp_rx_ack+0x133>
   14536:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
   1453d:	e8 6a be ff ff       	call   103ac <stop_timer>
   14542:	8b 43 78             	mov    0x78(%rbx),%eax
   14545:	0f b6 ec             	movzbl %ah,%ebp
   14548:	f7 d5                	not    %ebp
   1454a:	21 c5                	and    %eax,%ebp
   1454c:	83 e5 03             	and    $0x3,%ebp
   1454f:	74 0f                	je     14560 <tcp_rx_ack+0x8f>
   14551:	48 8d bb e8 01 00 00 	lea    0x1e8(%rbx),%rdi
   14558:	49 ff cc             	dec    %r12
   1455b:	e8 6c bf 00 00       	call   204cc <pending_put>
   14560:	48 8b bb b8 00 00 00 	mov    0xb8(%rbx),%rdi
   14567:	44 89 ab 80 00 00 00 	mov    %r13d,0x80(%rbx)
   1456e:	4c 8d bb b8 00 00 00 	lea    0xb8(%rbx),%r15
   14575:	c7 83 84 00 00 00 00 	movl   $0x0,0x84(%rbx)
   1457c:	00 00 00 
   1457f:	4c 8b 37             	mov    (%rdi),%r14
   14582:	4c 39 ff             	cmp    %r15,%rdi
   14585:	74 4b                	je     145d2 <tcp_rx_ack+0x101>
   14587:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   1458b:	48 8b 47 18          	mov    0x18(%rdi),%rax
   1458f:	49 89 d5             	mov    %rdx,%r13
   14592:	49 29 c5             	sub    %rax,%r13
   14595:	4d 39 e5             	cmp    %r12,%r13
   14598:	4d 0f 47 ec          	cmova  %r12,%r13
   1459c:	4c 01 e8             	add    %r13,%rax
   1459f:	48 89 47 18          	mov    %rax,0x18(%rdi)
   145a3:	48 39 c2             	cmp    %rax,%rdx
   145a6:	75 1f                	jne    145c7 <tcp_rx_ack+0xf6>
   145a8:	48 8b 17             	mov    (%rdi),%rdx
   145ab:	48 8b 47 08          	mov    0x8(%rdi),%rax
   145af:	48 89 42 08          	mov    %rax,0x8(%rdx)
   145b3:	48 89 10             	mov    %rdx,(%rax)
   145b6:	e8 ab 57 ff ff       	call   9d66 <free_iob>
   145bb:	48 8d bb ec 01 00 00 	lea    0x1ec(%rbx),%rdi
   145c2:	e8 05 bf 00 00       	call   204cc <pending_put>
   145c7:	4c 89 f7             	mov    %r14,%rdi
   145ca:	4d 29 ec             	sub    %r13,%r12
   145cd:	4d 8b 36             	mov    (%r14),%r14
   145d0:	eb b0                	jmp    14582 <tcp_rx_ack+0xb1>
   145d2:	85 ed                	test   %ebp,%ebp
   145d4:	74 06                	je     145dc <tcp_rx_ack+0x10b>
   145d6:	c1 e5 08             	shl    $0x8,%ebp
   145d9:	09 6b 78             	or     %ebp,0x78(%rbx)
   145dc:	4c 39 bb b8 00 00 00 	cmp    %r15,0xb8(%rbx)
   145e3:	75 1f                	jne    14604 <tcp_rx_ack+0x133>
   145e5:	f6 43 20 01          	testb  $0x1,0x20(%rbx)
   145e9:	74 19                	je     14604 <tcp_rx_ack+0x133>
   145eb:	8b 43 78             	mov    0x78(%rbx),%eax
   145ee:	a8 01                	test   $0x1,%al
   145f0:	75 12                	jne    14604 <tcp_rx_ack+0x133>
   145f2:	83 c8 01             	or     $0x1,%eax
   145f5:	48 8d bb e8 01 00 00 	lea    0x1e8(%rbx),%rdi
   145fc:	89 43 78             	mov    %eax,0x78(%rbx)
   145ff:	e8 bb be 00 00       	call   204bf <pending_get>
   14604:	31 c0                	xor    %eax,%eax
   14606:	5a                   	pop    %rdx
   14607:	5b                   	pop    %rbx
   14608:	5d                   	pop    %rbp
   14609:	41 5c                	pop    %r12
   1460b:	41 5d                	pop    %r13
   1460d:	41 5e                	pop    %r14
   1460f:	41 5f                	pop    %r15
   14611:	c3                   	ret    

0000000000014612 <tcp_close>:
   14612:	41 54                	push   %r12
   14614:	55                   	push   %rbp
   14615:	48 89 fd             	mov    %rdi,%rbp
   14618:	48 83 c7 28          	add    $0x28,%rdi
   1461c:	53                   	push   %rbx
   1461d:	e8 7d 53 ff ff       	call   999f <intf_shutdown>
   14622:	8b 45 78             	mov    0x78(%rbp),%eax
   14625:	83 4d 20 01          	orl    $0x1,0x20(%rbp)
   14629:	0f ba e0 11          	bt     $0x11,%eax
   1462d:	0f 82 de 00 00 00    	jb     14711 <tcp_close+0xff>
   14633:	48 8b bd c8 00 00 00 	mov    0xc8(%rbp),%rdi
   1463a:	4c 8d a5 c8 00 00 00 	lea    0xc8(%rbp),%r12
   14641:	48 b8 04 00 00 00 04 	movabs $0x400000004,%rax
   14648:	00 00 00 
   1464b:	48 89 45 78          	mov    %rax,0x78(%rbp)
   1464f:	48 8b 1f             	mov    (%rdi),%rbx
   14652:	4c 39 e7             	cmp    %r12,%rdi
   14655:	74 1b                	je     14672 <tcp_close+0x60>
   14657:	48 8b 17             	mov    (%rdi),%rdx
   1465a:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1465e:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14662:	48 89 10             	mov    %rdx,(%rax)
   14665:	e8 fc 56 ff ff       	call   9d66 <free_iob>
   1466a:	48 89 df             	mov    %rbx,%rdi
   1466d:	48 8b 1b             	mov    (%rbx),%rbx
   14670:	eb e0                	jmp    14652 <tcp_close+0x40>
   14672:	48 8b bd b8 00 00 00 	mov    0xb8(%rbp),%rdi
   14679:	4c 8d a5 b8 00 00 00 	lea    0xb8(%rbp),%r12
   14680:	48 8b 1f             	mov    (%rdi),%rbx
   14683:	4c 39 e7             	cmp    %r12,%rdi
   14686:	74 27                	je     146af <tcp_close+0x9d>
   14688:	48 8b 17             	mov    (%rdi),%rdx
   1468b:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1468f:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14693:	48 89 10             	mov    %rdx,(%rax)
   14696:	e8 cb 56 ff ff       	call   9d66 <free_iob>
   1469b:	48 8d bd ec 01 00 00 	lea    0x1ec(%rbp),%rdi
   146a2:	e8 25 be 00 00       	call   204cc <pending_put>
   146a7:	48 89 df             	mov    %rbx,%rdi
   146aa:	48 8b 1b             	mov    (%rbx),%rbx
   146ad:	eb d4                	jmp    14683 <tcp_close+0x71>
   146af:	4c 8d a5 e8 01 00 00 	lea    0x1e8(%rbp),%r12
   146b6:	4c 89 e7             	mov    %r12,%rdi
   146b9:	e8 0e be 00 00       	call   204cc <pending_put>
   146be:	4c 89 e7             	mov    %r12,%rdi
   146c1:	e8 06 be 00 00       	call   204cc <pending_put>
   146c6:	48 8d bd d8 00 00 00 	lea    0xd8(%rbp),%rdi
   146cd:	e8 8e b3 ff ff       	call   fa60 <process_del>
   146d2:	48 8d bd f8 00 00 00 	lea    0xf8(%rbp),%rdi
   146d9:	e8 ce bc ff ff       	call   103ac <stop_timer>
   146de:	48 8d bd 48 01 00 00 	lea    0x148(%rbp),%rdi
   146e5:	e8 c2 bc ff ff       	call   103ac <stop_timer>
   146ea:	48 8d bd 98 01 00 00 	lea    0x198(%rbp),%rdi
   146f1:	e8 b6 bc ff ff       	call   103ac <stop_timer>
   146f6:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   146fa:	48 8b 45 18          	mov    0x18(%rbp),%rax
   146fe:	48 89 ef             	mov    %rbp,%rdi
   14701:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14705:	48 89 10             	mov    %rdx,(%rax)
   14708:	5b                   	pop    %rbx
   14709:	5d                   	pop    %rbp
   1470a:	41 5c                	pop    %r12
   1470c:	e9 09 b8 ff ff       	jmp    ff1a <ref_decrement>
   14711:	0f ba e0 09          	bt     $0x9,%eax
   14715:	72 13                	jb     1472a <tcp_close+0x118>
   14717:	8b 85 80 00 00 00    	mov    0x80(%rbp),%eax
   1471d:	31 d2                	xor    %edx,%edx
   1471f:	48 89 ef             	mov    %rbp,%rdi
   14722:	8d 70 01             	lea    0x1(%rax),%esi
   14725:	e8 a7 fd ff ff       	call   144d1 <tcp_rx_ack>
   1472a:	48 8d bd 48 01 00 00 	lea    0x148(%rbp),%rdi
   14731:	e8 76 bc ff ff       	call   103ac <stop_timer>
   14736:	48 8d 85 b8 00 00 00 	lea    0xb8(%rbp),%rax
   1473d:	48 39 85 b8 00 00 00 	cmp    %rax,0xb8(%rbp)
   14744:	75 2c                	jne    14772 <tcp_close+0x160>
   14746:	8b 45 78             	mov    0x78(%rbp),%eax
   14749:	a8 01                	test   $0x1,%al
   1474b:	75 25                	jne    14772 <tcp_close+0x160>
   1474d:	83 c8 01             	or     $0x1,%eax
   14750:	48 8d bd d8 00 00 00 	lea    0xd8(%rbp),%rdi
   14757:	89 45 78             	mov    %eax,0x78(%rbp)
   1475a:	89 45 7c             	mov    %eax,0x7c(%rbp)
   1475d:	e8 ab b2 ff ff       	call   fa0d <process_add>
   14762:	5b                   	pop    %rbx
   14763:	48 8d bd e8 01 00 00 	lea    0x1e8(%rbp),%rdi
   1476a:	5d                   	pop    %rbp
   1476b:	41 5c                	pop    %r12
   1476d:	e9 4d bd 00 00       	jmp    204bf <pending_get>
   14772:	5b                   	pop    %rbx
   14773:	5d                   	pop    %rbp
   14774:	41 5c                	pop    %r12
   14776:	c3                   	ret    

0000000000014777 <tcp_wait_expired>:
   14777:	f3 0f 1e fa          	endbr64 
   1477b:	c7 87 e0 fe ff ff 04 	movl   $0x4,-0x120(%rdi)
   14782:	00 00 00 
   14785:	31 f6                	xor    %esi,%esi
   14787:	48 81 ef 98 01 00 00 	sub    $0x198,%rdi
   1478e:	c7 47 7c 04 00 00 00 	movl   $0x4,0x7c(%rdi)
   14795:	e9 78 fe ff ff       	jmp    14612 <tcp_close>

000000000001479a <tcp_expired>:
   1479a:	f3 0f 1e fa          	endbr64 
   1479e:	4c 8d 87 08 ff ff ff 	lea    -0xf8(%rdi),%r8
   147a5:	85 f6                	test   %esi,%esi
   147a7:	74 1b                	je     147c4 <tcp_expired+0x2a>
   147a9:	c7 47 80 04 00 00 00 	movl   $0x4,-0x80(%rdi)
   147b0:	c7 47 84 04 00 00 00 	movl   $0x4,-0x7c(%rdi)
   147b7:	be 6e 9f f5 b3       	mov    $0xb3f59f6e,%esi
   147bc:	4c 89 c7             	mov    %r8,%rdi
   147bf:	e9 4e fe ff ff       	jmp    14612 <tcp_close>
   147c4:	4c 89 c7             	mov    %r8,%rdi
   147c7:	e9 90 fc ff ff       	jmp    1445c <tcp_xmit>

00000000000147cc <tcp_xfer_close>:
   147cc:	f3 0f 1e fa          	endbr64 
   147d0:	48 83 ec 18          	sub    $0x18,%rsp
   147d4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   147d9:	e8 34 fe ff ff       	call   14612 <tcp_close>
   147de:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   147e3:	48 83 c4 18          	add    $0x18,%rsp
   147e7:	e9 70 fc ff ff       	jmp    1445c <tcp_xmit>

00000000000147ec <tcp_shutdown>:
   147ec:	f3 0f 1e fa          	endbr64 
   147f0:	55                   	push   %rbp
   147f1:	53                   	push   %rbx
   147f2:	48 8d 1d 67 2b 01 00 	lea    0x12b67(%rip),%rbx        # 27360 <tcp_conns>
   147f9:	52                   	push   %rdx
   147fa:	48 8b 03             	mov    (%rbx),%rax
   147fd:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
   14801:	48 8d 47 10          	lea    0x10(%rdi),%rax
   14805:	48 39 d8             	cmp    %rbx,%rax
   14808:	74 1c                	je     14826 <tcp_shutdown+0x3a>
   1480a:	f6 47 20 01          	testb  $0x1,0x20(%rdi)
   1480e:	75 0c                	jne    1481c <tcp_shutdown+0x30>
   14810:	be 6b 9f f5 f4       	mov    $0xf4f59f6b,%esi
   14815:	e8 f8 fd ff ff       	call   14612 <tcp_close>
   1481a:	eb de                	jmp    147fa <tcp_shutdown+0xe>
   1481c:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   14820:	48 83 ef 10          	sub    $0x10,%rdi
   14824:	eb db                	jmp    14801 <tcp_shutdown+0x15>
   14826:	e8 82 15 00 00       	call   15dad <currticks>
   1482b:	48 89 c5             	mov    %rax,%rbp
   1482e:	48 8b 03             	mov    (%rbx),%rax
   14831:	48 83 e8 10          	sub    $0x10,%rax
   14835:	48 8d 50 10          	lea    0x10(%rax),%rdx
   14839:	48 39 da             	cmp    %rbx,%rdx
   1483c:	74 38                	je     14876 <tcp_shutdown+0x8a>
   1483e:	8b 50 78             	mov    0x78(%rax),%edx
   14841:	81 e2 00 01 01 00    	and    $0x10100,%edx
   14847:	81 fa 00 01 01 00    	cmp    $0x10100,%edx
   1484d:	75 10                	jne    1485f <tcp_shutdown+0x73>
   1484f:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
   14856:	48 39 90 d8 00 00 00 	cmp    %rdx,0xd8(%rax)
   1485d:	74 23                	je     14882 <tcp_shutdown+0x96>
   1485f:	e8 49 15 00 00       	call   15dad <currticks>
   14864:	48 29 e8             	sub    %rbp,%rax
   14867:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
   1486d:	77 07                	ja     14876 <tcp_shutdown+0x8a>
   1486f:	e8 14 b2 ff ff       	call   fa88 <step>
   14874:	eb b8                	jmp    1482e <tcp_shutdown+0x42>
   14876:	48 bd 04 00 00 00 04 	movabs $0x400000004,%rbp
   1487d:	00 00 00 
   14880:	eb 06                	jmp    14888 <tcp_shutdown+0x9c>
   14882:	48 8b 40 10          	mov    0x10(%rax),%rax
   14886:	eb a9                	jmp    14831 <tcp_shutdown+0x45>
   14888:	48 8b 3b             	mov    (%rbx),%rdi
   1488b:	48 39 df             	cmp    %rbx,%rdi
   1488e:	74 14                	je     148a4 <tcp_shutdown+0xb8>
   14890:	48 89 6f 68          	mov    %rbp,0x68(%rdi)
   14894:	be 6b 9f f5 f4       	mov    $0xf4f59f6b,%esi
   14899:	48 83 ef 10          	sub    $0x10,%rdi
   1489d:	e8 70 fd ff ff       	call   14612 <tcp_close>
   148a2:	eb e4                	jmp    14888 <tcp_shutdown+0x9c>
   148a4:	58                   	pop    %rax
   148a5:	5b                   	pop    %rbx
   148a6:	5d                   	pop    %rbp
   148a7:	c3                   	ret    

00000000000148a8 <tcp_rx>:
   148a8:	f3 0f 1e fa          	endbr64 
   148ac:	41 57                	push   %r15
   148ae:	41 56                	push   %r14
   148b0:	41 55                	push   %r13
   148b2:	49 89 fd             	mov    %rdi,%r13
   148b5:	41 54                	push   %r12
   148b7:	55                   	push   %rbp
   148b8:	53                   	push   %rbx
   148b9:	48 83 ec 58          	sub    $0x58,%rsp
   148bd:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   148c1:	48 8b 05 88 57 01 00 	mov    0x15788(%rip),%rax        # 2a050 <__stack_chk_guard>
   148c8:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   148cd:	31 c0                	xor    %eax,%eax
   148cf:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   148d4:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   148d8:	48 29 da             	sub    %rbx,%rdx
   148db:	48 83 fa 13          	cmp    $0x13,%rdx
   148df:	77 02                	ja     148e3 <tcp_rx+0x3b>
   148e1:	eb 12                	jmp    148f5 <tcp_rx+0x4d>
   148e3:	8a 43 0c             	mov    0xc(%rbx),%al
   148e6:	25 f0 00 00 00       	and    $0xf0,%eax
   148eb:	89 c1                	mov    %eax,%ecx
   148ed:	c1 e9 02             	shr    $0x2,%ecx
   148f0:	83 f8 4c             	cmp    $0x4c,%eax
   148f3:	77 0b                	ja     14900 <tcp_rx+0x58>
   148f5:	41 be 7e 9f f5 e3    	mov    $0xe3f59f7e,%r14d
   148fb:	e9 e4 01 00 00       	jmp    14ae4 <tcp_rx+0x23c>
   14900:	48 63 c1             	movslq %ecx,%rax
   14903:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14908:	48 39 c2             	cmp    %rax,%rdx
   1490b:	73 02                	jae    1490f <tcp_rx+0x67>
   1490d:	eb e6                	jmp    148f5 <tcp_rx+0x4d>
   1490f:	41 0f b7 f8          	movzwl %r8w,%edi
   14913:	48 89 de             	mov    %rbx,%rsi
   14916:	4c 89 1c 24          	mov    %r11,(%rsp)
   1491a:	e8 ff 2a 00 00       	call   1741e <tcpip_continue_chksum>
   1491f:	4c 8b 1c 24          	mov    (%rsp),%r11
   14923:	66 85 c0             	test   %ax,%ax
   14926:	74 02                	je     1492a <tcp_rx+0x82>
   14928:	eb cb                	jmp    148f5 <tcp_rx+0x4d>
   1492a:	48 8b 0d 2f 2a 01 00 	mov    0x12a2f(%rip),%rcx        # 27360 <tcp_conns>
   14931:	66 8b 43 02          	mov    0x2(%rbx),%ax
   14935:	48 8d 15 24 2a 01 00 	lea    0x12a24(%rip),%rdx        # 27360 <tcp_conns>
   1493c:	86 c4                	xchg   %al,%ah
   1493e:	4c 8d 79 f0          	lea    -0x10(%rcx),%r15
   14942:	0f b7 c0             	movzwl %ax,%eax
   14945:	49 8d 4f 10          	lea    0x10(%r15),%rcx
   14949:	48 39 d1             	cmp    %rdx,%rcx
   1494c:	74 10                	je     1495e <tcp_rx+0xb6>
   1494e:	41 3b 47 68          	cmp    0x68(%r15),%eax
   14952:	74 0d                	je     14961 <tcp_rx+0xb9>
   14954:	4d 8b 47 10          	mov    0x10(%r15),%r8
   14958:	4d 8d 78 f0          	lea    -0x10(%r8),%r15
   1495c:	eb e7                	jmp    14945 <tcp_rx+0x9d>
   1495e:	45 31 ff             	xor    %r15d,%r15d
   14961:	66 8b 43 0e          	mov    0xe(%rbx),%ax
   14965:	8b 73 08             	mov    0x8(%rbx),%esi
   14968:	48 8d 53 14          	lea    0x14(%rbx),%rdx
   1496c:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   14971:	86 c4                	xchg   %al,%ah
   14973:	66 89 44 24 16       	mov    %ax,0x16(%rsp)
   14978:	8a 43 0d             	mov    0xd(%rbx),%al
   1497b:	44 8b 63 04          	mov    0x4(%rbx),%r12d
   1497f:	88 44 24 10          	mov    %al,0x10(%rsp)
   14983:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   14988:	41 0f cc             	bswap  %r12d
   1498b:	48 01 d8             	add    %rbx,%rax
   1498e:	44 89 24 24          	mov    %r12d,(%rsp)
   14992:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   14997:	31 c0                	xor    %eax,%eax
   14999:	0f ce                	bswap  %esi
   1499b:	ab                   	stos   %eax,%es:(%rdi)
   1499c:	ab                   	stos   %eax,%es:(%rdi)
   1499d:	ab                   	stos   %eax,%es:(%rdi)
   1499e:	ab                   	stos   %eax,%es:(%rdi)
   1499f:	ab                   	stos   %eax,%es:(%rdi)
   149a0:	ab                   	stos   %eax,%es:(%rdi)
   149a1:	31 ff                	xor    %edi,%edi
   149a3:	31 c9                	xor    %ecx,%ecx
   149a5:	31 c0                	xor    %eax,%eax
   149a7:	41 b0 01             	mov    $0x1,%r8b
   149aa:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   149af:	49 29 d2             	sub    %rdx,%r10
   149b2:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   149b7:	0f 84 dc 00 00 00    	je     14a99 <tcp_rx+0x1f1>
   149bd:	44 0f b6 12          	movzbl (%rdx),%r10d
   149c1:	45 89 d1             	mov    %r10d,%r9d
   149c4:	45 85 d2             	test   %r10d,%r10d
   149c7:	0f 84 cc 00 00 00    	je     14a99 <tcp_rx+0x1f1>
   149cd:	41 ff ca             	dec    %r10d
   149d0:	75 05                	jne    149d7 <tcp_rx+0x12f>
   149d2:	48 ff c2             	inc    %rdx
   149d5:	eb d3                	jmp    149aa <tcp_rx+0x102>
   149d7:	41 80 f9 04          	cmp    $0x4,%r9b
   149db:	74 20                	je     149fd <tcp_rx+0x155>
   149dd:	41 80 f9 08          	cmp    $0x8,%r9b
   149e1:	74 27                	je     14a0a <tcp_rx+0x162>
   149e3:	41 80 f9 03          	cmp    $0x3,%r9b
   149e7:	41 0f 94 c1          	sete   %r9b
   149eb:	48 0f 44 ea          	cmove  %rdx,%rbp
   149ef:	41 0f 44 c0          	cmove  %r8d,%eax
   149f3:	45 0f b6 c9          	movzbl %r9b,%r9d
   149f7:	49 83 c1 02          	add    $0x2,%r9
   149fb:	eb 19                	jmp    14a16 <tcp_rx+0x16e>
   149fd:	49 89 d6             	mov    %rdx,%r14
   14a00:	b1 01                	mov    $0x1,%cl
   14a02:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   14a08:	eb 0c                	jmp    14a16 <tcp_rx+0x16e>
   14a0a:	49 89 d3             	mov    %rdx,%r11
   14a0d:	40 b7 01             	mov    $0x1,%dil
   14a10:	41 b9 0a 00 00 00    	mov    $0xa,%r9d
   14a16:	4c 3b 4c 24 18       	cmp    0x18(%rsp),%r9
   14a1b:	76 21                	jbe    14a3e <tcp_rx+0x196>
   14a1d:	40 84 ff             	test   %dil,%dil
   14a20:	74 05                	je     14a27 <tcp_rx+0x17f>
   14a22:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   14a27:	84 c9                	test   %cl,%cl
   14a29:	74 05                	je     14a30 <tcp_rx+0x188>
   14a2b:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   14a30:	84 c0                	test   %al,%al
   14a32:	74 05                	je     14a39 <tcp_rx+0x191>
   14a34:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   14a39:	e9 b7 fe ff ff       	jmp    148f5 <tcp_rx+0x4d>
   14a3e:	44 0f b6 52 01       	movzbl 0x1(%rdx),%r10d
   14a43:	4d 39 d1             	cmp    %r10,%r9
   14a46:	76 21                	jbe    14a69 <tcp_rx+0x1c1>
   14a48:	40 84 ff             	test   %dil,%dil
   14a4b:	74 05                	je     14a52 <tcp_rx+0x1aa>
   14a4d:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   14a52:	84 c9                	test   %cl,%cl
   14a54:	74 05                	je     14a5b <tcp_rx+0x1b3>
   14a56:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   14a5b:	84 c0                	test   %al,%al
   14a5d:	74 05                	je     14a64 <tcp_rx+0x1bc>
   14a5f:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   14a64:	e9 8c fe ff ff       	jmp    148f5 <tcp_rx+0x4d>
   14a69:	4c 39 54 24 18       	cmp    %r10,0x18(%rsp)
   14a6e:	73 21                	jae    14a91 <tcp_rx+0x1e9>
   14a70:	40 84 ff             	test   %dil,%dil
   14a73:	74 05                	je     14a7a <tcp_rx+0x1d2>
   14a75:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   14a7a:	84 c9                	test   %cl,%cl
   14a7c:	74 05                	je     14a83 <tcp_rx+0x1db>
   14a7e:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   14a83:	84 c0                	test   %al,%al
   14a85:	74 05                	je     14a8c <tcp_rx+0x1e4>
   14a87:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   14a8c:	e9 64 fe ff ff       	jmp    148f5 <tcp_rx+0x4d>
   14a91:	4c 01 d2             	add    %r10,%rdx
   14a94:	e9 11 ff ff ff       	jmp    149aa <tcp_rx+0x102>
   14a99:	40 84 ff             	test   %dil,%dil
   14a9c:	74 05                	je     14aa3 <tcp_rx+0x1fb>
   14a9e:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   14aa3:	84 c9                	test   %cl,%cl
   14aa5:	74 05                	je     14aac <tcp_rx+0x204>
   14aa7:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   14aac:	84 c0                	test   %al,%al
   14aae:	74 05                	je     14ab5 <tcp_rx+0x20d>
   14ab0:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   14ab5:	4d 85 ff             	test   %r15,%r15
   14ab8:	74 16                	je     14ad0 <tcp_rx+0x228>
   14aba:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14abf:	48 85 c0             	test   %rax,%rax
   14ac2:	74 0c                	je     14ad0 <tcp_rx+0x228>
   14ac4:	8b 40 02             	mov    0x2(%rax),%eax
   14ac7:	0f c8                	bswap  %eax
   14ac9:	41 89 87 94 00 00 00 	mov    %eax,0x94(%r15)
   14ad0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   14ad5:	49 01 45 18          	add    %rax,0x18(%r13)
   14ad9:	4d 85 ff             	test   %r15,%r15
   14adc:	75 13                	jne    14af1 <tcp_rx+0x249>
   14ade:	41 be 6d 9f f5 c7    	mov    $0xc7f59f6d,%r14d
   14ae4:	4c 89 ef             	mov    %r13,%rdi
   14ae7:	e8 7a 52 ff ff       	call   9d66 <free_iob>
   14aec:	e9 99 03 00 00       	jmp    14e8a <tcp_rx+0x5e2>
   14af1:	4c 89 ff             	mov    %r15,%rdi
   14af4:	e8 25 f5 ff ff       	call   1401e <tcp_xfer_window>
   14af9:	48 89 c5             	mov    %rax,%rbp
   14afc:	f6 44 24 10 10       	testb  $0x10,0x10(%rsp)
   14b01:	0f 84 c3 00 00 00    	je     14bca <tcp_rx+0x322>
   14b07:	0f b7 54 24 16       	movzwl 0x16(%rsp),%edx
   14b0c:	41 0f b6 8f 9c 00 00 	movzbl 0x9c(%r15),%ecx
   14b13:	00 
   14b14:	d3 e2                	shl    %cl,%edx
   14b16:	e8 b6 f9 ff ff       	call   144d1 <tcp_rx_ack>
   14b1b:	41 89 c6             	mov    %eax,%r14d
   14b1e:	85 c0                	test   %eax,%eax
   14b20:	0f 84 a4 00 00 00    	je     14bca <tcp_rx+0x322>
   14b26:	bf 90 00 00 00       	mov    $0x90,%edi
   14b2b:	e8 1c 52 ff ff       	call   9d4c <alloc_iob>
   14b30:	48 89 c5             	mov    %rax,%rbp
   14b33:	48 85 c0             	test   %rax,%rax
   14b36:	75 02                	jne    14b3a <tcp_rx+0x292>
   14b38:	eb aa                	jmp    14ae4 <tcp_rx+0x23c>
   14b3a:	4c 8b 60 18          	mov    0x18(%rax),%r12
   14b3e:	48 81 40 20 90 00 00 	addq   $0x90,0x20(%rax)
   14b45:	00 
   14b46:	49 8d 7c 24 7c       	lea    0x7c(%r12),%rdi
   14b4b:	48 89 78 18          	mov    %rdi,0x18(%rax)
   14b4f:	31 c0                	xor    %eax,%eax
   14b51:	ab                   	stos   %eax,%es:(%rdi)
   14b52:	ab                   	stos   %eax,%es:(%rdi)
   14b53:	ab                   	stos   %eax,%es:(%rdi)
   14b54:	ab                   	stos   %eax,%es:(%rdi)
   14b55:	ab                   	stos   %eax,%es:(%rdi)
   14b56:	66 8b 43 02          	mov    0x2(%rbx),%ax
   14b5a:	66 41 89 44 24 7c    	mov    %ax,0x7c(%r12)
   14b60:	66 8b 03             	mov    (%rbx),%ax
   14b63:	66 41 89 44 24 7e    	mov    %ax,0x7e(%r12)
   14b69:	8b 43 08             	mov    0x8(%rbx),%eax
   14b6c:	41 89 84 24 80 00 00 	mov    %eax,0x80(%r12)
   14b73:	00 
   14b74:	8b 43 04             	mov    0x4(%rbx),%eax
   14b77:	41 c7 84 24 88 00 00 	movl   $0x1450,0x88(%r12)
   14b7e:	00 50 14 00 00 
   14b83:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   14b87:	48 8b 75 20          	mov    0x20(%rbp),%rsi
   14b8b:	41 89 84 24 84 00 00 	mov    %eax,0x84(%r12)
   14b92:	00 
   14b93:	48 29 fe             	sub    %rdi,%rsi
   14b96:	e8 2a 04 00 00       	call   14fc5 <tcpip_chksum>
   14b9b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   14ba0:	45 31 c0             	xor    %r8d,%r8d
   14ba3:	31 d2                	xor    %edx,%edx
   14ba5:	66 41 89 84 24 8c 00 	mov    %ax,0x8c(%r12)
   14bac:	00 00 
   14bae:	4d 8d 8c 24 8c 00 00 	lea    0x8c(%r12),%r9
   14bb5:	00 
   14bb6:	48 8d 35 e3 4e 01 00 	lea    0x14ee3(%rip),%rsi        # 29aa0 <tcp_protocol>
   14bbd:	48 89 ef             	mov    %rbp,%rdi
   14bc0:	e8 68 03 00 00       	call   14f2d <tcpip_tx>
   14bc5:	e9 1a ff ff ff       	jmp    14ae4 <tcp_rx+0x23c>
   14bca:	45 8b 4f 78          	mov    0x78(%r15),%r9d
   14bce:	44 89 c8             	mov    %r9d,%eax
   14bd1:	25 00 00 02 00       	and    $0x20000,%eax
   14bd6:	74 0e                	je     14be6 <tcp_rx+0x33e>
   14bd8:	45 3b a7 8c 00 00 00 	cmp    0x8c(%r15),%r12d
   14bdf:	74 05                	je     14be6 <tcp_rx+0x33e>
   14be1:	41 83 4f 20 04       	orl    $0x4,0x20(%r15)
   14be6:	f6 44 24 10 02       	testb  $0x2,0x10(%rsp)
   14beb:	74 5f                	je     14c4c <tcp_rx+0x3a4>
   14bed:	85 c0                	test   %eax,%eax
   14bef:	75 46                	jne    14c37 <tcp_rx+0x38f>
   14bf1:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   14bf7:	45 89 a7 8c 00 00 00 	mov    %r12d,0x8c(%r15)
   14bfe:	74 05                	je     14c05 <tcp_rx+0x35d>
   14c00:	41 83 4f 20 02       	orl    $0x2,0x20(%r15)
   14c05:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   14c0b:	74 05                	je     14c12 <tcp_rx+0x36a>
   14c0d:	41 83 4f 20 08       	orl    $0x8,0x20(%r15)
   14c12:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   14c17:	48 85 c0             	test   %rax,%rax
   14c1a:	0f 84 4d 02 00 00    	je     14e6d <tcp_rx+0x5c5>
   14c20:	8a 40 02             	mov    0x2(%rax),%al
   14c23:	41 c6 87 9d 00 00 00 	movb   $0x9,0x9d(%r15)
   14c2a:	09 
   14c2b:	41 88 87 9c 00 00 00 	mov    %al,0x9c(%r15)
   14c32:	e9 36 02 00 00       	jmp    14e6d <tcp_rx+0x5c5>
   14c37:	45 3b a7 8c 00 00 00 	cmp    0x8c(%r15),%r12d
   14c3e:	0f 84 29 02 00 00    	je     14e6d <tcp_rx+0x5c5>
   14c44:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   14c49:	89 04 24             	mov    %eax,(%rsp)
   14c4c:	41 8b 47 78          	mov    0x78(%r15),%eax
   14c50:	89 c2                	mov    %eax,%edx
   14c52:	81 e2 00 00 02 00    	and    $0x20000,%edx
   14c58:	f6 44 24 10 04       	testb  $0x4,0x10(%rsp)
   14c5d:	74 45                	je     14ca4 <tcp_rx+0x3fc>
   14c5f:	85 d2                	test   %edx,%edx
   14c61:	74 15                	je     14c78 <tcp_rx+0x3d0>
   14c63:	8b 04 24             	mov    (%rsp),%eax
   14c66:	41 2b 87 8c 00 00 00 	sub    0x8c(%r15),%eax
   14c6d:	41 39 87 90 00 00 00 	cmp    %eax,0x90(%r15)
   14c74:	76 2e                	jbe    14ca4 <tcp_rx+0x3fc>
   14c76:	eb 06                	jmp    14c7e <tcp_rx+0x3d6>
   14c78:	0f ba e0 09          	bt     $0x9,%eax
   14c7c:	73 26                	jae    14ca4 <tcp_rx+0x3fc>
   14c7e:	48 b8 04 00 00 00 04 	movabs $0x400000004,%rax
   14c85:	00 00 00 
   14c88:	49 89 47 78          	mov    %rax,0x78(%r15)
   14c8c:	be 6b 9f f5 f0       	mov    $0xf0f59f6b,%esi
   14c91:	4c 89 ff             	mov    %r15,%rdi
   14c94:	e8 79 f9 ff ff       	call   14612 <tcp_close>
   14c99:	41 be 6b 9f f5 f0    	mov    $0xf0f59f6b,%r14d
   14c9f:	e9 40 fe ff ff       	jmp    14ae4 <tcp_rx+0x23c>
   14ca4:	85 d2                	test   %edx,%edx
   14ca6:	49 8b 4d 20          	mov    0x20(%r13),%rcx
   14caa:	49 8b 45 18          	mov    0x18(%r13),%rax
   14cae:	4d 8d a7 c8 00 00 00 	lea    0xc8(%r15),%r12
   14cb5:	74 37                	je     14cee <tcp_rx+0x446>
   14cb7:	41 8b b7 8c 00 00 00 	mov    0x8c(%r15),%esi
   14cbe:	41 8b 97 90 00 00 00 	mov    0x90(%r15),%edx
   14cc5:	01 f2                	add    %esi,%edx
   14cc7:	39 14 24             	cmp    %edx,(%rsp)
   14cca:	79 22                	jns    14cee <tcp_rx+0x446>
   14ccc:	8b 54 24 10          	mov    0x10(%rsp),%edx
   14cd0:	48 29 c1             	sub    %rax,%rcx
   14cd3:	8b 1c 24             	mov    (%rsp),%ebx
   14cd6:	40 8a 7c 24 10       	mov    0x10(%rsp),%dil
   14cdb:	83 e2 01             	and    $0x1,%edx
   14cde:	01 ca                	add    %ecx,%edx
   14ce0:	83 e7 01             	and    $0x1,%edi
   14ce3:	8d 0c 13             	lea    (%rbx,%rdx,1),%ecx
   14ce6:	39 f1                	cmp    %esi,%ecx
   14ce8:	78 04                	js     14cee <tcp_rx+0x446>
   14cea:	85 d2                	test   %edx,%edx
   14cec:	75 0a                	jne    14cf8 <tcp_rx+0x450>
   14cee:	4c 89 ef             	mov    %r13,%rdi
   14cf1:	e8 70 50 ff ff       	call   9d66 <free_iob>
   14cf6:	eb 39                	jmp    14d31 <tcp_rx+0x489>
   14cf8:	8b 1c 24             	mov    (%rsp),%ebx
   14cfb:	48 8d 50 f4          	lea    -0xc(%rax),%rdx
   14cff:	49 89 55 18          	mov    %rdx,0x18(%r13)
   14d03:	89 58 f4             	mov    %ebx,-0xc(%rax)
   14d06:	89 48 f8             	mov    %ecx,-0x8(%rax)
   14d09:	40 88 78 fc          	mov    %dil,-0x4(%rax)
   14d0d:	49 8b b7 c8 00 00 00 	mov    0xc8(%r15),%rsi
   14d14:	4c 39 e6             	cmp    %r12,%rsi
   14d17:	74 10                	je     14d29 <tcp_rx+0x481>
   14d19:	48 8b 46 18          	mov    0x18(%rsi),%rax
   14d1d:	8b 1c 24             	mov    (%rsp),%ebx
   14d20:	3b 18                	cmp    (%rax),%ebx
   14d22:	78 05                	js     14d29 <tcp_rx+0x481>
   14d24:	48 8b 36             	mov    (%rsi),%rsi
   14d27:	eb eb                	jmp    14d14 <tcp_rx+0x46c>
   14d29:	4c 89 ef             	mov    %r13,%rdi
   14d2c:	e8 76 74 ff ff       	call   c1a7 <extern_list_add_tail>
   14d31:	4d 8d 6f 28          	lea    0x28(%r15),%r13
   14d35:	4d 8b 8f c8 00 00 00 	mov    0xc8(%r15),%r9
   14d3c:	4d 39 e1             	cmp    %r12,%r9
   14d3f:	0f 84 b1 00 00 00    	je     14df6 <tcp_rx+0x54e>
   14d45:	4d 85 c9             	test   %r9,%r9
   14d48:	0f 84 a8 00 00 00    	je     14df6 <tcp_rx+0x54e>
   14d4e:	49 8b 41 18          	mov    0x18(%r9),%rax
   14d52:	41 8b 97 8c 00 00 00 	mov    0x8c(%r15),%edx
   14d59:	8b 18                	mov    (%rax),%ebx
   14d5b:	89 de                	mov    %ebx,%esi
   14d5d:	29 d6                	sub    %edx,%esi
   14d5f:	85 f6                	test   %esi,%esi
   14d61:	0f 8f 8f 00 00 00    	jg     14df6 <tcp_rx+0x54e>
   14d67:	49 8b 49 08          	mov    0x8(%r9),%rcx
   14d6b:	49 8b 39             	mov    (%r9),%rdi
   14d6e:	48 83 c0 0c          	add    $0xc,%rax
   14d72:	29 da                	sub    %ebx,%edx
   14d74:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   14d78:	48 89 39             	mov    %rdi,(%rcx)
   14d7b:	8a 48 fc             	mov    -0x4(%rax),%cl
   14d7e:	49 89 41 18          	mov    %rax,0x18(%r9)
   14d82:	88 4c 24 10          	mov    %cl,0x10(%rsp)
   14d86:	49 8b 49 20          	mov    0x20(%r9),%rcx
   14d8a:	48 29 c1             	sub    %rax,%rcx
   14d8d:	41 89 ce             	mov    %ecx,%r14d
   14d90:	39 ca                	cmp    %ecx,%edx
   14d92:	72 0a                	jb     14d9e <tcp_rx+0x4f6>
   14d94:	4c 89 cf             	mov    %r9,%rdi
   14d97:	e8 ca 4f ff ff       	call   9d66 <free_iob>
   14d9c:	eb 1c                	jmp    14dba <tcp_rx+0x512>
   14d9e:	48 01 d0             	add    %rdx,%rax
   14da1:	01 ce                	add    %ecx,%esi
   14da3:	4c 89 ff             	mov    %r15,%rdi
   14da6:	49 89 41 18          	mov    %rax,0x18(%r9)
   14daa:	e8 21 ef ff ff       	call   13cd0 <tcp_rx_seq>
   14daf:	4c 89 ce             	mov    %r9,%rsi
   14db2:	4c 89 ef             	mov    %r13,%rdi
   14db5:	e8 28 2a 00 00       	call   177e2 <xfer_deliver_iob>
   14dba:	f6 44 24 10 01       	testb  $0x1,0x10(%rsp)
   14dbf:	0f 84 70 ff ff ff    	je     14d35 <tcp_rx+0x48d>
   14dc5:	44 01 f3             	add    %r14d,%ebx
   14dc8:	41 3b 9f 8c 00 00 00 	cmp    0x8c(%r15),%ebx
   14dcf:	0f 85 60 ff ff ff    	jne    14d35 <tcp_rx+0x48d>
   14dd5:	be 01 00 00 00       	mov    $0x1,%esi
   14dda:	4c 89 ff             	mov    %r15,%rdi
   14ddd:	e8 ee ee ff ff       	call   13cd0 <tcp_rx_seq>
   14de2:	41 81 4f 78 00 00 01 	orl    $0x10000,0x78(%r15)
   14de9:	00 
   14dea:	31 f6                	xor    %esi,%esi
   14dec:	e8 21 f8 ff ff       	call   14612 <tcp_close>
   14df1:	e9 3f ff ff ff       	jmp    14d35 <tcp_rx+0x48d>
   14df6:	41 8b 47 78          	mov    0x78(%r15),%eax
   14dfa:	41 89 47 7c          	mov    %eax,0x7c(%r15)
   14dfe:	4d 39 e1             	cmp    %r12,%r9
   14e01:	75 0e                	jne    14e11 <tcp_rx+0x569>
   14e03:	49 8d bf d8 00 00 00 	lea    0xd8(%r15),%rdi
   14e0a:	e8 fe ab ff ff       	call   fa0d <process_add>
   14e0f:	eb 15                	jmp    14e26 <tcp_rx+0x57e>
   14e11:	41 83 bf 08 01 00 00 	cmpl   $0x0,0x108(%r15)
   14e18:	00 
   14e19:	75 0b                	jne    14e26 <tcp_rx+0x57e>
   14e1b:	8b 34 24             	mov    (%rsp),%esi
   14e1e:	4c 89 ff             	mov    %r15,%rdi
   14e21:	e8 32 f2 ff ff       	call   14058 <tcp_xmit_sack.part.0>
   14e26:	41 8b 47 78          	mov    0x78(%r15),%eax
   14e2a:	25 00 01 01 00       	and    $0x10100,%eax
   14e2f:	3d 00 01 01 00       	cmp    $0x10100,%eax
   14e34:	75 1c                	jne    14e52 <tcp_rx+0x5aa>
   14e36:	4d 8d a7 98 01 00 00 	lea    0x198(%r15),%r12
   14e3d:	4c 89 e7             	mov    %r12,%rdi
   14e40:	e8 67 b5 ff ff       	call   103ac <stop_timer>
   14e45:	be 00 c0 03 00       	mov    $0x3c000,%esi
   14e4a:	4c 89 e7             	mov    %r12,%rdi
   14e4d:	e8 ec b4 ff ff       	call   1033e <start_timer_fixed>
   14e52:	4c 89 ff             	mov    %r15,%rdi
   14e55:	45 31 f6             	xor    %r14d,%r14d
   14e58:	e8 c1 f1 ff ff       	call   1401e <tcp_xfer_window>
   14e5d:	48 39 c5             	cmp    %rax,%rbp
   14e60:	74 28                	je     14e8a <tcp_rx+0x5e2>
   14e62:	49 8d 7f 28          	lea    0x28(%r15),%rdi
   14e66:	e8 15 27 00 00       	call   17580 <xfer_window_changed>
   14e6b:	eb 1d                	jmp    14e8a <tcp_rx+0x5e2>
   14e6d:	be 01 00 00 00       	mov    $0x1,%esi
   14e72:	4c 89 ff             	mov    %r15,%rdi
   14e75:	41 81 c9 10 00 02 00 	or     $0x20010,%r9d
   14e7c:	e8 4f ee ff ff       	call   13cd0 <tcp_rx_seq>
   14e81:	45 89 4f 78          	mov    %r9d,0x78(%r15)
   14e85:	e9 ba fd ff ff       	jmp    14c44 <tcp_rx+0x39c>
   14e8a:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   14e8f:	48 2b 05 ba 51 01 00 	sub    0x151ba(%rip),%rax        # 2a050 <__stack_chk_guard>
   14e96:	74 05                	je     14e9d <tcp_rx+0x5f5>
   14e98:	e8 c3 db fe ff       	call   2a60 <__stack_chk_fail>
   14e9d:	48 83 c4 58          	add    $0x58,%rsp
   14ea1:	44 89 f0             	mov    %r14d,%eax
   14ea4:	5b                   	pop    %rbx
   14ea5:	5d                   	pop    %rbp
   14ea6:	41 5c                	pop    %r12
   14ea8:	41 5d                	pop    %r13
   14eaa:	41 5e                	pop    %r14
   14eac:	41 5f                	pop    %r15
   14eae:	c3                   	ret    

0000000000014eaf <tcpip_rx>:
   14eaf:	f3 0f 1e fa          	endbr64 
   14eb3:	41 52                	push   %r10
   14eb5:	49 89 f2             	mov    %rsi,%r10
   14eb8:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   14ebd:	49 89 cb             	mov    %rcx,%r11
   14ec0:	48 8d 05 d9 4b 01 00 	lea    0x14bd9(%rip),%rax        # 29aa0 <tcp_protocol>
   14ec7:	4c 89 c1             	mov    %r8,%rcx
   14eca:	4c 8d 05 17 4c 01 00 	lea    0x14c17(%rip),%r8        # 29ae8 <efi_timer>
   14ed1:	4c 39 c0             	cmp    %r8,%rax
   14ed4:	73 21                	jae    14ef7 <tcpip_rx+0x48>
   14ed6:	38 50 12             	cmp    %dl,0x12(%rax)
   14ed9:	75 16                	jne    14ef1 <tcpip_rx+0x42>
   14edb:	48 ff 46 48          	incq   0x48(%rsi)
   14edf:	48 8b 40 08          	mov    0x8(%rax),%rax
   14ee3:	45 0f b7 c1          	movzwl %r9w,%r8d
   14ee7:	4c 89 da             	mov    %r11,%rdx
   14eea:	4c 89 d6             	mov    %r10,%rsi
   14eed:	41 59                	pop    %r9
   14eef:	ff e0                	jmp    *%rax
   14ef1:	48 83 c0 18          	add    $0x18,%rax
   14ef5:	eb da                	jmp    14ed1 <tcpip_rx+0x22>
   14ef7:	48 ff 46 20          	incq   0x20(%rsi)
   14efb:	e8 66 4e ff ff       	call   9d66 <free_iob>
   14f00:	b8 7d 9f f1 bb       	mov    $0xbbf19f7d,%eax
   14f05:	5a                   	pop    %rdx
   14f06:	c3                   	ret    

0000000000014f07 <tcpip_net_protocol>:
   14f07:	f3 0f 1e fa          	endbr64 
   14f0b:	48 8d 05 5e 4b 01 00 	lea    0x14b5e(%rip),%rax        # 29a70 <ipv4_tcpip_protocol>
   14f12:	48 8d 15 87 4b 01 00 	lea    0x14b87(%rip),%rdx        # 29aa0 <tcp_protocol>
   14f19:	48 39 d0             	cmp    %rdx,%rax
   14f1c:	73 0c                	jae    14f2a <tcpip_net_protocol+0x23>
   14f1e:	66 39 78 08          	cmp    %di,0x8(%rax)
   14f22:	74 08                	je     14f2c <tcpip_net_protocol+0x25>
   14f24:	48 83 c0 30          	add    $0x30,%rax
   14f28:	eb ef                	jmp    14f19 <tcpip_net_protocol+0x12>
   14f2a:	31 c0                	xor    %eax,%eax
   14f2c:	c3                   	ret    

0000000000014f2d <tcpip_tx>:
   14f2d:	f3 0f 1e fa          	endbr64 
   14f31:	48 83 ec 18          	sub    $0x18,%rsp
   14f35:	49 89 fa             	mov    %rdi,%r10
   14f38:	0f b7 39             	movzwl (%rcx),%edi
   14f3b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14f40:	e8 c2 ff ff ff       	call   14f07 <tcpip_net_protocol>
   14f45:	48 85 c0             	test   %rax,%rax
   14f48:	74 12                	je     14f5c <tcpip_tx+0x2f>
   14f4a:	48 8b 40 20          	mov    0x20(%rax),%rax
   14f4e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14f53:	4c 89 d7             	mov    %r10,%rdi
   14f56:	48 83 c4 18          	add    $0x18,%rsp
   14f5a:	ff e0                	jmp    *%rax
   14f5c:	4c 89 d7             	mov    %r10,%rdi
   14f5f:	e8 02 4e ff ff       	call   9d66 <free_iob>
   14f64:	b8 7d 9f f1 fa       	mov    $0xfaf19f7d,%eax
   14f69:	48 83 c4 18          	add    $0x18,%rsp
   14f6d:	c3                   	ret    

0000000000014f6e <tcpip_netdev>:
   14f6e:	f3 0f 1e fa          	endbr64 
   14f72:	56                   	push   %rsi
   14f73:	49 89 f8             	mov    %rdi,%r8
   14f76:	0f b7 3f             	movzwl (%rdi),%edi
   14f79:	e8 89 ff ff ff       	call   14f07 <tcpip_net_protocol>
   14f7e:	48 85 c0             	test   %rax,%rax
   14f81:	74 0a                	je     14f8d <tcpip_netdev+0x1f>
   14f83:	48 8b 40 28          	mov    0x28(%rax),%rax
   14f87:	4c 89 c7             	mov    %r8,%rdi
   14f8a:	59                   	pop    %rcx
   14f8b:	ff e0                	jmp    *%rax
   14f8d:	31 c0                	xor    %eax,%eax
   14f8f:	5a                   	pop    %rdx
   14f90:	c3                   	ret    

0000000000014f91 <tcpip_mtu>:
   14f91:	f3 0f 1e fa          	endbr64 
   14f95:	53                   	push   %rbx
   14f96:	49 89 f8             	mov    %rdi,%r8
   14f99:	0f b7 3f             	movzwl (%rdi),%edi
   14f9c:	e8 66 ff ff ff       	call   14f07 <tcpip_net_protocol>
   14fa1:	48 85 c0             	test   %rax,%rax
   14fa4:	75 04                	jne    14faa <tcpip_mtu+0x19>
   14fa6:	31 c0                	xor    %eax,%eax
   14fa8:	eb 19                	jmp    14fc3 <tcpip_mtu+0x32>
   14faa:	48 89 c3             	mov    %rax,%rbx
   14fad:	4c 89 c7             	mov    %r8,%rdi
   14fb0:	ff 50 28             	call   *0x28(%rax)
   14fb3:	48 85 c0             	test   %rax,%rax
   14fb6:	74 ee                	je     14fa6 <tcpip_mtu+0x15>
   14fb8:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
   14fbf:	48 2b 43 10          	sub    0x10(%rbx),%rax
   14fc3:	5b                   	pop    %rbx
   14fc4:	c3                   	ret    

0000000000014fc5 <tcpip_chksum>:
   14fc5:	f3 0f 1e fa          	endbr64 
   14fc9:	48 89 f2             	mov    %rsi,%rdx
   14fcc:	48 89 fe             	mov    %rdi,%rsi
   14fcf:	31 ff                	xor    %edi,%edi
   14fd1:	e9 48 24 00 00       	jmp    1741e <tcpip_continue_chksum>

0000000000014fd6 <tcpip_bind>:
   14fd6:	f3 0f 1e fa          	endbr64 
   14fda:	41 57                	push   %r15
   14fdc:	41 56                	push   %r14
   14fde:	41 55                	push   %r13
   14fe0:	49 89 f5             	mov    %rsi,%r13
   14fe3:	41 54                	push   %r12
   14fe5:	55                   	push   %rbp
   14fe6:	53                   	push   %rbx
   14fe7:	48 83 ec 18          	sub    $0x18,%rsp
   14feb:	48 85 ff             	test   %rdi,%rdi
   14fee:	74 22                	je     15012 <tcpip_bind+0x3c>
   14ff0:	66 8b 47 04          	mov    0x4(%rdi),%ax
   14ff4:	66 8b 5f 02          	mov    0x2(%rdi),%bx
   14ff8:	86 c4                	xchg   %al,%ah
   14ffa:	66 85 c0             	test   %ax,%ax
   14ffd:	74 15                	je     15014 <tcpip_bind+0x3e>
   14fff:	48 83 c4 18          	add    $0x18,%rsp
   15003:	0f b7 f8             	movzwl %ax,%edi
   15006:	5b                   	pop    %rbx
   15007:	5d                   	pop    %rbp
   15008:	41 5c                	pop    %r12
   1500a:	41 5d                	pop    %r13
   1500c:	41 5e                	pop    %r14
   1500e:	41 5f                	pop    %r15
   15010:	ff e6                	jmp    *%rsi
   15012:	31 db                	xor    %ebx,%ebx
   15014:	89 dd                	mov    %ebx,%ebp
   15016:	66 81 e3 00 04       	and    $0x400,%bx
   1501b:	45 31 ff             	xor    %r15d,%r15d
   1501e:	f7 d5                	not    %ebp
   15020:	ff cb                	dec    %ebx
   15022:	66 81 e5 00 04       	and    $0x400,%bp
   15027:	44 0f b7 f3          	movzwl %bx,%r14d
   1502b:	8d 45 01             	lea    0x1(%rbp),%eax
   1502e:	66 89 44 24 0e       	mov    %ax,0xe(%rsp)
   15033:	e8 e5 aa ff ff       	call   fb1d <random>
   15038:	48 89 c5             	mov    %rax,%rbp
   1503b:	46 8d 64 3d 00       	lea    0x0(%rbp,%r15,1),%r12d
   15040:	41 21 dc             	and    %ebx,%r12d
   15043:	66 44 39 64 24 0e    	cmp    %r12w,0xe(%rsp)
   15049:	76 10                	jbe    1505b <tcpip_bind+0x85>
   1504b:	41 ff c7             	inc    %r15d
   1504e:	45 39 fe             	cmp    %r15d,%r14d
   15051:	73 e8                	jae    1503b <tcpip_bind+0x65>
   15053:	41 bc 6c 9f f1 fc    	mov    $0xfcf19f6c,%r12d
   15059:	eb 0e                	jmp    15069 <tcpip_bind+0x93>
   1505b:	45 0f b7 e4          	movzwl %r12w,%r12d
   1505f:	44 89 e7             	mov    %r12d,%edi
   15062:	41 ff d5             	call   *%r13
   15065:	85 c0                	test   %eax,%eax
   15067:	78 e2                	js     1504b <tcpip_bind+0x75>
   15069:	48 83 c4 18          	add    $0x18,%rsp
   1506d:	44 89 e0             	mov    %r12d,%eax
   15070:	5b                   	pop    %rbx
   15071:	5d                   	pop    %rbp
   15072:	41 5c                	pop    %r12
   15074:	41 5d                	pop    %r13
   15076:	41 5e                	pop    %r14
   15078:	41 5f                	pop    %r15
   1507a:	c3                   	ret    

000000000001507b <tftp_xfer_window>:
   1507b:	f3 0f 1e fa          	endbr64 
   1507f:	8b 47 78             	mov    0x78(%rdi),%eax
   15082:	c3                   	ret    

0000000000015083 <tftp_reopen>:
   15083:	55                   	push   %rbp
   15084:	48 8d 6f 38          	lea    0x38(%rdi),%rbp
   15088:	31 f6                	xor    %esi,%esi
   1508a:	53                   	push   %rbx
   1508b:	48 89 fb             	mov    %rdi,%rbx
   1508e:	48 89 ef             	mov    %rbp,%rdi
   15091:	48 83 ec 38          	sub    $0x38,%rsp
   15095:	48 8b 05 b4 4f 01 00 	mov    0x14fb4(%rip),%rax        # 2a050 <__stack_chk_guard>
   1509c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   150a1:	31 c0                	xor    %eax,%eax
   150a3:	e8 70 48 ff ff       	call   9918 <intf_restart>
   150a8:	ba 20 00 00 00       	mov    $0x20,%edx
   150ad:	83 a3 ac 00 00 00 fe 	andl   $0xfffffffe,0xac(%rbx)
   150b4:	31 c0                	xor    %eax,%eax
   150b6:	48 8d bb 8c 00 00 00 	lea    0x8c(%rbx),%rdi
   150bd:	48 89 d1             	mov    %rdx,%rcx
   150c0:	f3 aa                	rep stos %al,%es:(%rdi)
   150c2:	4c 8d 4c 24 08       	lea    0x8(%rsp),%r9
   150c7:	48 89 d1             	mov    %rdx,%rcx
   150ca:	4c 89 cf             	mov    %r9,%rdi
   150cd:	f3 aa                	rep stos %al,%es:(%rdi)
   150cf:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax
   150d5:	45 31 c0             	xor    %r8d,%r8d
   150d8:	4c 89 ca             	mov    %r9,%rdx
   150db:	48 89 ef             	mov    %rbp,%rdi
   150de:	86 c4                	xchg   %al,%ah
   150e0:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
   150e5:	48 8b 43 30          	mov    0x30(%rbx),%rax
   150e9:	8b 35 51 f5 00 00    	mov    0xf551(%rip),%esi        # 24640 <udp_sock_dgram>
   150ef:	48 8b 48 30          	mov    0x30(%rax),%rcx
   150f3:	e8 6b b1 ff ff       	call   10263 <xfer_open_named_socket>
   150f8:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   150fd:	48 2b 15 4c 4f 01 00 	sub    0x14f4c(%rip),%rdx        # 2a050 <__stack_chk_guard>
   15104:	74 05                	je     1510b <tftp_reopen+0x88>
   15106:	e8 55 d9 fe ff       	call   2a60 <__stack_chk_fail>
   1510b:	48 83 c4 38          	add    $0x38,%rsp
   1510f:	5b                   	pop    %rbx
   15110:	5d                   	pop    %rbp
   15111:	c3                   	ret    

0000000000015112 <tftp_reopen_mc>:
   15112:	41 54                	push   %r12
   15114:	49 89 f4             	mov    %rsi,%r12
   15117:	31 f6                	xor    %esi,%esi
   15119:	55                   	push   %rbp
   1511a:	48 8d 6f 58          	lea    0x58(%rdi),%rbp
   1511e:	50                   	push   %rax
   1511f:	48 89 ef             	mov    %rbp,%rdi
   15122:	e8 f1 47 ff ff       	call   9918 <intf_restart>
   15127:	4c 89 e1             	mov    %r12,%rcx
   1512a:	4c 89 e2             	mov    %r12,%rdx
   1512d:	48 89 ef             	mov    %rbp,%rdi
   15130:	8b 35 0a f5 00 00    	mov    0xf50a(%rip),%esi        # 24640 <udp_sock_dgram>
   15136:	41 58                	pop    %r8
   15138:	5d                   	pop    %rbp
   15139:	41 5c                	pop    %r12
   1513b:	e9 56 9a ff ff       	jmp    eb96 <xfer_open_socket>

0000000000015140 <tftp_process_multicast>:
   15140:	f3 0f 1e fa          	endbr64 
   15144:	41 56                	push   %r14
   15146:	41 55                	push   %r13
   15148:	41 54                	push   %r12
   1514a:	49 89 f4             	mov    %rsi,%r12
   1514d:	be 2c 00 00 00       	mov    $0x2c,%esi
   15152:	55                   	push   %rbp
   15153:	48 89 fd             	mov    %rdi,%rbp
   15156:	4c 89 e7             	mov    %r12,%rdi
   15159:	53                   	push   %rbx
   1515a:	48 83 ec 40          	sub    $0x40,%rsp
   1515e:	48 8b 05 eb 4e 01 00 	mov    0x14eeb(%rip),%rax        # 2a050 <__stack_chk_guard>
   15165:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1516a:	31 c0                	xor    %eax,%eax
   1516c:	e8 b2 e8 ff ff       	call   13a23 <strchr>
   15171:	48 85 c0             	test   %rax,%rax
   15174:	75 0a                	jne    15180 <tftp_process_multicast+0x40>
   15176:	b8 7e 9c ed e3       	mov    $0xe3ed9c7e,%eax
   1517b:	e9 bb 00 00 00       	jmp    1523b <tftp_process_multicast+0xfb>
   15180:	c6 00 00             	movb   $0x0,(%rax)
   15183:	4c 8d 68 01          	lea    0x1(%rax),%r13
   15187:	be 2c 00 00 00       	mov    $0x2c,%esi
   1518c:	48 89 c3             	mov    %rax,%rbx
   1518f:	4c 89 ef             	mov    %r13,%rdi
   15192:	e8 8c e8 ff ff       	call   13a23 <strchr>
   15197:	48 85 c0             	test   %rax,%rax
   1519a:	75 0a                	jne    151a6 <tftp_process_multicast+0x66>
   1519c:	b8 7e 9b ed e3       	mov    $0xe3ed9b7e,%eax
   151a1:	e9 95 00 00 00       	jmp    1523b <tftp_process_multicast+0xfb>
   151a6:	c6 00 00             	movb   $0x0,(%rax)
   151a9:	31 d2                	xor    %edx,%edx
   151ab:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   151b0:	48 8d 78 01          	lea    0x1(%rax),%rdi
   151b4:	e8 9e e9 ff ff       	call   13b57 <strtoul>
   151b9:	48 85 c0             	test   %rax,%rax
   151bc:	75 07                	jne    151c5 <tftp_process_multicast+0x85>
   151be:	83 a5 ac 00 00 00 fe 	andl   $0xfffffffe,0xac(%rbp)
   151c5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   151ca:	80 38 00             	cmpb   $0x0,(%rax)
   151cd:	74 07                	je     151d6 <tftp_process_multicast+0x96>
   151cf:	b8 7e 9a ed e3       	mov    $0xe3ed9a7e,%eax
   151d4:	eb 65                	jmp    1523b <tftp_process_multicast+0xfb>
   151d6:	31 c0                	xor    %eax,%eax
   151d8:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   151dd:	74 5c                	je     1523b <tftp_process_multicast+0xfb>
   151df:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
   151e3:	74 56                	je     1523b <tftp_process_multicast+0xfb>
   151e5:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   151ea:	4c 89 e7             	mov    %r12,%rdi
   151ed:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   151f2:	66 c7 44 24 18 01 00 	movw   $0x1,0x18(%rsp)
   151f9:	e8 b6 53 ff ff       	call   a5b4 <inet_aton>
   151fe:	85 c0                	test   %eax,%eax
   15200:	75 07                	jne    15209 <tftp_process_multicast+0xc9>
   15202:	b8 7e 99 ed e3       	mov    $0xe3ed997e,%eax
   15207:	eb 32                	jmp    1523b <tftp_process_multicast+0xfb>
   15209:	31 d2                	xor    %edx,%edx
   1520b:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   15210:	4c 89 ef             	mov    %r13,%rdi
   15213:	e8 3f e9 ff ff       	call   13b57 <strtoul>
   15218:	86 c4                	xchg   %al,%ah
   1521a:	66 89 44 24 1c       	mov    %ax,0x1c(%rsp)
   1521f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   15224:	80 38 00             	cmpb   $0x0,(%rax)
   15227:	74 07                	je     15230 <tftp_process_multicast+0xf0>
   15229:	b8 7e 98 ed e3       	mov    $0xe3ed987e,%eax
   1522e:	eb 0b                	jmp    1523b <tftp_process_multicast+0xfb>
   15230:	4c 89 f6             	mov    %r14,%rsi
   15233:	48 89 ef             	mov    %rbp,%rdi
   15236:	e8 d7 fe ff ff       	call   15112 <tftp_reopen_mc>
   1523b:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   15240:	48 2b 15 09 4e 01 00 	sub    0x14e09(%rip),%rdx        # 2a050 <__stack_chk_guard>
   15247:	74 05                	je     1524e <tftp_process_multicast+0x10e>
   15249:	e8 12 d8 fe ff       	call   2a60 <__stack_chk_fail>
   1524e:	48 83 c4 40          	add    $0x40,%rsp
   15252:	5b                   	pop    %rbx
   15253:	5d                   	pop    %rbp
   15254:	41 5c                	pop    %r12
   15256:	41 5d                	pop    %r13
   15258:	41 5e                	pop    %r14
   1525a:	c3                   	ret    

000000000001525b <tftp_done>:
   1525b:	55                   	push   %rbp
   1525c:	89 f5                	mov    %esi,%ebp
   1525e:	53                   	push   %rbx
   1525f:	48 89 fb             	mov    %rdi,%rbx
   15262:	48 8d bf d0 00 00 00 	lea    0xd0(%rdi),%rdi
   15269:	50                   	push   %rax
   1526a:	e8 3d b1 ff ff       	call   103ac <stop_timer>
   1526f:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   15273:	89 ee                	mov    %ebp,%esi
   15275:	e8 25 47 ff ff       	call   999f <intf_shutdown>
   1527a:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
   1527e:	89 ee                	mov    %ebp,%esi
   15280:	e8 1a 47 ff ff       	call   999f <intf_shutdown>
   15285:	5a                   	pop    %rdx
   15286:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1528a:	89 ee                	mov    %ebp,%esi
   1528c:	5b                   	pop    %rbx
   1528d:	5d                   	pop    %rbp
   1528e:	e9 0c 47 ff ff       	jmp    999f <intf_shutdown>

0000000000015293 <tftp_core_open>:
   15293:	41 57                	push   %r15
   15295:	41 56                	push   %r14
   15297:	41 55                	push   %r13
   15299:	41 54                	push   %r12
   1529b:	55                   	push   %rbp
   1529c:	53                   	push   %rbx
   1529d:	41 51                	push   %r9
   1529f:	48 83 7e 30 00       	cmpq   $0x0,0x30(%rsi)
   152a4:	75 02                	jne    152a8 <tftp_core_open+0x15>
   152a6:	eb 0c                	jmp    152b4 <tftp_core_open+0x21>
   152a8:	48 8b 46 40          	mov    0x40(%rsi),%rax
   152ac:	49 89 f4             	mov    %rsi,%r12
   152af:	48 85 c0             	test   %rax,%rax
   152b2:	75 0b                	jne    152bf <tftp_core_open+0x2c>
   152b4:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   152ba:	e9 26 01 00 00       	jmp    153e5 <tftp_core_open+0x152>
   152bf:	80 38 2f             	cmpb   $0x2f,(%rax)
   152c2:	74 02                	je     152c6 <tftp_core_open+0x33>
   152c4:	eb ee                	jmp    152b4 <tftp_core_open+0x21>
   152c6:	49 89 fd             	mov    %rdi,%r13
   152c9:	bf 20 01 00 00       	mov    $0x120,%edi
   152ce:	41 89 d7             	mov    %edx,%r15d
   152d1:	49 89 ce             	mov    %rcx,%r14
   152d4:	44 89 c3             	mov    %r8d,%ebx
   152d7:	e8 5a 74 ff ff       	call   c736 <zalloc>
   152dc:	48 89 c5             	mov    %rax,%rbp
   152df:	48 85 c0             	test   %rax,%rax
   152e2:	75 0b                	jne    152ef <tftp_core_open+0x5c>
   152e4:	41 bc 77 9f ed ce    	mov    $0xceed9f77,%r12d
   152ea:	e9 f6 00 00 00       	jmp    153e5 <tftp_core_open+0x152>
   152ef:	48 8d 05 c8 03 00 00 	lea    0x3c8(%rip),%rax        # 156be <tftp_free>
   152f6:	48 8d 15 83 20 01 00 	lea    0x12083(%rip),%rdx        # 27380 <tftp_xfer_desc>
   152fd:	4c 89 e7             	mov    %r12,%rdi
   15300:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   15304:	48 89 45 08          	mov    %rax,0x8(%rbp)
   15308:	48 8d 05 b1 11 01 00 	lea    0x111b1(%rip),%rax        # 264c0 <null_intf>
   1530f:	48 89 45 10          	mov    %rax,0x10(%rbp)
   15313:	48 89 45 38          	mov    %rax,0x38(%rbp)
   15317:	48 89 45 58          	mov    %rax,0x58(%rbp)
   1531b:	48 8d 05 9e 20 01 00 	lea    0x1209e(%rip),%rax        # 273c0 <tftp_mc_socket_desc>
   15322:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   15326:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   1532a:	48 8d 15 cf 20 01 00 	lea    0x120cf(%rip),%rdx        # 27400 <tftp_socket_desc>
   15331:	48 89 45 68          	mov    %rax,0x68(%rbp)
   15335:	48 89 45 70          	mov    %rax,0x70(%rbp)
   15339:	48 8d 05 63 08 00 00 	lea    0x863(%rip),%rax        # 15ba3 <tftp_timer_expired>
   15340:	48 89 55 48          	mov    %rdx,0x48(%rbp)
   15344:	48 89 55 50          	mov    %rdx,0x50(%rbp)
   15348:	48 89 85 10 01 00 00 	mov    %rax,0x110(%rbp)
   1534f:	48 89 6d 40          	mov    %rbp,0x40(%rbp)
   15353:	48 89 6d 60          	mov    %rbp,0x60(%rbp)
   15357:	48 89 ad 18 01 00 00 	mov    %rbp,0x118(%rbp)
   1535e:	e8 ab ab ff ff       	call   ff0e <ref_increment>
   15363:	4c 89 e7             	mov    %r12,%rdi
   15366:	44 89 fe             	mov    %r15d,%esi
   15369:	4c 89 65 30          	mov    %r12,0x30(%rbp)
   1536d:	c7 45 78 00 02 00 00 	movl   $0x200,0x78(%rbp)
   15374:	89 9d ac 00 00 00    	mov    %ebx,0xac(%rbp)
   1537a:	e8 c7 13 00 00       	call   16746 <uri_port>
   1537f:	48 89 ef             	mov    %rbp,%rdi
   15382:	89 85 88 00 00 00    	mov    %eax,0x88(%rbp)
   15388:	e8 f6 fc ff ff       	call   15083 <tftp_reopen>
   1538d:	41 89 c4             	mov    %eax,%r12d
   15390:	85 c0                	test   %eax,%eax
   15392:	75 3e                	jne    153d2 <tftp_core_open+0x13f>
   15394:	4d 85 f6             	test   %r14,%r14
   15397:	75 27                	jne    153c0 <tftp_core_open+0x12d>
   15399:	48 8d bd d0 00 00 00 	lea    0xd0(%rbp),%rdi
   153a0:	31 f6                	xor    %esi,%esi
   153a2:	45 31 e4             	xor    %r12d,%r12d
   153a5:	e8 94 af ff ff       	call   1033e <start_timer_fixed>
   153aa:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   153ae:	4c 89 ee             	mov    %r13,%rsi
   153b1:	e8 8b 44 ff ff       	call   9841 <intf_plug_plug>
   153b6:	48 89 ef             	mov    %rbp,%rdi
   153b9:	e8 5c ab ff ff       	call   ff1a <ref_decrement>
   153be:	eb 25                	jmp    153e5 <tftp_core_open+0x152>
   153c0:	4c 89 f6             	mov    %r14,%rsi
   153c3:	48 89 ef             	mov    %rbp,%rdi
   153c6:	e8 47 fd ff ff       	call   15112 <tftp_reopen_mc>
   153cb:	41 89 c4             	mov    %eax,%r12d
   153ce:	85 c0                	test   %eax,%eax
   153d0:	74 c7                	je     15399 <tftp_core_open+0x106>
   153d2:	48 89 ef             	mov    %rbp,%rdi
   153d5:	44 89 e6             	mov    %r12d,%esi
   153d8:	e8 7e fe ff ff       	call   1525b <tftp_done>
   153dd:	48 89 ef             	mov    %rbp,%rdi
   153e0:	e8 35 ab ff ff       	call   ff1a <ref_decrement>
   153e5:	5a                   	pop    %rdx
   153e6:	44 89 e0             	mov    %r12d,%eax
   153e9:	5b                   	pop    %rbx
   153ea:	5d                   	pop    %rbp
   153eb:	41 5c                	pop    %r12
   153ed:	41 5d                	pop    %r13
   153ef:	41 5e                	pop    %r14
   153f1:	41 5f                	pop    %r15
   153f3:	c3                   	ret    

00000000000153f4 <tftp_open>:
   153f4:	f3 0f 1e fa          	endbr64 
   153f8:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   153fe:	31 c9                	xor    %ecx,%ecx
   15400:	ba 45 00 00 00       	mov    $0x45,%edx
   15405:	e9 89 fe ff ff       	jmp    15293 <tftp_core_open>

000000000001540a <tftm_open>:
   1540a:	f3 0f 1e fa          	endbr64 
   1540e:	41 b8 06 00 00 00    	mov    $0x6,%r8d
   15414:	31 c9                	xor    %ecx,%ecx
   15416:	ba 45 00 00 00       	mov    $0x45,%edx
   1541b:	e9 73 fe ff ff       	jmp    15293 <tftp_core_open>

0000000000015420 <mtftp_open>:
   15420:	f3 0f 1e fa          	endbr64 
   15424:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1542a:	48 8d 0d ef f1 00 00 	lea    0xf1ef(%rip),%rcx        # 24620 <tftp_mtftp_socket>
   15431:	ba df 06 00 00       	mov    $0x6df,%edx
   15436:	e9 58 fe ff ff       	jmp    15293 <tftp_core_open>

000000000001543b <tftp_apply_settings>:
   1543b:	f3 0f 1e fa          	endbr64 
   1543f:	41 54                	push   %r12
   15441:	31 ff                	xor    %edi,%edi
   15443:	48 8d 35 de 40 01 00 	lea    0x140de(%rip),%rsi        # 29528 <next_server_setting>
   1544a:	45 31 e4             	xor    %r12d,%r12d
   1544d:	55                   	push   %rbp
   1544e:	48 83 ec 38          	sub    $0x38,%rsp
   15452:	48 8b 05 f7 4b 01 00 	mov    0x14bf7(%rip),%rax        # 2a050 <__stack_chk_guard>
   15459:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1545e:	31 c0                	xor    %eax,%eax
   15460:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   15465:	e8 ce ca ff ff       	call   11f38 <fetch_ipv4_setting>
   1546a:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   1546e:	85 ff                	test   %edi,%edi
   15470:	74 5d                	je     154cf <tftp_apply_settings+0x94>
   15472:	3b 3d ac 49 01 00    	cmp    0x149ac(%rip),%edi        # 29e24 <tftp_server.0>
   15478:	74 55                	je     154cf <tftp_apply_settings+0x94>
   1547a:	e8 10 52 ff ff       	call   a68f <inet_ntoa>
   1547f:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   15484:	be 20 00 00 00       	mov    $0x20,%esi
   15489:	48 8d 15 b7 e8 00 00 	lea    0xe8b7(%rip),%rdx        # 23d47 <.LC0>
   15490:	48 89 c1             	mov    %rax,%rcx
   15493:	48 89 ef             	mov    %rbp,%rdi
   15496:	31 c0                	xor    %eax,%eax
   15498:	e8 c0 1c 00 00       	call   1715d <snprintf>
   1549d:	48 89 ef             	mov    %rbp,%rdi
   154a0:	e8 8a 10 00 00       	call   1652f <parse_uri>
   154a5:	48 89 c5             	mov    %rax,%rbp
   154a8:	48 85 c0             	test   %rax,%rax
   154ab:	75 08                	jne    154b5 <tftp_apply_settings+0x7a>
   154ad:	41 bc 77 9f ed ce    	mov    $0xceed9f77,%r12d
   154b3:	eb 1a                	jmp    154cf <tftp_apply_settings+0x94>
   154b5:	48 89 c7             	mov    %rax,%rdi
   154b8:	e8 ea 3f 00 00       	call   194a7 <churi>
   154bd:	48 89 ef             	mov    %rbp,%rdi
   154c0:	e8 55 aa ff ff       	call   ff1a <ref_decrement>
   154c5:	8b 44 24 04          	mov    0x4(%rsp),%eax
   154c9:	89 05 55 49 01 00    	mov    %eax,0x14955(%rip)        # 29e24 <tftp_server.0>
   154cf:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   154d4:	48 2b 05 75 4b 01 00 	sub    0x14b75(%rip),%rax        # 2a050 <__stack_chk_guard>
   154db:	74 05                	je     154e2 <tftp_apply_settings+0xa7>
   154dd:	e8 7e d5 fe ff       	call   2a60 <__stack_chk_fail>
   154e2:	48 83 c4 38          	add    $0x38,%rsp
   154e6:	44 89 e0             	mov    %r12d,%eax
   154e9:	5d                   	pop    %rbp
   154ea:	41 5c                	pop    %r12
   154ec:	c3                   	ret    

00000000000154ed <tftp_process_tsize>:
   154ed:	f3 0f 1e fa          	endbr64 
   154f1:	53                   	push   %rbx
   154f2:	ba 0a 00 00 00       	mov    $0xa,%edx
   154f7:	48 89 fb             	mov    %rdi,%rbx
   154fa:	48 89 f7             	mov    %rsi,%rdi
   154fd:	48 83 ec 10          	sub    $0x10,%rsp
   15501:	48 8b 05 48 4b 01 00 	mov    0x14b48(%rip),%rax        # 2a050 <__stack_chk_guard>
   15508:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1550d:	31 c0                	xor    %eax,%eax
   1550f:	48 89 e6             	mov    %rsp,%rsi
   15512:	e8 40 e6 ff ff       	call   13b57 <strtoul>
   15517:	48 8b 14 24          	mov    (%rsp),%rdx
   1551b:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
   15522:	31 c0                	xor    %eax,%eax
   15524:	80 3a 00             	cmpb   $0x0,(%rdx)
   15527:	74 05                	je     1552e <tftp_process_tsize+0x41>
   15529:	b8 7e 9d ed e3       	mov    $0xe3ed9d7e,%eax
   1552e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   15533:	48 2b 15 16 4b 01 00 	sub    0x14b16(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1553a:	74 05                	je     15541 <tftp_process_tsize+0x54>
   1553c:	e8 1f d5 fe ff       	call   2a60 <__stack_chk_fail>
   15541:	48 83 c4 10          	add    $0x10,%rsp
   15545:	5b                   	pop    %rbx
   15546:	c3                   	ret    

0000000000015547 <tftp_process_blksize>:
   15547:	f3 0f 1e fa          	endbr64 
   1554b:	53                   	push   %rbx
   1554c:	ba 0a 00 00 00       	mov    $0xa,%edx
   15551:	48 89 fb             	mov    %rdi,%rbx
   15554:	48 89 f7             	mov    %rsi,%rdi
   15557:	48 83 ec 10          	sub    $0x10,%rsp
   1555b:	48 8b 05 ee 4a 01 00 	mov    0x14aee(%rip),%rax        # 2a050 <__stack_chk_guard>
   15562:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   15567:	31 c0                	xor    %eax,%eax
   15569:	48 89 e6             	mov    %rsp,%rsi
   1556c:	e8 e6 e5 ff ff       	call   13b57 <strtoul>
   15571:	48 8b 14 24          	mov    (%rsp),%rdx
   15575:	89 43 78             	mov    %eax,0x78(%rbx)
   15578:	31 c0                	xor    %eax,%eax
   1557a:	80 3a 00             	cmpb   $0x0,(%rdx)
   1557d:	74 05                	je     15584 <tftp_process_blksize+0x3d>
   1557f:	b8 7e 9e ed e3       	mov    $0xe3ed9e7e,%eax
   15584:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   15589:	48 2b 15 c0 4a 01 00 	sub    0x14ac0(%rip),%rdx        # 2a050 <__stack_chk_guard>
   15590:	74 05                	je     15597 <tftp_process_blksize+0x50>
   15592:	e8 c9 d4 fe ff       	call   2a60 <__stack_chk_fail>
   15597:	48 83 c4 10          	add    $0x10,%rsp
   1559b:	5b                   	pop    %rbx
   1559c:	c3                   	ret    

000000000001559d <tftp_presize>:
   1559d:	48 39 b7 c8 00 00 00 	cmp    %rsi,0xc8(%rdi)
   155a4:	73 53                	jae    155f9 <tftp_presize+0x5c>
   155a6:	41 54                	push   %r12
   155a8:	49 89 f4             	mov    %rsi,%r12
   155ab:	55                   	push   %rbp
   155ac:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
   155b0:	53                   	push   %rbx
   155b1:	48 89 fb             	mov    %rdi,%rbx
   155b4:	48 89 b7 c8 00 00 00 	mov    %rsi,0xc8(%rdi)
   155bb:	48 89 ef             	mov    %rbp,%rdi
   155be:	e8 af 22 00 00       	call   17872 <xfer_seek>
   155c3:	31 f6                	xor    %esi,%esi
   155c5:	48 89 ef             	mov    %rbp,%rdi
   155c8:	e8 a5 22 00 00       	call   17872 <xfer_seek>
   155cd:	8b 4b 78             	mov    0x78(%rbx),%ecx
   155d0:	85 c9                	test   %ecx,%ecx
   155d2:	75 0a                	jne    155de <tftp_presize+0x41>
   155d4:	b8 7e 9f ed e3       	mov    $0xe3ed9f7e,%eax
   155d9:	5b                   	pop    %rbx
   155da:	5d                   	pop    %rbp
   155db:	41 5c                	pop    %r12
   155dd:	c3                   	ret    
   155de:	4c 89 e0             	mov    %r12,%rax
   155e1:	31 d2                	xor    %edx,%edx
   155e3:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
   155ea:	5b                   	pop    %rbx
   155eb:	48 f7 f1             	div    %rcx
   155ee:	5d                   	pop    %rbp
   155ef:	41 5c                	pop    %r12
   155f1:	8d 70 01             	lea    0x1(%rax),%esi
   155f4:	e9 3b 37 00 00       	jmp    18d34 <bitmap_resize>
   155f9:	31 c0                	xor    %eax,%eax
   155fb:	c3                   	ret    

00000000000155fc <tftp_close>:
   155fc:	f3 0f 1e fa          	endbr64 
   15600:	41 57                	push   %r15
   15602:	b9 0a 00 00 00       	mov    $0xa,%ecx
   15607:	4c 8d 3d 44 e7 00 00 	lea    0xe744(%rip),%r15        # 23d52 <.LC1>
   1560e:	41 56                	push   %r14
   15610:	41 55                	push   %r13
   15612:	41 89 f5             	mov    %esi,%r13d
   15615:	41 54                	push   %r12
   15617:	49 89 fc             	mov    %rdi,%r12
   1561a:	55                   	push   %rbp
   1561b:	4d 8d 74 24 38       	lea    0x38(%r12),%r14
   15620:	53                   	push   %rbx
   15621:	48 83 ec 38          	sub    $0x38,%rsp
   15625:	48 8b 05 24 4a 01 00 	mov    0x14a24(%rip),%rax        # 2a050 <__stack_chk_guard>
   1562c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   15631:	31 c0                	xor    %eax,%eax
   15633:	48 89 e7             	mov    %rsp,%rdi
   15636:	f3 ab                	rep stos %eax,%es:(%rdi)
   15638:	49 8d 84 24 8c 00 00 	lea    0x8c(%r12),%rax
   1563f:	00 
   15640:	4c 89 ff             	mov    %r15,%rdi
   15643:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15648:	e8 c9 e3 ff ff       	call   13a16 <strlen>
   1564d:	4c 89 f7             	mov    %r14,%rdi
   15650:	48 8d 58 05          	lea    0x5(%rax),%rbx
   15654:	48 89 de             	mov    %rbx,%rsi
   15657:	e8 1b 20 00 00       	call   17677 <xfer_alloc_iob>
   1565c:	48 85 c0             	test   %rax,%rax
   1565f:	75 02                	jne    15663 <tftp_close+0x67>
   15661:	eb 2f                	jmp    15692 <tftp_close+0x96>
   15663:	48 8b 78 20          	mov    0x20(%rax),%rdi
   15667:	48 89 c5             	mov    %rax,%rbp
   1566a:	4c 89 fe             	mov    %r15,%rsi
   1566d:	48 01 fb             	add    %rdi,%rbx
   15670:	48 83 c7 04          	add    $0x4,%rdi
   15674:	48 89 58 20          	mov    %rbx,0x20(%rax)
   15678:	c7 47 fc 00 05 00 00 	movl   $0x500,-0x4(%rdi)
   1567f:	e8 12 e4 ff ff       	call   13a96 <strcpy>
   15684:	48 89 e2             	mov    %rsp,%rdx
   15687:	48 89 ee             	mov    %rbp,%rsi
   1568a:	4c 89 f7             	mov    %r14,%rdi
   1568d:	e8 63 20 00 00       	call   176f5 <xfer_deliver>
   15692:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   15697:	48 2b 05 b2 49 01 00 	sub    0x149b2(%rip),%rax        # 2a050 <__stack_chk_guard>
   1569e:	74 05                	je     156a5 <tftp_close+0xa9>
   156a0:	e8 bb d3 fe ff       	call   2a60 <__stack_chk_fail>
   156a5:	48 83 c4 38          	add    $0x38,%rsp
   156a9:	44 89 ee             	mov    %r13d,%esi
   156ac:	4c 89 e7             	mov    %r12,%rdi
   156af:	5b                   	pop    %rbx
   156b0:	5d                   	pop    %rbp
   156b1:	41 5c                	pop    %r12
   156b3:	41 5d                	pop    %r13
   156b5:	41 5e                	pop    %r14
   156b7:	41 5f                	pop    %r15
   156b9:	e9 9d fb ff ff       	jmp    1525b <tftp_done>

00000000000156be <tftp_free>:
   156be:	f3 0f 1e fa          	endbr64 
   156c2:	55                   	push   %rbp
   156c3:	48 89 fd             	mov    %rdi,%rbp
   156c6:	48 8b 7f 30          	mov    0x30(%rdi),%rdi
   156ca:	e8 4b a8 ff ff       	call   ff1a <ref_decrement>
   156cf:	48 8b bd b8 00 00 00 	mov    0xb8(%rbp),%rdi
   156d6:	e8 47 70 ff ff       	call   c722 <free>
   156db:	48 89 ef             	mov    %rbp,%rdi
   156de:	5d                   	pop    %rbp
   156df:	e9 3e 70 ff ff       	jmp    c722 <free>

00000000000156e4 <tftp_send_packet.isra.0>:
   156e4:	41 56                	push   %r14
   156e6:	41 55                	push   %r13
   156e8:	41 54                	push   %r12
   156ea:	55                   	push   %rbp
   156eb:	48 8d af d0 00 00 00 	lea    0xd0(%rdi),%rbp
   156f2:	53                   	push   %rbx
   156f3:	48 89 fb             	mov    %rdi,%rbx
   156f6:	48 89 ef             	mov    %rbp,%rdi
   156f9:	4c 8d 63 38          	lea    0x38(%rbx),%r12
   156fd:	48 83 ec 30          	sub    $0x30,%rsp
   15701:	48 8b 05 48 49 01 00 	mov    0x14948(%rip),%rax        # 2a050 <__stack_chk_guard>
   15708:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1570d:	31 c0                	xor    %eax,%eax
   1570f:	e8 98 ac ff ff       	call   103ac <stop_timer>
   15714:	4c 89 e7             	mov    %r12,%rdi
   15717:	e8 f8 1d 00 00       	call   17514 <xfer_window>
   1571c:	48 85 c0             	test   %rax,%rax
   1571f:	74 0a                	je     1572b <tftp_send_packet.isra.0+0x47>
   15721:	48 89 ef             	mov    %rbp,%rdi
   15724:	e8 55 ac ff ff       	call   1037e <start_timer>
   15729:	eb 0a                	jmp    15735 <tftp_send_packet.isra.0+0x51>
   1572b:	31 f6                	xor    %esi,%esi
   1572d:	48 89 ef             	mov    %rbp,%rdi
   15730:	e8 09 ac ff ff       	call   1033e <start_timer_fixed>
   15735:	66 83 bb 8c 00 00 00 	cmpw   $0x0,0x8c(%rbx)
   1573c:	00 
   1573d:	0f 85 04 01 00 00    	jne    15847 <tftp_send_packet.isra.0+0x163>
   15743:	48 8b 43 30          	mov    0x30(%rbx),%rax
   15747:	4c 8b 70 40          	mov    0x40(%rax),%r14
   1574b:	49 ff c6             	inc    %r14
   1574e:	4c 89 f7             	mov    %r14,%rdi
   15751:	e8 c0 e2 ff ff       	call   13a16 <strlen>
   15756:	4c 89 e7             	mov    %r12,%rdi
   15759:	48 8d 70 2a          	lea    0x2a(%rax),%rsi
   1575d:	e8 15 1f 00 00       	call   17677 <xfer_alloc_iob>
   15762:	48 89 c5             	mov    %rax,%rbp
   15765:	48 85 c0             	test   %rax,%rax
   15768:	75 05                	jne    1576f <tftp_send_packet.isra.0+0x8b>
   1576a:	e9 38 01 00 00       	jmp    158a7 <tftp_send_packet.isra.0+0x1c3>
   1576f:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   15773:	e8 9c 1d 00 00       	call   17514 <xfer_window>
   15778:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   1577c:	45 31 c0             	xor    %r8d,%r8d
   1577f:	4c 89 f1             	mov    %r14,%rcx
   15782:	49 89 c5             	mov    %rax,%r13
   15785:	48 8b 45 20          	mov    0x20(%rbp),%rax
   15789:	48 8d 15 cf e5 00 00 	lea    0xe5cf(%rip),%rdx        # 23d5f <.LC2>
   15790:	48 8d 78 02          	lea    0x2(%rax),%rdi
   15794:	48 89 7d 20          	mov    %rdi,0x20(%rbp)
   15798:	48 29 fe             	sub    %rdi,%rsi
   1579b:	66 c7 00 00 01       	movw   $0x100,(%rax)
   157a0:	31 c0                	xor    %eax,%eax
   157a2:	e8 b6 19 00 00       	call   1715d <snprintf>
   157a7:	8d 78 01             	lea    0x1(%rax),%edi
   157aa:	48 63 ff             	movslq %edi,%rdi
   157ad:	48 03 7d 20          	add    0x20(%rbp),%rdi
   157b1:	48 89 7d 20          	mov    %rdi,0x20(%rbp)
   157b5:	f6 83 ac 00 00 00 02 	testb  $0x2,0xac(%rbx)
   157bc:	74 34                	je     157f2 <tftp_send_packet.isra.0+0x10e>
   157be:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   157c2:	41 b8 98 05 00 00    	mov    $0x598,%r8d
   157c8:	45 31 c9             	xor    %r9d,%r9d
   157cb:	50                   	push   %rax
   157cc:	6a 00                	push   $0x0
   157ce:	48 8d 15 94 e5 00 00 	lea    0xe594(%rip),%rdx        # 23d69 <.LC3>
   157d5:	48 29 fe             	sub    %rdi,%rsi
   157d8:	4d 39 c5             	cmp    %r8,%r13
   157db:	4d 0f 46 c5          	cmovbe %r13,%r8
   157df:	31 c9                	xor    %ecx,%ecx
   157e1:	31 c0                	xor    %eax,%eax
   157e3:	e8 75 19 00 00       	call   1715d <snprintf>
   157e8:	ff c0                	inc    %eax
   157ea:	48 98                	cltq   
   157ec:	48 01 45 20          	add    %rax,0x20(%rbp)
   157f0:	5a                   	pop    %rdx
   157f1:	59                   	pop    %rcx
   157f2:	f6 83 ac 00 00 00 04 	testb  $0x4,0xac(%rbx)
   157f9:	74 23                	je     1581e <tftp_send_packet.isra.0+0x13a>
   157fb:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   157ff:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   15803:	31 c9                	xor    %ecx,%ecx
   15805:	31 c0                	xor    %eax,%eax
   15807:	48 8d 15 72 e5 00 00 	lea    0xe572(%rip),%rdx        # 23d80 <.LC4>
   1580e:	48 29 fe             	sub    %rdi,%rsi
   15811:	e8 47 19 00 00       	call   1715d <snprintf>
   15816:	ff c0                	inc    %eax
   15818:	48 98                	cltq   
   1581a:	48 01 45 20          	add    %rax,0x20(%rbp)
   1581e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   15823:	48 2b 05 26 48 01 00 	sub    0x14826(%rip),%rax        # 2a050 <__stack_chk_guard>
   1582a:	0f 85 85 00 00 00    	jne    158b5 <tftp_send_packet.isra.0+0x1d1>
   15830:	48 83 c4 30          	add    $0x30,%rsp
   15834:	48 89 ee             	mov    %rbp,%rsi
   15837:	4c 89 e7             	mov    %r12,%rdi
   1583a:	5b                   	pop    %rbx
   1583b:	5d                   	pop    %rbp
   1583c:	41 5c                	pop    %r12
   1583e:	41 5d                	pop    %r13
   15840:	41 5e                	pop    %r14
   15842:	e9 9b 1f 00 00       	jmp    177e2 <xfer_deliver_iob>
   15847:	f6 83 ac 00 00 00 01 	testb  $0x1,0xac(%rbx)
   1584e:	74 57                	je     158a7 <tftp_send_packet.isra.0+0x1c3>
   15850:	31 c0                	xor    %eax,%eax
   15852:	48 89 e7             	mov    %rsp,%rdi
   15855:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1585a:	be 04 00 00 00       	mov    $0x4,%esi
   1585f:	f3 ab                	rep stos %eax,%es:(%rdi)
   15861:	48 8d 83 8c 00 00 00 	lea    0x8c(%rbx),%rax
   15868:	4c 89 e7             	mov    %r12,%rdi
   1586b:	8b 9b c4 00 00 00    	mov    0xc4(%rbx),%ebx
   15871:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15876:	e8 fc 1d 00 00       	call   17677 <xfer_alloc_iob>
   1587b:	48 89 c6             	mov    %rax,%rsi
   1587e:	48 85 c0             	test   %rax,%rax
   15881:	75 02                	jne    15885 <tftp_send_packet.isra.0+0x1a1>
   15883:	eb 22                	jmp    158a7 <tftp_send_packet.isra.0+0x1c3>
   15885:	48 8b 50 20          	mov    0x20(%rax),%rdx
   15889:	4c 89 e7             	mov    %r12,%rdi
   1588c:	86 df                	xchg   %bl,%bh
   1588e:	48 8d 42 04          	lea    0x4(%rdx),%rax
   15892:	48 89 46 20          	mov    %rax,0x20(%rsi)
   15896:	66 c7 02 00 04       	movw   $0x400,(%rdx)
   1589b:	66 89 5a 02          	mov    %bx,0x2(%rdx)
   1589f:	48 89 e2             	mov    %rsp,%rdx
   158a2:	e8 4e 1e 00 00       	call   176f5 <xfer_deliver>
   158a7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   158ac:	48 2b 05 9d 47 01 00 	sub    0x1479d(%rip),%rax        # 2a050 <__stack_chk_guard>
   158b3:	74 05                	je     158ba <tftp_send_packet.isra.0+0x1d6>
   158b5:	e8 a6 d1 fe ff       	call   2a60 <__stack_chk_fail>
   158ba:	48 83 c4 30          	add    $0x30,%rsp
   158be:	5b                   	pop    %rbx
   158bf:	5d                   	pop    %rbp
   158c0:	41 5c                	pop    %r12
   158c2:	41 5d                	pop    %r13
   158c4:	41 5e                	pop    %r14
   158c6:	c3                   	ret    

00000000000158c7 <tftp_rx>:
   158c7:	f3 0f 1e fa          	endbr64 
   158cb:	41 57                	push   %r15
   158cd:	41 56                	push   %r14
   158cf:	41 55                	push   %r13
   158d1:	49 89 f5             	mov    %rsi,%r13
   158d4:	41 54                	push   %r12
   158d6:	55                   	push   %rbp
   158d7:	53                   	push   %rbx
   158d8:	48 83 ec 48          	sub    $0x48,%rsp
   158dc:	4c 8b 76 18          	mov    0x18(%rsi),%r14
   158e0:	48 8b 5e 20          	mov    0x20(%rsi),%rbx
   158e4:	48 8b 05 65 47 01 00 	mov    0x14765(%rip),%rax        # 2a050 <__stack_chk_guard>
   158eb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   158f0:	31 c0                	xor    %eax,%eax
   158f2:	4c 29 f3             	sub    %r14,%rbx
   158f5:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   158fb:	48 83 fb 01          	cmp    $0x1,%rbx
   158ff:	0f 86 54 02 00 00    	jbe    15b59 <tftp_rx+0x292>
   15905:	48 8b 72 10          	mov    0x10(%rdx),%rsi
   15909:	48 85 f6             	test   %rsi,%rsi
   1590c:	0f 84 47 02 00 00    	je     15b59 <tftp_rx+0x292>
   15912:	48 89 fd             	mov    %rdi,%rbp
   15915:	ba 20 00 00 00       	mov    $0x20,%edx
   1591a:	48 8d bf 8c 00 00 00 	lea    0x8c(%rdi),%rdi
   15921:	66 83 bd 8c 00 00 00 	cmpw   $0x0,0x8c(%rbp)
   15928:	00 
   15929:	75 07                	jne    15932 <tftp_rx+0x6b>
   1592b:	e8 b9 1a 00 00       	call   173e9 <__memcpy>
   15930:	eb 13                	jmp    15945 <tftp_rx+0x7e>
   15932:	e8 f9 df ff ff       	call   13930 <memcmp>
   15937:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   1593d:	85 c0                	test   %eax,%eax
   1593f:	0f 85 14 02 00 00    	jne    15b59 <tftp_rx+0x292>
   15945:	66 41 8b 06          	mov    (%r14),%ax
   15949:	66 3d 00 05          	cmp    $0x500,%ax
   1594d:	0f 84 b8 01 00 00    	je     15b0b <tftp_rx+0x244>
   15953:	66 3d 00 06          	cmp    $0x600,%ax
   15957:	74 0f                	je     15968 <tftp_rx+0xa1>
   15959:	66 3d 00 03          	cmp    $0x300,%ax
   1595d:	0f 85 b2 01 00 00    	jne    15b15 <tftp_rx+0x24e>
   15963:	e9 af 00 00 00       	jmp    15a17 <tftp_rx+0x150>
   15968:	4d 8b 65 18          	mov    0x18(%r13),%r12
   1596c:	4c 01 e3             	add    %r12,%rbx
   1596f:	49 83 c4 02          	add    $0x2,%r12
   15973:	4c 39 e3             	cmp    %r12,%rbx
   15976:	76 72                	jbe    159ea <tftp_rx+0x123>
   15978:	48 89 de             	mov    %rbx,%rsi
   1597b:	4c 89 e7             	mov    %r12,%rdi
   1597e:	4c 29 e6             	sub    %r12,%rsi
   15981:	e8 79 e0 ff ff       	call   139ff <strnlen>
   15986:	4d 8d 74 04 01       	lea    0x1(%r12,%rax,1),%r14
   1598b:	4c 39 f3             	cmp    %r14,%rbx
   1598e:	76 5a                	jbe    159ea <tftp_rx+0x123>
   15990:	48 89 de             	mov    %rbx,%rsi
   15993:	4c 89 f7             	mov    %r14,%rdi
   15996:	4c 29 f6             	sub    %r14,%rsi
   15999:	e8 61 e0 ff ff       	call   139ff <strnlen>
   1599e:	49 8d 44 06 01       	lea    0x1(%r14,%rax,1),%rax
   159a3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   159a8:	48 39 c3             	cmp    %rax,%rbx
   159ab:	72 3d                	jb     159ea <tftp_rx+0x123>
   159ad:	4c 8d 3d 8c 1a 01 00 	lea    0x11a8c(%rip),%r15        # 27440 <tftp_options>
   159b4:	49 8b 37             	mov    (%r15),%rsi
   159b7:	48 85 f6             	test   %rsi,%rsi
   159ba:	74 21                	je     159dd <tftp_rx+0x116>
   159bc:	4c 89 e7             	mov    %r12,%rdi
   159bf:	e8 05 e0 ff ff       	call   139c9 <strcasecmp>
   159c4:	85 c0                	test   %eax,%eax
   159c6:	75 1c                	jne    159e4 <tftp_rx+0x11d>
   159c8:	4c 89 f6             	mov    %r14,%rsi
   159cb:	48 89 ef             	mov    %rbp,%rdi
   159ce:	41 ff 57 08          	call   *0x8(%r15)
   159d2:	41 89 c4             	mov    %eax,%r12d
   159d5:	85 c0                	test   %eax,%eax
   159d7:	0f 85 97 01 00 00    	jne    15b74 <tftp_rx+0x2ad>
   159dd:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   159e2:	eb 8f                	jmp    15973 <tftp_rx+0xac>
   159e4:	49 83 c7 10          	add    $0x10,%r15
   159e8:	eb ca                	jmp    159b4 <tftp_rx+0xed>
   159ea:	48 8b b5 80 00 00 00 	mov    0x80(%rbp),%rsi
   159f1:	48 85 f6             	test   %rsi,%rsi
   159f4:	75 0d                	jne    15a03 <tftp_rx+0x13c>
   159f6:	48 89 ef             	mov    %rbp,%rdi
   159f9:	e8 e6 fc ff ff       	call   156e4 <tftp_send_packet.isra.0>
   159fe:	e9 53 01 00 00       	jmp    15b56 <tftp_rx+0x28f>
   15a03:	48 89 ef             	mov    %rbp,%rdi
   15a06:	e8 92 fb ff ff       	call   1559d <tftp_presize>
   15a0b:	41 89 c4             	mov    %eax,%r12d
   15a0e:	85 c0                	test   %eax,%eax
   15a10:	74 e4                	je     159f6 <tftp_rx+0x12f>
   15a12:	e9 5d 01 00 00       	jmp    15b74 <tftp_rx+0x2ad>
   15a17:	49 8b 5d 20          	mov    0x20(%r13),%rbx
   15a1b:	49 8b 55 18          	mov    0x18(%r13),%rdx
   15a1f:	48 89 d8             	mov    %rbx,%rax
   15a22:	48 29 d0             	sub    %rdx,%rax
   15a25:	48 83 f8 03          	cmp    $0x3,%rax
   15a29:	77 02                	ja     15a2d <tftp_rx+0x166>
   15a2b:	eb 1a                	jmp    15a47 <tftp_rx+0x180>
   15a2d:	8b 85 c4 00 00 00    	mov    0xc4(%rbp),%eax
   15a33:	8d 48 01             	lea    0x1(%rax),%ecx
   15a36:	66 8b 42 02          	mov    0x2(%rdx),%ax
   15a3a:	81 e1 00 00 ff ff    	and    $0xffff0000,%ecx
   15a40:	75 10                	jne    15a52 <tftp_rx+0x18b>
   15a42:	66 85 c0             	test   %ax,%ax
   15a45:	75 0b                	jne    15a52 <tftp_rx+0x18b>
   15a47:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   15a4d:	e9 9c 00 00 00       	jmp    15aee <tftp_rx+0x227>
   15a52:	86 c4                	xchg   %al,%ah
   15a54:	0f b7 c0             	movzwl %ax,%eax
   15a57:	48 83 c2 04          	add    $0x4,%rdx
   15a5b:	44 8d 74 01 ff       	lea    -0x1(%rcx,%rax,1),%r14d
   15a60:	8b 45 78             	mov    0x78(%rbp),%eax
   15a63:	48 29 d3             	sub    %rdx,%rbx
   15a66:	49 89 55 18          	mov    %rdx,0x18(%r13)
   15a6a:	45 89 f7             	mov    %r14d,%r15d
   15a6d:	44 0f af f8          	imul   %eax,%r15d
   15a71:	48 39 c3             	cmp    %rax,%rbx
   15a74:	76 02                	jbe    15a78 <tftp_rx+0x1b1>
   15a76:	eb cf                	jmp    15a47 <tftp_rx+0x180>
   15a78:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   15a7d:	b9 28 00 00 00       	mov    $0x28,%ecx
   15a82:	31 c0                	xor    %eax,%eax
   15a84:	48 89 d7             	mov    %rdx,%rdi
   15a87:	f3 aa                	rep stos %al,%es:(%rdi)
   15a89:	4c 89 ee             	mov    %r13,%rsi
   15a8c:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   15a90:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   15a95:	45 31 ed             	xor    %r13d,%r13d
   15a98:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   15a9f:	00 
   15aa0:	e8 50 1c 00 00       	call   176f5 <xfer_deliver>
   15aa5:	41 89 c4             	mov    %eax,%r12d
   15aa8:	85 c0                	test   %eax,%eax
   15aaa:	75 42                	jne    15aee <tftp_rx+0x227>
   15aac:	49 8d 34 1f          	lea    (%r15,%rbx,1),%rsi
   15ab0:	48 89 ef             	mov    %rbp,%rdi
   15ab3:	e8 e5 fa ff ff       	call   1559d <tftp_presize>
   15ab8:	41 89 c4             	mov    %eax,%r12d
   15abb:	85 c0                	test   %eax,%eax
   15abd:	75 2f                	jne    15aee <tftp_rx+0x227>
   15abf:	48 8d bd b8 00 00 00 	lea    0xb8(%rbp),%rdi
   15ac6:	44 89 f6             	mov    %r14d,%esi
   15ac9:	e8 08 33 00 00       	call   18dd6 <bitmap_set>
   15ace:	48 89 ef             	mov    %rbp,%rdi
   15ad1:	e8 0e fc ff ff       	call   156e4 <tftp_send_packet.isra.0>
   15ad6:	8b 85 c0 00 00 00    	mov    0xc0(%rbp),%eax
   15adc:	39 85 c4 00 00 00    	cmp    %eax,0xc4(%rbp)
   15ae2:	75 0a                	jne    15aee <tftp_rx+0x227>
   15ae4:	31 f6                	xor    %esi,%esi
   15ae6:	48 89 ef             	mov    %rbp,%rdi
   15ae9:	e8 6d f7 ff ff       	call   1525b <tftp_done>
   15aee:	4c 89 ef             	mov    %r13,%rdi
   15af1:	e8 70 42 ff ff       	call   9d66 <free_iob>
   15af6:	45 85 e4             	test   %r12d,%r12d
   15af9:	74 0b                	je     15b06 <tftp_rx+0x23f>
   15afb:	44 89 e6             	mov    %r12d,%esi
   15afe:	48 89 ef             	mov    %rbp,%rdi
   15b01:	e8 55 f7 ff ff       	call   1525b <tftp_done>
   15b06:	45 31 ed             	xor    %r13d,%r13d
   15b09:	eb 4e                	jmp    15b59 <tftp_rx+0x292>
   15b0b:	49 8b 45 18          	mov    0x18(%r13),%rax
   15b0f:	48 83 fb 03          	cmp    $0x3,%rbx
   15b13:	77 08                	ja     15b1d <tftp_rx+0x256>
   15b15:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   15b1b:	eb 3c                	jmp    15b59 <tftp_rx+0x292>
   15b1d:	66 8b 40 02          	mov    0x2(%rax),%ax
   15b21:	86 c4                	xchg   %al,%ah
   15b23:	66 83 f8 02          	cmp    $0x2,%ax
   15b27:	74 12                	je     15b3b <tftp_rx+0x274>
   15b29:	66 83 f8 04          	cmp    $0x4,%ax
   15b2d:	74 13                	je     15b42 <tftp_rx+0x27b>
   15b2f:	66 ff c8             	dec    %ax
   15b32:	75 15                	jne    15b49 <tftp_rx+0x282>
   15b34:	be 72 9f ed d2       	mov    $0xd2ed9f72,%esi
   15b39:	eb 13                	jmp    15b4e <tftp_rx+0x287>
   15b3b:	be 71 9f ed fd       	mov    $0xfded9f71,%esi
   15b40:	eb 0c                	jmp    15b4e <tftp_rx+0x287>
   15b42:	be 7d 9f ed c2       	mov    $0xc2ed9f7d,%esi
   15b47:	eb 05                	jmp    15b4e <tftp_rx+0x287>
   15b49:	be 7d 9f ed c3       	mov    $0xc3ed9f7d,%esi
   15b4e:	48 89 ef             	mov    %rbp,%rdi
   15b51:	e8 05 f7 ff ff       	call   1525b <tftp_done>
   15b56:	45 31 e4             	xor    %r12d,%r12d
   15b59:	4c 89 ef             	mov    %r13,%rdi
   15b5c:	e8 05 42 ff ff       	call   9d66 <free_iob>
   15b61:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15b66:	48 2b 05 e3 44 01 00 	sub    0x144e3(%rip),%rax        # 2a050 <__stack_chk_guard>
   15b6d:	74 12                	je     15b81 <tftp_rx+0x2ba>
   15b6f:	e8 ec ce fe ff       	call   2a60 <__stack_chk_fail>
   15b74:	44 89 e6             	mov    %r12d,%esi
   15b77:	48 89 ef             	mov    %rbp,%rdi
   15b7a:	e8 dc f6 ff ff       	call   1525b <tftp_done>
   15b7f:	eb d8                	jmp    15b59 <tftp_rx+0x292>
   15b81:	48 83 c4 48          	add    $0x48,%rsp
   15b85:	44 89 e0             	mov    %r12d,%eax
   15b88:	5b                   	pop    %rbx
   15b89:	5d                   	pop    %rbp
   15b8a:	41 5c                	pop    %r12
   15b8c:	41 5d                	pop    %r13
   15b8e:	41 5e                	pop    %r14
   15b90:	41 5f                	pop    %r15
   15b92:	c3                   	ret    

0000000000015b93 <tftp_socket_deliver>:
   15b93:	f3 0f 1e fa          	endbr64 
   15b97:	83 8f ac 00 00 00 01 	orl    $0x1,0xac(%rdi)
   15b9e:	e9 24 fd ff ff       	jmp    158c7 <tftp_rx>

0000000000015ba3 <tftp_timer_expired>:
   15ba3:	f3 0f 1e fa          	endbr64 
   15ba7:	55                   	push   %rbp
   15ba8:	48 8d af 30 ff ff ff 	lea    -0xd0(%rdi),%rbp
   15baf:	53                   	push   %rbx
   15bb0:	51                   	push   %rcx
   15bb1:	f6 47 dc 08          	testb  $0x8,-0x24(%rdi)
   15bb5:	74 5d                	je     15c14 <tftp_timer_expired+0x71>
   15bb7:	66 83 7f bc 00       	cmpw   $0x0,-0x44(%rdi)
   15bbc:	48 89 fb             	mov    %rdi,%rbx
   15bbf:	75 43                	jne    15c04 <tftp_timer_expired+0x61>
   15bc1:	8b 47 e0             	mov    -0x20(%rdi),%eax
   15bc4:	ff c0                	inc    %eax
   15bc6:	89 47 e0             	mov    %eax,-0x20(%rdi)
   15bc9:	83 f8 03             	cmp    $0x3,%eax
   15bcc:	76 51                	jbe    15c1f <tftp_timer_expired+0x7c>
   15bce:	c7 47 dc 02 00 00 00 	movl   $0x2,-0x24(%rdi)
   15bd5:	31 f6                	xor    %esi,%esi
   15bd7:	48 8d 7f 88          	lea    -0x78(%rdi),%rdi
   15bdb:	e8 38 3d ff ff       	call   9918 <intf_restart>
   15be0:	31 f6                	xor    %esi,%esi
   15be2:	48 89 df             	mov    %rbx,%rdi
   15be5:	e8 54 a7 ff ff       	call   1033e <start_timer_fixed>
   15bea:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
   15bee:	e8 2f 6b ff ff       	call   c722 <free>
   15bf3:	48 8d 7b e8          	lea    -0x18(%rbx),%rdi
   15bf7:	31 c0                	xor    %eax,%eax
   15bf9:	ab                   	stos   %eax,%es:(%rdi)
   15bfa:	ab                   	stos   %eax,%es:(%rdi)
   15bfb:	ab                   	stos   %eax,%es:(%rdi)
   15bfc:	ab                   	stos   %eax,%es:(%rdi)
   15bfd:	c7 43 b8 45 00 00 00 	movl   $0x45,-0x48(%rbx)
   15c04:	48 89 ef             	mov    %rbp,%rdi
   15c07:	e8 77 f4 ff ff       	call   15083 <tftp_reopen>
   15c0c:	89 c6                	mov    %eax,%esi
   15c0e:	85 c0                	test   %eax,%eax
   15c10:	74 0d                	je     15c1f <tftp_timer_expired+0x7c>
   15c12:	eb 16                	jmp    15c2a <tftp_timer_expired+0x87>
   15c14:	85 f6                	test   %esi,%esi
   15c16:	74 07                	je     15c1f <tftp_timer_expired+0x7c>
   15c18:	be 6e 9f ed b3       	mov    $0xb3ed9f6e,%esi
   15c1d:	eb 0b                	jmp    15c2a <tftp_timer_expired+0x87>
   15c1f:	5a                   	pop    %rdx
   15c20:	48 89 ef             	mov    %rbp,%rdi
   15c23:	5b                   	pop    %rbx
   15c24:	5d                   	pop    %rbp
   15c25:	e9 ba fa ff ff       	jmp    156e4 <tftp_send_packet.isra.0>
   15c2a:	58                   	pop    %rax
   15c2b:	48 89 ef             	mov    %rbp,%rdi
   15c2e:	5b                   	pop    %rbx
   15c2f:	5d                   	pop    %rbp
   15c30:	e9 26 f6 ff ff       	jmp    1525b <tftp_done>

0000000000015c35 <mktime>:
   15c35:	f3 0f 1e fa          	endbr64 
   15c39:	41 54                	push   %r12
   15c3b:	48 8d 05 ee c9 00 00 	lea    0xc9ee(%rip),%rax        # 22630 <days_to_month_start>
   15c42:	48 89 fe             	mov    %rdi,%rsi
   15c45:	55                   	push   %rbp
   15c46:	8b 4e 14             	mov    0x14(%rsi),%ecx
   15c49:	53                   	push   %rbx
   15c4a:	48 63 6f 10          	movslq 0x10(%rdi),%rbp
   15c4e:	8b 5f 0c             	mov    0xc(%rdi),%ebx
   15c51:	0f b7 04 68          	movzwl (%rax,%rbp,2),%eax
   15c55:	49 89 e8             	mov    %rbp,%r8
   15c58:	8d 7c 03 ff          	lea    -0x1(%rbx,%rax,1),%edi
   15c5c:	89 7e 1c             	mov    %edi,0x1c(%rsi)
   15c5f:	83 fd 01             	cmp    $0x1,%ebp
   15c62:	7e 39                	jle    15c9d <mktime+0x68>
   15c64:	89 c8                	mov    %ecx,%eax
   15c66:	41 ba 64 00 00 00    	mov    $0x64,%r10d
   15c6c:	99                   	cltd   
   15c6d:	41 f7 fa             	idiv   %r10d
   15c70:	41 89 d1             	mov    %edx,%r9d
   15c73:	85 d2                	test   %edx,%edx
   15c75:	74 0a                	je     15c81 <mktime+0x4c>
   15c77:	45 31 c9             	xor    %r9d,%r9d
   15c7a:	f6 c1 03             	test   $0x3,%cl
   15c7d:	41 0f 94 c1          	sete   %r9b
   15c81:	89 c8                	mov    %ecx,%eax
   15c83:	41 ba 90 01 00 00    	mov    $0x190,%r10d
   15c89:	99                   	cltd   
   15c8a:	41 f7 fa             	idiv   %r10d
   15c8d:	83 fa 64             	cmp    $0x64,%edx
   15c90:	74 06                	je     15c98 <mktime+0x63>
   15c92:	41 80 e1 01          	and    $0x1,%r9b
   15c96:	74 05                	je     15c9d <mktime+0x68>
   15c98:	ff c7                	inc    %edi
   15c9a:	89 7e 1c             	mov    %edi,0x1c(%rsi)
   15c9d:	41 83 f8 02          	cmp    $0x2,%r8d
   15ca1:	8d 79 ff             	lea    -0x1(%rcx),%edi
   15ca4:	41 89 cb             	mov    %ecx,%r11d
   15ca7:	41 ba 04 00 00 00    	mov    $0x4,%r10d
   15cad:	44 0f 4c df          	cmovl  %edi,%r11d
   15cb1:	41 b9 9c ff ff ff    	mov    $0xffffff9c,%r9d
   15cb7:	41 b8 90 01 00 00    	mov    $0x190,%r8d
   15cbd:	44 89 d8             	mov    %r11d,%eax
   15cc0:	99                   	cltd   
   15cc1:	41 f7 fa             	idiv   %r10d
   15cc4:	41 89 c4             	mov    %eax,%r12d
   15cc7:	44 89 d8             	mov    %r11d,%eax
   15cca:	99                   	cltd   
   15ccb:	41 f7 f9             	idiv   %r9d
   15cce:	41 01 c4             	add    %eax,%r12d
   15cd1:	41 8d 83 2c 01 00 00 	lea    0x12c(%r11),%eax
   15cd8:	99                   	cltd   
   15cd9:	41 f7 f8             	idiv   %r8d
   15cdc:	42 8d 14 20          	lea    (%rax,%r12,1),%edx
   15ce0:	48 8d 05 39 c9 00 00 	lea    0xc939(%rip),%rax        # 22620 <offset.0>
   15ce7:	0f b6 04 28          	movzbl (%rax,%rbp,1),%eax
   15ceb:	44 01 da             	add    %r11d,%edx
   15cee:	41 bb 07 00 00 00    	mov    $0x7,%r11d
   15cf4:	01 c2                	add    %eax,%edx
   15cf6:	8d 04 1a             	lea    (%rdx,%rbx,1),%eax
   15cf9:	5b                   	pop    %rbx
   15cfa:	5d                   	pop    %rbp
   15cfb:	99                   	cltd   
   15cfc:	41 5c                	pop    %r12
   15cfe:	41 f7 fb             	idiv   %r11d
   15d01:	89 f8                	mov    %edi,%eax
   15d03:	89 56 18             	mov    %edx,0x18(%rsi)
   15d06:	99                   	cltd   
   15d07:	41 f7 fa             	idiv   %r10d
   15d0a:	41 89 c2             	mov    %eax,%r10d
   15d0d:	89 f8                	mov    %edi,%eax
   15d0f:	99                   	cltd   
   15d10:	69 f9 6d 01 00 00    	imul   $0x16d,%ecx,%edi
   15d16:	03 7e 1c             	add    0x1c(%rsi),%edi
   15d19:	41 f7 f9             	idiv   %r9d
   15d1c:	45 8d 0c 02          	lea    (%r10,%rax,1),%r9d
   15d20:	8d 81 2b 01 00 00    	lea    0x12b(%rcx),%eax
   15d26:	99                   	cltd   
   15d27:	41 f7 f8             	idiv   %r8d
   15d2a:	6b 56 08 3c          	imul   $0x3c,0x8(%rsi),%edx
   15d2e:	03 56 04             	add    0x4(%rsi),%edx
   15d31:	6b d2 3c             	imul   $0x3c,%edx,%edx
   15d34:	03 16                	add    (%rsi),%edx
   15d36:	48 63 d2             	movslq %edx,%rdx
   15d39:	44 01 c8             	add    %r9d,%eax
   15d3c:	8d 84 07 21 9c ff ff 	lea    -0x63df(%rdi,%rax,1),%eax
   15d43:	48 98                	cltq   
   15d45:	48 69 c0 80 51 01 00 	imul   $0x15180,%rax,%rax
   15d4c:	48 01 d0             	add    %rdx,%rax
   15d4f:	c3                   	ret    

0000000000015d50 <timer_probe>:
   15d50:	f3 0f 1e fa          	endbr64 
   15d54:	53                   	push   %rbx
   15d55:	48 8d 05 8c 3d 01 00 	lea    0x13d8c(%rip),%rax        # 29ae8 <efi_timer>
   15d5c:	48 8d 1d a5 3d 01 00 	lea    0x13da5(%rip),%rbx        # 29b08 <efi_local_uri_opener>
   15d63:	48 89 05 c6 40 01 00 	mov    %rax,0x140c6(%rip)        # 29e30 <timer>
   15d6a:	48 39 d8             	cmp    %rbx,%rax
   15d6d:	73 1c                	jae    15d8b <timer_probe+0x3b>
   15d6f:	48 8b 40 08          	mov    0x8(%rax),%rax
   15d73:	48 85 c0             	test   %rax,%rax
   15d76:	74 15                	je     15d8d <timer_probe+0x3d>
   15d78:	ff d0                	call   *%rax
   15d7a:	85 c0                	test   %eax,%eax
   15d7c:	74 0f                	je     15d8d <timer_probe+0x3d>
   15d7e:	48 8b 05 ab 40 01 00 	mov    0x140ab(%rip),%rax        # 29e30 <timer>
   15d85:	48 83 c0 20          	add    $0x20,%rax
   15d89:	eb d8                	jmp    15d63 <timer_probe+0x13>
   15d8b:	eb fe                	jmp    15d8b <timer_probe+0x3b>
   15d8d:	5b                   	pop    %rbx
   15d8e:	c3                   	ret    

0000000000015d8f <keypress_interrupted>:
   15d8f:	f3 0f 1e fa          	endbr64 
   15d93:	51                   	push   %rcx
   15d94:	e8 d2 35 00 00       	call   1936b <iskey>
   15d99:	85 c0                	test   %eax,%eax
   15d9b:	74 0e                	je     15dab <keypress_interrupted+0x1c>
   15d9d:	e8 95 35 00 00       	call   19337 <getchar>
   15da2:	83 f8 03             	cmp    $0x3,%eax
   15da5:	0f 94 c0             	sete   %al
   15da8:	0f b6 c0             	movzbl %al,%eax
   15dab:	5a                   	pop    %rdx
   15dac:	c3                   	ret    

0000000000015dad <currticks>:
   15dad:	f3 0f 1e fa          	endbr64 
   15db1:	48 8b 05 78 40 01 00 	mov    0x14078(%rip),%rax        # 29e30 <timer>
   15db8:	48 85 c0             	test   %rax,%rax
   15dbb:	74 03                	je     15dc0 <currticks+0x13>
   15dbd:	ff 60 10             	jmp    *0x10(%rax)
   15dc0:	31 c0                	xor    %eax,%eax
   15dc2:	c3                   	ret    

0000000000015dc3 <udelay>:
   15dc3:	f3 0f 1e fa          	endbr64 
   15dc7:	48 8b 05 62 40 01 00 	mov    0x14062(%rip),%rax        # 29e30 <timer>
   15dce:	48 85 c0             	test   %rax,%rax
   15dd1:	74 03                	je     15dd6 <udelay+0x13>
   15dd3:	ff 60 18             	jmp    *0x18(%rax)
   15dd6:	c3                   	ret    

0000000000015dd7 <mdelay>:
   15dd7:	f3 0f 1e fa          	endbr64 
   15ddb:	48 83 3d 4d 40 01 00 	cmpq   $0x0,0x1404d(%rip)        # 29e30 <timer>
   15de2:	00 
   15de3:	75 01                	jne    15de6 <mdelay+0xf>
   15de5:	c3                   	ret    
   15de6:	53                   	push   %rbx
   15de7:	48 89 fb             	mov    %rdi,%rbx
   15dea:	48 85 db             	test   %rbx,%rbx
   15ded:	74 0f                	je     15dfe <mdelay+0x27>
   15def:	bf e8 03 00 00       	mov    $0x3e8,%edi
   15df4:	48 ff cb             	dec    %rbx
   15df7:	e8 c7 ff ff ff       	call   15dc3 <udelay>
   15dfc:	eb ec                	jmp    15dea <mdelay+0x13>
   15dfe:	5b                   	pop    %rbx
   15dff:	c3                   	ret    

0000000000015e00 <sleep>:
   15e00:	f3 0f 1e fa          	endbr64 
   15e04:	41 54                	push   %r12
   15e06:	41 89 fc             	mov    %edi,%r12d
   15e09:	53                   	push   %rbx
   15e0a:	51                   	push   %rcx
   15e0b:	e8 9d ff ff ff       	call   15dad <currticks>
   15e10:	48 89 c3             	mov    %rax,%rbx
   15e13:	45 85 e4             	test   %r12d,%r12d
   15e16:	74 2e                	je     15e46 <sleep+0x46>
   15e18:	e8 90 ff ff ff       	call   15dad <currticks>
   15e1d:	48 89 c2             	mov    %rax,%rdx
   15e20:	48 29 da             	sub    %rbx,%rdx
   15e23:	48 81 fa ff 03 00 00 	cmp    $0x3ff,%rdx
   15e2a:	77 15                	ja     15e41 <sleep+0x41>
   15e2c:	e8 57 9c ff ff       	call   fa88 <step>
   15e31:	e8 59 ff ff ff       	call   15d8f <keypress_interrupted>
   15e36:	85 c0                	test   %eax,%eax
   15e38:	75 0c                	jne    15e46 <sleep+0x46>
   15e3a:	e8 34 7b 00 00       	call   1d973 <cpu_nap>
   15e3f:	eb d7                	jmp    15e18 <sleep+0x18>
   15e41:	41 ff cc             	dec    %r12d
   15e44:	eb ca                	jmp    15e10 <sleep+0x10>
   15e46:	44 89 e0             	mov    %r12d,%eax
   15e49:	5a                   	pop    %rdx
   15e4a:	5b                   	pop    %rbx
   15e4b:	41 5c                	pop    %r12
   15e4d:	c3                   	ret    

0000000000015e4e <sleep_fixed>:
   15e4e:	f3 0f 1e fa          	endbr64 
   15e52:	55                   	push   %rbp
   15e53:	53                   	push   %rbx
   15e54:	89 fb                	mov    %edi,%ebx
   15e56:	52                   	push   %rdx
   15e57:	e8 51 ff ff ff       	call   15dad <currticks>
   15e5c:	48 89 c5             	mov    %rax,%rbp
   15e5f:	85 db                	test   %ebx,%ebx
   15e61:	74 24                	je     15e87 <sleep_fixed+0x39>
   15e63:	e8 45 ff ff ff       	call   15dad <currticks>
   15e68:	48 89 c2             	mov    %rax,%rdx
   15e6b:	48 29 ea             	sub    %rbp,%rdx
   15e6e:	48 81 fa ff 03 00 00 	cmp    $0x3ff,%rdx
   15e75:	77 0c                	ja     15e83 <sleep_fixed+0x35>
   15e77:	e8 0c 9c ff ff       	call   fa88 <step>
   15e7c:	e8 f2 7a 00 00       	call   1d973 <cpu_nap>
   15e81:	eb e0                	jmp    15e63 <sleep_fixed+0x15>
   15e83:	ff cb                	dec    %ebx
   15e85:	eb d5                	jmp    15e5c <sleep_fixed+0xe>
   15e87:	58                   	pop    %rax
   15e88:	5b                   	pop    %rbx
   15e89:	5d                   	pop    %rbp
   15e8a:	c3                   	ret    

0000000000015e8b <udp_rx>:
   15e8b:	f3 0f 1e fa          	endbr64 
   15e8f:	41 57                	push   %r15
   15e91:	41 56                	push   %r14
   15e93:	49 89 fe             	mov    %rdi,%r14
   15e96:	41 55                	push   %r13
   15e98:	41 54                	push   %r12
   15e9a:	49 89 d4             	mov    %rdx,%r12
   15e9d:	55                   	push   %rbp
   15e9e:	53                   	push   %rbx
   15e9f:	48 83 ec 48          	sub    $0x48,%rsp
   15ea3:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   15ea7:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   15eab:	48 8b 05 9e 41 01 00 	mov    0x1419e(%rip),%rax        # 2a050 <__stack_chk_guard>
   15eb2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   15eb7:	31 c0                	xor    %eax,%eax
   15eb9:	4c 29 ea             	sub    %r13,%rdx
   15ebc:	48 83 fa 07          	cmp    $0x7,%rdx
   15ec0:	77 02                	ja     15ec4 <udp_rx+0x39>
   15ec2:	eb 10                	jmp    15ed4 <udp_rx+0x49>
   15ec4:	66 41 8b 45 04       	mov    0x4(%r13),%ax
   15ec9:	86 c4                	xchg   %al,%ah
   15ecb:	0f b7 e8             	movzwl %ax,%ebp
   15ece:	66 83 f8 07          	cmp    $0x7,%ax
   15ed2:	77 0b                	ja     15edf <udp_rx+0x54>
   15ed4:	41 bc 7e 9f f0 e3    	mov    $0xe3f09f7e,%r12d
   15eda:	e9 0c 01 00 00       	jmp    15feb <udp_rx+0x160>
   15edf:	48 39 d5             	cmp    %rdx,%rbp
   15ee2:	76 02                	jbe    15ee6 <udp_rx+0x5b>
   15ee4:	eb ee                	jmp    15ed4 <udp_rx+0x49>
   15ee6:	66 41 83 7d 06 00    	cmpw   $0x0,0x6(%r13)
   15eec:	48 89 cb             	mov    %rcx,%rbx
   15eef:	74 16                	je     15f07 <udp_rx+0x7c>
   15ef1:	41 0f b7 f8          	movzwl %r8w,%edi
   15ef5:	48 89 ea             	mov    %rbp,%rdx
   15ef8:	4c 89 ee             	mov    %r13,%rsi
   15efb:	e8 1e 15 00 00       	call   1741e <tcpip_continue_chksum>
   15f00:	66 85 c0             	test   %ax,%ax
   15f03:	74 02                	je     15f07 <udp_rx+0x7c>
   15f05:	eb cd                	jmp    15ed4 <udp_rx+0x49>
   15f07:	66 41 8b 45 00       	mov    0x0(%r13),%ax
   15f0c:	66 41 89 44 24 04    	mov    %ax,0x4(%r12)
   15f12:	66 45 8b 6d 02       	mov    0x2(%r13),%r13w
   15f17:	66 44 89 6b 04       	mov    %r13w,0x4(%rbx)
   15f1c:	48 8b 05 bd 15 01 00 	mov    0x115bd(%rip),%rax        # 274e0 <udp_conns>
   15f23:	4c 8d 78 f0          	lea    -0x10(%rax),%r15
   15f27:	48 8d 43 08          	lea    0x8(%rbx),%rax
   15f2b:	48 89 04 24          	mov    %rax,(%rsp)
   15f2f:	49 8d 47 10          	lea    0x10(%r15),%rax
   15f33:	48 8d 35 a6 15 01 00 	lea    0x115a6(%rip),%rsi        # 274e0 <udp_conns>
   15f3a:	48 39 f0             	cmp    %rsi,%rax
   15f3d:	74 5c                	je     15f9b <udp_rx+0x110>
   15f3f:	41 8b 47 40          	mov    0x40(%r15),%eax
   15f43:	66 39 03             	cmp    %ax,(%rbx)
   15f46:	74 05                	je     15f4d <udp_rx+0xc2>
   15f48:	66 85 c0             	test   %ax,%ax
   15f4b:	75 44                	jne    15f91 <udp_rx+0x106>
   15f4d:	41 8b 47 44          	mov    0x44(%r15),%eax
   15f51:	66 85 c0             	test   %ax,%ax
   15f54:	74 06                	je     15f5c <udp_rx+0xd1>
   15f56:	66 41 39 c5          	cmp    %ax,%r13w
   15f5a:	75 35                	jne    15f91 <udp_rx+0x106>
   15f5c:	48 8b 34 24          	mov    (%rsp),%rsi
   15f60:	49 8d 7f 48          	lea    0x48(%r15),%rdi
   15f64:	ba 18 00 00 00       	mov    $0x18,%edx
   15f69:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   15f6e:	e8 bd d9 ff ff       	call   13930 <memcmp>
   15f73:	85 c0                	test   %eax,%eax
   15f75:	74 27                	je     15f9e <udp_rx+0x113>
   15f77:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   15f7c:	ba 18 00 00 00       	mov    $0x18,%edx
   15f81:	48 8d 35 e0 c6 00 00 	lea    0xc6e0(%rip),%rsi        # 22668 <empty_sockaddr.0+0x8>
   15f88:	e8 a3 d9 ff ff       	call   13930 <memcmp>
   15f8d:	85 c0                	test   %eax,%eax
   15f8f:	74 0d                	je     15f9e <udp_rx+0x113>
   15f91:	4d 8b 47 10          	mov    0x10(%r15),%r8
   15f95:	4d 8d 78 f0          	lea    -0x10(%r8),%r15
   15f99:	eb 94                	jmp    15f2f <udp_rx+0xa4>
   15f9b:	45 31 ff             	xor    %r15d,%r15d
   15f9e:	49 8b 46 18          	mov    0x18(%r14),%rax
   15fa2:	48 01 c5             	add    %rax,%rbp
   15fa5:	48 83 c0 08          	add    $0x8,%rax
   15fa9:	49 89 6e 20          	mov    %rbp,0x20(%r14)
   15fad:	49 89 46 18          	mov    %rax,0x18(%r14)
   15fb1:	4d 85 ff             	test   %r15,%r15
   15fb4:	75 08                	jne    15fbe <udp_rx+0x133>
   15fb6:	41 bc 6d 9f f0 c7    	mov    $0xc7f09f6d,%r12d
   15fbc:	eb 2d                	jmp    15feb <udp_rx+0x160>
   15fbe:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   15fc3:	b9 28 00 00 00       	mov    $0x28,%ecx
   15fc8:	31 c0                	xor    %eax,%eax
   15fca:	48 89 d7             	mov    %rdx,%rdi
   15fcd:	f3 aa                	rep stos %al,%es:(%rdi)
   15fcf:	4c 89 f6             	mov    %r14,%rsi
   15fd2:	49 8d 7f 20          	lea    0x20(%r15),%rdi
   15fd6:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   15fdb:	45 31 f6             	xor    %r14d,%r14d
   15fde:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   15fe3:	e8 0d 17 00 00       	call   176f5 <xfer_deliver>
   15fe8:	41 89 c4             	mov    %eax,%r12d
   15feb:	4c 89 f7             	mov    %r14,%rdi
   15fee:	e8 73 3d ff ff       	call   9d66 <free_iob>
   15ff3:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15ff8:	48 2b 05 51 40 01 00 	sub    0x14051(%rip),%rax        # 2a050 <__stack_chk_guard>
   15fff:	74 05                	je     16006 <udp_rx+0x17b>
   16001:	e8 5a ca fe ff       	call   2a60 <__stack_chk_fail>
   16006:	48 83 c4 48          	add    $0x48,%rsp
   1600a:	44 89 e0             	mov    %r12d,%eax
   1600d:	5b                   	pop    %rbx
   1600e:	5d                   	pop    %rbp
   1600f:	41 5c                	pop    %r12
   16011:	41 5d                	pop    %r13
   16013:	41 5e                	pop    %r14
   16015:	41 5f                	pop    %r15
   16017:	c3                   	ret    

0000000000016018 <udp_close>:
   16018:	f3 0f 1e fa          	endbr64 
   1601c:	55                   	push   %rbp
   1601d:	48 89 fd             	mov    %rdi,%rbp
   16020:	48 8d 7f 20          	lea    0x20(%rdi),%rdi
   16024:	e8 76 39 ff ff       	call   999f <intf_shutdown>
   16029:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1602d:	48 8b 45 18          	mov    0x18(%rbp),%rax
   16031:	48 89 ef             	mov    %rbp,%rdi
   16034:	48 89 42 08          	mov    %rax,0x8(%rdx)
   16038:	48 89 10             	mov    %rdx,(%rax)
   1603b:	5d                   	pop    %rbp
   1603c:	e9 d9 9e ff ff       	jmp    ff1a <ref_decrement>

0000000000016041 <udp_xfer_alloc_iob>:
   16041:	f3 0f 1e fa          	endbr64 
   16045:	51                   	push   %rcx
   16046:	48 8d 7e 68          	lea    0x68(%rsi),%rdi
   1604a:	e8 fd 3c ff ff       	call   9d4c <alloc_iob>
   1604f:	48 85 c0             	test   %rax,%rax
   16052:	74 0a                	je     1605e <udp_xfer_alloc_iob+0x1d>
   16054:	48 83 40 18 68       	addq   $0x68,0x18(%rax)
   16059:	48 83 40 20 68       	addq   $0x68,0x20(%rax)
   1605e:	5a                   	pop    %rdx
   1605f:	c3                   	ret    

0000000000016060 <udp_xfer_deliver>:
   16060:	f3 0f 1e fa          	endbr64 
   16064:	41 57                	push   %r15
   16066:	41 56                	push   %r14
   16068:	41 55                	push   %r13
   1606a:	55                   	push   %rbp
   1606b:	48 89 f5             	mov    %rsi,%rbp
   1606e:	be 68 00 00 00       	mov    $0x68,%esi
   16073:	53                   	push   %rbx
   16074:	48 89 fb             	mov    %rdi,%rbx
   16077:	48 89 ef             	mov    %rbp,%rdi
   1607a:	48 83 ec 10          	sub    $0x10,%rsp
   1607e:	4c 8b 72 20          	mov    0x20(%rdx),%r14
   16082:	4c 8b 7a 18          	mov    0x18(%rdx),%r15
   16086:	4c 8b 6a 10          	mov    0x10(%rdx),%r13
   1608a:	e8 10 3d ff ff       	call   9d9f <iob_ensure_headroom>
   1608f:	85 c0                	test   %eax,%eax
   16091:	75 76                	jne    16109 <udp_xfer_deliver+0xa9>
   16093:	4d 85 ed             	test   %r13,%r13
   16096:	75 04                	jne    1609c <udp_xfer_deliver+0x3c>
   16098:	4c 8d 6b 40          	lea    0x40(%rbx),%r13
   1609c:	4d 85 ff             	test   %r15,%r15
   1609f:	75 04                	jne    160a5 <udp_xfer_deliver+0x45>
   160a1:	4c 8d 7b 60          	lea    0x60(%rbx),%r15
   160a5:	48 8b 5d 18          	mov    0x18(%rbp),%rbx
   160a9:	48 8b 75 20          	mov    0x20(%rbp),%rsi
   160ad:	48 8d 7b f8          	lea    -0x8(%rbx),%rdi
   160b1:	48 89 7d 18          	mov    %rdi,0x18(%rbp)
   160b5:	66 41 8b 47 04       	mov    0x4(%r15),%ax
   160ba:	48 29 fe             	sub    %rdi,%rsi
   160bd:	66 89 43 fa          	mov    %ax,-0x6(%rbx)
   160c1:	66 41 8b 45 04       	mov    0x4(%r13),%ax
   160c6:	66 c7 43 fe 00 00    	movw   $0x0,-0x2(%rbx)
   160cc:	66 89 43 f8          	mov    %ax,-0x8(%rbx)
   160d0:	89 f0                	mov    %esi,%eax
   160d2:	86 c4                	xchg   %al,%ah
   160d4:	66 89 43 fc          	mov    %ax,-0x4(%rbx)
   160d8:	e8 e8 ee ff ff       	call   14fc5 <tcpip_chksum>
   160dd:	4c 8d 4b fe          	lea    -0x2(%rbx),%r9
   160e1:	4d 89 f0             	mov    %r14,%r8
   160e4:	4c 89 f9             	mov    %r15,%rcx
   160e7:	66 89 43 fe          	mov    %ax,-0x2(%rbx)
   160eb:	48 83 c4 10          	add    $0x10,%rsp
   160ef:	4c 89 ea             	mov    %r13,%rdx
   160f2:	48 89 ef             	mov    %rbp,%rdi
   160f5:	5b                   	pop    %rbx
   160f6:	48 8d 35 bb 39 01 00 	lea    0x139bb(%rip),%rsi        # 29ab8 <udp_protocol>
   160fd:	5d                   	pop    %rbp
   160fe:	41 5d                	pop    %r13
   16100:	41 5e                	pop    %r14
   16102:	41 5f                	pop    %r15
   16104:	e9 24 ee ff ff       	jmp    14f2d <tcpip_tx>
   16109:	48 89 ef             	mov    %rbp,%rdi
   1610c:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   16110:	e8 51 3c ff ff       	call   9d66 <free_iob>
   16115:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   16119:	48 83 c4 10          	add    $0x10,%rsp
   1611d:	5b                   	pop    %rbx
   1611e:	5d                   	pop    %rbp
   1611f:	41 5d                	pop    %r13
   16121:	41 5e                	pop    %r14
   16123:	41 5f                	pop    %r15
   16125:	c3                   	ret    

0000000000016126 <udp_open_common>:
   16126:	41 56                	push   %r14
   16128:	41 55                	push   %r13
   1612a:	49 89 fd             	mov    %rdi,%r13
   1612d:	bf 80 00 00 00       	mov    $0x80,%edi
   16132:	41 54                	push   %r12
   16134:	49 89 d4             	mov    %rdx,%r12
   16137:	55                   	push   %rbp
   16138:	53                   	push   %rbx
   16139:	89 cb                	mov    %ecx,%ebx
   1613b:	48 83 ec 10          	sub    $0x10,%rsp
   1613f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   16144:	e8 ed 65 ff ff       	call   c736 <zalloc>
   16149:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1614e:	48 85 c0             	test   %rax,%rax
   16151:	75 0a                	jne    1615d <udp_open_common+0x37>
   16153:	b8 77 9f f0 ce       	mov    $0xcef09f77,%eax
   16158:	e9 9a 00 00 00       	jmp    161f7 <udp_open_common+0xd1>
   1615d:	48 89 c5             	mov    %rax,%rbp
   16160:	4c 8d 70 20          	lea    0x20(%rax),%r14
   16164:	48 8d 05 55 03 01 00 	lea    0x10355(%rip),%rax        # 264c0 <null_intf>
   1616b:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1616f:	48 8d 05 4a 13 01 00 	lea    0x1134a(%rip),%rax        # 274c0 <udp_xfer_desc>
   16176:	48 89 6d 28          	mov    %rbp,0x28(%rbp)
   1617a:	48 89 45 30          	mov    %rax,0x30(%rbp)
   1617e:	48 89 45 38          	mov    %rax,0x38(%rbp)
   16182:	48 85 f6             	test   %rsi,%rsi
   16185:	74 0e                	je     16195 <udp_open_common+0x6f>
   16187:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   1618b:	ba 20 00 00 00       	mov    $0x20,%edx
   16190:	e8 54 12 00 00       	call   173e9 <__memcpy>
   16195:	4d 85 e4             	test   %r12,%r12
   16198:	74 11                	je     161ab <udp_open_common+0x85>
   1619a:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
   1619e:	ba 20 00 00 00       	mov    $0x20,%edx
   161a3:	4c 89 e6             	mov    %r12,%rsi
   161a6:	e8 3e 12 00 00       	call   173e9 <__memcpy>
   161ab:	85 db                	test   %ebx,%ebx
   161ad:	75 2b                	jne    161da <udp_open_common+0xb4>
   161af:	48 8d 35 59 00 00 00 	lea    0x59(%rip),%rsi        # 1620f <udp_port_available>
   161b6:	4c 89 e7             	mov    %r12,%rdi
   161b9:	e8 18 ee ff ff       	call   14fd6 <tcpip_bind>
   161be:	85 c0                	test   %eax,%eax
   161c0:	79 12                	jns    161d4 <udp_open_common+0xae>
   161c2:	48 89 ef             	mov    %rbp,%rdi
   161c5:	89 44 24 08          	mov    %eax,0x8(%rsp)
   161c9:	e8 4c 9d ff ff       	call   ff1a <ref_decrement>
   161ce:	8b 44 24 08          	mov    0x8(%rsp),%eax
   161d2:	eb 23                	jmp    161f7 <udp_open_common+0xd1>
   161d4:	86 c4                	xchg   %al,%ah
   161d6:	66 89 45 44          	mov    %ax,0x44(%rbp)
   161da:	4c 89 ee             	mov    %r13,%rsi
   161dd:	4c 89 f7             	mov    %r14,%rdi
   161e0:	e8 5c 36 ff ff       	call   9841 <intf_plug_plug>
   161e5:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   161e9:	48 8d 35 f0 12 01 00 	lea    0x112f0(%rip),%rsi        # 274e0 <udp_conns>
   161f0:	e8 9c 5f ff ff       	call   c191 <extern_list_add>
   161f5:	31 c0                	xor    %eax,%eax
   161f7:	48 83 c4 10          	add    $0x10,%rsp
   161fb:	5b                   	pop    %rbx
   161fc:	5d                   	pop    %rbp
   161fd:	41 5c                	pop    %r12
   161ff:	41 5d                	pop    %r13
   16201:	41 5e                	pop    %r14
   16203:	c3                   	ret    

0000000000016204 <udp_open>:
   16204:	f3 0f 1e fa          	endbr64 
   16208:	31 c9                	xor    %ecx,%ecx
   1620a:	e9 17 ff ff ff       	jmp    16126 <udp_open_common>

000000000001620f <udp_port_available>:
   1620f:	f3 0f 1e fa          	endbr64 
   16213:	48 8b 35 c6 12 01 00 	mov    0x112c6(%rip),%rsi        # 274e0 <udp_conns>
   1621a:	89 f8                	mov    %edi,%eax
   1621c:	89 f9                	mov    %edi,%ecx
   1621e:	86 cd                	xchg   %cl,%ch
   16220:	48 8d 56 f0          	lea    -0x10(%rsi),%rdx
   16224:	48 8d 35 b5 12 01 00 	lea    0x112b5(%rip),%rsi        # 274e0 <udp_conns>
   1622b:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
   1622f:	48 39 f7             	cmp    %rsi,%rdi
   16232:	74 16                	je     1624a <udp_port_available+0x3b>
   16234:	66 3b 4a 44          	cmp    0x44(%rdx),%cx
   16238:	75 06                	jne    16240 <udp_port_available+0x31>
   1623a:	b8 6c 9f f0 fc       	mov    $0xfcf09f6c,%eax
   1623f:	c3                   	ret    
   16240:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   16244:	48 83 ea 10          	sub    $0x10,%rdx
   16248:	eb e1                	jmp    1622b <udp_port_available+0x1c>
   1624a:	c3                   	ret    

000000000001624b <udp_open_uri>:
   1624b:	f3 0f 1e fa          	endbr64 
   1624f:	41 54                	push   %r12
   16251:	55                   	push   %rbp
   16252:	53                   	push   %rbx
   16253:	48 83 ec 30          	sub    $0x30,%rsp
   16257:	48 8b 05 f2 3d 01 00 	mov    0x13df2(%rip),%rax        # 2a050 <__stack_chk_guard>
   1625e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16263:	31 c0                	xor    %eax,%eax
   16265:	48 83 7e 30 00       	cmpq   $0x0,0x30(%rsi)
   1626a:	75 07                	jne    16273 <udp_open_uri+0x28>
   1626c:	b8 7e 9f f0 e3       	mov    $0xe3f09f7e,%eax
   16271:	eb 40                	jmp    162b3 <udp_open_uri+0x68>
   16273:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   16278:	48 89 fd             	mov    %rdi,%rbp
   1627b:	48 89 f3             	mov    %rsi,%rbx
   1627e:	b9 20 00 00 00       	mov    $0x20,%ecx
   16283:	4c 89 e7             	mov    %r12,%rdi
   16286:	31 c0                	xor    %eax,%eax
   16288:	f3 aa                	rep stos %al,%es:(%rdi)
   1628a:	31 f6                	xor    %esi,%esi
   1628c:	48 89 df             	mov    %rbx,%rdi
   1628f:	e8 b2 04 00 00       	call   16746 <uri_port>
   16294:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   16298:	45 31 c0             	xor    %r8d,%r8d
   1629b:	4c 89 e2             	mov    %r12,%rdx
   1629e:	8b 35 9c e3 00 00    	mov    0xe39c(%rip),%esi        # 24640 <udp_sock_dgram>
   162a4:	48 89 ef             	mov    %rbp,%rdi
   162a7:	86 c4                	xchg   %al,%ah
   162a9:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
   162ae:	e8 b0 9f ff ff       	call   10263 <xfer_open_named_socket>
   162b3:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   162b8:	48 2b 15 91 3d 01 00 	sub    0x13d91(%rip),%rdx        # 2a050 <__stack_chk_guard>
   162bf:	74 05                	je     162c6 <udp_open_uri+0x7b>
   162c1:	e8 9a c7 fe ff       	call   2a60 <__stack_chk_fail>
   162c6:	48 83 c4 30          	add    $0x30,%rsp
   162ca:	5b                   	pop    %rbx
   162cb:	5d                   	pop    %rbp
   162cc:	41 5c                	pop    %r12
   162ce:	c3                   	ret    

00000000000162cf <udp_open_promisc>:
   162cf:	f3 0f 1e fa          	endbr64 
   162d3:	b9 01 00 00 00       	mov    $0x1,%ecx
   162d8:	31 d2                	xor    %edx,%edx
   162da:	31 f6                	xor    %esi,%esi
   162dc:	e9 45 fe ff ff       	jmp    16126 <udp_open_common>

00000000000162e1 <uri_free>:
   162e1:	f3 0f 1e fa          	endbr64 
   162e5:	55                   	push   %rbp
   162e6:	48 89 fd             	mov    %rdi,%rbp
   162e9:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
   162ed:	e8 28 9c ff ff       	call   ff1a <ref_decrement>
   162f2:	48 89 ef             	mov    %rbp,%rdi
   162f5:	5d                   	pop    %rbp
   162f6:	e9 27 64 ff ff       	jmp    c722 <free>

00000000000162fb <uri_copy_fields>:
   162fb:	41 57                	push   %r15
   162fd:	4c 8d 7e 60          	lea    0x60(%rsi),%r15
   16301:	41 56                	push   %r14
   16303:	41 be 60 00 00 00    	mov    $0x60,%r14d
   16309:	41 55                	push   %r13
   1630b:	49 89 fd             	mov    %rdi,%r13
   1630e:	41 54                	push   %r12
   16310:	55                   	push   %rbp
   16311:	48 89 f5             	mov    %rsi,%rbp
   16314:	53                   	push   %rbx
   16315:	bb 10 00 00 00       	mov    $0x10,%ebx
   1631a:	48 83 ec 18          	sub    $0x18,%rsp
   1631e:	49 8b 74 1d 00       	mov    0x0(%r13,%rbx,1),%rsi
   16323:	48 85 f6             	test   %rsi,%rsi
   16326:	74 31                	je     16359 <uri_copy_fields+0x5e>
   16328:	48 89 f7             	mov    %rsi,%rdi
   1632b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   16330:	e8 e1 d6 ff ff       	call   13a16 <strlen>
   16335:	4c 8d 60 01          	lea    0x1(%rax),%r12
   16339:	4d 01 e6             	add    %r12,%r14
   1633c:	48 85 ed             	test   %rbp,%rbp
   1633f:	74 18                	je     16359 <uri_copy_fields+0x5e>
   16341:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   16346:	4c 89 ff             	mov    %r15,%rdi
   16349:	4c 89 e2             	mov    %r12,%rdx
   1634c:	e8 98 10 00 00       	call   173e9 <__memcpy>
   16351:	4c 89 7c 1d 00       	mov    %r15,0x0(%rbp,%rbx,1)
   16356:	4d 01 e7             	add    %r12,%r15
   16359:	48 83 c3 08          	add    $0x8,%rbx
   1635d:	48 83 fb 58          	cmp    $0x58,%rbx
   16361:	75 bb                	jne    1631e <uri_copy_fields+0x23>
   16363:	48 83 c4 18          	add    $0x18,%rsp
   16367:	4c 89 f0             	mov    %r14,%rax
   1636a:	5b                   	pop    %rbx
   1636b:	5d                   	pop    %rbp
   1636c:	41 5c                	pop    %r12
   1636e:	41 5d                	pop    %r13
   16370:	41 5e                	pop    %r14
   16372:	41 5f                	pop    %r15
   16374:	c3                   	ret    

0000000000016375 <uri_decode>:
   16375:	f3 0f 1e fa          	endbr64 
   16379:	41 57                	push   %r15
   1637b:	4c 8d 05 7f d3 00 00 	lea    0xd37f(%rip),%r8        # 23701 <.LC0>
   16382:	49 89 f7             	mov    %rsi,%r15
   16385:	41 56                	push   %r14
   16387:	45 31 f6             	xor    %r14d,%r14d
   1638a:	41 55                	push   %r13
   1638c:	41 54                	push   %r12
   1638e:	55                   	push   %rbp
   1638f:	53                   	push   %rbx
   16390:	48 83 ec 38          	sub    $0x38,%rsp
   16394:	48 8b 05 b5 3c 01 00 	mov    0x13cb5(%rip),%rax        # 2a050 <__stack_chk_guard>
   1639b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   163a0:	31 c0                	xor    %eax,%eax
   163a2:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   163a7:	8a 1f                	mov    (%rdi),%bl
   163a9:	48 8d 6f 01          	lea    0x1(%rdi),%rbp
   163ad:	45 89 f4             	mov    %r14d,%r12d
   163b0:	84 db                	test   %bl,%bl
   163b2:	74 61                	je     16415 <uri_decode+0xa0>
   163b4:	80 fb 25             	cmp    $0x25,%bl
   163b7:	75 49                	jne    16402 <uri_decode+0x8d>
   163b9:	4c 8d 6c 24 25       	lea    0x25(%rsp),%r13
   163be:	4c 89 c2             	mov    %r8,%rdx
   163c1:	48 89 e9             	mov    %rbp,%rcx
   163c4:	be 03 00 00 00       	mov    $0x3,%esi
   163c9:	4c 89 ef             	mov    %r13,%rdi
   163cc:	31 c0                	xor    %eax,%eax
   163ce:	e8 8a 0d 00 00       	call   1715d <snprintf>
   163d3:	ba 10 00 00 00       	mov    $0x10,%edx
   163d8:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   163dd:	4c 89 ef             	mov    %r13,%rdi
   163e0:	e8 72 d7 ff ff       	call   13b57 <strtoul>
   163e5:	4c 8d 05 15 d3 00 00 	lea    0xd315(%rip),%r8        # 23701 <.LC0>
   163ec:	49 89 c1             	mov    %rax,%r9
   163ef:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   163f4:	4c 29 e8             	sub    %r13,%rax
   163f7:	89 c2                	mov    %eax,%edx
   163f9:	48 01 d5             	add    %rdx,%rbp
   163fc:	85 c0                	test   %eax,%eax
   163fe:	41 0f 45 d9          	cmovne %r9d,%ebx
   16402:	4c 3b 64 24 08       	cmp    0x8(%rsp),%r12
   16407:	73 04                	jae    1640d <uri_decode+0x98>
   16409:	43 88 1c 27          	mov    %bl,(%r15,%r12,1)
   1640d:	41 ff c6             	inc    %r14d
   16410:	48 89 ef             	mov    %rbp,%rdi
   16413:	eb 92                	jmp    163a7 <uri_decode+0x32>
   16415:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1641a:	48 2b 05 2f 3c 01 00 	sub    0x13c2f(%rip),%rax        # 2a050 <__stack_chk_guard>
   16421:	74 05                	je     16428 <uri_decode+0xb3>
   16423:	e8 38 c6 fe ff       	call   2a60 <__stack_chk_fail>
   16428:	48 83 c4 38          	add    $0x38,%rsp
   1642c:	4c 89 e0             	mov    %r12,%rax
   1642f:	5b                   	pop    %rbx
   16430:	5d                   	pop    %rbp
   16431:	41 5c                	pop    %r12
   16433:	41 5d                	pop    %r13
   16435:	41 5e                	pop    %r14
   16437:	41 5f                	pop    %r15
   16439:	c3                   	ret    

000000000001643a <uri_encode>:
   1643a:	f3 0f 1e fa          	endbr64 
   1643e:	41 57                	push   %r15
   16440:	41 56                	push   %r14
   16442:	41 89 fe             	mov    %edi,%r14d
   16445:	41 55                	push   %r13
   16447:	41 54                	push   %r12
   16449:	49 89 cc             	mov    %rcx,%r12
   1644c:	55                   	push   %rbp
   1644d:	48 89 f5             	mov    %rsi,%rbp
   16450:	53                   	push   %rbx
   16451:	4c 89 c3             	mov    %r8,%rbx
   16454:	48 83 ec 18          	sub    $0x18,%rsp
   16458:	4d 85 c0             	test   %r8,%r8
   1645b:	7e 03                	jle    16460 <uri_encode+0x26>
   1645d:	c6 01 00             	movb   $0x0,(%rcx)
   16460:	48 8d 44 15 00       	lea    0x0(%rbp,%rdx,1),%rax
   16465:	49 89 dd             	mov    %rbx,%r13
   16468:	4c 8d 3d 4d d9 00 00 	lea    0xd94d(%rip),%r15        # 23dbc <.LC2>
   1646f:	48 89 04 24          	mov    %rax,(%rsp)
   16473:	48 3b 2c 24          	cmp    (%rsp),%rbp
   16477:	74 5f                	je     164d8 <uri_encode+0x9e>
   16479:	0f be 4d 00          	movsbl 0x0(%rbp),%ecx
   1647d:	48 ff c5             	inc    %rbp
   16480:	8d 51 df             	lea    -0x21(%rcx),%edx
   16483:	80 fa 5d             	cmp    $0x5d,%dl
   16486:	77 36                	ja     164be <uri_encode+0x84>
   16488:	80 f9 25             	cmp    $0x25,%cl
   1648b:	74 31                	je     164be <uri_encode+0x84>
   1648d:	44 89 f0             	mov    %r14d,%eax
   16490:	48 8d 15 69 10 01 00 	lea    0x11069(%rip),%rdx        # 27500 <escaped.1>
   16497:	89 ce                	mov    %ecx,%esi
   16499:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   1649d:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
   164a1:	e8 7d d5 ff ff       	call   13a23 <strchr>
   164a6:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   164aa:	48 85 c0             	test   %rax,%rax
   164ad:	75 0f                	jne    164be <uri_encode+0x84>
   164af:	48 8d 15 15 cf 00 00 	lea    0xcf15(%rip),%rdx        # 233cb <.LC1>
   164b6:	4c 89 ee             	mov    %r13,%rsi
   164b9:	4c 89 e7             	mov    %r12,%rdi
   164bc:	eb 0b                	jmp    164c9 <uri_encode+0x8f>
   164be:	4c 89 fa             	mov    %r15,%rdx
   164c1:	4c 89 ee             	mov    %r13,%rsi
   164c4:	4c 89 e7             	mov    %r12,%rdi
   164c7:	31 c0                	xor    %eax,%eax
   164c9:	e8 01 0d 00 00       	call   171cf <ssnprintf>
   164ce:	48 98                	cltq   
   164d0:	49 01 c4             	add    %rax,%r12
   164d3:	49 29 c5             	sub    %rax,%r13
   164d6:	eb 9b                	jmp    16473 <uri_encode+0x39>
   164d8:	48 83 c4 18          	add    $0x18,%rsp
   164dc:	48 89 d8             	mov    %rbx,%rax
   164df:	4c 29 e8             	sub    %r13,%rax
   164e2:	5b                   	pop    %rbx
   164e3:	5d                   	pop    %rbp
   164e4:	41 5c                	pop    %r12
   164e6:	41 5d                	pop    %r13
   164e8:	41 5e                	pop    %r14
   164ea:	41 5f                	pop    %r15
   164ec:	c3                   	ret    

00000000000164ed <uri_encode_string>:
   164ed:	f3 0f 1e fa          	endbr64 
   164f1:	41 55                	push   %r13
   164f3:	49 89 d5             	mov    %rdx,%r13
   164f6:	41 54                	push   %r12
   164f8:	41 89 fc             	mov    %edi,%r12d
   164fb:	48 89 f7             	mov    %rsi,%rdi
   164fe:	48 83 ec 18          	sub    $0x18,%rsp
   16502:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   16507:	48 89 34 24          	mov    %rsi,(%rsp)
   1650b:	e8 06 d5 ff ff       	call   13a16 <strlen>
   16510:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   16515:	4c 89 e9             	mov    %r13,%rcx
   16518:	44 89 e7             	mov    %r12d,%edi
   1651b:	48 8b 34 24          	mov    (%rsp),%rsi
   1651f:	48 83 c4 18          	add    $0x18,%rsp
   16523:	48 89 c2             	mov    %rax,%rdx
   16526:	41 5c                	pop    %r12
   16528:	41 5d                	pop    %r13
   1652a:	e9 0b ff ff ff       	jmp    1643a <uri_encode>

000000000001652f <parse_uri>:
   1652f:	f3 0f 1e fa          	endbr64 
   16533:	41 55                	push   %r13
   16535:	41 54                	push   %r12
   16537:	55                   	push   %rbp
   16538:	48 89 fd             	mov    %rdi,%rbp
   1653b:	53                   	push   %rbx
   1653c:	51                   	push   %rcx
   1653d:	e8 d4 d4 ff ff       	call   13a16 <strlen>
   16542:	48 8d 78 61          	lea    0x61(%rax),%rdi
   16546:	4c 8d 68 01          	lea    0x1(%rax),%r13
   1654a:	e8 e7 61 ff ff       	call   c736 <zalloc>
   1654f:	49 89 c4             	mov    %rax,%r12
   16552:	48 85 c0             	test   %rax,%rax
   16555:	0f 84 e0 01 00 00    	je     1673b <parse_uri+0x20c>
   1655b:	49 8d 5c 24 60       	lea    0x60(%r12),%rbx
   16560:	48 8d 05 7a fd ff ff 	lea    -0x286(%rip),%rax        # 162e1 <uri_free>
   16567:	48 89 ee             	mov    %rbp,%rsi
   1656a:	4c 89 ea             	mov    %r13,%rdx
   1656d:	48 89 df             	mov    %rbx,%rdi
   16570:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   16575:	e8 6f 0e 00 00       	call   173e9 <__memcpy>
   1657a:	48 8d 35 42 d8 00 00 	lea    0xd842(%rip),%rsi        # 23dc3 <.LC3>
   16581:	48 89 df             	mov    %rbx,%rdi
   16584:	e8 d7 d4 ff ff       	call   13a60 <strstr>
   16589:	48 85 c0             	test   %rax,%rax
   1658c:	74 2d                	je     165bb <parse_uri+0x8c>
   1658e:	31 ff                	xor    %edi,%edi
   16590:	80 78 08 00          	cmpb   $0x0,0x8(%rax)
   16594:	c6 00 00             	movb   $0x0,(%rax)
   16597:	74 04                	je     1659d <parse_uri+0x6e>
   16599:	48 8d 78 09          	lea    0x9(%rax),%rdi
   1659d:	e8 ca 9e 00 00       	call   2046c <find_parameters>
   165a2:	48 85 c0             	test   %rax,%rax
   165a5:	74 14                	je     165bb <parse_uri+0x8c>
   165a7:	48 8b 48 10          	mov    0x10(%rax),%rcx
   165ab:	48 8b 50 18          	mov    0x18(%rax),%rdx
   165af:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   165b3:	48 89 0a             	mov    %rcx,(%rdx)
   165b6:	49 89 44 24 58       	mov    %rax,0x58(%r12)
   165bb:	be 23 00 00 00       	mov    $0x23,%esi
   165c0:	48 89 df             	mov    %rbx,%rdi
   165c3:	e8 5b d4 ff ff       	call   13a23 <strchr>
   165c8:	48 85 c0             	test   %rax,%rax
   165cb:	74 0b                	je     165d8 <parse_uri+0xa9>
   165cd:	c6 00 00             	movb   $0x0,(%rax)
   165d0:	48 ff c0             	inc    %rax
   165d3:	49 89 44 24 50       	mov    %rax,0x50(%r12)
   165d8:	be 3a 00 00 00       	mov    $0x3a,%esi
   165dd:	48 89 df             	mov    %rbx,%rdi
   165e0:	e8 3e d4 ff ff       	call   13a23 <strchr>
   165e5:	48 85 c0             	test   %rax,%rax
   165e8:	74 1c                	je     16606 <parse_uri+0xd7>
   165ea:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
   165ef:	80 78 01 2f          	cmpb   $0x2f,0x1(%rax)
   165f3:	48 8d 58 01          	lea    0x1(%rax),%rbx
   165f7:	c6 00 00             	movb   $0x0,(%rax)
   165fa:	74 0a                	je     16606 <parse_uri+0xd7>
   165fc:	49 89 5c 24 18       	mov    %rbx,0x18(%r12)
   16601:	e9 05 01 00 00       	jmp    1670b <parse_uri+0x1dc>
   16606:	be 3f 00 00 00       	mov    $0x3f,%esi
   1660b:	48 89 df             	mov    %rbx,%rdi
   1660e:	e8 10 d4 ff ff       	call   13a23 <strchr>
   16613:	48 85 c0             	test   %rax,%rax
   16616:	74 0b                	je     16623 <parse_uri+0xf4>
   16618:	c6 00 00             	movb   $0x0,(%rax)
   1661b:	48 ff c0             	inc    %rax
   1661e:	49 89 44 24 48       	mov    %rax,0x48(%r12)
   16623:	80 3b 00             	cmpb   $0x0,(%rbx)
   16626:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1662b:	0f 84 da 00 00 00    	je     1670b <parse_uri+0x1dc>
   16631:	48 85 c0             	test   %rax,%rax
   16634:	74 54                	je     1668a <parse_uri+0x15b>
   16636:	ba 02 00 00 00       	mov    $0x2,%edx
   1663b:	48 8d 35 8a d7 00 00 	lea    0xd78a(%rip),%rsi        # 23dcc <.LC4>
   16642:	48 89 df             	mov    %rbx,%rdi
   16645:	e8 49 d3 ff ff       	call   13993 <strncmp>
   1664a:	85 c0                	test   %eax,%eax
   1664c:	75 3c                	jne    1668a <parse_uri+0x15b>
   1664e:	48 8d 6b 02          	lea    0x2(%rbx),%rbp
   16652:	be 2f 00 00 00       	mov    $0x2f,%esi
   16657:	48 89 ef             	mov    %rbp,%rdi
   1665a:	e8 c4 d3 ff ff       	call   13a23 <strchr>
   1665f:	49 89 c5             	mov    %rax,%r13
   16662:	48 85 c0             	test   %rax,%rax
   16665:	74 2a                	je     16691 <parse_uri+0x162>
   16667:	48 ff c3             	inc    %rbx
   1666a:	48 89 c2             	mov    %rax,%rdx
   1666d:	48 89 ee             	mov    %rbp,%rsi
   16670:	49 89 44 24 40       	mov    %rax,0x40(%r12)
   16675:	48 29 ea             	sub    %rbp,%rdx
   16678:	48 89 df             	mov    %rbx,%rdi
   1667b:	48 89 dd             	mov    %rbx,%rbp
   1667e:	e8 66 0d 00 00       	call   173e9 <__memcpy>
   16683:	41 c6 45 ff 00       	movb   $0x0,-0x1(%r13)
   16688:	eb 07                	jmp    16691 <parse_uri+0x162>
   1668a:	49 89 5c 24 40       	mov    %rbx,0x40(%r12)
   1668f:	eb 7a                	jmp    1670b <parse_uri+0x1dc>
   16691:	be 40 00 00 00       	mov    $0x40,%esi
   16696:	48 89 ef             	mov    %rbp,%rdi
   16699:	e8 85 d3 ff ff       	call   13a23 <strchr>
   1669e:	48 85 c0             	test   %rax,%rax
   166a1:	74 2f                	je     166d2 <parse_uri+0x1a3>
   166a3:	c6 00 00             	movb   $0x0,(%rax)
   166a6:	be 3a 00 00 00       	mov    $0x3a,%esi
   166ab:	48 ff c0             	inc    %rax
   166ae:	48 89 ef             	mov    %rbp,%rdi
   166b1:	49 89 44 24 30       	mov    %rax,0x30(%r12)
   166b6:	49 89 6c 24 20       	mov    %rbp,0x20(%r12)
   166bb:	e8 63 d3 ff ff       	call   13a23 <strchr>
   166c0:	48 85 c0             	test   %rax,%rax
   166c3:	74 12                	je     166d7 <parse_uri+0x1a8>
   166c5:	c6 00 00             	movb   $0x0,(%rax)
   166c8:	48 ff c0             	inc    %rax
   166cb:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   166d0:	eb 05                	jmp    166d7 <parse_uri+0x1a8>
   166d2:	49 89 6c 24 30       	mov    %rbp,0x30(%r12)
   166d7:	49 8b 6c 24 30       	mov    0x30(%r12),%rbp
   166dc:	be 3a 00 00 00       	mov    $0x3a,%esi
   166e1:	48 89 ef             	mov    %rbp,%rdi
   166e4:	e8 54 d3 ff ff       	call   13a3d <strrchr>
   166e9:	48 89 c3             	mov    %rax,%rbx
   166ec:	48 85 c0             	test   %rax,%rax
   166ef:	74 1a                	je     1670b <parse_uri+0x1dc>
   166f1:	48 89 ef             	mov    %rbp,%rdi
   166f4:	e8 1d d3 ff ff       	call   13a16 <strlen>
   166f9:	80 7c 05 ff 5d       	cmpb   $0x5d,-0x1(%rbp,%rax,1)
   166fe:	74 0b                	je     1670b <parse_uri+0x1dc>
   16700:	c6 03 00             	movb   $0x0,(%rbx)
   16703:	48 ff c3             	inc    %rbx
   16706:	49 89 5c 24 38       	mov    %rbx,0x38(%r12)
   1670b:	31 ed                	xor    %ebp,%ebp
   1670d:	49 8b 5c 2c 10       	mov    0x10(%r12,%rbp,1),%rbx
   16712:	48 85 db             	test   %rbx,%rbx
   16715:	74 1a                	je     16731 <parse_uri+0x202>
   16717:	48 89 df             	mov    %rbx,%rdi
   1671a:	e8 f7 d2 ff ff       	call   13a16 <strlen>
   1671f:	48 89 de             	mov    %rbx,%rsi
   16722:	48 89 df             	mov    %rbx,%rdi
   16725:	48 89 c2             	mov    %rax,%rdx
   16728:	e8 48 fc ff ff       	call   16375 <uri_decode>
   1672d:	c6 04 03 00          	movb   $0x0,(%rbx,%rax,1)
   16731:	48 83 c5 08          	add    $0x8,%rbp
   16735:	48 83 fd 48          	cmp    $0x48,%rbp
   16739:	75 d2                	jne    1670d <parse_uri+0x1de>
   1673b:	5a                   	pop    %rdx
   1673c:	4c 89 e0             	mov    %r12,%rax
   1673f:	5b                   	pop    %rbx
   16740:	5d                   	pop    %rbp
   16741:	41 5c                	pop    %r12
   16743:	41 5d                	pop    %r13
   16745:	c3                   	ret    

0000000000016746 <uri_port>:
   16746:	f3 0f 1e fa          	endbr64 
   1674a:	89 f0                	mov    %esi,%eax
   1674c:	48 85 ff             	test   %rdi,%rdi
   1674f:	74 15                	je     16766 <uri_port+0x20>
   16751:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   16755:	48 85 ff             	test   %rdi,%rdi
   16758:	74 0c                	je     16766 <uri_port+0x20>
   1675a:	50                   	push   %rax
   1675b:	31 d2                	xor    %edx,%edx
   1675d:	31 f6                	xor    %esi,%esi
   1675f:	e8 f3 d3 ff ff       	call   13b57 <strtoul>
   16764:	5a                   	pop    %rdx
   16765:	c3                   	ret    
   16766:	c3                   	ret    

0000000000016767 <format_uri>:
   16767:	f3 0f 1e fa          	endbr64 
   1676b:	41 57                	push   %r15
   1676d:	41 56                	push   %r14
   1676f:	49 89 d6             	mov    %rdx,%r14
   16772:	41 55                	push   %r13
   16774:	49 89 f5             	mov    %rsi,%r13
   16777:	41 54                	push   %r12
   16779:	55                   	push   %rbp
   1677a:	48 89 fd             	mov    %rdi,%rbp
   1677d:	53                   	push   %rbx
   1677e:	48 83 ec 18          	sub    $0x18,%rsp
   16782:	48 85 d2             	test   %rdx,%rdx
   16785:	74 03                	je     1678a <format_uri+0x23>
   16787:	c6 06 00             	movb   $0x0,(%rsi)
   1678a:	45 31 e4             	xor    %r12d,%r12d
   1678d:	48 85 ed             	test   %rbp,%rbp
   16790:	0f 84 bd 00 00 00    	je     16853 <format_uri+0xec>
   16796:	31 db                	xor    %ebx,%ebx
   16798:	4c 8d 3d e1 be 00 00 	lea    0xbee1(%rip),%r15        # 22680 <prefixes.0>
   1679f:	48 83 7c dd 10 00    	cmpq   $0x0,0x10(%rbp,%rbx,8)
   167a5:	41 89 d8             	mov    %ebx,%r8d
   167a8:	0f 84 98 00 00 00    	je     16846 <format_uri+0xdf>
   167ae:	41 0f be 0c 1f       	movsbl (%r15,%rbx,1),%ecx
   167b3:	48 83 fb 04          	cmp    $0x4,%rbx
   167b7:	75 0c                	jne    167c5 <format_uri+0x5e>
   167b9:	b9 40 00 00 00       	mov    $0x40,%ecx
   167be:	48 83 7d 20 00       	cmpq   $0x0,0x20(%rbp)
   167c3:	eb 02                	jmp    167c7 <format_uri+0x60>
   167c5:	84 c9                	test   %cl,%cl
   167c7:	74 28                	je     167f1 <format_uri+0x8a>
   167c9:	4c 89 f6             	mov    %r14,%rsi
   167cc:	4b 8d 7c 25 00       	lea    0x0(%r13,%r12,1),%rdi
   167d1:	31 c0                	xor    %eax,%eax
   167d3:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   167d8:	4c 29 e6             	sub    %r12,%rsi
   167db:	48 8d 15 e9 cb 00 00 	lea    0xcbe9(%rip),%rdx        # 233cb <.LC1>
   167e2:	e8 e8 09 00 00       	call   171cf <ssnprintf>
   167e7:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   167ec:	48 98                	cltq   
   167ee:	49 01 c4             	add    %rax,%r12
   167f1:	48 8b 74 dd 10       	mov    0x10(%rbp,%rbx,8),%rsi
   167f6:	4c 89 f1             	mov    %r14,%rcx
   167f9:	4b 8d 54 25 00       	lea    0x0(%r13,%r12,1),%rdx
   167fe:	44 89 c7             	mov    %r8d,%edi
   16801:	4c 29 e1             	sub    %r12,%rcx
   16804:	e8 e4 fc ff ff       	call   164ed <uri_encode_string>
   16809:	49 01 c4             	add    %rax,%r12
   1680c:	48 85 db             	test   %rbx,%rbx
   1680f:	75 35                	jne    16846 <format_uri+0xdf>
   16811:	48 83 7d 30 00       	cmpq   $0x0,0x30(%rbp)
   16816:	48 8d 05 97 dc 00 00 	lea    0xdc97(%rip),%rax        # 244b4 <.LC0>
   1681d:	4b 8d 7c 25 00       	lea    0x0(%r13,%r12,1),%rdi
   16822:	4c 89 f6             	mov    %r14,%rsi
   16825:	48 8d 0d a0 d5 00 00 	lea    0xd5a0(%rip),%rcx        # 23dcc <.LC4>
   1682c:	48 8d 15 af cb 00 00 	lea    0xcbaf(%rip),%rdx        # 233e2 <.LC6>
   16833:	48 0f 44 c8          	cmove  %rax,%rcx
   16837:	4c 29 e6             	sub    %r12,%rsi
   1683a:	31 c0                	xor    %eax,%eax
   1683c:	e8 8e 09 00 00       	call   171cf <ssnprintf>
   16841:	48 98                	cltq   
   16843:	49 01 c4             	add    %rax,%r12
   16846:	48 ff c3             	inc    %rbx
   16849:	48 83 fb 09          	cmp    $0x9,%rbx
   1684d:	0f 85 4c ff ff ff    	jne    1679f <format_uri+0x38>
   16853:	48 83 c4 18          	add    $0x18,%rsp
   16857:	4c 89 e0             	mov    %r12,%rax
   1685a:	5b                   	pop    %rbx
   1685b:	5d                   	pop    %rbp
   1685c:	41 5c                	pop    %r12
   1685e:	41 5d                	pop    %r13
   16860:	41 5e                	pop    %r14
   16862:	41 5f                	pop    %r15
   16864:	c3                   	ret    

0000000000016865 <format_uri_alloc>:
   16865:	f3 0f 1e fa          	endbr64 
   16869:	41 55                	push   %r13
   1686b:	31 d2                	xor    %edx,%edx
   1686d:	31 f6                	xor    %esi,%esi
   1686f:	41 54                	push   %r12
   16871:	55                   	push   %rbp
   16872:	48 89 fd             	mov    %rdi,%rbp
   16875:	e8 ed fe ff ff       	call   16767 <format_uri>
   1687a:	4c 8d 68 01          	lea    0x1(%rax),%r13
   1687e:	4c 89 ef             	mov    %r13,%rdi
   16881:	e8 8f 5e ff ff       	call   c715 <malloc>
   16886:	49 89 c4             	mov    %rax,%r12
   16889:	48 85 c0             	test   %rax,%rax
   1688c:	74 0e                	je     1689c <format_uri_alloc+0x37>
   1688e:	4c 89 ea             	mov    %r13,%rdx
   16891:	48 89 c6             	mov    %rax,%rsi
   16894:	48 89 ef             	mov    %rbp,%rdi
   16897:	e8 cb fe ff ff       	call   16767 <format_uri>
   1689c:	4c 89 e0             	mov    %r12,%rax
   1689f:	5d                   	pop    %rbp
   168a0:	41 5c                	pop    %r12
   168a2:	41 5d                	pop    %r13
   168a4:	c3                   	ret    

00000000000168a5 <uri_dup>:
   168a5:	f3 0f 1e fa          	endbr64 
   168a9:	41 54                	push   %r12
   168ab:	31 f6                	xor    %esi,%esi
   168ad:	53                   	push   %rbx
   168ae:	48 89 fb             	mov    %rdi,%rbx
   168b1:	51                   	push   %rcx
   168b2:	e8 44 fa ff ff       	call   162fb <uri_copy_fields>
   168b7:	48 89 c7             	mov    %rax,%rdi
   168ba:	e8 77 5e ff ff       	call   c736 <zalloc>
   168bf:	49 89 c4             	mov    %rax,%r12
   168c2:	48 85 c0             	test   %rax,%rax
   168c5:	74 28                	je     168ef <uri_dup+0x4a>
   168c7:	48 89 df             	mov    %rbx,%rdi
   168ca:	48 8d 05 10 fa ff ff 	lea    -0x5f0(%rip),%rax        # 162e1 <uri_free>
   168d1:	4c 89 e6             	mov    %r12,%rsi
   168d4:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   168d9:	e8 1d fa ff ff       	call   162fb <uri_copy_fields>
   168de:	48 8b 5b 58          	mov    0x58(%rbx),%rbx
   168e2:	48 89 df             	mov    %rbx,%rdi
   168e5:	e8 24 96 ff ff       	call   ff0e <ref_increment>
   168ea:	49 89 5c 24 58       	mov    %rbx,0x58(%r12)
   168ef:	4c 89 e0             	mov    %r12,%rax
   168f2:	5a                   	pop    %rdx
   168f3:	5b                   	pop    %rbx
   168f4:	41 5c                	pop    %r12
   168f6:	c3                   	ret    

00000000000168f7 <resolve_path>:
   168f7:	f3 0f 1e fa          	endbr64 
   168fb:	41 54                	push   %r12
   168fd:	55                   	push   %rbp
   168fe:	48 89 f5             	mov    %rsi,%rbp
   16901:	48 83 ec 28          	sub    $0x28,%rsp
   16905:	48 8b 05 44 37 01 00 	mov    0x13744(%rip),%rax        # 2a050 <__stack_chk_guard>
   1690c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   16911:	31 c0                	xor    %eax,%eax
   16913:	80 3e 2f             	cmpb   $0x2f,(%rsi)
   16916:	75 21                	jne    16939 <resolve_path+0x42>
   16918:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1691d:	48 2b 05 2c 37 01 00 	sub    0x1372c(%rip),%rax        # 2a050 <__stack_chk_guard>
   16924:	0f 85 d8 00 00 00    	jne    16a02 <resolve_path+0x10b>
   1692a:	48 83 c4 28          	add    $0x28,%rsp
   1692e:	48 89 f7             	mov    %rsi,%rdi
   16931:	5d                   	pop    %rbp
   16932:	41 5c                	pop    %r12
   16934:	e9 f0 d1 ff ff       	jmp    13b29 <strdup>
   16939:	e8 eb d1 ff ff       	call   13b29 <strdup>
   1693e:	49 89 c4             	mov    %rax,%r12
   16941:	48 89 c7             	mov    %rax,%rdi
   16944:	48 85 c0             	test   %rax,%rax
   16947:	0f 84 a7 00 00 00    	je     169f4 <resolve_path+0xfd>
   1694d:	e8 aa 23 00 00       	call   18cfc <dirname>
   16952:	48 89 c7             	mov    %rax,%rdi
   16955:	80 7d 00 2e          	cmpb   $0x2e,0x0(%rbp)
   16959:	75 3d                	jne    16998 <resolve_path+0xa1>
   1695b:	8a 45 01             	mov    0x1(%rbp),%al
   1695e:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   16962:	84 c0                	test   %al,%al
   16964:	74 2d                	je     16993 <resolve_path+0x9c>
   16966:	3c 2f                	cmp    $0x2f,%al
   16968:	75 06                	jne    16970 <resolve_path+0x79>
   1696a:	48 83 c5 02          	add    $0x2,%rbp
   1696e:	eb e5                	jmp    16955 <resolve_path+0x5e>
   16970:	3c 2e                	cmp    $0x2e,%al
   16972:	75 24                	jne    16998 <resolve_path+0xa1>
   16974:	8a 42 01             	mov    0x1(%rdx),%al
   16977:	84 c0                	test   %al,%al
   16979:	75 06                	jne    16981 <resolve_path+0x8a>
   1697b:	48 83 c5 02          	add    $0x2,%rbp
   1697f:	eb cc                	jmp    1694d <resolve_path+0x56>
   16981:	3c 2f                	cmp    $0x2f,%al
   16983:	75 13                	jne    16998 <resolve_path+0xa1>
   16985:	e8 72 23 00 00       	call   18cfc <dirname>
   1698a:	48 83 c5 03          	add    $0x3,%rbp
   1698e:	48 89 c7             	mov    %rax,%rdi
   16991:	eb c2                	jmp    16955 <resolve_path+0x5e>
   16993:	48 89 d5             	mov    %rdx,%rbp
   16996:	eb bd                	jmp    16955 <resolve_path+0x5e>
   16998:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1699d:	e8 74 d0 ff ff       	call   13a16 <strlen>
   169a2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   169a7:	4c 8d 4c 24 10       	lea    0x10(%rsp),%r9
   169ac:	49 89 e8             	mov    %rbp,%r8
   169af:	48 8d 0d fe da 00 00 	lea    0xdafe(%rip),%rcx        # 244b4 <.LC0>
   169b6:	48 8d 35 e7 be 00 00 	lea    0xbee7(%rip),%rsi        # 228a4 <.LC3>
   169bd:	80 7c 07 ff 2f       	cmpb   $0x2f,-0x1(%rdi,%rax,1)
   169c2:	48 8d 05 17 d0 00 00 	lea    0xd017(%rip),%rax        # 239e0 <.LC0>
   169c9:	48 89 fa             	mov    %rdi,%rdx
   169cc:	4c 89 cf             	mov    %r9,%rdi
   169cf:	48 0f 45 c8          	cmovne %rax,%rcx
   169d3:	31 c0                	xor    %eax,%eax
   169d5:	e8 a5 17 00 00       	call   1817f <asprintf>
   169da:	85 c0                	test   %eax,%eax
   169dc:	79 09                	jns    169e7 <resolve_path+0xf0>
   169de:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   169e5:	00 00 
   169e7:	4c 89 e7             	mov    %r12,%rdi
   169ea:	e8 33 5d ff ff       	call   c722 <free>
   169ef:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   169f4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   169f9:	48 2b 05 50 36 01 00 	sub    0x13650(%rip),%rax        # 2a050 <__stack_chk_guard>
   16a00:	74 05                	je     16a07 <resolve_path+0x110>
   16a02:	e8 59 c0 fe ff       	call   2a60 <__stack_chk_fail>
   16a07:	48 83 c4 28          	add    $0x28,%rsp
   16a0b:	4c 89 e0             	mov    %r12,%rax
   16a0e:	5d                   	pop    %rbp
   16a0f:	41 5c                	pop    %r12
   16a11:	c3                   	ret    

0000000000016a12 <resolve_uri>:
   16a12:	f3 0f 1e fa          	endbr64 
   16a16:	41 55                	push   %r13
   16a18:	41 54                	push   %r12
   16a1a:	49 89 f4             	mov    %rsi,%r12
   16a1d:	55                   	push   %rbp
   16a1e:	48 83 ec 70          	sub    $0x70,%rsp
   16a22:	48 8b 05 27 36 01 00 	mov    0x13627(%rip),%rax        # 2a050 <__stack_chk_guard>
   16a29:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   16a2e:	31 c0                	xor    %eax,%eax
   16a30:	48 83 7e 10 00       	cmpq   $0x0,0x10(%rsi)
   16a35:	75 08                	jne    16a3f <resolve_uri+0x2d>
   16a37:	48 89 fd             	mov    %rdi,%rbp
   16a3a:	48 85 ff             	test   %rdi,%rdi
   16a3d:	75 0d                	jne    16a4c <resolve_uri+0x3a>
   16a3f:	4c 89 e7             	mov    %r12,%rdi
   16a42:	e8 c7 94 ff ff       	call   ff0e <ref_increment>
   16a47:	e9 a0 00 00 00       	jmp    16aec <resolve_uri+0xda>
   16a4c:	49 89 e5             	mov    %rsp,%r13
   16a4f:	48 89 fe             	mov    %rdi,%rsi
   16a52:	ba 60 00 00 00       	mov    $0x60,%edx
   16a57:	4c 89 ef             	mov    %r13,%rdi
   16a5a:	e8 8a 09 00 00       	call   173e9 <__memcpy>
   16a5f:	49 8b 74 24 40       	mov    0x40(%r12),%rsi
   16a64:	48 85 f6             	test   %rsi,%rsi
   16a67:	74 3d                	je     16aa6 <resolve_uri+0x94>
   16a69:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
   16a6d:	48 85 ff             	test   %rdi,%rdi
   16a70:	75 07                	jne    16a79 <resolve_uri+0x67>
   16a72:	48 8d 3d 67 cf 00 00 	lea    0xcf67(%rip),%rdi        # 239e0 <.LC0>
   16a79:	e8 79 fe ff ff       	call   168f7 <resolve_path>
   16a7e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   16a83:	48 89 c5             	mov    %rax,%rbp
   16a86:	49 8b 44 24 48       	mov    0x48(%r12),%rax
   16a8b:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   16a90:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   16a95:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   16a9a:	49 8b 44 24 58       	mov    0x58(%r12),%rax
   16a9f:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   16aa4:	eb 33                	jmp    16ad9 <resolve_uri+0xc7>
   16aa6:	49 8b 54 24 48       	mov    0x48(%r12),%rdx
   16aab:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   16ab0:	49 8b 6c 24 58       	mov    0x58(%r12),%rbp
   16ab5:	48 85 d2             	test   %rdx,%rdx
   16ab8:	74 07                	je     16ac1 <resolve_uri+0xaf>
   16aba:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   16abf:	eb 05                	jmp    16ac6 <resolve_uri+0xb4>
   16ac1:	48 85 c0             	test   %rax,%rax
   16ac4:	74 07                	je     16acd <resolve_uri+0xbb>
   16ac6:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   16acb:	eb 05                	jmp    16ad2 <resolve_uri+0xc0>
   16acd:	48 85 ed             	test   %rbp,%rbp
   16ad0:	74 07                	je     16ad9 <resolve_uri+0xc7>
   16ad2:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   16ad7:	31 ed                	xor    %ebp,%ebp
   16ad9:	4c 89 ef             	mov    %r13,%rdi
   16adc:	e8 c4 fd ff ff       	call   168a5 <uri_dup>
   16ae1:	48 89 ef             	mov    %rbp,%rdi
   16ae4:	49 89 c4             	mov    %rax,%r12
   16ae7:	e8 36 5c ff ff       	call   c722 <free>
   16aec:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   16af1:	48 2b 05 58 35 01 00 	sub    0x13558(%rip),%rax        # 2a050 <__stack_chk_guard>
   16af8:	74 05                	je     16aff <resolve_uri+0xed>
   16afa:	e8 61 bf fe ff       	call   2a60 <__stack_chk_fail>
   16aff:	48 83 c4 70          	add    $0x70,%rsp
   16b03:	4c 89 e0             	mov    %r12,%rax
   16b06:	5d                   	pop    %rbp
   16b07:	41 5c                	pop    %r12
   16b09:	41 5d                	pop    %r13
   16b0b:	c3                   	ret    

0000000000016b0c <pxe_uri>:
   16b0c:	f3 0f 1e fa          	endbr64 
   16b10:	41 54                	push   %r12
   16b12:	55                   	push   %rbp
   16b13:	53                   	push   %rbx
   16b14:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   16b1b:	48 8b 05 2e 35 01 00 	mov    0x1352e(%rip),%rax        # 2a050 <__stack_chk_guard>
   16b22:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   16b29:	00 
   16b2a:	31 c0                	xor    %eax,%eax
   16b2c:	48 85 f6             	test   %rsi,%rsi
   16b2f:	0f 84 da 00 00 00    	je     16c0f <pxe_uri+0x103>
   16b35:	80 3e 00             	cmpb   $0x0,(%rsi)
   16b38:	49 89 f4             	mov    %rsi,%r12
   16b3b:	0f 84 ce 00 00 00    	je     16c0f <pxe_uri+0x103>
   16b41:	48 89 fb             	mov    %rdi,%rbx
   16b44:	48 89 f7             	mov    %rsi,%rdi
   16b47:	e8 e3 f9 ff ff       	call   1652f <parse_uri>
   16b4c:	48 85 c0             	test   %rax,%rax
   16b4f:	74 12                	je     16b63 <pxe_uri+0x57>
   16b51:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   16b56:	74 0b                	je     16b63 <pxe_uri+0x57>
   16b58:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
   16b5d:	0f 84 ac 00 00 00    	je     16c0f <pxe_uri+0x103>
   16b63:	48 89 c7             	mov    %rax,%rdi
   16b66:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   16b6b:	e8 aa 93 ff ff       	call   ff1a <ref_decrement>
   16b70:	48 89 ef             	mov    %rbp,%rdi
   16b73:	b9 60 00 00 00       	mov    $0x60,%ecx
   16b78:	31 c0                	xor    %eax,%eax
   16b7a:	f3 aa                	rep stos %al,%es:(%rdi)
   16b7c:	48 8d 05 0a d2 00 00 	lea    0xd20a(%rip),%rax        # 23d8d <.LC9>
   16b83:	48 89 df             	mov    %rbx,%rdi
   16b86:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   16b8b:	e8 71 cc ff ff       	call   13801 <sock_ntoa>
   16b90:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   16b95:	48 85 c0             	test   %rax,%rax
   16b98:	75 04                	jne    16b9e <pxe_uri+0x92>
   16b9a:	31 c0                	xor    %eax,%eax
   16b9c:	eb 71                	jmp    16c0f <pxe_uri+0x103>
   16b9e:	66 8b 4b 04          	mov    0x4(%rbx),%cx
   16ba2:	66 85 c9             	test   %cx,%cx
   16ba5:	74 28                	je     16bcf <pxe_uri+0xc3>
   16ba7:	48 8d 9c 24 82 00 00 	lea    0x82(%rsp),%rbx
   16bae:	00 
   16baf:	48 8d 15 24 c6 00 00 	lea    0xc624(%rip),%rdx        # 231da <.LC10>
   16bb6:	be 06 00 00 00       	mov    $0x6,%esi
   16bbb:	31 c0                	xor    %eax,%eax
   16bbd:	48 89 df             	mov    %rbx,%rdi
   16bc0:	86 cd                	xchg   %cl,%ch
   16bc2:	0f b7 c9             	movzwl %cx,%ecx
   16bc5:	e8 93 05 00 00       	call   1715d <snprintf>
   16bca:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   16bcf:	31 c0                	xor    %eax,%eax
   16bd1:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   16bd6:	4c 89 e2             	mov    %r12,%rdx
   16bd9:	48 8d 35 ab be 00 00 	lea    0xbeab(%rip),%rsi        # 22a8b <.LC11>
   16be0:	e8 9a 15 00 00       	call   1817f <asprintf>
   16be5:	85 c0                	test   %eax,%eax
   16be7:	78 b1                	js     16b9a <pxe_uri+0x8e>
   16be9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16bee:	48 89 ef             	mov    %rbp,%rdi
   16bf1:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   16bf6:	e8 aa fc ff ff       	call   168a5 <uri_dup>
   16bfb:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   16c00:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   16c05:	e8 18 5b ff ff       	call   c722 <free>
   16c0a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16c0f:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
   16c16:	00 
   16c17:	48 2b 15 32 34 01 00 	sub    0x13432(%rip),%rdx        # 2a050 <__stack_chk_guard>
   16c1e:	74 05                	je     16c25 <pxe_uri+0x119>
   16c20:	e8 3b be fe ff       	call   2a60 <__stack_chk_fail>
   16c25:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
   16c2c:	5b                   	pop    %rbx
   16c2d:	5d                   	pop    %rbp
   16c2e:	41 5c                	pop    %r12
   16c30:	c3                   	ret    

0000000000016c31 <uuid_ntoa>:
   16c31:	f3 0f 1e fa          	endbr64 
   16c35:	41 54                	push   %r12
   16c37:	4c 8d 25 22 32 01 00 	lea    0x13222(%rip),%r12        # 29e60 <buf.0>
   16c3e:	53                   	push   %rbx
   16c3f:	48 83 ec 10          	sub    $0x10,%rsp
   16c43:	0f b6 77 0f          	movzbl 0xf(%rdi),%esi
   16c47:	8b 47 08             	mov    0x8(%rdi),%eax
   16c4a:	66 8b 5f 06          	mov    0x6(%rdi),%bx
   16c4e:	8b 57 04             	mov    0x4(%rdi),%edx
   16c51:	8b 0f                	mov    (%rdi),%ecx
   16c53:	56                   	push   %rsi
   16c54:	0f b6 77 0e          	movzbl 0xe(%rdi),%esi
   16c58:	86 c4                	xchg   %al,%ah
   16c5a:	56                   	push   %rsi
   16c5b:	0f b6 77 0d          	movzbl 0xd(%rdi),%esi
   16c5f:	0f b7 c0             	movzwl %ax,%eax
   16c62:	86 df                	xchg   %bl,%bh
   16c64:	56                   	push   %rsi
   16c65:	0f b6 77 0c          	movzbl 0xc(%rdi),%esi
   16c69:	44 0f b7 cb          	movzwl %bx,%r9d
   16c6d:	86 d6                	xchg   %dl,%dh
   16c6f:	56                   	push   %rsi
   16c70:	0f b6 77 0b          	movzbl 0xb(%rdi),%esi
   16c74:	44 0f b7 c2          	movzwl %dx,%r8d
   16c78:	48 8d 15 65 d1 00 00 	lea    0xd165(%rip),%rdx        # 23de4 <.LC0>
   16c7f:	0f c9                	bswap  %ecx
   16c81:	56                   	push   %rsi
   16c82:	0f b6 77 0a          	movzbl 0xa(%rdi),%esi
   16c86:	4c 89 e7             	mov    %r12,%rdi
   16c89:	56                   	push   %rsi
   16c8a:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   16c8e:	50                   	push   %rax
   16c8f:	31 c0                	xor    %eax,%eax
   16c91:	e8 c7 04 00 00       	call   1715d <snprintf>
   16c96:	48 83 c4 48          	add    $0x48,%rsp
   16c9a:	4c 89 e0             	mov    %r12,%rax
   16c9d:	5b                   	pop    %rbx
   16c9e:	41 5c                	pop    %r12
   16ca0:	c3                   	ret    

0000000000016ca1 <cputchar>:
   16ca1:	53                   	push   %rbx
   16ca2:	48 89 fb             	mov    %rdi,%rbx
   16ca5:	40 0f b6 f6          	movzbl %sil,%esi
   16ca9:	ff 17                	call   *(%rdi)
   16cab:	48 ff 43 08          	incq   0x8(%rbx)
   16caf:	5b                   	pop    %rbx
   16cb0:	c3                   	ret    

0000000000016cb1 <printf_sputc>:
   16cb1:	f3 0f 1e fa          	endbr64 
   16cb5:	48 8b 47 08          	mov    0x8(%rdi),%rax
   16cb9:	48 3b 47 18          	cmp    0x18(%rdi),%rax
   16cbd:	73 08                	jae    16cc7 <printf_sputc+0x16>
   16cbf:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16cc3:	40 88 34 02          	mov    %sil,(%rdx,%rax,1)
   16cc7:	c3                   	ret    

0000000000016cc8 <printf_putchar>:
   16cc8:	f3 0f 1e fa          	endbr64 
   16ccc:	89 f7                	mov    %esi,%edi
   16cce:	e9 57 26 00 00       	jmp    1932a <putchar>

0000000000016cd3 <vcprintf>:
   16cd3:	f3 0f 1e fa          	endbr64 
   16cd7:	41 56                	push   %r14
   16cd9:	49 89 f6             	mov    %rsi,%r14
   16cdc:	41 55                	push   %r13
   16cde:	4c 8d 2d 33 d1 00 00 	lea    0xd133(%rip),%r13        # 23e18 <.LC1>
   16ce5:	41 54                	push   %r12
   16ce7:	49 89 fc             	mov    %rdi,%r12
   16cea:	55                   	push   %rbp
   16ceb:	53                   	push   %rbx
   16cec:	48 89 d3             	mov    %rdx,%rbx
   16cef:	48 83 ec 30          	sub    $0x30,%rsp
   16cf3:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   16cfa:	00 
   16cfb:	48 8b 05 4e 33 01 00 	mov    0x1334e(%rip),%rax        # 2a050 <__stack_chk_guard>
   16d02:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16d07:	31 c0                	xor    %eax,%eax
   16d09:	41 0f b6 36          	movzbl (%r14),%esi
   16d0d:	40 84 f6             	test   %sil,%sil
   16d10:	0f 84 b5 03 00 00    	je     170cb <vcprintf+0x3f8>
   16d16:	40 80 fe 25          	cmp    $0x25,%sil
   16d1a:	75 07                	jne    16d23 <vcprintf+0x50>
   16d1c:	49 ff c6             	inc    %r14
   16d1f:	31 f6                	xor    %esi,%esi
   16d21:	eb 17                	jmp    16d3a <vcprintf+0x67>
   16d23:	4c 89 e7             	mov    %r12,%rdi
   16d26:	e8 76 ff ff ff       	call   16ca1 <cputchar>
   16d2b:	e9 93 03 00 00       	jmp    170c3 <vcprintf+0x3f0>
   16d30:	3c 30                	cmp    $0x30,%al
   16d32:	75 12                	jne    16d46 <vcprintf+0x73>
   16d34:	83 ce 10             	or     $0x10,%esi
   16d37:	49 ff c6             	inc    %r14
   16d3a:	41 8a 06             	mov    (%r14),%al
   16d3d:	3c 23                	cmp    $0x23,%al
   16d3f:	75 ef                	jne    16d30 <vcprintf+0x5d>
   16d41:	83 ce 02             	or     $0x2,%esi
   16d44:	eb f1                	jmp    16d37 <vcprintf+0x64>
   16d46:	31 c9                	xor    %ecx,%ecx
   16d48:	41 0f be 06          	movsbl (%r14),%eax
   16d4c:	49 8d 56 01          	lea    0x1(%r14),%rdx
   16d50:	83 e8 30             	sub    $0x30,%eax
   16d53:	83 f8 09             	cmp    $0x9,%eax
   16d56:	77 0a                	ja     16d62 <vcprintf+0x8f>
   16d58:	6b c9 0a             	imul   $0xa,%ecx,%ecx
   16d5b:	49 89 d6             	mov    %rdx,%r14
   16d5e:	01 c1                	add    %eax,%ecx
   16d60:	eb e6                	jmp    16d48 <vcprintf+0x75>
   16d62:	48 8d 3d dd d8 00 00 	lea    0xd8dd(%rip),%rdi        # 24646 <type_sizes+0x2>
   16d69:	41 8a 06             	mov    (%r14),%al
   16d6c:	3c 68                	cmp    $0x68,%al
   16d6e:	75 05                	jne    16d75 <vcprintf+0xa2>
   16d70:	48 ff cf             	dec    %rdi
   16d73:	eb 14                	jmp    16d89 <vcprintf+0xb6>
   16d75:	3c 6c                	cmp    $0x6c,%al
   16d77:	75 05                	jne    16d7e <vcprintf+0xab>
   16d79:	48 ff c7             	inc    %rdi
   16d7c:	eb 0b                	jmp    16d89 <vcprintf+0xb6>
   16d7e:	3c 7a                	cmp    $0x7a,%al
   16d80:	75 0c                	jne    16d8e <vcprintf+0xbb>
   16d82:	48 8d 3d c0 d8 00 00 	lea    0xd8c0(%rip),%rdi        # 24649 <type_sizes+0x5>
   16d89:	49 ff c6             	inc    %r14
   16d8c:	eb db                	jmp    16d69 <vcprintf+0x96>
   16d8e:	c6 44 24 27 00       	movb   $0x0,0x27(%rsp)
   16d93:	3c 63                	cmp    $0x63,%al
   16d95:	75 74                	jne    16e0b <vcprintf+0x138>
   16d97:	48 8d 15 a9 d8 00 00 	lea    0xd8a9(%rip),%rdx        # 24647 <type_sizes+0x3>
   16d9e:	8b 03                	mov    (%rbx),%eax
   16da0:	48 39 d7             	cmp    %rdx,%rdi
   16da3:	73 33                	jae    16dd8 <vcprintf+0x105>
   16da5:	83 f8 2f             	cmp    $0x2f,%eax
   16da8:	77 0d                	ja     16db7 <vcprintf+0xe4>
   16daa:	89 c2                	mov    %eax,%edx
   16dac:	83 c0 08             	add    $0x8,%eax
   16daf:	48 03 53 10          	add    0x10(%rbx),%rdx
   16db3:	89 03                	mov    %eax,(%rbx)
   16db5:	eb 0c                	jmp    16dc3 <vcprintf+0xf0>
   16db7:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16dbb:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16dbf:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16dc3:	0f b6 32             	movzbl (%rdx),%esi
   16dc6:	4c 89 e7             	mov    %r12,%rdi
   16dc9:	48 8d 6c 24 27       	lea    0x27(%rsp),%rbp
   16dce:	e8 ce fe ff ff       	call   16ca1 <cputchar>
   16dd3:	e9 b5 02 00 00       	jmp    1708d <vcprintf+0x3ba>
   16dd8:	83 f8 2f             	cmp    $0x2f,%eax
   16ddb:	77 0d                	ja     16dea <vcprintf+0x117>
   16ddd:	89 c2                	mov    %eax,%edx
   16ddf:	83 c0 08             	add    $0x8,%eax
   16de2:	48 03 53 10          	add    0x10(%rbx),%rdx
   16de6:	89 03                	mov    %eax,(%rbx)
   16de8:	eb 0c                	jmp    16df6 <vcprintf+0x123>
   16dea:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16dee:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16df2:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16df6:	8b 02                	mov    (%rdx),%eax
   16df8:	c6 44 24 09 00       	movb   $0x0,0x9(%rsp)
   16dfd:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   16e02:	88 44 24 08          	mov    %al,0x8(%rsp)
   16e06:	e9 82 02 00 00       	jmp    1708d <vcprintf+0x3ba>
   16e0b:	3c 73                	cmp    $0x73,%al
   16e0d:	75 70                	jne    16e7f <vcprintf+0x1ac>
   16e0f:	48 8d 15 31 d8 00 00 	lea    0xd831(%rip),%rdx        # 24647 <type_sizes+0x3>
   16e16:	8b 03                	mov    (%rbx),%eax
   16e18:	48 39 d7             	cmp    %rdx,%rdi
   16e1b:	73 36                	jae    16e53 <vcprintf+0x180>
   16e1d:	83 f8 2f             	cmp    $0x2f,%eax
   16e20:	77 0d                	ja     16e2f <vcprintf+0x15c>
   16e22:	89 c2                	mov    %eax,%edx
   16e24:	83 c0 08             	add    $0x8,%eax
   16e27:	48 03 53 10          	add    0x10(%rbx),%rdx
   16e2b:	89 03                	mov    %eax,(%rbx)
   16e2d:	eb 0c                	jmp    16e3b <vcprintf+0x168>
   16e2f:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16e33:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16e37:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16e3b:	48 8b 2a             	mov    (%rdx),%rbp
   16e3e:	48 85 ed             	test   %rbp,%rbp
   16e41:	0f 85 46 02 00 00    	jne    1708d <vcprintf+0x3ba>
   16e47:	48 8d 2d c3 cf 00 00 	lea    0xcfc3(%rip),%rbp        # 23e11 <.LC0>
   16e4e:	e9 3a 02 00 00       	jmp    1708d <vcprintf+0x3ba>
   16e53:	83 f8 2f             	cmp    $0x2f,%eax
   16e56:	77 0d                	ja     16e65 <vcprintf+0x192>
   16e58:	89 c2                	mov    %eax,%edx
   16e5a:	83 c0 08             	add    $0x8,%eax
   16e5d:	48 03 53 10          	add    0x10(%rbx),%rdx
   16e61:	89 03                	mov    %eax,(%rbx)
   16e63:	eb 0c                	jmp    16e71 <vcprintf+0x19e>
   16e65:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16e69:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16e6d:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16e71:	48 8b 2a             	mov    (%rdx),%rbp
   16e74:	48 85 ed             	test   %rbp,%rbp
   16e77:	0f 85 26 02 00 00    	jne    170a3 <vcprintf+0x3d0>
   16e7d:	eb c8                	jmp    16e47 <vcprintf+0x174>
   16e7f:	3c 70                	cmp    $0x70,%al
   16e81:	75 6c                	jne    16eef <vcprintf+0x21c>
   16e83:	8b 13                	mov    (%rbx),%edx
   16e85:	83 fa 2f             	cmp    $0x2f,%edx
   16e88:	77 0d                	ja     16e97 <vcprintf+0x1c4>
   16e8a:	89 d0                	mov    %edx,%eax
   16e8c:	83 c2 08             	add    $0x8,%edx
   16e8f:	48 03 43 10          	add    0x10(%rbx),%rax
   16e93:	89 13                	mov    %edx,(%rbx)
   16e95:	eb 0c                	jmp    16ea3 <vcprintf+0x1d0>
   16e97:	48 8b 43 08          	mov    0x8(%rbx),%rax
   16e9b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16e9f:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   16ea3:	48 8b 10             	mov    (%rax),%rdx
   16ea6:	48 8d 44 24 27       	lea    0x27(%rsp),%rax
   16eab:	48 89 c7             	mov    %rax,%rdi
   16eae:	48 89 d6             	mov    %rdx,%rsi
   16eb1:	48 ff c8             	dec    %rax
   16eb4:	83 e6 0f             	and    $0xf,%esi
   16eb7:	41 8a 74 35 00       	mov    0x0(%r13,%rsi,1),%sil
   16ebc:	83 ce 20             	or     $0x20,%esi
   16ebf:	48 c1 ea 04          	shr    $0x4,%rdx
   16ec3:	40 88 30             	mov    %sil,(%rax)
   16ec6:	75 e6                	jne    16eae <vcprintf+0x1db>
   16ec8:	48 63 c9             	movslq %ecx,%rcx
   16ecb:	48 89 fa             	mov    %rdi,%rdx
   16ece:	48 29 c2             	sub    %rax,%rdx
   16ed1:	48 39 ca             	cmp    %rcx,%rdx
   16ed4:	7d 08                	jge    16ede <vcprintf+0x20b>
   16ed6:	48 ff c8             	dec    %rax
   16ed9:	c6 00 20             	movb   $0x20,(%rax)
   16edc:	eb ed                	jmp    16ecb <vcprintf+0x1f8>
   16ede:	c6 40 ff 78          	movb   $0x78,-0x1(%rax)
   16ee2:	48 8d 68 fe          	lea    -0x2(%rax),%rbp
   16ee6:	c6 40 fe 30          	movb   $0x30,-0x2(%rax)
   16eea:	e9 9e 01 00 00       	jmp    1708d <vcprintf+0x3ba>
   16eef:	89 c2                	mov    %eax,%edx
   16ef1:	83 e2 df             	and    $0xffffffdf,%edx
   16ef4:	80 fa 58             	cmp    $0x58,%dl
   16ef7:	0f 85 b9 00 00 00    	jne    16fb6 <vcprintf+0x2e3>
   16efd:	83 e0 20             	and    $0x20,%eax
   16f00:	8b 13                	mov    (%rbx),%edx
   16f02:	09 f0                	or     %esi,%eax
   16f04:	80 3f 07             	cmpb   $0x7,(%rdi)
   16f07:	76 23                	jbe    16f2c <vcprintf+0x259>
   16f09:	83 fa 2f             	cmp    $0x2f,%edx
   16f0c:	77 0d                	ja     16f1b <vcprintf+0x248>
   16f0e:	89 d6                	mov    %edx,%esi
   16f10:	83 c2 08             	add    $0x8,%edx
   16f13:	48 03 73 10          	add    0x10(%rbx),%rsi
   16f17:	89 13                	mov    %edx,(%rbx)
   16f19:	eb 0c                	jmp    16f27 <vcprintf+0x254>
   16f1b:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   16f1f:	48 8d 56 08          	lea    0x8(%rsi),%rdx
   16f23:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   16f27:	48 8b 16             	mov    (%rsi),%rdx
   16f2a:	eb 20                	jmp    16f4c <vcprintf+0x279>
   16f2c:	83 fa 2f             	cmp    $0x2f,%edx
   16f2f:	77 0d                	ja     16f3e <vcprintf+0x26b>
   16f31:	89 d6                	mov    %edx,%esi
   16f33:	83 c2 08             	add    $0x8,%edx
   16f36:	48 03 73 10          	add    0x10(%rbx),%rsi
   16f3a:	89 13                	mov    %edx,(%rbx)
   16f3c:	eb 0c                	jmp    16f4a <vcprintf+0x277>
   16f3e:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   16f42:	48 8d 56 08          	lea    0x8(%rsi),%rdx
   16f46:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   16f4a:	8b 16                	mov    (%rsi),%edx
   16f4c:	41 89 c0             	mov    %eax,%r8d
   16f4f:	89 c7                	mov    %eax,%edi
   16f51:	48 8d 6c 24 27       	lea    0x27(%rsp),%rbp
   16f56:	41 83 e0 20          	and    $0x20,%r8d
   16f5a:	83 e7 10             	and    $0x10,%edi
   16f5d:	49 89 e9             	mov    %rbp,%r9
   16f60:	83 cf 20             	or     $0x20,%edi
   16f63:	44 89 c6             	mov    %r8d,%esi
   16f66:	49 89 d2             	mov    %rdx,%r10
   16f69:	48 ff cd             	dec    %rbp
   16f6c:	41 83 e2 0f          	and    $0xf,%r10d
   16f70:	47 8a 5c 15 00       	mov    0x0(%r13,%r10,1),%r11b
   16f75:	45 09 c3             	or     %r8d,%r11d
   16f78:	48 c1 ea 04          	shr    $0x4,%rdx
   16f7c:	44 88 5d 00          	mov    %r11b,0x0(%rbp)
   16f80:	75 e4                	jne    16f66 <vcprintf+0x293>
   16f82:	48 63 c9             	movslq %ecx,%rcx
   16f85:	4c 89 ca             	mov    %r9,%rdx
   16f88:	48 29 ea             	sub    %rbp,%rdx
   16f8b:	48 39 ca             	cmp    %rcx,%rdx
   16f8e:	7d 09                	jge    16f99 <vcprintf+0x2c6>
   16f90:	48 ff cd             	dec    %rbp
   16f93:	40 88 7d 00          	mov    %dil,0x0(%rbp)
   16f97:	eb ec                	jmp    16f85 <vcprintf+0x2b2>
   16f99:	a8 02                	test   $0x2,%al
   16f9b:	0f 84 ec 00 00 00    	je     1708d <vcprintf+0x3ba>
   16fa1:	89 f0                	mov    %esi,%eax
   16fa3:	c6 45 fe 30          	movb   $0x30,-0x2(%rbp)
   16fa7:	48 83 ed 02          	sub    $0x2,%rbp
   16fab:	83 c8 58             	or     $0x58,%eax
   16fae:	88 45 01             	mov    %al,0x1(%rbp)
   16fb1:	e9 d7 00 00 00       	jmp    1708d <vcprintf+0x3ba>
   16fb6:	3c 64                	cmp    $0x64,%al
   16fb8:	74 08                	je     16fc2 <vcprintf+0x2ef>
   16fba:	3c 69                	cmp    $0x69,%al
   16fbc:	0f 85 c2 00 00 00    	jne    17084 <vcprintf+0x3b1>
   16fc2:	80 3f 07             	cmpb   $0x7,(%rdi)
   16fc5:	8b 03                	mov    (%rbx),%eax
   16fc7:	76 23                	jbe    16fec <vcprintf+0x319>
   16fc9:	83 f8 2f             	cmp    $0x2f,%eax
   16fcc:	77 0d                	ja     16fdb <vcprintf+0x308>
   16fce:	89 c2                	mov    %eax,%edx
   16fd0:	83 c0 08             	add    $0x8,%eax
   16fd3:	48 03 53 10          	add    0x10(%rbx),%rdx
   16fd7:	89 03                	mov    %eax,(%rbx)
   16fd9:	eb 0c                	jmp    16fe7 <vcprintf+0x314>
   16fdb:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16fdf:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16fe3:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16fe7:	48 8b 02             	mov    (%rdx),%rax
   16fea:	eb 21                	jmp    1700d <vcprintf+0x33a>
   16fec:	83 f8 2f             	cmp    $0x2f,%eax
   16fef:	77 0d                	ja     16ffe <vcprintf+0x32b>
   16ff1:	89 c2                	mov    %eax,%edx
   16ff3:	83 c0 08             	add    $0x8,%eax
   16ff6:	48 03 53 10          	add    0x10(%rbx),%rdx
   16ffa:	89 03                	mov    %eax,(%rbx)
   16ffc:	eb 0c                	jmp    1700a <vcprintf+0x337>
   16ffe:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   17002:	48 8d 42 08          	lea    0x8(%rdx),%rax
   17006:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1700a:	48 63 02             	movslq (%rdx),%rax
   1700d:	83 e6 10             	and    $0x10,%esi
   17010:	31 ff                	xor    %edi,%edi
   17012:	41 89 f2             	mov    %esi,%r10d
   17015:	41 83 ca 20          	or     $0x20,%r10d
   17019:	48 85 c0             	test   %rax,%rax
   1701c:	79 08                	jns    17026 <vcprintf+0x353>
   1701e:	48 f7 d8             	neg    %rax
   17021:	bf 01 00 00 00       	mov    $0x1,%edi
   17026:	48 8d 6c 24 27       	lea    0x27(%rsp),%rbp
   1702b:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   17031:	49 89 e9             	mov    %rbp,%r9
   17034:	48 99                	cqto   
   17036:	49 89 eb             	mov    %rbp,%r11
   17039:	48 ff cd             	dec    %rbp
   1703c:	49 f7 f8             	idiv   %r8
   1703f:	83 c2 30             	add    $0x30,%edx
   17042:	88 55 00             	mov    %dl,0x0(%rbp)
   17045:	48 85 c0             	test   %rax,%rax
   17048:	75 ea                	jne    17034 <vcprintf+0x361>
   1704a:	83 e7 01             	and    $0x1,%edi
   1704d:	85 f6                	test   %esi,%esi
   1704f:	75 0d                	jne    1705e <vcprintf+0x38b>
   17051:	40 84 ff             	test   %dil,%dil
   17054:	74 08                	je     1705e <vcprintf+0x38b>
   17056:	c6 45 ff 2d          	movb   $0x2d,-0x1(%rbp)
   1705a:	49 8d 6b fe          	lea    -0x2(%r11),%rbp
   1705e:	48 63 c9             	movslq %ecx,%rcx
   17061:	4c 89 c8             	mov    %r9,%rax
   17064:	48 29 e8             	sub    %rbp,%rax
   17067:	48 39 c8             	cmp    %rcx,%rax
   1706a:	7d 09                	jge    17075 <vcprintf+0x3a2>
   1706c:	48 ff cd             	dec    %rbp
   1706f:	44 88 55 00          	mov    %r10b,0x0(%rbp)
   17073:	eb ec                	jmp    17061 <vcprintf+0x38e>
   17075:	85 f6                	test   %esi,%esi
   17077:	74 14                	je     1708d <vcprintf+0x3ba>
   17079:	40 84 ff             	test   %dil,%dil
   1707c:	74 0f                	je     1708d <vcprintf+0x3ba>
   1707e:	c6 45 00 2d          	movb   $0x2d,0x0(%rbp)
   17082:	eb 09                	jmp    1708d <vcprintf+0x3ba>
   17084:	88 44 24 26          	mov    %al,0x26(%rsp)
   17088:	48 8d 6c 24 26       	lea    0x26(%rsp),%rbp
   1708d:	0f b6 75 00          	movzbl 0x0(%rbp),%esi
   17091:	40 84 f6             	test   %sil,%sil
   17094:	74 2d                	je     170c3 <vcprintf+0x3f0>
   17096:	4c 89 e7             	mov    %r12,%rdi
   17099:	48 ff c5             	inc    %rbp
   1709c:	e8 00 fc ff ff       	call   16ca1 <cputchar>
   170a1:	eb ea                	jmp    1708d <vcprintf+0x3ba>
   170a3:	66 8b 75 00          	mov    0x0(%rbp),%si
   170a7:	66 85 f6             	test   %si,%si
   170aa:	74 17                	je     170c3 <vcprintf+0x3f0>
   170ac:	40 88 74 24 08       	mov    %sil,0x8(%rsp)
   170b1:	4c 89 e7             	mov    %r12,%rdi
   170b4:	40 0f b6 f6          	movzbl %sil,%esi
   170b8:	48 83 c5 02          	add    $0x2,%rbp
   170bc:	e8 e0 fb ff ff       	call   16ca1 <cputchar>
   170c1:	eb e0                	jmp    170a3 <vcprintf+0x3d0>
   170c3:	49 ff c6             	inc    %r14
   170c6:	e9 3e fc ff ff       	jmp    16d09 <vcprintf+0x36>
   170cb:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   170d0:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   170d5:	48 2b 15 74 2f 01 00 	sub    0x12f74(%rip),%rdx        # 2a050 <__stack_chk_guard>
   170dc:	74 05                	je     170e3 <vcprintf+0x410>
   170de:	e8 7d b9 fe ff       	call   2a60 <__stack_chk_fail>
   170e3:	48 83 c4 30          	add    $0x30,%rsp
   170e7:	5b                   	pop    %rbx
   170e8:	5d                   	pop    %rbp
   170e9:	41 5c                	pop    %r12
   170eb:	41 5d                	pop    %r13
   170ed:	41 5e                	pop    %r14
   170ef:	c3                   	ret    

00000000000170f0 <vsnprintf>:
   170f0:	f3 0f 1e fa          	endbr64 
   170f4:	55                   	push   %rbp
   170f5:	48 89 fd             	mov    %rdi,%rbp
   170f8:	53                   	push   %rbx
   170f9:	48 89 f3             	mov    %rsi,%rbx
   170fc:	48 89 d6             	mov    %rdx,%rsi
   170ff:	48 89 ca             	mov    %rcx,%rdx
   17102:	48 83 ec 38          	sub    $0x38,%rsp
   17106:	48 8b 05 43 2f 01 00 	mov    0x12f43(%rip),%rax        # 2a050 <__stack_chk_guard>
   1710d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17112:	48 8d 05 98 fb ff ff 	lea    -0x468(%rip),%rax        # 16cb1 <printf_sputc>
   17119:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1711e:	48 89 e7             	mov    %rsp,%rdi
   17121:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   17126:	48 89 04 24          	mov    %rax,(%rsp)
   1712a:	e8 a4 fb ff ff       	call   16cd3 <vcprintf>
   1712f:	48 85 db             	test   %rbx,%rbx
   17132:	74 0f                	je     17143 <vsnprintf+0x53>
   17134:	48 ff cb             	dec    %rbx
   17137:	48 39 c3             	cmp    %rax,%rbx
   1713a:	48 0f 47 d8          	cmova  %rax,%rbx
   1713e:	c6 44 1d 00 00       	movb   $0x0,0x0(%rbp,%rbx,1)
   17143:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   17148:	48 2b 15 01 2f 01 00 	sub    0x12f01(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1714f:	74 05                	je     17156 <vsnprintf+0x66>
   17151:	e8 0a b9 fe ff       	call   2a60 <__stack_chk_fail>
   17156:	48 83 c4 38          	add    $0x38,%rsp
   1715a:	5b                   	pop    %rbx
   1715b:	5d                   	pop    %rbp
   1715c:	c3                   	ret    

000000000001715d <snprintf>:
   1715d:	f3 0f 1e fa          	endbr64 
   17161:	48 83 ec 58          	sub    $0x58,%rsp
   17165:	48 8b 05 e4 2e 01 00 	mov    0x12ee4(%rip),%rax        # 2a050 <__stack_chk_guard>
   1716c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17171:	31 c0                	xor    %eax,%eax
   17173:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   17178:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1717d:	48 89 e1             	mov    %rsp,%rcx
   17180:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17185:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1718a:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1718f:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   17194:	c7 04 24 18 00 00 00 	movl   $0x18,(%rsp)
   1719b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   171a0:	e8 4b ff ff ff       	call   170f0 <vsnprintf>
   171a5:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   171aa:	48 2b 15 9f 2e 01 00 	sub    0x12e9f(%rip),%rdx        # 2a050 <__stack_chk_guard>
   171b1:	74 05                	je     171b8 <snprintf+0x5b>
   171b3:	e8 a8 b8 fe ff       	call   2a60 <__stack_chk_fail>
   171b8:	48 83 c4 58          	add    $0x58,%rsp
   171bc:	c3                   	ret    

00000000000171bd <vssnprintf>:
   171bd:	f3 0f 1e fa          	endbr64 
   171c1:	31 c0                	xor    %eax,%eax
   171c3:	48 85 f6             	test   %rsi,%rsi
   171c6:	48 0f 48 f0          	cmovs  %rax,%rsi
   171ca:	e9 21 ff ff ff       	jmp    170f0 <vsnprintf>

00000000000171cf <ssnprintf>:
   171cf:	f3 0f 1e fa          	endbr64 
   171d3:	48 83 ec 58          	sub    $0x58,%rsp
   171d7:	48 8b 05 72 2e 01 00 	mov    0x12e72(%rip),%rax        # 2a050 <__stack_chk_guard>
   171de:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   171e3:	31 c0                	xor    %eax,%eax
   171e5:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   171ea:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   171ef:	48 89 e1             	mov    %rsp,%rcx
   171f2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   171f7:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   171fc:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   17201:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   17206:	c7 04 24 18 00 00 00 	movl   $0x18,(%rsp)
   1720d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17212:	e8 a6 ff ff ff       	call   171bd <vssnprintf>
   17217:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1721c:	48 2b 15 2d 2e 01 00 	sub    0x12e2d(%rip),%rdx        # 2a050 <__stack_chk_guard>
   17223:	74 05                	je     1722a <ssnprintf+0x5b>
   17225:	e8 36 b8 fe ff       	call   2a60 <__stack_chk_fail>
   1722a:	48 83 c4 58          	add    $0x58,%rsp
   1722e:	c3                   	ret    

000000000001722f <vprintf>:
   1722f:	f3 0f 1e fa          	endbr64 
   17233:	48 83 ec 28          	sub    $0x28,%rsp
   17237:	49 89 f8             	mov    %rdi,%r8
   1723a:	48 89 f2             	mov    %rsi,%rdx
   1723d:	48 8b 05 0c 2e 01 00 	mov    0x12e0c(%rip),%rax        # 2a050 <__stack_chk_guard>
   17244:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17249:	48 8d 05 78 fa ff ff 	lea    -0x588(%rip),%rax        # 16cc8 <printf_putchar>
   17250:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   17255:	4c 89 c6             	mov    %r8,%rsi
   17258:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1725d:	e8 71 fa ff ff       	call   16cd3 <vcprintf>
   17262:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   17267:	48 2b 15 e2 2d 01 00 	sub    0x12de2(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1726e:	74 05                	je     17275 <vprintf+0x46>
   17270:	e8 eb b7 fe ff       	call   2a60 <__stack_chk_fail>
   17275:	48 83 c4 28          	add    $0x28,%rsp
   17279:	c3                   	ret    

000000000001727a <printf>:
   1727a:	f3 0f 1e fa          	endbr64 
   1727e:	48 83 ec 58          	sub    $0x58,%rsp
   17282:	48 8b 05 c7 2d 01 00 	mov    0x12dc7(%rip),%rax        # 2a050 <__stack_chk_guard>
   17289:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1728e:	31 c0                	xor    %eax,%eax
   17290:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   17295:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   1729a:	48 89 e6             	mov    %rsp,%rsi
   1729d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   172a2:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   172a7:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   172ac:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   172b1:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   172b6:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   172bb:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   172c2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   172c7:	e8 63 ff ff ff       	call   1722f <vprintf>
   172cc:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   172d1:	48 2b 15 78 2d 01 00 	sub    0x12d78(%rip),%rdx        # 2a050 <__stack_chk_guard>
   172d8:	74 05                	je     172df <printf+0x65>
   172da:	e8 81 b7 fe ff       	call   2a60 <__stack_chk_fail>
   172df:	48 83 c4 58          	add    $0x58,%rsp
   172e3:	c3                   	ret    

00000000000172e4 <wcslen>:
   172e4:	f3 0f 1e fa          	endbr64 
   172e8:	31 c0                	xor    %eax,%eax
   172ea:	66 83 3c 47 00       	cmpw   $0x0,(%rdi,%rax,2)
   172ef:	74 05                	je     172f6 <wcslen+0x12>
   172f1:	48 ff c0             	inc    %rax
   172f4:	eb f4                	jmp    172ea <wcslen+0x6>
   172f6:	c3                   	ret    

00000000000172f7 <wattroff>:
   172f7:	f3 0f 1e fa          	endbr64 
   172fb:	f7 d6                	not    %esi
   172fd:	31 c0                	xor    %eax,%eax
   172ff:	21 77 08             	and    %esi,0x8(%rdi)
   17302:	c3                   	ret    

0000000000017303 <wattron>:
   17303:	f3 0f 1e fa          	endbr64 
   17307:	09 77 08             	or     %esi,0x8(%rdi)
   1730a:	31 c0                	xor    %eax,%eax
   1730c:	c3                   	ret    

000000000001730d <wattrset>:
   1730d:	f3 0f 1e fa          	endbr64 
   17311:	8b 47 08             	mov    0x8(%rdi),%eax
   17314:	25 00 ff 00 00       	and    $0xff00,%eax
   17319:	09 f0                	or     %esi,%eax
   1731b:	89 47 08             	mov    %eax,0x8(%rdi)
   1731e:	31 c0                	xor    %eax,%eax
   17320:	c3                   	ret    

0000000000017321 <wcolour_set>:
   17321:	f3 0f 1e fa          	endbr64 
   17325:	83 c8 ff             	or     $0xffffffff,%eax
   17328:	66 83 fe 08          	cmp    $0x8,%si
   1732c:	77 13                	ja     17341 <wcolour_set+0x20>
   1732e:	8b 47 08             	mov    0x8(%rdi),%eax
   17331:	0f bf f6             	movswl %si,%esi
   17334:	c1 e6 08             	shl    $0x8,%esi
   17337:	66 31 c0             	xor    %ax,%ax
   1733a:	09 f0                	or     %esi,%eax
   1733c:	89 47 08             	mov    %eax,0x8(%rdi)
   1733f:	31 c0                	xor    %eax,%eax
   17341:	c3                   	ret    

0000000000017342 <initscr>:
   17342:	f3 0f 1e fa          	endbr64 
   17346:	48 8b 05 13 f6 00 00 	mov    0xf613(%rip),%rax        # 26960 <_stdscr>
   1734d:	41 54                	push   %r12
   1734f:	4c 8d 25 0a f6 00 00 	lea    0xf60a(%rip),%r12        # 26960 <_stdscr>
   17356:	48 89 c7             	mov    %rax,%rdi
   17359:	ff 50 10             	call   *0x10(%rax)
   1735c:	8b 05 2e d3 00 00    	mov    0xd32e(%rip),%eax        # 24690 <console_height>
   17362:	4c 89 e7             	mov    %r12,%rdi
   17365:	31 d2                	xor    %edx,%edx
   17367:	31 f6                	xor    %esi,%esi
   17369:	89 05 11 f6 00 00    	mov    %eax,0xf611(%rip)        # 26980 <_stdscr+0x20>
   1736f:	8b 05 1f d3 00 00    	mov    0xd31f(%rip),%eax        # 24694 <console_width>
   17375:	89 05 01 f6 00 00    	mov    %eax,0xf601(%rip)        # 2697c <_stdscr+0x1c>
   1737b:	e8 3b 62 ff ff       	call   d5bb <wmove>
   17380:	4c 89 e0             	mov    %r12,%rax
   17383:	41 5c                	pop    %r12
   17385:	c3                   	ret    

0000000000017386 <endwin>:
   17386:	f3 0f 1e fa          	endbr64 
   1738a:	55                   	push   %rbp
   1738b:	48 8d 2d ce f5 00 00 	lea    0xf5ce(%rip),%rbp        # 26960 <_stdscr>
   17392:	31 f6                	xor    %esi,%esi
   17394:	48 89 ef             	mov    %rbp,%rdi
   17397:	e8 71 ff ff ff       	call   1730d <wattrset>
   1739c:	31 d2                	xor    %edx,%edx
   1739e:	31 f6                	xor    %esi,%esi
   173a0:	48 89 ef             	mov    %rbp,%rdi
   173a3:	e8 79 ff ff ff       	call   17321 <wcolour_set>
   173a8:	bf 01 00 00 00       	mov    $0x1,%edi
   173ad:	e8 2b 62 ff ff       	call   d5dd <curs_set>
   173b2:	8b 05 d8 d2 00 00    	mov    0xd2d8(%rip),%eax        # 24690 <console_height>
   173b8:	31 d2                	xor    %edx,%edx
   173ba:	48 89 ef             	mov    %rbp,%rdi
   173bd:	8d 70 ff             	lea    -0x1(%rax),%esi
   173c0:	e8 f6 61 ff ff       	call   d5bb <wmove>
   173c5:	85 c0                	test   %eax,%eax
   173c7:	75 0f                	jne    173d8 <endwin+0x52>
   173c9:	48 8d 35 df c6 00 00 	lea    0xc6df(%rip),%rsi        # 23aaf <.LC0>
   173d0:	48 89 ef             	mov    %rbp,%rdi
   173d3:	e8 c0 85 ff ff       	call   f998 <wprintw>
   173d8:	48 8b 05 81 f5 00 00 	mov    0xf581(%rip),%rax        # 26960 <_stdscr>
   173df:	48 89 c7             	mov    %rax,%rdi
   173e2:	ff 50 18             	call   *0x18(%rax)
   173e5:	31 c0                	xor    %eax,%eax
   173e7:	5d                   	pop    %rbp
   173e8:	c3                   	ret    

00000000000173e9 <__memcpy>:
   173e9:	f3 0f 1e fa          	endbr64 
   173ed:	48 89 d1             	mov    %rdx,%rcx
   173f0:	48 89 f8             	mov    %rdi,%rax
   173f3:	48 c1 e9 02          	shr    $0x2,%rcx
   173f7:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
   173f9:	83 e2 03             	and    $0x3,%edx
   173fc:	48 89 d1             	mov    %rdx,%rcx
   173ff:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   17401:	c3                   	ret    

0000000000017402 <__memcpy_reverse>:
   17402:	f3 0f 1e fa          	endbr64 
   17406:	e9 ff c4 ff ff       	jmp    1390a <generic_memcpy_reverse>

000000000001740b <__memmove>:
   1740b:	f3 0f 1e fa          	endbr64 
   1740f:	48 39 f7             	cmp    %rsi,%rdi
   17412:	77 05                	ja     17419 <__memmove+0xe>
   17414:	e9 d0 ff ff ff       	jmp    173e9 <__memcpy>
   17419:	e9 e4 ff ff ff       	jmp    17402 <__memcpy_reverse>

000000000001741e <tcpip_continue_chksum>:
   1741e:	f3 0f 1e fa          	endbr64 
   17422:	f7 d7                	not    %edi
   17424:	53                   	push   %rbx
   17425:	31 c9                	xor    %ecx,%ecx
   17427:	0f b7 df             	movzwl %di,%ebx
   1742a:	48 83 fa 07          	cmp    $0x7,%rdx
   1742e:	76 0c                	jbe    1743c <tcpip_continue_chksum+0x1e>
   17430:	48 89 f1             	mov    %rsi,%rcx
   17433:	48 f7 d9             	neg    %rcx
   17436:	48 d1 e9             	shr    %rcx
   17439:	83 e1 03             	and    $0x3,%ecx
   1743c:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
   17440:	4c 8d 15 95 00 00 00 	lea    0x95(%rip),%r10        # 174dc <x86_tcpip_loop_end>
   17447:	48 ff c1             	inc    %rcx
   1744a:	48 29 c2             	sub    %rax,%rdx
   1744d:	31 c0                	xor    %eax,%eax
   1744f:	49 89 d0             	mov    %rdx,%r8
   17452:	48 89 d7             	mov    %rdx,%rdi
   17455:	49 89 d1             	mov    %rdx,%r9
   17458:	83 e2 01             	and    $0x1,%edx
   1745b:	49 d1 e8             	shr    %r8
   1745e:	48 c1 ef 03          	shr    $0x3,%rdi
   17462:	49 c1 e9 07          	shr    $0x7,%r9
   17466:	41 83 e0 03          	and    $0x3,%r8d
   1746a:	83 e7 0f             	and    $0xf,%edi
   1746d:	49 ff c1             	inc    %r9
   17470:	49 ff c0             	inc    %r8
   17473:	48 69 ff fb ff ff ff 	imul   $0xfffffffffffffffb,%rdi,%rdi
   1747a:	4c 01 d7             	add    %r10,%rdi
   1747d:	f8                   	clc    
   1747e:	eb 05                	jmp    17485 <tcpip_continue_chksum+0x67>
   17480:	66 ad                	lods   %ds:(%rsi),%ax
   17482:	66 11 c3             	adc    %ax,%bx
   17485:	e2 f9                	loop   17480 <tcpip_continue_chksum+0x62>
   17487:	4c 89 c9             	mov    %r9,%rcx
   1748a:	ff e7                	jmp    *%rdi

000000000001748c <x86_tcpip_loop_start>:
   1748c:	48 ad                	lods   %ds:(%rsi),%rax
   1748e:	48 11 c3             	adc    %rax,%rbx
   17491:	48 ad                	lods   %ds:(%rsi),%rax
   17493:	48 11 c3             	adc    %rax,%rbx
   17496:	48 ad                	lods   %ds:(%rsi),%rax
   17498:	48 11 c3             	adc    %rax,%rbx
   1749b:	48 ad                	lods   %ds:(%rsi),%rax
   1749d:	48 11 c3             	adc    %rax,%rbx
   174a0:	48 ad                	lods   %ds:(%rsi),%rax
   174a2:	48 11 c3             	adc    %rax,%rbx
   174a5:	48 ad                	lods   %ds:(%rsi),%rax
   174a7:	48 11 c3             	adc    %rax,%rbx
   174aa:	48 ad                	lods   %ds:(%rsi),%rax
   174ac:	48 11 c3             	adc    %rax,%rbx
   174af:	48 ad                	lods   %ds:(%rsi),%rax
   174b1:	48 11 c3             	adc    %rax,%rbx
   174b4:	48 ad                	lods   %ds:(%rsi),%rax
   174b6:	48 11 c3             	adc    %rax,%rbx
   174b9:	48 ad                	lods   %ds:(%rsi),%rax
   174bb:	48 11 c3             	adc    %rax,%rbx
   174be:	48 ad                	lods   %ds:(%rsi),%rax
   174c0:	48 11 c3             	adc    %rax,%rbx
   174c3:	48 ad                	lods   %ds:(%rsi),%rax
   174c5:	48 11 c3             	adc    %rax,%rbx
   174c8:	48 ad                	lods   %ds:(%rsi),%rax
   174ca:	48 11 c3             	adc    %rax,%rbx
   174cd:	48 ad                	lods   %ds:(%rsi),%rax
   174cf:	48 11 c3             	adc    %rax,%rbx
   174d2:	48 ad                	lods   %ds:(%rsi),%rax
   174d4:	48 11 c3             	adc    %rax,%rbx
   174d7:	48 ad                	lods   %ds:(%rsi),%rax
   174d9:	48 11 c3             	adc    %rax,%rbx

00000000000174dc <x86_tcpip_loop_end>:
   174dc:	e2 ae                	loop   1748c <x86_tcpip_loop_start>
   174de:	4c 89 c1             	mov    %r8,%rcx
   174e1:	eb 05                	jmp    174e8 <x86_tcpip_loop_end+0xc>
   174e3:	66 ad                	lods   %ds:(%rsi),%ax
   174e5:	66 11 c3             	adc    %ax,%bx
   174e8:	e2 f9                	loop   174e3 <x86_tcpip_loop_end+0x7>
   174ea:	48 89 d1             	mov    %rdx,%rcx
   174ed:	e2 05                	loop   174f4 <x86_tcpip_loop_end+0x18>
   174ef:	12 1e                	adc    (%rsi),%bl
   174f1:	80 d7 00             	adc    $0x0,%bh
   174f4:	53                   	push   %rbx
   174f5:	66 5b                	pop    %bx
   174f7:	66 58                	pop    %ax
   174f9:	66 11 c3             	adc    %ax,%bx
   174fc:	66 58                	pop    %ax
   174fe:	66 11 c3             	adc    %ax,%bx
   17501:	66 58                	pop    %ax
   17503:	66 11 c3             	adc    %ax,%bx
   17506:	66 83 d3 00          	adc    $0x0,%bx
   1750a:	66 83 d3 00          	adc    $0x0,%bx
   1750e:	89 d8                	mov    %ebx,%eax
   17510:	5b                   	pop    %rbx
   17511:	f7 d0                	not    %eax
   17513:	c3                   	ret    

0000000000017514 <xfer_window>:
   17514:	f3 0f 1e fa          	endbr64 
   17518:	41 54                	push   %r12
   1751a:	48 8d 35 f3 ff ff ff 	lea    -0xd(%rip),%rsi        # 17514 <xfer_window>
   17521:	49 83 cc ff          	or     $0xffffffffffffffff,%r12
   17525:	53                   	push   %rbx
   17526:	48 83 ec 18          	sub    $0x18,%rsp
   1752a:	48 8b 05 1f 2b 01 00 	mov    0x12b1f(%rip),%rax        # 2a050 <__stack_chk_guard>
   17531:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17536:	31 c0                	xor    %eax,%eax
   17538:	48 89 e2             	mov    %rsp,%rdx
   1753b:	e8 95 23 ff ff       	call   98d5 <intf_get_dest_op_untyped>
   17540:	48 85 c0             	test   %rax,%rax
   17543:	74 14                	je     17559 <xfer_window+0x45>
   17545:	48 8b 3c 24          	mov    (%rsp),%rdi
   17549:	48 89 c3             	mov    %rax,%rbx
   1754c:	e8 2e 23 ff ff       	call   987f <intf_object>
   17551:	48 89 c7             	mov    %rax,%rdi
   17554:	ff d3                	call   *%rbx
   17556:	49 89 c4             	mov    %rax,%r12
   17559:	48 8b 3c 24          	mov    (%rsp),%rdi
   1755d:	e8 ae 22 ff ff       	call   9810 <intf_put>
   17562:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17567:	48 2b 05 e2 2a 01 00 	sub    0x12ae2(%rip),%rax        # 2a050 <__stack_chk_guard>
   1756e:	74 05                	je     17575 <xfer_window+0x61>
   17570:	e8 eb b4 fe ff       	call   2a60 <__stack_chk_fail>
   17575:	48 83 c4 18          	add    $0x18,%rsp
   17579:	4c 89 e0             	mov    %r12,%rax
   1757c:	5b                   	pop    %rbx
   1757d:	41 5c                	pop    %r12
   1757f:	c3                   	ret    

0000000000017580 <xfer_window_changed>:
   17580:	f3 0f 1e fa          	endbr64 
   17584:	48 8d 35 f5 ff ff ff 	lea    -0xb(%rip),%rsi        # 17580 <xfer_window_changed>
   1758b:	e9 83 26 ff ff       	jmp    9c13 <intf_poke>

0000000000017590 <xfer_vredirect>:
   17590:	f3 0f 1e fa          	endbr64 
   17594:	41 56                	push   %r14
   17596:	49 89 f8             	mov    %rdi,%r8
   17599:	b9 08 00 00 00       	mov    $0x8,%ecx
   1759e:	41 55                	push   %r13
   175a0:	49 89 d5             	mov    %rdx,%r13
   175a3:	41 54                	push   %r12
   175a5:	41 89 f4             	mov    %esi,%r12d
   175a8:	48 8d 35 b1 d0 00 00 	lea    0xd0b1(%rip),%rsi        # 24660 <type_sizes+0x1c>
   175af:	55                   	push   %rbp
   175b0:	53                   	push   %rbx
   175b1:	48 83 ec 30          	sub    $0x30,%rsp
   175b5:	48 8b 05 94 2a 01 00 	mov    0x12a94(%rip),%rax        # 2a050 <__stack_chk_guard>
   175bc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   175c1:	31 c0                	xor    %eax,%eax
   175c3:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   175c8:	48 89 e2             	mov    %rsp,%rdx
   175cb:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
   175cd:	4c 89 c7             	mov    %r8,%rdi
   175d0:	48 8d 35 b9 ff ff ff 	lea    -0x47(%rip),%rsi        # 17590 <xfer_vredirect>
   175d7:	e8 b2 22 ff ff       	call   988e <intf_get_dest_op_no_passthru_untyped>
   175dc:	4c 8b 34 24          	mov    (%rsp),%r14
   175e0:	48 89 c3             	mov    %rax,%rbx
   175e3:	4c 89 f7             	mov    %r14,%rdi
   175e6:	e8 94 22 ff ff       	call   987f <intf_object>
   175eb:	48 85 db             	test   %rbx,%rbx
   175ee:	74 10                	je     17600 <xfer_vredirect+0x70>
   175f0:	44 89 e6             	mov    %r12d,%esi
   175f3:	48 89 c7             	mov    %rax,%rdi
   175f6:	4c 89 ea             	mov    %r13,%rdx
   175f9:	ff d3                	call   *%rbx
   175fb:	41 89 c4             	mov    %eax,%r12d
   175fe:	eb 4b                	jmp    1764b <xfer_vredirect+0xbb>
   17600:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   17605:	4c 89 f6             	mov    %r14,%rsi
   17608:	48 89 ef             	mov    %rbp,%rdi
   1760b:	e8 0d 22 ff ff       	call   981d <intf_plug>
   17610:	48 8b 3c 24          	mov    (%rsp),%rdi
   17614:	44 89 e6             	mov    %r12d,%esi
   17617:	4c 89 ea             	mov    %r13,%rdx
   1761a:	e8 f1 76 ff ff       	call   ed10 <xfer_vreopen>
   1761f:	41 89 c4             	mov    %eax,%r12d
   17622:	85 c0                	test   %eax,%eax
   17624:	75 13                	jne    17639 <xfer_vredirect+0xa9>
   17626:	48 8b 3c 24          	mov    (%rsp),%rdi
   1762a:	e8 51 ff ff ff       	call   17580 <xfer_window_changed>
   1762f:	48 89 ef             	mov    %rbp,%rdi
   17632:	e8 49 ff ff ff       	call   17580 <xfer_window_changed>
   17637:	eb 0a                	jmp    17643 <xfer_vredirect+0xb3>
   17639:	89 c6                	mov    %eax,%esi
   1763b:	48 89 ef             	mov    %rbp,%rdi
   1763e:	e8 ec 22 ff ff       	call   992f <intf_close>
   17643:	48 89 ef             	mov    %rbp,%rdi
   17646:	e8 18 22 ff ff       	call   9863 <intf_unplug>
   1764b:	48 8b 3c 24          	mov    (%rsp),%rdi
   1764f:	e8 bc 21 ff ff       	call   9810 <intf_put>
   17654:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   17659:	48 2b 05 f0 29 01 00 	sub    0x129f0(%rip),%rax        # 2a050 <__stack_chk_guard>
   17660:	74 05                	je     17667 <xfer_vredirect+0xd7>
   17662:	e8 f9 b3 fe ff       	call   2a60 <__stack_chk_fail>
   17667:	48 83 c4 30          	add    $0x30,%rsp
   1766b:	44 89 e0             	mov    %r12d,%eax
   1766e:	5b                   	pop    %rbx
   1766f:	5d                   	pop    %rbp
   17670:	41 5c                	pop    %r12
   17672:	41 5d                	pop    %r13
   17674:	41 5e                	pop    %r14
   17676:	c3                   	ret    

0000000000017677 <xfer_alloc_iob>:
   17677:	f3 0f 1e fa          	endbr64 
   1767b:	55                   	push   %rbp
   1767c:	48 89 f5             	mov    %rsi,%rbp
   1767f:	48 8d 35 f1 ff ff ff 	lea    -0xf(%rip),%rsi        # 17677 <xfer_alloc_iob>
   17686:	53                   	push   %rbx
   17687:	48 83 ec 28          	sub    $0x28,%rsp
   1768b:	48 8b 05 be 29 01 00 	mov    0x129be(%rip),%rax        # 2a050 <__stack_chk_guard>
   17692:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17697:	31 c0                	xor    %eax,%eax
   17699:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1769e:	e8 32 22 ff ff       	call   98d5 <intf_get_dest_op_untyped>
   176a3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   176a8:	48 89 c3             	mov    %rax,%rbx
   176ab:	e8 cf 21 ff ff       	call   987f <intf_object>
   176b0:	48 85 db             	test   %rbx,%rbx
   176b3:	74 0a                	je     176bf <xfer_alloc_iob+0x48>
   176b5:	48 89 c7             	mov    %rax,%rdi
   176b8:	48 89 ee             	mov    %rbp,%rsi
   176bb:	ff d3                	call   *%rbx
   176bd:	eb 08                	jmp    176c7 <xfer_alloc_iob+0x50>
   176bf:	48 89 ef             	mov    %rbp,%rdi
   176c2:	e8 85 26 ff ff       	call   9d4c <alloc_iob>
   176c7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   176cc:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   176d1:	e8 3a 21 ff ff       	call   9810 <intf_put>
   176d6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   176db:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   176e0:	48 2b 15 69 29 01 00 	sub    0x12969(%rip),%rdx        # 2a050 <__stack_chk_guard>
   176e7:	74 05                	je     176ee <xfer_alloc_iob+0x77>
   176e9:	e8 72 b3 fe ff       	call   2a60 <__stack_chk_fail>
   176ee:	48 83 c4 28          	add    $0x28,%rsp
   176f2:	5b                   	pop    %rbx
   176f3:	5d                   	pop    %rbp
   176f4:	c3                   	ret    

00000000000176f5 <xfer_deliver>:
   176f5:	f3 0f 1e fa          	endbr64 
   176f9:	41 55                	push   %r13
   176fb:	49 89 d5             	mov    %rdx,%r13
   176fe:	41 54                	push   %r12
   17700:	49 89 f4             	mov    %rsi,%r12
   17703:	48 8d 35 eb ff ff ff 	lea    -0x15(%rip),%rsi        # 176f5 <xfer_deliver>
   1770a:	53                   	push   %rbx
   1770b:	48 83 ec 10          	sub    $0x10,%rsp
   1770f:	48 8b 05 3a 29 01 00 	mov    0x1293a(%rip),%rax        # 2a050 <__stack_chk_guard>
   17716:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1771b:	31 c0                	xor    %eax,%eax
   1771d:	48 89 e2             	mov    %rsp,%rdx
   17720:	e8 b0 21 ff ff       	call   98d5 <intf_get_dest_op_untyped>
   17725:	48 8b 3c 24          	mov    (%rsp),%rdi
   17729:	48 89 c3             	mov    %rax,%rbx
   1772c:	e8 4e 21 ff ff       	call   987f <intf_object>
   17731:	48 85 db             	test   %rbx,%rbx
   17734:	74 10                	je     17746 <xfer_deliver+0x51>
   17736:	4c 89 e6             	mov    %r12,%rsi
   17739:	48 89 c7             	mov    %rax,%rdi
   1773c:	4c 89 ea             	mov    %r13,%rdx
   1773f:	ff d3                	call   *%rbx
   17741:	41 89 c4             	mov    %eax,%r12d
   17744:	eb 0e                	jmp    17754 <xfer_deliver+0x5f>
   17746:	4c 89 e7             	mov    %r12,%rdi
   17749:	e8 18 26 ff ff       	call   9d66 <free_iob>
   1774e:	41 bc 6b df f1 bd    	mov    $0xbdf1df6b,%r12d
   17754:	48 8b 3c 24          	mov    (%rsp),%rdi
   17758:	e8 b3 20 ff ff       	call   9810 <intf_put>
   1775d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17762:	48 2b 05 e7 28 01 00 	sub    0x128e7(%rip),%rax        # 2a050 <__stack_chk_guard>
   17769:	74 05                	je     17770 <xfer_deliver+0x7b>
   1776b:	e8 f0 b2 fe ff       	call   2a60 <__stack_chk_fail>
   17770:	48 83 c4 10          	add    $0x10,%rsp
   17774:	44 89 e0             	mov    %r12d,%eax
   17777:	5b                   	pop    %rbx
   17778:	41 5c                	pop    %r12
   1777a:	41 5d                	pop    %r13
   1777c:	c3                   	ret    

000000000001777d <xfer_redirect>:
   1777d:	f3 0f 1e fa          	endbr64 
   17781:	48 83 ec 58          	sub    $0x58,%rsp
   17785:	48 8b 05 c4 28 01 00 	mov    0x128c4(%rip),%rax        # 2a050 <__stack_chk_guard>
   1778c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17791:	31 c0                	xor    %eax,%eax
   17793:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   17798:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1779d:	48 89 e2             	mov    %rsp,%rdx
   177a0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   177a5:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   177aa:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   177af:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   177b4:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   177b9:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   177c0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   177c5:	e8 c6 fd ff ff       	call   17590 <xfer_vredirect>
   177ca:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   177cf:	48 2b 15 7a 28 01 00 	sub    0x1287a(%rip),%rdx        # 2a050 <__stack_chk_guard>
   177d6:	74 05                	je     177dd <xfer_redirect+0x60>
   177d8:	e8 83 b2 fe ff       	call   2a60 <__stack_chk_fail>
   177dd:	48 83 c4 58          	add    $0x58,%rsp
   177e1:	c3                   	ret    

00000000000177e2 <xfer_deliver_iob>:
   177e2:	f3 0f 1e fa          	endbr64 
   177e6:	48 8d 15 d3 26 01 00 	lea    0x126d3(%rip),%rdx        # 29ec0 <dummy_metadata>
   177ed:	e9 03 ff ff ff       	jmp    176f5 <xfer_deliver>

00000000000177f2 <xfer_deliver_raw_meta>:
   177f2:	f3 0f 1e fa          	endbr64 
   177f6:	41 57                	push   %r15
   177f8:	49 89 f7             	mov    %rsi,%r15
   177fb:	48 89 d6             	mov    %rdx,%rsi
   177fe:	41 56                	push   %r14
   17800:	49 89 ce             	mov    %rcx,%r14
   17803:	41 55                	push   %r13
   17805:	49 89 fd             	mov    %rdi,%r13
   17808:	55                   	push   %rbp
   17809:	48 83 ec 18          	sub    $0x18,%rsp
   1780d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   17812:	e8 60 fe ff ff       	call   17677 <xfer_alloc_iob>
   17817:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1781c:	48 85 c0             	test   %rax,%rax
   1781f:	74 30                	je     17851 <xfer_deliver_raw_meta+0x5f>
   17821:	48 8b 78 20          	mov    0x20(%rax),%rdi
   17825:	48 89 c5             	mov    %rax,%rbp
   17828:	4c 89 fe             	mov    %r15,%rsi
   1782b:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   1782f:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17833:	e8 b1 fb ff ff       	call   173e9 <__memcpy>
   17838:	48 83 c4 18          	add    $0x18,%rsp
   1783c:	4c 89 f2             	mov    %r14,%rdx
   1783f:	48 89 ee             	mov    %rbp,%rsi
   17842:	4c 89 ef             	mov    %r13,%rdi
   17845:	5d                   	pop    %rbp
   17846:	41 5d                	pop    %r13
   17848:	41 5e                	pop    %r14
   1784a:	41 5f                	pop    %r15
   1784c:	e9 a4 fe ff ff       	jmp    176f5 <xfer_deliver>
   17851:	48 83 c4 18          	add    $0x18,%rsp
   17855:	b8 77 df f1 ce       	mov    $0xcef1df77,%eax
   1785a:	5d                   	pop    %rbp
   1785b:	41 5d                	pop    %r13
   1785d:	41 5e                	pop    %r14
   1785f:	41 5f                	pop    %r15
   17861:	c3                   	ret    

0000000000017862 <xfer_deliver_raw>:
   17862:	f3 0f 1e fa          	endbr64 
   17866:	48 8d 0d 53 26 01 00 	lea    0x12653(%rip),%rcx        # 29ec0 <dummy_metadata>
   1786d:	e9 80 ff ff ff       	jmp    177f2 <xfer_deliver_raw_meta>

0000000000017872 <xfer_seek>:
   17872:	f3 0f 1e fa          	endbr64 
   17876:	55                   	push   %rbp
   17877:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1787c:	48 89 fd             	mov    %rdi,%rbp
   1787f:	48 83 ec 30          	sub    $0x30,%rsp
   17883:	48 8b 05 c6 27 01 00 	mov    0x127c6(%rip),%rax        # 2a050 <__stack_chk_guard>
   1788a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1788f:	31 c0                	xor    %eax,%eax
   17891:	48 89 e7             	mov    %rsp,%rdi
   17894:	f3 ab                	rep stos %eax,%es:(%rdi)
   17896:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1789b:	48 89 ef             	mov    %rbp,%rdi
   1789e:	31 f6                	xor    %esi,%esi
   178a0:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   178a7:	e8 cb fd ff ff       	call   17677 <xfer_alloc_iob>
   178ac:	48 85 c0             	test   %rax,%rax
   178af:	75 07                	jne    178b8 <xfer_seek+0x46>
   178b1:	b8 77 df f1 ce       	mov    $0xcef1df77,%eax
   178b6:	eb 0e                	jmp    178c6 <xfer_seek+0x54>
   178b8:	48 89 c6             	mov    %rax,%rsi
   178bb:	48 89 e2             	mov    %rsp,%rdx
   178be:	48 89 ef             	mov    %rbp,%rdi
   178c1:	e8 2f fe ff ff       	call   176f5 <xfer_deliver>
   178c6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   178cb:	48 2b 15 7e 27 01 00 	sub    0x1277e(%rip),%rdx        # 2a050 <__stack_chk_guard>
   178d2:	74 05                	je     178d9 <xfer_seek+0x67>
   178d4:	e8 87 b1 fe ff       	call   2a60 <__stack_chk_fail>
   178d9:	48 83 c4 30          	add    $0x30,%rsp
   178dd:	5d                   	pop    %rbp
   178de:	c3                   	ret    

00000000000178df <xferbuf_malloc_write>:
   178df:	f3 0f 1e fa          	endbr64 
   178e3:	49 89 d0             	mov    %rdx,%r8
   178e6:	48 03 37             	add    (%rdi),%rsi
   178e9:	48 89 ca             	mov    %rcx,%rdx
   178ec:	48 89 f7             	mov    %rsi,%rdi
   178ef:	4c 89 c6             	mov    %r8,%rsi
   178f2:	e9 f2 fa ff ff       	jmp    173e9 <__memcpy>

00000000000178f7 <xferbuf_malloc_read>:
   178f7:	f3 0f 1e fa          	endbr64 
   178fb:	49 89 f8             	mov    %rdi,%r8
   178fe:	48 89 d7             	mov    %rdx,%rdi
   17901:	48 89 ca             	mov    %rcx,%rdx
   17904:	49 03 30             	add    (%r8),%rsi
   17907:	e9 dd fa ff ff       	jmp    173e9 <__memcpy>

000000000001790c <xferbuf_umalloc_write>:
   1790c:	f3 0f 1e fa          	endbr64 
   17910:	48 8b 07             	mov    (%rdi),%rax
   17913:	49 89 d0             	mov    %rdx,%r8
   17916:	48 89 ca             	mov    %rcx,%rdx
   17919:	48 03 30             	add    (%rax),%rsi
   1791c:	48 89 f7             	mov    %rsi,%rdi
   1791f:	4c 89 c6             	mov    %r8,%rsi
   17922:	e9 c2 fa ff ff       	jmp    173e9 <__memcpy>

0000000000017927 <xferbuf_umalloc_read>:
   17927:	f3 0f 1e fa          	endbr64 
   1792b:	49 89 f8             	mov    %rdi,%r8
   1792e:	48 89 d7             	mov    %rdx,%rdi
   17931:	48 89 ca             	mov    %rcx,%rdx
   17934:	49 8b 00             	mov    (%r8),%rax
   17937:	48 03 30             	add    (%rax),%rsi
   1793a:	e9 aa fa ff ff       	jmp    173e9 <__memcpy>

000000000001793f <xfer_buffer>:
   1793f:	f3 0f 1e fa          	endbr64 
   17943:	41 54                	push   %r12
   17945:	48 8d 35 f3 ff ff ff 	lea    -0xd(%rip),%rsi        # 1793f <xfer_buffer>
   1794c:	49 89 fc             	mov    %rdi,%r12
   1794f:	55                   	push   %rbp
   17950:	53                   	push   %rbx
   17951:	48 83 ec 20          	sub    $0x20,%rsp
   17955:	48 8b 05 f4 26 01 00 	mov    0x126f4(%rip),%rax        # 2a050 <__stack_chk_guard>
   1795c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17961:	31 c0                	xor    %eax,%eax
   17963:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   17968:	e8 68 1f ff ff       	call   98d5 <intf_get_dest_op_untyped>
   1796d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17972:	48 89 c3             	mov    %rax,%rbx
   17975:	e8 05 1f ff ff       	call   987f <intf_object>
   1797a:	4c 89 e7             	mov    %r12,%rdi
   1797d:	45 31 e4             	xor    %r12d,%r12d
   17980:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   17985:	48 8d 35 69 fd ff ff 	lea    -0x297(%rip),%rsi        # 176f5 <xfer_deliver>
   1798c:	48 89 c5             	mov    %rax,%rbp
   1798f:	e8 41 1f ff ff       	call   98d5 <intf_get_dest_op_untyped>
   17994:	48 85 db             	test   %rbx,%rbx
   17997:	74 14                	je     179ad <xfer_buffer+0x6e>
   17999:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1799e:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
   179a3:	75 08                	jne    179ad <xfer_buffer+0x6e>
   179a5:	48 89 ef             	mov    %rbp,%rdi
   179a8:	ff d3                	call   *%rbx
   179aa:	49 89 c4             	mov    %rax,%r12
   179ad:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   179b2:	e8 59 1e ff ff       	call   9810 <intf_put>
   179b7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   179bc:	e8 4f 1e ff ff       	call   9810 <intf_put>
   179c1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   179c6:	48 2b 05 83 26 01 00 	sub    0x12683(%rip),%rax        # 2a050 <__stack_chk_guard>
   179cd:	74 05                	je     179d4 <xfer_buffer+0x95>
   179cf:	e8 8c b0 fe ff       	call   2a60 <__stack_chk_fail>
   179d4:	48 83 c4 20          	add    $0x20,%rsp
   179d8:	4c 89 e0             	mov    %r12,%rax
   179db:	5b                   	pop    %rbx
   179dc:	5d                   	pop    %rbp
   179dd:	41 5c                	pop    %r12
   179df:	c3                   	ret    

00000000000179e0 <xferbuf_malloc_realloc>:
   179e0:	f3 0f 1e fa          	endbr64 
   179e4:	53                   	push   %rbx
   179e5:	48 89 fb             	mov    %rdi,%rbx
   179e8:	48 8b 3f             	mov    (%rdi),%rdi
   179eb:	e8 2a 4c ff ff       	call   c61a <realloc>
   179f0:	48 85 c0             	test   %rax,%rax
   179f3:	75 07                	jne    179fc <xferbuf_malloc_realloc+0x1c>
   179f5:	b8 75 df e7 cb       	mov    $0xcbe7df75,%eax
   179fa:	eb 05                	jmp    17a01 <xferbuf_malloc_realloc+0x21>
   179fc:	48 89 03             	mov    %rax,(%rbx)
   179ff:	31 c0                	xor    %eax,%eax
   17a01:	5b                   	pop    %rbx
   17a02:	c3                   	ret    

0000000000017a03 <xferbuf_umalloc_realloc>:
   17a03:	f3 0f 1e fa          	endbr64 
   17a07:	53                   	push   %rbx
   17a08:	48 8b 1f             	mov    (%rdi),%rbx
   17a0b:	48 8b 3b             	mov    (%rbx),%rdi
   17a0e:	e8 5e 5e 00 00       	call   1d871 <urealloc>
   17a13:	48 85 c0             	test   %rax,%rax
   17a16:	75 07                	jne    17a1f <xferbuf_umalloc_realloc+0x1c>
   17a18:	b8 75 df e7 cb       	mov    $0xcbe7df75,%eax
   17a1d:	eb 05                	jmp    17a24 <xferbuf_umalloc_realloc+0x21>
   17a1f:	48 89 03             	mov    %rax,(%rbx)
   17a22:	31 c0                	xor    %eax,%eax
   17a24:	5b                   	pop    %rbx
   17a25:	c3                   	ret    

0000000000017a26 <xferbuf_write>:
   17a26:	f3 0f 1e fa          	endbr64 
   17a2a:	41 54                	push   %r12
   17a2c:	53                   	push   %rbx
   17a2d:	48 89 f3             	mov    %rsi,%rbx
   17a30:	48 83 ec 28          	sub    $0x28,%rsp
   17a34:	48 01 cb             	add    %rcx,%rbx
   17a37:	72 0f                	jb     17a48 <xferbuf_write+0x22>
   17a39:	48 8b 47 18          	mov    0x18(%rdi),%rax
   17a3d:	49 89 f4             	mov    %rsi,%r12
   17a40:	48 3b 5f 08          	cmp    0x8(%rdi),%rbx
   17a44:	77 09                	ja     17a4f <xferbuf_write+0x29>
   17a46:	eb 32                	jmp    17a7a <xferbuf_write+0x54>
   17a48:	b8 7b df e7 bf       	mov    $0xbfe7df7b,%eax
   17a4d:	eb 37                	jmp    17a86 <xferbuf_write+0x60>
   17a4f:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   17a54:	48 89 de             	mov    %rbx,%rsi
   17a57:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   17a5c:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   17a61:	ff 10                	call   *(%rax)
   17a63:	85 c0                	test   %eax,%eax
   17a65:	75 1f                	jne    17a86 <xferbuf_write+0x60>
   17a67:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17a6c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   17a71:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   17a76:	48 89 5f 08          	mov    %rbx,0x8(%rdi)
   17a7a:	48 8b 47 18          	mov    0x18(%rdi),%rax
   17a7e:	4c 89 e6             	mov    %r12,%rsi
   17a81:	ff 50 08             	call   *0x8(%rax)
   17a84:	31 c0                	xor    %eax,%eax
   17a86:	48 83 c4 28          	add    $0x28,%rsp
   17a8a:	5b                   	pop    %rbx
   17a8b:	41 5c                	pop    %r12
   17a8d:	c3                   	ret    

0000000000017a8e <xferbuf_deliver>:
   17a8e:	f3 0f 1e fa          	endbr64 
   17a92:	41 56                	push   %r14
   17a94:	31 c9                	xor    %ecx,%ecx
   17a96:	41 54                	push   %r12
   17a98:	49 89 fc             	mov    %rdi,%r12
   17a9b:	55                   	push   %rbp
   17a9c:	48 89 f5             	mov    %rsi,%rbp
   17a9f:	53                   	push   %rbx
   17aa0:	48 83 ec 18          	sub    $0x18,%rsp
   17aa4:	4c 8b 46 18          	mov    0x18(%rsi),%r8
   17aa8:	4c 8b 76 20          	mov    0x20(%rsi),%r14
   17aac:	48 8b 47 10          	mov    0x10(%rdi),%rax
   17ab0:	4d 29 c6             	sub    %r8,%r14
   17ab3:	f6 02 01             	testb  $0x1,(%rdx)
   17ab6:	48 0f 45 c1          	cmovne %rcx,%rax
   17aba:	48 03 42 08          	add    0x8(%rdx),%rax
   17abe:	4c 89 f1             	mov    %r14,%rcx
   17ac1:	4c 89 c2             	mov    %r8,%rdx
   17ac4:	48 89 c6             	mov    %rax,%rsi
   17ac7:	48 89 c3             	mov    %rax,%rbx
   17aca:	e8 57 ff ff ff       	call   17a26 <xferbuf_write>
   17acf:	85 c0                	test   %eax,%eax
   17ad1:	75 08                	jne    17adb <xferbuf_deliver+0x4d>
   17ad3:	4c 01 f3             	add    %r14,%rbx
   17ad6:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
   17adb:	48 89 ef             	mov    %rbp,%rdi
   17ade:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   17ae2:	e8 7f 22 ff ff       	call   9d66 <free_iob>
   17ae7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   17aeb:	48 83 c4 18          	add    $0x18,%rsp
   17aef:	5b                   	pop    %rbx
   17af0:	5d                   	pop    %rbp
   17af1:	41 5c                	pop    %r12
   17af3:	41 5e                	pop    %r14
   17af5:	c3                   	ret    

0000000000017af6 <acpi_describe>:
   17af6:	f3 0f 1e fa          	endbr64 
   17afa:	41 54                	push   %r12
   17afc:	48 8d 35 f3 ff ff ff 	lea    -0xd(%rip),%rsi        # 17af6 <acpi_describe>
   17b03:	45 31 e4             	xor    %r12d,%r12d
   17b06:	53                   	push   %rbx
   17b07:	48 83 ec 18          	sub    $0x18,%rsp
   17b0b:	48 8b 05 3e 25 01 00 	mov    0x1253e(%rip),%rax        # 2a050 <__stack_chk_guard>
   17b12:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17b17:	31 c0                	xor    %eax,%eax
   17b19:	48 89 e2             	mov    %rsp,%rdx
   17b1c:	e8 b4 1d ff ff       	call   98d5 <intf_get_dest_op_untyped>
   17b21:	48 8b 3c 24          	mov    (%rsp),%rdi
   17b25:	48 89 c3             	mov    %rax,%rbx
   17b28:	e8 52 1d ff ff       	call   987f <intf_object>
   17b2d:	48 85 db             	test   %rbx,%rbx
   17b30:	74 08                	je     17b3a <acpi_describe+0x44>
   17b32:	48 89 c7             	mov    %rax,%rdi
   17b35:	ff d3                	call   *%rbx
   17b37:	49 89 c4             	mov    %rax,%r12
   17b3a:	48 8b 3c 24          	mov    (%rsp),%rdi
   17b3e:	e8 cd 1c ff ff       	call   9810 <intf_put>
   17b43:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17b48:	48 2b 05 01 25 01 00 	sub    0x12501(%rip),%rax        # 2a050 <__stack_chk_guard>
   17b4f:	74 05                	je     17b56 <acpi_describe+0x60>
   17b51:	e8 0a af fe ff       	call   2a60 <__stack_chk_fail>
   17b56:	48 83 c4 18          	add    $0x18,%rsp
   17b5a:	4c 89 e0             	mov    %r12,%rax
   17b5d:	5b                   	pop    %rbx
   17b5e:	41 5c                	pop    %r12
   17b60:	c3                   	ret    

0000000000017b61 <acpi_fix_checksum>:
   17b61:	f3 0f 1e fa          	endbr64 
   17b65:	8b 4f 04             	mov    0x4(%rdi),%ecx
   17b68:	31 c0                	xor    %eax,%eax
   17b6a:	31 d2                	xor    %edx,%edx
   17b6c:	39 c1                	cmp    %eax,%ecx
   17b6e:	76 08                	jbe    17b78 <acpi_fix_checksum+0x17>
   17b70:	03 14 07             	add    (%rdi,%rax,1),%edx
   17b73:	48 ff c0             	inc    %rax
   17b76:	eb f4                	jmp    17b6c <acpi_fix_checksum+0xb>
   17b78:	28 57 09             	sub    %dl,0x9(%rdi)
   17b7b:	c3                   	ret    

0000000000017b7c <acpi_add>:
   17b7c:	f3 0f 1e fa          	endbr64 
   17b80:	53                   	push   %rbx
   17b81:	48 89 fb             	mov    %rdi,%rbx
   17b84:	48 8b 3f             	mov    (%rdi),%rdi
   17b87:	e8 82 83 ff ff       	call   ff0e <ref_increment>
   17b8c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   17b90:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   17b94:	5b                   	pop    %rbx
   17b95:	e9 0d 46 ff ff       	jmp    c1a7 <extern_list_add_tail>

0000000000017b9a <acpi_del>:
   17b9a:	f3 0f 1e fa          	endbr64 
   17b9e:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   17ba2:	48 8b 47 18          	mov    0x18(%rdi),%rax
   17ba6:	48 8b 3f             	mov    (%rdi),%rdi
   17ba9:	48 89 42 08          	mov    %rax,0x8(%rdx)
   17bad:	48 89 10             	mov    %rdx,(%rax)
   17bb0:	e9 65 83 ff ff       	jmp    ff1a <ref_decrement>

0000000000017bb5 <acpi_install>:
   17bb5:	f3 0f 1e fa          	endbr64 
   17bb9:	41 54                	push   %r12
   17bbb:	4c 8d 25 fe 08 01 00 	lea    0x108fe(%rip),%r12        # 284c0 <ipv4_arp_protocol>
   17bc2:	55                   	push   %rbp
   17bc3:	48 89 fd             	mov    %rdi,%rbp
   17bc6:	53                   	push   %rbx
   17bc7:	48 8d 1d b2 08 01 00 	lea    0x108b2(%rip),%rbx        # 28480 <ibft_model>
   17bce:	4c 39 e3             	cmp    %r12,%rbx
   17bd1:	73 10                	jae    17be3 <acpi_install+0x2e>
   17bd3:	48 89 ef             	mov    %rbp,%rdi
   17bd6:	ff 53 18             	call   *0x18(%rbx)
   17bd9:	85 c0                	test   %eax,%eax
   17bdb:	75 08                	jne    17be5 <acpi_install+0x30>
   17bdd:	48 83 c3 20          	add    $0x20,%rbx
   17be1:	eb eb                	jmp    17bce <acpi_install+0x19>
   17be3:	31 c0                	xor    %eax,%eax
   17be5:	5b                   	pop    %rbx
   17be6:	5d                   	pop    %rbp
   17be7:	41 5c                	pop    %r12
   17be9:	c3                   	ret    

0000000000017bea <ansiscr_cursor>:
   17bea:	f3 0f 1e fa          	endbr64 
   17bee:	83 fe 01             	cmp    $0x1,%esi
   17bf1:	48 8d 3d 31 c2 00 00 	lea    0xc231(%rip),%rdi        # 23e29 <.LC0>
   17bf8:	19 f6                	sbb    %esi,%esi
   17bfa:	31 c0                	xor    %eax,%eax
   17bfc:	83 e6 04             	and    $0x4,%esi
   17bff:	83 c6 68             	add    $0x68,%esi
   17c02:	e9 73 f6 ff ff       	jmp    1727a <printf>

0000000000017c07 <ansiscr_movetoyx>:
   17c07:	f3 0f 1e fa          	endbr64 
   17c0b:	41 54                	push   %r12
   17c0d:	41 89 d4             	mov    %edx,%r12d
   17c10:	55                   	push   %rbp
   17c11:	89 f5                	mov    %esi,%ebp
   17c13:	53                   	push   %rbx
   17c14:	48 89 fb             	mov    %rdi,%rbx
   17c17:	39 17                	cmp    %edx,(%rdi)
   17c19:	75 05                	jne    17c20 <ansiscr_movetoyx+0x19>
   17c1b:	39 77 04             	cmp    %esi,0x4(%rdi)
   17c1e:	74 1c                	je     17c3c <ansiscr_movetoyx+0x35>
   17c20:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   17c25:	8d 75 01             	lea    0x1(%rbp),%esi
   17c28:	31 c0                	xor    %eax,%eax
   17c2a:	48 8d 3d 00 c2 00 00 	lea    0xc200(%rip),%rdi        # 23e31 <.LC1>
   17c31:	e8 44 f6 ff ff       	call   1727a <printf>
   17c36:	44 89 23             	mov    %r12d,(%rbx)
   17c39:	89 6b 04             	mov    %ebp,0x4(%rbx)
   17c3c:	5b                   	pop    %rbx
   17c3d:	5d                   	pop    %rbp
   17c3e:	41 5c                	pop    %r12
   17c40:	c3                   	ret    

0000000000017c41 <ansiscr_peek>:
   17c41:	f3 0f 1e fa          	endbr64 
   17c45:	50                   	push   %rax
   17c46:	e8 20 17 00 00       	call   1936b <iskey>
   17c4b:	5a                   	pop    %rdx
   17c4c:	85 c0                	test   %eax,%eax
   17c4e:	0f 95 c0             	setne  %al
   17c51:	c3                   	ret    

0000000000017c52 <ansiscr_getc>:
   17c52:	f3 0f 1e fa          	endbr64 
   17c56:	e9 dc 16 00 00       	jmp    19337 <getchar>

0000000000017c5b <ansiscr_attrs>:
   17c5b:	39 77 08             	cmp    %esi,0x8(%rdi)
   17c5e:	74 2e                	je     17c8e <ansiscr_attrs+0x33>
   17c60:	89 f0                	mov    %esi,%eax
   17c62:	53                   	push   %rbx
   17c63:	89 f3                	mov    %esi,%ebx
   17c65:	25 00 00 04 00       	and    $0x40000,%eax
   17c6a:	89 77 08             	mov    %esi,0x8(%rdi)
   17c6d:	48 8d 3d c6 c1 00 00 	lea    0xc1c6(%rip),%rdi        # 23e3a <.LC2>
   17c74:	83 f8 01             	cmp    $0x1,%eax
   17c77:	19 f6                	sbb    %esi,%esi
   17c79:	31 c0                	xor    %eax,%eax
   17c7b:	83 e6 15             	and    $0x15,%esi
   17c7e:	ff c6                	inc    %esi
   17c80:	e8 f5 f5 ff ff       	call   1727a <printf>
   17c85:	0f b6 ff             	movzbl %bh,%edi
   17c88:	5b                   	pop    %rbx
   17c89:	e9 f7 00 00 00       	jmp    17d85 <ansicol_set_pair>
   17c8e:	c3                   	ret    

0000000000017c8f <ansiscr_erase>:
   17c8f:	f3 0f 1e fa          	endbr64 
   17c93:	50                   	push   %rax
   17c94:	e8 c2 ff ff ff       	call   17c5b <ansiscr_attrs>
   17c99:	48 8d 3d a2 c1 00 00 	lea    0xc1a2(%rip),%rdi        # 23e42 <.LC3>
   17ca0:	31 c0                	xor    %eax,%eax
   17ca2:	5a                   	pop    %rdx
   17ca3:	e9 d2 f5 ff ff       	jmp    1727a <printf>

0000000000017ca8 <ansiscr_exit>:
   17ca8:	f3 0f 1e fa          	endbr64 
   17cac:	50                   	push   %rax
   17cad:	31 c0                	xor    %eax,%eax
   17caf:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   17cb6:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
   17cbd:	48 8d 3d 83 c1 00 00 	lea    0xc183(%rip),%rdi        # 23e47 <.LC4>
   17cc4:	e8 b1 f5 ff ff       	call   1727a <printf>
   17cc9:	31 ff                	xor    %edi,%edi
   17ccb:	e8 b5 00 00 00       	call   17d85 <ansicol_set_pair>
   17cd0:	48 8d 3d 6b c1 00 00 	lea    0xc16b(%rip),%rdi        # 23e42 <.LC3>
   17cd7:	31 c0                	xor    %eax,%eax
   17cd9:	e8 9c f5 ff ff       	call   1727a <printf>
   17cde:	8b 05 08 22 01 00    	mov    0x12208(%rip),%eax        # 29eec <saved_usage>
   17ce4:	89 05 ae c9 00 00    	mov    %eax,0xc9ae(%rip)        # 24698 <console_usage>
   17cea:	5a                   	pop    %rdx
   17ceb:	c3                   	ret    

0000000000017cec <ansiscr_putc>:
   17cec:	f3 0f 1e fa          	endbr64 
   17cf0:	55                   	push   %rbp
   17cf1:	89 f5                	mov    %esi,%ebp
   17cf3:	40 30 f6             	xor    %sil,%sil
   17cf6:	53                   	push   %rbx
   17cf7:	48 89 fb             	mov    %rdi,%rbx
   17cfa:	52                   	push   %rdx
   17cfb:	e8 5b ff ff ff       	call   17c5b <ansiscr_attrs>
   17d00:	40 0f b6 fd          	movzbl %bpl,%edi
   17d04:	e8 21 16 00 00       	call   1932a <putchar>
   17d09:	8b 03                	mov    (%rbx),%eax
   17d0b:	ff c0                	inc    %eax
   17d0d:	3b 05 81 c9 00 00    	cmp    0xc981(%rip),%eax        # 24694 <console_width>
   17d13:	89 03                	mov    %eax,(%rbx)
   17d15:	75 09                	jne    17d20 <ansiscr_putc+0x34>
   17d17:	ff 43 04             	incl   0x4(%rbx)
   17d1a:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   17d20:	58                   	pop    %rax
   17d21:	5b                   	pop    %rbx
   17d22:	5d                   	pop    %rbp
   17d23:	c3                   	ret    

0000000000017d24 <ansiscr_init>:
   17d24:	f3 0f 1e fa          	endbr64 
   17d28:	50                   	push   %rax
   17d29:	8b 05 69 c9 00 00    	mov    0xc969(%rip),%eax        # 24698 <console_usage>
   17d2f:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
   17d36:	c7 05 58 c9 00 00 04 	movl   $0x4,0xc958(%rip)        # 24698 <console_usage>
   17d3d:	00 00 00 
   17d40:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   17d47:	48 8d 3d f9 c0 00 00 	lea    0xc0f9(%rip),%rdi        # 23e47 <.LC4>
   17d4e:	89 05 98 21 01 00    	mov    %eax,0x12198(%rip)        # 29eec <saved_usage>
   17d54:	31 c0                	xor    %eax,%eax
   17d56:	e8 1f f5 ff ff       	call   1727a <printf>
   17d5b:	31 ff                	xor    %edi,%edi
   17d5d:	e8 23 00 00 00       	call   17d85 <ansicol_set_pair>
   17d62:	48 8d 3d d9 c0 00 00 	lea    0xc0d9(%rip),%rdi        # 23e42 <.LC3>
   17d69:	31 c0                	xor    %eax,%eax
   17d6b:	5a                   	pop    %rdx
   17d6c:	e9 09 f5 ff ff       	jmp    1727a <printf>

0000000000017d71 <ansicol_set>:
   17d71:	f3 0f 1e fa          	endbr64 
   17d75:	89 fa                	mov    %edi,%edx
   17d77:	31 c0                	xor    %eax,%eax
   17d79:	48 8d 3d cb c0 00 00 	lea    0xc0cb(%rip),%rdi        # 23e4b <.LC0>
   17d80:	e9 f5 f4 ff ff       	jmp    1727a <printf>

0000000000017d85 <ansicol_set_pair>:
   17d85:	f3 0f 1e fa          	endbr64 
   17d89:	55                   	push   %rbp
   17d8a:	48 8d 2d ef c8 00 00 	lea    0xc8ef(%rip),%rbp        # 24680 <ansicol_pairs>
   17d91:	be 33 00 00 00       	mov    $0x33,%esi
   17d96:	53                   	push   %rbx
   17d97:	89 fb                	mov    %edi,%ebx
   17d99:	50                   	push   %rax
   17d9a:	0f b6 7c 5d 00       	movzbl 0x0(%rbp,%rbx,2),%edi
   17d9f:	e8 cd ff ff ff       	call   17d71 <ansicol_set>
   17da4:	0f b6 7c 5d 01       	movzbl 0x1(%rbp,%rbx,2),%edi
   17da9:	be 34 00 00 00       	mov    $0x34,%esi
   17dae:	5a                   	pop    %rdx
   17daf:	5b                   	pop    %rbx
   17db0:	5d                   	pop    %rbp
   17db1:	e9 bb ff ff ff       	jmp    17d71 <ansicol_set>

0000000000017db6 <ansiesc_process>:
   17db6:	f3 0f 1e fa          	endbr64 
   17dba:	89 f0                	mov    %esi,%eax
   17dbc:	8b 77 08             	mov    0x8(%rdi),%esi
   17dbf:	49 89 f8             	mov    %rdi,%r8
   17dc2:	85 f6                	test   %esi,%esi
   17dc4:	75 2a                	jne    17df0 <ansiesc_process+0x3a>
   17dc6:	83 f8 1b             	cmp    $0x1b,%eax
   17dc9:	0f 85 b1 00 00 00    	jne    17e80 <ansiesc_process+0xca>
   17dcf:	c7 47 08 01 00 00 00 	movl   $0x1,0x8(%rdi)
   17dd6:	b9 14 00 00 00       	mov    $0x14,%ecx
   17ddb:	48 8d 7f 0c          	lea    0xc(%rdi),%rdi
   17ddf:	b8 ff 00 00 00       	mov    $0xff,%eax
   17de4:	f3 aa                	rep stos %al,%es:(%rdi)
   17de6:	41 c7 40 20 00 00 00 	movl   $0x0,0x20(%r8)
   17ded:	00 
   17dee:	eb 5f                	jmp    17e4f <ansiesc_process+0x99>
   17df0:	83 f8 5b             	cmp    $0x5b,%eax
   17df3:	74 5a                	je     17e4f <ansiesc_process+0x99>
   17df5:	8d 48 d0             	lea    -0x30(%rax),%ecx
   17df8:	83 f9 09             	cmp    $0x9,%ecx
   17dfb:	77 1f                	ja     17e1c <ansiesc_process+0x66>
   17dfd:	8d 46 ff             	lea    -0x1(%rsi),%eax
   17e00:	48 8d 04 87          	lea    (%rdi,%rax,4),%rax
   17e04:	83 78 0c 00          	cmpl   $0x0,0xc(%rax)
   17e08:	79 07                	jns    17e11 <ansiesc_process+0x5b>
   17e0a:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   17e11:	6b 50 0c 0a          	imul   $0xa,0xc(%rax),%edx
   17e15:	01 ca                	add    %ecx,%edx
   17e17:	89 50 0c             	mov    %edx,0xc(%rax)
   17e1a:	eb 33                	jmp    17e4f <ansiesc_process+0x99>
   17e1c:	83 f8 3b             	cmp    $0x3b,%eax
   17e1f:	75 15                	jne    17e36 <ansiesc_process+0x80>
   17e21:	ff c6                	inc    %esi
   17e23:	83 fe 05             	cmp    $0x5,%esi
   17e26:	77 05                	ja     17e2d <ansiesc_process+0x77>
   17e28:	89 77 08             	mov    %esi,0x8(%rdi)
   17e2b:	eb 22                	jmp    17e4f <ansiesc_process+0x99>
   17e2d:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
   17e34:	eb 19                	jmp    17e4f <ansiesc_process+0x99>
   17e36:	8b 57 20             	mov    0x20(%rdi),%edx
   17e39:	8d 48 e0             	lea    -0x20(%rax),%ecx
   17e3c:	c1 e2 08             	shl    $0x8,%edx
   17e3f:	09 c2                	or     %eax,%edx
   17e41:	83 f9 0f             	cmp    $0xf,%ecx
   17e44:	76 05                	jbe    17e4b <ansiesc_process+0x95>
   17e46:	83 f8 3f             	cmp    $0x3f,%eax
   17e49:	75 08                	jne    17e53 <ansiesc_process+0x9d>
   17e4b:	41 89 50 20          	mov    %edx,0x20(%r8)
   17e4f:	83 c8 ff             	or     $0xffffffff,%eax
   17e52:	c3                   	ret    
   17e53:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
   17e5a:	48 8b 07             	mov    (%rdi),%rax
   17e5d:	89 57 20             	mov    %edx,0x20(%rdi)
   17e60:	8b 08                	mov    (%rax),%ecx
   17e62:	85 c9                	test   %ecx,%ecx
   17e64:	74 e9                	je     17e4f <ansiesc_process+0x99>
   17e66:	39 d1                	cmp    %edx,%ecx
   17e68:	75 10                	jne    17e7a <ansiesc_process+0xc4>
   17e6a:	4c 89 c7             	mov    %r8,%rdi
   17e6d:	52                   	push   %rdx
   17e6e:	49 8d 50 0c          	lea    0xc(%r8),%rdx
   17e72:	ff 50 08             	call   *0x8(%rax)
   17e75:	83 c8 ff             	or     $0xffffffff,%eax
   17e78:	59                   	pop    %rcx
   17e79:	c3                   	ret    
   17e7a:	48 83 c0 10          	add    $0x10,%rax
   17e7e:	eb e0                	jmp    17e60 <ansiesc_process+0xaa>
   17e80:	c3                   	ret    

0000000000017e81 <arp_ntoa>:
   17e81:	f3 0f 1e fa          	endbr64 
   17e85:	48 8d 05 c7 bf 00 00 	lea    0xbfc7(%rip),%rax        # 23e53 <.LC0>
   17e8c:	c3                   	ret    

0000000000017e8d <arp_tx_request>:
   17e8d:	f3 0f 1e fa          	endbr64 
   17e91:	41 57                	push   %r15
   17e93:	41 56                	push   %r14
   17e95:	49 89 ce             	mov    %rcx,%r14
   17e98:	41 55                	push   %r13
   17e9a:	49 89 d5             	mov    %rdx,%r13
   17e9d:	41 54                	push   %r12
   17e9f:	49 89 fc             	mov    %rdi,%r12
   17ea2:	55                   	push   %rbp
   17ea3:	53                   	push   %rbx
   17ea4:	48 89 f3             	mov    %rsi,%rbx
   17ea7:	48 83 ec 18          	sub    $0x18,%rsp
   17eab:	4c 8b 7f 50          	mov    0x50(%rdi),%r15
   17eaf:	bf 90 00 00 00       	mov    $0x90,%edi
   17eb4:	e8 93 1e ff ff       	call   9d4c <alloc_iob>
   17eb9:	48 85 c0             	test   %rax,%rax
   17ebc:	0f 84 bc 00 00 00    	je     17f7e <arp_tx_request+0xf1>
   17ec2:	41 8b 57 40          	mov    0x40(%r15),%edx
   17ec6:	48 89 c5             	mov    %rax,%rbp
   17ec9:	48 83 40 18 40       	addq   $0x40,0x18(%rax)
   17ece:	4d 8d 44 24 60       	lea    0x60(%r12),%r8
   17ed3:	48 8b 40 20          	mov    0x20(%rax),%rax
   17ed7:	4c 89 c6             	mov    %r8,%rsi
   17eda:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   17edf:	66 89 50 40          	mov    %dx,0x40(%rax)
   17ee3:	41 0f b6 57 43       	movzbl 0x43(%r15),%edx
   17ee8:	48 8d 78 48          	lea    0x48(%rax),%rdi
   17eec:	88 50 44             	mov    %dl,0x44(%rax)
   17eef:	8b 4b 18             	mov    0x18(%rbx),%ecx
   17ef2:	66 89 48 42          	mov    %cx,0x42(%rax)
   17ef6:	8a 4b 1a             	mov    0x1a(%rbx),%cl
   17ef9:	66 c7 40 46 00 01    	movw   $0x100,0x46(%rax)
   17eff:	88 48 45             	mov    %cl,0x45(%rax)
   17f02:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   17f06:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17f0a:	e8 da f4 ff ff       	call   173e9 <__memcpy>
   17f0f:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   17f13:	0f b6 53 1a          	movzbl 0x1a(%rbx),%edx
   17f17:	4c 89 f6             	mov    %r14,%rsi
   17f1a:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   17f1e:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17f22:	e8 c2 f4 ff ff       	call   173e9 <__memcpy>
   17f27:	41 0f b6 4f 43       	movzbl 0x43(%r15),%ecx
   17f2c:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   17f30:	48 8d 04 0f          	lea    (%rdi,%rcx,1),%rax
   17f34:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17f38:	31 c0                	xor    %eax,%eax
   17f3a:	f3 aa                	rep stos %al,%es:(%rdi)
   17f3c:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   17f40:	0f b6 53 1a          	movzbl 0x1a(%rbx),%edx
   17f44:	4c 89 ee             	mov    %r13,%rsi
   17f47:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   17f4b:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17f4f:	e8 95 f4 ff ff       	call   173e9 <__memcpy>
   17f54:	49 8b 4c 24 78       	mov    0x78(%r12),%rcx
   17f59:	4c 89 e6             	mov    %r12,%rsi
   17f5c:	48 89 ef             	mov    %rbp,%rdi
   17f5f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   17f64:	48 83 c4 18          	add    $0x18,%rsp
   17f68:	48 8d 15 59 0e 01 00 	lea    0x10e59(%rip),%rdx        # 28dc8 <arp_protocol>
   17f6f:	5b                   	pop    %rbx
   17f70:	5d                   	pop    %rbp
   17f71:	41 5c                	pop    %r12
   17f73:	41 5d                	pop    %r13
   17f75:	41 5e                	pop    %r14
   17f77:	41 5f                	pop    %r15
   17f79:	e9 5e 63 ff ff       	jmp    e2dc <net_tx>
   17f7e:	48 83 c4 18          	add    $0x18,%rsp
   17f82:	b8 77 9f fe ce       	mov    $0xcefe9f77,%eax
   17f87:	5b                   	pop    %rbx
   17f88:	5d                   	pop    %rbp
   17f89:	41 5c                	pop    %r12
   17f8b:	41 5d                	pop    %r13
   17f8d:	41 5e                	pop    %r14
   17f8f:	41 5f                	pop    %r15
   17f91:	c3                   	ret    

0000000000017f92 <arp_rx>:
   17f92:	f3 0f 1e fa          	endbr64 
   17f96:	41 56                	push   %r14
   17f98:	41 55                	push   %r13
   17f9a:	41 54                	push   %r12
   17f9c:	55                   	push   %rbp
   17f9d:	48 89 fd             	mov    %rdi,%rbp
   17fa0:	53                   	push   %rbx
   17fa1:	48 83 ec 10          	sub    $0x10,%rsp
   17fa5:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   17fa9:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   17fad:	48 29 da             	sub    %rbx,%rdx
   17fb0:	48 83 fa 07          	cmp    $0x7,%rdx
   17fb4:	76 1e                	jbe    17fd4 <arp_rx+0x42>
   17fb6:	0f b6 4b 04          	movzbl 0x4(%rbx),%ecx
   17fba:	49 89 f4             	mov    %rsi,%r12
   17fbd:	0f b6 73 05          	movzbl 0x5(%rbx),%esi
   17fc1:	48 89 c8             	mov    %rcx,%rax
   17fc4:	01 f1                	add    %esi,%ecx
   17fc6:	89 f7                	mov    %esi,%edi
   17fc8:	8d 4c 09 08          	lea    0x8(%rcx,%rcx,1),%ecx
   17fcc:	48 63 c9             	movslq %ecx,%rcx
   17fcf:	48 39 ca             	cmp    %rcx,%rdx
   17fd2:	73 02                	jae    17fd6 <arp_rx+0x44>
   17fd4:	eb 39                	jmp    1800f <arp_rx+0x7d>
   17fd6:	66 8b 4b 02          	mov    0x2(%rbx),%cx
   17fda:	4c 8d 2d df 04 01 00 	lea    0x104df(%rip),%r13        # 284c0 <ipv4_arp_protocol>
   17fe1:	48 8d 15 e8 04 01 00 	lea    0x104e8(%rip),%rdx        # 284d0 <unixtime_builtin_setting>
   17fe8:	49 39 d5             	cmp    %rdx,%r13
   17feb:	73 2c                	jae    18019 <arp_rx+0x87>
   17fed:	49 8b 75 00          	mov    0x0(%r13),%rsi
   17ff1:	66 3b 4e 18          	cmp    0x18(%rsi),%cx
   17ff5:	74 06                	je     17ffd <arp_rx+0x6b>
   17ff7:	49 83 c5 10          	add    $0x10,%r13
   17ffb:	eb eb                	jmp    17fe8 <arp_rx+0x56>
   17ffd:	49 8b 54 24 50       	mov    0x50(%r12),%rdx
   18002:	8b 4a 40             	mov    0x40(%rdx),%ecx
   18005:	66 39 0b             	cmp    %cx,(%rbx)
   18008:	75 05                	jne    1800f <arp_rx+0x7d>
   1800a:	38 42 43             	cmp    %al,0x43(%rdx)
   1800d:	74 14                	je     18023 <arp_rx+0x91>
   1800f:	b8 7e 9f fe e3       	mov    $0xe3fe9f7e,%eax
   18014:	e9 b9 00 00 00       	jmp    180d2 <arp_rx+0x140>
   18019:	b8 7d 9f fe bb       	mov    $0xbbfe9f7d,%eax
   1801e:	e9 af 00 00 00       	jmp    180d2 <arp_rx+0x140>
   18023:	40 38 7e 1a          	cmp    %dil,0x1a(%rsi)
   18027:	75 e6                	jne    1800f <arp_rx+0x7d>
   18029:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   1802d:	48 8d 54 03 08       	lea    0x8(%rbx,%rax,1),%rdx
   18032:	4c 89 e7             	mov    %r12,%rdi
   18035:	4c 89 f1             	mov    %r14,%rcx
   18038:	e8 a4 59 ff ff       	call   d9e1 <neighbour_update>
   1803d:	66 81 7b 06 00 01    	cmpw   $0x100,0x6(%rbx)
   18043:	74 07                	je     1804c <arp_rx+0xba>
   18045:	31 c0                	xor    %eax,%eax
   18047:	e9 86 00 00 00       	jmp    180d2 <arp_rx+0x140>
   1804c:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
   18050:	0f b6 53 05          	movzbl 0x5(%rbx),%edx
   18054:	4c 89 e7             	mov    %r12,%rdi
   18057:	48 01 c0             	add    %rax,%rax
   1805a:	48 8d 74 10 08       	lea    0x8(%rax,%rdx,1),%rsi
   1805f:	48 01 de             	add    %rbx,%rsi
   18062:	41 ff 55 08          	call   *0x8(%r13)
   18066:	85 c0                	test   %eax,%eax
   18068:	75 db                	jne    18045 <arp_rx+0xb3>
   1806a:	0f b6 53 04          	movzbl 0x4(%rbx),%edx
   1806e:	0f b6 73 05          	movzbl 0x5(%rbx),%esi
   18072:	66 c7 43 06 00 02    	movw   $0x200,0x6(%rbx)
   18078:	4c 89 f7             	mov    %r14,%rdi
   1807b:	48 89 d1             	mov    %rdx,%rcx
   1807e:	01 f2                	add    %esi,%edx
   18080:	48 8d 74 31 08       	lea    0x8(%rcx,%rsi,1),%rsi
   18085:	48 63 d2             	movslq %edx,%rdx
   18088:	48 01 de             	add    %rbx,%rsi
   1808b:	e8 df b8 ff ff       	call   1396f <memswap>
   18090:	4d 8d 44 24 60       	lea    0x60(%r12),%r8
   18095:	0f b6 53 04          	movzbl 0x4(%rbx),%edx
   18099:	4c 89 f7             	mov    %r14,%rdi
   1809c:	4c 89 c6             	mov    %r8,%rsi
   1809f:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   180a4:	e8 40 f3 ff ff       	call   173e9 <__memcpy>
   180a9:	0f b6 53 04          	movzbl 0x4(%rbx),%edx
   180ad:	0f b6 43 05          	movzbl 0x5(%rbx),%eax
   180b1:	48 89 ef             	mov    %rbp,%rdi
   180b4:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   180b9:	4c 89 e6             	mov    %r12,%rsi
   180bc:	31 ed                	xor    %ebp,%ebp
   180be:	48 8d 4c 02 08       	lea    0x8(%rdx,%rax,1),%rcx
   180c3:	48 8d 15 fe 0c 01 00 	lea    0x10cfe(%rip),%rdx        # 28dc8 <arp_protocol>
   180ca:	48 01 d9             	add    %rbx,%rcx
   180cd:	e8 0a 62 ff ff       	call   e2dc <net_tx>
   180d2:	48 89 ef             	mov    %rbp,%rdi
   180d5:	89 44 24 08          	mov    %eax,0x8(%rsp)
   180d9:	e8 88 1c ff ff       	call   9d66 <free_iob>
   180de:	8b 44 24 08          	mov    0x8(%rsp),%eax
   180e2:	48 83 c4 10          	add    $0x10,%rsp
   180e6:	5b                   	pop    %rbx
   180e7:	5d                   	pop    %rbp
   180e8:	41 5c                	pop    %r12
   180ea:	41 5d                	pop    %r13
   180ec:	41 5e                	pop    %r14
   180ee:	c3                   	ret    

00000000000180ef <vasprintf>:
   180ef:	f3 0f 1e fa          	endbr64 
   180f3:	41 55                	push   %r13
   180f5:	b9 06 00 00 00       	mov    $0x6,%ecx
   180fa:	49 89 f5             	mov    %rsi,%r13
   180fd:	48 89 d6             	mov    %rdx,%rsi
   18100:	41 54                	push   %r12
   18102:	49 89 d4             	mov    %rdx,%r12
   18105:	4c 89 ea             	mov    %r13,%rdx
   18108:	55                   	push   %rbp
   18109:	53                   	push   %rbx
   1810a:	48 89 fb             	mov    %rdi,%rbx
   1810d:	48 83 ec 28          	sub    $0x28,%rsp
   18111:	48 8b 05 38 1f 01 00 	mov    0x11f38(%rip),%rax        # 2a050 <__stack_chk_guard>
   18118:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1811d:	31 c0                	xor    %eax,%eax
   1811f:	49 89 e0             	mov    %rsp,%r8
   18122:	4c 89 c7             	mov    %r8,%rdi
   18125:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
   18127:	4c 89 c1             	mov    %r8,%rcx
   1812a:	31 f6                	xor    %esi,%esi
   1812c:	31 ff                	xor    %edi,%edi
   1812e:	e8 bd ef ff ff       	call   170f0 <vsnprintf>
   18133:	8d 68 01             	lea    0x1(%rax),%ebp
   18136:	48 63 ed             	movslq %ebp,%rbp
   18139:	48 89 ef             	mov    %rbp,%rdi
   1813c:	e8 d4 45 ff ff       	call   c715 <malloc>
   18141:	48 89 03             	mov    %rax,(%rbx)
   18144:	48 85 c0             	test   %rax,%rax
   18147:	75 07                	jne    18150 <vasprintf+0x61>
   18149:	b8 77 df ff ce       	mov    $0xceffdf77,%eax
   1814e:	eb 11                	jmp    18161 <vasprintf+0x72>
   18150:	48 89 c7             	mov    %rax,%rdi
   18153:	4c 89 e1             	mov    %r12,%rcx
   18156:	4c 89 ea             	mov    %r13,%rdx
   18159:	48 89 ee             	mov    %rbp,%rsi
   1815c:	e8 8f ef ff ff       	call   170f0 <vsnprintf>
   18161:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   18166:	48 2b 15 e3 1e 01 00 	sub    0x11ee3(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1816d:	74 05                	je     18174 <vasprintf+0x85>
   1816f:	e8 ec a8 fe ff       	call   2a60 <__stack_chk_fail>
   18174:	48 83 c4 28          	add    $0x28,%rsp
   18178:	5b                   	pop    %rbx
   18179:	5d                   	pop    %rbp
   1817a:	41 5c                	pop    %r12
   1817c:	41 5d                	pop    %r13
   1817e:	c3                   	ret    

000000000001817f <asprintf>:
   1817f:	f3 0f 1e fa          	endbr64 
   18183:	48 83 ec 58          	sub    $0x58,%rsp
   18187:	48 8b 05 c2 1e 01 00 	mov    0x11ec2(%rip),%rax        # 2a050 <__stack_chk_guard>
   1818e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18193:	31 c0                	xor    %eax,%eax
   18195:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   1819a:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1819f:	48 89 e2             	mov    %rsp,%rdx
   181a2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   181a7:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   181ac:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   181b1:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   181b6:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   181bb:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   181c2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   181c7:	e8 23 ff ff ff       	call   180ef <vasprintf>
   181cc:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   181d1:	48 2b 15 78 1e 01 00 	sub    0x11e78(%rip),%rdx        # 2a050 <__stack_chk_guard>
   181d8:	74 05                	je     181df <asprintf+0x60>
   181da:	e8 81 a8 fe ff       	call   2a60 <__stack_chk_fail>
   181df:	48 83 c4 58          	add    $0x58,%rsp
   181e3:	c3                   	ret    

00000000000181e4 <shell_banner>:
   181e4:	50                   	push   %rax
   181e5:	48 8d 3d c3 b8 00 00 	lea    0xb8c3(%rip),%rdi        # 23aaf <.LC0>
   181ec:	31 c0                	xor    %eax,%eax
   181ee:	e8 87 f0 ff ff       	call   1727a <printf>
   181f3:	ba 02 00 00 00       	mov    $0x2,%edx
   181f8:	be 00 0c 00 00       	mov    $0xc00,%esi
   181fd:	48 8d 3d 59 bc 00 00 	lea    0xbc59(%rip),%rdi        # 23e5d <.LC1>
   18204:	e8 d5 82 00 00       	call   204de <prompt>
   18209:	5a                   	pop    %rdx
   1820a:	85 c0                	test   %eax,%eax
   1820c:	0f 94 c0             	sete   %al
   1820f:	0f b6 c0             	movzbl %al,%eax
   18212:	c3                   	ret    

0000000000018213 <pxe_menu_boot>:
   18213:	f3 0f 1e fa          	endbr64 
   18217:	b8 7d 1f fc c3       	mov    $0xc3fc1f7d,%eax
   1821c:	c3                   	ret    

000000000001821d <uriboot>:
   1821d:	f3 0f 1e fa          	endbr64 
   18221:	41 57                	push   %r15
   18223:	45 89 cf             	mov    %r9d,%r15d
   18226:	41 56                	push   %r14
   18228:	41 83 e7 01          	and    $0x1,%r15d
   1822c:	49 89 fe             	mov    %rdi,%r14
   1822f:	41 55                	push   %r13
   18231:	4d 89 c5             	mov    %r8,%r13
   18234:	41 54                	push   %r12
   18236:	55                   	push   %rbp
   18237:	89 cd                	mov    %ecx,%ebp
   18239:	53                   	push   %rbx
   1823a:	44 89 cb             	mov    %r9d,%ebx
   1823d:	48 83 ec 18          	sub    $0x18,%rsp
   18241:	48 8b 05 08 1e 01 00 	mov    0x11e08(%rip),%rax        # 2a050 <__stack_chk_guard>
   18248:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1824d:	31 c0                	xor    %eax,%eax
   1824f:	85 d2                	test   %edx,%edx
   18251:	74 41                	je     18294 <uriboot+0x77>
   18253:	44 89 f9             	mov    %r15d,%ecx
   18256:	89 ef                	mov    %ebp,%edi
   18258:	e8 21 32 00 00       	call   1b47e <san_hook>
   1825d:	41 89 c4             	mov    %eax,%r12d
   18260:	85 c0                	test   %eax,%eax
   18262:	79 1d                	jns    18281 <uriboot+0x64>
   18264:	89 c7                	mov    %eax,%edi
   18266:	e8 0d b6 ff ff       	call   13878 <strerror>
   1826b:	48 8d 3d 15 bc 00 00 	lea    0xbc15(%rip),%rdi        # 23e87 <.LC4>
   18272:	48 89 c6             	mov    %rax,%rsi
   18275:	31 c0                	xor    %eax,%eax
   18277:	e8 fe ef ff ff       	call   1727a <printf>
   1827c:	e9 5d 01 00 00       	jmp    183de <uriboot+0x1c1>
   18281:	89 c6                	mov    %eax,%esi
   18283:	48 8d 3d 1c bc 00 00 	lea    0xbc1c(%rip),%rdi        # 23ea6 <.LC5>
   1828a:	31 c0                	xor    %eax,%eax
   1828c:	44 89 e5             	mov    %r12d,%ebp
   1828f:	e8 e6 ef ff ff       	call   1727a <printf>
   18294:	45 85 ff             	test   %r15d,%r15d
   18297:	75 29                	jne    182c2 <uriboot+0xa5>
   18299:	e8 83 34 00 00       	call   1b721 <san_describe>
   1829e:	41 89 c4             	mov    %eax,%r12d
   182a1:	85 c0                	test   %eax,%eax
   182a3:	74 1d                	je     182c2 <uriboot+0xa5>
   182a5:	89 c7                	mov    %eax,%edi
   182a7:	e8 cc b5 ff ff       	call   13878 <strerror>
   182ac:	48 8d 3d 10 bc 00 00 	lea    0xbc10(%rip),%rdi        # 23ec3 <.LC6>
   182b3:	48 89 c6             	mov    %rax,%rsi
   182b6:	31 c0                	xor    %eax,%eax
   182b8:	e8 bd ef ff ff       	call   1727a <printf>
   182bd:	e9 e4 00 00 00       	jmp    183a6 <uriboot+0x189>
   182c2:	4d 85 f6             	test   %r14,%r14
   182c5:	74 5f                	je     18326 <uriboot+0x109>
   182c7:	48 89 e2             	mov    %rsp,%rdx
   182ca:	31 f6                	xor    %esi,%esi
   182cc:	4c 89 f7             	mov    %r14,%rdi
   182cf:	e8 f3 08 ff ff       	call   8bc7 <imgdownload>
   182d4:	41 89 c4             	mov    %eax,%r12d
   182d7:	85 c0                	test   %eax,%eax
   182d9:	0f 85 c7 00 00 00    	jne    183a6 <uriboot+0x189>
   182df:	48 8b 3c 24          	mov    (%rsp),%rdi
   182e3:	e8 bd 0a ff ff       	call   8da5 <imgstat>
   182e8:	48 8b 3c 24          	mov    (%rsp),%rdi
   182ec:	83 4f 30 08          	orl    $0x8,0x30(%rdi)
   182f0:	e8 66 78 00 00       	call   1fb5b <image_exec>
   182f5:	41 89 c4             	mov    %eax,%r12d
   182f8:	85 c0                	test   %eax,%eax
   182fa:	74 1a                	je     18316 <uriboot+0xf9>
   182fc:	89 c7                	mov    %eax,%edi
   182fe:	e8 75 b5 ff ff       	call   13878 <strerror>
   18303:	48 8d 3d dd bb 00 00 	lea    0xbbdd(%rip),%rdi        # 23ee7 <.LC7>
   1830a:	48 89 c6             	mov    %rax,%rsi
   1830d:	31 c0                	xor    %eax,%eax
   1830f:	e8 66 ef ff ff       	call   1727a <printf>
   18314:	eb 13                	jmp    18329 <uriboot+0x10c>
   18316:	48 8d 3d 92 b7 00 00 	lea    0xb792(%rip),%rdi        # 23aaf <.LC0>
   1831d:	31 c0                	xor    %eax,%eax
   1831f:	e8 56 ef ff ff       	call   1727a <printf>
   18324:	eb 03                	jmp    18329 <uriboot+0x10c>
   18326:	45 31 e4             	xor    %r12d,%r12d
   18329:	f6 c3 02             	test   $0x2,%bl
   1832c:	75 78                	jne    183a6 <uriboot+0x189>
   1832e:	31 ff                	xor    %edi,%edi
   18330:	48 8d 35 09 13 01 00 	lea    0x11309(%rip),%rsi        # 29640 <skip_san_boot_setting>
   18337:	e8 7d 9c ff ff       	call   11fb9 <fetch_intz_setting>
   1833c:	48 85 c0             	test   %rax,%rax
   1833f:	75 55                	jne    18396 <uriboot+0x179>
   18341:	48 8d 15 6c c1 00 00 	lea    0xc16c(%rip),%rdx        # 244b4 <.LC0>
   18348:	4d 85 ed             	test   %r13,%r13
   1834b:	48 8d 05 e4 b6 00 00 	lea    0xb6e4(%rip),%rax        # 23a36 <.LC1>
   18352:	89 e9                	mov    %ebp,%ecx
   18354:	48 89 d6             	mov    %rdx,%rsi
   18357:	49 0f 45 d5          	cmovne %r13,%rdx
   1835b:	48 8d 3d 9f bb 00 00 	lea    0xbb9f(%rip),%rdi        # 23f01 <.LC8>
   18362:	48 0f 45 f0          	cmovne %rax,%rsi
   18366:	31 c0                	xor    %eax,%eax
   18368:	e8 0d ef ff ff       	call   1727a <printf>
   1836d:	4c 89 ee             	mov    %r13,%rsi
   18370:	89 ef                	mov    %ebp,%edi
   18372:	e8 26 34 00 00       	call   1b79d <san_boot>
   18377:	89 c7                	mov    %eax,%edi
   18379:	41 89 c4             	mov    %eax,%r12d
   1837c:	e8 f7 b4 ff ff       	call   13878 <strerror>
   18381:	89 ee                	mov    %ebp,%esi
   18383:	48 8d 3d 9a bb 00 00 	lea    0xbb9a(%rip),%rdi        # 23f24 <.LC9>
   1838a:	48 89 c2             	mov    %rax,%rdx
   1838d:	31 c0                	xor    %eax,%eax
   1838f:	e8 e6 ee ff ff       	call   1727a <printf>
   18394:	eb 10                	jmp    183a6 <uriboot+0x189>
   18396:	89 ee                	mov    %ebp,%esi
   18398:	48 8d 3d ac bb 00 00 	lea    0xbbac(%rip),%rdi        # 23f4b <.LC10>
   1839f:	31 c0                	xor    %eax,%eax
   183a1:	e8 d4 ee ff ff       	call   1727a <printf>
   183a6:	80 e3 04             	and    $0x4,%bl
   183a9:	75 33                	jne    183de <uriboot+0x1c1>
   183ab:	48 8d 35 16 12 01 00 	lea    0x11216(%rip),%rsi        # 295c8 <keep_san_setting>
   183b2:	31 ff                	xor    %edi,%edi
   183b4:	e8 00 9c ff ff       	call   11fb9 <fetch_intz_setting>
   183b9:	89 ee                	mov    %ebp,%esi
   183bb:	48 8d 3d cd bb 00 00 	lea    0xbbcd(%rip),%rdi        # 23f8f <.LC12>
   183c2:	48 85 c0             	test   %rax,%rax
   183c5:	75 10                	jne    183d7 <uriboot+0x1ba>
   183c7:	89 ef                	mov    %ebp,%edi
   183c9:	e8 ed 32 00 00       	call   1b6bb <san_unhook>
   183ce:	89 ee                	mov    %ebp,%esi
   183d0:	48 8d 3d 99 bb 00 00 	lea    0xbb99(%rip),%rdi        # 23f70 <.LC11>
   183d7:	31 c0                	xor    %eax,%eax
   183d9:	e8 9c ee ff ff       	call   1727a <printf>
   183de:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   183e3:	48 2b 05 66 1c 01 00 	sub    0x11c66(%rip),%rax        # 2a050 <__stack_chk_guard>
   183ea:	74 05                	je     183f1 <uriboot+0x1d4>
   183ec:	e8 6f a6 fe ff       	call   2a60 <__stack_chk_fail>
   183f1:	48 83 c4 18          	add    $0x18,%rsp
   183f5:	44 89 e0             	mov    %r12d,%eax
   183f8:	5b                   	pop    %rbx
   183f9:	5d                   	pop    %rbp
   183fa:	41 5c                	pop    %r12
   183fc:	41 5d                	pop    %r13
   183fe:	41 5e                	pop    %r14
   18400:	41 5f                	pop    %r15
   18402:	c3                   	ret    

0000000000018403 <fetch_next_server_and_filename>:
   18403:	f3 0f 1e fa          	endbr64 
   18407:	41 54                	push   %r12
   18409:	b9 20 00 00 00       	mov    $0x20,%ecx
   1840e:	55                   	push   %rbp
   1840f:	53                   	push   %rbx
   18410:	48 83 ec 40          	sub    $0x40,%rsp
   18414:	48 8b 05 35 1c 01 00 	mov    0x11c35(%rip),%rax        # 2a050 <__stack_chk_guard>
   1841b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18420:	31 c0                	xor    %eax,%eax
   18422:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
   18427:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1842c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   18433:	00 00 
   18435:	48 89 ef             	mov    %rbp,%rdi
   18438:	f3 aa                	rep stos %al,%es:(%rdi)
   1843a:	4c 8d 25 bf 10 01 00 	lea    0x110bf(%rip),%r12        # 29500 <filename_setting>
   18441:	45 31 c9             	xor    %r9d,%r9d
   18444:	45 31 c0             	xor    %r8d,%r8d
   18447:	31 c9                	xor    %ecx,%ecx
   18449:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1844e:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18453:	4c 89 e6             	mov    %r12,%rsi
   18456:	e8 ee 97 ff ff       	call   11c49 <fetch_setting>
   1845b:	85 c0                	test   %eax,%eax
   1845d:	78 28                	js     18487 <fetch_next_server_and_filename+0x84>
   1845f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18464:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   18469:	4c 89 e6             	mov    %r12,%rsi
   1846c:	e8 59 9a ff ff       	call   11eca <fetch_string_setting_copy>
   18471:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18476:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1847b:	48 8d 35 a6 10 01 00 	lea    0x110a6(%rip),%rsi        # 29528 <next_server_setting>
   18482:	e8 b1 9a ff ff       	call   11f38 <fetch_ipv4_setting>
   18487:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   1848c:	4d 85 e4             	test   %r12,%r12
   1848f:	74 73                	je     18504 <fetch_next_server_and_filename+0x101>
   18491:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   18496:	74 21                	je     184b9 <fetch_next_server_and_filename+0xb6>
   18498:	8b 7c 24 20          	mov    0x20(%rsp),%edi
   1849c:	66 c7 44 24 18 01 00 	movw   $0x1,0x18(%rsp)
   184a3:	e8 e7 21 ff ff       	call   a68f <inet_ntoa>
   184a8:	48 8d 3d fd ba 00 00 	lea    0xbafd(%rip),%rdi        # 23fac <.LC13>
   184af:	48 89 c6             	mov    %rax,%rsi
   184b2:	31 c0                	xor    %eax,%eax
   184b4:	e8 c1 ed ff ff       	call   1727a <printf>
   184b9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   184be:	e8 b2 a4 ff ff       	call   12975 <expand_settings>
   184c3:	49 89 c4             	mov    %rax,%r12
   184c6:	48 85 c0             	test   %rax,%rax
   184c9:	74 2f                	je     184fa <fetch_next_server_and_filename+0xf7>
   184cb:	80 38 00             	cmpb   $0x0,(%rax)
   184ce:	74 11                	je     184e1 <fetch_next_server_and_filename+0xde>
   184d0:	48 89 c6             	mov    %rax,%rsi
   184d3:	48 8d 3d e3 ba 00 00 	lea    0xbae3(%rip),%rdi        # 23fbd <.LC14>
   184da:	31 c0                	xor    %eax,%eax
   184dc:	e8 99 ed ff ff       	call   1727a <printf>
   184e1:	4c 89 e6             	mov    %r12,%rsi
   184e4:	48 89 ef             	mov    %rbp,%rdi
   184e7:	e8 20 e6 ff ff       	call   16b0c <pxe_uri>
   184ec:	4c 89 e7             	mov    %r12,%rdi
   184ef:	48 89 c3             	mov    %rax,%rbx
   184f2:	e8 2b 42 ff ff       	call   c722 <free>
   184f7:	49 89 dc             	mov    %rbx,%r12
   184fa:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   184ff:	e8 1e 42 ff ff       	call   c722 <free>
   18504:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   18509:	48 2b 05 40 1b 01 00 	sub    0x11b40(%rip),%rax        # 2a050 <__stack_chk_guard>
   18510:	74 05                	je     18517 <fetch_next_server_and_filename+0x114>
   18512:	e8 49 a5 fe ff       	call   2a60 <__stack_chk_fail>
   18517:	48 83 c4 40          	add    $0x40,%rsp
   1851b:	4c 89 e0             	mov    %r12,%rax
   1851e:	5b                   	pop    %rbx
   1851f:	5d                   	pop    %rbp
   18520:	41 5c                	pop    %r12
   18522:	c3                   	ret    

0000000000018523 <netboot>:
   18523:	f3 0f 1e fa          	endbr64 
   18527:	41 56                	push   %r14
   18529:	41 55                	push   %r13
   1852b:	41 54                	push   %r12
   1852d:	49 89 fc             	mov    %rdi,%r12
   18530:	55                   	push   %rbp
   18531:	53                   	push   %rbx
   18532:	48 8d 1d c7 e4 00 00 	lea    0xe4c7(%rip),%rbx        # 26a00 <net_devices>
   18539:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   18540:	48 8b 05 09 1b 01 00 	mov    0x11b09(%rip),%rax        # 2a050 <__stack_chk_guard>
   18547:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1854e:	00 
   1854f:	48 8b 05 aa e4 00 00 	mov    0xe4aa(%rip),%rax        # 26a00 <net_devices>
   18556:	48 8d 68 f0          	lea    -0x10(%rax),%rbp
   1855a:	48 8d 45 10          	lea    0x10(%rbp),%rax
   1855e:	48 39 d8             	cmp    %rbx,%rax
   18561:	74 12                	je     18575 <netboot+0x52>
   18563:	48 89 ef             	mov    %rbp,%rdi
   18566:	e8 39 71 00 00       	call   1f6a4 <ifclose>
   1856b:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
   1856f:	48 83 ed 10          	sub    $0x10,%rbp
   18573:	eb e5                	jmp    1855a <netboot+0x37>
   18575:	4c 89 e7             	mov    %r12,%rdi
   18578:	e8 ec 70 00 00       	call   1f669 <ifopen>
   1857d:	85 c0                	test   %eax,%eax
   1857f:	0f 85 ac 02 00 00    	jne    18831 <netboot+0x30e>
   18585:	4c 89 e7             	mov    %r12,%rdi
   18588:	e8 20 71 00 00       	call   1f6ad <ifstat>
   1858d:	31 d2                	xor    %edx,%edx
   1858f:	31 f6                	xor    %esi,%esi
   18591:	4c 89 e7             	mov    %r12,%rdi
   18594:	e8 c6 72 00 00       	call   1f85f <ifconf>
   18599:	85 c0                	test   %eax,%eax
   1859b:	0f 85 90 02 00 00    	jne    18831 <netboot+0x30e>
   185a1:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   185a5:	4c 8d 6c 24 38       	lea    0x38(%rsp),%r13
   185aa:	4c 8d 74 24 60       	lea    0x60(%rsp),%r14
   185af:	e8 9b 7f 00 00       	call   2054f <route>
   185b4:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   185b8:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   185bd:	b9 0a 00 00 00       	mov    $0xa,%ecx
   185c2:	48 8d ac 24 8e 00 00 	lea    0x8e(%rsp),%rbp
   185c9:	00 
   185ca:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   185cf:	f3 ab                	rep stos %eax,%es:(%rdi)
   185d1:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   185d6:	b9 0a 00 00 00       	mov    $0xa,%ecx
   185db:	48 89 ea             	mov    %rbp,%rdx
   185de:	f3 ab                	rep stos %eax,%es:(%rdi)
   185e0:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   185e5:	b9 0a 00 00 00       	mov    $0xa,%ecx
   185ea:	48 c7 44 24 28 3c 00 	movq   $0x3c,0x28(%rsp)
   185f1:	00 00 
   185f3:	f3 ab                	rep stos %eax,%es:(%rdi)
   185f5:	b9 0a 00 00 00       	mov    $0xa,%ecx
   185fa:	31 ff                	xor    %edi,%edi
   185fc:	48 c7 44 24 50 06 2b 	movq   $0x2b06,0x50(%rsp)
   18603:	00 00 
   18605:	48 c7 44 24 78 09 2b 	movq   $0x2b09,0x78(%rsp)
   1860c:	00 00 
   1860e:	e8 e1 98 ff ff       	call   11ef4 <fetch_string_setting>
   18613:	31 ff                	xor    %edi,%edi
   18615:	4c 89 ee             	mov    %r13,%rsi
   18618:	e8 eb 9b ff ff       	call   12208 <fetch_uintz_setting>
   1861d:	48 8d 35 a7 b9 00 00 	lea    0xb9a7(%rip),%rsi        # 23fcb <.LC0>
   18624:	48 89 ef             	mov    %rbp,%rdi
   18627:	48 89 c3             	mov    %rax,%rbx
   1862a:	e8 8d b3 ff ff       	call   139bc <strcmp>
   1862f:	85 c0                	test   %eax,%eax
   18631:	74 2a                	je     1865d <netboot+0x13a>
   18633:	31 ff                	xor    %edi,%edi
   18635:	e8 c9 fd ff ff       	call   18403 <fetch_next_server_and_filename>
   1863a:	4c 89 f2             	mov    %r14,%rdx
   1863d:	48 8d 35 0c 0f 01 00 	lea    0x10f0c(%rip),%rsi        # 29550 <root_path_setting>
   18644:	31 ff                	xor    %edi,%edi
   18646:	49 89 c4             	mov    %rax,%r12
   18649:	e8 7c 98 ff ff       	call   11eca <fetch_string_setting_copy>
   1864e:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
   18653:	48 85 ed             	test   %rbp,%rbp
   18656:	75 78                	jne    186d0 <netboot+0x1ad>
   18658:	e9 b9 00 00 00       	jmp    18716 <netboot+0x1f3>
   1865d:	45 31 c9             	xor    %r9d,%r9d
   18660:	45 31 c0             	xor    %r8d,%r8d
   18663:	31 c9                	xor    %ecx,%ecx
   18665:	31 d2                	xor    %edx,%edx
   18667:	31 ff                	xor    %edi,%edi
   18669:	4c 89 f6             	mov    %r14,%rsi
   1866c:	e8 d8 95 ff ff       	call   11c49 <fetch_setting>
   18671:	85 c0                	test   %eax,%eax
   18673:	78 be                	js     18633 <netboot+0x110>
   18675:	80 e3 08             	and    $0x8,%bl
   18678:	74 1c                	je     18696 <netboot+0x173>
   1867a:	45 31 c9             	xor    %r9d,%r9d
   1867d:	45 31 c0             	xor    %r8d,%r8d
   18680:	31 c9                	xor    %ecx,%ecx
   18682:	31 d2                	xor    %edx,%edx
   18684:	31 ff                	xor    %edi,%edi
   18686:	48 8d 35 73 0e 01 00 	lea    0x10e73(%rip),%rsi        # 29500 <filename_setting>
   1868d:	e8 b7 95 ff ff       	call   11c49 <fetch_setting>
   18692:	85 c0                	test   %eax,%eax
   18694:	79 9d                	jns    18633 <netboot+0x110>
   18696:	31 c0                	xor    %eax,%eax
   18698:	48 8d 3d 36 b9 00 00 	lea    0xb936(%rip),%rdi        # 23fd5 <.LC16>
   1869f:	e8 d6 eb ff ff       	call   1727a <printf>
   186a4:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   186ab:	00 
   186ac:	48 2b 05 9d 19 01 00 	sub    0x1199d(%rip),%rax        # 2a050 <__stack_chk_guard>
   186b3:	0f 85 89 01 00 00    	jne    18842 <netboot+0x31f>
   186b9:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   186c0:	4c 89 e7             	mov    %r12,%rdi
   186c3:	5b                   	pop    %rbx
   186c4:	5d                   	pop    %rbp
   186c5:	41 5c                	pop    %r12
   186c7:	41 5d                	pop    %r13
   186c9:	41 5e                	pop    %r14
   186cb:	e9 43 fb ff ff       	jmp    18213 <pxe_menu_boot>
   186d0:	48 89 ef             	mov    %rbp,%rdi
   186d3:	e8 9d a2 ff ff       	call   12975 <expand_settings>
   186d8:	48 89 c5             	mov    %rax,%rbp
   186db:	48 85 c0             	test   %rax,%rax
   186de:	74 2c                	je     1870c <netboot+0x1e9>
   186e0:	80 38 00             	cmpb   $0x0,(%rax)
   186e3:	74 11                	je     186f6 <netboot+0x1d3>
   186e5:	48 89 c6             	mov    %rax,%rsi
   186e8:	48 8d 3d fd b8 00 00 	lea    0xb8fd(%rip),%rdi        # 23fec <.LC17>
   186ef:	31 c0                	xor    %eax,%eax
   186f1:	e8 84 eb ff ff       	call   1727a <printf>
   186f6:	48 89 ef             	mov    %rbp,%rdi
   186f9:	e8 31 de ff ff       	call   1652f <parse_uri>
   186fe:	48 89 ef             	mov    %rbp,%rdi
   18701:	48 89 c3             	mov    %rax,%rbx
   18704:	e8 19 40 ff ff       	call   c722 <free>
   18709:	48 89 dd             	mov    %rbx,%rbp
   1870c:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   18711:	e8 0c 40 ff ff       	call   c722 <free>
   18716:	4c 89 f2             	mov    %r14,%rdx
   18719:	48 8d 35 58 0e 01 00 	lea    0x10e58(%rip),%rsi        # 29578 <san_filename_setting>
   18720:	31 ff                	xor    %edi,%edi
   18722:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   18727:	e8 9e 97 ff ff       	call   11eca <fetch_string_setting_copy>
   1872c:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
   18731:	48 85 ed             	test   %rbp,%rbp
   18734:	74 30                	je     18766 <netboot+0x243>
   18736:	48 89 ef             	mov    %rbp,%rdi
   18739:	e8 37 a2 ff ff       	call   12975 <expand_settings>
   1873e:	48 89 c5             	mov    %rax,%rbp
   18741:	48 85 c0             	test   %rax,%rax
   18744:	74 16                	je     1875c <netboot+0x239>
   18746:	80 38 00             	cmpb   $0x0,(%rax)
   18749:	74 11                	je     1875c <netboot+0x239>
   1874b:	48 89 c6             	mov    %rax,%rsi
   1874e:	48 8d 3d a6 b8 00 00 	lea    0xb8a6(%rip),%rdi        # 23ffb <.LC18>
   18755:	31 c0                	xor    %eax,%eax
   18757:	e8 1e eb ff ff       	call   1727a <printf>
   1875c:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   18761:	e8 bc 3f ff ff       	call   c722 <free>
   18766:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1876b:	4d 85 e4             	test   %r12,%r12
   1876e:	74 3b                	je     187ab <netboot+0x288>
   18770:	48 85 c0             	test   %rax,%rax
   18773:	74 36                	je     187ab <netboot+0x288>
   18775:	48 8b 78 10          	mov    0x10(%rax),%rdi
   18779:	48 85 ff             	test   %rdi,%rdi
   1877c:	75 23                	jne    187a1 <netboot+0x27e>
   1877e:	48 8d 3d 88 b8 00 00 	lea    0xb888(%rip),%rdi        # 2400d <.LC19>
   18785:	31 c0                	xor    %eax,%eax
   18787:	e8 ee ea ff ff       	call   1727a <printf>
   1878c:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   18791:	e8 84 77 ff ff       	call   ff1a <ref_decrement>
   18796:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   1879d:	00 00 
   1879f:	eb 0a                	jmp    187ab <netboot+0x288>
   187a1:	e8 0a 63 ff ff       	call   eab0 <xfer_uri_opener>
   187a6:	48 85 c0             	test   %rax,%rax
   187a9:	74 d3                	je     1877e <netboot+0x25b>
   187ab:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   187b0:	4c 89 e3             	mov    %r12,%rbx
   187b3:	48 09 c3             	or     %rax,%rbx
   187b6:	75 22                	jne    187da <netboot+0x2b7>
   187b8:	bf 72 1e fc d2       	mov    $0xd2fc1e72,%edi
   187bd:	e8 b6 b0 ff ff       	call   13878 <strerror>
   187c2:	48 8d 3d 64 b8 00 00 	lea    0xb864(%rip),%rdi        # 2402d <.LC20>
   187c9:	48 89 c6             	mov    %rax,%rsi
   187cc:	31 c0                	xor    %eax,%eax
   187ce:	e8 a7 ea ff ff       	call   1727a <printf>
   187d3:	b8 72 1e fc d2       	mov    $0xd2fc1e72,%eax
   187d8:	eb 35                	jmp    1880f <netboot+0x2ec>
   187da:	48 83 f8 01          	cmp    $0x1,%rax
   187de:	45 19 c9             	sbb    %r9d,%r9d
   187e1:	41 83 e1 07          	and    $0x7,%r9d
   187e5:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
   187ea:	e8 21 86 00 00       	call   20e10 <san_default_drive>
   187ef:	31 d2                	xor    %edx,%edx
   187f1:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
   187f6:	49 89 e8             	mov    %rbp,%r8
   187f9:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   187ff:	89 c1                	mov    %eax,%ecx
   18801:	4c 89 ee             	mov    %r13,%rsi
   18804:	4c 89 e7             	mov    %r12,%rdi
   18807:	0f 95 c2             	setne  %dl
   1880a:	e8 0e fa ff ff       	call   1821d <uriboot>
   1880f:	48 89 ef             	mov    %rbp,%rdi
   18812:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18816:	e8 07 3f ff ff       	call   c722 <free>
   1881b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   18820:	e8 f5 76 ff ff       	call   ff1a <ref_decrement>
   18825:	4c 89 e7             	mov    %r12,%rdi
   18828:	e8 ed 76 ff ff       	call   ff1a <ref_decrement>
   1882d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   18831:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   18838:	00 
   18839:	48 2b 15 10 18 01 00 	sub    0x11810(%rip),%rdx        # 2a050 <__stack_chk_guard>
   18840:	74 05                	je     18847 <netboot+0x324>
   18842:	e8 19 a2 fe ff       	call   2a60 <__stack_chk_fail>
   18847:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   1884e:	5b                   	pop    %rbx
   1884f:	5d                   	pop    %rbp
   18850:	41 5c                	pop    %r12
   18852:	41 5d                	pop    %r13
   18854:	41 5e                	pop    %r14
   18856:	c3                   	ret    

0000000000018857 <ipxe>:
   18857:	f3 0f 1e fa          	endbr64 
   1885b:	41 54                	push   %r12
   1885d:	48 8d 35 9c 9b 00 00 	lea    0x9b9c(%rip),%rsi        # 22400 <product_version>
   18864:	49 89 fc             	mov    %rdi,%r12
   18867:	48 8d 3d d4 b7 00 00 	lea    0xb7d4(%rip),%rdi        # 24042 <.LC21>
   1886e:	55                   	push   %rbp
   1886f:	48 8d 2d 5a 02 01 00 	lea    0x1025a(%rip),%rbp        # 28ad0 <http_basic_auth>
   18876:	53                   	push   %rbx
   18877:	48 8d 1d 1a 02 01 00 	lea    0x1021a(%rip),%rbx        # 28a98 <__feature_dns>
   1887e:	48 83 ec 10          	sub    $0x10,%rsp
   18882:	48 8b 05 c7 17 01 00 	mov    0x117c7(%rip),%rax        # 2a050 <__stack_chk_guard>
   18889:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1888e:	31 c0                	xor    %eax,%eax
   18890:	e8 e5 e9 ff ff       	call   1727a <printf>
   18895:	48 39 eb             	cmp    %rbp,%rbx
   18898:	73 17                	jae    188b1 <ipxe+0x5a>
   1889a:	48 8b 33             	mov    (%rbx),%rsi
   1889d:	48 8d 3d 5c ae 00 00 	lea    0xae5c(%rip),%rdi        # 23700 <.LC15>
   188a4:	31 c0                	xor    %eax,%eax
   188a6:	48 83 c3 08          	add    $0x8,%rbx
   188aa:	e8 cb e9 ff ff       	call   1727a <printf>
   188af:	eb e4                	jmp    18895 <ipxe+0x3e>
   188b1:	48 8d 3d f7 b1 00 00 	lea    0xb1f7(%rip),%rdi        # 23aaf <.LC0>
   188b8:	31 c0                	xor    %eax,%eax
   188ba:	e8 bb e9 ff ff       	call   1727a <printf>
   188bf:	48 8b 3d 0a f5 00 00 	mov    0xf50a(%rip),%rdi        # 27dd0 <images>
   188c6:	48 8d 05 03 f5 00 00 	lea    0xf503(%rip),%rax        # 27dd0 <images>
   188cd:	48 39 c7             	cmp    %rax,%rdi
   188d0:	74 23                	je     188f5 <ipxe+0x9e>
   188d2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   188d7:	48 2b 05 72 17 01 00 	sub    0x11772(%rip),%rax        # 2a050 <__stack_chk_guard>
   188de:	0f 85 f2 00 00 00    	jne    189d6 <ipxe+0x17f>
   188e4:	48 83 c4 10          	add    $0x10,%rsp
   188e8:	48 83 ef 10          	sub    $0x10,%rdi
   188ec:	5b                   	pop    %rbx
   188ed:	5d                   	pop    %rbp
   188ee:	41 5c                	pop    %r12
   188f0:	e9 66 72 00 00       	jmp    1fb5b <image_exec>
   188f5:	e8 ea f8 ff ff       	call   181e4 <shell_banner>
   188fa:	85 c0                	test   %eax,%eax
   188fc:	74 1f                	je     1891d <ipxe+0xc6>
   188fe:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18903:	48 2b 05 46 17 01 00 	sub    0x11746(%rip),%rax        # 2a050 <__stack_chk_guard>
   1890a:	0f 85 c6 00 00 00    	jne    189d6 <ipxe+0x17f>
   18910:	48 83 c4 10          	add    $0x10,%rsp
   18914:	5b                   	pop    %rbx
   18915:	5d                   	pop    %rbp
   18916:	41 5c                	pop    %r12
   18918:	e9 35 ac ff ff       	jmp    13552 <shell>
   1891d:	31 ff                	xor    %edi,%edi
   1891f:	48 89 e2             	mov    %rsp,%rdx
   18922:	48 8d 35 0f 10 01 00 	lea    0x1100f(%rip),%rsi        # 29938 <scriptlet_setting>
   18929:	e8 9c 95 ff ff       	call   11eca <fetch_string_setting_copy>
   1892e:	48 8b 3c 24          	mov    (%rsp),%rdi
   18932:	48 85 ff             	test   %rdi,%rdi
   18935:	74 13                	je     1894a <ipxe+0xf3>
   18937:	e8 12 55 00 00       	call   1de4e <system>
   1893c:	48 8b 3c 24          	mov    (%rsp),%rdi
   18940:	41 89 c4             	mov    %eax,%r12d
   18943:	e8 da 3d ff ff       	call   c722 <free>
   18948:	eb 7e                	jmp    189c8 <ipxe+0x171>
   1894a:	4d 85 e4             	test   %r12,%r12
   1894d:	74 0d                	je     1895c <ipxe+0x105>
   1894f:	4c 89 e7             	mov    %r12,%rdi
   18952:	e8 cc fb ff ff       	call   18523 <netboot>
   18957:	41 89 c4             	mov    %eax,%r12d
   1895a:	eb 5b                	jmp    189b7 <ipxe+0x160>
   1895c:	48 8b 05 9d e0 00 00 	mov    0xe09d(%rip),%rax        # 26a00 <net_devices>
   18963:	41 bc 79 1f fc d3    	mov    $0xd3fc1f79,%r12d
   18969:	48 8d 2d 90 e0 00 00 	lea    0xe090(%rip),%rbp        # 26a00 <net_devices>
   18970:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
   18974:	48 8d 43 10          	lea    0x10(%rbx),%rax
   18978:	48 39 e8             	cmp    %rbp,%rax
   1897b:	74 2c                	je     189a9 <ipxe+0x152>
   1897d:	48 8b 05 84 15 01 00 	mov    0x11584(%rip),%rax        # 29f08 <is_autoboot_device>
   18984:	48 85 c0             	test   %rax,%rax
   18987:	75 0d                	jne    18996 <ipxe+0x13f>
   18989:	48 89 df             	mov    %rbx,%rdi
   1898c:	e8 92 fb ff ff       	call   18523 <netboot>
   18991:	41 89 c4             	mov    %eax,%r12d
   18994:	eb 09                	jmp    1899f <ipxe+0x148>
   18996:	48 89 df             	mov    %rbx,%rdi
   18999:	ff d0                	call   *%rax
   1899b:	85 c0                	test   %eax,%eax
   1899d:	75 ea                	jne    18989 <ipxe+0x132>
   1899f:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   189a3:	48 83 eb 10          	sub    $0x10,%rbx
   189a7:	eb cb                	jmp    18974 <ipxe+0x11d>
   189a9:	48 8d 3d f4 b6 00 00 	lea    0xb6f4(%rip),%rdi        # 240a4 <.LC23>
   189b0:	31 c0                	xor    %eax,%eax
   189b2:	e8 c3 e8 ff ff       	call   1727a <printf>
   189b7:	e8 28 f8 ff ff       	call   181e4 <shell_banner>
   189bc:	85 c0                	test   %eax,%eax
   189be:	74 08                	je     189c8 <ipxe+0x171>
   189c0:	e8 8d ab ff ff       	call   13552 <shell>
   189c5:	41 89 c4             	mov    %eax,%r12d
   189c8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   189cd:	48 2b 05 7c 16 01 00 	sub    0x1167c(%rip),%rax        # 2a050 <__stack_chk_guard>
   189d4:	74 05                	je     189db <ipxe+0x184>
   189d6:	e8 85 a0 fe ff       	call   2a60 <__stack_chk_fail>
   189db:	48 83 c4 10          	add    $0x10,%rsp
   189df:	44 89 e0             	mov    %r12d,%eax
   189e2:	5b                   	pop    %rbx
   189e3:	5d                   	pop    %rbp
   189e4:	41 5c                	pop    %r12
   189e6:	c3                   	ret    

00000000000189e7 <autoboot_exec>:
   189e7:	f3 0f 1e fa          	endbr64 
   189eb:	48 8d 15 0e ec 00 00 	lea    0xec0e(%rip),%rdx        # 27600 <autoboot_cmd>
   189f2:	e9 40 fd fe ff       	jmp    8737 <ifcommon_exec>

00000000000189f7 <autoboot_payload>:
   189f7:	f3 0f 1e fa          	endbr64 
   189fb:	e9 23 fb ff ff       	jmp    18523 <netboot>

0000000000018a00 <hex_encode>:
   18a00:	f3 0f 1e fa          	endbr64 
   18a04:	41 57                	push   %r15
   18a06:	41 56                	push   %r14
   18a08:	41 55                	push   %r13
   18a0a:	49 89 f5             	mov    %rsi,%r13
   18a0d:	41 54                	push   %r12
   18a0f:	55                   	push   %rbp
   18a10:	4c 89 c5             	mov    %r8,%rbp
   18a13:	53                   	push   %rbx
   18a14:	48 89 cb             	mov    %rcx,%rbx
   18a17:	48 83 ec 28          	sub    $0x28,%rsp
   18a1b:	48 8b 05 2e 16 01 00 	mov    0x1162e(%rip),%rax        # 2a050 <__stack_chk_guard>
   18a22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18a27:	31 c0                	xor    %eax,%eax
   18a29:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   18a2e:	40 88 7c 24 16       	mov    %dil,0x16(%rsp)
   18a33:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
   18a38:	4d 85 c0             	test   %r8,%r8
   18a3b:	74 03                	je     18a40 <hex_encode+0x40>
   18a3d:	c6 01 00             	movb   $0x0,(%rcx)
   18a40:	45 31 f6             	xor    %r14d,%r14d
   18a43:	45 31 e4             	xor    %r12d,%r12d
   18a46:	4c 8d 3d 67 ba 00 00 	lea    0xba67(%rip),%r15        # 244b4 <.LC0>
   18a4d:	44 89 f0             	mov    %r14d,%eax
   18a50:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
   18a55:	73 34                	jae    18a8b <hex_encode+0x8b>
   18a57:	4d 85 e4             	test   %r12,%r12
   18a5a:	48 8d 4c 24 16       	lea    0x16(%rsp),%rcx
   18a5f:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
   18a63:	48 89 ee             	mov    %rbp,%rsi
   18a66:	49 0f 44 cf          	cmove  %r15,%rcx
   18a6a:	45 0f b6 44 05 00    	movzbl 0x0(%r13,%rax,1),%r8d
   18a70:	4c 29 e6             	sub    %r12,%rsi
   18a73:	31 c0                	xor    %eax,%eax
   18a75:	48 8d 15 a4 b6 00 00 	lea    0xb6a4(%rip),%rdx        # 24120 <.LC1>
   18a7c:	41 ff c6             	inc    %r14d
   18a7f:	e8 4b e7 ff ff       	call   171cf <ssnprintf>
   18a84:	48 98                	cltq   
   18a86:	49 01 c4             	add    %rax,%r12
   18a89:	eb c2                	jmp    18a4d <hex_encode+0x4d>
   18a8b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   18a90:	48 2b 05 b9 15 01 00 	sub    0x115b9(%rip),%rax        # 2a050 <__stack_chk_guard>
   18a97:	74 05                	je     18a9e <hex_encode+0x9e>
   18a99:	e8 c2 9f fe ff       	call   2a60 <__stack_chk_fail>
   18a9e:	48 83 c4 28          	add    $0x28,%rsp
   18aa2:	4c 89 e0             	mov    %r12,%rax
   18aa5:	5b                   	pop    %rbx
   18aa6:	5d                   	pop    %rbp
   18aa7:	41 5c                	pop    %r12
   18aa9:	41 5d                	pop    %r13
   18aab:	41 5e                	pop    %r14
   18aad:	41 5f                	pop    %r15
   18aaf:	c3                   	ret    

0000000000018ab0 <hex_decode>:
   18ab0:	f3 0f 1e fa          	endbr64 
   18ab4:	41 57                	push   %r15
   18ab6:	41 56                	push   %r14
   18ab8:	49 89 ce             	mov    %rcx,%r14
   18abb:	41 55                	push   %r13
   18abd:	49 89 d5             	mov    %rdx,%r13
   18ac0:	41 54                	push   %r12
   18ac2:	41 89 fc             	mov    %edi,%r12d
   18ac5:	55                   	push   %rbp
   18ac6:	48 89 f5             	mov    %rsi,%rbp
   18ac9:	53                   	push   %rbx
   18aca:	31 db                	xor    %ebx,%ebx
   18acc:	48 83 ec 18          	sub    $0x18,%rsp
   18ad0:	8a 45 00             	mov    0x0(%rbp),%al
   18ad3:	84 c0                	test   %al,%al
   18ad5:	74 5c                	je     18b33 <hex_decode+0x83>
   18ad7:	85 db                	test   %ebx,%ebx
   18ad9:	74 0f                	je     18aea <hex_decode+0x3a>
   18adb:	45 84 e4             	test   %r12b,%r12b
   18ade:	74 0a                	je     18aea <hex_decode+0x3a>
   18ae0:	48 ff c5             	inc    %rbp
   18ae3:	44 38 e0             	cmp    %r12b,%al
   18ae6:	74 02                	je     18aea <hex_decode+0x3a>
   18ae8:	eb 2a                	jmp    18b14 <hex_decode+0x64>
   18aea:	0f be 7d 00          	movsbl 0x0(%rbp),%edi
   18aee:	e8 43 b0 ff ff       	call   13b36 <digit_value>
   18af3:	83 f8 0f             	cmp    $0xf,%eax
   18af6:	76 02                	jbe    18afa <hex_decode+0x4a>
   18af8:	eb 1a                	jmp    18b14 <hex_decode+0x64>
   18afa:	0f be 7d 01          	movsbl 0x1(%rbp),%edi
   18afe:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18b02:	4c 8d 7d 02          	lea    0x2(%rbp),%r15
   18b06:	e8 2b b0 ff ff       	call   13b36 <digit_value>
   18b0b:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   18b0f:	83 f8 0f             	cmp    $0xf,%eax
   18b12:	76 07                	jbe    18b1b <hex_decode+0x6b>
   18b14:	b8 7e df ee e3       	mov    $0xe3eedf7e,%eax
   18b19:	eb 1a                	jmp    18b35 <hex_decode+0x85>
   18b1b:	89 d9                	mov    %ebx,%ecx
   18b1d:	4c 39 f1             	cmp    %r14,%rcx
   18b20:	73 0a                	jae    18b2c <hex_decode+0x7c>
   18b22:	c1 e2 04             	shl    $0x4,%edx
   18b25:	09 c2                	or     %eax,%edx
   18b27:	41 88 54 0d 00       	mov    %dl,0x0(%r13,%rcx,1)
   18b2c:	ff c3                	inc    %ebx
   18b2e:	4c 89 fd             	mov    %r15,%rbp
   18b31:	eb 9d                	jmp    18ad0 <hex_decode+0x20>
   18b33:	89 d8                	mov    %ebx,%eax
   18b35:	48 83 c4 18          	add    $0x18,%rsp
   18b39:	5b                   	pop    %rbx
   18b3a:	5d                   	pop    %rbp
   18b3b:	41 5c                	pop    %r12
   18b3d:	41 5d                	pop    %r13
   18b3f:	41 5e                	pop    %r14
   18b41:	41 5f                	pop    %r15
   18b43:	c3                   	ret    

0000000000018b44 <base64_encode>:
   18b44:	f3 0f 1e fa          	endbr64 
   18b48:	49 89 f2             	mov    %rsi,%r10
   18b4b:	41 54                	push   %r12
   18b4d:	49 89 f9             	mov    %rdi,%r9
   18b50:	48 89 ce             	mov    %rcx,%rsi
   18b53:	55                   	push   %rbp
   18b54:	48 89 d7             	mov    %rdx,%rdi
   18b57:	4e 8d 1c d5 00 00 00 	lea    0x0(,%r10,8),%r11
   18b5e:	00 
   18b5f:	45 31 c0             	xor    %r8d,%r8d
   18b62:	53                   	push   %rbx
   18b63:	48 8d 2d 36 9b 00 00 	lea    0x9b36(%rip),%rbp        # 226a0 <base64>
   18b6a:	bb 08 00 00 00       	mov    $0x8,%ebx
   18b6f:	41 6b d0 06          	imul   $0x6,%r8d,%edx
   18b73:	41 89 d4             	mov    %edx,%r12d
   18b76:	48 89 d0             	mov    %rdx,%rax
   18b79:	41 83 e4 07          	and    $0x7,%r12d
   18b7d:	4c 39 da             	cmp    %r11,%rdx
   18b80:	73 4c                	jae    18bce <base64_encode+0x8a>
   18b82:	c1 e8 03             	shr    $0x3,%eax
   18b85:	44 89 e1             	mov    %r12d,%ecx
   18b88:	89 c2                	mov    %eax,%edx
   18b8a:	ff c0                	inc    %eax
   18b8c:	41 0f b6 14 11       	movzbl (%r9,%rdx,1),%edx
   18b91:	d3 e2                	shl    %cl,%edx
   18b93:	4c 39 d0             	cmp    %r10,%rax
   18b96:	73 0e                	jae    18ba6 <base64_encode+0x62>
   18b98:	41 0f b6 04 01       	movzbl (%r9,%rax,1),%eax
   18b9d:	89 d9                	mov    %ebx,%ecx
   18b9f:	44 29 e1             	sub    %r12d,%ecx
   18ba2:	d3 f8                	sar    %cl,%eax
   18ba4:	09 c2                	or     %eax,%edx
   18ba6:	49 39 f0             	cmp    %rsi,%r8
   18ba9:	73 0e                	jae    18bb9 <base64_encode+0x75>
   18bab:	c1 ea 02             	shr    $0x2,%edx
   18bae:	83 e2 3f             	and    $0x3f,%edx
   18bb1:	8a 44 15 00          	mov    0x0(%rbp,%rdx,1),%al
   18bb5:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
   18bb9:	49 ff c0             	inc    %r8
   18bbc:	eb b1                	jmp    18b6f <base64_encode+0x2b>
   18bbe:	49 39 f0             	cmp    %rsi,%r8
   18bc1:	73 05                	jae    18bc8 <base64_encode+0x84>
   18bc3:	42 c6 04 07 3d       	movb   $0x3d,(%rdi,%r8,1)
   18bc8:	83 c0 06             	add    $0x6,%eax
   18bcb:	49 ff c0             	inc    %r8
   18bce:	a8 07                	test   $0x7,%al
   18bd0:	75 ec                	jne    18bbe <base64_encode+0x7a>
   18bd2:	49 39 f0             	cmp    %rsi,%r8
   18bd5:	73 05                	jae    18bdc <base64_encode+0x98>
   18bd7:	42 c6 04 07 00       	movb   $0x0,(%rdi,%r8,1)
   18bdc:	48 85 f6             	test   %rsi,%rsi
   18bdf:	74 05                	je     18be6 <base64_encode+0xa2>
   18be1:	c6 44 37 ff 00       	movb   $0x0,-0x1(%rdi,%rsi,1)
   18be6:	5b                   	pop    %rbx
   18be7:	4c 89 c0             	mov    %r8,%rax
   18bea:	5d                   	pop    %rbp
   18beb:	41 5c                	pop    %r12
   18bed:	c3                   	ret    

0000000000018bee <base64_decode>:
   18bee:	f3 0f 1e fa          	endbr64 
   18bf2:	41 57                	push   %r15
   18bf4:	48 89 d1             	mov    %rdx,%rcx
   18bf7:	31 c0                	xor    %eax,%eax
   18bf9:	41 56                	push   %r14
   18bfb:	49 89 f6             	mov    %rsi,%r14
   18bfe:	41 55                	push   %r13
   18c00:	41 54                	push   %r12
   18c02:	55                   	push   %rbp
   18c03:	48 89 d5             	mov    %rdx,%rbp
   18c06:	53                   	push   %rbx
   18c07:	48 89 fb             	mov    %rdi,%rbx
   18c0a:	48 89 f7             	mov    %rsi,%rdi
   18c0d:	48 83 ec 18          	sub    $0x18,%rsp
   18c11:	f3 aa                	rep stos %al,%es:(%rdi)
   18c13:	45 31 e4             	xor    %r12d,%r12d
   18c16:	45 31 ff             	xor    %r15d,%r15d
   18c19:	4c 8d 2d 80 9a 00 00 	lea    0x9a80(%rip),%r13        # 226a0 <base64>
   18c20:	8a 13                	mov    (%rbx),%dl
   18c22:	48 ff c3             	inc    %rbx
   18c25:	84 d2                	test   %dl,%dl
   18c27:	0f 84 8d 00 00 00    	je     18cba <base64_decode+0xcc>
   18c2d:	0f b6 f2             	movzbl %dl,%esi
   18c30:	88 54 24 0f          	mov    %dl,0xf(%rsp)
   18c34:	89 f7                	mov    %esi,%edi
   18c36:	89 74 24 08          	mov    %esi,0x8(%rsp)
   18c3a:	e8 4d 08 00 00       	call   1948c <isspace>
   18c3f:	85 c0                	test   %eax,%eax
   18c41:	75 dd                	jne    18c20 <base64_decode+0x32>
   18c43:	8a 54 24 0f          	mov    0xf(%rsp),%dl
   18c47:	8b 74 24 08          	mov    0x8(%rsp),%esi
   18c4b:	80 fa 3d             	cmp    $0x3d,%dl
   18c4e:	75 11                	jne    18c61 <base64_decode+0x73>
   18c50:	41 83 fc 01          	cmp    $0x1,%r12d
   18c54:	76 02                	jbe    18c58 <base64_decode+0x6a>
   18c56:	eb 6e                	jmp    18cc6 <base64_decode+0xd8>
   18c58:	41 ff c4             	inc    %r12d
   18c5b:	41 83 ef 02          	sub    $0x2,%r15d
   18c5f:	eb bf                	jmp    18c20 <base64_decode+0x32>
   18c61:	45 85 e4             	test   %r12d,%r12d
   18c64:	74 02                	je     18c68 <base64_decode+0x7a>
   18c66:	eb 5e                	jmp    18cc6 <base64_decode+0xd8>
   18c68:	4c 89 ef             	mov    %r13,%rdi
   18c6b:	e8 b3 ad ff ff       	call   13a23 <strchr>
   18c70:	48 85 c0             	test   %rax,%rax
   18c73:	75 02                	jne    18c77 <base64_decode+0x89>
   18c75:	eb 4f                	jmp    18cc6 <base64_decode+0xd8>
   18c77:	44 89 fa             	mov    %r15d,%edx
   18c7a:	4c 29 e8             	sub    %r13,%rax
   18c7d:	c1 ea 03             	shr    $0x3,%edx
   18c80:	c1 e0 02             	shl    $0x2,%eax
   18c83:	48 39 d5             	cmp    %rdx,%rbp
   18c86:	76 0e                	jbe    18c96 <base64_decode+0xa8>
   18c88:	44 89 f9             	mov    %r15d,%ecx
   18c8b:	89 c7                	mov    %eax,%edi
   18c8d:	83 e1 07             	and    $0x7,%ecx
   18c90:	d3 ff                	sar    %cl,%edi
   18c92:	41 08 3c 16          	or     %dil,(%r14,%rdx,1)
   18c96:	48 ff c2             	inc    %rdx
   18c99:	48 39 d5             	cmp    %rdx,%rbp
   18c9c:	76 13                	jbe    18cb1 <base64_decode+0xc3>
   18c9e:	44 89 fe             	mov    %r15d,%esi
   18ca1:	b9 08 00 00 00       	mov    $0x8,%ecx
   18ca6:	83 e6 07             	and    $0x7,%esi
   18ca9:	29 f1                	sub    %esi,%ecx
   18cab:	d3 e0                	shl    %cl,%eax
   18cad:	41 08 04 16          	or     %al,(%r14,%rdx,1)
   18cb1:	41 83 c7 06          	add    $0x6,%r15d
   18cb5:	e9 66 ff ff ff       	jmp    18c20 <base64_decode+0x32>
   18cba:	44 89 f8             	mov    %r15d,%eax
   18cbd:	c1 e8 03             	shr    $0x3,%eax
   18cc0:	41 80 e7 07          	and    $0x7,%r15b
   18cc4:	74 05                	je     18ccb <base64_decode+0xdd>
   18cc6:	b8 7e df ef e3       	mov    $0xe3efdf7e,%eax
   18ccb:	48 83 c4 18          	add    $0x18,%rsp
   18ccf:	5b                   	pop    %rbx
   18cd0:	5d                   	pop    %rbp
   18cd1:	41 5c                	pop    %r12
   18cd3:	41 5d                	pop    %r13
   18cd5:	41 5e                	pop    %r14
   18cd7:	41 5f                	pop    %r15
   18cd9:	c3                   	ret    

0000000000018cda <basename>:
   18cda:	f3 0f 1e fa          	endbr64 
   18cde:	41 54                	push   %r12
   18ce0:	be 2f 00 00 00       	mov    $0x2f,%esi
   18ce5:	49 89 fc             	mov    %rdi,%r12
   18ce8:	e8 50 ad ff ff       	call   13a3d <strrchr>
   18ced:	48 85 c0             	test   %rax,%rax
   18cf0:	74 04                	je     18cf6 <basename+0x1c>
   18cf2:	4c 8d 60 01          	lea    0x1(%rax),%r12
   18cf6:	4c 89 e0             	mov    %r12,%rax
   18cf9:	41 5c                	pop    %r12
   18cfb:	c3                   	ret    

0000000000018cfc <dirname>:
   18cfc:	f3 0f 1e fa          	endbr64 
   18d00:	41 54                	push   %r12
   18d02:	be 2f 00 00 00       	mov    $0x2f,%esi
   18d07:	49 89 fc             	mov    %rdi,%r12
   18d0a:	e8 2e ad ff ff       	call   13a3d <strrchr>
   18d0f:	49 39 c4             	cmp    %rax,%r12
   18d12:	74 0a                	je     18d1e <dirname+0x22>
   18d14:	48 85 c0             	test   %rax,%rax
   18d17:	74 0e                	je     18d27 <dirname+0x2b>
   18d19:	c6 00 00             	movb   $0x0,(%rax)
   18d1c:	eb 10                	jmp    18d2e <dirname+0x32>
   18d1e:	4c 8d 25 bb ac 00 00 	lea    0xacbb(%rip),%r12        # 239e0 <.LC0>
   18d25:	eb 07                	jmp    18d2e <dirname+0x32>
   18d27:	4c 8d 25 57 b1 00 00 	lea    0xb157(%rip),%r12        # 23e85 <.LC1>
   18d2e:	4c 89 e0             	mov    %r12,%rax
   18d31:	41 5c                	pop    %r12
   18d33:	c3                   	ret    

0000000000018d34 <bitmap_resize>:
   18d34:	f3 0f 1e fa          	endbr64 
   18d38:	41 56                	push   %r14
   18d3a:	89 f6                	mov    %esi,%esi
   18d3c:	41 55                	push   %r13
   18d3e:	49 89 f5             	mov    %rsi,%r13
   18d41:	48 83 c6 3f          	add    $0x3f,%rsi
   18d45:	41 54                	push   %r12
   18d47:	48 c1 ee 06          	shr    $0x6,%rsi
   18d4b:	55                   	push   %rbp
   18d4c:	41 89 f4             	mov    %esi,%r12d
   18d4f:	48 89 fd             	mov    %rdi,%rbp
   18d52:	53                   	push   %rbx
   18d53:	8b 5f 08             	mov    0x8(%rdi),%ebx
   18d56:	48 83 c3 3f          	add    $0x3f,%rbx
   18d5a:	48 c1 eb 06          	shr    $0x6,%rbx
   18d5e:	41 89 de             	mov    %ebx,%r14d
   18d61:	39 f3                	cmp    %esi,%ebx
   18d63:	74 1c                	je     18d81 <bitmap_resize+0x4d>
   18d65:	48 8b 3f             	mov    (%rdi),%rdi
   18d68:	48 c1 e6 03          	shl    $0x3,%rsi
   18d6c:	e8 a9 38 ff ff       	call   c61a <realloc>
   18d71:	48 85 c0             	test   %rax,%rax
   18d74:	75 07                	jne    18d7d <bitmap_resize+0x49>
   18d76:	b8 77 df f0 ce       	mov    $0xcef0df77,%eax
   18d7b:	eb 28                	jmp    18da5 <bitmap_resize+0x71>
   18d7d:	48 89 45 00          	mov    %rax,0x0(%rbp)
   18d81:	44 89 6d 08          	mov    %r13d,0x8(%rbp)
   18d85:	48 c1 e3 03          	shl    $0x3,%rbx
   18d89:	45 39 e6             	cmp    %r12d,%r14d
   18d8c:	73 15                	jae    18da3 <bitmap_resize+0x6f>
   18d8e:	48 8b 45 00          	mov    0x0(%rbp),%rax
   18d92:	41 ff c6             	inc    %r14d
   18d95:	48 c7 04 18 00 00 00 	movq   $0x0,(%rax,%rbx,1)
   18d9c:	00 
   18d9d:	48 83 c3 08          	add    $0x8,%rbx
   18da1:	eb e6                	jmp    18d89 <bitmap_resize+0x55>
   18da3:	31 c0                	xor    %eax,%eax
   18da5:	5b                   	pop    %rbx
   18da6:	5d                   	pop    %rbp
   18da7:	41 5c                	pop    %r12
   18da9:	41 5d                	pop    %r13
   18dab:	41 5e                	pop    %r14
   18dad:	c3                   	ret    

0000000000018dae <bitmap_test>:
   18dae:	f3 0f 1e fa          	endbr64 
   18db2:	89 f1                	mov    %esi,%ecx
   18db4:	31 c0                	xor    %eax,%eax
   18db6:	39 77 08             	cmp    %esi,0x8(%rdi)
   18db9:	76 1a                	jbe    18dd5 <bitmap_test+0x27>
   18dbb:	89 f2                	mov    %esi,%edx
   18dbd:	48 8b 37             	mov    (%rdi),%rsi
   18dc0:	b8 01 00 00 00       	mov    $0x1,%eax
   18dc5:	c1 ea 06             	shr    $0x6,%edx
   18dc8:	48 d3 e0             	shl    %cl,%rax
   18dcb:	48 23 04 d6          	and    (%rsi,%rdx,8),%rax
   18dcf:	0f 95 c0             	setne  %al
   18dd2:	0f b6 c0             	movzbl %al,%eax
   18dd5:	c3                   	ret    

0000000000018dd6 <bitmap_set>:
   18dd6:	f3 0f 1e fa          	endbr64 
   18dda:	89 f1                	mov    %esi,%ecx
   18ddc:	89 f0                	mov    %esi,%eax
   18dde:	48 8b 37             	mov    (%rdi),%rsi
   18de1:	ba 01 00 00 00       	mov    $0x1,%edx
   18de6:	c1 e8 06             	shr    $0x6,%eax
   18de9:	48 d3 e2             	shl    %cl,%rdx
   18dec:	48 09 14 c6          	or     %rdx,(%rsi,%rax,8)
   18df0:	44 8b 47 0c          	mov    0xc(%rdi),%r8d
   18df4:	44 89 c6             	mov    %r8d,%esi
   18df7:	e8 b2 ff ff ff       	call   18dae <bitmap_test>
   18dfc:	85 c0                	test   %eax,%eax
   18dfe:	74 09                	je     18e09 <bitmap_set+0x33>
   18e00:	41 ff c0             	inc    %r8d
   18e03:	44 89 47 0c          	mov    %r8d,0xc(%rdi)
   18e07:	eb e7                	jmp    18df0 <bitmap_set+0x1a>
   18e09:	c3                   	ret    

0000000000018e0a <block_read>:
   18e0a:	f3 0f 1e fa          	endbr64 
   18e0e:	41 55                	push   %r13
   18e10:	49 89 d5             	mov    %rdx,%r13
   18e13:	41 54                	push   %r12
   18e15:	55                   	push   %rbp
   18e16:	48 89 f5             	mov    %rsi,%rbp
   18e19:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 18e0a <block_read>
   18e20:	48 83 ec 30          	sub    $0x30,%rsp
   18e24:	48 8b 05 25 12 01 00 	mov    0x11225(%rip),%rax        # 2a050 <__stack_chk_guard>
   18e2b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   18e30:	31 c0                	xor    %eax,%eax
   18e32:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   18e37:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   18e3b:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   18e40:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   18e45:	e8 8b 0a ff ff       	call   98d5 <intf_get_dest_op_untyped>
   18e4a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18e4f:	49 89 c4             	mov    %rax,%r12
   18e52:	e8 28 0a ff ff       	call   987f <intf_object>
   18e57:	4d 85 e4             	test   %r12,%r12
   18e5a:	74 1f                	je     18e7b <block_read+0x71>
   18e5c:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   18e61:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   18e66:	48 89 c7             	mov    %rax,%rdi
   18e69:	4c 89 ea             	mov    %r13,%rdx
   18e6c:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   18e70:	48 89 ee             	mov    %rbp,%rsi
   18e73:	41 ff d4             	call   *%r12
   18e76:	41 89 c4             	mov    %eax,%r12d
   18e79:	eb 06                	jmp    18e81 <block_read+0x77>
   18e7b:	41 bc 7d df ed c0    	mov    $0xc0eddf7d,%r12d
   18e81:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18e86:	e8 85 09 ff ff       	call   9810 <intf_put>
   18e8b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   18e90:	48 2b 05 b9 11 01 00 	sub    0x111b9(%rip),%rax        # 2a050 <__stack_chk_guard>
   18e97:	74 05                	je     18e9e <block_read+0x94>
   18e99:	e8 c2 9b fe ff       	call   2a60 <__stack_chk_fail>
   18e9e:	48 83 c4 30          	add    $0x30,%rsp
   18ea2:	44 89 e0             	mov    %r12d,%eax
   18ea5:	5d                   	pop    %rbp
   18ea6:	41 5c                	pop    %r12
   18ea8:	41 5d                	pop    %r13
   18eaa:	c3                   	ret    

0000000000018eab <block_write>:
   18eab:	f3 0f 1e fa          	endbr64 
   18eaf:	41 55                	push   %r13
   18eb1:	49 89 d5             	mov    %rdx,%r13
   18eb4:	41 54                	push   %r12
   18eb6:	55                   	push   %rbp
   18eb7:	48 89 f5             	mov    %rsi,%rbp
   18eba:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 18eab <block_write>
   18ec1:	48 83 ec 30          	sub    $0x30,%rsp
   18ec5:	48 8b 05 84 11 01 00 	mov    0x11184(%rip),%rax        # 2a050 <__stack_chk_guard>
   18ecc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   18ed1:	31 c0                	xor    %eax,%eax
   18ed3:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   18ed8:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   18edc:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   18ee1:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   18ee6:	e8 ea 09 ff ff       	call   98d5 <intf_get_dest_op_untyped>
   18eeb:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18ef0:	49 89 c4             	mov    %rax,%r12
   18ef3:	e8 87 09 ff ff       	call   987f <intf_object>
   18ef8:	4d 85 e4             	test   %r12,%r12
   18efb:	74 1f                	je     18f1c <block_write+0x71>
   18efd:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   18f02:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   18f07:	48 89 c7             	mov    %rax,%rdi
   18f0a:	4c 89 ea             	mov    %r13,%rdx
   18f0d:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   18f11:	48 89 ee             	mov    %rbp,%rsi
   18f14:	41 ff d4             	call   *%r12
   18f17:	41 89 c4             	mov    %eax,%r12d
   18f1a:	eb 06                	jmp    18f22 <block_write+0x77>
   18f1c:	41 bc 7d df ed c0    	mov    $0xc0eddf7d,%r12d
   18f22:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18f27:	e8 e4 08 ff ff       	call   9810 <intf_put>
   18f2c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   18f31:	48 2b 05 18 11 01 00 	sub    0x11118(%rip),%rax        # 2a050 <__stack_chk_guard>
   18f38:	74 05                	je     18f3f <block_write+0x94>
   18f3a:	e8 21 9b fe ff       	call   2a60 <__stack_chk_fail>
   18f3f:	48 83 c4 30          	add    $0x30,%rsp
   18f43:	44 89 e0             	mov    %r12d,%eax
   18f46:	5d                   	pop    %rbp
   18f47:	41 5c                	pop    %r12
   18f49:	41 5d                	pop    %r13
   18f4b:	c3                   	ret    

0000000000018f4c <block_read_capacity>:
   18f4c:	f3 0f 1e fa          	endbr64 
   18f50:	41 54                	push   %r12
   18f52:	55                   	push   %rbp
   18f53:	48 89 f5             	mov    %rsi,%rbp
   18f56:	48 8d 35 ef ff ff ff 	lea    -0x11(%rip),%rsi        # 18f4c <block_read_capacity>
   18f5d:	48 83 ec 18          	sub    $0x18,%rsp
   18f61:	48 8b 05 e8 10 01 00 	mov    0x110e8(%rip),%rax        # 2a050 <__stack_chk_guard>
   18f68:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18f6d:	31 c0                	xor    %eax,%eax
   18f6f:	48 89 e2             	mov    %rsp,%rdx
   18f72:	e8 5e 09 ff ff       	call   98d5 <intf_get_dest_op_untyped>
   18f77:	48 8b 3c 24          	mov    (%rsp),%rdi
   18f7b:	49 89 c4             	mov    %rax,%r12
   18f7e:	e8 fc 08 ff ff       	call   987f <intf_object>
   18f83:	4d 85 e4             	test   %r12,%r12
   18f86:	74 0e                	je     18f96 <block_read_capacity+0x4a>
   18f88:	48 89 c7             	mov    %rax,%rdi
   18f8b:	48 89 ee             	mov    %rbp,%rsi
   18f8e:	41 ff d4             	call   *%r12
   18f91:	41 89 c4             	mov    %eax,%r12d
   18f94:	eb 06                	jmp    18f9c <block_read_capacity+0x50>
   18f96:	41 bc 7d df ed c0    	mov    $0xc0eddf7d,%r12d
   18f9c:	48 8b 3c 24          	mov    (%rsp),%rdi
   18fa0:	e8 6b 08 ff ff       	call   9810 <intf_put>
   18fa5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18faa:	48 2b 05 9f 10 01 00 	sub    0x1109f(%rip),%rax        # 2a050 <__stack_chk_guard>
   18fb1:	74 05                	je     18fb8 <block_read_capacity+0x6c>
   18fb3:	e8 a8 9a fe ff       	call   2a60 <__stack_chk_fail>
   18fb8:	48 83 c4 18          	add    $0x18,%rsp
   18fbc:	44 89 e0             	mov    %r12d,%eax
   18fbf:	5d                   	pop    %rbp
   18fc0:	41 5c                	pop    %r12
   18fc2:	c3                   	ret    

0000000000018fc3 <block_capacity>:
   18fc3:	f3 0f 1e fa          	endbr64 
   18fc7:	55                   	push   %rbp
   18fc8:	48 89 f5             	mov    %rsi,%rbp
   18fcb:	48 8d 35 f1 ff ff ff 	lea    -0xf(%rip),%rsi        # 18fc3 <block_capacity>
   18fd2:	53                   	push   %rbx
   18fd3:	48 83 ec 18          	sub    $0x18,%rsp
   18fd7:	48 8b 05 72 10 01 00 	mov    0x11072(%rip),%rax        # 2a050 <__stack_chk_guard>
   18fde:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18fe3:	31 c0                	xor    %eax,%eax
   18fe5:	48 89 e2             	mov    %rsp,%rdx
   18fe8:	e8 e8 08 ff ff       	call   98d5 <intf_get_dest_op_untyped>
   18fed:	48 85 c0             	test   %rax,%rax
   18ff0:	74 14                	je     19006 <block_capacity+0x43>
   18ff2:	48 8b 3c 24          	mov    (%rsp),%rdi
   18ff6:	48 89 c3             	mov    %rax,%rbx
   18ff9:	e8 81 08 ff ff       	call   987f <intf_object>
   18ffe:	48 89 ee             	mov    %rbp,%rsi
   19001:	48 89 c7             	mov    %rax,%rdi
   19004:	ff d3                	call   *%rbx
   19006:	48 8b 3c 24          	mov    (%rsp),%rdi
   1900a:	e8 01 08 ff ff       	call   9810 <intf_put>
   1900f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   19014:	48 2b 05 35 10 01 00 	sub    0x11035(%rip),%rax        # 2a050 <__stack_chk_guard>
   1901b:	74 05                	je     19022 <block_capacity+0x5f>
   1901d:	e8 3e 9a fe ff       	call   2a60 <__stack_chk_fail>
   19022:	48 83 c4 18          	add    $0x18,%rsp
   19026:	5b                   	pop    %rbx
   19027:	5d                   	pop    %rbp
   19028:	c3                   	ret    

0000000000019029 <blktrans_buffer>:
   19029:	f3 0f 1e fa          	endbr64 
   1902d:	48 8d 47 50          	lea    0x50(%rdi),%rax
   19031:	c3                   	ret    

0000000000019032 <blktrans_xferbuf_write>:
   19032:	f3 0f 1e fa          	endbr64 
   19036:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   1903a:	48 89 f0             	mov    %rsi,%rax
   1903d:	48 89 d6             	mov    %rdx,%rsi
   19040:	48 89 ca             	mov    %rcx,%rdx
   19043:	48 85 ff             	test   %rdi,%rdi
   19046:	74 08                	je     19050 <blktrans_xferbuf_write+0x1e>
   19048:	48 01 c7             	add    %rax,%rdi
   1904b:	e9 99 e3 ff ff       	jmp    173e9 <__memcpy>
   19050:	c3                   	ret    

0000000000019051 <blktrans_xferbuf_read>:
   19051:	f3 0f 1e fa          	endbr64 
   19055:	49 89 f8             	mov    %rdi,%r8
   19058:	48 89 d7             	mov    %rdx,%rdi
   1905b:	48 89 ca             	mov    %rcx,%rdx
   1905e:	49 8b 40 20          	mov    0x20(%r8),%rax
   19062:	48 85 c0             	test   %rax,%rax
   19065:	74 08                	je     1906f <blktrans_xferbuf_read+0x1e>
   19067:	48 01 c6             	add    %rax,%rsi
   1906a:	e9 7a e3 ff ff       	jmp    173e9 <__memcpy>
   1906f:	c3                   	ret    

0000000000019070 <blktrans_close>:
   19070:	f3 0f 1e fa          	endbr64 
   19074:	41 54                	push   %r12
   19076:	4c 8d 67 10          	lea    0x10(%rdi),%r12
   1907a:	55                   	push   %rbp
   1907b:	89 f5                	mov    %esi,%ebp
   1907d:	53                   	push   %rbx
   1907e:	48 89 fb             	mov    %rdi,%rbx
   19081:	48 83 ec 20          	sub    $0x20,%rsp
   19085:	48 8b 05 c4 0f 01 00 	mov    0x10fc4(%rip),%rax        # 2a050 <__stack_chk_guard>
   1908c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19091:	31 c0                	xor    %eax,%eax
   19093:	85 f6                	test   %esi,%esi
   19095:	75 2e                	jne    190c5 <blktrans_close+0x55>
   19097:	48 8b 4f 78          	mov    0x78(%rdi),%rcx
   1909b:	48 85 c9             	test   %rcx,%rcx
   1909e:	74 25                	je     190c5 <blktrans_close+0x55>
   190a0:	48 8b 47 58          	mov    0x58(%rdi),%rax
   190a4:	31 d2                	xor    %edx,%edx
   190a6:	48 89 e6             	mov    %rsp,%rsi
   190a9:	4c 89 e7             	mov    %r12,%rdi
   190ac:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   190b1:	48 f7 f1             	div    %rcx
   190b4:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%rsp)
   190bb:	ff 
   190bc:	48 89 04 24          	mov    %rax,(%rsp)
   190c0:	e8 fe fe ff ff       	call   18fc3 <block_capacity>
   190c5:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   190c9:	89 ee                	mov    %ebp,%esi
   190cb:	e8 cf 08 ff ff       	call   999f <intf_shutdown>
   190d0:	89 ee                	mov    %ebp,%esi
   190d2:	4c 89 e7             	mov    %r12,%rdi
   190d5:	e8 c5 08 ff ff       	call   999f <intf_shutdown>
   190da:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   190df:	48 2b 05 6a 0f 01 00 	sub    0x10f6a(%rip),%rax        # 2a050 <__stack_chk_guard>
   190e6:	74 05                	je     190ed <blktrans_close+0x7d>
   190e8:	e8 73 99 fe ff       	call   2a60 <__stack_chk_fail>
   190ed:	48 83 c4 20          	add    $0x20,%rsp
   190f1:	5b                   	pop    %rbx
   190f2:	5d                   	pop    %rbp
   190f3:	41 5c                	pop    %r12
   190f5:	c3                   	ret    

00000000000190f6 <blktrans_deliver>:
   190f6:	f3 0f 1e fa          	endbr64 
   190fa:	55                   	push   %rbp
   190fb:	48 89 fd             	mov    %rdi,%rbp
   190fe:	48 83 c7 50          	add    $0x50,%rdi
   19102:	48 83 ec 10          	sub    $0x10,%rsp
   19106:	e8 83 e9 ff ff       	call   17a8e <xferbuf_deliver>
   1910b:	85 c0                	test   %eax,%eax
   1910d:	74 12                	je     19121 <blktrans_deliver+0x2b>
   1910f:	89 c6                	mov    %eax,%esi
   19111:	48 89 ef             	mov    %rbp,%rdi
   19114:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   19118:	e8 53 ff ff ff       	call   19070 <blktrans_close>
   1911d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   19121:	48 83 c4 10          	add    $0x10,%rsp
   19125:	5d                   	pop    %rbp
   19126:	c3                   	ret    

0000000000019127 <blktrans_xferbuf_realloc>:
   19127:	f3 0f 1e fa          	endbr64 
   1912b:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
   19130:	74 06                	je     19138 <blktrans_xferbuf_realloc+0x11>
   19132:	b8 7d df df c3       	mov    $0xc3dfdf7d,%eax
   19137:	c3                   	ret    
   19138:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   1913c:	31 c0                	xor    %eax,%eax
   1913e:	c3                   	ret    

000000000001913f <block_translate>:
   1913f:	f3 0f 1e fa          	endbr64 
   19143:	41 56                	push   %r14
   19145:	41 55                	push   %r13
   19147:	49 89 f5             	mov    %rsi,%r13
   1914a:	41 54                	push   %r12
   1914c:	49 89 fc             	mov    %rdi,%r12
   1914f:	bf 80 00 00 00       	mov    $0x80,%edi
   19154:	55                   	push   %rbp
   19155:	53                   	push   %rbx
   19156:	48 89 d3             	mov    %rdx,%rbx
   19159:	e8 d8 35 ff ff       	call   c736 <zalloc>
   1915e:	48 85 c0             	test   %rax,%rax
   19161:	75 07                	jne    1916a <block_translate+0x2b>
   19163:	b8 77 df df ce       	mov    $0xcedfdf77,%eax
   19168:	eb 7c                	jmp    191e6 <block_translate+0xa7>
   1916a:	48 89 c5             	mov    %rax,%rbp
   1916d:	4c 8d 70 10          	lea    0x10(%rax),%r14
   19171:	48 8d 05 48 d3 00 00 	lea    0xd348(%rip),%rax        # 264c0 <null_intf>
   19178:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1917c:	48 8d 15 1d e5 00 00 	lea    0xe51d(%rip),%rdx        # 276a0 <blktrans_block_desc>
   19183:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   19187:	48 89 45 30          	mov    %rax,0x30(%rbp)
   1918b:	48 8d 05 ae e4 00 00 	lea    0xe4ae(%rip),%rax        # 27640 <blktrans_xfer_desc>
   19192:	48 89 45 40          	mov    %rax,0x40(%rbp)
   19196:	48 89 45 48          	mov    %rax,0x48(%rbp)
   1919a:	48 8d 05 2f e5 00 00 	lea    0xe52f(%rip),%rax        # 276d0 <blktrans_xferbuf_operations>
   191a1:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   191a5:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   191a9:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   191ad:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   191b1:	48 89 45 68          	mov    %rax,0x68(%rbp)
   191b5:	4c 89 6d 70          	mov    %r13,0x70(%rbp)
   191b9:	4d 85 ed             	test   %r13,%r13
   191bc:	74 06                	je     191c4 <block_translate+0x85>
   191be:	48 89 5d 58          	mov    %rbx,0x58(%rbp)
   191c2:	eb 04                	jmp    191c8 <block_translate+0x89>
   191c4:	48 89 5d 78          	mov    %rbx,0x78(%rbp)
   191c8:	49 8b 34 24          	mov    (%r12),%rsi
   191cc:	e8 70 06 ff ff       	call   9841 <intf_plug_plug>
   191d1:	4c 89 e6             	mov    %r12,%rsi
   191d4:	4c 89 f7             	mov    %r14,%rdi
   191d7:	e8 65 06 ff ff       	call   9841 <intf_plug_plug>
   191dc:	48 89 ef             	mov    %rbp,%rdi
   191df:	e8 36 6d ff ff       	call   ff1a <ref_decrement>
   191e4:	31 c0                	xor    %eax,%eax
   191e6:	5b                   	pop    %rbx
   191e7:	5d                   	pop    %rbp
   191e8:	41 5c                	pop    %r12
   191ea:	41 5d                	pop    %r13
   191ec:	41 5e                	pop    %r14
   191ee:	c3                   	ret    

00000000000191ef <chap_init>:
   191ef:	f3 0f 1e fa          	endbr64 
   191f3:	55                   	push   %rbp
   191f4:	48 89 fd             	mov    %rdi,%rbp
   191f7:	53                   	push   %rbx
   191f8:	48 89 f3             	mov    %rsi,%rbx
   191fb:	51                   	push   %rcx
   191fc:	48 8b 7e 18          	mov    0x18(%rsi),%rdi
   19200:	48 03 7e 08          	add    0x8(%rsi),%rdi
   19204:	e8 0c 35 ff ff       	call   c715 <malloc>
   19209:	48 85 c0             	test   %rax,%rax
   1920c:	75 07                	jne    19215 <chap_init+0x26>
   1920e:	b8 77 1f fe ce       	mov    $0xcefe1f77,%eax
   19213:	eb 23                	jmp    19238 <chap_init+0x49>
   19215:	48 89 c7             	mov    %rax,%rdi
   19218:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1921c:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19220:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
   19224:	48 01 f8             	add    %rdi,%rax
   19227:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1922b:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1922f:	48 89 45 18          	mov    %rax,0x18(%rbp)
   19233:	ff 53 20             	call   *0x20(%rbx)
   19236:	31 c0                	xor    %eax,%eax
   19238:	5a                   	pop    %rdx
   19239:	5b                   	pop    %rbx
   1923a:	5d                   	pop    %rbp
   1923b:	c3                   	ret    

000000000001923c <chap_update>:
   1923c:	f3 0f 1e fa          	endbr64 
   19240:	48 8b 07             	mov    (%rdi),%rax
   19243:	48 85 c0             	test   %rax,%rax
   19246:	74 07                	je     1924f <chap_update+0x13>
   19248:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1924c:	ff 60 28             	jmp    *0x28(%rax)
   1924f:	c3                   	ret    

0000000000019250 <chap_respond>:
   19250:	f3 0f 1e fa          	endbr64 
   19254:	48 8b 07             	mov    (%rdi),%rax
   19257:	48 85 c0             	test   %rax,%rax
   1925a:	74 0b                	je     19267 <chap_respond+0x17>
   1925c:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   19260:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   19264:	ff 60 30             	jmp    *0x30(%rax)
   19267:	c3                   	ret    

0000000000019268 <chap_finish>:
   19268:	f3 0f 1e fa          	endbr64 
   1926c:	53                   	push   %rbx
   1926d:	48 89 fb             	mov    %rdi,%rbx
   19270:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   19274:	e8 a9 34 ff ff       	call   c722 <free>
   19279:	48 89 df             	mov    %rbx,%rdi
   1927c:	b9 20 00 00 00       	mov    $0x20,%ecx
   19281:	31 c0                	xor    %eax,%eax
   19283:	f3 aa                	rep stos %al,%es:(%rdi)
   19285:	5b                   	pop    %rbx
   19286:	c3                   	ret    

0000000000019287 <wclrtoeol>:
   19287:	f3 0f 1e fa          	endbr64 
   1928b:	41 55                	push   %r13
   1928d:	41 54                	push   %r12
   1928f:	48 83 ec 18          	sub    $0x18,%rsp
   19293:	44 8b 67 18          	mov    0x18(%rdi),%r12d
   19297:	44 8b 6f 14          	mov    0x14(%rdi),%r13d
   1929b:	31 d2                	xor    %edx,%edx
   1929d:	be 20 00 00 00       	mov    $0x20,%esi
   192a2:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   192a7:	e8 c0 42 ff ff       	call   d56c <_wputc>
   192ac:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   192b1:	44 39 67 18          	cmp    %r12d,0x18(%rdi)
   192b5:	74 e4                	je     1929b <wclrtoeol+0x14>
   192b7:	44 89 ea             	mov    %r13d,%edx
   192ba:	44 89 e6             	mov    %r12d,%esi
   192bd:	e8 f9 42 ff ff       	call   d5bb <wmove>
   192c2:	48 83 c4 18          	add    $0x18,%rsp
   192c6:	31 c0                	xor    %eax,%eax
   192c8:	41 5c                	pop    %r12
   192ca:	41 5d                	pop    %r13
   192cc:	c3                   	ret    

00000000000192cd <erase>:
   192cd:	f3 0f 1e fa          	endbr64 
   192d1:	50                   	push   %rax
   192d2:	48 8b 05 87 d6 00 00 	mov    0xd687(%rip),%rax        # 26960 <_stdscr>
   192d9:	8b 35 89 d6 00 00    	mov    0xd689(%rip),%esi        # 26968 <_stdscr+0x8>
   192df:	48 89 c7             	mov    %rax,%rdi
   192e2:	ff 50 20             	call   *0x20(%rax)
   192e5:	31 c0                	xor    %eax,%eax
   192e7:	5a                   	pop    %rdx
   192e8:	c3                   	ret    

00000000000192e9 <has_input>:
   192e9:	41 54                	push   %r12
   192eb:	4c 8d 25 16 f5 00 00 	lea    0xf516(%rip),%r12        # 28808 <efi_console>
   192f2:	53                   	push   %rbx
   192f3:	48 8d 1d 3e f5 00 00 	lea    0xf53e(%rip),%rbx        # 28838 <__dhcp_feature_version>
   192fa:	51                   	push   %rcx
   192fb:	49 39 dc             	cmp    %rbx,%r12
   192fe:	73 1f                	jae    1931f <has_input+0x36>
   19300:	41 f6 04 24 01       	testb  $0x1,(%r12)
   19305:	74 06                	je     1930d <has_input+0x24>
   19307:	49 83 c4 30          	add    $0x30,%r12
   1930b:	eb ee                	jmp    192fb <has_input+0x12>
   1930d:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   19312:	48 85 c0             	test   %rax,%rax
   19315:	74 f0                	je     19307 <has_input+0x1e>
   19317:	ff d0                	call   *%rax
   19319:	85 c0                	test   %eax,%eax
   1931b:	74 ea                	je     19307 <has_input+0x1e>
   1931d:	eb 03                	jmp    19322 <has_input+0x39>
   1931f:	45 31 e4             	xor    %r12d,%r12d
   19322:	4c 89 e0             	mov    %r12,%rax
   19325:	5a                   	pop    %rdx
   19326:	5b                   	pop    %rbx
   19327:	41 5c                	pop    %r12
   19329:	c3                   	ret    

000000000001932a <putchar>:
   1932a:	f3 0f 1e fa          	endbr64 
   1932e:	ba 02 04 00 00       	mov    $0x402,%edx
   19333:	89 f8                	mov    %edi,%eax
   19335:	ee                   	out    %al,(%dx)
   19336:	c3                   	ret    

0000000000019337 <getchar>:
   19337:	f3 0f 1e fa          	endbr64 
   1933b:	51                   	push   %rcx
   1933c:	e8 a8 ff ff ff       	call   192e9 <has_input>
   19341:	48 85 c0             	test   %rax,%rax
   19344:	74 17                	je     1935d <getchar+0x26>
   19346:	48 8b 40 10          	mov    0x10(%rax),%rax
   1934a:	48 85 c0             	test   %rax,%rax
   1934d:	74 0e                	je     1935d <getchar+0x26>
   1934f:	ff d0                	call   *%rax
   19351:	83 f8 0d             	cmp    $0xd,%eax
   19354:	75 13                	jne    19369 <getchar+0x32>
   19356:	b8 0a 00 00 00       	mov    $0xa,%eax
   1935b:	eb 0c                	jmp    19369 <getchar+0x32>
   1935d:	e8 11 46 00 00       	call   1d973 <cpu_nap>
   19362:	e8 21 67 ff ff       	call   fa88 <step>
   19367:	eb d3                	jmp    1933c <getchar+0x5>
   19369:	5a                   	pop    %rdx
   1936a:	c3                   	ret    

000000000001936b <iskey>:
   1936b:	f3 0f 1e fa          	endbr64 
   1936f:	50                   	push   %rax
   19370:	e8 74 ff ff ff       	call   192e9 <has_input>
   19375:	5a                   	pop    %rdx
   19376:	48 85 c0             	test   %rax,%rax
   19379:	0f 95 c0             	setne  %al
   1937c:	0f b6 c0             	movzbl %al,%eax
   1937f:	c3                   	ret    

0000000000019380 <console_configure>:
   19380:	f3 0f 1e fa          	endbr64 
   19384:	41 55                	push   %r13
   19386:	4c 8d 2d ab f4 00 00 	lea    0xf4ab(%rip),%r13        # 28838 <__dhcp_feature_version>
   1938d:	41 54                	push   %r12
   1938f:	55                   	push   %rbp
   19390:	48 89 fd             	mov    %rdi,%rbp
   19393:	53                   	push   %rbx
   19394:	48 8d 1d 6d f4 00 00 	lea    0xf46d(%rip),%rbx        # 28808 <efi_console>
   1939b:	51                   	push   %rcx
   1939c:	c7 05 ee b2 00 00 50 	movl   $0x50,0xb2ee(%rip)        # 24694 <console_width>
   193a3:	00 00 00 
   193a6:	c7 05 e0 b2 00 00 19 	movl   $0x19,0xb2e0(%rip)        # 24690 <console_height>
   193ad:	00 00 00 
   193b0:	4c 39 eb             	cmp    %r13,%rbx
   193b3:	73 29                	jae    193de <console_configure+0x5e>
   193b5:	48 8b 43 20          	mov    0x20(%rbx),%rax
   193b9:	48 85 c0             	test   %rax,%rax
   193bc:	74 1a                	je     193d8 <console_configure+0x58>
   193be:	48 89 ef             	mov    %rbp,%rdi
   193c1:	ff d0                	call   *%rax
   193c3:	41 89 c4             	mov    %eax,%r12d
   193c6:	85 c0                	test   %eax,%eax
   193c8:	74 0e                	je     193d8 <console_configure+0x58>
   193ca:	48 85 ed             	test   %rbp,%rbp
   193cd:	74 12                	je     193e1 <console_configure+0x61>
   193cf:	31 ff                	xor    %edi,%edi
   193d1:	e8 aa ff ff ff       	call   19380 <console_configure>
   193d6:	eb 09                	jmp    193e1 <console_configure+0x61>
   193d8:	48 83 c3 30          	add    $0x30,%rbx
   193dc:	eb d2                	jmp    193b0 <console_configure+0x30>
   193de:	45 31 e4             	xor    %r12d,%r12d
   193e1:	5a                   	pop    %rdx
   193e2:	44 89 e0             	mov    %r12d,%eax
   193e5:	5b                   	pop    %rbx
   193e6:	5d                   	pop    %rbp
   193e7:	41 5c                	pop    %r12
   193e9:	41 5d                	pop    %r13
   193eb:	c3                   	ret    

00000000000193ec <cpuid_supported>:
   193ec:	f3 0f 1e fa          	endbr64 
   193f0:	9c                   	pushf  
   193f1:	9c                   	pushf  
   193f2:	58                   	pop    %rax
   193f3:	48 89 c2             	mov    %rax,%rdx
   193f6:	48 81 f2 00 00 20 00 	xor    $0x200000,%rdx
   193fd:	52                   	push   %rdx
   193fe:	9d                   	popf   
   193ff:	9c                   	pushf  
   19400:	5a                   	pop    %rdx
   19401:	9d                   	popf   
   19402:	48 31 d0             	xor    %rdx,%rax
   19405:	0f ba e0 15          	bt     $0x15,%eax
   19409:	73 20                	jae    1942b <cpuid_supported+0x3f>
   1940b:	89 f8                	mov    %edi,%eax
   1940d:	31 c9                	xor    %ecx,%ecx
   1940f:	53                   	push   %rbx
   19410:	25 00 00 00 80       	and    $0x80000000,%eax
   19415:	0f a2                	cpuid  
   19417:	89 fa                	mov    %edi,%edx
   19419:	31 c2                	xor    %eax,%edx
   1941b:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
   19421:	74 0e                	je     19431 <cpuid_supported+0x45>
   19423:	41 b8 7e df 6e e3    	mov    $0xe36edf7e,%r8d
   19429:	eb 13                	jmp    1943e <cpuid_supported+0x52>
   1942b:	b8 7d df 6e c3       	mov    $0xc36edf7d,%eax
   19430:	c3                   	ret    
   19431:	45 31 c0             	xor    %r8d,%r8d
   19434:	39 c7                	cmp    %eax,%edi
   19436:	76 06                	jbe    1943e <cpuid_supported+0x52>
   19438:	41 b8 7d df 6e c2    	mov    $0xc26edf7d,%r8d
   1943e:	44 89 c0             	mov    %r8d,%eax
   19441:	5b                   	pop    %rbx
   19442:	c3                   	ret    

0000000000019443 <x86_features>:
   19443:	f3 0f 1e fa          	endbr64 
   19447:	53                   	push   %rbx
   19448:	48 89 fe             	mov    %rdi,%rsi
   1944b:	31 c0                	xor    %eax,%eax
   1944d:	ab                   	stos   %eax,%es:(%rdi)
   1944e:	ab                   	stos   %eax,%es:(%rdi)
   1944f:	ab                   	stos   %eax,%es:(%rdi)
   19450:	ab                   	stos   %eax,%es:(%rdi)
   19451:	bf 01 00 00 00       	mov    $0x1,%edi
   19456:	e8 91 ff ff ff       	call   193ec <cpuid_supported>
   1945b:	85 c0                	test   %eax,%eax
   1945d:	75 0e                	jne    1946d <x86_features+0x2a>
   1945f:	89 c1                	mov    %eax,%ecx
   19461:	b8 01 00 00 00       	mov    $0x1,%eax
   19466:	0f a2                	cpuid  
   19468:	89 0e                	mov    %ecx,(%rsi)
   1946a:	89 56 04             	mov    %edx,0x4(%rsi)
   1946d:	bf 01 00 00 80       	mov    $0x80000001,%edi
   19472:	e8 75 ff ff ff       	call   193ec <cpuid_supported>
   19477:	89 c1                	mov    %eax,%ecx
   19479:	85 c0                	test   %eax,%eax
   1947b:	75 0d                	jne    1948a <x86_features+0x47>
   1947d:	b8 01 00 00 80       	mov    $0x80000001,%eax
   19482:	0f a2                	cpuid  
   19484:	89 4e 08             	mov    %ecx,0x8(%rsi)
   19487:	89 56 0c             	mov    %edx,0xc(%rsi)
   1948a:	5b                   	pop    %rbx
   1948b:	c3                   	ret    

000000000001948c <isspace>:
   1948c:	f3 0f 1e fa          	endbr64 
   19490:	83 ff 0d             	cmp    $0xd,%edi
   19493:	7f 08                	jg     1949d <isspace+0x11>
   19495:	83 ff 08             	cmp    $0x8,%edi
   19498:	0f 9f c0             	setg   %al
   1949b:	eb 06                	jmp    194a3 <isspace+0x17>
   1949d:	83 ff 20             	cmp    $0x20,%edi
   194a0:	0f 94 c0             	sete   %al
   194a3:	0f b6 c0             	movzbl %al,%eax
   194a6:	c3                   	ret    

00000000000194a7 <churi>:
   194a7:	f3 0f 1e fa          	endbr64 
   194ab:	55                   	push   %rbp
   194ac:	48 89 fd             	mov    %rdi,%rbp
   194af:	48 85 ff             	test   %rdi,%rdi
   194b2:	74 12                	je     194c6 <churi+0x1f>
   194b4:	48 89 fe             	mov    %rdi,%rsi
   194b7:	48 8b 3d b2 0a 01 00 	mov    0x10ab2(%rip),%rdi        # 29f70 <cwuri>
   194be:	e8 4f d5 ff ff       	call   16a12 <resolve_uri>
   194c3:	48 89 c5             	mov    %rax,%rbp
   194c6:	48 8b 3d a3 0a 01 00 	mov    0x10aa3(%rip),%rdi        # 29f70 <cwuri>
   194cd:	e8 48 6a ff ff       	call   ff1a <ref_decrement>
   194d2:	48 89 2d 97 0a 01 00 	mov    %rbp,0x10a97(%rip)        # 29f70 <cwuri>
   194d9:	5d                   	pop    %rbp
   194da:	c3                   	ret    

00000000000194db <dhcp_discovery_tx>:
   194db:	f3 0f 1e fa          	endbr64 
   194df:	c7 42 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rdx)
   194e6:	31 c0                	xor    %eax,%eax
   194e8:	66 c7 42 04 00 43    	movw   $0x4300,0x4(%rdx)
   194ee:	c3                   	ret    

00000000000194ef <dhcp_proxy_tx>:
   194ef:	f3 0f 1e fa          	endbr64 
   194f3:	55                   	push   %rbp
   194f4:	48 89 fd             	mov    %rdi,%rbp
   194f7:	48 89 f7             	mov    %rsi,%rdi
   194fa:	be 36 00 00 00       	mov    $0x36,%esi
   194ff:	53                   	push   %rbx
   19500:	48 89 d3             	mov    %rdx,%rbx
   19503:	48 8d 95 94 00 00 00 	lea    0x94(%rbp),%rdx
   1950a:	51                   	push   %rcx
   1950b:	b9 04 00 00 00       	mov    $0x4,%ecx
   19510:	e8 e3 14 00 00       	call   1a9f8 <dhcppkt_store>
   19515:	85 c0                	test   %eax,%eax
   19517:	75 0f                	jne    19528 <dhcp_proxy_tx+0x39>
   19519:	8b 95 94 00 00 00    	mov    0x94(%rbp),%edx
   1951f:	66 c7 43 04 0f ab    	movw   $0xab0f,0x4(%rbx)
   19525:	89 53 08             	mov    %edx,0x8(%rbx)
   19528:	5a                   	pop    %rdx
   19529:	5b                   	pop    %rbx
   1952a:	5d                   	pop    %rbp
   1952b:	c3                   	ret    

000000000001952c <dhcp_pxebs_tx>:
   1952c:	f3 0f 1e fa          	endbr64 
   19530:	48 83 ec 18          	sub    $0x18,%rsp
   19534:	48 89 f8             	mov    %rdi,%rax
   19537:	48 89 f7             	mov    %rsi,%rdi
   1953a:	be 0f ab ff ff       	mov    $0xffffab0f,%esi
   1953f:	48 8b 0d 0a 0b 01 00 	mov    0x10b0a(%rip),%rcx        # 2a050 <__stack_chk_guard>
   19546:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1954b:	31 c9                	xor    %ecx,%ecx
   1954d:	48 8b 88 a8 00 00 00 	mov    0xa8(%rax),%rcx
   19554:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
   1955b:	8b 09                	mov    (%rcx),%ecx
   1955d:	89 4a 08             	mov    %ecx,0x8(%rdx)
   19560:	ff c1                	inc    %ecx
   19562:	b9 00 43 00 00       	mov    $0x4300,%ecx
   19567:	0f 45 ce             	cmovne %esi,%ecx
   1956a:	be 47 2b 00 00       	mov    $0x2b47,%esi
   1956f:	66 89 4a 04          	mov    %cx,0x4(%rdx)
   19573:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   19579:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   1957e:	b9 04 00 00 00       	mov    $0x4,%ecx
   19583:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
   19588:	e8 6b 14 00 00       	call   1a9f8 <dhcppkt_store>
   1958d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   19592:	48 2b 15 b7 0a 01 00 	sub    0x10ab7(%rip),%rdx        # 2a050 <__stack_chk_guard>
   19599:	74 05                	je     195a0 <dhcp_pxebs_tx+0x74>
   1959b:	e8 c0 94 fe ff       	call   2a60 <__stack_chk_fail>
   195a0:	48 83 c4 18          	add    $0x18,%rsp
   195a4:	c3                   	ret    

00000000000195a5 <dhcp_free>:
   195a5:	f3 0f 1e fa          	endbr64 
   195a9:	55                   	push   %rbp
   195aa:	48 89 fd             	mov    %rdi,%rbp
   195ad:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
   195b1:	e8 64 69 ff ff       	call   ff1a <ref_decrement>
   195b6:	48 8b bd 98 00 00 00 	mov    0x98(%rbp),%rdi
   195bd:	e8 58 69 ff ff       	call   ff1a <ref_decrement>
   195c2:	48 89 ef             	mov    %rbp,%rdi
   195c5:	5d                   	pop    %rbp
   195c6:	e9 57 31 ff ff       	jmp    c722 <free>

00000000000195cb <dhcp_has_pxeopts>:
   195cb:	48 83 ec 18          	sub    $0x18,%rsp
   195cf:	48 8b 47 10          	mov    0x10(%rdi),%rax
   195d3:	83 78 14 00          	cmpl   $0x0,0x14(%rax)
   195d7:	75 18                	jne    195f1 <dhcp_has_pxeopts+0x26>
   195d9:	31 c9                	xor    %ecx,%ecx
   195db:	31 d2                	xor    %edx,%edx
   195dd:	be 09 2b 00 00       	mov    $0x2b09,%esi
   195e2:	e8 ac 14 00 00       	call   1aa93 <dhcppkt_fetch>
   195e7:	85 c0                	test   %eax,%eax
   195e9:	0f 9f c0             	setg   %al
   195ec:	0f b6 c0             	movzbl %al,%eax
   195ef:	eb 21                	jmp    19612 <dhcp_has_pxeopts+0x47>
   195f1:	31 c9                	xor    %ecx,%ecx
   195f3:	31 d2                	xor    %edx,%edx
   195f5:	be 43 00 00 00       	mov    $0x43,%esi
   195fa:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   195ff:	e8 8f 14 00 00       	call   1aa93 <dhcppkt_fetch>
   19604:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19609:	85 c0                	test   %eax,%eax
   1960b:	7e cc                	jle    195d9 <dhcp_has_pxeopts+0xe>
   1960d:	b8 01 00 00 00       	mov    $0x1,%eax
   19612:	48 83 c4 18          	add    $0x18,%rsp
   19616:	c3                   	ret    

0000000000019617 <dhcp_deliver>:
   19617:	f3 0f 1e fa          	endbr64 
   1961b:	41 57                	push   %r15
   1961d:	41 56                	push   %r14
   1961f:	41 55                	push   %r13
   19621:	49 89 f5             	mov    %rsi,%r13
   19624:	41 54                	push   %r12
   19626:	55                   	push   %rbp
   19627:	53                   	push   %rbx
   19628:	48 83 ec 28          	sub    $0x28,%rsp
   1962c:	4c 8b 67 50          	mov    0x50(%rdi),%r12
   19630:	4c 8b 7a 10          	mov    0x10(%rdx),%r15
   19634:	48 8b 05 15 0a 01 00 	mov    0x10a15(%rip),%rax        # 2a050 <__stack_chk_guard>
   1963b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19640:	31 c0                	xor    %eax,%eax
   19642:	c6 44 24 13 00       	movb   $0x0,0x13(%rsp)
   19647:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   1964e:	00 
   1964f:	49 8b 5c 24 50       	mov    0x50(%r12),%rbx
   19654:	4d 85 ff             	test   %r15,%r15
   19657:	75 0b                	jne    19664 <dhcp_deliver+0x4d>
   19659:	41 bc 7e 9f ef e3    	mov    $0xe3ef9f7e,%r12d
   1965f:	e9 07 01 00 00       	jmp    1976b <dhcp_deliver+0x154>
   19664:	48 8b 56 20          	mov    0x20(%rsi),%rdx
   19668:	48 2b 56 18          	sub    0x18(%rsi),%rdx
   1966c:	49 89 fe             	mov    %rdi,%r14
   1966f:	48 8d ba 88 00 00 00 	lea    0x88(%rdx),%rdi
   19676:	48 89 14 24          	mov    %rdx,(%rsp)
   1967a:	e8 b7 30 ff ff       	call   c736 <zalloc>
   1967f:	48 8b 14 24          	mov    (%rsp),%rdx
   19683:	48 85 c0             	test   %rax,%rax
   19686:	48 89 c5             	mov    %rax,%rbp
   19689:	75 0b                	jne    19696 <dhcp_deliver+0x7f>
   1968b:	41 bc 77 9f ef ce    	mov    $0xceef9f77,%r12d
   19691:	e9 d5 00 00 00       	jmp    1976b <dhcp_deliver+0x154>
   19696:	4c 8d 80 88 00 00 00 	lea    0x88(%rax),%r8
   1969d:	49 8b 75 18          	mov    0x18(%r13),%rsi
   196a1:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   196a6:	4c 89 c7             	mov    %r8,%rdi
   196a9:	4c 89 04 24          	mov    %r8,(%rsp)
   196ad:	e8 37 dd ff ff       	call   173e9 <__memcpy>
   196b2:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   196b7:	48 8b 34 24          	mov    (%rsp),%rsi
   196bb:	48 89 ef             	mov    %rbp,%rdi
   196be:	e8 7b 14 00 00       	call   1ab3e <dhcppkt_init>
   196c3:	48 8d 54 24 13       	lea    0x13(%rsp),%rdx
   196c8:	b9 01 00 00 00       	mov    $0x1,%ecx
   196cd:	48 89 ef             	mov    %rbp,%rdi
   196d0:	be 35 00 00 00       	mov    $0x35,%esi
   196d5:	e8 b9 13 00 00       	call   1aa93 <dhcppkt_fetch>
   196da:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
   196df:	b9 04 00 00 00       	mov    $0x4,%ecx
   196e4:	48 89 ef             	mov    %rbp,%rdi
   196e7:	be 36 00 00 00       	mov    $0x36,%esi
   196ec:	e8 a2 13 00 00       	call   1aa93 <dhcppkt_fetch>
   196f1:	44 8b 4c 24 14       	mov    0x14(%rsp),%r9d
   196f6:	45 85 c9             	test   %r9d,%r9d
   196f9:	75 11                	jne    1970c <dhcp_deliver+0xf5>
   196fb:	48 8b 45 10          	mov    0x10(%rbp),%rax
   196ff:	44 8b 48 14          	mov    0x14(%rax),%r9d
   19703:	45 85 c9             	test   %r9d,%r9d
   19706:	75 04                	jne    1970c <dhcp_deliver+0xf5>
   19708:	45 8b 4f 08          	mov    0x8(%r15),%r9d
   1970c:	41 8b 86 80 00 00 00 	mov    0x80(%r14),%eax
   19713:	39 85 8c 00 00 00    	cmp    %eax,0x8c(%rbp)
   19719:	74 02                	je     1971d <dhcp_deliver+0x106>
   1971b:	eb 24                	jmp    19741 <dhcp_deliver+0x12a>
   1971d:	0f b6 53 43          	movzbl 0x43(%rbx),%edx
   19721:	49 8d 74 24 60       	lea    0x60(%r12),%rsi
   19726:	48 8d bd a4 00 00 00 	lea    0xa4(%rbp),%rdi
   1972d:	44 89 0c 24          	mov    %r9d,(%rsp)
   19731:	e8 fa a1 ff ff       	call   13930 <memcmp>
   19736:	44 8b 0c 24          	mov    (%rsp),%r9d
   1973a:	85 c0                	test   %eax,%eax
   1973c:	41 89 c4             	mov    %eax,%r12d
   1973f:	74 08                	je     19749 <dhcp_deliver+0x132>
   19741:	41 bc 7e 9f ef e3    	mov    $0xe3ef9f7e,%r12d
   19747:	eb 1a                	jmp    19763 <dhcp_deliver+0x14c>
   19749:	49 8b 46 78          	mov    0x78(%r14),%rax
   1974d:	0f b6 4c 24 13       	movzbl 0x13(%rsp),%ecx
   19752:	4c 89 fa             	mov    %r15,%rdx
   19755:	48 89 ee             	mov    %rbp,%rsi
   19758:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   1975d:	4c 89 f7             	mov    %r14,%rdi
   19760:	ff 50 10             	call   *0x10(%rax)
   19763:	48 89 ef             	mov    %rbp,%rdi
   19766:	e8 af 67 ff ff       	call   ff1a <ref_decrement>
   1976b:	4c 89 ef             	mov    %r13,%rdi
   1976e:	e8 f3 05 ff ff       	call   9d66 <free_iob>
   19773:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   19778:	48 2b 05 d1 08 01 00 	sub    0x108d1(%rip),%rax        # 2a050 <__stack_chk_guard>
   1977f:	74 05                	je     19786 <dhcp_deliver+0x16f>
   19781:	e8 da 92 fe ff       	call   2a60 <__stack_chk_fail>
   19786:	48 83 c4 28          	add    $0x28,%rsp
   1978a:	44 89 e0             	mov    %r12d,%eax
   1978d:	5b                   	pop    %rbx
   1978e:	5d                   	pop    %rbp
   1978f:	41 5c                	pop    %r12
   19791:	41 5d                	pop    %r13
   19793:	41 5e                	pop    %r14
   19795:	41 5f                	pop    %r15
   19797:	c3                   	ret    

0000000000019798 <dhcp_set_state>:
   19798:	41 54                	push   %r12
   1979a:	55                   	push   %rbp
   1979b:	48 89 f5             	mov    %rsi,%rbp
   1979e:	53                   	push   %rbx
   1979f:	48 89 fb             	mov    %rdi,%rbx
   197a2:	48 89 77 78          	mov    %rsi,0x78(%rdi)
   197a6:	4c 8d a3 b8 00 00 00 	lea    0xb8(%rbx),%r12
   197ad:	e8 fb c5 ff ff       	call   15dad <currticks>
   197b2:	4c 89 e7             	mov    %r12,%rdi
   197b5:	48 89 83 10 01 00 00 	mov    %rax,0x110(%rbx)
   197bc:	e8 eb 6b ff ff       	call   103ac <stop_timer>
   197c1:	0f b6 55 21          	movzbl 0x21(%rbp),%edx
   197c5:	0f b6 45 22          	movzbl 0x22(%rbp),%eax
   197c9:	4c 89 e7             	mov    %r12,%rdi
   197cc:	31 f6                	xor    %esi,%esi
   197ce:	c1 e2 0a             	shl    $0xa,%edx
   197d1:	c1 e0 0a             	shl    $0xa,%eax
   197d4:	89 d1                	mov    %edx,%ecx
   197d6:	48 89 83 e0 00 00 00 	mov    %rax,0xe0(%rbx)
   197dd:	48 89 8b d8 00 00 00 	mov    %rcx,0xd8(%rbx)
   197e4:	5b                   	pop    %rbx
   197e5:	5d                   	pop    %rbp
   197e6:	41 5c                	pop    %r12
   197e8:	e9 51 6b ff ff       	jmp    1033e <start_timer_fixed>

00000000000197ed <dhcp_discovery_rx>:
   197ed:	f3 0f 1e fa          	endbr64 
   197f1:	41 57                	push   %r15
   197f3:	41 56                	push   %r14
   197f5:	49 89 d6             	mov    %rdx,%r14
   197f8:	41 55                	push   %r13
   197fa:	49 89 fd             	mov    %rdi,%r13
   197fd:	41 54                	push   %r12
   197ff:	45 89 c4             	mov    %r8d,%r12d
   19802:	55                   	push   %rbp
   19803:	44 89 cd             	mov    %r9d,%ebp
   19806:	53                   	push   %rbx
   19807:	48 89 f3             	mov    %rsi,%rbx
   1980a:	48 89 df             	mov    %rbx,%rdi
   1980d:	48 83 ec 38          	sub    $0x38,%rsp
   19811:	48 8b 05 38 08 01 00 	mov    0x10838(%rip),%rax        # 2a050 <__stack_chk_guard>
   19818:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1981d:	31 c0                	xor    %eax,%eax
   1981f:	4c 8d 4c 24 1f       	lea    0x1f(%rsp),%r9
   19824:	48 8b 46 10          	mov    0x10(%rsi),%rax
   19828:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
   1982c:	4c 89 ca             	mov    %r9,%rdx
   1982f:	b9 09 00 00 00       	mov    $0x9,%ecx
   19834:	be 3c 00 00 00       	mov    $0x3c,%esi
   19839:	c6 44 24 1d 00       	movb   $0x0,0x1d(%rsp)
   1983e:	c6 44 24 1e 00       	movb   $0x0,0x1e(%rsp)
   19843:	44 8b 78 10          	mov    0x10(%rax),%r15d
   19847:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1984c:	e8 42 12 00 00       	call   1aa93 <dhcppkt_fetch>
   19851:	45 31 c0             	xor    %r8d,%r8d
   19854:	83 f8 08             	cmp    $0x8,%eax
   19857:	7e 1f                	jle    19878 <dhcp_discovery_rx+0x8b>
   19859:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1985e:	ba 09 00 00 00       	mov    $0x9,%edx
   19863:	48 8d 3d 61 a7 00 00 	lea    0xa761(%rip),%rdi        # 23fcb <.LC0>
   1986a:	e8 24 a1 ff ff       	call   13993 <strncmp>
   1986f:	45 31 c0             	xor    %r8d,%r8d
   19872:	85 c0                	test   %eax,%eax
   19874:	41 0f 94 c0          	sete   %r8b
   19878:	48 8d 54 24 1d       	lea    0x1d(%rsp),%rdx
   1987d:	b9 01 00 00 00       	mov    $0x1,%ecx
   19882:	be 01 af 00 00       	mov    $0xaf01,%esi
   19887:	48 89 df             	mov    %rbx,%rdi
   1988a:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
   1988f:	e8 ff 11 00 00       	call   1aa93 <dhcppkt_fetch>
   19894:	48 8d 54 24 1e       	lea    0x1e(%rsp),%rdx
   19899:	b9 01 00 00 00       	mov    $0x1,%ecx
   1989e:	48 89 df             	mov    %rbx,%rdi
   198a1:	be b0 af 00 00       	mov    $0xafb0,%esi
   198a6:	e8 e8 11 00 00       	call   1aa93 <dhcppkt_fetch>
   198ab:	45 85 ff             	test   %r15d,%r15d
   198ae:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
   198b3:	74 3f                	je     198f4 <dhcp_discovery_rx+0x107>
   198b5:	66 41 81 7e 04 00 43 	cmpw   $0x4300,0x4(%r14)
   198bc:	75 36                	jne    198f4 <dhcp_discovery_rx+0x107>
   198be:	f6 44 24 04 fd       	testb  $0xfd,0x4(%rsp)
   198c3:	75 2f                	jne    198f4 <dhcp_discovery_rx+0x107>
   198c5:	0f be 44 24 1d       	movsbl 0x1d(%rsp),%eax
   198ca:	41 3b 85 8c 00 00 00 	cmp    0x8c(%r13),%eax
   198d1:	7c 21                	jl     198f4 <dhcp_discovery_rx+0x107>
   198d3:	41 89 85 8c 00 00 00 	mov    %eax,0x8c(%r13)
   198da:	0f b6 44 24 1e       	movzbl 0x1e(%rsp),%eax
   198df:	45 89 bd 84 00 00 00 	mov    %r15d,0x84(%r13)
   198e6:	45 89 a5 88 00 00 00 	mov    %r12d,0x88(%r13)
   198ed:	41 89 85 90 00 00 00 	mov    %eax,0x90(%r13)
   198f4:	85 ed                	test   %ebp,%ebp
   198f6:	74 41                	je     19939 <dhcp_discovery_rx+0x14c>
   198f8:	45 85 c0             	test   %r8d,%r8d
   198fb:	74 3c                	je     19939 <dhcp_discovery_rx+0x14c>
   198fd:	0f be 44 24 1d       	movsbl 0x1d(%rsp),%eax
   19902:	41 3b 85 a0 00 00 00 	cmp    0xa0(%r13),%eax
   19909:	7c 2e                	jl     19939 <dhcp_discovery_rx+0x14c>
   1990b:	49 8b bd 98 00 00 00 	mov    0x98(%r13),%rdi
   19912:	e8 03 66 ff ff       	call   ff1a <ref_decrement>
   19917:	41 89 ad 94 00 00 00 	mov    %ebp,0x94(%r13)
   1991e:	48 89 df             	mov    %rbx,%rdi
   19921:	e8 e8 65 ff ff       	call   ff0e <ref_increment>
   19926:	0f be 44 24 1d       	movsbl 0x1d(%rsp),%eax
   1992b:	49 89 9d 98 00 00 00 	mov    %rbx,0x98(%r13)
   19932:	41 89 85 a0 00 00 00 	mov    %eax,0xa0(%r13)
   19939:	41 83 bd 84 00 00 00 	cmpl   $0x0,0x84(%r13)
   19940:	00 
   19941:	74 3a                	je     1997d <dhcp_discovery_rx+0x190>
   19943:	e8 65 c4 ff ff       	call   15dad <currticks>
   19948:	41 83 bd 90 00 00 00 	cmpl   $0x0,0x90(%r13)
   1994f:	00 
   19950:	49 8b 95 10 01 00 00 	mov    0x110(%r13),%rdx
   19957:	75 15                	jne    1996e <dhcp_discovery_rx+0x181>
   19959:	49 83 bd 98 00 00 00 	cmpq   $0x0,0x98(%r13)
   19960:	00 
   19961:	75 0b                	jne    1996e <dhcp_discovery_rx+0x181>
   19963:	48 29 d0             	sub    %rdx,%rax
   19966:	48 3d 00 08 00 00    	cmp    $0x800,%rax
   1996c:	76 0f                	jbe    1997d <dhcp_discovery_rx+0x190>
   1996e:	48 8d 35 8b de 00 00 	lea    0xde8b(%rip),%rsi        # 27800 <dhcp_state_request>
   19975:	4c 89 ef             	mov    %r13,%rdi
   19978:	e8 1b fe ff ff       	call   19798 <dhcp_set_state>
   1997d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   19982:	48 2b 05 c7 06 01 00 	sub    0x106c7(%rip),%rax        # 2a050 <__stack_chk_guard>
   19989:	74 05                	je     19990 <dhcp_discovery_rx+0x1a3>
   1998b:	e8 d0 90 fe ff       	call   2a60 <__stack_chk_fail>
   19990:	48 83 c4 38          	add    $0x38,%rsp
   19994:	5b                   	pop    %rbx
   19995:	5d                   	pop    %rbp
   19996:	41 5c                	pop    %r12
   19998:	41 5d                	pop    %r13
   1999a:	41 5e                	pop    %r14
   1999c:	41 5f                	pop    %r15
   1999e:	c3                   	ret    

000000000001999f <dhcp_finished>:
   1999f:	f3 0f 1e fa          	endbr64 
   199a3:	55                   	push   %rbp
   199a4:	89 f5                	mov    %esi,%ebp
   199a6:	53                   	push   %rbx
   199a7:	48 89 fb             	mov    %rdi,%rbx
   199aa:	48 8d bf b8 00 00 00 	lea    0xb8(%rdi),%rdi
   199b1:	50                   	push   %rax
   199b2:	e8 f5 69 ff ff       	call   103ac <stop_timer>
   199b7:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   199bb:	89 ee                	mov    %ebp,%esi
   199bd:	e8 dd ff fe ff       	call   999f <intf_shutdown>
   199c2:	5a                   	pop    %rdx
   199c3:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   199c7:	89 ee                	mov    %ebp,%esi
   199c9:	5b                   	pop    %rbx
   199ca:	5d                   	pop    %rbp
   199cb:	e9 cf ff fe ff       	jmp    999f <intf_shutdown>

00000000000199d0 <start_dhcp>:
   199d0:	f3 0f 1e fa          	endbr64 
   199d4:	41 55                	push   %r13
   199d6:	49 89 fd             	mov    %rdi,%r13
   199d9:	bf 18 01 00 00       	mov    $0x118,%edi
   199de:	41 54                	push   %r12
   199e0:	49 89 f4             	mov    %rsi,%r12
   199e3:	55                   	push   %rbp
   199e4:	e8 4d 2d ff ff       	call   c736 <zalloc>
   199e9:	48 85 c0             	test   %rax,%rax
   199ec:	75 0b                	jne    199f9 <start_dhcp+0x29>
   199ee:	41 bc 77 9f ef ce    	mov    $0xceef9f77,%r12d
   199f4:	e9 d1 00 00 00       	jmp    19aca <start_dhcp+0xfa>
   199f9:	48 89 c5             	mov    %rax,%rbp
   199fc:	48 8d 05 a2 fb ff ff 	lea    -0x45e(%rip),%rax        # 195a5 <dhcp_free>
   19a03:	48 8d 15 f6 dc 00 00 	lea    0xdcf6(%rip),%rdx        # 27700 <dhcp_job_desc>
   19a0a:	4c 89 e7             	mov    %r12,%rdi
   19a0d:	48 89 45 08          	mov    %rax,0x8(%rbp)
   19a11:	48 8d 05 a8 ca 00 00 	lea    0xcaa8(%rip),%rax        # 264c0 <null_intf>
   19a18:	48 89 45 10          	mov    %rax,0x10(%rbp)
   19a1c:	48 89 45 30          	mov    %rax,0x30(%rbp)
   19a20:	48 8d 05 19 dd 00 00 	lea    0xdd19(%rip),%rax        # 27740 <dhcp_xfer_desc>
   19a27:	48 89 45 40          	mov    %rax,0x40(%rbp)
   19a2b:	48 89 45 48          	mov    %rax,0x48(%rbp)
   19a2f:	48 8d 05 e2 01 00 00 	lea    0x1e2(%rip),%rax        # 19c18 <dhcp_timer_expired>
   19a36:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   19a3a:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   19a3e:	48 89 85 f8 00 00 00 	mov    %rax,0xf8(%rbp)
   19a45:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   19a49:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   19a4d:	48 89 ad 00 01 00 00 	mov    %rbp,0x100(%rbp)
   19a54:	e8 b5 64 ff ff       	call   ff0e <ref_increment>
   19a59:	4c 89 65 50          	mov    %r12,0x50(%rbp)
   19a5d:	66 c7 45 58 01 00    	movw   $0x1,0x58(%rbp)
   19a63:	66 c7 45 5c 00 44    	movw   $0x4400,0x5c(%rbp)
   19a69:	e8 af 60 ff ff       	call   fb1d <random>
   19a6e:	8b 35 cc ab 00 00    	mov    0xabcc(%rip),%esi        # 24640 <udp_sock_dgram>
   19a74:	48 8d 4d 58          	lea    0x58(%rbp),%rcx
   19a78:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   19a7c:	89 85 80 00 00 00    	mov    %eax,0x80(%rbp)
   19a82:	48 8d 15 37 ac 00 00 	lea    0xac37(%rip),%rdx        # 246c0 <dhcp_peer>
   19a89:	89 05 11 06 01 00    	mov    %eax,0x10611(%rip)        # 2a0a0 <dhcp_last_xid>
   19a8f:	e8 02 51 ff ff       	call   eb96 <xfer_open_socket>
   19a94:	41 89 c4             	mov    %eax,%r12d
   19a97:	85 c0                	test   %eax,%eax
   19a99:	74 0c                	je     19aa7 <start_dhcp+0xd7>
   19a9b:	89 c6                	mov    %eax,%esi
   19a9d:	48 89 ef             	mov    %rbp,%rdi
   19aa0:	e8 fa fe ff ff       	call   1999f <dhcp_finished>
   19aa5:	eb 1b                	jmp    19ac2 <start_dhcp+0xf2>
   19aa7:	48 8d 35 92 dd 00 00 	lea    0xdd92(%rip),%rsi        # 27840 <dhcp_state_discover>
   19aae:	48 89 ef             	mov    %rbp,%rdi
   19ab1:	e8 e2 fc ff ff       	call   19798 <dhcp_set_state>
   19ab6:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   19aba:	4c 89 ee             	mov    %r13,%rsi
   19abd:	e8 7f fd fe ff       	call   9841 <intf_plug_plug>
   19ac2:	48 89 ef             	mov    %rbp,%rdi
   19ac5:	e8 50 64 ff ff       	call   ff1a <ref_decrement>
   19aca:	44 89 e0             	mov    %r12d,%eax
   19acd:	5d                   	pop    %rbp
   19ace:	41 5c                	pop    %r12
   19ad0:	41 5d                	pop    %r13
   19ad2:	c3                   	ret    

0000000000019ad3 <dhcp_request_rx>:
   19ad3:	f3 0f 1e fa          	endbr64 
   19ad7:	66 81 7a 04 00 43    	cmpw   $0x4300,0x4(%rdx)
   19add:	0f 85 b4 00 00 00    	jne    19b97 <dhcp_request_rx+0xc4>
   19ae3:	55                   	push   %rbp
   19ae4:	48 89 fd             	mov    %rdi,%rbp
   19ae7:	84 c9                	test   %cl,%cl
   19ae9:	74 09                	je     19af4 <dhcp_request_rx+0x21>
   19aeb:	80 f9 05             	cmp    $0x5,%cl
   19aee:	0f 85 a1 00 00 00    	jne    19b95 <dhcp_request_rx+0xc2>
   19af4:	44 3b 85 88 00 00 00 	cmp    0x88(%rbp),%r8d
   19afb:	0f 85 94 00 00 00    	jne    19b95 <dhcp_request_rx+0xc2>
   19b01:	48 8b 46 10          	mov    0x10(%rsi),%rax
   19b05:	8b 40 10             	mov    0x10(%rax),%eax
   19b08:	3b 85 84 00 00 00    	cmp    0x84(%rbp),%eax
   19b0e:	0f 85 81 00 00 00    	jne    19b95 <dhcp_request_rx+0xc2>
   19b14:	89 45 60             	mov    %eax,0x60(%rbp)
   19b17:	48 8b 45 50          	mov    0x50(%rbp),%rax
   19b1b:	48 8d 7e 38          	lea    0x38(%rsi),%rdi
   19b1f:	48 8d 15 9e 8e 00 00 	lea    0x8e9e(%rip),%rdx        # 229c4 <.LC1>
   19b26:	4c 8d 80 68 01 00 00 	lea    0x168(%rax),%r8
   19b2d:	4c 89 c6             	mov    %r8,%rsi
   19b30:	e8 65 85 ff ff       	call   1209a <register_settings>
   19b35:	89 c6                	mov    %eax,%esi
   19b37:	85 c0                	test   %eax,%eax
   19b39:	75 51                	jne    19b8c <dhcp_request_rx+0xb9>
   19b3b:	48 8b bd 98 00 00 00 	mov    0x98(%rbp),%rdi
   19b42:	48 85 ff             	test   %rdi,%rdi
   19b45:	74 43                	je     19b8a <dhcp_request_rx+0xb7>
   19b47:	83 bd 90 00 00 00 00 	cmpl   $0x0,0x90(%rbp)
   19b4e:	75 3a                	jne    19b8a <dhcp_request_rx+0xb7>
   19b50:	e8 76 fa ff ff       	call   195cb <dhcp_has_pxeopts>
   19b55:	85 c0                	test   %eax,%eax
   19b57:	74 21                	je     19b7a <dhcp_request_rx+0xa7>
   19b59:	48 8b 85 98 00 00 00 	mov    0x98(%rbp),%rax
   19b60:	31 f6                	xor    %esi,%esi
   19b62:	48 8d 15 56 8e 00 00 	lea    0x8e56(%rip),%rdx        # 229bf <.LC1>
   19b69:	48 8d 78 38          	lea    0x38(%rax),%rdi
   19b6d:	e8 28 85 ff ff       	call   1209a <register_settings>
   19b72:	89 c6                	mov    %eax,%esi
   19b74:	85 c0                	test   %eax,%eax
   19b76:	74 12                	je     19b8a <dhcp_request_rx+0xb7>
   19b78:	eb 12                	jmp    19b8c <dhcp_request_rx+0xb9>
   19b7a:	48 89 ef             	mov    %rbp,%rdi
   19b7d:	48 8d 35 3c dc 00 00 	lea    0xdc3c(%rip),%rsi        # 277c0 <dhcp_state_proxy>
   19b84:	5d                   	pop    %rbp
   19b85:	e9 0e fc ff ff       	jmp    19798 <dhcp_set_state>
   19b8a:	31 f6                	xor    %esi,%esi
   19b8c:	48 89 ef             	mov    %rbp,%rdi
   19b8f:	5d                   	pop    %rbp
   19b90:	e9 0a fe ff ff       	jmp    1999f <dhcp_finished>
   19b95:	5d                   	pop    %rbp
   19b96:	c3                   	ret    
   19b97:	c3                   	ret    

0000000000019b98 <dhcp_proxy_rx>:
   19b98:	f3 0f 1e fa          	endbr64 
   19b9c:	41 56                	push   %r14
   19b9e:	49 89 d6             	mov    %rdx,%r14
   19ba1:	41 55                	push   %r13
   19ba3:	45 89 cd             	mov    %r9d,%r13d
   19ba6:	41 54                	push   %r12
   19ba8:	41 89 cc             	mov    %ecx,%r12d
   19bab:	55                   	push   %rbp
   19bac:	48 89 fd             	mov    %rdi,%rbp
   19baf:	48 89 f7             	mov    %rsi,%rdi
   19bb2:	53                   	push   %rbx
   19bb3:	48 89 f3             	mov    %rsi,%rbx
   19bb6:	e8 10 fa ff ff       	call   195cb <dhcp_has_pxeopts>
   19bbb:	66 41 81 7e 04 0f ab 	cmpw   $0xab0f,0x4(%r14)
   19bc2:	75 4b                	jne    19c0f <dhcp_proxy_rx+0x77>
   19bc4:	41 80 fc 02          	cmp    $0x2,%r12b
   19bc8:	74 06                	je     19bd0 <dhcp_proxy_rx+0x38>
   19bca:	41 80 fc 05          	cmp    $0x5,%r12b
   19bce:	75 3f                	jne    19c0f <dhcp_proxy_rx+0x77>
   19bd0:	44 3b ad 94 00 00 00 	cmp    0x94(%rbp),%r13d
   19bd7:	75 36                	jne    19c0f <dhcp_proxy_rx+0x77>
   19bd9:	48 89 df             	mov    %rbx,%rdi
   19bdc:	e8 ea f9 ff ff       	call   195cb <dhcp_has_pxeopts>
   19be1:	85 c0                	test   %eax,%eax
   19be3:	74 2a                	je     19c0f <dhcp_proxy_rx+0x77>
   19be5:	31 f6                	xor    %esi,%esi
   19be7:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   19beb:	48 8d 15 cd 8d 00 00 	lea    0x8dcd(%rip),%rdx        # 229bf <.LC1>
   19bf2:	e8 a3 84 ff ff       	call   1209a <register_settings>
   19bf7:	89 c6                	mov    %eax,%esi
   19bf9:	85 c0                	test   %eax,%eax
   19bfb:	75 02                	jne    19bff <dhcp_proxy_rx+0x67>
   19bfd:	31 f6                	xor    %esi,%esi
   19bff:	5b                   	pop    %rbx
   19c00:	48 89 ef             	mov    %rbp,%rdi
   19c03:	5d                   	pop    %rbp
   19c04:	41 5c                	pop    %r12
   19c06:	41 5d                	pop    %r13
   19c08:	41 5e                	pop    %r14
   19c0a:	e9 90 fd ff ff       	jmp    1999f <dhcp_finished>
   19c0f:	5b                   	pop    %rbx
   19c10:	5d                   	pop    %rbp
   19c11:	41 5c                	pop    %r12
   19c13:	41 5d                	pop    %r13
   19c15:	41 5e                	pop    %r14
   19c17:	c3                   	ret    

0000000000019c18 <dhcp_timer_expired>:
   19c18:	f3 0f 1e fa          	endbr64 
   19c1c:	4c 8d 87 48 ff ff ff 	lea    -0xb8(%rdi),%r8
   19c23:	85 f6                	test   %esi,%esi
   19c25:	74 0d                	je     19c34 <dhcp_timer_expired+0x1c>
   19c27:	be 6e 9f ef b3       	mov    $0xb3ef9f6e,%esi
   19c2c:	4c 89 c7             	mov    %r8,%rdi
   19c2f:	e9 6b fd ff ff       	jmp    1999f <dhcp_finished>
   19c34:	48 8b 47 c0          	mov    -0x40(%rdi),%rax
   19c38:	ff 47 50             	incl   0x50(%rdi)
   19c3b:	4c 89 c7             	mov    %r8,%rdi
   19c3e:	48 8b 40 18          	mov    0x18(%rax),%rax
   19c42:	ff e0                	jmp    *%rax

0000000000019c44 <dhcp_request_tx>:
   19c44:	f3 0f 1e fa          	endbr64 
   19c48:	41 54                	push   %r12
   19c4a:	49 89 f4             	mov    %rsi,%r12
   19c4d:	b9 04 00 00 00       	mov    $0x4,%ecx
   19c52:	be 36 00 00 00       	mov    $0x36,%esi
   19c57:	55                   	push   %rbp
   19c58:	48 89 d5             	mov    %rdx,%rbp
   19c5b:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   19c62:	53                   	push   %rbx
   19c63:	48 89 fb             	mov    %rdi,%rbx
   19c66:	4c 89 e7             	mov    %r12,%rdi
   19c69:	e8 8a 0d 00 00       	call   1a9f8 <dhcppkt_store>
   19c6e:	85 c0                	test   %eax,%eax
   19c70:	75 2a                	jne    19c9c <dhcp_request_tx+0x58>
   19c72:	48 8d 93 84 00 00 00 	lea    0x84(%rbx),%rdx
   19c79:	b9 04 00 00 00       	mov    $0x4,%ecx
   19c7e:	be 32 00 00 00       	mov    $0x32,%esi
   19c83:	4c 89 e7             	mov    %r12,%rdi
   19c86:	e8 6d 0d 00 00       	call   1a9f8 <dhcppkt_store>
   19c8b:	85 c0                	test   %eax,%eax
   19c8d:	75 0d                	jne    19c9c <dhcp_request_tx+0x58>
   19c8f:	c7 45 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbp)
   19c96:	66 c7 45 04 00 43    	movw   $0x4300,0x4(%rbp)
   19c9c:	5b                   	pop    %rbx
   19c9d:	5d                   	pop    %rbp
   19c9e:	41 5c                	pop    %r12
   19ca0:	c3                   	ret    

0000000000019ca1 <dhcp_pxebs_rx>:
   19ca1:	f3 0f 1e fa          	endbr64 
   19ca5:	41 56                	push   %r14
   19ca7:	49 89 d6             	mov    %rdx,%r14
   19caa:	41 55                	push   %r13
   19cac:	41 89 cd             	mov    %ecx,%r13d
   19caf:	b9 04 00 00 00       	mov    $0x4,%ecx
   19cb4:	41 54                	push   %r12
   19cb6:	45 89 cc             	mov    %r9d,%r12d
   19cb9:	55                   	push   %rbp
   19cba:	48 89 fd             	mov    %rdi,%rbp
   19cbd:	53                   	push   %rbx
   19cbe:	48 89 f3             	mov    %rsi,%rbx
   19cc1:	be 47 2b 00 00       	mov    $0x2b47,%esi
   19cc6:	48 89 df             	mov    %rbx,%rdi
   19cc9:	48 83 ec 10          	sub    $0x10,%rsp
   19ccd:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   19cd2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   19cd9:	00 
   19cda:	48 8b 05 6f 03 01 00 	mov    0x1036f(%rip),%rax        # 2a050 <__stack_chk_guard>
   19ce1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19ce6:	31 c0                	xor    %eax,%eax
   19ce8:	e8 a6 0d 00 00       	call   1aa93 <dhcppkt_fetch>
   19ced:	66 41 8b 46 04       	mov    0x4(%r14),%ax
   19cf2:	8b 54 24 04          	mov    0x4(%rsp),%edx
   19cf6:	66 3d 00 43          	cmp    $0x4300,%ax
   19cfa:	0f 95 c1             	setne  %cl
   19cfd:	66 3d 0f ab          	cmp    $0xab0f,%ax
   19d01:	0f 95 c0             	setne  %al
   19d04:	84 c1                	test   %al,%cl
   19d06:	75 4e                	jne    19d56 <dhcp_pxebs_rx+0xb5>
   19d08:	41 80 fd 05          	cmp    $0x5,%r13b
   19d0c:	75 48                	jne    19d56 <dhcp_pxebs_rx+0xb5>
   19d0e:	66 3b 95 a4 00 00 00 	cmp    0xa4(%rbp),%dx
   19d15:	75 3f                	jne    19d56 <dhcp_pxebs_rx+0xb5>
   19d17:	48 8b 85 b0 00 00 00 	mov    0xb0(%rbp),%rax
   19d1e:	48 85 c0             	test   %rax,%rax
   19d21:	74 11                	je     19d34 <dhcp_pxebs_rx+0x93>
   19d23:	8b 10                	mov    (%rax),%edx
   19d25:	85 d2                	test   %edx,%edx
   19d27:	74 2d                	je     19d56 <dhcp_pxebs_rx+0xb5>
   19d29:	44 39 e2             	cmp    %r12d,%edx
   19d2c:	74 06                	je     19d34 <dhcp_pxebs_rx+0x93>
   19d2e:	48 83 c0 04          	add    $0x4,%rax
   19d32:	eb ef                	jmp    19d23 <dhcp_pxebs_rx+0x82>
   19d34:	31 f6                	xor    %esi,%esi
   19d36:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   19d3a:	48 8d 15 b8 8a 00 00 	lea    0x8ab8(%rip),%rdx        # 227f9 <.LC2>
   19d41:	e8 54 83 ff ff       	call   1209a <register_settings>
   19d46:	89 c6                	mov    %eax,%esi
   19d48:	85 c0                	test   %eax,%eax
   19d4a:	75 02                	jne    19d4e <dhcp_pxebs_rx+0xad>
   19d4c:	31 f6                	xor    %esi,%esi
   19d4e:	48 89 ef             	mov    %rbp,%rdi
   19d51:	e8 49 fc ff ff       	call   1999f <dhcp_finished>
   19d56:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   19d5b:	48 2b 05 ee 02 01 00 	sub    0x102ee(%rip),%rax        # 2a050 <__stack_chk_guard>
   19d62:	74 05                	je     19d69 <dhcp_pxebs_rx+0xc8>
   19d64:	e8 f7 8c fe ff       	call   2a60 <__stack_chk_fail>
   19d69:	48 83 c4 10          	add    $0x10,%rsp
   19d6d:	5b                   	pop    %rbx
   19d6e:	5d                   	pop    %rbp
   19d6f:	41 5c                	pop    %r12
   19d71:	41 5d                	pop    %r13
   19d73:	41 5e                	pop    %r14
   19d75:	c3                   	ret    

0000000000019d76 <dhcp_create_packet>:
   19d76:	f3 0f 1e fa          	endbr64 
   19d7a:	41 57                	push   %r15
   19d7c:	49 8d 81 f0 00 00 00 	lea    0xf0(%r9),%rax
   19d83:	41 56                	push   %r14
   19d85:	41 55                	push   %r13
   19d87:	41 54                	push   %r12
   19d89:	55                   	push   %rbp
   19d8a:	53                   	push   %rbx
   19d8b:	48 83 ec 18          	sub    $0x18,%rsp
   19d8f:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   19d94:	48 8b 6c 24 50       	mov    0x50(%rsp),%rbp
   19d99:	88 54 24 0c          	mov    %dl,0xc(%rsp)
   19d9d:	4c 39 f8             	cmp    %r15,%rax
   19da0:	76 0a                	jbe    19dac <dhcp_create_packet+0x36>
   19da2:	b8 75 9f ef cb       	mov    $0xcbef9f75,%eax
   19da7:	e9 bd 00 00 00       	jmp    19e69 <dhcp_create_packet+0xf3>
   19dac:	49 89 fd             	mov    %rdi,%r13
   19daf:	89 ca                	mov    %ecx,%edx
   19db1:	49 89 f4             	mov    %rsi,%r12
   19db4:	4c 89 c3             	mov    %r8,%rbx
   19db7:	4d 89 ce             	mov    %r9,%r14
   19dba:	48 89 ef             	mov    %rbp,%rdi
   19dbd:	4c 89 f9             	mov    %r15,%rcx
   19dc0:	31 c0                	xor    %eax,%eax
   19dc2:	f3 aa                	rep stos %al,%es:(%rdi)
   19dc4:	89 55 04             	mov    %edx,0x4(%rbp)
   19dc7:	48 8b 56 50          	mov    0x50(%rsi),%rdx
   19dcb:	48 8d 7d 1c          	lea    0x1c(%rbp),%rdi
   19dcf:	48 8d 76 60          	lea    0x60(%rsi),%rsi
   19dd3:	48 8d 0d 06 89 00 00 	lea    0x8906(%rip),%rcx        # 226e0 <dhcp_op>
   19dda:	c7 85 ec 00 00 00 63 	movl   $0x63538263,0xec(%rbp)
   19de1:	82 53 63 
   19de4:	8b 42 40             	mov    0x40(%rdx),%eax
   19de7:	86 c4                	xchg   %al,%ah
   19de9:	88 45 01             	mov    %al,0x1(%rbp)
   19dec:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
   19df1:	8a 04 01             	mov    (%rcx,%rax,1),%al
   19df4:	88 45 00             	mov    %al,0x0(%rbp)
   19df7:	0f b6 52 43          	movzbl 0x43(%rdx),%edx
   19dfb:	88 55 02             	mov    %dl,0x2(%rbp)
   19dfe:	e8 e6 d5 ff ff       	call   173e9 <__memcpy>
   19e03:	48 8d bd f0 00 00 00 	lea    0xf0(%rbp),%rdi
   19e0a:	4c 89 f2             	mov    %r14,%rdx
   19e0d:	48 89 de             	mov    %rbx,%rsi
   19e10:	e8 d4 d5 ff ff       	call   173e9 <__memcpy>
   19e15:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   19e1a:	f6 40 48 01          	testb  $0x1,0x48(%rax)
   19e1e:	74 06                	je     19e26 <dhcp_create_packet+0xb0>
   19e20:	66 81 4d 0a 80 00    	orw    $0x80,0xa(%rbp)
   19e26:	4c 89 e7             	mov    %r12,%rdi
   19e29:	e8 6e 05 ff ff       	call   a39c <ipv4_has_any_addr>
   19e2e:	85 c0                	test   %eax,%eax
   19e30:	74 06                	je     19e38 <dhcp_create_packet+0xc2>
   19e32:	66 81 4d 0a 80 00    	orw    $0x80,0xa(%rbp)
   19e38:	4c 89 ef             	mov    %r13,%rdi
   19e3b:	b9 88 00 00 00       	mov    $0x88,%ecx
   19e40:	31 c0                	xor    %eax,%eax
   19e42:	f3 aa                	rep stos %al,%es:(%rdi)
   19e44:	4c 89 fa             	mov    %r15,%rdx
   19e47:	48 89 ee             	mov    %rbp,%rsi
   19e4a:	4c 89 ef             	mov    %r13,%rdi
   19e4d:	e8 ec 0c 00 00       	call   1ab3e <dhcppkt_init>
   19e52:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   19e57:	b9 01 00 00 00       	mov    $0x1,%ecx
   19e5c:	4c 89 ef             	mov    %r13,%rdi
   19e5f:	be 35 00 00 00       	mov    $0x35,%esi
   19e64:	e8 8f 0b 00 00       	call   1a9f8 <dhcppkt_store>
   19e69:	48 83 c4 18          	add    $0x18,%rsp
   19e6d:	5b                   	pop    %rbx
   19e6e:	5d                   	pop    %rbp
   19e6f:	41 5c                	pop    %r12
   19e71:	41 5d                	pop    %r13
   19e73:	41 5e                	pop    %r14
   19e75:	41 5f                	pop    %r15
   19e77:	c3                   	ret    

0000000000019e78 <dhcp_create_request>:
   19e78:	f3 0f 1e fa          	endbr64 
   19e7c:	41 55                	push   %r13
   19e7e:	0f b6 d2             	movzbl %dl,%edx
   19e81:	45 89 c5             	mov    %r8d,%r13d
   19e84:	4c 8d 05 55 a8 00 00 	lea    0xa855(%rip),%r8        # 246e0 <dhcp_request_options_data>
   19e8b:	41 54                	push   %r12
   19e8d:	55                   	push   %rbp
   19e8e:	48 89 fd             	mov    %rdi,%rbp
   19e91:	53                   	push   %rbx
   19e92:	48 89 f3             	mov    %rsi,%rbx
   19e95:	48 83 ec 48          	sub    $0x48,%rsp
   19e99:	48 8b 05 b0 01 01 00 	mov    0x101b0(%rip),%rax        # 2a050 <__stack_chk_guard>
   19ea0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19ea5:	31 c0                	xor    %eax,%eax
   19ea7:	ff 74 24 70          	push   0x70(%rsp)
   19eab:	41 51                	push   %r9
   19ead:	41 b9 52 00 00 00    	mov    $0x52,%r9d
   19eb3:	e8 be fe ff ff       	call   19d76 <dhcp_create_packet>
   19eb8:	5a                   	pop    %rdx
   19eb9:	59                   	pop    %rcx
   19eba:	41 89 c4             	mov    %eax,%r12d
   19ebd:	85 c0                	test   %eax,%eax
   19ebf:	0f 85 9a 01 00 00    	jne    1a05f <dhcp_create_request+0x1e7>
   19ec5:	48 8b 45 10          	mov    0x10(%rbp),%rax
   19ec9:	48 8d 0d 82 e9 00 00 	lea    0xe982(%rip),%rcx        # 28852 <__table_entries.2>
   19ed0:	be af 00 00 00       	mov    $0xaf,%esi
   19ed5:	48 89 ef             	mov    %rbp,%rdi
   19ed8:	48 8d 15 59 e9 00 00 	lea    0xe959(%rip),%rdx        # 28838 <__dhcp_feature_version>
   19edf:	44 89 68 0c          	mov    %r13d,0xc(%rax)
   19ee3:	48 8d 05 4e e9 00 00 	lea    0xe94e(%rip),%rax        # 28838 <__dhcp_feature_version>
   19eea:	29 c1                	sub    %eax,%ecx
   19eec:	e8 07 0b 00 00       	call   1a9f8 <dhcppkt_store>
   19ef1:	41 89 c4             	mov    %eax,%r12d
   19ef4:	85 c0                	test   %eax,%eax
   19ef6:	0f 85 63 01 00 00    	jne    1a05f <dhcp_create_request+0x1e7>
   19efc:	4c 8d 64 24 03       	lea    0x3(%rsp),%r12
   19f01:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
   19f08:	b9 05 00 00 00       	mov    $0x5,%ecx
   19f0d:	4c 89 e2             	mov    %r12,%rdx
   19f10:	48 8d 35 91 f3 00 00 	lea    0xf391(%rip),%rsi        # 292a8 <busid_setting>
   19f17:	e8 c5 7f ff ff       	call   11ee1 <fetch_raw_setting>
   19f1c:	4c 89 e2             	mov    %r12,%rdx
   19f1f:	b9 05 00 00 00       	mov    $0x5,%ecx
   19f24:	48 89 ef             	mov    %rbp,%rdi
   19f27:	be b1 af 00 00       	mov    $0xafb1,%esi
   19f2c:	e8 c7 0a 00 00       	call   1a9f8 <dhcppkt_store>
   19f31:	41 89 c4             	mov    %eax,%r12d
   19f34:	85 c0                	test   %eax,%eax
   19f36:	0f 85 23 01 00 00    	jne    1a05f <dhcp_create_request+0x1e7>
   19f3c:	48 8b 53 50          	mov    0x50(%rbx),%rdx
   19f40:	48 8d 73 60          	lea    0x60(%rbx),%rsi
   19f44:	48 8d 7c 24 24       	lea    0x24(%rsp),%rdi
   19f49:	4c 8d 6c 24 23       	lea    0x23(%rsp),%r13
   19f4e:	44 0f b6 62 43       	movzbl 0x43(%rdx),%r12d
   19f53:	8b 42 40             	mov    0x40(%rdx),%eax
   19f56:	86 c4                	xchg   %al,%ah
   19f58:	4c 89 e2             	mov    %r12,%rdx
   19f5b:	88 44 24 23          	mov    %al,0x23(%rsp)
   19f5f:	e8 85 d4 ff ff       	call   173e9 <__memcpy>
   19f64:	49 8d 4c 24 01       	lea    0x1(%r12),%rcx
   19f69:	4c 89 ea             	mov    %r13,%rdx
   19f6c:	48 89 ef             	mov    %rbp,%rdi
   19f6f:	be 3d 00 00 00       	mov    $0x3d,%esi
   19f74:	e8 7f 0a 00 00       	call   1a9f8 <dhcppkt_store>
   19f79:	41 89 c4             	mov    %eax,%r12d
   19f7c:	85 c0                	test   %eax,%eax
   19f7e:	0f 85 db 00 00 00    	jne    1a05f <dhcp_create_request+0x1e7>
   19f84:	31 ff                	xor    %edi,%edi
   19f86:	48 8d 54 24 13       	lea    0x13(%rsp),%rdx
   19f8b:	c6 44 24 12 00       	movb   $0x0,0x12(%rsp)
   19f90:	48 8d 35 f9 f6 00 00 	lea    0xf6f9(%rip),%rsi        # 29690 <uuid_setting>
   19f97:	4c 8d 6c 24 12       	lea    0x12(%rsp),%r13
   19f9c:	e8 a3 82 ff ff       	call   12244 <fetch_uuid_setting>
   19fa1:	85 c0                	test   %eax,%eax
   19fa3:	79 7f                	jns    1a024 <dhcp_create_request+0x1ac>
   19fa5:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
   19faa:	31 ff                	xor    %edi,%edi
   19fac:	48 8d 35 cd f7 00 00 	lea    0xf7cd(%rip),%rsi        # 29780 <user_class_setting>
   19fb3:	4c 89 ea             	mov    %r13,%rdx
   19fb6:	e8 ff 7e ff ff       	call   11eba <fetch_raw_setting_copy>
   19fbb:	85 c0                	test   %eax,%eax
   19fbd:	78 26                	js     19fe5 <dhcp_create_request+0x16d>
   19fbf:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   19fc4:	8b 35 ce f7 00 00    	mov    0xf7ce(%rip),%esi        # 29798 <user_class_setting+0x18>
   19fca:	48 89 ef             	mov    %rbp,%rdi
   19fcd:	48 63 c8             	movslq %eax,%rcx
   19fd0:	e8 23 0a 00 00       	call   1a9f8 <dhcppkt_store>
   19fd5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19fda:	89 c3                	mov    %eax,%ebx
   19fdc:	e8 41 27 ff ff       	call   c722 <free>
   19fe1:	85 db                	test   %ebx,%ebx
   19fe3:	75 77                	jne    1a05c <dhcp_create_request+0x1e4>
   19fe5:	31 ff                	xor    %edi,%edi
   19fe7:	4c 89 ea             	mov    %r13,%rdx
   19fea:	48 8d 35 b7 f7 00 00 	lea    0xf7b7(%rip),%rsi        # 297a8 <vendor_class_setting>
   19ff1:	e8 c4 7e ff ff       	call   11eba <fetch_raw_setting_copy>
   19ff6:	85 c0                	test   %eax,%eax
   19ff8:	78 65                	js     1a05f <dhcp_create_request+0x1e7>
   19ffa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   19fff:	8b 35 bb f7 00 00    	mov    0xf7bb(%rip),%esi        # 297c0 <vendor_class_setting+0x18>
   1a005:	48 63 c8             	movslq %eax,%rcx
   1a008:	48 89 ef             	mov    %rbp,%rdi
   1a00b:	e8 e8 09 00 00       	call   1a9f8 <dhcppkt_store>
   1a010:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a015:	89 c3                	mov    %eax,%ebx
   1a017:	e8 06 27 ff ff       	call   c722 <free>
   1a01c:	85 db                	test   %ebx,%ebx
   1a01e:	44 0f 45 e3          	cmovne %ebx,%r12d
   1a022:	eb 3b                	jmp    1a05f <dhcp_create_request+0x1e7>
   1a024:	b9 11 00 00 00       	mov    $0x11,%ecx
   1a029:	4c 89 ea             	mov    %r13,%rdx
   1a02c:	be 61 00 00 00       	mov    $0x61,%esi
   1a031:	48 89 ef             	mov    %rbp,%rdi
   1a034:	8b 44 24 13          	mov    0x13(%rsp),%eax
   1a038:	66 c1 4c 24 17 08    	rorw   $0x8,0x17(%rsp)
   1a03e:	0f c8                	bswap  %eax
   1a040:	66 c1 4c 24 19 08    	rorw   $0x8,0x19(%rsp)
   1a046:	89 44 24 13          	mov    %eax,0x13(%rsp)
   1a04a:	e8 a9 09 00 00       	call   1a9f8 <dhcppkt_store>
   1a04f:	85 c0                	test   %eax,%eax
   1a051:	0f 84 4e ff ff ff    	je     19fa5 <dhcp_create_request+0x12d>
   1a057:	41 89 c4             	mov    %eax,%r12d
   1a05a:	eb 03                	jmp    1a05f <dhcp_create_request+0x1e7>
   1a05c:	41 89 dc             	mov    %ebx,%r12d
   1a05f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1a064:	48 2b 05 e5 ff 00 00 	sub    0xffe5(%rip),%rax        # 2a050 <__stack_chk_guard>
   1a06b:	74 05                	je     1a072 <dhcp_create_request+0x1fa>
   1a06d:	e8 ee 89 fe ff       	call   2a60 <__stack_chk_fail>
   1a072:	48 83 c4 48          	add    $0x48,%rsp
   1a076:	44 89 e0             	mov    %r12d,%eax
   1a079:	5b                   	pop    %rbx
   1a07a:	5d                   	pop    %rbp
   1a07b:	41 5c                	pop    %r12
   1a07d:	41 5d                	pop    %r13
   1a07f:	c3                   	ret    

000000000001a080 <dhcp_tx.isra.0>:
   1a080:	41 57                	push   %r15
   1a082:	41 56                	push   %r14
   1a084:	4c 8d 35 15 a6 00 00 	lea    0xa615(%rip),%r14        # 246a0 <peer.0>
   1a08b:	41 55                	push   %r13
   1a08d:	41 54                	push   %r12
   1a08f:	55                   	push   %rbp
   1a090:	48 89 fd             	mov    %rdi,%rbp
   1a093:	4c 8d 6d 30          	lea    0x30(%rbp),%r13
   1a097:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1a09e:	48 8b 05 ab ff 00 00 	mov    0xffab(%rip),%rax        # 2a050 <__stack_chk_guard>
   1a0a5:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1a0ac:	00 
   1a0ad:	31 c0                	xor    %eax,%eax
   1a0af:	48 8d 47 58          	lea    0x58(%rdi),%rax
   1a0b3:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
   1a0ba:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   1a0c1:	00 00 
   1a0c3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a0c8:	48 8b 47 98          	mov    -0x68(%rdi),%rax
   1a0cc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1a0d3:	00 00 
   1a0d5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1a0da:	48 8b 47 c0          	mov    -0x40(%rdi),%rax
   1a0de:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   1a0e3:	44 8a 78 20          	mov    0x20(%rax),%r15b
   1a0e7:	e8 92 62 ff ff       	call   1037e <start_timer>
   1a0ec:	be 28 02 00 00       	mov    $0x228,%esi
   1a0f1:	4c 89 ef             	mov    %r13,%rdi
   1a0f4:	e8 7e d5 ff ff       	call   17677 <xfer_alloc_iob>
   1a0f9:	48 85 c0             	test   %rax,%rax
   1a0fc:	75 05                	jne    1a103 <dhcp_tx.isra.0+0x83>
   1a0fe:	e9 aa 00 00 00       	jmp    1a1ad <dhcp_tx.isra.0+0x12d>
   1a103:	49 89 c4             	mov    %rax,%r12
   1a106:	4c 8b 48 18          	mov    0x18(%rax),%r9
   1a10a:	41 0f b6 d7          	movzbl %r15b,%edx
   1a10e:	4c 8d 7c 24 30       	lea    0x30(%rsp),%r15
   1a113:	8b 8d 80 00 00 00    	mov    0x80(%rbp),%ecx
   1a119:	48 8b 75 50          	mov    0x50(%rbp),%rsi
   1a11d:	50                   	push   %rax
   1a11e:	4c 89 ff             	mov    %r15,%rdi
   1a121:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   1a126:	49 2b 44 24 20       	sub    0x20(%r12),%rax
   1a12b:	50                   	push   %rax
   1a12c:	44 8b 45 60          	mov    0x60(%rbp),%r8d
   1a130:	e8 43 fd ff ff       	call   19e78 <dhcp_create_request>
   1a135:	5a                   	pop    %rdx
   1a136:	59                   	pop    %rcx
   1a137:	85 c0                	test   %eax,%eax
   1a139:	75 6a                	jne    1a1a5 <dhcp_tx.isra.0+0x125>
   1a13b:	8b 85 08 01 00 00    	mov    0x108(%rbp),%eax
   1a141:	31 d2                	xor    %edx,%edx
   1a143:	4c 89 fe             	mov    %r15,%rsi
   1a146:	48 89 ef             	mov    %rbp,%rdi
   1a149:	c1 e0 02             	shl    $0x2,%eax
   1a14c:	48 83 bd 98 00 00 00 	cmpq   $0x0,0x98(%rbp)
   1a153:	00 
   1a154:	0f 95 c2             	setne  %dl
   1a157:	09 d0                	or     %edx,%eax
   1a159:	31 d2                	xor    %edx,%edx
   1a15b:	83 bd 84 00 00 00 00 	cmpl   $0x0,0x84(%rbp)
   1a162:	0f 95 c2             	setne  %dl
   1a165:	01 d2                	add    %edx,%edx
   1a167:	09 d0                	or     %edx,%eax
   1a169:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1a16e:	86 c4                	xchg   %al,%ah
   1a170:	66 89 42 08          	mov    %ax,0x8(%rdx)
   1a174:	48 8b 45 78          	mov    0x78(%rbp),%rax
   1a178:	4c 89 f2             	mov    %r14,%rdx
   1a17b:	ff 50 08             	call   *0x8(%rax)
   1a17e:	85 c0                	test   %eax,%eax
   1a180:	75 23                	jne    1a1a5 <dhcp_tx.isra.0+0x125>
   1a182:	8b 44 24 50          	mov    0x50(%rsp),%eax
   1a186:	4c 89 e6             	mov    %r12,%rsi
   1a189:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1a18e:	4c 89 ef             	mov    %r13,%rdi
   1a191:	05 f0 00 00 00       	add    $0xf0,%eax
   1a196:	48 98                	cltq   
   1a198:	49 01 44 24 20       	add    %rax,0x20(%r12)
   1a19d:	45 31 e4             	xor    %r12d,%r12d
   1a1a0:	e8 50 d5 ff ff       	call   176f5 <xfer_deliver>
   1a1a5:	4c 89 e7             	mov    %r12,%rdi
   1a1a8:	e8 b9 fb fe ff       	call   9d66 <free_iob>
   1a1ad:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   1a1b4:	00 
   1a1b5:	48 2b 05 94 fe 00 00 	sub    0xfe94(%rip),%rax        # 2a050 <__stack_chk_guard>
   1a1bc:	74 05                	je     1a1c3 <dhcp_tx.isra.0+0x143>
   1a1be:	e8 9d 88 fe ff       	call   2a60 <__stack_chk_fail>
   1a1c3:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   1a1ca:	5d                   	pop    %rbp
   1a1cb:	41 5c                	pop    %r12
   1a1cd:	41 5d                	pop    %r13
   1a1cf:	41 5e                	pop    %r14
   1a1d1:	41 5f                	pop    %r15
   1a1d3:	c3                   	ret    

000000000001a1d4 <dhcp_pxebs_expired>:
   1a1d4:	f3 0f 1e fa          	endbr64 
   1a1d8:	48 83 ec 18          	sub    $0x18,%rsp
   1a1dc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a1e1:	e8 c7 bb ff ff       	call   15dad <currticks>
   1a1e6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a1eb:	48 2b 87 10 01 00 00 	sub    0x110(%rdi),%rax
   1a1f2:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
   1a1f8:	76 36                	jbe    1a230 <dhcp_pxebs_expired+0x5c>
   1a1fa:	48 8b 87 a8 00 00 00 	mov    0xa8(%rdi),%rax
   1a201:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1a205:	83 78 04 00          	cmpl   $0x0,0x4(%rax)
   1a209:	48 89 97 a8 00 00 00 	mov    %rdx,0xa8(%rdi)
   1a210:	74 10                	je     1a222 <dhcp_pxebs_expired+0x4e>
   1a212:	48 8d 35 67 d5 00 00 	lea    0xd567(%rip),%rsi        # 27780 <dhcp_state_pxebs>
   1a219:	48 83 c4 18          	add    $0x18,%rsp
   1a21d:	e9 76 f5 ff ff       	jmp    19798 <dhcp_set_state>
   1a222:	be 6e 9f ef b3       	mov    $0xb3ef9f6e,%esi
   1a227:	48 83 c4 18          	add    $0x18,%rsp
   1a22b:	e9 6f f7 ff ff       	jmp    1999f <dhcp_finished>
   1a230:	48 83 c4 18          	add    $0x18,%rsp
   1a234:	e9 47 fe ff ff       	jmp    1a080 <dhcp_tx.isra.0>

000000000001a239 <dhcp_proxy_expired>:
   1a239:	f3 0f 1e fa          	endbr64 
   1a23d:	48 83 ec 18          	sub    $0x18,%rsp
   1a241:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a246:	e8 62 bb ff ff       	call   15dad <currticks>
   1a24b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a250:	48 2b 87 10 01 00 00 	sub    0x110(%rdi),%rax
   1a257:	48 3d 00 08 00 00    	cmp    $0x800,%rax
   1a25d:	76 0b                	jbe    1a26a <dhcp_proxy_expired+0x31>
   1a25f:	31 f6                	xor    %esi,%esi
   1a261:	48 83 c4 18          	add    $0x18,%rsp
   1a265:	e9 35 f7 ff ff       	jmp    1999f <dhcp_finished>
   1a26a:	48 83 c4 18          	add    $0x18,%rsp
   1a26e:	e9 0d fe ff ff       	jmp    1a080 <dhcp_tx.isra.0>

000000000001a273 <dhcp_request_expired>:
   1a273:	f3 0f 1e fa          	endbr64 
   1a277:	e9 04 fe ff ff       	jmp    1a080 <dhcp_tx.isra.0>

000000000001a27c <dhcp_discovery_expired>:
   1a27c:	f3 0f 1e fa          	endbr64 
   1a280:	48 83 ec 18          	sub    $0x18,%rsp
   1a284:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a289:	e8 1f bb ff ff       	call   15dad <currticks>
   1a28e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a293:	48 8b 57 50          	mov    0x50(%rdi),%rdx
   1a297:	48 2b 87 10 01 00 00 	sub    0x110(%rdi),%rax
   1a29e:	83 ba 98 00 00 00 00 	cmpl   $0x0,0x98(%rdx)
   1a2a5:	74 2f                	je     1a2d6 <dhcp_discovery_expired+0x5a>
   1a2a7:	83 bf 08 01 00 00 3c 	cmpl   $0x3c,0x108(%rdi)
   1a2ae:	77 26                	ja     1a2d6 <dhcp_discovery_expired+0x5a>
   1a2b0:	e8 f8 ba ff ff       	call   15dad <currticks>
   1a2b5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a2ba:	be 00 04 00 00       	mov    $0x400,%esi
   1a2bf:	48 89 87 10 01 00 00 	mov    %rax,0x110(%rdi)
   1a2c6:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
   1a2cd:	48 83 c4 18          	add    $0x18,%rsp
   1a2d1:	e9 68 60 ff ff       	jmp    1033e <start_timer_fixed>
   1a2d6:	83 bf 84 00 00 00 00 	cmpl   $0x0,0x84(%rdi)
   1a2dd:	74 18                	je     1a2f7 <dhcp_discovery_expired+0x7b>
   1a2df:	48 3d 00 08 00 00    	cmp    $0x800,%rax
   1a2e5:	76 10                	jbe    1a2f7 <dhcp_discovery_expired+0x7b>
   1a2e7:	48 8d 35 12 d5 00 00 	lea    0xd512(%rip),%rsi        # 27800 <dhcp_state_request>
   1a2ee:	48 83 c4 18          	add    $0x18,%rsp
   1a2f2:	e9 a1 f4 ff ff       	jmp    19798 <dhcp_set_state>
   1a2f7:	48 83 c4 18          	add    $0x18,%rsp
   1a2fb:	e9 80 fd ff ff       	jmp    1a080 <dhcp_tx.isra.0>

000000000001a300 <start_pxebs>:
   1a300:	f3 0f 1e fa          	endbr64 
   1a304:	55                   	push   %rbp
   1a305:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1a30a:	48 89 e5             	mov    %rsp,%rbp
   1a30d:	41 57                	push   %r15
   1a30f:	41 56                	push   %r14
   1a311:	41 89 d6             	mov    %edx,%r14d
   1a314:	31 d2                	xor    %edx,%edx
   1a316:	41 55                	push   %r13
   1a318:	41 54                	push   %r12
   1a31a:	53                   	push   %rbx
   1a31b:	48 89 f3             	mov    %rsi,%rbx
   1a31e:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   1a325:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
   1a32c:	48 8d bd 50 ff ff ff 	lea    -0xb0(%rbp),%rdi
   1a333:	48 8b 05 16 fd 00 00 	mov    0xfd16(%rip),%rax        # 2a050 <__stack_chk_guard>
   1a33a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1a33e:	31 c0                	xor    %eax,%eax
   1a340:	f3 ab                	rep stos %eax,%es:(%rdi)
   1a342:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
   1a349:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1a34e:	48 c7 85 68 ff ff ff 	movq   $0x2b06,-0x98(%rbp)
   1a355:	06 2b 00 00 
   1a359:	f3 ab                	rep stos %eax,%es:(%rdi)
   1a35b:	48 8d 7d a0          	lea    -0x60(%rbp),%rdi
   1a35f:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1a364:	48 c7 45 90 08 2b 00 	movq   $0x2b08,-0x70(%rbp)
   1a36b:	00 
   1a36c:	f3 ab                	rep stos %eax,%es:(%rdi)
   1a36e:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
   1a375:	31 ff                	xor    %edi,%edi
   1a377:	48 c7 45 b8 07 2b 00 	movq   $0x2b07,-0x48(%rbp)
   1a37e:	00 
   1a37f:	48 89 c6             	mov    %rax,%rsi
   1a382:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1a389:	e8 53 7b ff ff       	call   11ee1 <fetch_raw_setting>
   1a38e:	4c 63 f8             	movslq %eax,%r15
   1a391:	31 c0                	xor    %eax,%eax
   1a393:	4d 85 ff             	test   %r15,%r15
   1a396:	4d 89 fc             	mov    %r15,%r12
   1a399:	4c 0f 48 f8          	cmovs  %rax,%r15
   1a39d:	49 8d bf 24 01 00 00 	lea    0x124(%r15),%rdi
   1a3a4:	e8 8d 23 ff ff       	call   c736 <zalloc>
   1a3a9:	48 85 c0             	test   %rax,%rax
   1a3ac:	75 0b                	jne    1a3b9 <start_pxebs+0xb9>
   1a3ae:	41 bc 77 9f ef ce    	mov    $0xceef9f77,%r12d
   1a3b4:	e9 2a 02 00 00       	jmp    1a5e3 <start_pxebs+0x2e3>
   1a3b9:	49 89 c5             	mov    %rax,%r13
   1a3bc:	48 8d 05 e2 f1 ff ff 	lea    -0xe1e(%rip),%rax        # 195a5 <dhcp_free>
   1a3c3:	48 8d 15 36 d3 00 00 	lea    0xd336(%rip),%rdx        # 27700 <dhcp_job_desc>
   1a3ca:	48 89 df             	mov    %rbx,%rdi
   1a3cd:	49 89 45 08          	mov    %rax,0x8(%r13)
   1a3d1:	48 8d 05 e8 c0 00 00 	lea    0xc0e8(%rip),%rax        # 264c0 <null_intf>
   1a3d8:	49 89 45 10          	mov    %rax,0x10(%r13)
   1a3dc:	49 89 45 30          	mov    %rax,0x30(%r13)
   1a3e0:	48 8d 05 59 d3 00 00 	lea    0xd359(%rip),%rax        # 27740 <dhcp_xfer_desc>
   1a3e7:	49 89 45 40          	mov    %rax,0x40(%r13)
   1a3eb:	49 89 45 48          	mov    %rax,0x48(%r13)
   1a3ef:	48 8d 05 22 f8 ff ff 	lea    -0x7de(%rip),%rax        # 19c18 <dhcp_timer_expired>
   1a3f6:	49 89 55 20          	mov    %rdx,0x20(%r13)
   1a3fa:	49 89 55 28          	mov    %rdx,0x28(%r13)
   1a3fe:	49 89 85 f8 00 00 00 	mov    %rax,0xf8(%r13)
   1a405:	4d 89 6d 18          	mov    %r13,0x18(%r13)
   1a409:	4d 89 6d 38          	mov    %r13,0x38(%r13)
   1a40d:	4d 89 ad 00 01 00 00 	mov    %r13,0x100(%r13)
   1a414:	e8 f5 5a ff ff       	call   ff0e <ref_increment>
   1a419:	49 89 5d 50          	mov    %rbx,0x50(%r13)
   1a41d:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
   1a424:	49 8d 55 60          	lea    0x60(%r13),%rdx
   1a428:	66 41 c7 45 58 01 00 	movw   $0x1,0x58(%r13)
   1a42f:	48 8d 35 da ef 00 00 	lea    0xefda(%rip),%rsi        # 29410 <ip_setting>
   1a436:	49 8d 9d 18 01 00 00 	lea    0x118(%r13),%rbx
   1a43d:	e8 f6 7a ff ff       	call   11f38 <fetch_ipv4_setting>
   1a442:	66 45 89 b5 a4 00 00 	mov    %r14w,0xa4(%r13)
   1a449:	00 
   1a44a:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
   1a451:	31 ff                	xor    %edi,%edi
   1a453:	66 41 c7 45 5c 00 44 	movw   $0x4400,0x5c(%r13)
   1a45a:	e8 a9 7d ff ff       	call   12208 <fetch_uintz_setting>
   1a45f:	49 89 9d a8 00 00 00 	mov    %rbx,0xa8(%r13)
   1a466:	49 89 c6             	mov    %rax,%r14
   1a469:	a8 02                	test   $0x2,%al
   1a46b:	75 1f                	jne    1a48c <start_pxebs+0x18c>
   1a46d:	31 ff                	xor    %edi,%edi
   1a46f:	48 89 da             	mov    %rbx,%rdx
   1a472:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
   1a476:	e8 bd 7a ff ff       	call   11f38 <fetch_ipv4_setting>
   1a47b:	41 83 bd 18 01 00 00 	cmpl   $0x0,0x118(%r13)
   1a482:	00 
   1a483:	74 07                	je     1a48c <start_pxebs+0x18c>
   1a485:	49 8d 9d 1c 01 00 00 	lea    0x11c(%r13),%rbx
   1a48c:	41 f6 c6 01          	test   $0x1,%r14b
   1a490:	75 0a                	jne    1a49c <start_pxebs+0x19c>
   1a492:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
   1a498:	48 83 c3 04          	add    $0x4,%rbx
   1a49c:	41 80 e6 04          	and    $0x4,%r14b
   1a4a0:	74 07                	je     1a4a9 <start_pxebs+0x1a9>
   1a4a2:	49 89 9d b0 00 00 00 	mov    %rbx,0xb0(%r13)
   1a4a9:	45 85 e4             	test   %r12d,%r12d
   1a4ac:	0f 8e a8 00 00 00    	jle    1a55a <start_pxebs+0x25a>
   1a4b2:	49 8d 57 0f          	lea    0xf(%r15),%rdx
   1a4b6:	48 89 e6             	mov    %rsp,%rsi
   1a4b9:	49 89 e6             	mov    %rsp,%r14
   1a4bc:	48 89 d0             	mov    %rdx,%rax
   1a4bf:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   1a4c6:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1a4ca:	48 29 d6             	sub    %rdx,%rsi
   1a4cd:	48 39 f4             	cmp    %rsi,%rsp
   1a4d0:	74 12                	je     1a4e4 <start_pxebs+0x1e4>
   1a4d2:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1a4d9:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1a4e0:	00 00 
   1a4e2:	eb e9                	jmp    1a4cd <start_pxebs+0x1cd>
   1a4e4:	25 ff 0f 00 00       	and    $0xfff,%eax
   1a4e9:	48 29 c4             	sub    %rax,%rsp
   1a4ec:	48 85 c0             	test   %rax,%rax
   1a4ef:	74 06                	je     1a4f7 <start_pxebs+0x1f7>
   1a4f1:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1a4f7:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
   1a4fe:	4c 89 f9             	mov    %r15,%rcx
   1a501:	48 89 e2             	mov    %rsp,%rdx
   1a504:	31 ff                	xor    %edi,%edi
   1a506:	49 89 e4             	mov    %rsp,%r12
   1a509:	e8 d3 79 ff ff       	call   11ee1 <fetch_raw_setting>
   1a50e:	49 83 ff 02          	cmp    $0x2,%r15
   1a512:	76 43                	jbe    1a557 <start_pxebs+0x257>
   1a514:	41 0f b6 54 24 02    	movzbl 0x2(%r12),%edx
   1a51a:	48 89 d6             	mov    %rdx,%rsi
   1a51d:	48 c1 e2 02          	shl    $0x2,%rdx
   1a521:	48 8d 7a 03          	lea    0x3(%rdx),%rdi
   1a525:	49 39 ff             	cmp    %rdi,%r15
   1a528:	72 2d                	jb     1a557 <start_pxebs+0x257>
   1a52a:	41 8b 85 a4 00 00 00 	mov    0xa4(%r13),%eax
   1a531:	66 41 39 04 24       	cmp    %ax,(%r12)
   1a536:	75 17                	jne    1a54f <start_pxebs+0x24f>
   1a538:	31 c0                	xor    %eax,%eax
   1a53a:	39 c6                	cmp    %eax,%esi
   1a53c:	76 0e                	jbe    1a54c <start_pxebs+0x24c>
   1a53e:	45 8b 4c 84 03       	mov    0x3(%r12,%rax,4),%r9d
   1a543:	44 89 0c 83          	mov    %r9d,(%rbx,%rax,4)
   1a547:	48 ff c0             	inc    %rax
   1a54a:	eb ee                	jmp    1a53a <start_pxebs+0x23a>
   1a54c:	48 01 d3             	add    %rdx,%rbx
   1a54f:	49 01 fc             	add    %rdi,%r12
   1a552:	49 29 ff             	sub    %rdi,%r15
   1a555:	eb b7                	jmp    1a50e <start_pxebs+0x20e>
   1a557:	4c 89 f4             	mov    %r14,%rsp
   1a55a:	49 8b 85 a8 00 00 00 	mov    0xa8(%r13),%rax
   1a561:	83 38 00             	cmpl   $0x0,(%rax)
   1a564:	75 08                	jne    1a56e <start_pxebs+0x26e>
   1a566:	41 bc 7e 9f ef e3    	mov    $0xe3ef9f7e,%r12d
   1a56c:	eb 62                	jmp    1a5d0 <start_pxebs+0x2d0>
   1a56e:	48 83 c0 04          	add    $0x4,%rax
   1a572:	83 38 00             	cmpl   $0x0,(%rax)
   1a575:	75 f7                	jne    1a56e <start_pxebs+0x26e>
   1a577:	49 8b 85 b0 00 00 00 	mov    0xb0(%r13),%rax
   1a57e:	48 85 c0             	test   %rax,%rax
   1a581:	74 0b                	je     1a58e <start_pxebs+0x28e>
   1a583:	83 38 00             	cmpl   $0x0,(%rax)
   1a586:	74 06                	je     1a58e <start_pxebs+0x28e>
   1a588:	48 83 c0 04          	add    $0x4,%rax
   1a58c:	eb f5                	jmp    1a583 <start_pxebs+0x283>
   1a58e:	8b 35 ac a0 00 00    	mov    0xa0ac(%rip),%esi        # 24640 <udp_sock_dgram>
   1a594:	49 8d 4d 58          	lea    0x58(%r13),%rcx
   1a598:	49 8d 7d 30          	lea    0x30(%r13),%rdi
   1a59c:	48 8d 15 1d a1 00 00 	lea    0xa11d(%rip),%rdx        # 246c0 <dhcp_peer>
   1a5a3:	e8 ee 45 ff ff       	call   eb96 <xfer_open_socket>
   1a5a8:	41 89 c4             	mov    %eax,%r12d
   1a5ab:	85 c0                	test   %eax,%eax
   1a5ad:	75 21                	jne    1a5d0 <start_pxebs+0x2d0>
   1a5af:	4c 89 ef             	mov    %r13,%rdi
   1a5b2:	48 8d 35 c7 d1 00 00 	lea    0xd1c7(%rip),%rsi        # 27780 <dhcp_state_pxebs>
   1a5b9:	e8 da f1 ff ff       	call   19798 <dhcp_set_state>
   1a5be:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   1a5c5:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   1a5c9:	e8 73 f2 fe ff       	call   9841 <intf_plug_plug>
   1a5ce:	eb 0b                	jmp    1a5db <start_pxebs+0x2db>
   1a5d0:	44 89 e6             	mov    %r12d,%esi
   1a5d3:	4c 89 ef             	mov    %r13,%rdi
   1a5d6:	e8 c4 f3 ff ff       	call   1999f <dhcp_finished>
   1a5db:	4c 89 ef             	mov    %r13,%rdi
   1a5de:	e8 37 59 ff ff       	call   ff1a <ref_decrement>
   1a5e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a5e7:	48 2b 05 62 fa 00 00 	sub    0xfa62(%rip),%rax        # 2a050 <__stack_chk_guard>
   1a5ee:	74 05                	je     1a5f5 <start_pxebs+0x2f5>
   1a5f0:	e8 6b 84 fe ff       	call   2a60 <__stack_chk_fail>
   1a5f5:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1a5f9:	44 89 e0             	mov    %r12d,%eax
   1a5fc:	5b                   	pop    %rbx
   1a5fd:	41 5c                	pop    %r12
   1a5ff:	41 5d                	pop    %r13
   1a601:	41 5e                	pop    %r14
   1a603:	41 5f                	pop    %r15
   1a605:	5d                   	pop    %rbp
   1a606:	c3                   	ret    

000000000001a607 <find_dhcp_option_with_encap>:
   1a607:	49 89 f9             	mov    %rdi,%r9
   1a60a:	89 f1                	mov    %esi,%ecx
   1a60c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1a610:	31 c0                	xor    %eax,%eax
   1a612:	85 f6                	test   %esi,%esi
   1a614:	75 58                	jne    1a66e <find_dhcp_option_with_encap+0x67>
   1a616:	eb 6c                	jmp    1a684 <find_dhcp_option_with_encap+0x7d>
   1a618:	41 89 c2             	mov    %eax,%r10d
   1a61b:	4d 03 11             	add    (%r9),%r10
   1a61e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a624:	41 0f b6 32          	movzbl (%r10),%esi
   1a628:	44 8d 5e ff          	lea    -0x1(%rsi),%r11d
   1a62c:	41 80 fb fd          	cmp    $0xfd,%r11b
   1a630:	77 09                	ja     1a63b <find_dhcp_option_with_encap+0x34>
   1a632:	45 0f b6 42 01       	movzbl 0x1(%r10),%r8d
   1a637:	41 83 c0 02          	add    $0x2,%r8d
   1a63b:	45 89 c2             	mov    %r8d,%r10d
   1a63e:	4c 29 d7             	sub    %r10,%rdi
   1a641:	78 41                	js     1a684 <find_dhcp_option_with_encap+0x7d>
   1a643:	40 80 fe ff          	cmp    $0xff,%sil
   1a647:	74 2c                	je     1a675 <find_dhcp_option_with_encap+0x6e>
   1a649:	39 ce                	cmp    %ecx,%esi
   1a64b:	74 3c                	je     1a689 <find_dhcp_option_with_encap+0x82>
   1a64d:	41 89 cb             	mov    %ecx,%r11d
   1a650:	41 c1 eb 08          	shr    $0x8,%r11d
   1a654:	44 39 de             	cmp    %r11d,%esi
   1a657:	75 26                	jne    1a67f <find_dhcp_option_with_encap+0x78>
   1a659:	45 85 db             	test   %r11d,%r11d
   1a65c:	74 21                	je     1a67f <find_dhcp_option_with_encap+0x78>
   1a65e:	48 85 d2             	test   %rdx,%rdx
   1a661:	74 02                	je     1a665 <find_dhcp_option_with_encap+0x5e>
   1a663:	89 02                	mov    %eax,(%rdx)
   1a665:	0f b6 c9             	movzbl %cl,%ecx
   1a668:	83 c0 02             	add    $0x2,%eax
   1a66b:	4c 89 d7             	mov    %r10,%rdi
   1a66e:	48 85 ff             	test   %rdi,%rdi
   1a671:	75 a5                	jne    1a618 <find_dhcp_option_with_encap+0x11>
   1a673:	eb 0f                	jmp    1a684 <find_dhcp_option_with_encap+0x7d>
   1a675:	81 f9 ff 00 00 00    	cmp    $0xff,%ecx
   1a67b:	74 0c                	je     1a689 <find_dhcp_option_with_encap+0x82>
   1a67d:	eb 05                	jmp    1a684 <find_dhcp_option_with_encap+0x7d>
   1a67f:	44 01 c0             	add    %r8d,%eax
   1a682:	eb ea                	jmp    1a66e <find_dhcp_option_with_encap+0x67>
   1a684:	b8 72 9f fd d2       	mov    $0xd2fd9f72,%eax
   1a689:	c3                   	ret    

000000000001a68a <set_dhcp_option>:
   1a68a:	41 57                	push   %r15
   1a68c:	41 56                	push   %r14
   1a68e:	41 89 f6             	mov    %esi,%r14d
   1a691:	41 55                	push   %r13
   1a693:	41 c1 ee 08          	shr    $0x8,%r14d
   1a697:	4c 8d 69 02          	lea    0x2(%rcx),%r13
   1a69b:	41 54                	push   %r12
   1a69d:	49 89 cc             	mov    %rcx,%r12
   1a6a0:	55                   	push   %rbp
   1a6a1:	48 89 fd             	mov    %rdi,%rbp
   1a6a4:	53                   	push   %rbx
   1a6a5:	48 83 ec 48          	sub    $0x48,%rsp
   1a6a9:	48 8b 05 a0 f9 00 00 	mov    0xf9a0(%rip),%rax        # 2a050 <__stack_chk_guard>
   1a6b0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1a6b5:	31 c0                	xor    %eax,%eax
   1a6b7:	89 74 24 04          	mov    %esi,0x4(%rsp)
   1a6bb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1a6c0:	c7 44 24 34 ff ff ff 	movl   $0xffffffff,0x34(%rsp)
   1a6c7:	ff 
   1a6c8:	48 85 c9             	test   %rcx,%rcx
   1a6cb:	75 03                	jne    1a6d0 <set_dhcp_option+0x46>
   1a6cd:	45 31 ed             	xor    %r13d,%r13d
   1a6d0:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
   1a6d5:	75 0b                	jne    1a6e2 <set_dhcp_option+0x58>
   1a6d7:	41 bf 7d 9f fd c2    	mov    $0xc2fd9f7d,%r15d
   1a6dd:	e9 d9 01 00 00       	jmp    1a8bb <set_dhcp_option+0x231>
   1a6e2:	31 d2                	xor    %edx,%edx
   1a6e4:	be ff 00 00 00       	mov    $0xff,%esi
   1a6e9:	48 89 ef             	mov    %rbp,%rdi
   1a6ec:	e8 16 ff ff ff       	call   1a607 <find_dhcp_option_with_encap>
   1a6f1:	89 c3                	mov    %eax,%ebx
   1a6f3:	85 c0                	test   %eax,%eax
   1a6f5:	79 03                	jns    1a6fa <set_dhcp_option+0x70>
   1a6f7:	8b 5d 08             	mov    0x8(%rbp),%ebx
   1a6fa:	8b 74 24 04          	mov    0x4(%rsp),%esi
   1a6fe:	48 8d 54 24 34       	lea    0x34(%rsp),%rdx
   1a703:	48 89 ef             	mov    %rbp,%rdi
   1a706:	e8 fc fe ff ff       	call   1a607 <find_dhcp_option_with_encap>
   1a70b:	41 89 c7             	mov    %eax,%r15d
   1a70e:	85 c0                	test   %eax,%eax
   1a710:	78 26                	js     1a738 <set_dhcp_option+0xae>
   1a712:	48 98                	cltq   
   1a714:	48 03 45 00          	add    0x0(%rbp),%rax
   1a718:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   1a71e:	8a 08                	mov    (%rax),%cl
   1a720:	8d 51 ff             	lea    -0x1(%rcx),%edx
   1a723:	80 fa fd             	cmp    $0xfd,%dl
   1a726:	77 09                	ja     1a731 <set_dhcp_option+0xa7>
   1a728:	44 0f b6 50 01       	movzbl 0x1(%rax),%r10d
   1a72d:	41 83 c2 02          	add    $0x2,%r10d
   1a731:	45 85 f6             	test   %r14d,%r14d
   1a734:	74 4f                	je     1a785 <set_dhcp_option+0xfb>
   1a736:	eb 0c                	jmp    1a744 <set_dhcp_option+0xba>
   1a738:	45 85 f6             	test   %r14d,%r14d
   1a73b:	0f 84 6f 01 00 00    	je     1a8b0 <set_dhcp_option+0x226>
   1a741:	45 31 d2             	xor    %r10d,%r10d
   1a744:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
   1a749:	79 25                	jns    1a770 <set_dhcp_option+0xe6>
   1a74b:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a750:	44 89 f6             	mov    %r14d,%esi
   1a753:	48 89 ef             	mov    %rbp,%rdi
   1a756:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1a75b:	48 8d 15 87 7f 00 00 	lea    0x7f87(%rip),%rdx        # 226e9 <empty_encap.0>
   1a762:	e8 23 ff ff ff       	call   1a68a <set_dhcp_option>
   1a767:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1a76c:	89 44 24 34          	mov    %eax,0x34(%rsp)
   1a770:	8b 44 24 34          	mov    0x34(%rsp),%eax
   1a774:	85 c0                	test   %eax,%eax
   1a776:	0f 88 2f 01 00 00    	js     1a8ab <set_dhcp_option+0x221>
   1a77c:	45 85 ff             	test   %r15d,%r15d
   1a77f:	79 04                	jns    1a785 <set_dhcp_option+0xfb>
   1a781:	44 8d 78 02          	lea    0x2(%rax),%r15d
   1a785:	4c 89 ea             	mov    %r13,%rdx
   1a788:	48 63 5c 24 34       	movslq 0x34(%rsp),%rbx
   1a78d:	4c 29 d2             	sub    %r10,%rdx
   1a790:	49 81 fd ff 00 00 00 	cmp    $0xff,%r13
   1a797:	76 02                	jbe    1a79b <set_dhcp_option+0x111>
   1a799:	eb 76                	jmp    1a811 <set_dhcp_option+0x187>
   1a79b:	4c 8b 5d 08          	mov    0x8(%rbp),%r11
   1a79f:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   1a7a3:	49 01 d3             	add    %rdx,%r11
   1a7a6:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   1a7ab:	49 39 cb             	cmp    %rcx,%r11
   1a7ae:	76 47                	jbe    1a7f7 <set_dhcp_option+0x16d>
   1a7b0:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1a7b5:	4c 89 de             	mov    %r11,%rsi
   1a7b8:	48 89 ef             	mov    %rbp,%rdi
   1a7bb:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1a7c0:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1a7c5:	ff 55 18             	call   *0x18(%rbp)
   1a7c8:	85 c0                	test   %eax,%eax
   1a7ca:	0f 85 db 00 00 00    	jne    1a8ab <set_dhcp_option+0x221>
   1a7d0:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1a7d5:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   1a7d9:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1a7dd:	48 29 ce             	sub    %rcx,%rsi
   1a7e0:	48 01 cf             	add    %rcx,%rdi
   1a7e3:	48 89 f1             	mov    %rsi,%rcx
   1a7e6:	f3 aa                	rep stos %al,%es:(%rdi)
   1a7e8:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1a7ed:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1a7f2:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1a7f7:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1a7fb:	85 db                	test   %ebx,%ebx
   1a7fd:	78 20                	js     1a81f <set_dhcp_option+0x195>
   1a7ff:	48 01 fb             	add    %rdi,%rbx
   1a802:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
   1a806:	48 01 d0             	add    %rdx,%rax
   1a809:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   1a80f:	76 0b                	jbe    1a81c <set_dhcp_option+0x192>
   1a811:	41 bf 75 9f fd cb    	mov    $0xcbfd9f75,%r15d
   1a817:	e9 9f 00 00 00       	jmp    1a8bb <set_dhcp_option+0x231>
   1a81c:	88 43 01             	mov    %al,0x1(%rbx)
   1a81f:	4c 89 da             	mov    %r11,%rdx
   1a822:	4c 89 5d 08          	mov    %r11,0x8(%rbp)
   1a826:	49 63 c7             	movslq %r15d,%rax
   1a829:	44 89 fb             	mov    %r15d,%ebx
   1a82c:	48 01 df             	add    %rbx,%rdi
   1a82f:	48 29 c2             	sub    %rax,%rdx
   1a832:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1a837:	4a 8d 34 17          	lea    (%rdi,%r10,1),%rsi
   1a83b:	4c 29 ea             	sub    %r13,%rdx
   1a83e:	4c 01 ef             	add    %r13,%rdi
   1a841:	e8 c5 cb ff ff       	call   1740b <__memmove>
   1a846:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1a84b:	4c 3b 5d 10          	cmp    0x10(%rbp),%r11
   1a84f:	72 26                	jb     1a877 <set_dhcp_option+0x1ed>
   1a851:	4d 85 e4             	test   %r12,%r12
   1a854:	74 30                	je     1a886 <set_dhcp_option+0x1fc>
   1a856:	8a 44 24 04          	mov    0x4(%rsp),%al
   1a85a:	48 03 5d 00          	add    0x0(%rbp),%rbx
   1a85e:	4c 89 e2             	mov    %r12,%rdx
   1a861:	44 88 63 01          	mov    %r12b,0x1(%rbx)
   1a865:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1a86a:	48 8d 7b 02          	lea    0x2(%rbx),%rdi
   1a86e:	88 03                	mov    %al,(%rbx)
   1a870:	e8 74 cb ff ff       	call   173e9 <__memcpy>
   1a875:	eb 0f                	jmp    1a886 <set_dhcp_option+0x1fc>
   1a877:	4c 89 de             	mov    %r11,%rsi
   1a87a:	48 89 ef             	mov    %rbp,%rdi
   1a87d:	ff 55 18             	call   *0x18(%rbp)
   1a880:	85 c0                	test   %eax,%eax
   1a882:	74 cd                	je     1a851 <set_dhcp_option+0x1c7>
   1a884:	eb 25                	jmp    1a8ab <set_dhcp_option+0x221>
   1a886:	48 63 44 24 34       	movslq 0x34(%rsp),%rax
   1a88b:	85 c0                	test   %eax,%eax
   1a88d:	78 2c                	js     1a8bb <set_dhcp_option+0x231>
   1a88f:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1a893:	80 7c 02 01 01       	cmpb   $0x1,0x1(%rdx,%rax,1)
   1a898:	77 21                	ja     1a8bb <set_dhcp_option+0x231>
   1a89a:	31 c9                	xor    %ecx,%ecx
   1a89c:	31 d2                	xor    %edx,%edx
   1a89e:	44 89 f6             	mov    %r14d,%esi
   1a8a1:	48 89 ef             	mov    %rbp,%rdi
   1a8a4:	e8 e1 fd ff ff       	call   1a68a <set_dhcp_option>
   1a8a9:	eb 10                	jmp    1a8bb <set_dhcp_option+0x231>
   1a8ab:	41 89 c7             	mov    %eax,%r15d
   1a8ae:	eb 0b                	jmp    1a8bb <set_dhcp_option+0x231>
   1a8b0:	41 89 df             	mov    %ebx,%r15d
   1a8b3:	45 31 d2             	xor    %r10d,%r10d
   1a8b6:	e9 ca fe ff ff       	jmp    1a785 <set_dhcp_option+0xfb>
   1a8bb:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1a8c0:	48 2b 05 89 f7 00 00 	sub    0xf789(%rip),%rax        # 2a050 <__stack_chk_guard>
   1a8c7:	74 05                	je     1a8ce <set_dhcp_option+0x244>
   1a8c9:	e8 92 81 fe ff       	call   2a60 <__stack_chk_fail>
   1a8ce:	48 83 c4 48          	add    $0x48,%rsp
   1a8d2:	44 89 f8             	mov    %r15d,%eax
   1a8d5:	5b                   	pop    %rbx
   1a8d6:	5d                   	pop    %rbp
   1a8d7:	41 5c                	pop    %r12
   1a8d9:	41 5d                	pop    %r13
   1a8db:	41 5e                	pop    %r14
   1a8dd:	41 5f                	pop    %r15
   1a8df:	c3                   	ret    

000000000001a8e0 <dhcpopt_no_realloc>:
   1a8e0:	f3 0f 1e fa          	endbr64 
   1a8e4:	31 c0                	xor    %eax,%eax
   1a8e6:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
   1a8ea:	73 05                	jae    1a8f1 <dhcpopt_no_realloc+0x11>
   1a8ec:	b8 75 9f fd cb       	mov    $0xcbfd9f75,%eax
   1a8f1:	c3                   	ret    

000000000001a8f2 <dhcpopt_applies>:
   1a8f2:	f3 0f 1e fa          	endbr64 
   1a8f6:	ff cf                	dec    %edi
   1a8f8:	31 c0                	xor    %eax,%eax
   1a8fa:	81 ff fd fe 00 00    	cmp    $0xfefd,%edi
   1a900:	0f 96 c0             	setbe  %al
   1a903:	c3                   	ret    

000000000001a904 <dhcpopt_store>:
   1a904:	f3 0f 1e fa          	endbr64 
   1a908:	50                   	push   %rax
   1a909:	e8 7c fd ff ff       	call   1a68a <set_dhcp_option>
   1a90e:	31 d2                	xor    %edx,%edx
   1a910:	85 c0                	test   %eax,%eax
   1a912:	0f 4f c2             	cmovg  %edx,%eax
   1a915:	5a                   	pop    %rdx
   1a916:	c3                   	ret    

000000000001a917 <dhcpopt_fetch>:
   1a917:	f3 0f 1e fa          	endbr64 
   1a91b:	41 54                	push   %r12
   1a91d:	49 89 fc             	mov    %rdi,%r12
   1a920:	55                   	push   %rbp
   1a921:	48 89 d5             	mov    %rdx,%rbp
   1a924:	31 d2                	xor    %edx,%edx
   1a926:	53                   	push   %rbx
   1a927:	48 89 cb             	mov    %rcx,%rbx
   1a92a:	e8 d8 fc ff ff       	call   1a607 <find_dhcp_option_with_encap>
   1a92f:	85 c0                	test   %eax,%eax
   1a931:	78 24                	js     1a957 <dhcpopt_fetch+0x40>
   1a933:	48 98                	cltq   
   1a935:	49 03 04 24          	add    (%r12),%rax
   1a939:	48 89 ef             	mov    %rbp,%rdi
   1a93c:	0f b6 50 01          	movzbl 0x1(%rax),%edx
   1a940:	48 8d 70 02          	lea    0x2(%rax),%rsi
   1a944:	48 39 da             	cmp    %rbx,%rdx
   1a947:	49 89 d4             	mov    %rdx,%r12
   1a94a:	48 0f 47 d3          	cmova  %rbx,%rdx
   1a94e:	e8 96 ca ff ff       	call   173e9 <__memcpy>
   1a953:	41 0f b6 c4          	movzbl %r12b,%eax
   1a957:	5b                   	pop    %rbx
   1a958:	5d                   	pop    %rbp
   1a959:	41 5c                	pop    %r12
   1a95b:	c3                   	ret    

000000000001a95c <dhcpopt_update_used_len>:
   1a95c:	f3 0f 1e fa          	endbr64 
   1a960:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   1a967:	00 
   1a968:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   1a96c:	31 c9                	xor    %ecx,%ecx
   1a96e:	48 85 d2             	test   %rdx,%rdx
   1a971:	74 35                	je     1a9a8 <dhcpopt_update_used_len+0x4c>
   1a973:	89 ce                	mov    %ecx,%esi
   1a975:	48 03 37             	add    (%rdi),%rsi
   1a978:	b8 01 00 00 00       	mov    $0x1,%eax
   1a97d:	44 8a 06             	mov    (%rsi),%r8b
   1a980:	45 8d 48 ff          	lea    -0x1(%r8),%r9d
   1a984:	41 80 f9 fd          	cmp    $0xfd,%r9b
   1a988:	77 07                	ja     1a991 <dhcpopt_update_used_len+0x35>
   1a98a:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
   1a98e:	83 c0 02             	add    $0x2,%eax
   1a991:	89 c6                	mov    %eax,%esi
   1a993:	48 29 f2             	sub    %rsi,%rdx
   1a996:	78 10                	js     1a9a8 <dhcpopt_update_used_len+0x4c>
   1a998:	01 c1                	add    %eax,%ecx
   1a99a:	45 84 c0             	test   %r8b,%r8b
   1a99d:	74 cf                	je     1a96e <dhcpopt_update_used_len+0x12>
   1a99f:	48 63 c1             	movslq %ecx,%rax
   1a9a2:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1a9a6:	eb c6                	jmp    1a96e <dhcpopt_update_used_len+0x12>
   1a9a8:	c3                   	ret    

000000000001a9a9 <dhcpopt_init>:
   1a9a9:	f3 0f 1e fa          	endbr64 
   1a9ad:	48 89 37             	mov    %rsi,(%rdi)
   1a9b0:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   1a9b4:	48 89 4f 18          	mov    %rcx,0x18(%rdi)
   1a9b8:	e9 9f ff ff ff       	jmp    1a95c <dhcpopt_update_used_len>

000000000001a9bd <used_len_ipv4>:
   1a9bd:	f3 0f 1e fa          	endbr64 
   1a9c1:	31 c0                	xor    %eax,%eax
   1a9c3:	83 3f 00             	cmpl   $0x0,(%rdi)
   1a9c6:	0f 95 c0             	setne  %al
   1a9c9:	48 c1 e0 02          	shl    $0x2,%rax
   1a9cd:	c3                   	ret    

000000000001a9ce <used_len_string>:
   1a9ce:	f3 0f 1e fa          	endbr64 
   1a9d2:	e9 28 90 ff ff       	jmp    139ff <strnlen>

000000000001a9d7 <dhcppkt_settings_applies>:
   1a9d7:	f3 0f 1e fa          	endbr64 
   1a9db:	48 83 7e 20 00       	cmpq   $0x0,0x20(%rsi)
   1a9e0:	75 13                	jne    1a9f5 <dhcppkt_settings_applies+0x1e>
   1a9e2:	50                   	push   %rax
   1a9e3:	8b 7e 18             	mov    0x18(%rsi),%edi
   1a9e6:	e8 07 ff ff ff       	call   1a8f2 <dhcpopt_applies>
   1a9eb:	5a                   	pop    %rdx
   1a9ec:	85 c0                	test   %eax,%eax
   1a9ee:	0f 95 c0             	setne  %al
   1a9f1:	0f b6 c0             	movzbl %al,%eax
   1a9f4:	c3                   	ret    
   1a9f5:	31 c0                	xor    %eax,%eax
   1a9f7:	c3                   	ret    

000000000001a9f8 <dhcppkt_store>:
   1a9f8:	f3 0f 1e fa          	endbr64 
   1a9fc:	55                   	push   %rbp
   1a9fd:	89 f5                	mov    %esi,%ebp
   1a9ff:	48 89 d6             	mov    %rdx,%rsi
   1aa02:	48 89 ca             	mov    %rcx,%rdx
   1aa05:	53                   	push   %rbx
   1aa06:	48 8d 0d b3 ce 00 00 	lea    0xceb3(%rip),%rcx        # 278c0 <dhcp_packet_fields>
   1aa0d:	48 89 fb             	mov    %rdi,%rbx
   1aa10:	31 c0                	xor    %eax,%eax
   1aa12:	41 51                	push   %r9
   1aa14:	49 89 c8             	mov    %rcx,%r8
   1aa17:	3b 29                	cmp    (%rcx),%ebp
   1aa19:	74 20                	je     1aa3b <dhcppkt_store+0x43>
   1aa1b:	ff c0                	inc    %eax
   1aa1d:	48 83 c1 10          	add    $0x10,%rcx
   1aa21:	83 f8 04             	cmp    $0x4,%eax
   1aa24:	75 f1                	jne    1aa17 <dhcppkt_store+0x1f>
   1aa26:	41 58                	pop    %r8
   1aa28:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   1aa2c:	48 89 d1             	mov    %rdx,%rcx
   1aa2f:	5b                   	pop    %rbx
   1aa30:	48 89 f2             	mov    %rsi,%rdx
   1aa33:	89 ee                	mov    %ebp,%esi
   1aa35:	5d                   	pop    %rbp
   1aa36:	e9 c9 fe ff ff       	jmp    1a904 <dhcpopt_store>
   1aa3b:	48 c1 e0 04          	shl    $0x4,%rax
   1aa3f:	49 01 c0             	add    %rax,%r8
   1aa42:	41 0f b7 48 06       	movzwl 0x6(%r8),%ecx
   1aa47:	48 39 d1             	cmp    %rdx,%rcx
   1aa4a:	73 07                	jae    1aa53 <dhcppkt_store+0x5b>
   1aa4c:	b8 75 9f ea cb       	mov    $0xcbea9f75,%eax
   1aa51:	eb 2c                	jmp    1aa7f <dhcppkt_store+0x87>
   1aa53:	41 0f b7 78 04       	movzwl 0x4(%r8),%edi
   1aa58:	31 c0                	xor    %eax,%eax
   1aa5a:	48 03 7b 10          	add    0x10(%rbx),%rdi
   1aa5e:	f3 aa                	rep stos %al,%es:(%rdi)
   1aa60:	41 0f b7 78 04       	movzwl 0x4(%r8),%edi
   1aa65:	48 03 7b 10          	add    0x10(%rbx),%rdi
   1aa69:	e8 7b c9 ff ff       	call   173e9 <__memcpy>
   1aa6e:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   1aa72:	31 c9                	xor    %ecx,%ecx
   1aa74:	31 d2                	xor    %edx,%edx
   1aa76:	89 ee                	mov    %ebp,%esi
   1aa78:	e8 87 fe ff ff       	call   1a904 <dhcpopt_store>
   1aa7d:	31 c0                	xor    %eax,%eax
   1aa7f:	5a                   	pop    %rdx
   1aa80:	5b                   	pop    %rbx
   1aa81:	5d                   	pop    %rbp
   1aa82:	c3                   	ret    

000000000001aa83 <dhcppkt_settings_store>:
   1aa83:	f3 0f 1e fa          	endbr64 
   1aa87:	8b 76 18             	mov    0x18(%rsi),%esi
   1aa8a:	48 83 ef 38          	sub    $0x38,%rdi
   1aa8e:	e9 65 ff ff ff       	jmp    1a9f8 <dhcppkt_store>

000000000001aa93 <dhcppkt_fetch>:
   1aa93:	f3 0f 1e fa          	endbr64 
   1aa97:	41 57                	push   %r15
   1aa99:	31 c0                	xor    %eax,%eax
   1aa9b:	41 56                	push   %r14
   1aa9d:	41 89 f6             	mov    %esi,%r14d
   1aaa0:	41 55                	push   %r13
   1aaa2:	49 89 d5             	mov    %rdx,%r13
   1aaa5:	41 54                	push   %r12
   1aaa7:	49 89 cc             	mov    %rcx,%r12
   1aaaa:	48 8d 0d 0f ce 00 00 	lea    0xce0f(%rip),%rcx        # 278c0 <dhcp_packet_fields>
   1aab1:	55                   	push   %rbp
   1aab2:	48 89 ca             	mov    %rcx,%rdx
   1aab5:	48 89 fd             	mov    %rdi,%rbp
   1aab8:	53                   	push   %rbx
   1aab9:	41 51                	push   %r9
   1aabb:	44 3b 31             	cmp    (%rcx),%r14d
   1aabe:	74 29                	je     1aae9 <dhcppkt_fetch+0x56>
   1aac0:	ff c0                	inc    %eax
   1aac2:	48 83 c1 10          	add    $0x10,%rcx
   1aac6:	83 f8 04             	cmp    $0x4,%eax
   1aac9:	75 f0                	jne    1aabb <dhcppkt_fetch+0x28>
   1aacb:	41 58                	pop    %r8
   1aacd:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   1aad1:	5b                   	pop    %rbx
   1aad2:	4c 89 e1             	mov    %r12,%rcx
   1aad5:	5d                   	pop    %rbp
   1aad6:	4c 89 ea             	mov    %r13,%rdx
   1aad9:	41 5c                	pop    %r12
   1aadb:	44 89 f6             	mov    %r14d,%esi
   1aade:	41 5d                	pop    %r13
   1aae0:	41 5e                	pop    %r14
   1aae2:	41 5f                	pop    %r15
   1aae4:	e9 2e fe ff ff       	jmp    1a917 <dhcpopt_fetch>
   1aae9:	48 c1 e0 04          	shl    $0x4,%rax
   1aaed:	48 01 d0             	add    %rdx,%rax
   1aaf0:	44 0f b7 78 04       	movzwl 0x4(%rax),%r15d
   1aaf5:	4c 03 7d 10          	add    0x10(%rbp),%r15
   1aaf9:	0f b7 70 06          	movzwl 0x6(%rax),%esi
   1aafd:	4c 89 ff             	mov    %r15,%rdi
   1ab00:	ff 50 08             	call   *0x8(%rax)
   1ab03:	48 89 c3             	mov    %rax,%rbx
   1ab06:	48 85 c0             	test   %rax,%rax
   1ab09:	74 c0                	je     1aacb <dhcppkt_fetch+0x38>
   1ab0b:	4c 39 e0             	cmp    %r12,%rax
   1ab0e:	4c 89 e2             	mov    %r12,%rdx
   1ab11:	4c 89 fe             	mov    %r15,%rsi
   1ab14:	4c 89 ef             	mov    %r13,%rdi
   1ab17:	48 0f 46 d0          	cmovbe %rax,%rdx
   1ab1b:	e8 c9 c8 ff ff       	call   173e9 <__memcpy>
   1ab20:	5a                   	pop    %rdx
   1ab21:	89 d8                	mov    %ebx,%eax
   1ab23:	5b                   	pop    %rbx
   1ab24:	5d                   	pop    %rbp
   1ab25:	41 5c                	pop    %r12
   1ab27:	41 5d                	pop    %r13
   1ab29:	41 5e                	pop    %r14
   1ab2b:	41 5f                	pop    %r15
   1ab2d:	c3                   	ret    

000000000001ab2e <dhcppkt_settings_fetch>:
   1ab2e:	f3 0f 1e fa          	endbr64 
   1ab32:	8b 76 18             	mov    0x18(%rsi),%esi
   1ab35:	48 83 ef 38          	sub    $0x38,%rdi
   1ab39:	e9 55 ff ff ff       	jmp    1aa93 <dhcppkt_fetch>

000000000001ab3e <dhcppkt_init>:
   1ab3e:	f3 0f 1e fa          	endbr64 
   1ab42:	53                   	push   %rbx
   1ab43:	48 81 ea f0 00 00 00 	sub    $0xf0,%rdx
   1ab4a:	48 89 fb             	mov    %rdi,%rbx
   1ab4d:	48 8d 0d 8c fd ff ff 	lea    -0x274(%rip),%rcx        # 1a8e0 <dhcpopt_no_realloc>
   1ab54:	48 89 77 10          	mov    %rsi,0x10(%rdi)
   1ab58:	48 81 c6 f0 00 00 00 	add    $0xf0,%rsi
   1ab5f:	48 8d 7f 18          	lea    0x18(%rdi),%rdi
   1ab63:	e8 41 fe ff ff       	call   1a9a9 <dhcpopt_init>
   1ab68:	48 8d 43 50          	lea    0x50(%rbx),%rax
   1ab6c:	48 89 5b 38          	mov    %rbx,0x38(%rbx)
   1ab70:	48 89 43 50          	mov    %rax,0x50(%rbx)
   1ab74:	48 89 43 58          	mov    %rax,0x58(%rbx)
   1ab78:	48 8d 43 60          	lea    0x60(%rbx),%rax
   1ab7c:	48 89 43 60          	mov    %rax,0x60(%rbx)
   1ab80:	48 89 43 68          	mov    %rax,0x68(%rbx)
   1ab84:	48 8d 05 f5 cc 00 00 	lea    0xccf5(%rip),%rax        # 27880 <dhcppkt_settings_operations>
   1ab8b:	48 89 43 70          	mov    %rax,0x70(%rbx)
   1ab8f:	48 c7 43 78 00 00 00 	movq   $0x0,0x78(%rbx)
   1ab96:	00 
   1ab97:	5b                   	pop    %rbx
   1ab98:	c3                   	ret    

000000000001ab99 <downloader_buffer>:
   1ab99:	f3 0f 1e fa          	endbr64 
   1ab9d:	48 8d 47 58          	lea    0x58(%rdi),%rax
   1aba1:	c3                   	ret    

000000000001aba2 <downloader_free>:
   1aba2:	f3 0f 1e fa          	endbr64 
   1aba6:	55                   	push   %rbp
   1aba7:	48 89 fd             	mov    %rdi,%rbp
   1abaa:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
   1abae:	e8 67 53 ff ff       	call   ff1a <ref_decrement>
   1abb3:	48 89 ef             	mov    %rbp,%rdi
   1abb6:	5d                   	pop    %rbp
   1abb7:	e9 66 1b ff ff       	jmp    c722 <free>

000000000001abbc <downloader_finished>:
   1abbc:	f3 0f 1e fa          	endbr64 
   1abc0:	53                   	push   %rbx
   1abc1:	48 89 fb             	mov    %rdi,%rbx
   1abc4:	48 8d 7f 30          	lea    0x30(%rdi),%rdi
   1abc8:	48 83 ec 10          	sub    $0x10,%rsp
   1abcc:	48 8b 47 20          	mov    0x20(%rdi),%rax
   1abd0:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   1abd4:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1abd8:	48 89 50 48          	mov    %rdx,0x48(%rax)
   1abdc:	e8 be ed fe ff       	call   999f <intf_shutdown>
   1abe1:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1abe5:	48 83 c4 10          	add    $0x10,%rsp
   1abe9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1abed:	5b                   	pop    %rbx
   1abee:	e9 ac ed fe ff       	jmp    999f <intf_shutdown>

000000000001abf3 <downloader_vredirect>:
   1abf3:	f3 0f 1e fa          	endbr64 
   1abf7:	41 55                	push   %r13
   1abf9:	41 89 f5             	mov    %esi,%r13d
   1abfc:	41 54                	push   %r12
   1abfe:	49 89 d4             	mov    %rdx,%r12
   1ac01:	55                   	push   %rbp
   1ac02:	48 89 fd             	mov    %rdi,%rbp
   1ac05:	48 83 ec 30          	sub    $0x30,%rsp
   1ac09:	48 8b 05 40 f4 00 00 	mov    0xf440(%rip),%rax        # 2a050 <__stack_chk_guard>
   1ac10:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ac15:	31 c0                	xor    %eax,%eax
   1ac17:	ff ce                	dec    %esi
   1ac19:	74 15                	je     1ac30 <downloader_vredirect+0x3d>
   1ac1b:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   1ac1f:	4c 89 e2             	mov    %r12,%rdx
   1ac22:	44 89 ee             	mov    %r13d,%esi
   1ac25:	e8 e6 40 ff ff       	call   ed10 <xfer_vreopen>
   1ac2a:	85 c0                	test   %eax,%eax
   1ac2c:	74 5d                	je     1ac8b <downloader_vredirect+0x98>
   1ac2e:	eb 49                	jmp    1ac79 <downloader_vredirect+0x86>
   1ac30:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1ac35:	48 89 d6             	mov    %rdx,%rsi
   1ac38:	b9 06 00 00 00       	mov    $0x6,%ecx
   1ac3d:	48 89 c7             	mov    %rax,%rdi
   1ac40:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
   1ac42:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1ac46:	83 fa 2f             	cmp    $0x2f,%edx
   1ac49:	77 10                	ja     1ac5b <downloader_vredirect+0x68>
   1ac4b:	89 d0                	mov    %edx,%eax
   1ac4d:	83 c2 08             	add    $0x8,%edx
   1ac50:	48 03 44 24 20       	add    0x20(%rsp),%rax
   1ac55:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1ac59:	eb 0e                	jmp    1ac69 <downloader_vredirect+0x76>
   1ac5b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1ac60:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1ac64:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1ac69:	48 8b 7d 50          	mov    0x50(%rbp),%rdi
   1ac6d:	48 8b 30             	mov    (%rax),%rsi
   1ac70:	e8 8c 4d 00 00       	call   1fa01 <image_set_uri>
   1ac75:	85 c0                	test   %eax,%eax
   1ac77:	74 a2                	je     1ac1b <downloader_vredirect+0x28>
   1ac79:	89 c6                	mov    %eax,%esi
   1ac7b:	48 89 ef             	mov    %rbp,%rdi
   1ac7e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1ac82:	e8 35 ff ff ff       	call   1abbc <downloader_finished>
   1ac87:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1ac8b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1ac90:	48 2b 15 b9 f3 00 00 	sub    0xf3b9(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1ac97:	74 05                	je     1ac9e <downloader_vredirect+0xab>
   1ac99:	e8 c2 7d fe ff       	call   2a60 <__stack_chk_fail>
   1ac9e:	48 83 c4 30          	add    $0x30,%rsp
   1aca2:	5d                   	pop    %rbp
   1aca3:	41 5c                	pop    %r12
   1aca5:	41 5d                	pop    %r13
   1aca7:	c3                   	ret    

000000000001aca8 <downloader_deliver>:
   1aca8:	f3 0f 1e fa          	endbr64 
   1acac:	55                   	push   %rbp
   1acad:	48 89 fd             	mov    %rdi,%rbp
   1acb0:	48 83 c7 58          	add    $0x58,%rdi
   1acb4:	48 83 ec 10          	sub    $0x10,%rsp
   1acb8:	e8 d1 cd ff ff       	call   17a8e <xferbuf_deliver>
   1acbd:	85 c0                	test   %eax,%eax
   1acbf:	74 12                	je     1acd3 <downloader_deliver+0x2b>
   1acc1:	89 c6                	mov    %eax,%esi
   1acc3:	48 89 ef             	mov    %rbp,%rdi
   1acc6:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1acca:	e8 ed fe ff ff       	call   1abbc <downloader_finished>
   1accf:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1acd3:	48 83 c4 10          	add    $0x10,%rsp
   1acd7:	5d                   	pop    %rbp
   1acd8:	c3                   	ret    

000000000001acd9 <downloader_progress>:
   1acd9:	f3 0f 1e fa          	endbr64 
   1acdd:	55                   	push   %rbp
   1acde:	48 89 fd             	mov    %rdi,%rbp
   1ace1:	48 83 c7 30          	add    $0x30,%rdi
   1ace5:	53                   	push   %rbx
   1ace6:	48 89 f3             	mov    %rsi,%rbx
   1ace9:	51                   	push   %rcx
   1acea:	e8 f2 12 ff ff       	call   bfe1 <job_progress>
   1acef:	85 c0                	test   %eax,%eax
   1acf1:	75 16                	jne    1ad09 <downloader_progress+0x30>
   1acf3:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1acf8:	75 0f                	jne    1ad09 <downloader_progress+0x30>
   1acfa:	48 8b 55 68          	mov    0x68(%rbp),%rdx
   1acfe:	48 89 13             	mov    %rdx,(%rbx)
   1ad01:	48 8b 55 60          	mov    0x60(%rbp),%rdx
   1ad05:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1ad09:	5a                   	pop    %rdx
   1ad0a:	5b                   	pop    %rbx
   1ad0b:	5d                   	pop    %rbp
   1ad0c:	c3                   	ret    

000000000001ad0d <create_downloader>:
   1ad0d:	f3 0f 1e fa          	endbr64 
   1ad11:	41 55                	push   %r13
   1ad13:	49 89 fd             	mov    %rdi,%r13
   1ad16:	bf 78 00 00 00       	mov    $0x78,%edi
   1ad1b:	41 54                	push   %r12
   1ad1d:	49 89 f4             	mov    %rsi,%r12
   1ad20:	55                   	push   %rbp
   1ad21:	e8 10 1a ff ff       	call   c736 <zalloc>
   1ad26:	48 85 c0             	test   %rax,%rax
   1ad29:	75 0b                	jne    1ad36 <create_downloader+0x29>
   1ad2b:	41 bc 77 df fe ce    	mov    $0xcefedf77,%r12d
   1ad31:	e9 98 00 00 00       	jmp    1adce <create_downloader+0xc1>
   1ad36:	48 89 c5             	mov    %rax,%rbp
   1ad39:	48 8d 05 62 fe ff ff 	lea    -0x19e(%rip),%rax        # 1aba2 <downloader_free>
   1ad40:	48 8d 15 b9 cb 00 00 	lea    0xcbb9(%rip),%rdx        # 27900 <downloader_job_desc>
   1ad47:	4c 89 e7             	mov    %r12,%rdi
   1ad4a:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1ad4e:	48 8d 05 6b b7 00 00 	lea    0xb76b(%rip),%rax        # 264c0 <null_intf>
   1ad55:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1ad59:	48 89 45 30          	mov    %rax,0x30(%rbp)
   1ad5d:	48 8d 05 dc cb 00 00 	lea    0xcbdc(%rip),%rax        # 27940 <downloader_xfer_desc>
   1ad64:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1ad68:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   1ad6c:	48 89 45 40          	mov    %rax,0x40(%rbp)
   1ad70:	48 89 45 48          	mov    %rax,0x48(%rbp)
   1ad74:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   1ad78:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   1ad7c:	e8 8d 51 ff ff       	call   ff0e <ref_increment>
   1ad81:	49 8d 44 24 40       	lea    0x40(%r12),%rax
   1ad86:	4c 89 65 50          	mov    %r12,0x50(%rbp)
   1ad8a:	49 8b 74 24 20       	mov    0x20(%r12),%rsi
   1ad8f:	48 89 45 58          	mov    %rax,0x58(%rbp)
   1ad93:	48 8d 05 b6 c7 00 00 	lea    0xc7b6(%rip),%rax        # 27550 <xferbuf_umalloc_operations>
   1ad9a:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   1ad9e:	48 89 45 70          	mov    %rax,0x70(%rbp)
   1ada2:	e8 48 3d ff ff       	call   eaef <xfer_open_uri>
   1ada7:	41 89 c4             	mov    %eax,%r12d
   1adaa:	85 c0                	test   %eax,%eax
   1adac:	74 0c                	je     1adba <create_downloader+0xad>
   1adae:	89 c6                	mov    %eax,%esi
   1adb0:	48 89 ef             	mov    %rbp,%rdi
   1adb3:	e8 04 fe ff ff       	call   1abbc <downloader_finished>
   1adb8:	eb 0c                	jmp    1adc6 <create_downloader+0xb9>
   1adba:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   1adbe:	4c 89 ee             	mov    %r13,%rsi
   1adc1:	e8 7b ea fe ff       	call   9841 <intf_plug_plug>
   1adc6:	48 89 ef             	mov    %rbp,%rdi
   1adc9:	e8 4c 51 ff ff       	call   ff1a <ref_decrement>
   1adce:	44 89 e0             	mov    %r12d,%eax
   1add1:	5d                   	pop    %rbp
   1add2:	41 5c                	pop    %r12
   1add4:	41 5d                	pop    %r13
   1add6:	c3                   	ret    

000000000001add7 <init_editbox>:
   1add7:	f3 0f 1e fa          	endbr64 
   1addb:	41 55                	push   %r13
   1addd:	45 89 c5             	mov    %r8d,%r13d
   1ade0:	31 c0                	xor    %eax,%eax
   1ade2:	41 54                	push   %r12
   1ade4:	45 89 cc             	mov    %r9d,%r12d
   1ade7:	55                   	push   %rbp
   1ade8:	48 89 cd             	mov    %rcx,%rbp
   1adeb:	b9 40 00 00 00       	mov    $0x40,%ecx
   1adf0:	53                   	push   %rbx
   1adf1:	48 89 fb             	mov    %rdi,%rbx
   1adf4:	41 52                	push   %r10
   1adf6:	f3 aa                	rep stos %al,%es:(%rdi)
   1adf8:	48 89 33             	mov    %rsi,(%rbx)
   1adfb:	48 89 f7             	mov    %rsi,%rdi
   1adfe:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1ae02:	e8 0f 8c ff ff       	call   13a16 <strlen>
   1ae07:	89 43 10             	mov    %eax,0x10(%rbx)
   1ae0a:	48 85 ed             	test   %rbp,%rbp
   1ae0d:	75 07                	jne    1ae16 <init_editbox+0x3f>
   1ae0f:	48 8d 2d 4a bb 00 00 	lea    0xbb4a(%rip),%rbp        # 26960 <_stdscr>
   1ae16:	8b 44 24 30          	mov    0x30(%rsp),%eax
   1ae1a:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
   1ae1e:	44 89 6b 28          	mov    %r13d,0x28(%rbx)
   1ae22:	89 43 30             	mov    %eax,0x30(%rbx)
   1ae25:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1ae29:	44 89 63 2c          	mov    %r12d,0x2c(%rbx)
   1ae2d:	89 43 38             	mov    %eax,0x38(%rbx)
   1ae30:	58                   	pop    %rax
   1ae31:	5b                   	pop    %rbx
   1ae32:	5d                   	pop    %rbp
   1ae33:	41 5c                	pop    %r12
   1ae35:	41 5d                	pop    %r13
   1ae37:	c3                   	ret    

000000000001ae38 <draw_editbox>:
   1ae38:	f3 0f 1e fa          	endbr64 
   1ae3c:	55                   	push   %rbp
   1ae3d:	48 89 e5             	mov    %rsp,%rbp
   1ae40:	41 57                	push   %r15
   1ae42:	41 56                	push   %r14
   1ae44:	41 55                	push   %r13
   1ae46:	41 54                	push   %r12
   1ae48:	53                   	push   %rbx
   1ae49:	48 89 fb             	mov    %rdi,%rbx
   1ae4c:	48 83 ec 28          	sub    $0x28,%rsp
   1ae50:	44 8b 7f 30          	mov    0x30(%rdi),%r15d
   1ae54:	48 8b 05 f5 f1 00 00 	mov    0xf1f5(%rip),%rax        # 2a050 <__stack_chk_guard>
   1ae5b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1ae5f:	31 c0                	xor    %eax,%eax
   1ae61:	48 89 e2             	mov    %rsp,%rdx
   1ae64:	49 8d 47 10          	lea    0x10(%r15),%rax
   1ae68:	4c 89 f9             	mov    %r15,%rcx
   1ae6b:	48 c1 e8 04          	shr    $0x4,%rax
   1ae6f:	48 c1 e0 04          	shl    $0x4,%rax
   1ae73:	48 89 c6             	mov    %rax,%rsi
   1ae76:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   1ae7d:	48 29 f2             	sub    %rsi,%rdx
   1ae80:	48 39 d4             	cmp    %rdx,%rsp
   1ae83:	74 12                	je     1ae97 <draw_editbox+0x5f>
   1ae85:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1ae8c:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1ae93:	00 00 
   1ae95:	eb e9                	jmp    1ae80 <draw_editbox+0x48>
   1ae97:	25 ff 0f 00 00       	and    $0xfff,%eax
   1ae9c:	48 29 c4             	sub    %rax,%rsp
   1ae9f:	48 85 c0             	test   %rax,%rax
   1aea2:	74 06                	je     1aeaa <draw_editbox+0x72>
   1aea4:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1aeaa:	44 8b 6b 10          	mov    0x10(%rbx),%r13d
   1aeae:	44 8b 63 34          	mov    0x34(%rbx),%r12d
   1aeb2:	ba 03 00 00 00       	mov    $0x3,%edx
   1aeb7:	49 89 e6             	mov    %rsp,%r14
   1aeba:	44 89 e8             	mov    %r13d,%eax
   1aebd:	44 29 e0             	sub    %r12d,%eax
   1aec0:	29 c2                	sub    %eax,%edx
   1aec2:	85 d2                	test   %edx,%edx
   1aec4:	7e 0e                	jle    1aed4 <draw_editbox+0x9c>
   1aec6:	41 29 d4             	sub    %edx,%r12d
   1aec9:	b8 00 00 00 00       	mov    $0x0,%eax
   1aece:	44 0f 48 e0          	cmovs  %eax,%r12d
   1aed2:	eb 0b                	jmp    1aedf <draw_editbox+0xa7>
   1aed4:	29 c8                	sub    %ecx,%eax
   1aed6:	ff c0                	inc    %eax
   1aed8:	85 c0                	test   %eax,%eax
   1aeda:	7e 03                	jle    1aedf <draw_editbox+0xa7>
   1aedc:	41 01 c4             	add    %eax,%r12d
   1aedf:	44 89 63 34          	mov    %r12d,0x34(%rbx)
   1aee3:	4c 89 f7             	mov    %r14,%rdi
   1aee6:	4c 89 f9             	mov    %r15,%rcx
   1aee9:	b8 5f 00 00 00       	mov    $0x5f,%eax
   1aeee:	f3 aa                	rep stos %al,%es:(%rdi)
   1aef0:	48 8b 33             	mov    (%rbx),%rsi
   1aef3:	43 c6 04 3e 00       	movb   $0x0,(%r14,%r15,1)
   1aef8:	48 89 f7             	mov    %rsi,%rdi
   1aefb:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
   1aeff:	e8 12 8b ff ff       	call   13a16 <strlen>
   1af04:	49 63 cc             	movslq %r12d,%rcx
   1af07:	4c 89 fa             	mov    %r15,%rdx
   1af0a:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   1af0e:	48 29 c8             	sub    %rcx,%rax
   1af11:	4c 39 f8             	cmp    %r15,%rax
   1af14:	48 0f 46 d0          	cmovbe %rax,%rdx
   1af18:	f6 43 38 01          	testb  $0x1,0x38(%rbx)
   1af1c:	74 0f                	je     1af2d <draw_editbox+0xf5>
   1af1e:	4c 89 f7             	mov    %r14,%rdi
   1af21:	48 89 d1             	mov    %rdx,%rcx
   1af24:	b8 2a 00 00 00       	mov    $0x2a,%eax
   1af29:	f3 aa                	rep stos %al,%es:(%rdi)
   1af2b:	eb 0b                	jmp    1af38 <draw_editbox+0x100>
   1af2d:	48 01 ce             	add    %rcx,%rsi
   1af30:	4c 89 f7             	mov    %r14,%rdi
   1af33:	e8 b1 c4 ff ff       	call   173e9 <__memcpy>
   1af38:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
   1af3d:	75 0b                	jne    1af4a <draw_editbox+0x112>
   1af3f:	48 8d 05 1a ba 00 00 	lea    0xba1a(%rip),%rax        # 26960 <_stdscr>
   1af46:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1af4a:	8b 53 2c             	mov    0x2c(%rbx),%edx
   1af4d:	8b 73 28             	mov    0x28(%rbx),%esi
   1af50:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1af54:	e8 62 26 ff ff       	call   d5bb <wmove>
   1af59:	85 c0                	test   %eax,%eax
   1af5b:	75 13                	jne    1af70 <draw_editbox+0x138>
   1af5d:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1af61:	4c 89 f2             	mov    %r14,%rdx
   1af64:	48 8d 35 96 87 00 00 	lea    0x8796(%rip),%rsi        # 23701 <.LC0>
   1af6b:	e8 28 4a ff ff       	call   f998 <wprintw>
   1af70:	8b 53 2c             	mov    0x2c(%rbx),%edx
   1af73:	8b 73 28             	mov    0x28(%rbx),%esi
   1af76:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1af7a:	44 01 ea             	add    %r13d,%edx
   1af7d:	44 29 e2             	sub    %r12d,%edx
   1af80:	e8 36 26 ff ff       	call   d5bb <wmove>
   1af85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1af89:	48 2b 05 c0 f0 00 00 	sub    0xf0c0(%rip),%rax        # 2a050 <__stack_chk_guard>
   1af90:	74 05                	je     1af97 <draw_editbox+0x15f>
   1af92:	e8 c9 7a fe ff       	call   2a60 <__stack_chk_fail>
   1af97:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1af9b:	5b                   	pop    %rbx
   1af9c:	41 5c                	pop    %r12
   1af9e:	41 5d                	pop    %r13
   1afa0:	41 5e                	pop    %r14
   1afa2:	41 5f                	pop    %r15
   1afa4:	5d                   	pop    %rbp
   1afa5:	c3                   	ret    

000000000001afa6 <insert_delete>:
   1afa6:	41 57                	push   %r15
   1afa8:	41 56                	push   %r14
   1afaa:	41 55                	push   %r13
   1afac:	41 54                	push   %r12
   1afae:	49 89 d4             	mov    %rdx,%r12
   1afb1:	55                   	push   %rbp
   1afb2:	48 89 fd             	mov    %rdi,%rbp
   1afb5:	53                   	push   %rbx
   1afb6:	48 89 f3             	mov    %rsi,%rbx
   1afb9:	48 83 ec 28          	sub    $0x28,%rsp
   1afbd:	4c 8b 2f             	mov    (%rdi),%r13
   1afc0:	4c 89 ef             	mov    %r13,%rdi
   1afc3:	e8 4e 8a ff ff       	call   13a16 <strlen>
   1afc8:	8b 4d 10             	mov    0x10(%rbp),%ecx
   1afcb:	49 89 c7             	mov    %rax,%r15
   1afce:	48 89 c2             	mov    %rax,%rdx
   1afd1:	49 29 cf             	sub    %rcx,%r15
   1afd4:	49 89 c8             	mov    %rcx,%r8
   1afd7:	49 39 df             	cmp    %rbx,%r15
   1afda:	49 0f 46 df          	cmovbe %r15,%rbx
   1afde:	31 c0                	xor    %eax,%eax
   1afe0:	4d 85 e4             	test   %r12,%r12
   1afe3:	74 25                	je     1b00a <insert_delete+0x64>
   1afe5:	4c 89 e7             	mov    %r12,%rdi
   1afe8:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1afed:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1aff2:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   1aff6:	e8 1b 8a ff ff       	call   13a16 <strlen>
   1affb:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1b000:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1b005:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   1b00a:	49 89 d6             	mov    %rdx,%r14
   1b00d:	44 89 45 18          	mov    %r8d,0x18(%rbp)
   1b011:	48 8d 34 19          	lea    (%rcx,%rbx,1),%rsi
   1b015:	49 f7 d6             	not    %r14
   1b018:	4c 03 75 08          	add    0x8(%rbp),%r14
   1b01c:	49 01 de             	add    %rbx,%r14
   1b01f:	49 39 c6             	cmp    %rax,%r14
   1b022:	4c 0f 47 f0          	cmova  %rax,%r14
   1b026:	48 89 d0             	mov    %rdx,%rax
   1b029:	48 29 d8             	sub    %rbx,%rax
   1b02c:	4c 01 f0             	add    %r14,%rax
   1b02f:	48 39 d0             	cmp    %rdx,%rax
   1b032:	48 0f 42 c2          	cmovb  %rdx,%rax
   1b036:	4c 01 f1             	add    %r14,%rcx
   1b039:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1b03d:	4c 01 ee             	add    %r13,%rsi
   1b040:	49 8d 7c 0d 00       	lea    0x0(%r13,%rcx,1),%rdi
   1b045:	48 29 da             	sub    %rbx,%rdx
   1b048:	89 45 1c             	mov    %eax,0x1c(%rbp)
   1b04b:	e8 bb c3 ff ff       	call   1740b <__memmove>
   1b050:	8b 7d 10             	mov    0x10(%rbp),%edi
   1b053:	4c 89 f2             	mov    %r14,%rdx
   1b056:	48 03 7d 00          	add    0x0(%rbp),%rdi
   1b05a:	4c 89 e6             	mov    %r12,%rsi
   1b05d:	e8 87 c3 ff ff       	call   173e9 <__memcpy>
   1b062:	44 01 75 10          	add    %r14d,0x10(%rbp)
   1b066:	48 83 c4 28          	add    $0x28,%rsp
   1b06a:	5b                   	pop    %rbx
   1b06b:	5d                   	pop    %rbp
   1b06c:	41 5c                	pop    %r12
   1b06e:	41 5d                	pop    %r13
   1b070:	41 5e                	pop    %r14
   1b072:	41 5f                	pop    %r15
   1b074:	c3                   	ret    

000000000001b075 <replace_string>:
   1b075:	f3 0f 1e fa          	endbr64 
   1b079:	c7 47 10 00 00 00 00 	movl   $0x0,0x10(%rdi)
   1b080:	48 89 f2             	mov    %rsi,%rdx
   1b083:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1b087:	e9 1a ff ff ff       	jmp    1afa6 <insert_delete>

000000000001b08c <edit_string>:
   1b08c:	f3 0f 1e fa          	endbr64 
   1b090:	41 54                	push   %r12
   1b092:	41 89 f4             	mov    %esi,%r12d
   1b095:	55                   	push   %rbp
   1b096:	48 89 fd             	mov    %rdi,%rbp
   1b099:	48 83 ec 18          	sub    $0x18,%rsp
   1b09d:	48 8b 3f             	mov    (%rdi),%rdi
   1b0a0:	48 8b 05 a9 ef 00 00 	mov    0xefa9(%rip),%rax        # 2a050 <__stack_chk_guard>
   1b0a7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b0ac:	31 c0                	xor    %eax,%eax
   1b0ae:	e8 63 89 ff ff       	call   13a16 <strlen>
   1b0b3:	8b 75 10             	mov    0x10(%rbp),%esi
   1b0b6:	41 8d 54 24 e0       	lea    -0x20(%r12),%edx
   1b0bb:	89 75 14             	mov    %esi,0x14(%rbp)
   1b0be:	89 75 18             	mov    %esi,0x18(%rbp)
   1b0c1:	89 75 1c             	mov    %esi,0x1c(%rbp)
   1b0c4:	83 fa 5e             	cmp    $0x5e,%edx
   1b0c7:	77 16                	ja     1b0df <edit_string+0x53>
   1b0c9:	44 88 64 24 06       	mov    %r12b,0x6(%rsp)
   1b0ce:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
   1b0d3:	31 f6                	xor    %esi,%esi
   1b0d5:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   1b0da:	e9 ee 00 00 00       	jmp    1b1cd <edit_string+0x141>
   1b0df:	41 83 fc 17          	cmp    $0x17,%r12d
   1b0e3:	7f 28                	jg     1b10d <edit_string+0x81>
   1b0e5:	45 85 e4             	test   %r12d,%r12d
   1b0e8:	0f 8e 25 01 00 00    	jle    1b213 <edit_string+0x187>
   1b0ee:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
   1b0f3:	83 fa 16             	cmp    $0x16,%edx
   1b0f6:	0f 87 17 01 00 00    	ja     1b213 <edit_string+0x187>
   1b0fc:	48 8d 0d e9 75 00 00 	lea    0x75e9(%rip),%rcx        # 226ec <empty_encap.0+0x3>
   1b103:	48 63 14 91          	movslq (%rcx,%rdx,4),%rdx
   1b107:	48 01 ca             	add    %rcx,%rdx
   1b10a:	3e ff e2             	notrack jmp *%rdx
   1b10d:	41 81 fc 46 01 00 00 	cmp    $0x146,%r12d
   1b114:	0f 84 da 00 00 00    	je     1b1f4 <edit_string+0x168>
   1b11a:	7f 1f                	jg     1b13b <edit_string+0xaf>
   1b11c:	41 81 fc 43 01 00 00 	cmp    $0x143,%r12d
   1b123:	0f 84 db 00 00 00    	je     1b204 <edit_string+0x178>
   1b129:	41 81 fc 44 01 00 00 	cmp    $0x144,%r12d
   1b130:	0f 84 c3 00 00 00    	je     1b1f9 <edit_string+0x16d>
   1b136:	e9 d8 00 00 00       	jmp    1b213 <edit_string+0x187>
   1b13b:	41 81 fc 48 01 00 00 	cmp    $0x148,%r12d
   1b142:	0f 84 a3 00 00 00    	je     1b1eb <edit_string+0x15f>
   1b148:	41 81 fc 7e 04 00 00 	cmp    $0x47e,%r12d
   1b14f:	74 29                	je     1b17a <edit_string+0xee>
   1b151:	e9 bd 00 00 00       	jmp    1b213 <edit_string+0x187>
   1b156:	45 31 e4             	xor    %r12d,%r12d
   1b159:	85 f6                	test   %esi,%esi
   1b15b:	0f 84 b2 00 00 00    	je     1b213 <edit_string+0x187>
   1b161:	ff ce                	dec    %esi
   1b163:	31 d2                	xor    %edx,%edx
   1b165:	48 89 ef             	mov    %rbp,%rdi
   1b168:	89 75 10             	mov    %esi,0x10(%rbp)
   1b16b:	be 01 00 00 00       	mov    $0x1,%esi
   1b170:	e8 31 fe ff ff       	call   1afa6 <insert_delete>
   1b175:	e9 99 00 00 00       	jmp    1b213 <edit_string+0x187>
   1b17a:	31 d2                	xor    %edx,%edx
   1b17c:	be 01 00 00 00       	mov    $0x1,%esi
   1b181:	eb 4a                	jmp    1b1cd <edit_string+0x141>
   1b183:	41 89 f4             	mov    %esi,%r12d
   1b186:	8b 45 10             	mov    0x10(%rbp),%eax
   1b189:	85 c0                	test   %eax,%eax
   1b18b:	74 2e                	je     1b1bb <edit_string+0x12f>
   1b18d:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1b191:	ff c8                	dec    %eax
   1b193:	0f be 3c 02          	movsbl (%rdx,%rax,1),%edi
   1b197:	e8 f0 e2 ff ff       	call   1948c <isspace>
   1b19c:	85 c0                	test   %eax,%eax
   1b19e:	74 1b                	je     1b1bb <edit_string+0x12f>
   1b1a0:	ff 4d 10             	decl   0x10(%rbp)
   1b1a3:	eb e1                	jmp    1b186 <edit_string+0xfa>
   1b1a5:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1b1a9:	ff c8                	dec    %eax
   1b1ab:	0f be 3c 02          	movsbl (%rdx,%rax,1),%edi
   1b1af:	e8 d8 e2 ff ff       	call   1948c <isspace>
   1b1b4:	85 c0                	test   %eax,%eax
   1b1b6:	75 0a                	jne    1b1c2 <edit_string+0x136>
   1b1b8:	ff 4d 10             	decl   0x10(%rbp)
   1b1bb:	8b 45 10             	mov    0x10(%rbp),%eax
   1b1be:	85 c0                	test   %eax,%eax
   1b1c0:	75 e3                	jne    1b1a5 <edit_string+0x119>
   1b1c2:	8b 45 10             	mov    0x10(%rbp),%eax
   1b1c5:	4c 89 e6             	mov    %r12,%rsi
   1b1c8:	48 29 c6             	sub    %rax,%rsi
   1b1cb:	31 d2                	xor    %edx,%edx
   1b1cd:	48 89 ef             	mov    %rbp,%rdi
   1b1d0:	e8 d1 fd ff ff       	call   1afa6 <insert_delete>
   1b1d5:	45 31 e4             	xor    %r12d,%r12d
   1b1d8:	eb 39                	jmp    1b213 <edit_string+0x187>
   1b1da:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
   1b1e1:	eb e8                	jmp    1b1cb <edit_string+0x13f>
   1b1e3:	31 d2                	xor    %edx,%edx
   1b1e5:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1b1e9:	eb e2                	jmp    1b1cd <edit_string+0x141>
   1b1eb:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
   1b1f2:	eb e1                	jmp    1b1d5 <edit_string+0x149>
   1b1f4:	89 45 10             	mov    %eax,0x10(%rbp)
   1b1f7:	eb dc                	jmp    1b1d5 <edit_string+0x149>
   1b1f9:	45 31 e4             	xor    %r12d,%r12d
   1b1fc:	85 f6                	test   %esi,%esi
   1b1fe:	74 13                	je     1b213 <edit_string+0x187>
   1b200:	ff ce                	dec    %esi
   1b202:	eb 0c                	jmp    1b210 <edit_string+0x184>
   1b204:	89 f2                	mov    %esi,%edx
   1b206:	45 31 e4             	xor    %r12d,%r12d
   1b209:	48 39 c2             	cmp    %rax,%rdx
   1b20c:	73 05                	jae    1b213 <edit_string+0x187>
   1b20e:	ff c6                	inc    %esi
   1b210:	89 75 10             	mov    %esi,0x10(%rbp)
   1b213:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1b218:	48 2b 05 31 ee 00 00 	sub    0xee31(%rip),%rax        # 2a050 <__stack_chk_guard>
   1b21f:	74 05                	je     1b226 <edit_string+0x19a>
   1b221:	e8 3a 78 fe ff       	call   2a60 <__stack_chk_fail>
   1b226:	48 83 c4 18          	add    $0x18,%rsp
   1b22a:	44 89 e0             	mov    %r12d,%eax
   1b22d:	5d                   	pop    %rbp
   1b22e:	41 5c                	pop    %r12
   1b230:	c3                   	ret    

000000000001b231 <efi_block_io_flush>:
   1b231:	f3 0f 1e fa          	endbr64 
   1b235:	31 c0                	xor    %eax,%eax
   1b237:	c3                   	ret    

000000000001b238 <efi_block_install>:
   1b238:	f3 0f 1e fa          	endbr64 
   1b23c:	41 54                	push   %r12
   1b23e:	49 89 fc             	mov    %rdi,%r12
   1b241:	55                   	push   %rbp
   1b242:	53                   	push   %rbx
   1b243:	8b 5f 04             	mov    0x4(%rdi),%ebx
   1b246:	bf 18 00 00 00       	mov    $0x18,%edi
   1b24b:	e8 e6 14 ff ff       	call   c736 <zalloc>
   1b250:	48 85 c0             	test   %rax,%rax
   1b253:	75 0b                	jne    1b260 <efi_block_install+0x28>
   1b255:	41 bc 77 df dd ce    	mov    $0xcedddf77,%r12d
   1b25b:	e9 8e 00 00 00       	jmp    1b2ee <efi_block_install+0xb6>
   1b260:	49 8d 7c 24 0a       	lea    0xa(%r12),%rdi
   1b265:	ba 06 00 00 00       	mov    $0x6,%edx
   1b26a:	48 8d 35 f0 8e 00 00 	lea    0x8ef0(%rip),%rsi        # 24161 <.LC0>
   1b271:	48 89 c5             	mov    %rax,%rbp
   1b274:	e8 34 88 ff ff       	call   13aad <strncpy>
   1b279:	ba 08 00 00 00       	mov    $0x8,%edx
   1b27e:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
   1b283:	48 8d 35 de 8e 00 00 	lea    0x8ede(%rip),%rsi        # 24168 <.LC1>
   1b28a:	e8 1e 88 ff ff       	call   13aad <strncpy>
   1b28f:	4c 89 e7             	mov    %r12,%rdi
   1b292:	e8 ca c8 ff ff       	call   17b61 <acpi_fix_checksum>
   1b297:	48 83 ec 20          	sub    $0x20,%rsp
   1b29b:	4c 8d 4d 10          	lea    0x10(%rbp),%r9
   1b29f:	49 89 d8             	mov    %rbx,%r8
   1b2a2:	48 8b 05 ef ec 00 00 	mov    0xecef(%rip),%rax        # 29f98 <acpi>
   1b2a9:	4c 89 e2             	mov    %r12,%rdx
   1b2ac:	48 89 c1             	mov    %rax,%rcx
   1b2af:	ff 10                	call   *(%rax)
   1b2b1:	48 83 c4 20          	add    $0x20,%rsp
   1b2b5:	48 85 c0             	test   %rax,%rax
   1b2b8:	74 22                	je     1b2dc <efi_block_install+0xa4>
   1b2ba:	49 89 c4             	mov    %rax,%r12
   1b2bd:	48 89 ef             	mov    %rbp,%rdi
   1b2c0:	49 c1 ec 38          	shr    $0x38,%r12
   1b2c4:	41 09 c4             	or     %eax,%r12d
   1b2c7:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b2cb:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b2d2:	41 f7 dc             	neg    %r12d
   1b2d5:	e8 48 14 ff ff       	call   c722 <free>
   1b2da:	eb 12                	jmp    1b2ee <efi_block_install+0xb6>
   1b2dc:	48 8d 35 bd c6 00 00 	lea    0xc6bd(%rip),%rsi        # 279a0 <efi_acpi_tables>
   1b2e3:	48 89 ef             	mov    %rbp,%rdi
   1b2e6:	45 31 e4             	xor    %r12d,%r12d
   1b2e9:	e8 b9 0e ff ff       	call   c1a7 <extern_list_add_tail>
   1b2ee:	44 89 e0             	mov    %r12d,%eax
   1b2f1:	5b                   	pop    %rbx
   1b2f2:	5d                   	pop    %rbp
   1b2f3:	41 5c                	pop    %r12
   1b2f5:	c3                   	ret    

000000000001b2f6 <efi_block_rw>:
   1b2f6:	48 8b 87 c0 00 00 00 	mov    0xc0(%rdi),%rax
   1b2fd:	49 89 d2             	mov    %rdx,%r10
   1b300:	31 d2                	xor    %edx,%edx
   1b302:	49 89 f1             	mov    %rsi,%r9
   1b305:	44 8b 58 1c          	mov    0x1c(%rax),%r11d
   1b309:	48 89 c8             	mov    %rcx,%rax
   1b30c:	49 f7 f3             	div    %r11
   1b30f:	4c 89 de             	mov    %r11,%rsi
   1b312:	0f af f0             	imul   %eax,%esi
   1b315:	89 c2                	mov    %eax,%edx
   1b317:	48 39 ce             	cmp    %rcx,%rsi
   1b31a:	75 09                	jne    1b325 <efi_block_rw+0x2f>
   1b31c:	4c 89 d1             	mov    %r10,%rcx
   1b31f:	4c 89 ce             	mov    %r9,%rsi
   1b322:	41 ff e0             	jmp    *%r8
   1b325:	b8 7e df dd e3       	mov    $0xe3dddf7e,%eax
   1b32a:	c3                   	ret    

000000000001b32b <efi_block_io_write>:
   1b32b:	f3 0f 1e fa          	endbr64 
   1b32f:	41 55                	push   %r13
   1b331:	41 54                	push   %r12
   1b333:	4d 89 cc             	mov    %r9,%r12
   1b336:	55                   	push   %rbp
   1b337:	4c 89 c5             	mov    %r8,%rbp
   1b33a:	57                   	push   %rdi
   1b33b:	bf 01 00 00 00       	mov    $0x1,%edi
   1b340:	56                   	push   %rsi
   1b341:	53                   	push   %rbx
   1b342:	50                   	push   %rax
   1b343:	4c 8b 69 c0          	mov    -0x40(%rcx),%r13
   1b347:	e8 5b a7 fe ff       	call   5aa7 <efi_snp_add_claim>
   1b34c:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   1b351:	4c 89 e1             	mov    %r12,%rcx
   1b354:	48 89 ee             	mov    %rbp,%rsi
   1b357:	4c 89 ef             	mov    %r13,%rdi
   1b35a:	4c 8d 05 51 57 00 00 	lea    0x5751(%rip),%r8        # 20ab2 <sandev_write>
   1b361:	e8 90 ff ff ff       	call   1b2f6 <efi_block_rw>
   1b366:	83 cf ff             	or     $0xffffffff,%edi
   1b369:	89 c3                	mov    %eax,%ebx
   1b36b:	e8 37 a7 fe ff       	call   5aa7 <efi_snp_add_claim>
   1b370:	f7 db                	neg    %ebx
   1b372:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b377:	89 da                	mov    %ebx,%edx
   1b379:	48 c1 e1 3f          	shl    $0x3f,%rcx
   1b37d:	48 89 d0             	mov    %rdx,%rax
   1b380:	83 e2 7f             	and    $0x7f,%edx
   1b383:	48 c1 e0 38          	shl    $0x38,%rax
   1b387:	48 21 c8             	and    %rcx,%rax
   1b38a:	48 09 d0             	or     %rdx,%rax
   1b38d:	5a                   	pop    %rdx
   1b38e:	5b                   	pop    %rbx
   1b38f:	5e                   	pop    %rsi
   1b390:	5f                   	pop    %rdi
   1b391:	5d                   	pop    %rbp
   1b392:	41 5c                	pop    %r12
   1b394:	41 5d                	pop    %r13
   1b396:	c3                   	ret    

000000000001b397 <efi_block_connect.isra.0>:
   1b397:	48 83 ec 28          	sub    $0x28,%rsp
   1b39b:	48 8b 05 d6 ec 00 00 	mov    0xecd6(%rip),%rax        # 2a078 <efi_systab>
   1b3a2:	45 31 c0             	xor    %r8d,%r8d
   1b3a5:	31 d2                	xor    %edx,%edx
   1b3a7:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   1b3ab:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1b3b1:	48 8b 40 60          	mov    0x60(%rax),%rax
   1b3b5:	ff 90 08 01 00 00    	call   *0x108(%rax)
   1b3bb:	48 83 c4 20          	add    $0x20,%rsp
   1b3bf:	48 85 c0             	test   %rax,%rax
   1b3c2:	74 00                	je     1b3c4 <efi_block_connect.isra.0+0x2d>
   1b3c4:	58                   	pop    %rax
   1b3c5:	c3                   	ret    

000000000001b3c6 <efi_block_io_reset>:
   1b3c6:	f3 0f 1e fa          	endbr64 
   1b3ca:	55                   	push   %rbp
   1b3cb:	57                   	push   %rdi
   1b3cc:	bf 01 00 00 00       	mov    $0x1,%edi
   1b3d1:	56                   	push   %rsi
   1b3d2:	53                   	push   %rbx
   1b3d3:	50                   	push   %rax
   1b3d4:	48 8b 69 c0          	mov    -0x40(%rcx),%rbp
   1b3d8:	e8 ca a6 fe ff       	call   5aa7 <efi_snp_add_claim>
   1b3dd:	48 89 ef             	mov    %rbp,%rdi
   1b3e0:	e8 b4 56 00 00       	call   20a99 <sandev_reset>
   1b3e5:	83 cf ff             	or     $0xffffffff,%edi
   1b3e8:	89 c3                	mov    %eax,%ebx
   1b3ea:	e8 b8 a6 fe ff       	call   5aa7 <efi_snp_add_claim>
   1b3ef:	f7 db                	neg    %ebx
   1b3f1:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b3f6:	89 da                	mov    %ebx,%edx
   1b3f8:	48 c1 e1 3f          	shl    $0x3f,%rcx
   1b3fc:	48 89 d0             	mov    %rdx,%rax
   1b3ff:	83 e2 7f             	and    $0x7f,%edx
   1b402:	48 c1 e0 38          	shl    $0x38,%rax
   1b406:	48 21 c8             	and    %rcx,%rax
   1b409:	48 09 d0             	or     %rdx,%rax
   1b40c:	5a                   	pop    %rdx
   1b40d:	5b                   	pop    %rbx
   1b40e:	5e                   	pop    %rsi
   1b40f:	5f                   	pop    %rdi
   1b410:	5d                   	pop    %rbp
   1b411:	c3                   	ret    

000000000001b412 <efi_block_io_read>:
   1b412:	f3 0f 1e fa          	endbr64 
   1b416:	41 55                	push   %r13
   1b418:	41 54                	push   %r12
   1b41a:	4d 89 cc             	mov    %r9,%r12
   1b41d:	55                   	push   %rbp
   1b41e:	4c 89 c5             	mov    %r8,%rbp
   1b421:	57                   	push   %rdi
   1b422:	bf 01 00 00 00       	mov    $0x1,%edi
   1b427:	56                   	push   %rsi
   1b428:	53                   	push   %rbx
   1b429:	50                   	push   %rax
   1b42a:	4c 8b 69 c0          	mov    -0x40(%rcx),%r13
   1b42e:	e8 74 a6 fe ff       	call   5aa7 <efi_snp_add_claim>
   1b433:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   1b438:	4c 89 e1             	mov    %r12,%rcx
   1b43b:	48 89 ee             	mov    %rbp,%rsi
   1b43e:	4c 89 ef             	mov    %r13,%rdi
   1b441:	4c 8d 05 5a 56 00 00 	lea    0x565a(%rip),%r8        # 20aa2 <sandev_read>
   1b448:	e8 a9 fe ff ff       	call   1b2f6 <efi_block_rw>
   1b44d:	83 cf ff             	or     $0xffffffff,%edi
   1b450:	89 c3                	mov    %eax,%ebx
   1b452:	e8 50 a6 fe ff       	call   5aa7 <efi_snp_add_claim>
   1b457:	f7 db                	neg    %ebx
   1b459:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b45e:	89 da                	mov    %ebx,%edx
   1b460:	48 c1 e1 3f          	shl    $0x3f,%rcx
   1b464:	48 89 d0             	mov    %rdx,%rax
   1b467:	83 e2 7f             	and    $0x7f,%edx
   1b46a:	48 c1 e0 38          	shl    $0x38,%rax
   1b46e:	48 21 c8             	and    %rcx,%rax
   1b471:	48 09 d0             	or     %rdx,%rax
   1b474:	5a                   	pop    %rdx
   1b475:	5b                   	pop    %rbx
   1b476:	5e                   	pop    %rsi
   1b477:	5f                   	pop    %rdi
   1b478:	5d                   	pop    %rbp
   1b479:	41 5c                	pop    %r12
   1b47b:	41 5d                	pop    %r13
   1b47d:	c3                   	ret    

000000000001b47e <san_hook>:
   1b47e:	f3 0f 1e fa          	endbr64 
   1b482:	41 57                	push   %r15
   1b484:	41 56                	push   %r14
   1b486:	41 55                	push   %r13
   1b488:	41 54                	push   %r12
   1b48a:	55                   	push   %rbp
   1b48b:	53                   	push   %rbx
   1b48c:	48 83 ec 28          	sub    $0x28,%rsp
   1b490:	48 8b 05 e1 eb 00 00 	mov    0xebe1(%rip),%rax        # 2a078 <efi_systab>
   1b497:	89 7c 24 08          	mov    %edi,0x8(%rsp)
   1b49b:	48 8b 40 60          	mov    0x60(%rax),%rax
   1b49f:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   1b4a3:	48 89 04 24          	mov    %rax,(%rsp)
   1b4a7:	85 d2                	test   %edx,%edx
   1b4a9:	75 0b                	jne    1b4b6 <san_hook+0x38>
   1b4ab:	41 bc 7d df dd c2    	mov    $0xc2dddf7d,%r12d
   1b4b1:	e9 f3 01 00 00       	jmp    1b6a9 <san_hook+0x22b>
   1b4b6:	49 89 f5             	mov    %rsi,%r13
   1b4b9:	89 d5                	mov    %edx,%ebp
   1b4bb:	e8 cb a5 fe ff       	call   5a8b <last_opened_snpdev>
   1b4c0:	48 85 c0             	test   %rax,%rax
   1b4c3:	75 0b                	jne    1b4d0 <san_hook+0x52>
   1b4c5:	41 bc 79 df dd d3    	mov    $0xd3dddf79,%r12d
   1b4cb:	e9 d9 01 00 00       	jmp    1b6a9 <san_hook+0x22b>
   1b4d0:	48 8b b8 90 05 00 00 	mov    0x590(%rax),%rdi
   1b4d7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1b4dc:	e8 a9 b5 fe ff       	call   6a8a <efi_devpath_len>
   1b4e1:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1b4e5:	31 d2                	xor    %edx,%edx
   1b4e7:	31 f6                	xor    %esi,%esi
   1b4e9:	48 89 c3             	mov    %rax,%rbx
   1b4ec:	e8 76 b2 ff ff       	call   16767 <format_uri>
   1b4f1:	89 ee                	mov    %ebp,%esi
   1b4f3:	4c 89 ef             	mov    %r13,%rdi
   1b4f6:	4c 8d 60 0b          	lea    0xb(%rax),%r12
   1b4fa:	48 8d 54 03 7d       	lea    0x7d(%rbx,%rax,1),%rdx
   1b4ff:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b504:	4d 01 e4             	add    %r12,%r12
   1b507:	4c 01 e2             	add    %r12,%rdx
   1b50a:	e8 cd 55 00 00       	call   20adc <alloc_sandev>
   1b50f:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1b514:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b519:	48 85 c0             	test   %rax,%rax
   1b51c:	49 89 c7             	mov    %rax,%r15
   1b51f:	75 0b                	jne    1b52c <san_hook+0xae>
   1b521:	41 bc 77 df dd ce    	mov    $0xcedddf77,%r12d
   1b527:	e9 7d 01 00 00       	jmp    1b6a9 <san_hook+0x22b>
   1b52c:	4c 8b b0 c0 00 00 00 	mov    0xc0(%rax),%r14
   1b533:	49 8d 6b 01          	lea    0x1(%r11),%rbp
   1b537:	48 89 da             	mov    %rbx,%rdx
   1b53a:	49 89 06             	mov    %rax,(%r14)
   1b53d:	49 8d 46 10          	lea    0x10(%r14),%rax
   1b541:	49 8d 4e 78          	lea    0x78(%r14),%rcx
   1b545:	49 89 46 48          	mov    %rax,0x48(%r14)
   1b549:	48 8d 05 76 fe ff ff 	lea    -0x18a(%rip),%rax        # 1b3c6 <efi_block_io_reset>
   1b550:	48 8d 3c 29          	lea    (%rcx,%rbp,1),%rdi
   1b554:	49 89 46 50          	mov    %rax,0x50(%r14)
   1b558:	48 8d 05 b3 fe ff ff 	lea    -0x14d(%rip),%rax        # 1b412 <efi_block_io_read>
   1b55f:	49 89 46 58          	mov    %rax,0x58(%r14)
   1b563:	48 8d 05 c1 fd ff ff 	lea    -0x23f(%rip),%rax        # 1b32b <efi_block_io_write>
   1b56a:	49 89 46 60          	mov    %rax,0x60(%r14)
   1b56e:	48 8d 05 bc fc ff ff 	lea    -0x344(%rip),%rax        # 1b231 <efi_block_io_flush>
   1b575:	41 c6 46 15 01       	movb   $0x1,0x15(%r14)
   1b57a:	49 8b b1 90 05 00 00 	mov    0x590(%r9),%rsi
   1b581:	49 89 7e 70          	mov    %rdi,0x70(%r14)
   1b585:	41 c7 46 38 01 00 00 	movl   $0x1,0x38(%r14)
   1b58c:	00 
   1b58d:	49 c7 46 40 31 00 02 	movq   $0x20031,0x40(%r14)
   1b594:	00 
   1b595:	49 89 46 68          	mov    %rax,0x68(%r14)
   1b599:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1b59e:	e8 46 be ff ff       	call   173e9 <__memcpy>
   1b5a3:	49 03 5e 70          	add    0x70(%r14),%rbx
   1b5a7:	48 8d 35 92 91 00 00 	lea    0x9192(%rip),%rsi        # 24740 <ipxe_block_device_path_guid>
   1b5ae:	66 c7 03 01 04       	movw   $0x401,(%rbx)
   1b5b3:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
   1b5b7:	66 44 89 63 02       	mov    %r12w,0x2(%rbx)
   1b5bc:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b5bd:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b5be:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b5bf:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b5c0:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1b5c5:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1b5c9:	48 89 ea             	mov    %rbp,%rdx
   1b5cc:	e8 96 b1 ff ff       	call   16767 <format_uri>
   1b5d1:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1b5d6:	48 8d 7b 14          	lea    0x14(%rbx),%rdi
   1b5da:	31 c0                	xor    %eax,%eax
   1b5dc:	4c 01 e3             	add    %r12,%rbx
   1b5df:	48 8d 15 1b 81 00 00 	lea    0x811b(%rip),%rdx        # 23701 <.LC0>
   1b5e6:	48 89 ee             	mov    %rbp,%rsi
   1b5e9:	e8 26 b4 fe ff       	call   6a14 <efi_snprintf>
   1b5ee:	c6 43 02 04          	movb   $0x4,0x2(%rbx)
   1b5f2:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   1b5f6:	4c 89 ff             	mov    %r15,%rdi
   1b5f9:	66 c7 03 7f ff       	movw   $0xff7f,(%rbx)
   1b5fe:	8b 74 24 08          	mov    0x8(%rsp),%esi
   1b602:	e8 2a 56 00 00       	call   20c31 <register_sandev>
   1b607:	41 89 c4             	mov    %eax,%r12d
   1b60a:	85 c0                	test   %eax,%eax
   1b60c:	0f 85 8f 00 00 00    	jne    1b6a1 <san_hook+0x223>
   1b612:	41 8b 8f b8 00 00 00 	mov    0xb8(%r15),%ecx
   1b619:	49 8b 87 a8 00 00 00 	mov    0xa8(%r15),%rax
   1b620:	4d 8d 46 40          	lea    0x40(%r14),%r8
   1b624:	4c 8d 0d 65 94 00 00 	lea    0x9465(%rip),%r9        # 24a90 <efi_device_path_protocol_guid>
   1b62b:	48 8d 15 be 94 00 00 	lea    0x94be(%rip),%rdx        # 24af0 <efi_block_io_protocol_guid>
   1b632:	48 d3 e0             	shl    %cl,%rax
   1b635:	41 89 46 1c          	mov    %eax,0x1c(%r14)
   1b639:	49 8b 87 a0 00 00 00 	mov    0xa0(%r15),%rax
   1b640:	48 d3 e8             	shr    %cl,%rax
   1b643:	49 8d 4e 08          	lea    0x8(%r14),%rcx
   1b647:	48 ff c8             	dec    %rax
   1b64a:	49 89 46 28          	mov    %rax,0x28(%r14)
   1b64e:	6a 00                	push   $0x0
   1b650:	41 ff 76 70          	push   0x70(%r14)
   1b654:	48 83 ec 20          	sub    $0x20,%rsp
   1b658:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1b65d:	ff 90 48 01 00 00    	call   *0x148(%rax)
   1b663:	48 83 c4 30          	add    $0x30,%rsp
   1b667:	48 85 c0             	test   %rax,%rax
   1b66a:	74 22                	je     1b68e <san_hook+0x210>
   1b66c:	49 89 c4             	mov    %rax,%r12
   1b66f:	4c 89 ff             	mov    %r15,%rdi
   1b672:	49 c1 ec 38          	shr    $0x38,%r12
   1b676:	41 09 c4             	or     %eax,%r12d
   1b679:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b67d:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b684:	41 f7 dc             	neg    %r12d
   1b687:	e8 53 57 00 00       	call   20ddf <unregister_sandev>
   1b68c:	eb 13                	jmp    1b6a1 <san_hook+0x223>
   1b68e:	49 8b bf c0 00 00 00 	mov    0xc0(%r15),%rdi
   1b695:	e8 fd fc ff ff       	call   1b397 <efi_block_connect.isra.0>
   1b69a:	44 8b 64 24 08       	mov    0x8(%rsp),%r12d
   1b69f:	eb 08                	jmp    1b6a9 <san_hook+0x22b>
   1b6a1:	4c 89 ff             	mov    %r15,%rdi
   1b6a4:	e8 71 48 ff ff       	call   ff1a <ref_decrement>
   1b6a9:	48 83 c4 28          	add    $0x28,%rsp
   1b6ad:	44 89 e0             	mov    %r12d,%eax
   1b6b0:	5b                   	pop    %rbx
   1b6b1:	5d                   	pop    %rbp
   1b6b2:	41 5c                	pop    %r12
   1b6b4:	41 5d                	pop    %r13
   1b6b6:	41 5e                	pop    %r14
   1b6b8:	41 5f                	pop    %r15
   1b6ba:	c3                   	ret    

000000000001b6bb <san_unhook>:
   1b6bb:	f3 0f 1e fa          	endbr64 
   1b6bf:	55                   	push   %rbp
   1b6c0:	53                   	push   %rbx
   1b6c1:	51                   	push   %rcx
   1b6c2:	48 8b 05 af e9 00 00 	mov    0xe9af(%rip),%rax        # 2a078 <efi_systab>
   1b6c9:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1b6cd:	e8 42 51 00 00       	call   20814 <sandev_find>
   1b6d2:	48 85 c0             	test   %rax,%rax
   1b6d5:	74 46                	je     1b71d <san_unhook+0x62>
   1b6d7:	48 89 c5             	mov    %rax,%rbp
   1b6da:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
   1b6e1:	48 8d 15 08 94 00 00 	lea    0x9408(%rip),%rdx        # 24af0 <efi_block_io_protocol_guid>
   1b6e8:	4c 8d 0d a1 93 00 00 	lea    0x93a1(%rip),%r9        # 24a90 <efi_device_path_protocol_guid>
   1b6ef:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1b6f3:	6a 00                	push   $0x0
   1b6f5:	4c 8d 40 40          	lea    0x40(%rax),%r8
   1b6f9:	ff 70 70             	push   0x70(%rax)
   1b6fc:	48 83 ec 20          	sub    $0x20,%rsp
   1b700:	ff 93 50 01 00 00    	call   *0x150(%rbx)
   1b706:	48 83 c4 30          	add    $0x30,%rsp
   1b70a:	48 89 ef             	mov    %rbp,%rdi
   1b70d:	e8 cd 56 00 00       	call   20ddf <unregister_sandev>
   1b712:	5a                   	pop    %rdx
   1b713:	48 89 ef             	mov    %rbp,%rdi
   1b716:	5b                   	pop    %rbx
   1b717:	5d                   	pop    %rbp
   1b718:	e9 fd 47 ff ff       	jmp    ff1a <ref_decrement>
   1b71d:	58                   	pop    %rax
   1b71e:	5b                   	pop    %rbx
   1b71f:	5d                   	pop    %rbp
   1b720:	c3                   	ret    

000000000001b721 <san_describe>:
   1b721:	f3 0f 1e fa          	endbr64 
   1b725:	48 83 3d 6b e8 00 00 	cmpq   $0x0,0xe86b(%rip)        # 29f98 <acpi>
   1b72c:	00 
   1b72d:	74 68                	je     1b797 <san_describe+0x76>
   1b72f:	41 54                	push   %r12
   1b731:	4c 8d 25 68 c2 00 00 	lea    0xc268(%rip),%r12        # 279a0 <efi_acpi_tables>
   1b738:	55                   	push   %rbp
   1b739:	48 8b 2d 60 c2 00 00 	mov    0xc260(%rip),%rbp        # 279a0 <efi_acpi_tables>
   1b740:	53                   	push   %rbx
   1b741:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
   1b745:	4c 39 e5             	cmp    %r12,%rbp
   1b748:	74 3d                	je     1b787 <san_describe+0x66>
   1b74a:	48 8b 05 47 e8 00 00 	mov    0xe847(%rip),%rax        # 29f98 <acpi>
   1b751:	48 83 ec 20          	sub    $0x20,%rsp
   1b755:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1b759:	48 89 c1             	mov    %rax,%rcx
   1b75c:	ff 50 08             	call   *0x8(%rax)
   1b75f:	48 83 c4 20          	add    $0x20,%rsp
   1b763:	48 85 c0             	test   %rax,%rax
   1b766:	74 00                	je     1b768 <san_describe+0x47>
   1b768:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1b76c:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1b770:	48 89 ef             	mov    %rbp,%rdi
   1b773:	48 89 dd             	mov    %rbx,%rbp
   1b776:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1b77a:	48 89 10             	mov    %rdx,(%rax)
   1b77d:	e8 a0 0f ff ff       	call   c722 <free>
   1b782:	48 8b 1b             	mov    (%rbx),%rbx
   1b785:	eb be                	jmp    1b745 <san_describe+0x24>
   1b787:	5b                   	pop    %rbx
   1b788:	48 8d 3d a9 fa ff ff 	lea    -0x557(%rip),%rdi        # 1b238 <efi_block_install>
   1b78f:	5d                   	pop    %rbp
   1b790:	41 5c                	pop    %r12
   1b792:	e9 1e c4 ff ff       	jmp    17bb5 <acpi_install>
   1b797:	b8 7d df dd c3       	mov    $0xc3dddf7d,%eax
   1b79c:	c3                   	ret    

000000000001b79d <san_boot>:
   1b79d:	f3 0f 1e fa          	endbr64 
   1b7a1:	41 57                	push   %r15
   1b7a3:	41 56                	push   %r14
   1b7a5:	41 55                	push   %r13
   1b7a7:	49 89 f5             	mov    %rsi,%r13
   1b7aa:	41 54                	push   %r12
   1b7ac:	55                   	push   %rbp
   1b7ad:	53                   	push   %rbx
   1b7ae:	48 83 ec 58          	sub    $0x58,%rsp
   1b7b2:	48 8b 05 97 e8 00 00 	mov    0xe897(%rip),%rax        # 2a050 <__stack_chk_guard>
   1b7b9:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1b7be:	48 8b 05 b3 e8 00 00 	mov    0xe8b3(%rip),%rax        # 2a078 <efi_systab>
   1b7c5:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1b7cc:	00 00 
   1b7ce:	4c 8b 78 60          	mov    0x60(%rax),%r15
   1b7d2:	e8 3d 50 00 00       	call   20814 <sandev_find>
   1b7d7:	48 85 c0             	test   %rax,%rax
   1b7da:	75 0b                	jne    1b7e7 <san_boot+0x4a>
   1b7dc:	41 bc 79 df dd d3    	mov    $0xd3dddf79,%r12d
   1b7e2:	e9 bf 02 00 00       	jmp    1baa6 <san_boot+0x309>
   1b7e7:	49 89 c6             	mov    %rax,%r14
   1b7ea:	83 cf ff             	or     $0xffffffff,%edi
   1b7ed:	e8 b5 a2 fe ff       	call   5aa7 <efi_snp_add_claim>
   1b7f2:	49 8b be c0 00 00 00 	mov    0xc0(%r14),%rdi
   1b7f9:	e8 99 fb ff ff       	call   1b397 <efi_block_connect.isra.0>
   1b7fe:	45 31 c0             	xor    %r8d,%r8d
   1b801:	b9 02 00 00 00       	mov    $0x2,%ecx
   1b806:	48 8d 15 f3 90 00 00 	lea    0x90f3(%rip),%rdx        # 24900 <efi_simple_file_system_protocol_guid>
   1b80d:	50                   	push   %rax
   1b80e:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1b813:	50                   	push   %rax
   1b814:	48 83 ec 20          	sub    $0x20,%rsp
   1b818:	4c 8d 4c 24 68       	lea    0x68(%rsp),%r9
   1b81d:	41 ff 97 38 01 00 00 	call   *0x138(%r15)
   1b824:	48 83 c4 30          	add    $0x30,%rsp
   1b828:	48 85 c0             	test   %rax,%rax
   1b82b:	74 1d                	je     1b84a <san_boot+0xad>
   1b82d:	49 89 c4             	mov    %rax,%r12
   1b830:	49 c1 ec 38          	shr    $0x38,%r12
   1b834:	41 09 c4             	or     %eax,%r12d
   1b837:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b83b:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b842:	41 f7 dc             	neg    %r12d
   1b845:	e9 52 02 00 00       	jmp    1ba9c <san_boot+0x2ff>
   1b84a:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   1b851:	00 
   1b852:	41 bc 72 df dd d2    	mov    $0xd2dddf72,%r12d
   1b858:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   1b85c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1b861:	48 3b 44 24 38       	cmp    0x38(%rsp),%rax
   1b866:	0f 83 1f 02 00 00    	jae    1ba8b <san_boot+0x2ee>
   1b86c:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
   1b870:	48 8b 05 01 e8 00 00 	mov    0xe801(%rip),%rax        # 2a078 <efi_systab>
   1b877:	48 8d 15 12 92 00 00 	lea    0x9212(%rip),%rdx        # 24a90 <efi_device_path_protocol_guid>
   1b87e:	49 8b 9e c0 00 00 00 	mov    0xc0(%r14),%rbx
   1b885:	4c 8b 0d dc e7 00 00 	mov    0xe7dc(%rip),%r9        # 2a068 <efi_image_handle>
   1b88c:	48 8b 40 60          	mov    0x60(%rax),%rax
   1b890:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b895:	6a 02                	push   $0x2
   1b897:	51                   	push   %rcx
   1b898:	48 83 ec 20          	sub    $0x20,%rsp
   1b89c:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1b8a1:	4c 8d 44 24 70       	lea    0x70(%rsp),%r8
   1b8a6:	ff 90 18 01 00 00    	call   *0x118(%rax)
   1b8ac:	48 83 c4 30          	add    $0x30,%rsp
   1b8b0:	48 85 c0             	test   %rax,%rax
   1b8b3:	74 1d                	je     1b8d2 <san_boot+0x135>
   1b8b5:	49 89 c4             	mov    %rax,%r12
   1b8b8:	49 c1 ec 38          	shr    $0x38,%r12
   1b8bc:	41 09 c4             	or     %eax,%r12d
   1b8bf:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b8c3:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b8ca:	41 f7 dc             	neg    %r12d
   1b8cd:	e9 66 01 00 00       	jmp    1ba38 <san_boot+0x29b>
   1b8d2:	48 8b 7b 70          	mov    0x70(%rbx),%rdi
   1b8d6:	e8 af b1 fe ff       	call   6a8a <efi_devpath_len>
   1b8db:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   1b8e0:	48 8b 73 70          	mov    0x70(%rbx),%rsi
   1b8e4:	48 89 c2             	mov    %rax,%rdx
   1b8e7:	48 89 ef             	mov    %rbp,%rdi
   1b8ea:	e8 41 80 ff ff       	call   13930 <memcmp>
   1b8ef:	41 89 c4             	mov    %eax,%r12d
   1b8f2:	85 c0                	test   %eax,%eax
   1b8f4:	74 0b                	je     1b901 <san_boot+0x164>
   1b8f6:	41 bc 7d df dd c2    	mov    $0xc2dddf7d,%r12d
   1b8fc:	e9 37 01 00 00       	jmp    1ba38 <san_boot+0x29b>
   1b901:	48 89 ef             	mov    %rbp,%rdi
   1b904:	e8 6b b1 fe ff       	call   6a74 <efi_devpath_end>
   1b909:	48 2b 44 24 40       	sub    0x40(%rsp),%rax
   1b90e:	48 c7 44 24 08 30 00 	movq   $0x30,0x8(%rsp)
   1b915:	00 00 
   1b917:	48 89 c3             	mov    %rax,%rbx
   1b91a:	4d 85 ed             	test   %r13,%r13
   1b91d:	74 14                	je     1b933 <san_boot+0x196>
   1b91f:	4c 89 ef             	mov    %r13,%rdi
   1b922:	e8 ef 80 ff ff       	call   13a16 <strlen>
   1b927:	48 83 c0 03          	add    $0x3,%rax
   1b92b:	48 01 c0             	add    %rax,%rax
   1b92e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b933:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1b938:	48 8d 7c 03 04       	lea    0x4(%rbx,%rax,1),%rdi
   1b93d:	e8 f4 0d ff ff       	call   c736 <zalloc>
   1b942:	48 89 c5             	mov    %rax,%rbp
   1b945:	48 85 c0             	test   %rax,%rax
   1b948:	75 0b                	jne    1b955 <san_boot+0x1b8>
   1b94a:	41 bc 77 df dd ce    	mov    $0xcedddf77,%r12d
   1b950:	e9 e3 00 00 00       	jmp    1ba38 <san_boot+0x29b>
   1b955:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   1b95a:	48 89 da             	mov    %rbx,%rdx
   1b95d:	48 89 c7             	mov    %rax,%rdi
   1b960:	48 01 eb             	add    %rbp,%rbx
   1b963:	e8 81 ba ff ff       	call   173e9 <__memcpy>
   1b968:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1b96c:	66 c7 03 04 04       	movw   $0x404,(%rbx)
   1b971:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
   1b975:	66 89 43 02          	mov    %ax,0x2(%rbx)
   1b979:	4d 85 ed             	test   %r13,%r13
   1b97c:	74 17                	je     1b995 <san_boot+0x1f8>
   1b97e:	4c 89 e9             	mov    %r13,%rcx
   1b981:	48 8d 15 79 7d 00 00 	lea    0x7d79(%rip),%rdx        # 23701 <.LC0>
   1b988:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1b98c:	31 c0                	xor    %eax,%eax
   1b98e:	e8 81 b0 fe ff       	call   6a14 <efi_snprintf>
   1b993:	eb 11                	jmp    1b9a6 <san_boot+0x209>
   1b995:	ba 2c 00 00 00       	mov    $0x2c,%edx
   1b99a:	48 8d 35 bf 8d 00 00 	lea    0x8dbf(%rip),%rsi        # 24760 <efi_block_boot_filename>
   1b9a1:	e8 43 ba ff ff       	call   173e9 <__memcpy>
   1b9a6:	48 03 5c 24 08       	add    0x8(%rsp),%rbx
   1b9ab:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1b9b0:	45 31 c9             	xor    %r9d,%r9d
   1b9b3:	49 89 e8             	mov    %rbp,%r8
   1b9b6:	66 c7 03 7f ff       	movw   $0xff7f,(%rbx)
   1b9bb:	48 8b 15 a6 e6 00 00 	mov    0xe6a6(%rip),%rdx        # 2a068 <efi_image_handle>
   1b9c2:	31 c9                	xor    %ecx,%ecx
   1b9c4:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1b9cb:	00 00 
   1b9cd:	c6 43 02 04          	movb   $0x4,0x2(%rbx)
   1b9d1:	50                   	push   %rax
   1b9d2:	6a 00                	push   $0x0
   1b9d4:	48 83 ec 20          	sub    $0x20,%rsp
   1b9d8:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1b9dd:	ff 90 c8 00 00 00    	call   *0xc8(%rax)
   1b9e3:	48 83 c4 30          	add    $0x30,%rsp
   1b9e7:	48 85 c0             	test   %rax,%rax
   1b9ea:	74 3f                	je     1ba2b <san_boot+0x28e>
   1b9ec:	48 be 1a 00 00 00 00 	movabs $0x800000000000001a,%rsi
   1b9f3:	00 00 80 
   1b9f6:	49 89 c4             	mov    %rax,%r12
   1b9f9:	49 c1 ec 38          	shr    $0x38,%r12
   1b9fd:	41 09 c4             	or     %eax,%r12d
   1ba00:	45 0f b6 e4          	movzbl %r12b,%r12d
   1ba04:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1ba0b:	41 f7 dc             	neg    %r12d
   1ba0e:	48 39 f0             	cmp    %rsi,%rax
   1ba11:	75 18                	jne    1ba2b <san_boot+0x28e>
   1ba13:	48 83 ec 20          	sub    $0x20,%rsp
   1ba17:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1ba1c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1ba21:	ff 90 e0 00 00 00    	call   *0xe0(%rax)
   1ba27:	48 83 c4 20          	add    $0x20,%rsp
   1ba2b:	48 89 ef             	mov    %rbp,%rdi
   1ba2e:	e8 ef 0c ff ff       	call   c722 <free>
   1ba33:	45 85 e4             	test   %r12d,%r12d
   1ba36:	74 09                	je     1ba41 <san_boot+0x2a4>
   1ba38:	ff 44 24 1c          	incl   0x1c(%rsp)
   1ba3c:	e9 17 fe ff ff       	jmp    1b858 <san_boot+0xbb>
   1ba41:	48 83 ec 20          	sub    $0x20,%rsp
   1ba45:	45 31 c0             	xor    %r8d,%r8d
   1ba48:	31 d2                	xor    %edx,%edx
   1ba4a:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1ba4f:	41 ff 97 d0 00 00 00 	call   *0xd0(%r15)
   1ba56:	48 83 c4 20          	add    $0x20,%rsp
   1ba5a:	48 85 c0             	test   %rax,%rax
   1ba5d:	74 18                	je     1ba77 <san_boot+0x2da>
   1ba5f:	49 89 c4             	mov    %rax,%r12
   1ba62:	49 c1 ec 38          	shr    $0x38,%r12
   1ba66:	41 09 c4             	or     %eax,%r12d
   1ba69:	45 0f b6 e4          	movzbl %r12b,%r12d
   1ba6d:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1ba74:	41 f7 dc             	neg    %r12d
   1ba77:	48 83 ec 20          	sub    $0x20,%rsp
   1ba7b:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1ba80:	41 ff 97 e0 00 00 00 	call   *0xe0(%r15)
   1ba87:	48 83 c4 20          	add    $0x20,%rsp
   1ba8b:	48 83 ec 20          	sub    $0x20,%rsp
   1ba8f:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1ba94:	41 ff 57 48          	call   *0x48(%r15)
   1ba98:	48 83 c4 20          	add    $0x20,%rsp
   1ba9c:	bf 01 00 00 00       	mov    $0x1,%edi
   1baa1:	e8 01 a0 fe ff       	call   5aa7 <efi_snp_add_claim>
   1baa6:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1baab:	48 2b 05 9e e5 00 00 	sub    0xe59e(%rip),%rax        # 2a050 <__stack_chk_guard>
   1bab2:	74 05                	je     1bab9 <san_boot+0x31c>
   1bab4:	e8 a7 6f fe ff       	call   2a60 <__stack_chk_fail>
   1bab9:	48 83 c4 58          	add    $0x58,%rsp
   1babd:	44 89 e0             	mov    %r12d,%eax
   1bac0:	5b                   	pop    %rbx
   1bac1:	5d                   	pop    %rbp
   1bac2:	41 5c                	pop    %r12
   1bac4:	41 5d                	pop    %r13
   1bac6:	41 5e                	pop    %r14
   1bac8:	41 5f                	pop    %r15
   1baca:	c3                   	ret    

000000000001bacb <efi_download_poll>:
   1bacb:	f3 0f 1e fa          	endbr64 
   1bacf:	57                   	push   %rdi
   1bad0:	56                   	push   %rsi
   1bad1:	50                   	push   %rax
   1bad2:	e8 b1 3f ff ff       	call   fa88 <step>
   1bad7:	5a                   	pop    %rdx
   1bad8:	31 c0                	xor    %eax,%eax
   1bada:	5e                   	pop    %rsi
   1badb:	5f                   	pop    %rdi
   1badc:	c3                   	ret    

000000000001badd <efi_download_deliver_iob>:
   1badd:	f3 0f 1e fa          	endbr64 
   1bae1:	41 54                	push   %r12
   1bae3:	49 89 fc             	mov    %rdi,%r12
   1bae6:	55                   	push   %rbp
   1bae7:	48 89 f5             	mov    %rsi,%rbp
   1baea:	53                   	push   %rbx
   1baeb:	4c 8b 56 18          	mov    0x18(%rsi),%r10
   1baef:	48 8b 5e 20          	mov    0x20(%rsi),%rbx
   1baf3:	4c 29 d3             	sub    %r10,%rbx
   1baf6:	f6 02 01             	testb  $0x1,(%rdx)
   1baf9:	74 08                	je     1bb03 <efi_download_deliver_iob+0x26>
   1bafb:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   1bb02:	00 
   1bb03:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
   1bb07:	4d 03 4c 24 20       	add    0x20(%r12),%r9
   1bb0c:	48 83 ec 20          	sub    $0x20,%rsp
   1bb10:	49 89 d8             	mov    %rbx,%r8
   1bb13:	4d 89 4c 24 20       	mov    %r9,0x20(%r12)
   1bb18:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
   1bb1d:	4c 89 d2             	mov    %r10,%rdx
   1bb20:	41 ff 54 24 28       	call   *0x28(%r12)
   1bb25:	48 83 c4 20          	add    $0x20,%rsp
   1bb29:	48 85 c0             	test   %rax,%rax
   1bb2c:	74 1a                	je     1bb48 <efi_download_deliver_iob+0x6b>
   1bb2e:	49 89 c4             	mov    %rax,%r12
   1bb31:	49 c1 ec 38          	shr    $0x38,%r12
   1bb35:	41 09 c4             	or     %eax,%r12d
   1bb38:	45 0f b6 e4          	movzbl %r12b,%r12d
   1bb3c:	41 81 cc 00 e0 36 7f 	or     $0x7f36e000,%r12d
   1bb43:	41 f7 dc             	neg    %r12d
   1bb46:	eb 08                	jmp    1bb50 <efi_download_deliver_iob+0x73>
   1bb48:	49 01 5c 24 20       	add    %rbx,0x20(%r12)
   1bb4d:	45 31 e4             	xor    %r12d,%r12d
   1bb50:	48 89 ef             	mov    %rbp,%rdi
   1bb53:	e8 0e e2 fe ff       	call   9d66 <free_iob>
   1bb58:	44 89 e0             	mov    %r12d,%eax
   1bb5b:	5b                   	pop    %rbx
   1bb5c:	5d                   	pop    %rbp
   1bb5d:	41 5c                	pop    %r12
   1bb5f:	c3                   	ret    

000000000001bb60 <efi_download_close>:
   1bb60:	f3 0f 1e fa          	endbr64 
   1bb64:	89 f0                	mov    %esi,%eax
   1bb66:	b9 01 00 00 00       	mov    $0x1,%ecx
   1bb6b:	48 83 ec 38          	sub    $0x38,%rsp
   1bb6f:	f7 d8                	neg    %eax
   1bb71:	48 c1 e1 3f          	shl    $0x3f,%rcx
   1bb75:	89 74 24 2c          	mov    %esi,0x2c(%rsp)
   1bb79:	48 89 c2             	mov    %rax,%rdx
   1bb7c:	83 e0 7f             	and    $0x7f,%eax
   1bb7f:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   1bb84:	48 c1 e2 38          	shl    $0x38,%rdx
   1bb88:	48 21 ca             	and    %rcx,%rdx
   1bb8b:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   1bb8f:	48 09 c2             	or     %rax,%rdx
   1bb92:	ff 57 30             	call   *0x30(%rdi)
   1bb95:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1bb9a:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
   1bb9e:	48 83 c4 20          	add    $0x20,%rsp
   1bba2:	e8 f8 dd fe ff       	call   999f <intf_shutdown>
   1bba7:	83 cf ff             	or     $0xffffffff,%edi
   1bbaa:	48 83 c4 18          	add    $0x18,%rsp
   1bbae:	e9 f4 9e fe ff       	jmp    5aa7 <efi_snp_add_claim>

000000000001bbb3 <efi_download_abort>:
   1bbb3:	f3 0f 1e fa          	endbr64 
   1bbb7:	57                   	push   %rdi
   1bbb8:	48 89 d7             	mov    %rdx,%rdi
   1bbbb:	56                   	push   %rsi
   1bbbc:	50                   	push   %rax
   1bbbd:	4c 89 c6             	mov    %r8,%rsi
   1bbc0:	48 c1 ee 38          	shr    $0x38,%rsi
   1bbc4:	44 09 c6             	or     %r8d,%esi
   1bbc7:	40 0f b6 f6          	movzbl %sil,%esi
   1bbcb:	81 ce 00 e0 36 7f    	or     $0x7f36e000,%esi
   1bbd1:	f7 de                	neg    %esi
   1bbd3:	e8 88 ff ff ff       	call   1bb60 <efi_download_close>
   1bbd8:	5a                   	pop    %rdx
   1bbd9:	31 c0                	xor    %eax,%eax
   1bbdb:	5e                   	pop    %rsi
   1bbdc:	5f                   	pop    %rdi
   1bbdd:	c3                   	ret    

000000000001bbde <efi_download_start>:
   1bbde:	f3 0f 1e fa          	endbr64 
   1bbe2:	41 55                	push   %r13
   1bbe4:	4d 89 c5             	mov    %r8,%r13
   1bbe7:	41 54                	push   %r12
   1bbe9:	4d 89 cc             	mov    %r9,%r12
   1bbec:	55                   	push   %rbp
   1bbed:	57                   	push   %rdi
   1bbee:	bf 01 00 00 00       	mov    $0x1,%edi
   1bbf3:	56                   	push   %rsi
   1bbf4:	53                   	push   %rbx
   1bbf5:	51                   	push   %rcx
   1bbf6:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   1bbfb:	e8 a7 9e fe ff       	call   5aa7 <efi_snp_add_claim>
   1bc00:	bf 40 00 00 00       	mov    $0x40,%edi
   1bc05:	e8 0b 0b ff ff       	call   c715 <malloc>
   1bc0a:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1bc0f:	48 85 c0             	test   %rax,%rax
   1bc12:	75 17                	jne    1bc2b <efi_download_start+0x4d>
   1bc14:	83 cf ff             	or     $0xffffffff,%edi
   1bc17:	e8 8b 9e fe ff       	call   5aa7 <efi_snp_add_claim>
   1bc1c:	48 b8 09 00 00 00 00 	movabs $0x8000000000000009,%rax
   1bc23:	00 00 80 
   1bc26:	e9 8a 00 00 00       	jmp    1bcb5 <efi_download_start+0xd7>
   1bc2b:	48 89 c5             	mov    %rax,%rbp
   1bc2e:	48 8d 05 8b a8 00 00 	lea    0xa88b(%rip),%rax        # 264c0 <null_intf>
   1bc35:	be 02 00 00 00       	mov    $0x2,%esi
   1bc3a:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1bc3e:	48 8d 05 9b bd 00 00 	lea    0xbd9b(%rip),%rax        # 279e0 <efi_download_file_xfer_desc>
   1bc45:	48 89 ef             	mov    %rbp,%rdi
   1bc48:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1bc4c:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1bc50:	31 c0                	xor    %eax,%eax
   1bc52:	48 c7 45 08 00 00 00 	movq   $0x0,0x8(%rbp)
   1bc59:	00 
   1bc5a:	e8 4c 30 ff ff       	call   ecab <xfer_open>
   1bc5f:	89 c3                	mov    %eax,%ebx
   1bc61:	85 c0                	test   %eax,%eax
   1bc63:	74 2d                	je     1bc92 <efi_download_start+0xb4>
   1bc65:	48 89 ef             	mov    %rbp,%rdi
   1bc68:	f7 db                	neg    %ebx
   1bc6a:	e8 b3 0a ff ff       	call   c722 <free>
   1bc6f:	83 cf ff             	or     $0xffffffff,%edi
   1bc72:	e8 30 9e fe ff       	call   5aa7 <efi_snp_add_claim>
   1bc77:	48 89 d8             	mov    %rbx,%rax
   1bc7a:	ba 01 00 00 00       	mov    $0x1,%edx
   1bc7f:	83 e3 7f             	and    $0x7f,%ebx
   1bc82:	48 c1 e0 38          	shl    $0x38,%rax
   1bc86:	48 c1 e2 3f          	shl    $0x3f,%rdx
   1bc8a:	48 21 d0             	and    %rdx,%rax
   1bc8d:	48 09 d8             	or     %rbx,%rax
   1bc90:	eb 23                	jmp    1bcb5 <efi_download_start+0xd7>
   1bc92:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1bc97:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
   1bc9e:	00 
   1bc9f:	4c 89 6d 28          	mov    %r13,0x28(%rbp)
   1bca3:	48 89 45 38          	mov    %rax,0x38(%rbp)
   1bca7:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1bcac:	4c 89 65 30          	mov    %r12,0x30(%rbp)
   1bcb0:	48 89 28             	mov    %rbp,(%rax)
   1bcb3:	31 c0                	xor    %eax,%eax
   1bcb5:	5a                   	pop    %rdx
   1bcb6:	5b                   	pop    %rbx
   1bcb7:	5e                   	pop    %rsi
   1bcb8:	5f                   	pop    %rdi
   1bcb9:	5d                   	pop    %rbp
   1bcba:	41 5c                	pop    %r12
   1bcbc:	41 5d                	pop    %r13
   1bcbe:	c3                   	ret    

000000000001bcbf <efi_download_install>:
   1bcbf:	f3 0f 1e fa          	endbr64 
   1bcc3:	48 83 ec 18          	sub    $0x18,%rsp
   1bcc7:	48 8b 05 aa e3 00 00 	mov    0xe3aa(%rip),%rax        # 2a078 <efi_systab>
   1bcce:	48 8d 15 bb 8a 00 00 	lea    0x8abb(%rip),%rdx        # 24790 <ipxe_download_protocol_guid>
   1bcd5:	45 31 c9             	xor    %r9d,%r9d
   1bcd8:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1bcdd:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   1bce2:	4c 8d 05 d7 bc 00 00 	lea    0xbcd7(%rip),%r8        # 279c0 <ipxe_download_protocol_interface>
   1bce9:	48 83 ec 20          	sub    $0x20,%rsp
   1bced:	48 8b 40 60          	mov    0x60(%rax),%rax
   1bcf1:	ff 90 48 01 00 00    	call   *0x148(%rax)
   1bcf7:	48 83 c4 20          	add    $0x20,%rsp
   1bcfb:	48 89 c2             	mov    %rax,%rdx
   1bcfe:	31 c0                	xor    %eax,%eax
   1bd00:	48 85 d2             	test   %rdx,%rdx
   1bd03:	74 13                	je     1bd18 <efi_download_install+0x59>
   1bd05:	48 89 d0             	mov    %rdx,%rax
   1bd08:	48 c1 e8 38          	shr    $0x38,%rax
   1bd0c:	09 d0                	or     %edx,%eax
   1bd0e:	0f b6 c0             	movzbl %al,%eax
   1bd11:	0d 00 e0 36 7f       	or     $0x7f36e000,%eax
   1bd16:	f7 d8                	neg    %eax
   1bd18:	48 83 c4 18          	add    $0x18,%rsp
   1bd1c:	c3                   	ret    

000000000001bd1d <efi_download_uninstall>:
   1bd1d:	f3 0f 1e fa          	endbr64 
   1bd21:	48 83 ec 28          	sub    $0x28,%rsp
   1bd25:	48 89 f9             	mov    %rdi,%rcx
   1bd28:	48 8b 05 49 e3 00 00 	mov    0xe349(%rip),%rax        # 2a078 <efi_systab>
   1bd2f:	45 31 c9             	xor    %r9d,%r9d
   1bd32:	4c 8d 05 87 bc 00 00 	lea    0xbc87(%rip),%r8        # 279c0 <ipxe_download_protocol_interface>
   1bd39:	48 8d 15 50 8a 00 00 	lea    0x8a50(%rip),%rdx        # 24790 <ipxe_download_protocol_guid>
   1bd40:	48 8b 40 60          	mov    0x60(%rax),%rax
   1bd44:	ff 90 50 01 00 00    	call   *0x150(%rax)
   1bd4a:	48 83 c4 28          	add    $0x28,%rsp
   1bd4e:	c3                   	ret    

000000000001bd4f <efidev_find>:
   1bd4f:	48 8b 05 ea bc 00 00 	mov    0xbcea(%rip),%rax        # 27a40 <efi_devices>
   1bd56:	48 8d 15 e3 bc 00 00 	lea    0xbce3(%rip),%rdx        # 27a40 <efi_devices>
   1bd5d:	48 83 e8 58          	sub    $0x58,%rax
   1bd61:	48 8d 48 58          	lea    0x58(%rax),%rcx
   1bd65:	48 39 d1             	cmp    %rdx,%rcx
   1bd68:	74 13                	je     1bd7d <efidev_find+0x2e>
   1bd6a:	48 39 b8 80 00 00 00 	cmp    %rdi,0x80(%rax)
   1bd71:	74 0c                	je     1bd7f <efidev_find+0x30>
   1bd73:	48 8b 40 58          	mov    0x58(%rax),%rax
   1bd77:	48 83 e8 58          	sub    $0x58,%rax
   1bd7b:	eb e4                	jmp    1bd61 <efidev_find+0x12>
   1bd7d:	31 c0                	xor    %eax,%eax
   1bd7f:	c3                   	ret    

000000000001bd80 <efi_driver_name>:
   1bd80:	f3 0f 1e fa          	endbr64 
   1bd84:	66 83 3d 1e 66 00 00 	cmpw   $0x0,0x661e(%rip)        # 223aa <product_wname>
   1bd8b:	00 
   1bd8c:	48 8d 15 ed 65 00 00 	lea    0x65ed(%rip),%rdx        # 22380 <build_wname>
   1bd93:	48 8d 05 10 66 00 00 	lea    0x6610(%rip),%rax        # 223aa <product_wname>
   1bd9a:	48 0f 44 c2          	cmove  %rdx,%rax
   1bd9e:	49 89 00             	mov    %rax,(%r8)
   1bda1:	31 c0                	xor    %eax,%eax
   1bda3:	c3                   	ret    

000000000001bda4 <efi_driver_controller_name>:
   1bda4:	f3 0f 1e fa          	endbr64 
   1bda8:	41 54                	push   %r12
   1bdaa:	57                   	push   %rdi
   1bdab:	56                   	push   %rsi
   1bdac:	53                   	push   %rbx
   1bdad:	48 83 ec 48          	sub    $0x48,%rsp
   1bdb1:	48 8b 05 98 e2 00 00 	mov    0xe298(%rip),%rax        # 2a050 <__stack_chk_guard>
   1bdb8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1bdbd:	48 8b 05 b4 e2 00 00 	mov    0xe2b4(%rip),%rax        # 2a078 <efi_systab>
   1bdc4:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   1bdcb:	00 
   1bdcc:	48 8b 40 60          	mov    0x60(%rax),%rax
   1bdd0:	4d 85 c0             	test   %r8,%r8
   1bdd3:	75 0c                	jne    1bde1 <efi_driver_controller_name+0x3d>
   1bdd5:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
   1bddc:	00 00 80 
   1bddf:	eb 50                	jmp    1be31 <efi_driver_controller_name+0x8d>
   1bde1:	4c 89 c3             	mov    %r8,%rbx
   1bde4:	49 89 d4             	mov    %rdx,%r12
   1bde7:	4c 89 ce             	mov    %r9,%rsi
   1bdea:	c7 44 24 28 02 00 00 	movl   $0x2,0x28(%rsp)
   1bdf1:	00 
   1bdf2:	45 31 c9             	xor    %r9d,%r9d
   1bdf5:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   1bdfa:	48 89 d9             	mov    %rbx,%rcx
   1bdfd:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1be04:	00 00 
   1be06:	48 8d 15 a3 8c 00 00 	lea    0x8ca3(%rip),%rdx        # 24ab0 <efi_component_name2_protocol_guid>
   1be0d:	ff 90 18 01 00 00    	call   *0x118(%rax)
   1be13:	48 85 c0             	test   %rax,%rax
   1be16:	75 bd                	jne    1bdd5 <efi_driver_controller_name+0x31>
   1be18:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1be1d:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   1be22:	49 89 f1             	mov    %rsi,%r9
   1be25:	49 89 d8             	mov    %rbx,%r8
   1be28:	4c 89 e2             	mov    %r12,%rdx
   1be2b:	48 89 c1             	mov    %rax,%rcx
   1be2e:	ff 50 08             	call   *0x8(%rax)
   1be31:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   1be36:	48 2b 15 13 e2 00 00 	sub    0xe213(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1be3d:	74 05                	je     1be44 <efi_driver_controller_name+0xa0>
   1be3f:	e8 1c 6c fe ff       	call   2a60 <__stack_chk_fail>
   1be44:	48 83 c4 48          	add    $0x48,%rsp
   1be48:	5b                   	pop    %rbx
   1be49:	5e                   	pop    %rsi
   1be4a:	5f                   	pop    %rdi
   1be4b:	41 5c                	pop    %r12
   1be4d:	c3                   	ret    

000000000001be4e <efi_driver_disconnect>:
   1be4e:	f3 0f 1e fa          	endbr64 
   1be52:	48 83 ec 28          	sub    $0x28,%rsp
   1be56:	48 8b 05 1b e2 00 00 	mov    0xe21b(%rip),%rax        # 2a078 <efi_systab>
   1be5d:	48 89 f9             	mov    %rdi,%rcx
   1be60:	c7 05 3a e1 00 00 01 	movl   $0x1,0xe13a(%rip)        # 29fa4 <efi_driver_disconnecting>
   1be67:	00 00 00 
   1be6a:	48 8b 15 17 bc 00 00 	mov    0xbc17(%rip),%rdx        # 27a88 <efi_driver_binding+0x28>
   1be71:	45 31 c0             	xor    %r8d,%r8d
   1be74:	48 8b 40 60          	mov    0x60(%rax),%rax
   1be78:	ff 90 10 01 00 00    	call   *0x110(%rax)
   1be7e:	31 c0                	xor    %eax,%eax
   1be80:	c7 05 1a e1 00 00 00 	movl   $0x0,0xe11a(%rip)        # 29fa4 <efi_driver_disconnecting>
   1be87:	00 00 00 
   1be8a:	48 83 c4 28          	add    $0x28,%rsp
   1be8e:	c3                   	ret    

000000000001be8f <efi_driver_handles>:
   1be8f:	41 54                	push   %r12
   1be91:	45 31 c0             	xor    %r8d,%r8d
   1be94:	31 d2                	xor    %edx,%edx
   1be96:	31 c9                	xor    %ecx,%ecx
   1be98:	55                   	push   %rbp
   1be99:	48 89 fd             	mov    %rdi,%rbp
   1be9c:	53                   	push   %rbx
   1be9d:	48 83 ec 28          	sub    $0x28,%rsp
   1bea1:	48 8b 05 a8 e1 00 00 	mov    0xe1a8(%rip),%rax        # 2a050 <__stack_chk_guard>
   1bea8:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1bead:	48 8b 05 c4 e1 00 00 	mov    0xe1c4(%rip),%rax        # 2a078 <efi_systab>
   1beb4:	4c 8b 60 60          	mov    0x60(%rax),%r12
   1beb8:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1bebd:	50                   	push   %rax
   1bebe:	48 83 ec 20          	sub    $0x20,%rsp
   1bec2:	4c 8d 4c 24 40       	lea    0x40(%rsp),%r9
   1bec7:	41 ff 94 24 38 01 00 	call   *0x138(%r12)
   1bece:	00 
   1becf:	48 83 c4 30          	add    $0x30,%rsp
   1bed3:	48 89 c3             	mov    %rax,%rbx
   1bed6:	48 85 c0             	test   %rax,%rax
   1bed9:	74 12                	je     1beed <efi_driver_handles+0x5e>
   1bedb:	48 c1 e8 38          	shr    $0x38,%rax
   1bedf:	09 d8                	or     %ebx,%eax
   1bee1:	0f b6 c0             	movzbl %al,%eax
   1bee4:	0d 00 e0 37 7f       	or     $0x7f37e000,%eax
   1bee9:	f7 d8                	neg    %eax
   1beeb:	eb 26                	jmp    1bf13 <efi_driver_handles+0x84>
   1beed:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1bef2:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
   1bef7:	73 0b                	jae    1bf04 <efi_driver_handles+0x75>
   1bef9:	48 8b 3c d9          	mov    (%rcx,%rbx,8),%rdi
   1befd:	48 ff c3             	inc    %rbx
   1bf00:	ff d5                	call   *%rbp
   1bf02:	eb e9                	jmp    1beed <efi_driver_handles+0x5e>
   1bf04:	48 83 ec 20          	sub    $0x20,%rsp
   1bf08:	41 ff 54 24 48       	call   *0x48(%r12)
   1bf0d:	48 83 c4 20          	add    $0x20,%rsp
   1bf11:	31 c0                	xor    %eax,%eax
   1bf13:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1bf18:	48 2b 15 31 e1 00 00 	sub    0xe131(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1bf1f:	74 05                	je     1bf26 <efi_driver_handles+0x97>
   1bf21:	e8 3a 6b fe ff       	call   2a60 <__stack_chk_fail>
   1bf26:	48 83 c4 20          	add    $0x20,%rsp
   1bf2a:	5b                   	pop    %rbx
   1bf2b:	5d                   	pop    %rbp
   1bf2c:	41 5c                	pop    %r12
   1bf2e:	c3                   	ret    

000000000001bf2f <efi_driver_start>:
   1bf2f:	f3 0f 1e fa          	endbr64 
   1bf33:	41 57                	push   %r15
   1bf35:	41 56                	push   %r14
   1bf37:	41 55                	push   %r13
   1bf39:	49 bd 14 00 00 00 00 	movabs $0x8000000000000014,%r13
   1bf40:	00 00 80 
   1bf43:	41 54                	push   %r12
   1bf45:	49 89 d4             	mov    %rdx,%r12
   1bf48:	55                   	push   %rbp
   1bf49:	57                   	push   %rdi
   1bf4a:	48 89 d7             	mov    %rdx,%rdi
   1bf4d:	56                   	push   %rsi
   1bf4e:	53                   	push   %rbx
   1bf4f:	48 83 ec 58          	sub    $0x58,%rsp
   1bf53:	48 8b 05 f6 e0 00 00 	mov    0xe0f6(%rip),%rax        # 2a050 <__stack_chk_guard>
   1bf5a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1bf5f:	31 c0                	xor    %eax,%eax
   1bf61:	e8 e9 fd ff ff       	call   1bd4f <efidev_find>
   1bf66:	48 85 c0             	test   %rax,%rax
   1bf69:	0f 85 7d 01 00 00    	jne    1c0ec <efi_driver_start+0x1bd>
   1bf6f:	48 8b 05 02 e1 00 00 	mov    0xe102(%rip),%rax        # 2a078 <efi_systab>
   1bf76:	b9 08 00 00 00       	mov    $0x8,%ecx
   1bf7b:	49 bd 06 00 00 00 00 	movabs $0x8000000000000006,%r13
   1bf82:	00 00 80 
   1bf85:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1bf89:	ff 53 18             	call   *0x18(%rbx)
   1bf8c:	83 3d 11 e0 00 00 00 	cmpl   $0x0,0xe011(%rip)        # 29fa4 <efi_driver_disconnecting>
   1bf93:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1bf98:	0f 85 46 01 00 00    	jne    1c0e4 <efi_driver_start+0x1b5>
   1bf9e:	4c 8d 3d eb 8a 00 00 	lea    0x8aeb(%rip),%r15        # 24a90 <efi_device_path_protocol_guid>
   1bfa5:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1bfaa:	4c 89 e1             	mov    %r12,%rcx
   1bfad:	4c 8b 0d b4 e0 00 00 	mov    0xe0b4(%rip),%r9        # 2a068 <efi_image_handle>
   1bfb4:	c7 44 24 28 02 00 00 	movl   $0x2,0x28(%rsp)
   1bfbb:	00 
   1bfbc:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
   1bfc1:	4c 89 fa             	mov    %r15,%rdx
   1bfc4:	ff 93 18 01 00 00    	call   *0x118(%rbx)
   1bfca:	49 89 c5             	mov    %rax,%r13
   1bfcd:	48 85 c0             	test   %rax,%rax
   1bfd0:	74 05                	je     1bfd7 <efi_driver_start+0xa8>
   1bfd2:	e9 0d 01 00 00       	jmp    1c0e4 <efi_driver_start+0x1b5>
   1bfd7:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1bfdc:	e8 a9 aa fe ff       	call   6a8a <efi_devpath_len>
   1bfe1:	48 8d b8 a4 00 00 00 	lea    0xa4(%rax),%rdi
   1bfe8:	4c 8d 70 04          	lea    0x4(%rax),%r14
   1bfec:	e8 45 07 ff ff       	call   c736 <zalloc>
   1bff1:	48 89 c5             	mov    %rax,%rbp
   1bff4:	48 85 c0             	test   %rax,%rax
   1bff7:	0f 84 bf 00 00 00    	je     1c0bc <efi_driver_start+0x18d>
   1bffd:	48 8d b8 a0 00 00 00 	lea    0xa0(%rax),%rdi
   1c004:	4c 89 a0 80 00 00 00 	mov    %r12,0x80(%rax)
   1c00b:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   1c010:	4c 89 f2             	mov    %r14,%rdx
   1c013:	48 89 b8 88 00 00 00 	mov    %rdi,0x88(%rax)
   1c01a:	4c 8d 35 77 c8 00 00 	lea    0xc877(%rip),%r14        # 28898 <efipci_driver>
   1c021:	c7 40 30 07 00 00 00 	movl   $0x7,0x30(%rax)
   1c028:	e8 bc b3 ff ff       	call   173e9 <__memcpy>
   1c02d:	48 8d 45 68          	lea    0x68(%rbp),%rax
   1c031:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
   1c035:	48 8d 35 04 ba 00 00 	lea    0xba04(%rip),%rsi        # 27a40 <efi_devices>
   1c03c:	48 89 45 68          	mov    %rax,0x68(%rbp)
   1c040:	48 89 45 70          	mov    %rax,0x70(%rbp)
   1c044:	e8 48 01 ff ff       	call   c191 <extern_list_add>
   1c049:	4d 89 e1             	mov    %r12,%r9
   1c04c:	4c 89 fa             	mov    %r15,%rdx
   1c04f:	4c 89 e1             	mov    %r12,%rcx
   1c052:	4c 8b 05 0f e0 00 00 	mov    0xe00f(%rip),%r8        # 2a068 <efi_image_handle>
   1c059:	ff 93 20 01 00 00    	call   *0x120(%rbx)
   1c05f:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1c066:	00 00 
   1c068:	48 8d 05 49 c8 00 00 	lea    0xc849(%rip),%rax        # 288b8 <__EFI_CONSOLE_CONTROL_PROTOCOL>
   1c06f:	49 39 c6             	cmp    %rax,%r14
   1c072:	73 25                	jae    1c099 <efi_driver_start+0x16a>
   1c074:	4c 89 e7             	mov    %r12,%rdi
   1c077:	41 ff 56 08          	call   *0x8(%r14)
   1c07b:	85 c0                	test   %eax,%eax
   1c07d:	75 14                	jne    1c093 <efi_driver_start+0x164>
   1c07f:	48 89 ef             	mov    %rbp,%rdi
   1c082:	41 ff 56 10          	call   *0x10(%r14)
   1c086:	85 c0                	test   %eax,%eax
   1c088:	75 09                	jne    1c093 <efi_driver_start+0x164>
   1c08a:	4c 89 b5 90 00 00 00 	mov    %r14,0x90(%rbp)
   1c091:	eb 51                	jmp    1c0e4 <efi_driver_start+0x1b5>
   1c093:	49 83 c6 20          	add    $0x20,%r14
   1c097:	eb cf                	jmp    1c068 <efi_driver_start+0x139>
   1c099:	48 8b 55 58          	mov    0x58(%rbp),%rdx
   1c09d:	48 8b 45 60          	mov    0x60(%rbp),%rax
   1c0a1:	48 89 ef             	mov    %rbp,%rdi
   1c0a4:	49 bd 03 00 00 00 00 	movabs $0x8000000000000003,%r13
   1c0ab:	00 00 80 
   1c0ae:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1c0b2:	48 89 10             	mov    %rdx,(%rax)
   1c0b5:	e8 68 06 ff ff       	call   c722 <free>
   1c0ba:	eb 0a                	jmp    1c0c6 <efi_driver_start+0x197>
   1c0bc:	49 bd 09 00 00 00 00 	movabs $0x8000000000000009,%r13
   1c0c3:	00 00 80 
   1c0c6:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   1c0cc:	74 16                	je     1c0e4 <efi_driver_start+0x1b5>
   1c0ce:	4c 8b 05 93 df 00 00 	mov    0xdf93(%rip),%r8        # 2a068 <efi_image_handle>
   1c0d5:	4d 89 e1             	mov    %r12,%r9
   1c0d8:	4c 89 fa             	mov    %r15,%rdx
   1c0db:	4c 89 e1             	mov    %r12,%rcx
   1c0de:	ff 93 20 01 00 00    	call   *0x120(%rbx)
   1c0e4:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1c0e9:	ff 53 20             	call   *0x20(%rbx)
   1c0ec:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1c0f1:	48 2b 05 58 df 00 00 	sub    0xdf58(%rip),%rax        # 2a050 <__stack_chk_guard>
   1c0f8:	74 05                	je     1c0ff <efi_driver_start+0x1d0>
   1c0fa:	e8 61 69 fe ff       	call   2a60 <__stack_chk_fail>
   1c0ff:	48 83 c4 58          	add    $0x58,%rsp
   1c103:	4c 89 e8             	mov    %r13,%rax
   1c106:	5b                   	pop    %rbx
   1c107:	5e                   	pop    %rsi
   1c108:	5f                   	pop    %rdi
   1c109:	5d                   	pop    %rbp
   1c10a:	41 5c                	pop    %r12
   1c10c:	41 5d                	pop    %r13
   1c10e:	41 5e                	pop    %r14
   1c110:	41 5f                	pop    %r15
   1c112:	c3                   	ret    

000000000001c113 <efi_driver_supported>:
   1c113:	f3 0f 1e fa          	endbr64 
   1c117:	41 54                	push   %r12
   1c119:	4c 8d 25 98 c7 00 00 	lea    0xc798(%rip),%r12        # 288b8 <__EFI_CONSOLE_CONTROL_PROTOCOL>
   1c120:	55                   	push   %rbp
   1c121:	48 89 d5             	mov    %rdx,%rbp
   1c124:	57                   	push   %rdi
   1c125:	48 89 d7             	mov    %rdx,%rdi
   1c128:	56                   	push   %rsi
   1c129:	53                   	push   %rbx
   1c12a:	48 8d 1d 67 c7 00 00 	lea    0xc767(%rip),%rbx        # 28898 <efipci_driver>
   1c131:	e8 19 fc ff ff       	call   1bd4f <efidev_find>
   1c136:	49 89 c0             	mov    %rax,%r8
   1c139:	48 b8 14 00 00 00 00 	movabs $0x8000000000000014,%rax
   1c140:	00 00 80 
   1c143:	4d 85 c0             	test   %r8,%r8
   1c146:	75 23                	jne    1c16b <efi_driver_supported+0x58>
   1c148:	4c 39 e3             	cmp    %r12,%rbx
   1c14b:	73 10                	jae    1c15d <efi_driver_supported+0x4a>
   1c14d:	48 89 ef             	mov    %rbp,%rdi
   1c150:	ff 53 08             	call   *0x8(%rbx)
   1c153:	85 c0                	test   %eax,%eax
   1c155:	74 12                	je     1c169 <efi_driver_supported+0x56>
   1c157:	48 83 c3 20          	add    $0x20,%rbx
   1c15b:	eb eb                	jmp    1c148 <efi_driver_supported+0x35>
   1c15d:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
   1c164:	00 00 80 
   1c167:	eb 02                	jmp    1c16b <efi_driver_supported+0x58>
   1c169:	31 c0                	xor    %eax,%eax
   1c16b:	5b                   	pop    %rbx
   1c16c:	5e                   	pop    %rsi
   1c16d:	5f                   	pop    %rdi
   1c16e:	5d                   	pop    %rbp
   1c16f:	41 5c                	pop    %r12
   1c171:	c3                   	ret    

000000000001c172 <efi_driver_stop>:
   1c172:	f3 0f 1e fa          	endbr64 
   1c176:	41 54                	push   %r12
   1c178:	55                   	push   %rbp
   1c179:	57                   	push   %rdi
   1c17a:	48 89 d7             	mov    %rdx,%rdi
   1c17d:	56                   	push   %rsi
   1c17e:	53                   	push   %rbx
   1c17f:	48 83 ec 20          	sub    $0x20,%rsp
   1c183:	48 8b 05 ee de 00 00 	mov    0xdeee(%rip),%rax        # 2a078 <efi_systab>
   1c18a:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1c18e:	e8 bc fb ff ff       	call   1bd4f <efidev_find>
   1c193:	48 89 c5             	mov    %rax,%rbp
   1c196:	48 b8 07 00 00 00 00 	movabs $0x8000000000000007,%rax
   1c19d:	00 00 80 
   1c1a0:	48 85 ed             	test   %rbp,%rbp
   1c1a3:	74 37                	je     1c1dc <efi_driver_stop+0x6a>
   1c1a5:	b9 08 00 00 00       	mov    $0x8,%ecx
   1c1aa:	48 89 ef             	mov    %rbp,%rdi
   1c1ad:	ff 53 18             	call   *0x18(%rbx)
   1c1b0:	49 89 c4             	mov    %rax,%r12
   1c1b3:	48 8b 85 90 00 00 00 	mov    0x90(%rbp),%rax
   1c1ba:	ff 50 18             	call   *0x18(%rax)
   1c1bd:	48 8b 45 60          	mov    0x60(%rbp),%rax
   1c1c1:	48 8b 55 58          	mov    0x58(%rbp),%rdx
   1c1c5:	48 89 ef             	mov    %rbp,%rdi
   1c1c8:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1c1cc:	48 89 10             	mov    %rdx,(%rax)
   1c1cf:	e8 4e 05 ff ff       	call   c722 <free>
   1c1d4:	4c 89 e1             	mov    %r12,%rcx
   1c1d7:	ff 53 20             	call   *0x20(%rbx)
   1c1da:	31 c0                	xor    %eax,%eax
   1c1dc:	48 83 c4 20          	add    $0x20,%rsp
   1c1e0:	5b                   	pop    %rbx
   1c1e1:	5e                   	pop    %rsi
   1c1e2:	5f                   	pop    %rdi
   1c1e3:	5d                   	pop    %rbp
   1c1e4:	41 5c                	pop    %r12
   1c1e6:	c3                   	ret    

000000000001c1e7 <efidev_parent>:
   1c1e7:	f3 0f 1e fa          	endbr64 
   1c1eb:	48 8b 05 4e b8 00 00 	mov    0xb84e(%rip),%rax        # 27a40 <efi_devices>
   1c1f2:	48 8d 0d 47 b8 00 00 	lea    0xb847(%rip),%rcx        # 27a40 <efi_devices>
   1c1f9:	48 8d 50 a8          	lea    -0x58(%rax),%rdx
   1c1fd:	48 8b 7f 78          	mov    0x78(%rdi),%rdi
   1c201:	48 85 ff             	test   %rdi,%rdi
   1c204:	74 1b                	je     1c221 <efidev_parent+0x3a>
   1c206:	48 89 d0             	mov    %rdx,%rax
   1c209:	48 8d 70 58          	lea    0x58(%rax),%rsi
   1c20d:	48 39 ce             	cmp    %rcx,%rsi
   1c210:	74 eb                	je     1c1fd <efidev_parent+0x16>
   1c212:	48 39 f8             	cmp    %rdi,%rax
   1c215:	74 0c                	je     1c223 <efidev_parent+0x3c>
   1c217:	48 8b 40 58          	mov    0x58(%rax),%rax
   1c21b:	48 83 e8 58          	sub    $0x58,%rax
   1c21f:	eb e8                	jmp    1c209 <efidev_parent+0x22>
   1c221:	31 c0                	xor    %eax,%eax
   1c223:	c3                   	ret    

000000000001c224 <efi_driver_install>:
   1c224:	f3 0f 1e fa          	endbr64 
   1c228:	51                   	push   %rcx
   1c229:	48 8b 05 48 de 00 00 	mov    0xde48(%rip),%rax        # 2a078 <efi_systab>
   1c230:	48 8d 15 19 88 00 00 	lea    0x8819(%rip),%rdx        # 24a50 <efi_driver_binding_protocol_guid>
   1c237:	4c 8d 0d 72 88 00 00 	lea    0x8872(%rip),%r9        # 24ab0 <efi_component_name2_protocol_guid>
   1c23e:	4c 8d 05 1b b8 00 00 	lea    0xb81b(%rip),%r8        # 27a60 <efi_driver_binding>
   1c245:	48 8d 0d 1c de 00 00 	lea    0xde1c(%rip),%rcx        # 2a068 <efi_image_handle>
   1c24c:	48 8b 70 60          	mov    0x60(%rax),%rsi
   1c250:	48 8b 05 11 89 00 00 	mov    0x8911(%rip),%rax        # 24b68 <build_timestamp>
   1c257:	6a 00                	push   $0x0
   1c259:	48 c1 e8 06          	shr    $0x6,%rax
   1c25d:	89 05 15 b8 00 00    	mov    %eax,0xb815(%rip)        # 27a78 <efi_driver_binding+0x18>
   1c263:	48 8b 05 fe dd 00 00 	mov    0xddfe(%rip),%rax        # 2a068 <efi_image_handle>
   1c26a:	48 89 05 0f b8 00 00 	mov    %rax,0xb80f(%rip)        # 27a80 <efi_driver_binding+0x20>
   1c271:	48 89 05 10 b8 00 00 	mov    %rax,0xb810(%rip)        # 27a88 <efi_driver_binding+0x28>
   1c278:	48 8d 05 a1 b7 00 00 	lea    0xb7a1(%rip),%rax        # 27a20 <efi_wtf>
   1c27f:	50                   	push   %rax
   1c280:	48 83 ec 20          	sub    $0x20,%rsp
   1c284:	ff 96 48 01 00 00    	call   *0x148(%rsi)
   1c28a:	48 83 c4 30          	add    $0x30,%rsp
   1c28e:	48 89 c2             	mov    %rax,%rdx
   1c291:	31 c0                	xor    %eax,%eax
   1c293:	48 85 d2             	test   %rdx,%rdx
   1c296:	74 13                	je     1c2ab <efi_driver_install+0x87>
   1c298:	48 89 d0             	mov    %rdx,%rax
   1c29b:	48 c1 e8 38          	shr    $0x38,%rax
   1c29f:	09 d0                	or     %edx,%eax
   1c2a1:	0f b6 c0             	movzbl %al,%eax
   1c2a4:	0d 00 e0 37 7f       	or     $0x7f37e000,%eax
   1c2a9:	f7 d8                	neg    %eax
   1c2ab:	5a                   	pop    %rdx
   1c2ac:	c3                   	ret    

000000000001c2ad <efi_driver_uninstall>:
   1c2ad:	f3 0f 1e fa          	endbr64 
   1c2b1:	50                   	push   %rax
   1c2b2:	48 8b 05 bf dd 00 00 	mov    0xddbf(%rip),%rax        # 2a078 <efi_systab>
   1c2b9:	48 8d 35 60 b7 00 00 	lea    0xb760(%rip),%rsi        # 27a20 <efi_wtf>
   1c2c0:	4c 8d 0d e9 87 00 00 	lea    0x87e9(%rip),%r9        # 24ab0 <efi_component_name2_protocol_guid>
   1c2c7:	48 8b 0d 9a dd 00 00 	mov    0xdd9a(%rip),%rcx        # 2a068 <efi_image_handle>
   1c2ce:	4c 8d 05 8b b7 00 00 	lea    0xb78b(%rip),%r8        # 27a60 <efi_driver_binding>
   1c2d5:	48 8d 15 74 87 00 00 	lea    0x8774(%rip),%rdx        # 24a50 <efi_driver_binding_protocol_guid>
   1c2dc:	48 8b 40 60          	mov    0x60(%rax),%rax
   1c2e0:	6a 00                	push   $0x0
   1c2e2:	56                   	push   %rsi
   1c2e3:	48 83 ec 20          	sub    $0x20,%rsp
   1c2e7:	ff 90 50 01 00 00    	call   *0x150(%rax)
   1c2ed:	48 83 c4 38          	add    $0x38,%rsp
   1c2f1:	c3                   	ret    

000000000001c2f2 <efi_driver_disconnect_all>:
   1c2f2:	f3 0f 1e fa          	endbr64 
   1c2f6:	48 8d 3d 51 fb ff ff 	lea    -0x4af(%rip),%rdi        # 1be4e <efi_driver_disconnect>
   1c2fd:	e9 8d fb ff ff       	jmp    1be8f <efi_driver_handles>

000000000001c302 <efi_file_write>:
   1c302:	f3 0f 1e fa          	endbr64 
   1c306:	48 b8 08 00 00 00 00 	movabs $0x8000000000000008,%rax
   1c30d:	00 00 80 
   1c310:	c3                   	ret    

000000000001c311 <efi_file_set_position>:
   1c311:	f3 0f 1e fa          	endbr64 
   1c315:	48 8b 41 78          	mov    0x78(%rcx),%rax
   1c319:	48 85 c0             	test   %rax,%rax
   1c31c:	75 0c                	jne    1c32a <efi_file_set_position+0x19>
   1c31e:	48 c7 81 80 00 00 00 	movq   $0x0,0x80(%rcx)
   1c325:	00 00 00 00 
   1c329:	c3                   	ret    
   1c32a:	4c 8b 40 48          	mov    0x48(%rax),%r8
   1c32e:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1c332:	74 10                	je     1c344 <efi_file_set_position+0x33>
   1c334:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
   1c33b:	00 00 80 
   1c33e:	4c 39 c2             	cmp    %r8,%rdx
   1c341:	76 04                	jbe    1c347 <efi_file_set_position+0x36>
   1c343:	c3                   	ret    
   1c344:	4c 89 c2             	mov    %r8,%rdx
   1c347:	48 89 91 80 00 00 00 	mov    %rdx,0x80(%rcx)
   1c34e:	31 c0                	xor    %eax,%eax
   1c350:	c3                   	ret    

000000000001c351 <efi_file_get_position>:
   1c351:	f3 0f 1e fa          	endbr64 
   1c355:	48 8b 81 80 00 00 00 	mov    0x80(%rcx),%rax
   1c35c:	48 89 02             	mov    %rax,(%rdx)
   1c35f:	31 c0                	xor    %eax,%eax
   1c361:	c3                   	ret    

000000000001c362 <efi_file_set_info>:
   1c362:	f3 0f 1e fa          	endbr64 
   1c366:	48 b8 08 00 00 00 00 	movabs $0x8000000000000008,%rax
   1c36d:	00 00 80 
   1c370:	c3                   	ret    

000000000001c371 <efi_file_flush>:
   1c371:	f3 0f 1e fa          	endbr64 
   1c375:	31 c0                	xor    %eax,%eax
   1c377:	c3                   	ret    

000000000001c378 <efi_file_open_volume>:
   1c378:	f3 0f 1e fa          	endbr64 
   1c37c:	48 8d 05 7d b7 00 00 	lea    0xb77d(%rip),%rax        # 27b00 <efi_file_root>
   1c383:	48 89 02             	mov    %rax,(%rdx)
   1c386:	31 c0                	xor    %eax,%eax
   1c388:	c3                   	ret    

000000000001c389 <efi_block_io_reset>:
   1c389:	f3 0f 1e fa          	endbr64 
   1c38d:	31 c0                	xor    %eax,%eax
   1c38f:	c3                   	ret    

000000000001c390 <efi_block_io_read_blocks>:
   1c390:	f3 0f 1e fa          	endbr64 
   1c394:	48 b8 0c 00 00 00 00 	movabs $0x800000000000000c,%rax
   1c39b:	00 00 80 
   1c39e:	c3                   	ret    

000000000001c39f <efi_file_close>:
   1c39f:	f3 0f 1e fa          	endbr64 
   1c3a3:	55                   	push   %rbp
   1c3a4:	57                   	push   %rdi
   1c3a5:	48 8b 79 78          	mov    0x78(%rcx),%rdi
   1c3a9:	56                   	push   %rsi
   1c3aa:	48 85 ff             	test   %rdi,%rdi
   1c3ad:	74 10                	je     1c3bf <efi_file_close+0x20>
   1c3af:	48 89 cd             	mov    %rcx,%rbp
   1c3b2:	e8 63 3b ff ff       	call   ff1a <ref_decrement>
   1c3b7:	48 89 ef             	mov    %rbp,%rdi
   1c3ba:	e8 63 03 ff ff       	call   c722 <free>
   1c3bf:	5e                   	pop    %rsi
   1c3c0:	31 c0                	xor    %eax,%eax
   1c3c2:	5f                   	pop    %rdi
   1c3c3:	5d                   	pop    %rbp
   1c3c4:	c3                   	ret    

000000000001c3c5 <efi_file_delete>:
   1c3c5:	f3 0f 1e fa          	endbr64 
   1c3c9:	48 83 ec 28          	sub    $0x28,%rsp
   1c3cd:	e8 cd ff ff ff       	call   1c39f <efi_file_close>
   1c3d2:	b8 02 00 00 00       	mov    $0x2,%eax
   1c3d7:	48 83 c4 28          	add    $0x28,%rsp
   1c3db:	c3                   	ret    

000000000001c3dc <efi_file_open>:
   1c3dc:	f3 0f 1e fa          	endbr64 
   1c3e0:	55                   	push   %rbp
   1c3e1:	48 89 e5             	mov    %rsp,%rbp
   1c3e4:	41 57                	push   %r15
   1c3e6:	41 56                	push   %r14
   1c3e8:	4d 89 c6             	mov    %r8,%r14
   1c3eb:	41 55                	push   %r13
   1c3ed:	41 54                	push   %r12
   1c3ef:	4d 89 cc             	mov    %r9,%r12
   1c3f2:	57                   	push   %rdi
   1c3f3:	56                   	push   %rsi
   1c3f4:	53                   	push   %rbx
   1c3f5:	48 89 d3             	mov    %rdx,%rbx
   1c3f8:	48 8d 15 01 b7 00 00 	lea    0xb701(%rip),%rdx        # 27b00 <efi_file_root>
   1c3ff:	48 83 ec 18          	sub    $0x18,%rsp
   1c403:	48 8b 05 46 dc 00 00 	mov    0xdc46(%rip),%rax        # 2a050 <__stack_chk_guard>
   1c40a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1c40e:	31 c0                	xor    %eax,%eax
   1c410:	66 41 8b 06          	mov    (%r14),%ax
   1c414:	66 83 f8 5c          	cmp    $0x5c,%ax
   1c418:	75 09                	jne    1c423 <efi_file_open+0x47>
   1c41a:	49 83 c6 02          	add    $0x2,%r14
   1c41e:	48 89 d1             	mov    %rdx,%rcx
   1c421:	eb ed                	jmp    1c410 <efi_file_open+0x34>
   1c423:	66 85 c0             	test   %ax,%ax
   1c426:	74 06                	je     1c42e <efi_file_open+0x52>
   1c428:	66 83 f8 2e          	cmp    $0x2e,%ax
   1c42c:	75 0f                	jne    1c43d <efi_file_open+0x61>
   1c42e:	48 8d 05 cb b6 00 00 	lea    0xb6cb(%rip),%rax        # 27b00 <efi_file_root>
   1c435:	48 89 03             	mov    %rax,(%rbx)
   1c438:	e9 04 01 00 00       	jmp    1c541 <efi_file_open+0x165>
   1c43d:	48 83 79 78 00       	cmpq   $0x0,0x78(%rcx)
   1c442:	74 0f                	je     1c453 <efi_file_open+0x77>
   1c444:	48 b8 0e 00 00 00 00 	movabs $0x800000000000000e,%rax
   1c44b:	00 00 80 
   1c44e:	e9 f0 00 00 00       	jmp    1c543 <efi_file_open+0x167>
   1c453:	4c 89 f7             	mov    %r14,%rdi
   1c456:	49 89 e5             	mov    %rsp,%r13
   1c459:	e8 86 ae ff ff       	call   172e4 <wcslen>
   1c45e:	48 89 e1             	mov    %rsp,%rcx
   1c461:	48 8d 70 01          	lea    0x1(%rax),%rsi
   1c465:	48 83 c0 10          	add    $0x10,%rax
   1c469:	48 89 c2             	mov    %rax,%rdx
   1c46c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   1c472:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
   1c476:	48 29 c1             	sub    %rax,%rcx
   1c479:	48 39 cc             	cmp    %rcx,%rsp
   1c47c:	74 12                	je     1c490 <efi_file_open+0xb4>
   1c47e:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1c485:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1c48c:	00 00 
   1c48e:	eb e9                	jmp    1c479 <efi_file_open+0x9d>
   1c490:	48 89 d0             	mov    %rdx,%rax
   1c493:	25 ff 0f 00 00       	and    $0xfff,%eax
   1c498:	48 29 c4             	sub    %rax,%rsp
   1c49b:	48 85 c0             	test   %rax,%rax
   1c49e:	74 06                	je     1c4a6 <efi_file_open+0xca>
   1c4a0:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1c4a6:	4c 89 f1             	mov    %r14,%rcx
   1c4a9:	48 8d 15 ff 63 00 00 	lea    0x63ff(%rip),%rdx        # 228af <.LC0>
   1c4b0:	48 89 e7             	mov    %rsp,%rdi
   1c4b3:	31 c0                	xor    %eax,%eax
   1c4b5:	e8 a3 ac ff ff       	call   1715d <snprintf>
   1c4ba:	48 8b 05 0f b9 00 00 	mov    0xb90f(%rip),%rax        # 27dd0 <images>
   1c4c1:	49 89 e7             	mov    %rsp,%r15
   1c4c4:	4c 8d 70 f0          	lea    -0x10(%rax),%r14
   1c4c8:	49 8d 46 10          	lea    0x10(%r14),%rax
   1c4cc:	48 8d 35 fd b8 00 00 	lea    0xb8fd(%rip),%rsi        # 27dd0 <images>
   1c4d3:	48 39 f0             	cmp    %rsi,%rax
   1c4d6:	74 1a                	je     1c4f2 <efi_file_open+0x116>
   1c4d8:	49 8b 7e 28          	mov    0x28(%r14),%rdi
   1c4dc:	4c 89 fe             	mov    %r15,%rsi
   1c4df:	e8 e5 74 ff ff       	call   139c9 <strcasecmp>
   1c4e4:	85 c0                	test   %eax,%eax
   1c4e6:	74 0d                	je     1c4f5 <efi_file_open+0x119>
   1c4e8:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   1c4ec:	4c 8d 71 f0          	lea    -0x10(%rcx),%r14
   1c4f0:	eb d6                	jmp    1c4c8 <efi_file_open+0xec>
   1c4f2:	45 31 f6             	xor    %r14d,%r14d
   1c4f5:	4c 89 ec             	mov    %r13,%rsp
   1c4f8:	4d 85 f6             	test   %r14,%r14
   1c4fb:	0f 84 43 ff ff ff    	je     1c444 <efi_file_open+0x68>
   1c501:	48 b8 08 00 00 00 00 	movabs $0x8000000000000008,%rax
   1c508:	00 00 80 
   1c50b:	49 ff cc             	dec    %r12
   1c50e:	75 33                	jne    1c543 <efi_file_open+0x167>
   1c510:	bf 88 00 00 00       	mov    $0x88,%edi
   1c515:	e8 1c 02 ff ff       	call   c736 <zalloc>
   1c51a:	ba 78 00 00 00       	mov    $0x78,%edx
   1c51f:	48 8d 35 da b5 00 00 	lea    0xb5da(%rip),%rsi        # 27b00 <efi_file_root>
   1c526:	48 89 c7             	mov    %rax,%rdi
   1c529:	49 89 c4             	mov    %rax,%r12
   1c52c:	e8 b8 ae ff ff       	call   173e9 <__memcpy>
   1c531:	4c 89 f7             	mov    %r14,%rdi
   1c534:	e8 d5 39 ff ff       	call   ff0e <ref_increment>
   1c539:	4d 89 74 24 78       	mov    %r14,0x78(%r12)
   1c53e:	4c 89 23             	mov    %r12,(%rbx)
   1c541:	31 c0                	xor    %eax,%eax
   1c543:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1c547:	48 2b 15 02 db 00 00 	sub    0xdb02(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1c54e:	74 05                	je     1c555 <efi_file_open+0x179>
   1c550:	e8 0b 65 fe ff       	call   2a60 <__stack_chk_fail>
   1c555:	48 8d 65 c8          	lea    -0x38(%rbp),%rsp
   1c559:	5b                   	pop    %rbx
   1c55a:	5e                   	pop    %rsi
   1c55b:	5f                   	pop    %rdi
   1c55c:	41 5c                	pop    %r12
   1c55e:	41 5d                	pop    %r13
   1c560:	41 5e                	pop    %r14
   1c562:	41 5f                	pop    %r15
   1c564:	5d                   	pop    %rbp
   1c565:	c3                   	ret    

000000000001c566 <efi_disk_io_write_disk>:
   1c566:	f3 0f 1e fa          	endbr64 
   1c56a:	48 b8 0c 00 00 00 00 	movabs $0x800000000000000c,%rax
   1c571:	00 00 80 
   1c574:	c3                   	ret    

000000000001c575 <efi_block_io_write_blocks>:
   1c575:	f3 0f 1e fa          	endbr64 
   1c579:	48 b8 0c 00 00 00 00 	movabs $0x800000000000000c,%rax
   1c580:	00 00 80 
   1c583:	c3                   	ret    

000000000001c584 <efi_disk_io_read_disk>:
   1c584:	f3 0f 1e fa          	endbr64 
   1c588:	48 b8 0c 00 00 00 00 	movabs $0x800000000000000c,%rax
   1c58f:	00 00 80 
   1c592:	c3                   	ret    

000000000001c593 <efi_block_io_flush_blocks>:
   1c593:	f3 0f 1e fa          	endbr64 
   1c597:	31 c0                	xor    %eax,%eax
   1c599:	c3                   	ret    

000000000001c59a <efi_file_info>:
   1c59a:	41 56                	push   %r14
   1c59c:	49 89 f8             	mov    %rdi,%r8
   1c59f:	b9 58 00 00 00       	mov    $0x58,%ecx
   1c5a4:	41 55                	push   %r13
   1c5a6:	41 54                	push   %r12
   1c5a8:	49 89 f4             	mov    %rsi,%r12
   1c5ab:	55                   	push   %rbp
   1c5ac:	53                   	push   %rbx
   1c5ad:	48 89 d3             	mov    %rdx,%rbx
   1c5b0:	48 83 ec 60          	sub    $0x60,%rsp
   1c5b4:	48 8b 05 95 da 00 00 	mov    0xda95(%rip),%rax        # 2a050 <__stack_chk_guard>
   1c5bb:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1c5c0:	31 c0                	xor    %eax,%eax
   1c5c2:	49 89 e6             	mov    %rsp,%r14
   1c5c5:	4c 89 f7             	mov    %r14,%rdi
   1c5c8:	f3 aa                	rep stos %al,%es:(%rdi)
   1c5ca:	4d 85 c0             	test   %r8,%r8
   1c5cd:	74 1d                	je     1c5ec <efi_file_info+0x52>
   1c5cf:	49 8b 40 48          	mov    0x48(%r8),%rax
   1c5d3:	4d 8b 68 28          	mov    0x28(%r8),%r13
   1c5d7:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   1c5de:	00 00 
   1c5e0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c5e5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c5ea:	eb 10                	jmp    1c5fc <efi_file_info+0x62>
   1c5ec:	48 c7 44 24 48 11 00 	movq   $0x11,0x48(%rsp)
   1c5f3:	00 00 
   1c5f5:	4c 8d 2d b8 7e 00 00 	lea    0x7eb8(%rip),%r13        # 244b4 <.LC0>
   1c5fc:	4c 89 ef             	mov    %r13,%rdi
   1c5ff:	e8 12 74 ff ff       	call   13a16 <strlen>
   1c604:	48 8d 68 01          	lea    0x1(%rax),%rbp
   1c608:	48 8d 44 2d 00       	lea    0x0(%rbp,%rbp,1),%rax
   1c60d:	48 83 c0 50          	add    $0x50,%rax
   1c611:	49 3b 04 24          	cmp    (%r12),%rax
   1c615:	48 89 04 24          	mov    %rax,(%rsp)
   1c619:	49 89 04 24          	mov    %rax,(%r12)
   1c61d:	48 b8 05 00 00 00 00 	movabs $0x8000000000000005,%rax
   1c624:	00 00 80 
   1c627:	77 2a                	ja     1c653 <efi_file_info+0xb9>
   1c629:	ba 50 00 00 00       	mov    $0x50,%edx
   1c62e:	4c 89 f6             	mov    %r14,%rsi
   1c631:	48 89 df             	mov    %rbx,%rdi
   1c634:	e8 b0 ad ff ff       	call   173e9 <__memcpy>
   1c639:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
   1c63d:	4c 89 e9             	mov    %r13,%rcx
   1c640:	48 89 ee             	mov    %rbp,%rsi
   1c643:	48 8d 15 b7 70 00 00 	lea    0x70b7(%rip),%rdx        # 23701 <.LC0>
   1c64a:	31 c0                	xor    %eax,%eax
   1c64c:	e8 c3 a3 fe ff       	call   6a14 <efi_snprintf>
   1c651:	31 c0                	xor    %eax,%eax
   1c653:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   1c658:	48 2b 15 f1 d9 00 00 	sub    0xd9f1(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1c65f:	74 05                	je     1c666 <efi_file_info+0xcc>
   1c661:	e8 fa 63 fe ff       	call   2a60 <__stack_chk_fail>
   1c666:	48 83 c4 60          	add    $0x60,%rsp
   1c66a:	5b                   	pop    %rbx
   1c66b:	5d                   	pop    %rbp
   1c66c:	41 5c                	pop    %r12
   1c66e:	41 5d                	pop    %r13
   1c670:	41 5e                	pop    %r14
   1c672:	c3                   	ret    

000000000001c673 <efi_file_read>:
   1c673:	f3 0f 1e fa          	endbr64 
   1c677:	55                   	push   %rbp
   1c678:	48 89 d5             	mov    %rdx,%rbp
   1c67b:	57                   	push   %rdi
   1c67c:	56                   	push   %rsi
   1c67d:	53                   	push   %rbx
   1c67e:	48 89 cb             	mov    %rcx,%rbx
   1c681:	41 51                	push   %r9
   1c683:	48 8b 51 78          	mov    0x78(%rcx),%rdx
   1c687:	48 8b b1 80 00 00 00 	mov    0x80(%rcx),%rsi
   1c68e:	48 85 d2             	test   %rdx,%rdx
   1c691:	75 4e                	jne    1c6e1 <efi_file_read+0x6e>
   1c693:	48 8b 05 36 b7 00 00 	mov    0xb736(%rip),%rax        # 27dd0 <images>
   1c69a:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
   1c69e:	48 8d 05 2b b7 00 00 	lea    0xb72b(%rip),%rax        # 27dd0 <images>
   1c6a5:	48 8d 57 10          	lea    0x10(%rdi),%rdx
   1c6a9:	48 39 c2             	cmp    %rax,%rdx
   1c6ac:	74 29                	je     1c6d7 <efi_file_read+0x64>
   1c6ae:	85 f6                	test   %esi,%esi
   1c6b0:	75 19                	jne    1c6cb <efi_file_read+0x58>
   1c6b2:	4c 89 c2             	mov    %r8,%rdx
   1c6b5:	48 89 ee             	mov    %rbp,%rsi
   1c6b8:	e8 dd fe ff ff       	call   1c59a <efi_file_info>
   1c6bd:	48 85 c0             	test   %rax,%rax
   1c6c0:	75 4d                	jne    1c70f <efi_file_read+0x9c>
   1c6c2:	48 ff 83 80 00 00 00 	incq   0x80(%rbx)
   1c6c9:	eb 44                	jmp    1c70f <efi_file_read+0x9c>
   1c6cb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1c6cf:	ff ce                	dec    %esi
   1c6d1:	48 83 ef 10          	sub    $0x10,%rdi
   1c6d5:	eb ce                	jmp    1c6a5 <efi_file_read+0x32>
   1c6d7:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   1c6de:	00 
   1c6df:	eb 2c                	jmp    1c70d <efi_file_read+0x9a>
   1c6e1:	48 8b 42 48          	mov    0x48(%rdx),%rax
   1c6e5:	48 29 f0             	sub    %rsi,%rax
   1c6e8:	48 39 45 00          	cmp    %rax,0x0(%rbp)
   1c6ec:	76 04                	jbe    1c6f2 <efi_file_read+0x7f>
   1c6ee:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1c6f2:	48 03 72 40          	add    0x40(%rdx),%rsi
   1c6f6:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1c6fa:	4c 89 c7             	mov    %r8,%rdi
   1c6fd:	e8 e7 ac ff ff       	call   173e9 <__memcpy>
   1c702:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1c706:	48 01 83 80 00 00 00 	add    %rax,0x80(%rbx)
   1c70d:	31 c0                	xor    %eax,%eax
   1c70f:	5a                   	pop    %rdx
   1c710:	5b                   	pop    %rbx
   1c711:	5e                   	pop    %rsi
   1c712:	5f                   	pop    %rdi
   1c713:	5d                   	pop    %rbp
   1c714:	c3                   	ret    

000000000001c715 <efi_file_get_info>:
   1c715:	f3 0f 1e fa          	endbr64 
   1c719:	41 57                	push   %r15
   1c71b:	41 56                	push   %r14
   1c71d:	49 89 ce             	mov    %rcx,%r14
   1c720:	41 55                	push   %r13
   1c722:	49 89 d5             	mov    %rdx,%r13
   1c725:	ba 10 00 00 00       	mov    $0x10,%edx
   1c72a:	41 54                	push   %r12
   1c72c:	4d 89 cc             	mov    %r9,%r12
   1c72f:	55                   	push   %rbp
   1c730:	4c 89 c5             	mov    %r8,%rbp
   1c733:	57                   	push   %rdi
   1c734:	4c 89 ef             	mov    %r13,%rdi
   1c737:	56                   	push   %rsi
   1c738:	48 8d 35 a1 80 00 00 	lea    0x80a1(%rip),%rsi        # 247e0 <efi_file_info_id>
   1c73f:	48 83 ec 30          	sub    $0x30,%rsp
   1c743:	48 8b 05 06 d9 00 00 	mov    0xd906(%rip),%rax        # 2a050 <__stack_chk_guard>
   1c74a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1c74f:	31 c0                	xor    %eax,%eax
   1c751:	e8 da 71 ff ff       	call   13930 <memcmp>
   1c756:	85 c0                	test   %eax,%eax
   1c758:	75 17                	jne    1c771 <efi_file_get_info+0x5c>
   1c75a:	49 8b 7e 78          	mov    0x78(%r14),%rdi
   1c75e:	4c 89 e2             	mov    %r12,%rdx
   1c761:	48 89 ee             	mov    %rbp,%rsi
   1c764:	e8 31 fe ff ff       	call   1c59a <efi_file_info>
   1c769:	49 89 c1             	mov    %rax,%r9
   1c76c:	e9 d3 00 00 00       	jmp    1c844 <efi_file_get_info+0x12f>
   1c771:	ba 10 00 00 00       	mov    $0x10,%edx
   1c776:	48 8d 35 53 80 00 00 	lea    0x8053(%rip),%rsi        # 247d0 <efi_file_system_info_id>
   1c77d:	4c 89 ef             	mov    %r13,%rdi
   1c780:	e8 ab 71 ff ff       	call   13930 <memcmp>
   1c785:	49 b9 03 00 00 00 00 	movabs $0x8000000000000003,%r9
   1c78c:	00 00 80 
   1c78f:	85 c0                	test   %eax,%eax
   1c791:	0f 85 ad 00 00 00    	jne    1c844 <efi_file_get_info+0x12f>
   1c797:	49 89 e7             	mov    %rsp,%r15
   1c79a:	b9 28 00 00 00       	mov    $0x28,%ecx
   1c79f:	4c 89 ff             	mov    %r15,%rdi
   1c7a2:	f3 aa                	rep stos %al,%es:(%rdi)
   1c7a4:	48 8b 05 25 b6 00 00 	mov    0xb625(%rip),%rax        # 27dd0 <images>
   1c7ab:	c6 44 24 08 01       	movb   $0x1,0x8(%rsp)
   1c7b0:	31 c9                	xor    %ecx,%ecx
   1c7b2:	4c 8d 05 17 b6 00 00 	lea    0xb617(%rip),%r8        # 27dd0 <images>
   1c7b9:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1c7be:	48 83 e8 10          	sub    $0x10,%rax
   1c7c2:	4c 8d 48 10          	lea    0x10(%rax),%r9
   1c7c6:	4d 39 c1             	cmp    %r8,%r9
   1c7c9:	74 10                	je     1c7db <efi_file_get_info+0xc6>
   1c7cb:	48 03 50 48          	add    0x48(%rax),%rdx
   1c7cf:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c7d3:	b1 01                	mov    $0x1,%cl
   1c7d5:	48 83 e8 10          	sub    $0x10,%rax
   1c7d9:	eb e7                	jmp    1c7c2 <efi_file_get_info+0xad>
   1c7db:	84 c9                	test   %cl,%cl
   1c7dd:	74 05                	je     1c7e4 <efi_file_get_info+0xcf>
   1c7df:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1c7e4:	4c 8d 35 7d 79 00 00 	lea    0x797d(%rip),%r14        # 24168 <.LC1>
   1c7eb:	4c 89 f7             	mov    %r14,%rdi
   1c7ee:	e8 23 72 ff ff       	call   13a16 <strlen>
   1c7f3:	49 b9 05 00 00 00 00 	movabs $0x8000000000000005,%r9
   1c7fa:	00 00 80 
   1c7fd:	4c 8d 68 01          	lea    0x1(%rax),%r13
   1c801:	4b 8d 44 2d 00       	lea    0x0(%r13,%r13,1),%rax
   1c806:	48 83 c0 24          	add    $0x24,%rax
   1c80a:	48 3b 45 00          	cmp    0x0(%rbp),%rax
   1c80e:	48 89 04 24          	mov    %rax,(%rsp)
   1c812:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1c816:	77 2c                	ja     1c844 <efi_file_get_info+0x12f>
   1c818:	ba 24 00 00 00       	mov    $0x24,%edx
   1c81d:	4c 89 fe             	mov    %r15,%rsi
   1c820:	4c 89 e7             	mov    %r12,%rdi
   1c823:	e8 c1 ab ff ff       	call   173e9 <__memcpy>
   1c828:	49 8d 7c 24 24       	lea    0x24(%r12),%rdi
   1c82d:	4c 89 f1             	mov    %r14,%rcx
   1c830:	4c 89 ee             	mov    %r13,%rsi
   1c833:	48 8d 15 c7 6e 00 00 	lea    0x6ec7(%rip),%rdx        # 23701 <.LC0>
   1c83a:	31 c0                	xor    %eax,%eax
   1c83c:	e8 d3 a1 fe ff       	call   6a14 <efi_snprintf>
   1c841:	45 31 c9             	xor    %r9d,%r9d
   1c844:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1c849:	48 2b 05 00 d8 00 00 	sub    0xd800(%rip),%rax        # 2a050 <__stack_chk_guard>
   1c850:	74 05                	je     1c857 <efi_file_get_info+0x142>
   1c852:	e8 09 62 fe ff       	call   2a60 <__stack_chk_fail>
   1c857:	48 83 c4 30          	add    $0x30,%rsp
   1c85b:	4c 89 c8             	mov    %r9,%rax
   1c85e:	5e                   	pop    %rsi
   1c85f:	5f                   	pop    %rdi
   1c860:	5d                   	pop    %rbp
   1c861:	41 5c                	pop    %r12
   1c863:	41 5d                	pop    %r13
   1c865:	41 5e                	pop    %r14
   1c867:	41 5f                	pop    %r15
   1c869:	c3                   	ret    

000000000001c86a <efi_file_install>:
   1c86a:	f3 0f 1e fa          	endbr64 
   1c86e:	41 57                	push   %r15
   1c870:	4c 8d 0d e9 81 00 00 	lea    0x81e9(%rip),%r9        # 24a60 <efi_disk_io_protocol_guid>
   1c877:	4c 8d 05 42 b2 00 00 	lea    0xb242(%rip),%r8        # 27ac0 <efi_block_io_protocol>
   1c87e:	41 56                	push   %r14
   1c880:	4c 8d 35 69 82 00 00 	lea    0x8269(%rip),%r14        # 24af0 <efi_block_io_protocol_guid>
   1c887:	41 55                	push   %r13
   1c889:	4c 8d 2d 70 80 00 00 	lea    0x8070(%rip),%r13        # 24900 <efi_simple_file_system_protocol_guid>
   1c890:	4c 89 f2             	mov    %r14,%rdx
   1c893:	41 54                	push   %r12
   1c895:	55                   	push   %rbp
   1c896:	48 8d 2d 03 b2 00 00 	lea    0xb203(%rip),%rbp        # 27aa0 <efi_disk_io_protocol>
   1c89d:	53                   	push   %rbx
   1c89e:	48 8d 1d 4b b2 00 00 	lea    0xb24b(%rip),%rbx        # 27af0 <efi_simple_file_system_protocol>
   1c8a5:	48 83 ec 28          	sub    $0x28,%rsp
   1c8a9:	48 8b 05 a0 d7 00 00 	mov    0xd7a0(%rip),%rax        # 2a050 <__stack_chk_guard>
   1c8b0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c8b5:	48 8b 05 bc d7 00 00 	mov    0xd7bc(%rip),%rax        # 2a078 <efi_systab>
   1c8bc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1c8c1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   1c8c6:	4c 8b 78 60          	mov    0x60(%rax),%r15
   1c8ca:	6a 00                	push   $0x0
   1c8cc:	53                   	push   %rbx
   1c8cd:	41 55                	push   %r13
   1c8cf:	55                   	push   %rbp
   1c8d0:	48 c7 05 a5 b2 00 00 	movq   $0x0,0xb2a5(%rip)        # 27b80 <efi_file_root+0x80>
   1c8d7:	00 00 00 00 
   1c8db:	48 83 ec 20          	sub    $0x20,%rsp
   1c8df:	41 ff 97 48 01 00 00 	call   *0x148(%r15)
   1c8e6:	48 83 c4 40          	add    $0x40,%rsp
   1c8ea:	48 85 c0             	test   %rax,%rax
   1c8ed:	74 1a                	je     1c909 <efi_file_install+0x9f>
   1c8ef:	49 89 c4             	mov    %rax,%r12
   1c8f2:	49 c1 ec 38          	shr    $0x38,%r12
   1c8f6:	41 09 c4             	or     %eax,%r12d
   1c8f9:	45 0f b6 e4          	movzbl %r12b,%r12d
   1c8fd:	41 81 cc 00 e0 38 7f 	or     $0x7f38e000,%r12d
   1c904:	41 f7 dc             	neg    %r12d
   1c907:	eb 7b                	jmp    1c984 <efi_file_install+0x11a>
   1c909:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c90e:	6a 10                	push   $0x10
   1c910:	48 8d 15 49 81 00 00 	lea    0x8149(%rip),%rdx        # 24a60 <efi_disk_io_protocol_guid>
   1c917:	45 31 e4             	xor    %r12d,%r12d
   1c91a:	4c 8b 0d 47 d7 00 00 	mov    0xd747(%rip),%r9        # 2a068 <efi_image_handle>
   1c921:	51                   	push   %rcx
   1c922:	48 83 ec 20          	sub    $0x20,%rsp
   1c926:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
   1c92b:	41 ff 97 18 01 00 00 	call   *0x118(%r15)
   1c932:	48 83 c4 30          	add    $0x30,%rsp
   1c936:	48 8d 15 23 81 00 00 	lea    0x8123(%rip),%rdx        # 24a60 <efi_disk_io_protocol_guid>
   1c93d:	48 85 c0             	test   %rax,%rax
   1c940:	74 42                	je     1c984 <efi_file_install+0x11a>
   1c942:	49 89 c4             	mov    %rax,%r12
   1c945:	6a 00                	push   $0x0
   1c947:	49 89 d1             	mov    %rdx,%r9
   1c94a:	49 89 d8             	mov    %rbx,%r8
   1c94d:	49 c1 ec 38          	shr    $0x38,%r12
   1c951:	4c 89 ea             	mov    %r13,%rdx
   1c954:	41 09 c4             	or     %eax,%r12d
   1c957:	48 8d 05 62 b1 00 00 	lea    0xb162(%rip),%rax        # 27ac0 <efi_block_io_protocol>
   1c95e:	50                   	push   %rax
   1c95f:	45 0f b6 e4          	movzbl %r12b,%r12d
   1c963:	41 56                	push   %r14
   1c965:	41 81 cc 00 e0 38 7f 	or     $0x7f38e000,%r12d
   1c96c:	55                   	push   %rbp
   1c96d:	41 f7 dc             	neg    %r12d
   1c970:	48 83 ec 20          	sub    $0x20,%rsp
   1c974:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1c979:	41 ff 97 50 01 00 00 	call   *0x150(%r15)
   1c980:	48 83 c4 40          	add    $0x40,%rsp
   1c984:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1c989:	48 2b 05 c0 d6 00 00 	sub    0xd6c0(%rip),%rax        # 2a050 <__stack_chk_guard>
   1c990:	74 05                	je     1c997 <efi_file_install+0x12d>
   1c992:	e8 c9 60 fe ff       	call   2a60 <__stack_chk_fail>
   1c997:	48 83 c4 28          	add    $0x28,%rsp
   1c99b:	44 89 e0             	mov    %r12d,%eax
   1c99e:	5b                   	pop    %rbx
   1c99f:	5d                   	pop    %rbp
   1c9a0:	41 5c                	pop    %r12
   1c9a2:	41 5d                	pop    %r13
   1c9a4:	41 5e                	pop    %r14
   1c9a6:	41 5f                	pop    %r15
   1c9a8:	c3                   	ret    

000000000001c9a9 <efi_file_uninstall>:
   1c9a9:	f3 0f 1e fa          	endbr64 
   1c9ad:	41 54                	push   %r12
   1c9af:	48 8b 05 c2 d6 00 00 	mov    0xd6c2(%rip),%rax        # 2a078 <efi_systab>
   1c9b6:	49 89 fc             	mov    %rdi,%r12
   1c9b9:	49 89 f9             	mov    %rdi,%r9
   1c9bc:	55                   	push   %rbp
   1c9bd:	48 8d 2d 9c 80 00 00 	lea    0x809c(%rip),%rbp        # 24a60 <efi_disk_io_protocol_guid>
   1c9c4:	48 89 f9             	mov    %rdi,%rcx
   1c9c7:	4c 8b 05 9a d6 00 00 	mov    0xd69a(%rip),%r8        # 2a068 <efi_image_handle>
   1c9ce:	53                   	push   %rbx
   1c9cf:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1c9d3:	48 89 ea             	mov    %rbp,%rdx
   1c9d6:	48 83 ec 20          	sub    $0x20,%rsp
   1c9da:	ff 93 20 01 00 00    	call   *0x120(%rbx)
   1c9e0:	48 83 c4 20          	add    $0x20,%rsp
   1c9e4:	49 89 e9             	mov    %rbp,%r9
   1c9e7:	4c 89 e1             	mov    %r12,%rcx
   1c9ea:	48 8d 05 cf b0 00 00 	lea    0xb0cf(%rip),%rax        # 27ac0 <efi_block_io_protocol>
   1c9f1:	6a 00                	push   $0x0
   1c9f3:	4c 8d 05 f6 b0 00 00 	lea    0xb0f6(%rip),%r8        # 27af0 <efi_simple_file_system_protocol>
   1c9fa:	50                   	push   %rax
   1c9fb:	48 8d 05 ee 80 00 00 	lea    0x80ee(%rip),%rax        # 24af0 <efi_block_io_protocol_guid>
   1ca02:	48 8d 15 f7 7e 00 00 	lea    0x7ef7(%rip),%rdx        # 24900 <efi_simple_file_system_protocol_guid>
   1ca09:	50                   	push   %rax
   1ca0a:	48 8d 05 8f b0 00 00 	lea    0xb08f(%rip),%rax        # 27aa0 <efi_disk_io_protocol>
   1ca11:	50                   	push   %rax
   1ca12:	48 83 ec 20          	sub    $0x20,%rsp
   1ca16:	ff 93 50 01 00 00    	call   *0x150(%rbx)
   1ca1c:	48 83 c4 40          	add    $0x40,%rsp
   1ca20:	48 85 c0             	test   %rax,%rax
   1ca23:	74 00                	je     1ca25 <efi_file_uninstall+0x7c>
   1ca25:	5b                   	pop    %rbx
   1ca26:	5d                   	pop    %rbp
   1ca27:	41 5c                	pop    %r12
   1ca29:	c3                   	ret    

000000000001ca2a <efi_ifr_op>:
   1ca2a:	31 c0                	xor    %eax,%eax
   1ca2c:	83 7f 2c 00          	cmpl   $0x0,0x2c(%rdi)
   1ca30:	75 64                	jne    1ca96 <efi_ifr_op+0x6c>
   1ca32:	41 55                	push   %r13
   1ca34:	41 54                	push   %r12
   1ca36:	41 89 f4             	mov    %esi,%r12d
   1ca39:	55                   	push   %rbp
   1ca3a:	48 89 d5             	mov    %rdx,%rbp
   1ca3d:	53                   	push   %rbx
   1ca3e:	48 89 fb             	mov    %rdi,%rbx
   1ca41:	51                   	push   %rcx
   1ca42:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   1ca46:	48 8b 3f             	mov    (%rdi),%rdi
   1ca49:	49 01 d5             	add    %rdx,%r13
   1ca4c:	4c 89 ee             	mov    %r13,%rsi
   1ca4f:	e8 c6 fb fe ff       	call   c61a <realloc>
   1ca54:	48 85 c0             	test   %rax,%rax
   1ca57:	75 09                	jne    1ca62 <efi_ifr_op+0x38>
   1ca59:	c7 43 2c 01 00 00 00 	movl   $0x1,0x2c(%rbx)
   1ca60:	eb 2c                	jmp    1ca8e <efi_ifr_op+0x64>
   1ca62:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1ca66:	48 89 03             	mov    %rax,(%rbx)
   1ca69:	48 89 e9             	mov    %rbp,%rcx
   1ca6c:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   1ca70:	48 01 c2             	add    %rax,%rdx
   1ca73:	31 c0                	xor    %eax,%eax
   1ca75:	48 89 d7             	mov    %rdx,%rdi
   1ca78:	f3 aa                	rep stos %al,%es:(%rdi)
   1ca7a:	8a 42 01             	mov    0x1(%rdx),%al
   1ca7d:	83 e5 7f             	and    $0x7f,%ebp
   1ca80:	44 88 22             	mov    %r12b,(%rdx)
   1ca83:	83 e0 80             	and    $0xffffff80,%eax
   1ca86:	09 e8                	or     %ebp,%eax
   1ca88:	88 42 01             	mov    %al,0x1(%rdx)
   1ca8b:	48 89 d0             	mov    %rdx,%rax
   1ca8e:	5a                   	pop    %rdx
   1ca8f:	5b                   	pop    %rbx
   1ca90:	5d                   	pop    %rbp
   1ca91:	41 5c                	pop    %r12
   1ca93:	41 5d                	pop    %r13
   1ca95:	c3                   	ret    
   1ca96:	c3                   	ret    

000000000001ca97 <efi_ifr_string>:
   1ca97:	f3 0f 1e fa          	endbr64 
   1ca9b:	41 57                	push   %r15
   1ca9d:	41 56                	push   %r14
   1ca9f:	41 55                	push   %r13
   1caa1:	41 54                	push   %r12
   1caa3:	45 31 e4             	xor    %r12d,%r12d
   1caa6:	55                   	push   %rbp
   1caa7:	53                   	push   %rbx
   1caa8:	48 83 ec 58          	sub    $0x58,%rsp
   1caac:	48 8b 05 9d d5 00 00 	mov    0xd59d(%rip),%rax        # 2a050 <__stack_chk_guard>
   1cab3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1cab8:	31 c0                	xor    %eax,%eax
   1caba:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1cabf:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1cac4:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1cac9:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1cace:	83 7f 2c 00          	cmpl   $0x0,0x2c(%rdi)
   1cad2:	0f 85 b0 00 00 00    	jne    1cb88 <efi_ifr_string+0xf1>
   1cad8:	49 89 e6             	mov    %rsp,%r14
   1cadb:	48 89 fb             	mov    %rdi,%rbx
   1cade:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   1cae5:	00 
   1cae6:	31 ff                	xor    %edi,%edi
   1cae8:	48 89 f2             	mov    %rsi,%rdx
   1caeb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1caf0:	49 89 f5             	mov    %rsi,%r13
   1caf3:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1caf8:	31 f6                	xor    %esi,%esi
   1cafa:	4c 89 f1             	mov    %r14,%rcx
   1cafd:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1cb02:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   1cb09:	e8 97 9e fe ff       	call   69a5 <efi_vsnprintf>
   1cb0e:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1cb12:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1cb16:	8d 68 01             	lea    0x1(%rax),%ebp
   1cb19:	48 63 ed             	movslq %ebp,%rbp
   1cb1c:	48 8d 44 2d 00       	lea    0x0(%rbp,%rbp,1),%rax
   1cb21:	4c 8d 7c 02 01       	lea    0x1(%rdx,%rax,1),%r15
   1cb26:	4c 89 fe             	mov    %r15,%rsi
   1cb29:	e8 ec fa fe ff       	call   c61a <realloc>
   1cb2e:	48 85 c0             	test   %rax,%rax
   1cb31:	75 09                	jne    1cb3c <efi_ifr_string+0xa5>
   1cb33:	c7 43 2c 01 00 00 00 	movl   $0x1,0x2c(%rbx)
   1cb3a:	eb 4c                	jmp    1cb88 <efi_ifr_string+0xf1>
   1cb3c:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1cb40:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1cb44:	4c 89 f1             	mov    %r14,%rcx
   1cb47:	4c 89 ea             	mov    %r13,%rdx
   1cb4a:	4c 89 7b 18          	mov    %r15,0x18(%rbx)
   1cb4e:	48 89 ee             	mov    %rbp,%rsi
   1cb51:	48 01 c7             	add    %rax,%rdi
   1cb54:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   1cb5b:	00 
   1cb5c:	c6 07 14             	movb   $0x14,(%rdi)
   1cb5f:	48 ff c7             	inc    %rdi
   1cb62:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cb67:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1cb6c:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   1cb73:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1cb78:	e8 28 9e fe ff       	call   69a5 <efi_vsnprintf>
   1cb7d:	8b 43 20             	mov    0x20(%rbx),%eax
   1cb80:	44 8d 60 01          	lea    0x1(%rax),%r12d
   1cb84:	44 89 63 20          	mov    %r12d,0x20(%rbx)
   1cb88:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1cb8d:	48 2b 05 bc d4 00 00 	sub    0xd4bc(%rip),%rax        # 2a050 <__stack_chk_guard>
   1cb94:	74 05                	je     1cb9b <efi_ifr_string+0x104>
   1cb96:	e8 c5 5e fe ff       	call   2a60 <__stack_chk_fail>
   1cb9b:	48 83 c4 58          	add    $0x58,%rsp
   1cb9f:	44 89 e0             	mov    %r12d,%eax
   1cba2:	5b                   	pop    %rbx
   1cba3:	5d                   	pop    %rbp
   1cba4:	41 5c                	pop    %r12
   1cba6:	41 5d                	pop    %r13
   1cba8:	41 5e                	pop    %r14
   1cbaa:	41 5f                	pop    %r15
   1cbac:	c3                   	ret    

000000000001cbad <efi_ifr_end_op>:
   1cbad:	f3 0f 1e fa          	endbr64 
   1cbb1:	ba 02 00 00 00       	mov    $0x2,%edx
   1cbb6:	be 29 00 00 00       	mov    $0x29,%esi
   1cbbb:	e9 6a fe ff ff       	jmp    1ca2a <efi_ifr_op>

000000000001cbc0 <efi_ifr_form_op>:
   1cbc0:	f3 0f 1e fa          	endbr64 
   1cbc4:	55                   	push   %rbp
   1cbc5:	89 f5                	mov    %esi,%ebp
   1cbc7:	ba 06 00 00 00       	mov    $0x6,%edx
   1cbcc:	be 01 00 00 00       	mov    $0x1,%esi
   1cbd1:	53                   	push   %rbx
   1cbd2:	48 89 fb             	mov    %rdi,%rbx
   1cbd5:	51                   	push   %rcx
   1cbd6:	e8 4f fe ff ff       	call   1ca2a <efi_ifr_op>
   1cbdb:	48 89 c1             	mov    %rax,%rcx
   1cbde:	31 c0                	xor    %eax,%eax
   1cbe0:	48 85 c9             	test   %rcx,%rcx
   1cbe3:	74 18                	je     1cbfd <efi_ifr_form_op+0x3d>
   1cbe5:	8b 43 28             	mov    0x28(%rbx),%eax
   1cbe8:	80 49 01 80          	orb    $0x80,0x1(%rcx)
   1cbec:	8d 50 01             	lea    0x1(%rax),%edx
   1cbef:	89 53 28             	mov    %edx,0x28(%rbx)
   1cbf2:	0f b7 c2             	movzwl %dx,%eax
   1cbf5:	66 89 51 02          	mov    %dx,0x2(%rcx)
   1cbf9:	66 89 69 04          	mov    %bp,0x4(%rcx)
   1cbfd:	5a                   	pop    %rdx
   1cbfe:	5b                   	pop    %rbx
   1cbff:	5d                   	pop    %rbp
   1cc00:	c3                   	ret    

000000000001cc01 <efi_ifr_form_set_op>:
   1cc01:	f3 0f 1e fa          	endbr64 
   1cc05:	41 55                	push   %r13
   1cc07:	41 89 cd             	mov    %ecx,%r13d
   1cc0a:	41 54                	push   %r12
   1cc0c:	41 89 d4             	mov    %edx,%r12d
   1cc0f:	ba 20 00 00 00       	mov    $0x20,%edx
   1cc14:	55                   	push   %rbp
   1cc15:	31 ed                	xor    %ebp,%ebp
   1cc17:	53                   	push   %rbx
   1cc18:	48 89 f3             	mov    %rsi,%rbx
   1cc1b:	48 83 ec 58          	sub    $0x58,%rsp
   1cc1f:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1cc24:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1cc29:	48 8b 05 20 d4 00 00 	mov    0xd420(%rip),%rax        # 2a050 <__stack_chk_guard>
   1cc30:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1cc35:	31 c0                	xor    %eax,%eax
   1cc37:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1cc3c:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1cc43:	00 
   1cc44:	c7 04 24 20 00 00 00 	movl   $0x20,(%rsp)
   1cc4b:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1cc50:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cc55:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1cc5c:	00 
   1cc5d:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1cc61:	83 fa 2f             	cmp    $0x2f,%edx
   1cc64:	77 0d                	ja     1cc73 <efi_ifr_form_set_op+0x72>
   1cc66:	41 89 d0             	mov    %edx,%r8d
   1cc69:	48 89 c1             	mov    %rax,%rcx
   1cc6c:	83 c2 08             	add    $0x8,%edx
   1cc6f:	4a 8d 04 06          	lea    (%rsi,%r8,1),%rax
   1cc73:	48 83 38 00          	cmpq   $0x0,(%rax)
   1cc77:	74 07                	je     1cc80 <efi_ifr_form_set_op+0x7f>
   1cc79:	ff c5                	inc    %ebp
   1cc7b:	48 89 c8             	mov    %rcx,%rax
   1cc7e:	eb dd                	jmp    1cc5d <efi_ifr_form_set_op+0x5c>
   1cc80:	89 ea                	mov    %ebp,%edx
   1cc82:	be 0e 00 00 00       	mov    $0xe,%esi
   1cc87:	48 c1 e2 04          	shl    $0x4,%rdx
   1cc8b:	48 83 c2 17          	add    $0x17,%rdx
   1cc8f:	e8 96 fd ff ff       	call   1ca2a <efi_ifr_op>
   1cc94:	48 85 c0             	test   %rax,%rax
   1cc97:	74 7a                	je     1cd13 <efi_ifr_form_set_op+0x112>
   1cc99:	80 48 01 80          	orb    $0x80,0x1(%rax)
   1cc9d:	48 8d 78 02          	lea    0x2(%rax),%rdi
   1cca1:	48 89 de             	mov    %rbx,%rsi
   1cca4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cca5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cca6:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cca7:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cca8:	66 44 89 60 12       	mov    %r12w,0x12(%rax)
   1ccad:	48 8d 78 17          	lea    0x17(%rax),%rdi
   1ccb1:	66 44 89 68 14       	mov    %r13w,0x14(%rax)
   1ccb6:	40 88 68 16          	mov    %bpl,0x16(%rax)
   1ccba:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1ccc1:	00 
   1ccc2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ccc7:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1cccc:	c7 04 24 20 00 00 00 	movl   $0x20,(%rsp)
   1ccd3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ccd8:	85 ed                	test   %ebp,%ebp
   1ccda:	74 37                	je     1cd13 <efi_ifr_form_set_op+0x112>
   1ccdc:	8b 14 24             	mov    (%rsp),%edx
   1ccdf:	83 fa 2f             	cmp    $0x2f,%edx
   1cce2:	77 0f                	ja     1ccf3 <efi_ifr_form_set_op+0xf2>
   1cce4:	89 d0                	mov    %edx,%eax
   1cce6:	83 c2 08             	add    $0x8,%edx
   1cce9:	48 03 44 24 10       	add    0x10(%rsp),%rax
   1ccee:	89 14 24             	mov    %edx,(%rsp)
   1ccf1:	eb 0e                	jmp    1cd01 <efi_ifr_form_set_op+0x100>
   1ccf3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1ccf8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1ccfc:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1cd01:	48 8b 30             	mov    (%rax),%rsi
   1cd04:	48 8d 57 10          	lea    0x10(%rdi),%rdx
   1cd08:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd09:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd0a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd0b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd0c:	ff cd                	dec    %ebp
   1cd0e:	48 89 d7             	mov    %rdx,%rdi
   1cd11:	eb c5                	jmp    1ccd8 <efi_ifr_form_set_op+0xd7>
   1cd13:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1cd18:	48 2b 05 31 d3 00 00 	sub    0xd331(%rip),%rax        # 2a050 <__stack_chk_guard>
   1cd1f:	74 05                	je     1cd26 <efi_ifr_form_set_op+0x125>
   1cd21:	e8 3a 5d fe ff       	call   2a60 <__stack_chk_fail>
   1cd26:	48 83 c4 58          	add    $0x58,%rsp
   1cd2a:	5b                   	pop    %rbx
   1cd2b:	5d                   	pop    %rbp
   1cd2c:	41 5c                	pop    %r12
   1cd2e:	41 5d                	pop    %r13
   1cd30:	c3                   	ret    

000000000001cd31 <efi_ifr_guid_class_op>:
   1cd31:	f3 0f 1e fa          	endbr64 
   1cd35:	53                   	push   %rbx
   1cd36:	ba 15 00 00 00       	mov    $0x15,%edx
   1cd3b:	89 f3                	mov    %esi,%ebx
   1cd3d:	be 5f 00 00 00       	mov    $0x5f,%esi
   1cd42:	e8 e3 fc ff ff       	call   1ca2a <efi_ifr_op>
   1cd47:	48 85 c0             	test   %rax,%rax
   1cd4a:	74 17                	je     1cd63 <efi_ifr_guid_class_op+0x32>
   1cd4c:	48 8d 78 02          	lea    0x2(%rax),%rdi
   1cd50:	48 8d 35 f9 59 00 00 	lea    0x59f9(%rip),%rsi        # 22750 <tiano_guid>
   1cd57:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd58:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd59:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd5a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd5b:	c6 40 12 03          	movb   $0x3,0x12(%rax)
   1cd5f:	66 89 58 13          	mov    %bx,0x13(%rax)
   1cd63:	5b                   	pop    %rbx
   1cd64:	c3                   	ret    

000000000001cd65 <efi_ifr_guid_subclass_op>:
   1cd65:	f3 0f 1e fa          	endbr64 
   1cd69:	53                   	push   %rbx
   1cd6a:	ba 15 00 00 00       	mov    $0x15,%edx
   1cd6f:	89 f3                	mov    %esi,%ebx
   1cd71:	be 5f 00 00 00       	mov    $0x5f,%esi
   1cd76:	e8 af fc ff ff       	call   1ca2a <efi_ifr_op>
   1cd7b:	48 85 c0             	test   %rax,%rax
   1cd7e:	74 17                	je     1cd97 <efi_ifr_guid_subclass_op+0x32>
   1cd80:	48 8d 78 02          	lea    0x2(%rax),%rdi
   1cd84:	48 8d 35 c5 59 00 00 	lea    0x59c5(%rip),%rsi        # 22750 <tiano_guid>
   1cd8b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd8c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd8d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd8e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd8f:	c6 40 12 04          	movb   $0x4,0x12(%rax)
   1cd93:	66 89 58 13          	mov    %bx,0x13(%rax)
   1cd97:	5b                   	pop    %rbx
   1cd98:	c3                   	ret    

000000000001cd99 <efi_ifr_string_op>:
   1cd99:	f3 0f 1e fa          	endbr64 
   1cd9d:	41 56                	push   %r14
   1cd9f:	41 89 ce             	mov    %ecx,%r14d
   1cda2:	41 55                	push   %r13
   1cda4:	41 89 f5             	mov    %esi,%r13d
   1cda7:	be 1c 00 00 00       	mov    $0x1c,%esi
   1cdac:	41 54                	push   %r12
   1cdae:	41 89 d4             	mov    %edx,%r12d
   1cdb1:	ba 10 00 00 00       	mov    $0x10,%edx
   1cdb6:	55                   	push   %rbp
   1cdb7:	44 89 c5             	mov    %r8d,%ebp
   1cdba:	53                   	push   %rbx
   1cdbb:	44 89 cb             	mov    %r9d,%ebx
   1cdbe:	e8 67 fc ff ff       	call   1ca2a <efi_ifr_op>
   1cdc3:	48 85 c0             	test   %rax,%rax
   1cdc6:	74 33                	je     1cdfb <efi_ifr_string_op+0x62>
   1cdc8:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1cdcc:	66 44 89 68 02       	mov    %r13w,0x2(%rax)
   1cdd1:	66 44 89 60 04       	mov    %r12w,0x4(%rax)
   1cdd6:	88 50 0c             	mov    %dl,0xc(%rax)
   1cdd9:	8b 54 24 38          	mov    0x38(%rsp),%edx
   1cddd:	66 44 89 70 06       	mov    %r14w,0x6(%rax)
   1cde2:	88 50 0d             	mov    %dl,0xd(%rax)
   1cde5:	8b 54 24 40          	mov    0x40(%rsp),%edx
   1cde9:	66 89 68 08          	mov    %bp,0x8(%rax)
   1cded:	88 50 0e             	mov    %dl,0xe(%rax)
   1cdf0:	8b 54 24 48          	mov    0x48(%rsp),%edx
   1cdf4:	66 89 58 0a          	mov    %bx,0xa(%rax)
   1cdf8:	88 50 0f             	mov    %dl,0xf(%rax)
   1cdfb:	5b                   	pop    %rbx
   1cdfc:	5d                   	pop    %rbp
   1cdfd:	41 5c                	pop    %r12
   1cdff:	41 5d                	pop    %r13
   1ce01:	41 5e                	pop    %r14
   1ce03:	c3                   	ret    

000000000001ce04 <efi_ifr_text_op>:
   1ce04:	f3 0f 1e fa          	endbr64 
   1ce08:	41 54                	push   %r12
   1ce0a:	41 89 f4             	mov    %esi,%r12d
   1ce0d:	be 03 00 00 00       	mov    $0x3,%esi
   1ce12:	55                   	push   %rbp
   1ce13:	89 d5                	mov    %edx,%ebp
   1ce15:	ba 08 00 00 00       	mov    $0x8,%edx
   1ce1a:	53                   	push   %rbx
   1ce1b:	89 cb                	mov    %ecx,%ebx
   1ce1d:	e8 08 fc ff ff       	call   1ca2a <efi_ifr_op>
   1ce22:	48 85 c0             	test   %rax,%rax
   1ce25:	74 0d                	je     1ce34 <efi_ifr_text_op+0x30>
   1ce27:	66 44 89 60 02       	mov    %r12w,0x2(%rax)
   1ce2c:	66 89 68 04          	mov    %bp,0x4(%rax)
   1ce30:	66 89 58 06          	mov    %bx,0x6(%rax)
   1ce34:	5b                   	pop    %rbx
   1ce35:	5d                   	pop    %rbp
   1ce36:	41 5c                	pop    %r12
   1ce38:	c3                   	ret    

000000000001ce39 <efi_ifr_varstore_name_value_op>:
   1ce39:	f3 0f 1e fa          	endbr64 
   1ce3d:	55                   	push   %rbp
   1ce3e:	ba 14 00 00 00       	mov    $0x14,%edx
   1ce43:	48 89 fd             	mov    %rdi,%rbp
   1ce46:	53                   	push   %rbx
   1ce47:	48 89 f3             	mov    %rsi,%rbx
   1ce4a:	be 25 00 00 00       	mov    $0x25,%esi
   1ce4f:	51                   	push   %rcx
   1ce50:	e8 d5 fb ff ff       	call   1ca2a <efi_ifr_op>
   1ce55:	45 31 c0             	xor    %r8d,%r8d
   1ce58:	48 85 c0             	test   %rax,%rax
   1ce5b:	74 1d                	je     1ce7a <efi_ifr_varstore_name_value_op+0x41>
   1ce5d:	8b 4d 24             	mov    0x24(%rbp),%ecx
   1ce60:	48 8d 78 04          	lea    0x4(%rax),%rdi
   1ce64:	48 89 de             	mov    %rbx,%rsi
   1ce67:	8d 51 01             	lea    0x1(%rcx),%edx
   1ce6a:	89 55 24             	mov    %edx,0x24(%rbp)
   1ce6d:	66 89 50 02          	mov    %dx,0x2(%rax)
   1ce71:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ce72:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ce73:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ce74:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ce75:	44 0f b7 40 02       	movzwl 0x2(%rax),%r8d
   1ce7a:	5a                   	pop    %rdx
   1ce7b:	44 89 c0             	mov    %r8d,%eax
   1ce7e:	5b                   	pop    %rbx
   1ce7f:	5d                   	pop    %rbp
   1ce80:	c3                   	ret    

000000000001ce81 <efi_ifr_free>:
   1ce81:	f3 0f 1e fa          	endbr64 
   1ce85:	53                   	push   %rbx
   1ce86:	48 89 fb             	mov    %rdi,%rbx
   1ce89:	48 8b 3f             	mov    (%rdi),%rdi
   1ce8c:	e8 91 f8 fe ff       	call   c722 <free>
   1ce91:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1ce95:	e8 88 f8 fe ff       	call   c722 <free>
   1ce9a:	48 89 df             	mov    %rbx,%rdi
   1ce9d:	b9 30 00 00 00       	mov    $0x30,%ecx
   1cea2:	31 c0                	xor    %eax,%eax
   1cea4:	f3 aa                	rep stos %al,%es:(%rdi)
   1cea6:	5b                   	pop    %rbx
   1cea7:	c3                   	ret    

000000000001cea8 <efi_ifr_package>:
   1cea8:	f3 0f 1e fa          	endbr64 
   1ceac:	41 57                	push   %r15
   1ceae:	41 56                	push   %r14
   1ceb0:	41 55                	push   %r13
   1ceb2:	41 54                	push   %r12
   1ceb4:	45 31 e4             	xor    %r12d,%r12d
   1ceb7:	55                   	push   %rbp
   1ceb8:	53                   	push   %rbx
   1ceb9:	48 83 ec 38          	sub    $0x38,%rsp
   1cebd:	83 7f 2c 00          	cmpl   $0x0,0x2c(%rdi)
   1cec1:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1cec6:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1cecb:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
   1cecf:	0f 85 17 01 00 00    	jne    1cfec <efi_ifr_package+0x144>
   1ced5:	4c 8b 7f 08          	mov    0x8(%rdi),%r15
   1ced9:	49 89 fd             	mov    %rdi,%r13
   1cedc:	48 89 d7             	mov    %rdx,%rdi
   1cedf:	e8 32 6b ff ff       	call   13a16 <strlen>
   1cee4:	4d 8b 75 18          	mov    0x18(%r13),%r14
   1cee8:	48 8d 68 2f          	lea    0x2f(%rax),%rbp
   1ceec:	b8 2f 00 00 00       	mov    $0x2f,%eax
   1cef1:	48 39 c5             	cmp    %rax,%rbp
   1cef4:	48 0f 42 e8          	cmovb  %rax,%rbp
   1cef8:	4a 8d 44 35 00       	lea    0x0(%rbp,%r14,1),%rax
   1cefd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1cf02:	4c 01 f8             	add    %r15,%rax
   1cf05:	48 8d 78 1d          	lea    0x1d(%rax),%rdi
   1cf09:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cf0e:	e8 23 f8 fe ff       	call   c736 <zalloc>
   1cf13:	49 89 c4             	mov    %rax,%r12
   1cf16:	48 85 c0             	test   %rax,%rax
   1cf19:	0f 84 cd 00 00 00    	je     1cfec <efi_ifr_package+0x144>
   1cf1f:	46 8d 5c 35 00       	lea    0x0(%rbp,%r14,1),%r11d
   1cf24:	49 8d 5f 18          	lea    0x18(%r15),%rbx
   1cf28:	4c 89 e7             	mov    %r12,%rdi
   1cf2b:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1cf30:	43 8d 44 3b 1d       	lea    0x1d(%r11,%r15,1),%eax
   1cf35:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   1cf3a:	41 89 44 24 10       	mov    %eax,0x10(%r12)
   1cf3f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cf40:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cf41:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cf42:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cf43:	41 8d 47 04          	lea    0x4(%r15),%eax
   1cf47:	49 8b 75 00          	mov    0x0(%r13),%rsi
   1cf4b:	4c 89 fa             	mov    %r15,%rdx
   1cf4e:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   1cf53:	0f b6 cc             	movzbl %ah,%ecx
   1cf56:	41 88 44 24 14       	mov    %al,0x14(%r12)
   1cf5b:	c1 e8 10             	shr    $0x10,%eax
   1cf5e:	41 88 4c 24 15       	mov    %cl,0x15(%r12)
   1cf63:	41 88 44 24 16       	mov    %al,0x16(%r12)
   1cf68:	41 c6 44 24 17 02    	movb   $0x2,0x17(%r12)
   1cf6e:	e8 76 a4 ff ff       	call   173e9 <__memcpy>
   1cf73:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
   1cf78:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1cf7d:	4b 8d 7c 3c 46       	lea    0x46(%r12,%r15,1),%rdi
   1cf82:	41 ff c3             	inc    %r11d
   1cf85:	44 89 d8             	mov    %r11d,%eax
   1cf88:	47 88 5c 3c 18       	mov    %r11b,0x18(%r12,%r15,1)
   1cf8d:	41 c1 eb 10          	shr    $0x10,%r11d
   1cf91:	0f b6 c4             	movzbl %ah,%eax
   1cf94:	45 88 5c 1c 02       	mov    %r11b,0x2(%r12,%rbx,1)
   1cf99:	41 88 44 1c 01       	mov    %al,0x1(%r12,%rbx,1)
   1cf9e:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1cfa2:	41 89 6c 1c 04       	mov    %ebp,0x4(%r12,%rbx,1)
   1cfa7:	41 89 6c 1c 08       	mov    %ebp,0x8(%r12,%rbx,1)
   1cfac:	41 c6 44 1c 03 04    	movb   $0x4,0x3(%r12,%rbx,1)
   1cfb2:	66 41 89 44 1c 2c    	mov    %ax,0x2c(%r12,%rbx,1)
   1cfb8:	e8 d9 6a ff ff       	call   13a96 <strcpy>
   1cfbd:	48 8d 7c 1d 00       	lea    0x0(%rbp,%rbx,1),%rdi
   1cfc2:	49 8b 75 10          	mov    0x10(%r13),%rsi
   1cfc6:	4c 89 f2             	mov    %r14,%rdx
   1cfc9:	4c 01 e7             	add    %r12,%rdi
   1cfcc:	e8 18 a4 ff ff       	call   173e9 <__memcpy>
   1cfd1:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   1cfd6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1cfdb:	4c 01 e5             	add    %r12,%rbp
   1cfde:	c6 44 1d 00 00       	movb   $0x0,0x0(%rbp,%rbx,1)
   1cfe3:	41 c7 44 04 19 04 00 	movl   $0xdf000004,0x19(%r12,%rax,1)
   1cfea:	00 df 
   1cfec:	48 83 c4 38          	add    $0x38,%rsp
   1cff0:	4c 89 e0             	mov    %r12,%rax
   1cff3:	5b                   	pop    %rbx
   1cff4:	5d                   	pop    %rbp
   1cff5:	41 5c                	pop    %r12
   1cff7:	41 5d                	pop    %r13
   1cff9:	41 5e                	pop    %r14
   1cffb:	41 5f                	pop    %r15
   1cffd:	c3                   	ret    

000000000001cffe <efipci_root>:
   1cffe:	41 57                	push   %r15
   1d000:	45 31 c0             	xor    %r8d,%r8d
   1d003:	b9 02 00 00 00       	mov    $0x2,%ecx
   1d008:	41 56                	push   %r14
   1d00a:	4c 8d 35 1f 79 00 00 	lea    0x791f(%rip),%r14        # 24930 <efi_pci_root_bridge_io_protocol_guid>
   1d011:	41 55                	push   %r13
   1d013:	49 89 d5             	mov    %rdx,%r13
   1d016:	4c 89 f2             	mov    %r14,%rdx
   1d019:	41 54                	push   %r12
   1d01b:	55                   	push   %rbp
   1d01c:	48 89 f5             	mov    %rsi,%rbp
   1d01f:	53                   	push   %rbx
   1d020:	48 83 ec 40          	sub    $0x40,%rsp
   1d024:	48 8b 05 25 d0 00 00 	mov    0xd025(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d02b:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1d030:	48 8b 05 41 d0 00 00 	mov    0xd041(%rip),%rax        # 2a078 <efi_systab>
   1d037:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1d03c:	4c 8b 60 60          	mov    0x60(%rax),%r12
   1d040:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   1d045:	50                   	push   %rax
   1d046:	48 83 ec 20          	sub    $0x20,%rsp
   1d04a:	4c 8d 4c 24 48       	lea    0x48(%rsp),%r9
   1d04f:	41 ff 94 24 38 01 00 	call   *0x138(%r12)
   1d056:	00 
   1d057:	48 83 c4 30          	add    $0x30,%rsp
   1d05b:	48 89 c3             	mov    %rax,%rbx
   1d05e:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1d063:	48 85 c0             	test   %rax,%rax
   1d066:	74 45                	je     1d0ad <efipci_root+0xaf>
   1d068:	48 c1 e8 38          	shr    $0x38,%rax
   1d06c:	09 d8                	or     %ebx,%eax
   1d06e:	0f b6 c0             	movzbl %al,%eax
   1d071:	0d 00 e0 10 7f       	or     $0x7f10e000,%eax
   1d076:	f7 d8                	neg    %eax
   1d078:	e9 a6 00 00 00       	jmp    1d123 <efipci_root+0x125>
   1d07d:	48 8b 0c d9          	mov    (%rcx,%rbx,8),%rcx
   1d081:	6a 02                	push   $0x2
   1d083:	4d 89 f8             	mov    %r15,%r8
   1d086:	4c 89 f2             	mov    %r14,%rdx
   1d089:	51                   	push   %rcx
   1d08a:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
   1d08e:	4c 8b 0d d3 cf 00 00 	mov    0xcfd3(%rip),%r9        # 2a068 <efi_image_handle>
   1d095:	48 83 ec 20          	sub    $0x20,%rsp
   1d099:	41 ff 94 24 18 01 00 	call   *0x118(%r12)
   1d0a0:	00 
   1d0a1:	48 83 c4 30          	add    $0x30,%rsp
   1d0a5:	48 85 c0             	test   %rax,%rax
   1d0a8:	74 11                	je     1d0bb <efipci_root+0xbd>
   1d0aa:	48 ff c3             	inc    %rbx
   1d0ad:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1d0b2:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
   1d0b7:	77 c4                	ja     1d07d <efipci_root+0x7f>
   1d0b9:	eb 56                	jmp    1d111 <efipci_root+0x113>
   1d0bb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1d0c0:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d0c5:	0f b7 96 9e 00 00 00 	movzwl 0x9e(%rsi),%edx
   1d0cc:	39 90 90 00 00 00    	cmp    %edx,0x90(%rax)
   1d0d2:	75 1a                	jne    1d0ee <efipci_root+0xf0>
   1d0d4:	48 83 ec 20          	sub    $0x20,%rsp
   1d0d8:	49 89 45 00          	mov    %rax,0x0(%r13)
   1d0dc:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1d0e1:	41 ff 54 24 48       	call   *0x48(%r12)
   1d0e6:	48 83 c4 20          	add    $0x20,%rsp
   1d0ea:	31 c0                	xor    %eax,%eax
   1d0ec:	eb 35                	jmp    1d123 <efipci_root+0x125>
   1d0ee:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   1d0f2:	48 83 ec 20          	sub    $0x20,%rsp
   1d0f6:	4c 8b 05 6b cf 00 00 	mov    0xcf6b(%rip),%r8        # 2a068 <efi_image_handle>
   1d0fd:	4c 89 f2             	mov    %r14,%rdx
   1d100:	49 89 c9             	mov    %rcx,%r9
   1d103:	41 ff 94 24 20 01 00 	call   *0x120(%r12)
   1d10a:	00 
   1d10b:	48 83 c4 20          	add    $0x20,%rsp
   1d10f:	eb 99                	jmp    1d0aa <efipci_root+0xac>
   1d111:	48 83 ec 20          	sub    $0x20,%rsp
   1d115:	41 ff 54 24 48       	call   *0x48(%r12)
   1d11a:	48 83 c4 20          	add    $0x20,%rsp
   1d11e:	b8 72 1f ef d2       	mov    $0xd2ef1f72,%eax
   1d123:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1d128:	48 2b 15 21 cf 00 00 	sub    0xcf21(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1d12f:	74 05                	je     1d136 <efipci_root+0x138>
   1d131:	e8 2a 59 fe ff       	call   2a60 <__stack_chk_fail>
   1d136:	48 83 c4 38          	add    $0x38,%rsp
   1d13a:	5b                   	pop    %rbx
   1d13b:	5d                   	pop    %rbp
   1d13c:	41 5c                	pop    %r12
   1d13e:	41 5d                	pop    %r13
   1d140:	41 5e                	pop    %r14
   1d142:	41 5f                	pop    %r15
   1d144:	c3                   	ret    

000000000001d145 <efipci_address.isra.0>:
   1d145:	89 f8                	mov    %edi,%eax
   1d147:	89 fa                	mov    %edi,%edx
   1d149:	48 c1 e7 08          	shl    $0x8,%rdi
   1d14d:	c1 e8 08             	shr    $0x8,%eax
   1d150:	c1 ea 03             	shr    $0x3,%edx
   1d153:	81 e7 00 07 00 00    	and    $0x700,%edi
   1d159:	48 c1 e0 18          	shl    $0x18,%rax
   1d15d:	48 c1 e2 10          	shl    $0x10,%rdx
   1d161:	89 c0                	mov    %eax,%eax
   1d163:	81 e2 00 00 1f 00    	and    $0x1f0000,%edx
   1d169:	48 09 d0             	or     %rdx,%rax
   1d16c:	48 09 f8             	or     %rdi,%rax
   1d16f:	f7 c6 00 ff 00 00    	test   $0xff00,%esi
   1d175:	75 05                	jne    1d17c <efipci_address.isra.0+0x37>
   1d177:	0f b7 f6             	movzwl %si,%esi
   1d17a:	eb 10                	jmp    1d18c <efipci_address.isra.0+0x47>
   1d17c:	ba ff ff 00 00       	mov    $0xffff,%edx
   1d181:	48 c1 e6 20          	shl    $0x20,%rsi
   1d185:	48 c1 e2 20          	shl    $0x20,%rdx
   1d189:	48 21 d6             	and    %rdx,%rsi
   1d18c:	48 09 f0             	or     %rsi,%rax
   1d18f:	c3                   	ret    

000000000001d190 <efipci_read>:
   1d190:	f3 0f 1e fa          	endbr64 
   1d194:	41 56                	push   %r14
   1d196:	49 89 d6             	mov    %rdx,%r14
   1d199:	41 55                	push   %r13
   1d19b:	49 89 fd             	mov    %rdi,%r13
   1d19e:	41 54                	push   %r12
   1d1a0:	55                   	push   %rbp
   1d1a1:	53                   	push   %rbx
   1d1a2:	48 89 f3             	mov    %rsi,%rbx
   1d1a5:	48 83 ec 20          	sub    $0x20,%rsp
   1d1a9:	48 8b 05 a0 ce 00 00 	mov    0xcea0(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d1b0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1d1b5:	48 8b 05 bc ce 00 00 	mov    0xcebc(%rip),%rax        # 2a078 <efi_systab>
   1d1bc:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1d1c1:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1d1c6:	48 8b 68 60          	mov    0x60(%rax),%rbp
   1d1ca:	e8 2f fe ff ff       	call   1cffe <efipci_root>
   1d1cf:	41 89 c4             	mov    %eax,%r12d
   1d1d2:	85 c0                	test   %eax,%eax
   1d1d4:	75 72                	jne    1d248 <efipci_read+0xb8>
   1d1d6:	41 8b bd 9c 00 00 00 	mov    0x9c(%r13),%edi
   1d1dd:	48 89 de             	mov    %rbx,%rsi
   1d1e0:	48 c1 eb 10          	shr    $0x10,%rbx
   1d1e4:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1d1e9:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1d1ef:	e8 51 ff ff ff       	call   1d145 <efipci_address.isra.0>
   1d1f4:	89 da                	mov    %ebx,%edx
   1d1f6:	49 89 c0             	mov    %rax,%r8
   1d1f9:	50                   	push   %rax
   1d1fa:	41 56                	push   %r14
   1d1fc:	48 83 ec 20          	sub    $0x20,%rsp
   1d200:	ff 51 38             	call   *0x38(%rcx)
   1d203:	48 83 c4 30          	add    $0x30,%rsp
   1d207:	48 85 c0             	test   %rax,%rax
   1d20a:	74 18                	je     1d224 <efipci_read+0x94>
   1d20c:	49 89 c4             	mov    %rax,%r12
   1d20f:	49 c1 ec 38          	shr    $0x38,%r12
   1d213:	41 09 c4             	or     %eax,%r12d
   1d216:	45 0f b6 e4          	movzbl %r12b,%r12d
   1d21a:	41 81 cc 00 e0 10 7f 	or     $0x7f10e000,%r12d
   1d221:	41 f7 dc             	neg    %r12d
   1d224:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1d229:	48 83 ec 20          	sub    $0x20,%rsp
   1d22d:	4c 8b 05 34 ce 00 00 	mov    0xce34(%rip),%r8        # 2a068 <efi_image_handle>
   1d234:	48 8d 15 f5 76 00 00 	lea    0x76f5(%rip),%rdx        # 24930 <efi_pci_root_bridge_io_protocol_guid>
   1d23b:	49 89 c9             	mov    %rcx,%r9
   1d23e:	ff 95 20 01 00 00    	call   *0x120(%rbp)
   1d244:	48 83 c4 20          	add    $0x20,%rsp
   1d248:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1d24d:	48 2b 05 fc cd 00 00 	sub    0xcdfc(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d254:	74 05                	je     1d25b <efipci_read+0xcb>
   1d256:	e8 05 58 fe ff       	call   2a60 <__stack_chk_fail>
   1d25b:	48 83 c4 20          	add    $0x20,%rsp
   1d25f:	44 89 e0             	mov    %r12d,%eax
   1d262:	5b                   	pop    %rbx
   1d263:	5d                   	pop    %rbp
   1d264:	41 5c                	pop    %r12
   1d266:	41 5d                	pop    %r13
   1d268:	41 5e                	pop    %r14
   1d26a:	c3                   	ret    

000000000001d26b <efipci_write>:
   1d26b:	f3 0f 1e fa          	endbr64 
   1d26f:	41 55                	push   %r13
   1d271:	49 89 fd             	mov    %rdi,%r13
   1d274:	41 54                	push   %r12
   1d276:	55                   	push   %rbp
   1d277:	53                   	push   %rbx
   1d278:	48 89 f3             	mov    %rsi,%rbx
   1d27b:	48 83 ec 38          	sub    $0x38,%rsp
   1d27f:	48 8b 05 ca cd 00 00 	mov    0xcdca(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d286:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d28b:	48 8b 05 e6 cd 00 00 	mov    0xcde6(%rip),%rax        # 2a078 <efi_systab>
   1d292:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1d297:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1d29c:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   1d2a1:	48 8b 68 60          	mov    0x60(%rax),%rbp
   1d2a5:	e8 54 fd ff ff       	call   1cffe <efipci_root>
   1d2aa:	41 89 c4             	mov    %eax,%r12d
   1d2ad:	85 c0                	test   %eax,%eax
   1d2af:	75 76                	jne    1d327 <efipci_write+0xbc>
   1d2b1:	41 8b bd 9c 00 00 00 	mov    0x9c(%r13),%edi
   1d2b8:	48 89 de             	mov    %rbx,%rsi
   1d2bb:	48 c1 eb 10          	shr    $0x10,%rbx
   1d2bf:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1d2c4:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1d2ca:	e8 76 fe ff ff       	call   1d145 <efipci_address.isra.0>
   1d2cf:	89 da                	mov    %ebx,%edx
   1d2d1:	49 89 c0             	mov    %rax,%r8
   1d2d4:	50                   	push   %rax
   1d2d5:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1d2da:	50                   	push   %rax
   1d2db:	48 83 ec 20          	sub    $0x20,%rsp
   1d2df:	ff 51 40             	call   *0x40(%rcx)
   1d2e2:	48 83 c4 30          	add    $0x30,%rsp
   1d2e6:	48 85 c0             	test   %rax,%rax
   1d2e9:	74 18                	je     1d303 <efipci_write+0x98>
   1d2eb:	49 89 c4             	mov    %rax,%r12
   1d2ee:	49 c1 ec 38          	shr    $0x38,%r12
   1d2f2:	41 09 c4             	or     %eax,%r12d
   1d2f5:	45 0f b6 e4          	movzbl %r12b,%r12d
   1d2f9:	41 81 cc 00 e0 10 7f 	or     $0x7f10e000,%r12d
   1d300:	41 f7 dc             	neg    %r12d
   1d303:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1d308:	48 83 ec 20          	sub    $0x20,%rsp
   1d30c:	4c 8b 05 55 cd 00 00 	mov    0xcd55(%rip),%r8        # 2a068 <efi_image_handle>
   1d313:	48 8d 15 16 76 00 00 	lea    0x7616(%rip),%rdx        # 24930 <efi_pci_root_bridge_io_protocol_guid>
   1d31a:	49 89 c9             	mov    %rcx,%r9
   1d31d:	ff 95 20 01 00 00    	call   *0x120(%rbp)
   1d323:	48 83 c4 20          	add    $0x20,%rsp
   1d327:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d32c:	48 2b 05 1d cd 00 00 	sub    0xcd1d(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d333:	74 05                	je     1d33a <efipci_write+0xcf>
   1d335:	e8 26 57 fe ff       	call   2a60 <__stack_chk_fail>
   1d33a:	48 83 c4 38          	add    $0x38,%rsp
   1d33e:	44 89 e0             	mov    %r12d,%eax
   1d341:	5b                   	pop    %rbx
   1d342:	5d                   	pop    %rbp
   1d343:	41 5c                	pop    %r12
   1d345:	41 5d                	pop    %r13
   1d347:	c3                   	ret    

000000000001d348 <efipci_open>:
   1d348:	f3 0f 1e fa          	endbr64 
   1d34c:	41 56                	push   %r14
   1d34e:	4c 8d 35 eb 75 00 00 	lea    0x75eb(%rip),%r14        # 24940 <efi_pci_io_protocol_guid>
   1d355:	48 89 f9             	mov    %rdi,%rcx
   1d358:	41 55                	push   %r13
   1d35a:	49 89 fd             	mov    %rdi,%r13
   1d35d:	41 54                	push   %r12
   1d35f:	49 89 d4             	mov    %rdx,%r12
   1d362:	4c 89 f2             	mov    %r14,%rdx
   1d365:	53                   	push   %rbx
   1d366:	48 83 ec 38          	sub    $0x38,%rsp
   1d36a:	4c 8b 0d f7 cc 00 00 	mov    0xccf7(%rip),%r9        # 2a068 <efi_image_handle>
   1d371:	48 8b 05 d8 cc 00 00 	mov    0xccd8(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d378:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d37d:	48 8b 05 f4 cc 00 00 	mov    0xccf4(%rip),%rax        # 2a078 <efi_systab>
   1d384:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1d388:	56                   	push   %rsi
   1d389:	57                   	push   %rdi
   1d38a:	48 83 ec 20          	sub    $0x20,%rsp
   1d38e:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   1d393:	ff 93 18 01 00 00    	call   *0x118(%rbx)
   1d399:	48 83 c4 30          	add    $0x30,%rsp
   1d39d:	48 85 c0             	test   %rax,%rax
   1d3a0:	74 1d                	je     1d3bf <efipci_open+0x77>
   1d3a2:	49 89 c4             	mov    %rax,%r12
   1d3a5:	49 c1 ec 38          	shr    $0x38,%r12
   1d3a9:	41 09 c4             	or     %eax,%r12d
   1d3ac:	45 0f b6 e4          	movzbl %r12b,%r12d
   1d3b0:	41 81 cc 00 e1 10 7f 	or     $0x7f10e100,%r12d
   1d3b7:	41 f7 dc             	neg    %r12d
   1d3ba:	e9 f3 00 00 00       	jmp    1d4b2 <efipci_open+0x16a>
   1d3bf:	48 8b 04 24          	mov    (%rsp),%rax
   1d3c3:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1d3c8:	51                   	push   %rcx
   1d3c9:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   1d3ce:	51                   	push   %rcx
   1d3cf:	48 89 c1             	mov    %rax,%rcx
   1d3d2:	48 83 ec 20          	sub    $0x20,%rsp
   1d3d6:	4c 8d 4c 24 48       	lea    0x48(%rsp),%r9
   1d3db:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
   1d3e0:	ff 50 70             	call   *0x70(%rax)
   1d3e3:	48 83 c4 30          	add    $0x30,%rsp
   1d3e7:	48 85 c0             	test   %rax,%rax
   1d3ea:	74 1d                	je     1d409 <efipci_open+0xc1>
   1d3ec:	49 89 c4             	mov    %rax,%r12
   1d3ef:	49 c1 ec 38          	shr    $0x38,%r12
   1d3f3:	41 09 c4             	or     %eax,%r12d
   1d3f6:	45 0f b6 e4          	movzbl %r12b,%r12d
   1d3fa:	41 81 cc 00 e0 10 7f 	or     $0x7f10e000,%r12d
   1d401:	41 f7 dc             	neg    %r12d
   1d404:	e9 8b 00 00 00       	jmp    1d494 <efipci_open+0x14c>
   1d409:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1d40d:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d411:	48 83 ec 20          	sub    $0x20,%rsp
   1d415:	45 31 c9             	xor    %r9d,%r9d
   1d418:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1d41c:	41 b8 00 01 00 00    	mov    $0x100,%r8d
   1d422:	c1 e2 08             	shl    $0x8,%edx
   1d425:	c1 e0 10             	shl    $0x10,%eax
   1d428:	09 d0                	or     %edx,%eax
   1d42a:	8d 14 f5 00 00 00 00 	lea    0x0(,%rsi,8),%edx
   1d431:	0b 44 24 40          	or     0x40(%rsp),%eax
   1d435:	09 d0                	or     %edx,%eax
   1d437:	ba 02 00 00 00       	mov    $0x2,%edx
   1d43c:	41 89 84 24 9c 00 00 	mov    %eax,0x9c(%r12)
   1d443:	00 
   1d444:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d449:	48 89 c1             	mov    %rax,%rcx
   1d44c:	ff 50 78             	call   *0x78(%rax)
   1d44f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d454:	45 31 c9             	xor    %r9d,%r9d
   1d457:	ba 02 00 00 00       	mov    $0x2,%edx
   1d45c:	41 b8 00 02 00 00    	mov    $0x200,%r8d
   1d462:	48 89 c1             	mov    %rax,%rcx
   1d465:	ff 50 78             	call   *0x78(%rax)
   1d468:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d46d:	45 31 c9             	xor    %r9d,%r9d
   1d470:	ba 02 00 00 00       	mov    $0x2,%edx
   1d475:	41 b8 00 04 00 00    	mov    $0x400,%r8d
   1d47b:	48 89 c1             	mov    %rax,%rcx
   1d47e:	ff 50 78             	call   *0x78(%rax)
   1d481:	4c 89 e7             	mov    %r12,%rdi
   1d484:	48 83 c4 20          	add    $0x20,%rsp
   1d488:	e8 46 1f ff ff       	call   f3d3 <pci_read_config>
   1d48d:	41 89 c4             	mov    %eax,%r12d
   1d490:	85 c0                	test   %eax,%eax
   1d492:	74 1e                	je     1d4b2 <efipci_open+0x16a>
   1d494:	48 83 ec 20          	sub    $0x20,%rsp
   1d498:	4d 89 e9             	mov    %r13,%r9
   1d49b:	4c 89 f2             	mov    %r14,%rdx
   1d49e:	4c 89 e9             	mov    %r13,%rcx
   1d4a1:	4c 8b 05 c0 cb 00 00 	mov    0xcbc0(%rip),%r8        # 2a068 <efi_image_handle>
   1d4a8:	ff 93 20 01 00 00    	call   *0x120(%rbx)
   1d4ae:	48 83 c4 20          	add    $0x20,%rsp
   1d4b2:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d4b7:	48 2b 05 92 cb 00 00 	sub    0xcb92(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d4be:	74 05                	je     1d4c5 <efipci_open+0x17d>
   1d4c0:	e8 9b 55 fe ff       	call   2a60 <__stack_chk_fail>
   1d4c5:	48 83 c4 38          	add    $0x38,%rsp
   1d4c9:	44 89 e0             	mov    %r12d,%eax
   1d4cc:	5b                   	pop    %rbx
   1d4cd:	41 5c                	pop    %r12
   1d4cf:	41 5d                	pop    %r13
   1d4d1:	41 5e                	pop    %r14
   1d4d3:	c3                   	ret    

000000000001d4d4 <efipci_close>:
   1d4d4:	f3 0f 1e fa          	endbr64 
   1d4d8:	48 83 ec 28          	sub    $0x28,%rsp
   1d4dc:	48 89 f9             	mov    %rdi,%rcx
   1d4df:	48 8b 05 92 cb 00 00 	mov    0xcb92(%rip),%rax        # 2a078 <efi_systab>
   1d4e6:	4c 8b 05 7b cb 00 00 	mov    0xcb7b(%rip),%r8        # 2a068 <efi_image_handle>
   1d4ed:	49 89 f9             	mov    %rdi,%r9
   1d4f0:	48 8d 15 49 74 00 00 	lea    0x7449(%rip),%rdx        # 24940 <efi_pci_io_protocol_guid>
   1d4f7:	48 8b 40 60          	mov    0x60(%rax),%rax
   1d4fb:	ff 90 20 01 00 00    	call   *0x120(%rax)
   1d501:	48 83 c4 28          	add    $0x28,%rsp
   1d505:	c3                   	ret    

000000000001d506 <efipci_stop>:
   1d506:	f3 0f 1e fa          	endbr64 
   1d50a:	41 54                	push   %r12
   1d50c:	55                   	push   %rbp
   1d50d:	50                   	push   %rax
   1d50e:	48 8b af 98 00 00 00 	mov    0x98(%rdi),%rbp
   1d515:	4c 8b a7 80 00 00 00 	mov    0x80(%rdi),%r12
   1d51c:	48 89 ef             	mov    %rbp,%rdi
   1d51f:	e8 68 21 ff ff       	call   f68c <pci_remove>
   1d524:	48 8b 55 58          	mov    0x58(%rbp),%rdx
   1d528:	48 8b 45 60          	mov    0x60(%rbp),%rax
   1d52c:	4c 89 e7             	mov    %r12,%rdi
   1d52f:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1d533:	48 89 10             	mov    %rdx,(%rax)
   1d536:	e8 99 ff ff ff       	call   1d4d4 <efipci_close>
   1d53b:	5a                   	pop    %rdx
   1d53c:	48 89 ef             	mov    %rbp,%rdi
   1d53f:	5d                   	pop    %rbp
   1d540:	41 5c                	pop    %r12
   1d542:	e9 db f1 fe ff       	jmp    c722 <free>

000000000001d547 <efipci_start>:
   1d547:	f3 0f 1e fa          	endbr64 
   1d54b:	41 55                	push   %r13
   1d54d:	41 54                	push   %r12
   1d54f:	55                   	push   %rbp
   1d550:	53                   	push   %rbx
   1d551:	48 89 fb             	mov    %rdi,%rbx
   1d554:	51                   	push   %rcx
   1d555:	48 8b af 80 00 00 00 	mov    0x80(%rdi),%rbp
   1d55c:	bf b8 00 00 00       	mov    $0xb8,%edi
   1d561:	e8 d0 f1 fe ff       	call   c736 <zalloc>
   1d566:	48 85 c0             	test   %rax,%rax
   1d569:	75 08                	jne    1d573 <efipci_start+0x2c>
   1d56b:	41 bc 77 1f ef ce    	mov    $0xceef1f77,%r12d
   1d571:	eb 73                	jmp    1d5e6 <efipci_start+0x9f>
   1d573:	48 89 c2             	mov    %rax,%rdx
   1d576:	be 30 00 00 00       	mov    $0x30,%esi
   1d57b:	48 89 ef             	mov    %rbp,%rdi
   1d57e:	49 89 c5             	mov    %rax,%r13
   1d581:	e8 c2 fd ff ff       	call   1d348 <efipci_open>
   1d586:	41 89 c4             	mov    %eax,%r12d
   1d589:	85 c0                	test   %eax,%eax
   1d58b:	75 51                	jne    1d5de <efipci_start+0x97>
   1d58d:	4c 89 ef             	mov    %r13,%rdi
   1d590:	e8 64 20 ff ff       	call   f5f9 <pci_find_driver>
   1d595:	41 89 c4             	mov    %eax,%r12d
   1d598:	85 c0                	test   %eax,%eax
   1d59a:	75 3a                	jne    1d5d6 <efipci_start+0x8f>
   1d59c:	49 89 5d 78          	mov    %rbx,0x78(%r13)
   1d5a0:	48 8d 73 68          	lea    0x68(%rbx),%rsi
   1d5a4:	49 8d 7d 58          	lea    0x58(%r13),%rdi
   1d5a8:	e8 e4 eb fe ff       	call   c191 <extern_list_add>
   1d5ad:	4c 89 ef             	mov    %r13,%rdi
   1d5b0:	e8 c9 20 ff ff       	call   f67e <pci_probe>
   1d5b5:	41 89 c4             	mov    %eax,%r12d
   1d5b8:	85 c0                	test   %eax,%eax
   1d5ba:	74 11                	je     1d5cd <efipci_start+0x86>
   1d5bc:	49 8b 55 58          	mov    0x58(%r13),%rdx
   1d5c0:	49 8b 45 60          	mov    0x60(%r13),%rax
   1d5c4:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1d5c8:	48 89 10             	mov    %rdx,(%rax)
   1d5cb:	eb 09                	jmp    1d5d6 <efipci_start+0x8f>
   1d5cd:	4c 89 ab 98 00 00 00 	mov    %r13,0x98(%rbx)
   1d5d4:	eb 10                	jmp    1d5e6 <efipci_start+0x9f>
   1d5d6:	48 89 ef             	mov    %rbp,%rdi
   1d5d9:	e8 f6 fe ff ff       	call   1d4d4 <efipci_close>
   1d5de:	4c 89 ef             	mov    %r13,%rdi
   1d5e1:	e8 3c f1 fe ff       	call   c722 <free>
   1d5e6:	5a                   	pop    %rdx
   1d5e7:	44 89 e0             	mov    %r12d,%eax
   1d5ea:	5b                   	pop    %rbx
   1d5eb:	5d                   	pop    %rbp
   1d5ec:	41 5c                	pop    %r12
   1d5ee:	41 5d                	pop    %r13
   1d5f0:	c3                   	ret    

000000000001d5f1 <efipci_info>:
   1d5f1:	f3 0f 1e fa          	endbr64 
   1d5f5:	48 83 ec 18          	sub    $0x18,%rsp
   1d5f9:	48 89 f2             	mov    %rsi,%rdx
   1d5fc:	be 02 00 00 00       	mov    $0x2,%esi
   1d601:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1d606:	e8 3d fd ff ff       	call   1d348 <efipci_open>
   1d60b:	85 c0                	test   %eax,%eax
   1d60d:	75 12                	jne    1d621 <efipci_info+0x30>
   1d60f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1d614:	89 44 24 04          	mov    %eax,0x4(%rsp)
   1d618:	e8 b7 fe ff ff       	call   1d4d4 <efipci_close>
   1d61d:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1d621:	48 83 c4 18          	add    $0x18,%rsp
   1d625:	c3                   	ret    

000000000001d626 <efipci_supported>:
   1d626:	f3 0f 1e fa          	endbr64 
   1d62a:	55                   	push   %rbp
   1d62b:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1d632:	48 8b 05 17 ca 00 00 	mov    0xca17(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d639:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1d640:	00 
   1d641:	31 c0                	xor    %eax,%eax
   1d643:	48 89 e5             	mov    %rsp,%rbp
   1d646:	48 89 ee             	mov    %rbp,%rsi
   1d649:	e8 a3 ff ff ff       	call   1d5f1 <efipci_info>
   1d64e:	85 c0                	test   %eax,%eax
   1d650:	75 08                	jne    1d65a <efipci_supported+0x34>
   1d652:	48 89 ef             	mov    %rbp,%rdi
   1d655:	e8 9f 1f ff ff       	call   f5f9 <pci_find_driver>
   1d65a:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   1d661:	00 
   1d662:	48 2b 15 e7 c9 00 00 	sub    0xc9e7(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1d669:	74 05                	je     1d670 <efipci_supported+0x4a>
   1d66b:	e8 f0 53 fe ff       	call   2a60 <__stack_chk_fail>
   1d670:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   1d677:	5d                   	pop    %rbp
   1d678:	c3                   	ret    

000000000001d679 <reboot>:
   1d679:	f3 0f 1e fa          	endbr64 
   1d67d:	48 83 ec 28          	sub    $0x28,%rsp
   1d681:	48 8b 05 f0 c9 00 00 	mov    0xc9f0(%rip),%rax        # 2a078 <efi_systab>
   1d688:	31 c9                	xor    %ecx,%ecx
   1d68a:	85 ff                	test   %edi,%edi
   1d68c:	0f 95 c1             	setne  %cl
   1d68f:	45 31 c9             	xor    %r9d,%r9d
   1d692:	45 31 c0             	xor    %r8d,%r8d
   1d695:	31 d2                	xor    %edx,%edx
   1d697:	48 8b 40 58          	mov    0x58(%rax),%rax
   1d69b:	ff 50 68             	call   *0x68(%rax)
   1d69e:	48 83 c4 28          	add    $0x28,%rsp
   1d6a2:	c3                   	ret    

000000000001d6a3 <time_now>:
   1d6a3:	f3 0f 1e fa          	endbr64 
   1d6a7:	48 83 ec 48          	sub    $0x48,%rsp
   1d6ab:	31 d2                	xor    %edx,%edx
   1d6ad:	48 8b 05 9c c9 00 00 	mov    0xc99c(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d6b4:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1d6b9:	31 c0                	xor    %eax,%eax
   1d6bb:	48 8b 05 b6 c9 00 00 	mov    0xc9b6(%rip),%rax        # 2a078 <efi_systab>
   1d6c2:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
   1d6c7:	48 83 ec 20          	sub    $0x20,%rsp
   1d6cb:	48 8b 40 58          	mov    0x58(%rax),%rax
   1d6cf:	ff 50 18             	call   *0x18(%rax)
   1d6d2:	48 83 c4 20          	add    $0x20,%rsp
   1d6d6:	48 85 c0             	test   %rax,%rax
   1d6d9:	74 04                	je     1d6df <time_now+0x3c>
   1d6db:	31 c0                	xor    %eax,%eax
   1d6dd:	eb 56                	jmp    1d735 <time_now+0x92>
   1d6df:	4c 8d 44 24 14       	lea    0x14(%rsp),%r8
   1d6e4:	b9 24 00 00 00       	mov    $0x24,%ecx
   1d6e9:	31 c0                	xor    %eax,%eax
   1d6eb:	4c 89 c7             	mov    %r8,%rdi
   1d6ee:	f3 aa                	rep stos %al,%es:(%rdi)
   1d6f0:	0f b6 44 24 0a       	movzbl 0xa(%rsp),%eax
   1d6f5:	4c 89 c7             	mov    %r8,%rdi
   1d6f8:	89 44 24 14          	mov    %eax,0x14(%rsp)
   1d6fc:	0f b6 44 24 09       	movzbl 0x9(%rsp),%eax
   1d701:	89 44 24 18          	mov    %eax,0x18(%rsp)
   1d705:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   1d70a:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1d70e:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
   1d713:	89 44 24 20          	mov    %eax,0x20(%rsp)
   1d717:	0f b6 44 24 06       	movzbl 0x6(%rsp),%eax
   1d71c:	ff c8                	dec    %eax
   1d71e:	89 44 24 24          	mov    %eax,0x24(%rsp)
   1d722:	0f b7 44 24 04       	movzwl 0x4(%rsp),%eax
   1d727:	2d 6c 07 00 00       	sub    $0x76c,%eax
   1d72c:	89 44 24 28          	mov    %eax,0x28(%rsp)
   1d730:	e8 00 85 ff ff       	call   15c35 <mktime>
   1d735:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   1d73a:	48 2b 15 0f c9 00 00 	sub    0xc90f(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1d741:	74 05                	je     1d748 <time_now+0xa5>
   1d743:	e8 18 53 fe ff       	call   2a60 <__stack_chk_fail>
   1d748:	48 83 c4 48          	add    $0x48,%rsp
   1d74c:	c3                   	ret    

000000000001d74d <efi_currticks>:
   1d74d:	f3 0f 1e fa          	endbr64 
   1d751:	48 8b 05 20 c9 00 00 	mov    0xc920(%rip),%rax        # 2a078 <efi_systab>
   1d758:	83 3d f9 c8 00 00 00 	cmpl   $0x0,0xc8f9(%rip)        # 2a058 <efi_shutdown_in_progress>
   1d75f:	53                   	push   %rbx
   1d760:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1d764:	74 09                	je     1d76f <efi_currticks+0x22>
   1d766:	48 ff 05 4b c8 00 00 	incq   0xc84b(%rip)        # 29fb8 <efi_jiffies>
   1d76d:	eb 18                	jmp    1d787 <efi_currticks+0x3a>
   1d76f:	48 83 ec 20          	sub    $0x20,%rsp
   1d773:	b9 04 00 00 00       	mov    $0x4,%ecx
   1d778:	ff 53 20             	call   *0x20(%rbx)
   1d77b:	b9 08 00 00 00       	mov    $0x8,%ecx
   1d780:	ff 53 18             	call   *0x18(%rbx)
   1d783:	48 83 c4 20          	add    $0x20,%rsp
   1d787:	48 8b 05 2a c8 00 00 	mov    0xc82a(%rip),%rax        # 29fb8 <efi_jiffies>
   1d78e:	5b                   	pop    %rbx
   1d78f:	48 c1 e0 05          	shl    $0x5,%rax
   1d793:	c3                   	ret    

000000000001d794 <efi_tick>:
   1d794:	f3 0f 1e fa          	endbr64 
   1d798:	48 ff 05 19 c8 00 00 	incq   0xc819(%rip)        # 29fb8 <efi_jiffies>
   1d79f:	c3                   	ret    

000000000001d7a0 <efi_tick_startup>:
   1d7a0:	f3 0f 1e fa          	endbr64 
   1d7a4:	48 8b 05 cd c8 00 00 	mov    0xc8cd(%rip),%rax        # 2a078 <efi_systab>
   1d7ab:	53                   	push   %rbx
   1d7ac:	45 31 c9             	xor    %r9d,%r9d
   1d7af:	ba 08 00 00 00       	mov    $0x8,%edx
   1d7b4:	4c 8d 05 d9 ff ff ff 	lea    -0x27(%rip),%r8        # 1d794 <efi_tick>
   1d7bb:	b9 00 02 00 80       	mov    $0x80000200,%ecx
   1d7c0:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1d7c4:	50                   	push   %rax
   1d7c5:	48 8d 05 e4 c7 00 00 	lea    0xc7e4(%rip),%rax        # 29fb0 <efi_tick_event>
   1d7cc:	50                   	push   %rax
   1d7cd:	48 83 ec 20          	sub    $0x20,%rsp
   1d7d1:	ff 53 50             	call   *0x50(%rbx)
   1d7d4:	48 83 c4 30          	add    $0x30,%rsp
   1d7d8:	48 85 c0             	test   %rax,%rax
   1d7db:	74 02                	je     1d7df <efi_tick_startup+0x3f>
   1d7dd:	eb 22                	jmp    1d801 <efi_tick_startup+0x61>
   1d7df:	48 83 ec 20          	sub    $0x20,%rsp
   1d7e3:	41 b8 b4 c4 04 00    	mov    $0x4c4b4,%r8d
   1d7e9:	ba 01 00 00 00       	mov    $0x1,%edx
   1d7ee:	48 8b 0d bb c7 00 00 	mov    0xc7bb(%rip),%rcx        # 29fb0 <efi_tick_event>
   1d7f5:	ff 53 58             	call   *0x58(%rbx)
   1d7f8:	48 83 c4 20          	add    $0x20,%rsp
   1d7fc:	48 85 c0             	test   %rax,%rax
   1d7ff:	74 00                	je     1d801 <efi_tick_startup+0x61>
   1d801:	5b                   	pop    %rbx
   1d802:	c3                   	ret    

000000000001d803 <efi_tick_shutdown>:
   1d803:	f3 0f 1e fa          	endbr64 
   1d807:	48 8b 05 6a c8 00 00 	mov    0xc86a(%rip),%rax        # 2a078 <efi_systab>
   1d80e:	53                   	push   %rbx
   1d80f:	45 31 c0             	xor    %r8d,%r8d
   1d812:	31 d2                	xor    %edx,%edx
   1d814:	48 8b 0d 95 c7 00 00 	mov    0xc795(%rip),%rcx        # 29fb0 <efi_tick_event>
   1d81b:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1d81f:	48 83 ec 20          	sub    $0x20,%rsp
   1d823:	ff 53 58             	call   *0x58(%rbx)
   1d826:	48 83 c4 20          	add    $0x20,%rsp
   1d82a:	48 85 c0             	test   %rax,%rax
   1d82d:	74 02                	je     1d831 <efi_tick_shutdown+0x2e>
   1d82f:	eb 17                	jmp    1d848 <efi_tick_shutdown+0x45>
   1d831:	48 83 ec 20          	sub    $0x20,%rsp
   1d835:	48 8b 0d 74 c7 00 00 	mov    0xc774(%rip),%rcx        # 29fb0 <efi_tick_event>
   1d83c:	ff 53 70             	call   *0x70(%rbx)
   1d83f:	48 83 c4 20          	add    $0x20,%rsp
   1d843:	48 85 c0             	test   %rax,%rax
   1d846:	74 00                	je     1d848 <efi_tick_shutdown+0x45>
   1d848:	5b                   	pop    %rbx
   1d849:	c3                   	ret    

000000000001d84a <efi_udelay>:
   1d84a:	f3 0f 1e fa          	endbr64 
   1d84e:	48 83 ec 28          	sub    $0x28,%rsp
   1d852:	48 8b 05 1f c8 00 00 	mov    0xc81f(%rip),%rax        # 2a078 <efi_systab>
   1d859:	48 89 f9             	mov    %rdi,%rcx
   1d85c:	48 8b 40 60          	mov    0x60(%rax),%rax
   1d860:	ff 90 f8 00 00 00    	call   *0xf8(%rax)
   1d866:	48 83 c4 20          	add    $0x20,%rsp
   1d86a:	48 85 c0             	test   %rax,%rax
   1d86d:	74 00                	je     1d86f <efi_udelay+0x25>
   1d86f:	58                   	pop    %rax
   1d870:	c3                   	ret    

000000000001d871 <urealloc>:
   1d871:	f3 0f 1e fa          	endbr64 
   1d875:	41 57                	push   %r15
   1d877:	41 56                	push   %r14
   1d879:	41 55                	push   %r13
   1d87b:	41 54                	push   %r12
   1d87d:	49 89 fc             	mov    %rdi,%r12
   1d880:	55                   	push   %rbp
   1d881:	53                   	push   %rbx
   1d882:	48 89 f3             	mov    %rsi,%rbx
   1d885:	48 83 ec 18          	sub    $0x18,%rsp
   1d889:	48 8b 05 c0 c7 00 00 	mov    0xc7c0(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d890:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d895:	48 8b 05 dc c7 00 00 	mov    0xc7dc(%rip),%rax        # 2a078 <efi_systab>
   1d89c:	4c 8b 68 60          	mov    0x60(%rax),%r13
   1d8a0:	48 85 f6             	test   %rsi,%rsi
   1d8a3:	74 49                	je     1d8ee <urealloc+0x7d>
   1d8a5:	48 89 f0             	mov    %rsi,%rax
   1d8a8:	49 89 f0             	mov    %rsi,%r8
   1d8ab:	ba 04 00 00 00       	mov    $0x4,%edx
   1d8b0:	25 ff 0f 00 00       	and    $0xfff,%eax
   1d8b5:	49 c1 e8 0c          	shr    $0xc,%r8
   1d8b9:	48 83 f8 01          	cmp    $0x1,%rax
   1d8bd:	41 83 d8 fe          	sbb    $0xfffffffe,%r8d
   1d8c1:	48 83 ec 20          	sub    $0x20,%rsp
   1d8c5:	31 c9                	xor    %ecx,%ecx
   1d8c7:	4c 8d 4c 24 20       	lea    0x20(%rsp),%r9
   1d8cc:	41 ff 55 28          	call   *0x28(%r13)
   1d8d0:	48 83 c4 20          	add    $0x20,%rsp
   1d8d4:	48 85 c0             	test   %rax,%rax
   1d8d7:	74 05                	je     1d8de <urealloc+0x6d>
   1d8d9:	45 31 f6             	xor    %r14d,%r14d
   1d8dc:	eb 70                	jmp    1d94e <urealloc+0xdd>
   1d8de:	48 8b 04 24          	mov    (%rsp),%rax
   1d8e2:	48 89 18             	mov    %rbx,(%rax)
   1d8e5:	4c 8d b0 00 10 00 00 	lea    0x1000(%rax),%r14
   1d8ec:	eb 04                	jmp    1d8f2 <urealloc+0x81>
   1d8ee:	49 83 ce ff          	or     $0xffffffffffffffff,%r14
   1d8f2:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
   1d8f7:	48 83 f8 fd          	cmp    $0xfffffffffffffffd,%rax
   1d8fb:	77 51                	ja     1d94e <urealloc+0xdd>
   1d8fd:	49 8b ac 24 00 f0 ff 	mov    -0x1000(%r12),%rbp
   1d904:	ff 
   1d905:	4c 89 e6             	mov    %r12,%rsi
   1d908:	4c 89 f7             	mov    %r14,%rdi
   1d90b:	4d 8d bc 24 00 f0 ff 	lea    -0x1000(%r12),%r15
   1d912:	ff 
   1d913:	48 39 eb             	cmp    %rbp,%rbx
   1d916:	48 0f 47 dd          	cmova  %rbp,%rbx
   1d91a:	48 89 da             	mov    %rbx,%rdx
   1d91d:	e8 c7 9a ff ff       	call   173e9 <__memcpy>
   1d922:	48 89 ea             	mov    %rbp,%rdx
   1d925:	4c 89 3c 24          	mov    %r15,(%rsp)
   1d929:	4c 89 f9             	mov    %r15,%rcx
   1d92c:	81 e5 ff 0f 00 00    	and    $0xfff,%ebp
   1d932:	48 c1 ea 0c          	shr    $0xc,%rdx
   1d936:	48 83 fd 01          	cmp    $0x1,%rbp
   1d93a:	83 da fe             	sbb    $0xfffffffe,%edx
   1d93d:	48 83 ec 20          	sub    $0x20,%rsp
   1d941:	41 ff 55 30          	call   *0x30(%r13)
   1d945:	48 83 c4 20          	add    $0x20,%rsp
   1d949:	48 85 c0             	test   %rax,%rax
   1d94c:	74 00                	je     1d94e <urealloc+0xdd>
   1d94e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d953:	48 2b 05 f6 c6 00 00 	sub    0xc6f6(%rip),%rax        # 2a050 <__stack_chk_guard>
   1d95a:	74 05                	je     1d961 <urealloc+0xf0>
   1d95c:	e8 ff 50 fe ff       	call   2a60 <__stack_chk_fail>
   1d961:	48 83 c4 18          	add    $0x18,%rsp
   1d965:	4c 89 f0             	mov    %r14,%rax
   1d968:	5b                   	pop    %rbx
   1d969:	5d                   	pop    %rbp
   1d96a:	41 5c                	pop    %r12
   1d96c:	41 5d                	pop    %r13
   1d96e:	41 5e                	pop    %r14
   1d970:	41 5f                	pop    %r15
   1d972:	c3                   	ret    

000000000001d973 <cpu_nap>:
   1d973:	f3 0f 1e fa          	endbr64 
   1d977:	f4                   	hlt    
   1d978:	c3                   	ret    

000000000001d979 <eth_push>:
   1d979:	f3 0f 1e fa          	endbr64 
   1d97d:	48 8b 46 18          	mov    0x18(%rsi),%rax
   1d981:	48 8d 78 f2          	lea    -0xe(%rax),%rdi
   1d985:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
   1d989:	8b 32                	mov    (%rdx),%esi
   1d98b:	89 70 f2             	mov    %esi,-0xe(%rax)
   1d98e:	8b 52 04             	mov    0x4(%rdx),%edx
   1d991:	66 89 50 f6          	mov    %dx,-0xa(%rax)
   1d995:	8b 11                	mov    (%rcx),%edx
   1d997:	89 50 f8             	mov    %edx,-0x8(%rax)
   1d99a:	8b 51 04             	mov    0x4(%rcx),%edx
   1d99d:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
   1d9a2:	66 89 50 fc          	mov    %dx,-0x4(%rax)
   1d9a6:	31 c0                	xor    %eax,%eax
   1d9a8:	c3                   	ret    

000000000001d9a9 <eth_pull>:
   1d9a9:	f3 0f 1e fa          	endbr64 
   1d9ad:	48 8b 46 18          	mov    0x18(%rsi),%rax
   1d9b1:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   1d9b5:	48 29 c7             	sub    %rax,%rdi
   1d9b8:	48 83 ff 0f          	cmp    $0xf,%rdi
   1d9bc:	77 08                	ja     1d9c6 <eth_pull+0x1d>
   1d9be:	41 b9 7e 9f fc e3    	mov    $0xe3fc9f7e,%r9d
   1d9c4:	eb 53                	jmp    1da19 <eth_pull+0x70>
   1d9c6:	48 8d 78 0e          	lea    0xe(%rax),%rdi
   1d9ca:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
   1d9ce:	48 89 02             	mov    %rax,(%rdx)
   1d9d1:	48 8d 50 06          	lea    0x6(%rax),%rdx
   1d9d5:	48 89 11             	mov    %rdx,(%rcx)
   1d9d8:	66 8b 50 0c          	mov    0xc(%rax),%dx
   1d9dc:	66 41 89 10          	mov    %dx,(%r8)
   1d9e0:	8a 08                	mov    (%rax),%cl
   1d9e2:	8a 50 01             	mov    0x1(%rax),%dl
   1d9e5:	21 ca                	and    %ecx,%edx
   1d9e7:	22 50 02             	and    0x2(%rax),%dl
   1d9ea:	22 50 03             	and    0x3(%rax),%dl
   1d9ed:	22 50 04             	and    0x4(%rax),%dl
   1d9f0:	22 50 05             	and    0x5(%rax),%dl
   1d9f3:	fe c2                	inc    %dl
   1d9f5:	0f 94 c2             	sete   %dl
   1d9f8:	83 e1 01             	and    $0x1,%ecx
   1d9fb:	0f b6 d2             	movzbl %dl,%edx
   1d9fe:	01 d2                	add    %edx,%edx
   1da00:	09 ca                	or     %ecx,%edx
   1da02:	41 89 11             	mov    %edx,(%r9)
   1da05:	45 31 c9             	xor    %r9d,%r9d
   1da08:	80 78 0c 05          	cmpb   $0x5,0xc(%rax)
   1da0c:	77 0b                	ja     1da19 <eth_pull+0x70>
   1da0e:	48 8b 46 18          	mov    0x18(%rsi),%rax
   1da12:	66 8b 00             	mov    (%rax),%ax
   1da15:	66 41 89 00          	mov    %ax,(%r8)
   1da19:	44 89 c8             	mov    %r9d,%eax
   1da1c:	c3                   	ret    

000000000001da1d <eth_init_addr>:
   1da1d:	f3 0f 1e fa          	endbr64 
   1da21:	8b 07                	mov    (%rdi),%eax
   1da23:	89 06                	mov    %eax,(%rsi)
   1da25:	8b 47 04             	mov    0x4(%rdi),%eax
   1da28:	66 89 46 04          	mov    %ax,0x4(%rsi)
   1da2c:	c3                   	ret    

000000000001da2d <eth_eth_addr>:
   1da2d:	f3 0f 1e fa          	endbr64 
   1da31:	8b 07                	mov    (%rdi),%eax
   1da33:	89 06                	mov    %eax,(%rsi)
   1da35:	8b 47 04             	mov    0x4(%rdi),%eax
   1da38:	66 89 46 04          	mov    %ax,0x4(%rsi)
   1da3c:	31 c0                	xor    %eax,%eax
   1da3e:	c3                   	ret    

000000000001da3f <eth_eui64>:
   1da3f:	f3 0f 1e fa          	endbr64 
   1da43:	8b 07                	mov    (%rdi),%eax
   1da45:	66 89 06             	mov    %ax,(%rsi)
   1da48:	8a 47 02             	mov    0x2(%rdi),%al
   1da4b:	88 46 02             	mov    %al,0x2(%rsi)
   1da4e:	8b 47 03             	mov    0x3(%rdi),%eax
   1da51:	66 89 46 05          	mov    %ax,0x5(%rsi)
   1da55:	8a 47 05             	mov    0x5(%rdi),%al
   1da58:	66 c7 46 03 ff fe    	movw   $0xfeff,0x3(%rsi)
   1da5e:	88 46 07             	mov    %al,0x7(%rsi)
   1da61:	31 c0                	xor    %eax,%eax
   1da63:	c3                   	ret    

000000000001da64 <eth_ntoa>:
   1da64:	f3 0f 1e fa          	endbr64 
   1da68:	41 54                	push   %r12
   1da6a:	0f b6 0f             	movzbl (%rdi),%ecx
   1da6d:	4c 8d 25 5c c5 00 00 	lea    0xc55c(%rip),%r12        # 29fd0 <buf.0>
   1da74:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1da78:	50                   	push   %rax
   1da79:	0f b6 47 05          	movzbl 0x5(%rdi),%eax
   1da7d:	48 8d 15 fa 66 00 00 	lea    0x66fa(%rip),%rdx        # 2417e <.LC0>
   1da84:	50                   	push   %rax
   1da85:	0f b6 47 04          	movzbl 0x4(%rdi),%eax
   1da89:	50                   	push   %rax
   1da8a:	0f b6 47 03          	movzbl 0x3(%rdi),%eax
   1da8e:	50                   	push   %rax
   1da8f:	44 0f b6 4f 02       	movzbl 0x2(%rdi),%r9d
   1da94:	31 c0                	xor    %eax,%eax
   1da96:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
   1da9b:	4c 89 e7             	mov    %r12,%rdi
   1da9e:	e8 ba 96 ff ff       	call   1715d <snprintf>
   1daa3:	48 83 c4 20          	add    $0x20,%rsp
   1daa7:	4c 89 e0             	mov    %r12,%rax
   1daaa:	41 5c                	pop    %r12
   1daac:	c3                   	ret    

000000000001daad <eth_mc_hash>:
   1daad:	f3 0f 1e fa          	endbr64 
   1dab1:	83 ff 01             	cmp    $0x1,%edi
   1dab4:	74 12                	je     1dac8 <eth_mc_hash+0x1b>
   1dab6:	83 ff 02             	cmp    $0x2,%edi
   1dab9:	75 2e                	jne    1dae9 <eth_mc_hash+0x3c>
   1dabb:	66 c7 02 33 33       	movw   $0x3333,(%rdx)
   1dac0:	8b 46 0c             	mov    0xc(%rsi),%eax
   1dac3:	89 42 02             	mov    %eax,0x2(%rdx)
   1dac6:	eb 1e                	jmp    1dae6 <eth_mc_hash+0x39>
   1dac8:	66 c7 02 01 00       	movw   $0x1,(%rdx)
   1dacd:	c6 42 02 5e          	movb   $0x5e,0x2(%rdx)
   1dad1:	8a 46 01             	mov    0x1(%rsi),%al
   1dad4:	83 e0 7f             	and    $0x7f,%eax
   1dad7:	88 42 03             	mov    %al,0x3(%rdx)
   1dada:	8a 46 02             	mov    0x2(%rsi),%al
   1dadd:	88 42 04             	mov    %al,0x4(%rdx)
   1dae0:	8a 46 03             	mov    0x3(%rsi),%al
   1dae3:	88 42 05             	mov    %al,0x5(%rdx)
   1dae6:	31 c0                	xor    %eax,%eax
   1dae8:	c3                   	ret    
   1dae9:	b8 7d 9f fc c3       	mov    $0xc3fc9f7d,%eax
   1daee:	c3                   	ret    

000000000001daef <alloc_etherdev>:
   1daef:	f3 0f 1e fa          	endbr64 
   1daf3:	51                   	push   %rcx
   1daf4:	e8 a2 02 ff ff       	call   dd9b <alloc_netdev>
   1daf9:	48 85 c0             	test   %rax,%rax
   1dafc:	74 2c                	je     1db2a <alloc_etherdev+0x3b>
   1dafe:	48 8d 15 fb b1 00 00 	lea    0xb1fb(%rip),%rdx        # 28d00 <ethernet_protocol>
   1db05:	48 8d 0d 44 70 00 00 	lea    0x7044(%rip),%rcx        # 24b50 <eth_broadcast>
   1db0c:	48 c7 80 d8 00 00 00 	movq   $0x5ea,0xd8(%rax)
   1db13:	ea 05 00 00 
   1db17:	48 89 50 50          	mov    %rdx,0x50(%rax)
   1db1b:	48 89 48 78          	mov    %rcx,0x78(%rax)
   1db1f:	48 c7 80 e0 00 00 00 	movq   $0x5dc,0xe0(%rax)
   1db26:	dc 05 00 00 
   1db2a:	5a                   	pop    %rdx
   1db2b:	c3                   	ret    

000000000001db2c <process_on_success>:
   1db2c:	f3 0f 1e fa          	endbr64 
   1db30:	31 c0                	xor    %eax,%eax
   1db32:	85 ff                	test   %edi,%edi
   1db34:	0f 94 c0             	sete   %al
   1db37:	c3                   	ret    

000000000001db38 <process_on_failure>:
   1db38:	f3 0f 1e fa          	endbr64 
   1db3c:	31 c0                	xor    %eax,%eax
   1db3e:	85 ff                	test   %edi,%edi
   1db40:	0f 95 c0             	setne  %al
   1db43:	c3                   	ret    

000000000001db44 <process_always>:
   1db44:	f3 0f 1e fa          	endbr64 
   1db48:	b8 01 00 00 00       	mov    $0x1,%eax
   1db4d:	c3                   	ret    

000000000001db4e <split_command>:
   1db4e:	41 54                	push   %r12
   1db50:	45 31 e4             	xor    %r12d,%r12d
   1db53:	55                   	push   %rbp
   1db54:	48 89 f5             	mov    %rsi,%rbp
   1db57:	53                   	push   %rbx
   1db58:	48 89 fb             	mov    %rdi,%rbx
   1db5b:	0f be 3b             	movsbl (%rbx),%edi
   1db5e:	e8 29 b9 ff ff       	call   1948c <isspace>
   1db63:	85 c0                	test   %eax,%eax
   1db65:	74 0d                	je     1db74 <split_command+0x26>
   1db67:	48 85 ed             	test   %rbp,%rbp
   1db6a:	74 03                	je     1db6f <split_command+0x21>
   1db6c:	c6 03 00             	movb   $0x0,(%rbx)
   1db6f:	48 ff c3             	inc    %rbx
   1db72:	eb e7                	jmp    1db5b <split_command+0xd>
   1db74:	80 3b 00             	cmpb   $0x0,(%rbx)
   1db77:	74 26                	je     1db9f <split_command+0x51>
   1db79:	48 85 ed             	test   %rbp,%rbp
   1db7c:	74 08                	je     1db86 <split_command+0x38>
   1db7e:	49 63 c4             	movslq %r12d,%rax
   1db81:	48 89 5c c5 00       	mov    %rbx,0x0(%rbp,%rax,8)
   1db86:	41 ff c4             	inc    %r12d
   1db89:	0f be 3b             	movsbl (%rbx),%edi
   1db8c:	40 84 ff             	test   %dil,%dil
   1db8f:	74 ca                	je     1db5b <split_command+0xd>
   1db91:	e8 f6 b8 ff ff       	call   1948c <isspace>
   1db96:	85 c0                	test   %eax,%eax
   1db98:	75 c1                	jne    1db5b <split_command+0xd>
   1db9a:	48 ff c3             	inc    %rbx
   1db9d:	eb ea                	jmp    1db89 <split_command+0x3b>
   1db9f:	44 89 e0             	mov    %r12d,%eax
   1dba2:	5b                   	pop    %rbx
   1dba3:	5d                   	pop    %rbp
   1dba4:	41 5c                	pop    %r12
   1dba6:	c3                   	ret    

000000000001dba7 <exit_exec>:
   1dba7:	f3 0f 1e fa          	endbr64 
   1dbab:	55                   	push   %rbp
   1dbac:	48 8d 15 3d a0 00 00 	lea    0xa03d(%rip),%rdx        # 27bf0 <exit_cmd>
   1dbb3:	89 fd                	mov    %edi,%ebp
   1dbb5:	53                   	push   %rbx
   1dbb6:	48 89 f3             	mov    %rsi,%rbx
   1dbb9:	48 83 ec 18          	sub    $0x18,%rsp
   1dbbd:	48 8d 4c 24 03       	lea    0x3(%rsp),%rcx
   1dbc2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   1dbc9:	00 
   1dbca:	48 8b 05 7f c4 00 00 	mov    0xc47f(%rip),%rax        # 2a050 <__stack_chk_guard>
   1dbd1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1dbd6:	31 c0                	xor    %eax,%eax
   1dbd8:	e8 ae 16 ff ff       	call   f28b <parse_options>
   1dbdd:	85 c0                	test   %eax,%eax
   1dbdf:	75 2d                	jne    1dc0e <exit_exec+0x67>
   1dbe1:	48 63 05 a0 c4 00 00 	movslq 0xc4a0(%rip),%rax        # 2a088 <optind>
   1dbe8:	39 e8                	cmp    %ebp,%eax
   1dbea:	75 10                	jne    1dbfc <exit_exec+0x55>
   1dbec:	c7 05 fa c3 00 00 02 	movl   $0x2,0xc3fa(%rip)        # 29ff0 <stop_state>
   1dbf3:	00 00 00 
   1dbf6:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1dbfa:	eb 12                	jmp    1dc0e <exit_exec+0x67>
   1dbfc:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
   1dc00:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   1dc05:	e8 44 11 ff ff       	call   ed4e <parse_integer>
   1dc0a:	85 c0                	test   %eax,%eax
   1dc0c:	74 de                	je     1dbec <exit_exec+0x45>
   1dc0e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1dc13:	48 2b 15 36 c4 00 00 	sub    0xc436(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1dc1a:	74 05                	je     1dc21 <exit_exec+0x7a>
   1dc1c:	e8 3f 4e fe ff       	call   2a60 <__stack_chk_fail>
   1dc21:	48 83 c4 18          	add    $0x18,%rsp
   1dc25:	5b                   	pop    %rbx
   1dc26:	5d                   	pop    %rbp
   1dc27:	c3                   	ret    

000000000001dc28 <isset_exec>:
   1dc28:	f3 0f 1e fa          	endbr64 
   1dc2c:	53                   	push   %rbx
   1dc2d:	48 8d 15 9c 9f 00 00 	lea    0x9f9c(%rip),%rdx        # 27bd0 <isset_cmd>
   1dc34:	48 89 f3             	mov    %rsi,%rbx
   1dc37:	48 83 ec 10          	sub    $0x10,%rsp
   1dc3b:	48 8b 05 0e c4 00 00 	mov    0xc40e(%rip),%rax        # 2a050 <__stack_chk_guard>
   1dc42:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1dc47:	31 c0                	xor    %eax,%eax
   1dc49:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   1dc4e:	e8 38 16 ff ff       	call   f28b <parse_options>
   1dc53:	85 c0                	test   %eax,%eax
   1dc55:	75 15                	jne    1dc6c <isset_exec+0x44>
   1dc57:	48 63 15 2a c4 00 00 	movslq 0xc42a(%rip),%rdx        # 2a088 <optind>
   1dc5e:	48 8b 14 d3          	mov    (%rbx,%rdx,8),%rdx
   1dc62:	80 3a 00             	cmpb   $0x0,(%rdx)
   1dc65:	75 05                	jne    1dc6c <isset_exec+0x44>
   1dc67:	b8 72 df fd d2       	mov    $0xd2fddf72,%eax
   1dc6c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1dc71:	48 2b 15 d8 c3 00 00 	sub    0xc3d8(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1dc78:	74 05                	je     1dc7f <isset_exec+0x57>
   1dc7a:	e8 e1 4d fe ff       	call   2a60 <__stack_chk_fail>
   1dc7f:	48 83 c4 10          	add    $0x10,%rsp
   1dc83:	5b                   	pop    %rbx
   1dc84:	c3                   	ret    

000000000001dc85 <iseq_exec>:
   1dc85:	f3 0f 1e fa          	endbr64 
   1dc89:	53                   	push   %rbx
   1dc8a:	48 8d 15 1f 9f 00 00 	lea    0x9f1f(%rip),%rdx        # 27bb0 <iseq_cmd>
   1dc91:	48 89 f3             	mov    %rsi,%rbx
   1dc94:	48 83 ec 10          	sub    $0x10,%rsp
   1dc98:	48 8b 05 b1 c3 00 00 	mov    0xc3b1(%rip),%rax        # 2a050 <__stack_chk_guard>
   1dc9f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1dca4:	31 c0                	xor    %eax,%eax
   1dca6:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   1dcab:	e8 db 15 ff ff       	call   f28b <parse_options>
   1dcb0:	85 c0                	test   %eax,%eax
   1dcb2:	75 21                	jne    1dcd5 <iseq_exec+0x50>
   1dcb4:	48 63 05 cd c3 00 00 	movslq 0xc3cd(%rip),%rax        # 2a088 <optind>
   1dcbb:	48 ff c0             	inc    %rax
   1dcbe:	48 8b 34 c3          	mov    (%rbx,%rax,8),%rsi
   1dcc2:	48 8b 7c c3 f8       	mov    -0x8(%rbx,%rax,8),%rdi
   1dcc7:	e8 f0 5c ff ff       	call   139bc <strcmp>
   1dccc:	85 c0                	test   %eax,%eax
   1dcce:	74 05                	je     1dcd5 <iseq_exec+0x50>
   1dcd0:	b8 7b df fd b9       	mov    $0xb9fddf7b,%eax
   1dcd5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1dcda:	48 2b 15 6f c3 00 00 	sub    0xc36f(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1dce1:	74 05                	je     1dce8 <iseq_exec+0x63>
   1dce3:	e8 78 4d fe ff       	call   2a60 <__stack_chk_fail>
   1dce8:	48 83 c4 10          	add    $0x10,%rsp
   1dcec:	5b                   	pop    %rbx
   1dced:	c3                   	ret    

000000000001dcee <sleep_exec>:
   1dcee:	f3 0f 1e fa          	endbr64 
   1dcf2:	41 54                	push   %r12
   1dcf4:	48 8d 15 95 9e 00 00 	lea    0x9e95(%rip),%rdx        # 27b90 <sleep_cmd>
   1dcfb:	53                   	push   %rbx
   1dcfc:	48 89 f3             	mov    %rsi,%rbx
   1dcff:	48 83 ec 18          	sub    $0x18,%rsp
   1dd03:	48 8b 05 46 c3 00 00 	mov    0xc346(%rip),%rax        # 2a050 <__stack_chk_guard>
   1dd0a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1dd0f:	31 c0                	xor    %eax,%eax
   1dd11:	48 8d 4c 24 03       	lea    0x3(%rsp),%rcx
   1dd16:	e8 70 15 ff ff       	call   f28b <parse_options>
   1dd1b:	41 89 c4             	mov    %eax,%r12d
   1dd1e:	85 c0                	test   %eax,%eax
   1dd20:	75 2f                	jne    1dd51 <sleep_exec+0x63>
   1dd22:	48 63 05 5f c3 00 00 	movslq 0xc35f(%rip),%rax        # 2a088 <optind>
   1dd29:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   1dd2e:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
   1dd32:	e8 17 10 ff ff       	call   ed4e <parse_integer>
   1dd37:	41 89 c4             	mov    %eax,%r12d
   1dd3a:	85 c0                	test   %eax,%eax
   1dd3c:	75 13                	jne    1dd51 <sleep_exec+0x63>
   1dd3e:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   1dd42:	e8 b9 80 ff ff       	call   15e00 <sleep>
   1dd47:	85 c0                	test   %eax,%eax
   1dd49:	74 06                	je     1dd51 <sleep_exec+0x63>
   1dd4b:	41 bc 6b df fd f4    	mov    $0xf4fddf6b,%r12d
   1dd51:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1dd56:	48 2b 05 f3 c2 00 00 	sub    0xc2f3(%rip),%rax        # 2a050 <__stack_chk_guard>
   1dd5d:	74 05                	je     1dd64 <sleep_exec+0x76>
   1dd5f:	e8 fc 4c fe ff       	call   2a60 <__stack_chk_fail>
   1dd64:	48 83 c4 18          	add    $0x18,%rsp
   1dd68:	44 89 e0             	mov    %r12d,%eax
   1dd6b:	5b                   	pop    %rbx
   1dd6c:	41 5c                	pop    %r12
   1dd6e:	c3                   	ret    

000000000001dd6f <execv>:
   1dd6f:	f3 0f 1e fa          	endbr64 
   1dd73:	41 56                	push   %r14
   1dd75:	31 c0                	xor    %eax,%eax
   1dd77:	41 55                	push   %r13
   1dd79:	41 54                	push   %r12
   1dd7b:	49 89 f4             	mov    %rsi,%r12
   1dd7e:	55                   	push   %rbp
   1dd7f:	48 89 fd             	mov    %rdi,%rbp
   1dd82:	53                   	push   %rbx
   1dd83:	41 89 c5             	mov    %eax,%r13d
   1dd86:	48 ff c0             	inc    %rax
   1dd89:	49 83 7c c4 f8 00    	cmpq   $0x0,-0x8(%r12,%rax,8)
   1dd8f:	75 f2                	jne    1dd83 <execv+0x14>
   1dd91:	48 85 ed             	test   %rbp,%rbp
   1dd94:	75 07                	jne    1dd9d <execv+0x2e>
   1dd96:	31 c0                	xor    %eax,%eax
   1dd98:	e9 81 00 00 00       	jmp    1de1e <execv+0xaf>
   1dd9d:	45 85 ed             	test   %r13d,%r13d
   1dda0:	75 07                	jne    1dda9 <execv+0x3a>
   1dda2:	b8 7e df fd e3       	mov    $0xe3fddf7e,%eax
   1dda7:	eb 6b                	jmp    1de14 <execv+0xa5>
   1dda9:	48 8d 1d 88 a7 00 00 	lea    0xa788(%rip),%rbx        # 28538 <config_command>
   1ddb0:	4c 8d 35 51 aa 00 00 	lea    0xaa51(%rip),%r14        # 28808 <efi_console>
   1ddb7:	c7 05 c7 c2 00 00 01 	movl   $0x1,0xc2c7(%rip)        # 2a088 <optind>
   1ddbe:	00 00 00 
   1ddc1:	c7 05 c1 c2 00 00 00 	movl   $0x0,0xc2c1(%rip)        # 2a08c <nextchar>
   1ddc8:	00 00 00 
   1ddcb:	4c 39 f3             	cmp    %r14,%rbx
   1ddce:	73 24                	jae    1ddf4 <execv+0x85>
   1ddd0:	48 8b 33             	mov    (%rbx),%rsi
   1ddd3:	48 89 ef             	mov    %rbp,%rdi
   1ddd6:	e8 e1 5b ff ff       	call   139bc <strcmp>
   1dddb:	85 c0                	test   %eax,%eax
   1dddd:	75 0f                	jne    1ddee <execv+0x7f>
   1dddf:	4c 89 e6             	mov    %r12,%rsi
   1dde2:	44 89 ef             	mov    %r13d,%edi
   1dde5:	ff 53 08             	call   *0x8(%rbx)
   1dde8:	85 c0                	test   %eax,%eax
   1ddea:	75 20                	jne    1de0c <execv+0x9d>
   1ddec:	eb a8                	jmp    1dd96 <execv+0x27>
   1ddee:	48 83 c3 10          	add    $0x10,%rbx
   1ddf2:	eb d7                	jmp    1ddcb <execv+0x5c>
   1ddf4:	48 89 ee             	mov    %rbp,%rsi
   1ddf7:	48 8d 3d a7 63 00 00 	lea    0x63a7(%rip),%rdi        # 241a5 <.LC0>
   1ddfe:	31 c0                	xor    %eax,%eax
   1de00:	e8 75 94 ff ff       	call   1727a <printf>
   1de05:	b8 7f df fd d1       	mov    $0xd1fddf7f,%eax
   1de0a:	eb 08                	jmp    1de14 <execv+0xa5>
   1de0c:	89 05 92 c2 00 00    	mov    %eax,0xc292(%rip)        # 2a0a4 <errno>
   1de12:	79 0a                	jns    1de1e <execv+0xaf>
   1de14:	89 c2                	mov    %eax,%edx
   1de16:	f7 da                	neg    %edx
   1de18:	89 15 86 c2 00 00    	mov    %edx,0xc286(%rip)        # 2a0a4 <errno>
   1de1e:	5b                   	pop    %rbx
   1de1f:	5d                   	pop    %rbp
   1de20:	41 5c                	pop    %r12
   1de22:	41 5d                	pop    %r13
   1de24:	41 5e                	pop    %r14
   1de26:	c3                   	ret    

000000000001de27 <shell_stop>:
   1de27:	f3 0f 1e fa          	endbr64 
   1de2b:	89 3d bf c1 00 00    	mov    %edi,0xc1bf(%rip)        # 29ff0 <stop_state>
   1de31:	c3                   	ret    

000000000001de32 <shell_stopped>:
   1de32:	f3 0f 1e fa          	endbr64 
   1de36:	31 c0                	xor    %eax,%eax
   1de38:	39 3d b2 c1 00 00    	cmp    %edi,0xc1b2(%rip)        # 29ff0 <stop_state>
   1de3e:	0f 9d c0             	setge  %al
   1de41:	7f 0a                	jg     1de4d <shell_stopped+0x1b>
   1de43:	c7 05 a3 c1 00 00 00 	movl   $0x0,0xc1a3(%rip)        # 29ff0 <stop_state>
   1de4a:	00 00 00 
   1de4d:	c3                   	ret    

000000000001de4e <system>:
   1de4e:	f3 0f 1e fa          	endbr64 
   1de52:	55                   	push   %rbp
   1de53:	31 f6                	xor    %esi,%esi
   1de55:	48 89 e5             	mov    %rsp,%rbp
   1de58:	41 57                	push   %r15
   1de5a:	41 56                	push   %r14
   1de5c:	41 55                	push   %r13
   1de5e:	41 54                	push   %r12
   1de60:	53                   	push   %rbx
   1de61:	48 83 ec 48          	sub    $0x48,%rsp
   1de65:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1de69:	48 8b 05 e0 c1 00 00 	mov    0xc1e0(%rip),%rax        # 2a050 <__stack_chk_guard>
   1de70:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1de74:	31 c0                	xor    %eax,%eax
   1de76:	e8 d3 fc ff ff       	call   1db4e <split_command>
   1de7b:	48 89 e1             	mov    %rsp,%rcx
   1de7e:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   1de82:	48 63 d8             	movslq %eax,%rbx
   1de85:	8d 43 01             	lea    0x1(%rbx),%eax
   1de88:	48 98                	cltq   
   1de8a:	48 8d 14 c5 0f 00 00 	lea    0xf(,%rax,8),%rdx
   1de91:	00 
   1de92:	48 89 d0             	mov    %rdx,%rax
   1de95:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   1de9c:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1dea0:	48 29 d1             	sub    %rdx,%rcx
   1dea3:	48 39 cc             	cmp    %rcx,%rsp
   1dea6:	74 12                	je     1deba <system+0x6c>
   1dea8:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1deaf:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1deb6:	00 00 
   1deb8:	eb e9                	jmp    1dea3 <system+0x55>
   1deba:	25 ff 0f 00 00       	and    $0xfff,%eax
   1debf:	48 29 c4             	sub    %rax,%rsp
   1dec2:	48 85 c0             	test   %rax,%rax
   1dec5:	74 06                	je     1decd <system+0x7f>
   1dec7:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1decd:	e8 57 5c ff ff       	call   13b29 <strdup>
   1ded2:	49 89 e5             	mov    %rsp,%r13
   1ded5:	49 89 c6             	mov    %rax,%r14
   1ded8:	48 85 c0             	test   %rax,%rax
   1dedb:	75 0b                	jne    1dee8 <system+0x9a>
   1dedd:	41 bc 77 df fd ce    	mov    $0xcefddf77,%r12d
   1dee3:	e9 c0 01 00 00       	jmp    1e0a8 <system+0x25a>
   1dee8:	4c 89 ee             	mov    %r13,%rsi
   1deeb:	48 89 c7             	mov    %rax,%rdi
   1deee:	45 31 e4             	xor    %r12d,%r12d
   1def1:	e8 58 fc ff ff       	call   1db4e <split_command>
   1def6:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
   1defd:	49 c7 44 dd 00 00 00 	movq   $0x0,0x0(%r13,%rbx,8)
   1df04:	00 00 
   1df06:	31 db                	xor    %ebx,%ebx
   1df08:	89 d8                	mov    %ebx,%eax
   1df0a:	4d 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%r15
   1df0f:	4d 85 ff             	test   %r15,%r15
   1df12:	74 06                	je     1df1a <system+0xcc>
   1df14:	41 80 3f 23          	cmpb   $0x23,(%r15)
   1df18:	75 05                	jne    1df1f <system+0xd1>
   1df1a:	45 31 ff             	xor    %r15d,%r15d
   1df1d:	eb 58                	jmp    1df77 <system+0x129>
   1df1f:	48 8d 35 96 62 00 00 	lea    0x6296(%rip),%rsi        # 241bc <.LC1>
   1df26:	4c 89 ff             	mov    %r15,%rdi
   1df29:	e8 8e 5a ff ff       	call   139bc <strcmp>
   1df2e:	85 c0                	test   %eax,%eax
   1df30:	75 09                	jne    1df3b <system+0xed>
   1df32:	4c 8d 3d ff fb ff ff 	lea    -0x401(%rip),%r15        # 1db38 <process_on_failure>
   1df39:	eb 3c                	jmp    1df77 <system+0x129>
   1df3b:	48 8d 35 7d 62 00 00 	lea    0x627d(%rip),%rsi        # 241bf <.LC2>
   1df42:	4c 89 ff             	mov    %r15,%rdi
   1df45:	e8 72 5a ff ff       	call   139bc <strcmp>
   1df4a:	85 c0                	test   %eax,%eax
   1df4c:	75 09                	jne    1df57 <system+0x109>
   1df4e:	4c 8d 3d d7 fb ff ff 	lea    -0x429(%rip),%r15        # 1db2c <process_on_success>
   1df55:	eb 20                	jmp    1df77 <system+0x129>
   1df57:	48 8d 35 64 62 00 00 	lea    0x6264(%rip),%rsi        # 241c2 <.LC3>
   1df5e:	4c 89 ff             	mov    %r15,%rdi
   1df61:	e8 56 5a ff ff       	call   139bc <strcmp>
   1df66:	85 c0                	test   %eax,%eax
   1df68:	75 09                	jne    1df73 <system+0x125>
   1df6a:	4c 8d 3d d3 fb ff ff 	lea    -0x42d(%rip),%r15        # 1db44 <process_always>
   1df71:	eb 04                	jmp    1df77 <system+0x129>
   1df73:	ff c3                	inc    %ebx
   1df75:	eb 91                	jmp    1df08 <system+0xba>
   1df77:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   1df7b:	0f 84 f6 00 00 00    	je     1e077 <system+0x229>
   1df81:	8d 43 01             	lea    0x1(%rbx),%eax
   1df84:	48 89 65 b8          	mov    %rsp,-0x48(%rbp)
   1df88:	48 89 e1             	mov    %rsp,%rcx
   1df8b:	48 98                	cltq   
   1df8d:	48 8d 14 c5 0f 00 00 	lea    0xf(,%rax,8),%rdx
   1df94:	00 
   1df95:	48 89 d0             	mov    %rdx,%rax
   1df98:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   1df9f:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1dfa3:	48 29 d1             	sub    %rdx,%rcx
   1dfa6:	48 39 cc             	cmp    %rcx,%rsp
   1dfa9:	74 12                	je     1dfbd <system+0x16f>
   1dfab:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1dfb2:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1dfb9:	00 00 
   1dfbb:	eb e9                	jmp    1dfa6 <system+0x158>
   1dfbd:	25 ff 0f 00 00       	and    $0xfff,%eax
   1dfc2:	48 29 c4             	sub    %rax,%rsp
   1dfc5:	48 85 c0             	test   %rax,%rax
   1dfc8:	74 06                	je     1dfd0 <system+0x182>
   1dfca:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1dfd0:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
   1dfd5:	45 31 e4             	xor    %r12d,%r12d
   1dfd8:	48 89 f0             	mov    %rsi,%rax
   1dfdb:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1dfdf:	48 c1 e8 03          	shr    $0x3,%rax
   1dfe3:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1dfe7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1dfeb:	44 89 65 ac          	mov    %r12d,-0x54(%rbp)
   1dfef:	44 39 e3             	cmp    %r12d,%ebx
   1dff2:	7e 48                	jle    1e03c <system+0x1ee>
   1dff4:	4b 8b 7c e5 00       	mov    0x0(%r13,%r12,8),%rdi
   1dff9:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
   1dffd:	e8 73 49 ff ff       	call   12975 <expand_settings>
   1e002:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
   1e006:	4a 89 04 e6          	mov    %rax,(%rsi,%r12,8)
   1e00a:	49 ff c4             	inc    %r12
   1e00d:	48 85 c0             	test   %rax,%rax
   1e010:	75 d9                	jne    1dfeb <system+0x19d>
   1e012:	4c 63 65 ac          	movslq -0x54(%rbp),%r12
   1e016:	4a 8b 3c e6          	mov    (%rsi,%r12,8),%rdi
   1e01a:	49 ff cc             	dec    %r12
   1e01d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1e021:	e8 fc e6 fe ff       	call   c722 <free>
   1e026:	41 83 fc ff          	cmp    $0xffffffff,%r12d
   1e02a:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   1e02e:	75 e6                	jne    1e016 <system+0x1c8>
   1e030:	41 bc 77 df fd ce    	mov    $0xcefddf77,%r12d
   1e036:	48 8b 65 b8          	mov    -0x48(%rbp),%rsp
   1e03a:	eb 64                	jmp    1e0a0 <system+0x252>
   1e03c:	48 63 c3             	movslq %ebx,%rax
   1e03f:	48 c7 04 c6 00 00 00 	movq   $0x0,(%rsi,%rax,8)
   1e046:	00 
   1e047:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e04b:	48 8b 3c c5 00 00 00 	mov    0x0(,%rax,8),%rdi
   1e052:	00 
   1e053:	e8 17 fd ff ff       	call   1dd6f <execv>
   1e058:	41 89 c4             	mov    %eax,%r12d
   1e05b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1e05f:	48 8b 38             	mov    (%rax),%rdi
   1e062:	48 85 ff             	test   %rdi,%rdi
   1e065:	74 0c                	je     1e073 <system+0x225>
   1e067:	48 83 45 b0 08       	addq   $0x8,-0x50(%rbp)
   1e06c:	e8 b1 e6 fe ff       	call   c722 <free>
   1e071:	eb e8                	jmp    1e05b <system+0x20d>
   1e073:	48 8b 65 b8          	mov    -0x48(%rbp),%rsp
   1e077:	bf 01 00 00 00       	mov    $0x1,%edi
   1e07c:	e8 b1 fd ff ff       	call   1de32 <shell_stopped>
   1e081:	85 c0                	test   %eax,%eax
   1e083:	75 1b                	jne    1e0a0 <system+0x252>
   1e085:	4d 85 ff             	test   %r15,%r15
   1e088:	74 16                	je     1e0a0 <system+0x252>
   1e08a:	44 89 e7             	mov    %r12d,%edi
   1e08d:	48 63 db             	movslq %ebx,%rbx
   1e090:	41 ff d7             	call   *%r15
   1e093:	4d 8d 6c dd 08       	lea    0x8(%r13,%rbx,8),%r13
   1e098:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1e09b:	e9 66 fe ff ff       	jmp    1df06 <system+0xb8>
   1e0a0:	4c 89 f7             	mov    %r14,%rdi
   1e0a3:	e8 7a e6 fe ff       	call   c722 <free>
   1e0a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1e0ac:	48 2b 05 9d bf 00 00 	sub    0xbf9d(%rip),%rax        # 2a050 <__stack_chk_guard>
   1e0b3:	74 05                	je     1e0ba <system+0x26c>
   1e0b5:	e8 a6 49 fe ff       	call   2a60 <__stack_chk_fail>
   1e0ba:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1e0be:	44 89 e0             	mov    %r12d,%eax
   1e0c1:	5b                   	pop    %rbx
   1e0c2:	41 5c                	pop    %r12
   1e0c4:	41 5d                	pop    %r13
   1e0c6:	41 5e                	pop    %r14
   1e0c8:	41 5f                	pop    %r15
   1e0ca:	5d                   	pop    %rbp
   1e0cb:	c3                   	ret    

000000000001e0cc <concat_args>:
   1e0cc:	f3 0f 1e fa          	endbr64 
   1e0d0:	41 56                	push   %r14
   1e0d2:	41 55                	push   %r13
   1e0d4:	41 54                	push   %r12
   1e0d6:	49 89 fc             	mov    %rdi,%r12
   1e0d9:	55                   	push   %rbp
   1e0da:	bd 01 00 00 00       	mov    $0x1,%ebp
   1e0df:	53                   	push   %rbx
   1e0e0:	48 89 fb             	mov    %rdi,%rbx
   1e0e3:	49 8b 3c 24          	mov    (%r12),%rdi
   1e0e7:	48 85 ff             	test   %rdi,%rdi
   1e0ea:	74 10                	je     1e0fc <concat_args+0x30>
   1e0ec:	e8 25 59 ff ff       	call   13a16 <strlen>
   1e0f1:	49 83 c4 08          	add    $0x8,%r12
   1e0f5:	48 8d 6c 05 01       	lea    0x1(%rbp,%rax,1),%rbp
   1e0fa:	eb e7                	jmp    1e0e3 <concat_args+0x17>
   1e0fc:	48 89 ef             	mov    %rbp,%rdi
   1e0ff:	e8 32 e6 fe ff       	call   c736 <zalloc>
   1e104:	49 89 c4             	mov    %rax,%r12
   1e107:	48 85 c0             	test   %rax,%rax
   1e10a:	74 44                	je     1e150 <concat_args+0x84>
   1e10c:	49 89 c5             	mov    %rax,%r13
   1e10f:	48 89 dd             	mov    %rbx,%rbp
   1e112:	4c 8d 35 9b 63 00 00 	lea    0x639b(%rip),%r14        # 244b4 <.LC0>
   1e119:	4c 8b 45 00          	mov    0x0(%rbp),%r8
   1e11d:	4d 85 c0             	test   %r8,%r8
   1e120:	74 2e                	je     1e150 <concat_args+0x84>
   1e122:	48 39 dd             	cmp    %rbx,%rbp
   1e125:	48 8d 0d 0a 59 00 00 	lea    0x590a(%rip),%rcx        # 23a36 <.LC1>
   1e12c:	4c 89 ef             	mov    %r13,%rdi
   1e12f:	49 0f 44 ce          	cmove  %r14,%rcx
   1e133:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1e137:	31 c0                	xor    %eax,%eax
   1e139:	48 83 c5 08          	add    $0x8,%rbp
   1e13d:	48 8d 15 62 47 00 00 	lea    0x4762(%rip),%rdx        # 228a6 <.LC4>
   1e144:	e8 14 90 ff ff       	call   1715d <snprintf>
   1e149:	48 98                	cltq   
   1e14b:	49 01 c5             	add    %rax,%r13
   1e14e:	eb c9                	jmp    1e119 <concat_args+0x4d>
   1e150:	5b                   	pop    %rbx
   1e151:	4c 89 e0             	mov    %r12,%rax
   1e154:	5d                   	pop    %rbp
   1e155:	41 5c                	pop    %r12
   1e157:	41 5d                	pop    %r13
   1e159:	41 5e                	pop    %r14
   1e15b:	c3                   	ret    

000000000001e15c <echo_exec>:
   1e15c:	f3 0f 1e fa          	endbr64 
   1e160:	41 54                	push   %r12
   1e162:	48 8d 15 a7 9a 00 00 	lea    0x9aa7(%rip),%rdx        # 27c10 <echo_cmd>
   1e169:	55                   	push   %rbp
   1e16a:	48 89 f5             	mov    %rsi,%rbp
   1e16d:	48 83 ec 18          	sub    $0x18,%rsp
   1e171:	48 8b 05 d8 be 00 00 	mov    0xbed8(%rip),%rax        # 2a050 <__stack_chk_guard>
   1e178:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e17d:	31 c0                	xor    %eax,%eax
   1e17f:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
   1e184:	e8 02 11 ff ff       	call   f28b <parse_options>
   1e189:	41 89 c4             	mov    %eax,%r12d
   1e18c:	85 c0                	test   %eax,%eax
   1e18e:	75 51                	jne    1e1e1 <echo_exec+0x85>
   1e190:	48 63 05 f1 be 00 00 	movslq 0xbef1(%rip),%rax        # 2a088 <optind>
   1e197:	48 8d 7c c5 00       	lea    0x0(%rbp,%rax,8),%rdi
   1e19c:	e8 2b ff ff ff       	call   1e0cc <concat_args>
   1e1a1:	48 89 c5             	mov    %rax,%rbp
   1e1a4:	48 85 c0             	test   %rax,%rax
   1e1a7:	75 08                	jne    1e1b1 <echo_exec+0x55>
   1e1a9:	41 bc 77 df fd ce    	mov    $0xcefddf77,%r12d
   1e1af:	eb 30                	jmp    1e1e1 <echo_exec+0x85>
   1e1b1:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
   1e1b6:	48 8d 05 f2 58 00 00 	lea    0x58f2(%rip),%rax        # 23aaf <.LC0>
   1e1bd:	48 89 ee             	mov    %rbp,%rsi
   1e1c0:	48 8d 15 ed 62 00 00 	lea    0x62ed(%rip),%rdx        # 244b4 <.LC0>
   1e1c7:	48 8d 3d d8 46 00 00 	lea    0x46d8(%rip),%rdi        # 228a6 <.LC4>
   1e1ce:	48 0f 44 d0          	cmove  %rax,%rdx
   1e1d2:	31 c0                	xor    %eax,%eax
   1e1d4:	e8 a1 90 ff ff       	call   1727a <printf>
   1e1d9:	48 89 ef             	mov    %rbp,%rdi
   1e1dc:	e8 41 e5 fe ff       	call   c722 <free>
   1e1e1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1e1e6:	48 2b 05 63 be 00 00 	sub    0xbe63(%rip),%rax        # 2a050 <__stack_chk_guard>
   1e1ed:	74 05                	je     1e1f4 <echo_exec+0x98>
   1e1ef:	e8 6c 48 fe ff       	call   2a60 <__stack_chk_fail>
   1e1f4:	48 83 c4 18          	add    $0x18,%rsp
   1e1f8:	44 89 e0             	mov    %r12d,%eax
   1e1fb:	5d                   	pop    %rbp
   1e1fc:	41 5c                	pop    %r12
   1e1fe:	c3                   	ret    

000000000001e1ff <fragment_expired>:
   1e1ff:	f3 0f 1e fa          	endbr64 
   1e203:	53                   	push   %rbx
   1e204:	48 89 fb             	mov    %rdi,%rbx
   1e207:	48 8b 7f f0          	mov    -0x10(%rdi),%rdi
   1e20b:	e8 56 bb fe ff       	call   9d66 <free_iob>
   1e210:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
   1e214:	48 8b 53 e0          	mov    -0x20(%rbx),%rdx
   1e218:	48 8d 7b e0          	lea    -0x20(%rbx),%rdi
   1e21c:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1e220:	48 89 10             	mov    %rdx,(%rax)
   1e223:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1e227:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e22b:	48 ff 40 40          	incq   0x40(%rax)
   1e22f:	5b                   	pop    %rbx
   1e230:	e9 ed e4 fe ff       	jmp    c722 <free>

000000000001e235 <fragment_reassemble>:
   1e235:	f3 0f 1e fa          	endbr64 
   1e239:	41 57                	push   %r15
   1e23b:	41 56                	push   %r14
   1e23d:	49 89 d6             	mov    %rdx,%r14
   1e240:	41 55                	push   %r13
   1e242:	41 54                	push   %r12
   1e244:	49 89 f4             	mov    %rsi,%r12
   1e247:	55                   	push   %rbp
   1e248:	53                   	push   %rbx
   1e249:	48 89 fb             	mov    %rdi,%rbx
   1e24c:	51                   	push   %rcx
   1e24d:	48 8b 47 28          	mov    0x28(%rdi),%rax
   1e251:	48 8b 2f             	mov    (%rdi),%rbp
   1e254:	48 ff 40 30          	incq   0x30(%rax)
   1e258:	4c 8b 2a             	mov    (%rdx),%r13
   1e25b:	48 39 eb             	cmp    %rbp,%rbx
   1e25e:	74 16                	je     1e276 <fragment_reassemble+0x41>
   1e260:	4c 89 ea             	mov    %r13,%rdx
   1e263:	4c 89 e6             	mov    %r12,%rsi
   1e266:	48 89 ef             	mov    %rbp,%rdi
   1e269:	ff 53 10             	call   *0x10(%rbx)
   1e26c:	85 c0                	test   %eax,%eax
   1e26e:	75 08                	jne    1e278 <fragment_reassemble+0x43>
   1e270:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
   1e274:	eb e5                	jmp    1e25b <fragment_reassemble+0x26>
   1e276:	31 ed                	xor    %ebp,%ebp
   1e278:	49 8b 36             	mov    (%r14),%rsi
   1e27b:	4c 89 e7             	mov    %r12,%rdi
   1e27e:	ff 53 18             	call   *0x18(%rbx)
   1e281:	48 85 ed             	test   %rbp,%rbp
   1e284:	0f 84 f7 00 00 00    	je     1e381 <fragment_reassemble+0x14c>
   1e28a:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   1e28e:	48 8b 51 20          	mov    0x20(%rcx),%rdx
   1e292:	48 2b 51 18          	sub    0x18(%rcx),%rdx
   1e296:	48 2b 55 18          	sub    0x18(%rbp),%rdx
   1e29a:	48 39 c2             	cmp    %rax,%rdx
   1e29d:	0f 85 32 01 00 00    	jne    1e3d5 <fragment_reassemble+0x1a0>
   1e2a3:	49 8b 36             	mov    (%r14),%rsi
   1e2a6:	4c 89 e7             	mov    %r12,%rdi
   1e2a9:	ff 53 20             	call   *0x20(%rbx)
   1e2ac:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1e2b0:	41 89 c7             	mov    %eax,%r15d
   1e2b3:	49 8b 06             	mov    (%r14),%rax
   1e2b6:	49 03 44 24 18       	add    0x18(%r12),%rax
   1e2bb:	48 8b 7a 20          	mov    0x20(%rdx),%rdi
   1e2bf:	48 2b 7a 10          	sub    0x10(%rdx),%rdi
   1e2c3:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   1e2c8:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
   1e2cd:	48 29 c2             	sub    %rax,%rdx
   1e2d0:	48 01 d7             	add    %rdx,%rdi
   1e2d3:	e8 74 ba fe ff       	call   9d4c <alloc_iob>
   1e2d8:	49 89 c5             	mov    %rax,%r13
   1e2db:	48 85 c0             	test   %rax,%rax
   1e2de:	0f 84 f1 00 00 00    	je     1e3d5 <fragment_reassemble+0x1a0>
   1e2e4:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1e2e8:	48 8b 78 18          	mov    0x18(%rax),%rdi
   1e2ec:	48 2b 78 10          	sub    0x10(%rax),%rdi
   1e2f0:	49 01 7d 18          	add    %rdi,0x18(%r13)
   1e2f4:	49 03 7d 20          	add    0x20(%r13),%rdi
   1e2f8:	48 8b 70 18          	mov    0x18(%rax),%rsi
   1e2fc:	49 89 7d 20          	mov    %rdi,0x20(%r13)
   1e300:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1e304:	48 29 f2             	sub    %rsi,%rdx
   1e307:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   1e30b:	49 89 45 20          	mov    %rax,0x20(%r13)
   1e30f:	e8 d5 90 ff ff       	call   173e9 <__memcpy>
   1e314:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   1e319:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
   1e31e:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1e322:	48 29 f2             	sub    %rsi,%rdx
   1e325:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   1e329:	49 89 45 20          	mov    %rax,0x20(%r13)
   1e32d:	e8 b7 90 ff ff       	call   173e9 <__memcpy>
   1e332:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1e336:	e8 2b ba fe ff       	call   9d66 <free_iob>
   1e33b:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   1e33f:	4c 89 e7             	mov    %r12,%rdi
   1e342:	e8 1f ba fe ff       	call   9d66 <free_iob>
   1e347:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e34b:	e8 5c 20 ff ff       	call   103ac <stop_timer>
   1e350:	45 85 ff             	test   %r15d,%r15d
   1e353:	75 70                	jne    1e3c5 <fragment_reassemble+0x190>
   1e355:	48 8b 45 18          	mov    0x18(%rbp),%rax
   1e359:	4c 8b 65 10          	mov    0x10(%rbp),%r12
   1e35d:	48 89 ef             	mov    %rbp,%rdi
   1e360:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1e364:	49 89 06             	mov    %rax,(%r14)
   1e367:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1e36b:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1e36f:	48 89 10             	mov    %rdx,(%rax)
   1e372:	e8 ab e3 fe ff       	call   c722 <free>
   1e377:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1e37b:	48 ff 40 38          	incq   0x38(%rax)
   1e37f:	eb 67                	jmp    1e3e8 <fragment_reassemble+0x1b3>
   1e381:	48 85 c0             	test   %rax,%rax
   1e384:	75 4f                	jne    1e3d5 <fragment_reassemble+0x1a0>
   1e386:	bf 78 00 00 00       	mov    $0x78,%edi
   1e38b:	e8 a6 e3 fe ff       	call   c736 <zalloc>
   1e390:	48 89 c5             	mov    %rax,%rbp
   1e393:	48 85 c0             	test   %rax,%rax
   1e396:	74 3d                	je     1e3d5 <fragment_reassemble+0x1a0>
   1e398:	48 89 c7             	mov    %rax,%rdi
   1e39b:	48 89 de             	mov    %rbx,%rsi
   1e39e:	e8 ee dd fe ff       	call   c191 <extern_list_add>
   1e3a3:	49 8b 06             	mov    (%r14),%rax
   1e3a6:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   1e3aa:	48 c7 45 68 00 00 00 	movq   $0x0,0x68(%rbp)
   1e3b1:	00 
   1e3b2:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1e3b6:	48 8d 05 42 fe ff ff 	lea    -0x1be(%rip),%rax        # 1e1ff <fragment_expired>
   1e3bd:	48 89 45 60          	mov    %rax,0x60(%rbp)
   1e3c1:	48 89 5d 70          	mov    %rbx,0x70(%rbp)
   1e3c5:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e3c9:	be 00 02 00 00       	mov    $0x200,%esi
   1e3ce:	e8 6b 1f ff ff       	call   1033e <start_timer_fixed>
   1e3d3:	eb 10                	jmp    1e3e5 <fragment_reassemble+0x1b0>
   1e3d5:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1e3d9:	4c 89 e7             	mov    %r12,%rdi
   1e3dc:	48 ff 40 40          	incq   0x40(%rax)
   1e3e0:	e8 81 b9 fe ff       	call   9d66 <free_iob>
   1e3e5:	45 31 e4             	xor    %r12d,%r12d
   1e3e8:	5a                   	pop    %rdx
   1e3e9:	4c 89 e0             	mov    %r12,%rax
   1e3ec:	5b                   	pop    %rbx
   1e3ed:	5d                   	pop    %rbp
   1e3ee:	41 5c                	pop    %r12
   1e3f0:	41 5d                	pop    %r13
   1e3f2:	41 5e                	pop    %r14
   1e3f4:	41 5f                	pop    %r15
   1e3f6:	c3                   	ret    

000000000001e3f7 <getchar_timeout>:
   1e3f7:	55                   	push   %rbp
   1e3f8:	53                   	push   %rbx
   1e3f9:	48 89 fb             	mov    %rdi,%rbx
   1e3fc:	56                   	push   %rsi
   1e3fd:	e8 ab 79 ff ff       	call   15dad <currticks>
   1e402:	48 89 c5             	mov    %rax,%rbp
   1e405:	48 85 db             	test   %rbx,%rbx
   1e408:	75 1d                	jne    1e427 <getchar_timeout+0x30>
   1e40a:	e8 79 16 ff ff       	call   fa88 <step>
   1e40f:	e8 57 af ff ff       	call   1936b <iskey>
   1e414:	85 c0                	test   %eax,%eax
   1e416:	74 08                	je     1e420 <getchar_timeout+0x29>
   1e418:	59                   	pop    %rcx
   1e419:	5b                   	pop    %rbx
   1e41a:	5d                   	pop    %rbp
   1e41b:	e9 17 af ff ff       	jmp    19337 <getchar>
   1e420:	e8 4e f5 ff ff       	call   1d973 <cpu_nap>
   1e425:	eb de                	jmp    1e405 <getchar_timeout+0xe>
   1e427:	e8 81 79 ff ff       	call   15dad <currticks>
   1e42c:	48 29 e8             	sub    %rbp,%rax
   1e42f:	48 39 d8             	cmp    %rbx,%rax
   1e432:	72 d6                	jb     1e40a <getchar_timeout+0x13>
   1e434:	5a                   	pop    %rdx
   1e435:	83 c8 ff             	or     $0xffffffff,%eax
   1e438:	5b                   	pop    %rbx
   1e439:	5d                   	pop    %rbp
   1e43a:	c3                   	ret    

000000000001e43b <getkey>:
   1e43b:	f3 0f 1e fa          	endbr64 
   1e43f:	41 54                	push   %r12
   1e441:	53                   	push   %rbx
   1e442:	51                   	push   %rcx
   1e443:	e8 af ff ff ff       	call   1e3f7 <getchar_timeout>
   1e448:	41 89 c4             	mov    %eax,%r12d
   1e44b:	83 f8 1b             	cmp    $0x1b,%eax
   1e44e:	75 5d                	jne    1e4ad <getkey+0x72>
   1e450:	bf 00 01 00 00       	mov    $0x100,%edi
   1e455:	e8 9d ff ff ff       	call   1e3f7 <getchar_timeout>
   1e45a:	85 c0                	test   %eax,%eax
   1e45c:	78 4f                	js     1e4ad <getkey+0x72>
   1e45e:	8d 48 bf             	lea    -0x41(%rax),%ecx
   1e461:	8d 50 9f             	lea    -0x61(%rax),%edx
   1e464:	83 f9 19             	cmp    $0x19,%ecx
   1e467:	76 09                	jbe    1e472 <getkey+0x37>
   1e469:	31 db                	xor    %ebx,%ebx
   1e46b:	83 fa 19             	cmp    $0x19,%edx
   1e46e:	77 1f                	ja     1e48f <getkey+0x54>
   1e470:	eb 05                	jmp    1e477 <getkey+0x3c>
   1e472:	83 fa 19             	cmp    $0x19,%edx
   1e475:	77 03                	ja     1e47a <getkey+0x3f>
   1e477:	83 e8 20             	sub    $0x20,%eax
   1e47a:	44 8d 60 c0          	lea    -0x40(%rax),%r12d
   1e47e:	eb 2d                	jmp    1e4ad <getkey+0x72>
   1e480:	8d 50 d0             	lea    -0x30(%rax),%edx
   1e483:	83 fa 09             	cmp    $0x9,%edx
   1e486:	77 17                	ja     1e49f <getkey+0x64>
   1e488:	6b db 0a             	imul   $0xa,%ebx,%ebx
   1e48b:	8d 5c 18 d0          	lea    -0x30(%rax,%rbx,1),%ebx
   1e48f:	bf 00 01 00 00       	mov    $0x100,%edi
   1e494:	e8 5e ff ff ff       	call   1e3f7 <getchar_timeout>
   1e499:	85 c0                	test   %eax,%eax
   1e49b:	79 e3                	jns    1e480 <getkey+0x45>
   1e49d:	eb 0e                	jmp    1e4ad <getkey+0x72>
   1e49f:	83 f8 3f             	cmp    $0x3f,%eax
   1e4a2:	7e eb                	jle    1e48f <getkey+0x54>
   1e4a4:	ff c3                	inc    %ebx
   1e4a6:	c1 e3 08             	shl    $0x8,%ebx
   1e4a9:	44 8d 24 03          	lea    (%rbx,%rax,1),%r12d
   1e4ad:	44 89 e0             	mov    %r12d,%eax
   1e4b0:	5a                   	pop    %rdx
   1e4b1:	5b                   	pop    %rbx
   1e4b2:	41 5c                	pop    %r12
   1e4b4:	c3                   	ret    

000000000001e4b5 <http_parse_basic_auth>:
   1e4b5:	f3 0f 1e fa          	endbr64 
   1e4b9:	48 83 bf 48 01 00 00 	cmpq   $0x0,0x148(%rdi)
   1e4c0:	00 
   1e4c1:	75 07                	jne    1e4ca <http_parse_basic_auth+0x15>
   1e4c3:	83 8f 1c 02 00 00 04 	orl    $0x4,0x21c(%rdi)
   1e4ca:	31 c0                	xor    %eax,%eax
   1e4cc:	c3                   	ret    

000000000001e4cd <http_format_basic_auth>:
   1e4cd:	f3 0f 1e fa          	endbr64 
   1e4d1:	55                   	push   %rbp
   1e4d2:	48 89 e5             	mov    %rsp,%rbp
   1e4d5:	41 57                	push   %r15
   1e4d7:	41 56                	push   %r14
   1e4d9:	41 55                	push   %r13
   1e4db:	49 89 d5             	mov    %rdx,%r13
   1e4de:	41 54                	push   %r12
   1e4e0:	49 89 f4             	mov    %rsi,%r12
   1e4e3:	53                   	push   %rbx
   1e4e4:	48 89 fb             	mov    %rdi,%rbx
   1e4e7:	48 83 ec 28          	sub    $0x28,%rsp
   1e4eb:	4c 8b b7 50 01 00 00 	mov    0x150(%rdi),%r14
   1e4f2:	48 8b 05 57 bb 00 00 	mov    0xbb57(%rip),%rax        # 2a050 <__stack_chk_guard>
   1e4f9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1e4fd:	31 c0                	xor    %eax,%eax
   1e4ff:	4c 89 f7             	mov    %r14,%rdi
   1e502:	e8 0f 55 ff ff       	call   13a16 <strlen>
   1e507:	4c 8b 83 58 01 00 00 	mov    0x158(%rbx),%r8
   1e50e:	49 89 c7             	mov    %rax,%r15
   1e511:	4c 89 c7             	mov    %r8,%rdi
   1e514:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   1e518:	e8 f9 54 ff ff       	call   13a16 <strlen>
   1e51d:	48 89 e1             	mov    %rsp,%rcx
   1e520:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
   1e524:	49 01 c7             	add    %rax,%r15
   1e527:	49 8d 57 11          	lea    0x11(%r15),%rdx
   1e52b:	49 8d 77 02          	lea    0x2(%r15),%rsi
   1e52f:	48 89 d0             	mov    %rdx,%rax
   1e532:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   1e539:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1e53d:	48 29 d1             	sub    %rdx,%rcx
   1e540:	48 39 cc             	cmp    %rcx,%rsp
   1e543:	74 12                	je     1e557 <http_format_basic_auth+0x8a>
   1e545:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1e54c:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1e553:	00 00 
   1e555:	eb e9                	jmp    1e540 <http_format_basic_auth+0x73>
   1e557:	25 ff 0f 00 00       	and    $0xfff,%eax
   1e55c:	48 29 c4             	sub    %rax,%rsp
   1e55f:	48 85 c0             	test   %rax,%rax
   1e562:	74 06                	je     1e56a <http_format_basic_auth+0x9d>
   1e564:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1e56a:	4c 89 f1             	mov    %r14,%rcx
   1e56d:	48 8d 15 f3 52 00 00 	lea    0x52f3(%rip),%rdx        # 23867 <.LC0>
   1e574:	48 89 e7             	mov    %rsp,%rdi
   1e577:	31 c0                	xor    %eax,%eax
   1e579:	e8 df 8b ff ff       	call   1715d <snprintf>
   1e57e:	4c 89 e2             	mov    %r12,%rdx
   1e581:	49 8d 77 01          	lea    0x1(%r15),%rsi
   1e585:	4c 89 e9             	mov    %r13,%rcx
   1e588:	48 89 e7             	mov    %rsp,%rdi
   1e58b:	e8 b4 a5 ff ff       	call   18b44 <base64_encode>
   1e590:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1e594:	48 2b 15 b5 ba 00 00 	sub    0xbab5(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1e59b:	74 05                	je     1e5a2 <http_format_basic_auth+0xd5>
   1e59d:	e8 be 44 fe ff       	call   2a60 <__stack_chk_fail>
   1e5a2:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1e5a6:	5b                   	pop    %rbx
   1e5a7:	41 5c                	pop    %r12
   1e5a9:	41 5d                	pop    %r13
   1e5ab:	41 5e                	pop    %r14
   1e5ad:	41 5f                	pop    %r15
   1e5af:	5d                   	pop    %rbp
   1e5b0:	c3                   	ret    

000000000001e5b1 <http_basic_authenticate>:
   1e5b1:	f3 0f 1e fa          	endbr64 
   1e5b5:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   1e5bc:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1e5c0:	48 85 d2             	test   %rdx,%rdx
   1e5c3:	75 06                	jne    1e5cb <http_basic_authenticate+0x1a>
   1e5c5:	b8 71 9e bc fd       	mov    $0xfdbc9e71,%eax
   1e5ca:	c3                   	ret    
   1e5cb:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e5cf:	48 89 97 50 01 00 00 	mov    %rdx,0x150(%rdi)
   1e5d6:	48 85 c0             	test   %rax,%rax
   1e5d9:	75 07                	jne    1e5e2 <http_basic_authenticate+0x31>
   1e5db:	48 8d 05 d2 5e 00 00 	lea    0x5ed2(%rip),%rax        # 244b4 <.LC0>
   1e5e2:	48 89 87 58 01 00 00 	mov    %rax,0x158(%rdi)
   1e5e9:	31 c0                	xor    %eax,%eax
   1e5eb:	c3                   	ret    

000000000001e5ec <http_conn_xfer_recycle>:
   1e5ec:	f3 0f 1e fa          	endbr64 
   1e5f0:	83 8f c8 00 00 00 01 	orl    $0x1,0xc8(%rdi)
   1e5f7:	c3                   	ret    

000000000001e5f8 <http_conn_socket_deliver>:
   1e5f8:	f3 0f 1e fa          	endbr64 
   1e5fc:	83 8f c8 00 00 00 04 	orl    $0x4,0xc8(%rdi)
   1e603:	48 83 c7 40          	add    $0x40,%rdi
   1e607:	e9 e9 90 ff ff       	jmp    176f5 <xfer_deliver>

000000000001e60c <http_conn_free>:
   1e60c:	f3 0f 1e fa          	endbr64 
   1e610:	55                   	push   %rbp
   1e611:	48 89 fd             	mov    %rdi,%rbp
   1e614:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1e618:	e8 fd 18 ff ff       	call   ff1a <ref_decrement>
   1e61d:	48 89 ef             	mov    %rbp,%rdi
   1e620:	5d                   	pop    %rbp
   1e621:	e9 fc e0 fe ff       	jmp    c722 <free>

000000000001e626 <http_conn_close>:
   1e626:	55                   	push   %rbp
   1e627:	89 f5                	mov    %esi,%ebp
   1e629:	53                   	push   %rbx
   1e62a:	48 89 fb             	mov    %rdi,%rbx
   1e62d:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
   1e631:	50                   	push   %rax
   1e632:	e8 9e 12 ff ff       	call   f8d5 <pool_del>
   1e637:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   1e63b:	89 ee                	mov    %ebp,%esi
   1e63d:	e8 5d b3 fe ff       	call   999f <intf_shutdown>
   1e642:	5a                   	pop    %rdx
   1e643:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   1e647:	89 ee                	mov    %ebp,%esi
   1e649:	5b                   	pop    %rbx
   1e64a:	5d                   	pop    %rbp
   1e64b:	e9 4f b3 fe ff       	jmp    999f <intf_shutdown>

000000000001e650 <http_conn_expired>:
   1e650:	f3 0f 1e fa          	endbr64 
   1e654:	48 83 ef 60          	sub    $0x60,%rdi
   1e658:	31 f6                	xor    %esi,%esi
   1e65a:	e9 c7 ff ff ff       	jmp    1e626 <http_conn_close>

000000000001e65f <http_conn_socket_close>:
   1e65f:	f3 0f 1e fa          	endbr64 
   1e663:	55                   	push   %rbp
   1e664:	48 89 fd             	mov    %rdi,%rbp
   1e667:	48 83 ec 10          	sub    $0x10,%rsp
   1e66b:	8b 87 c8 00 00 00    	mov    0xc8(%rdi),%eax
   1e671:	83 e0 06             	and    $0x6,%eax
   1e674:	83 f8 02             	cmp    $0x2,%eax
   1e677:	75 11                	jne    1e68a <http_conn_socket_close+0x2b>
   1e679:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1e67d:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1e681:	e8 1e 12 ff ff       	call   f8a4 <pool_reopen>
   1e686:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1e68a:	48 83 c4 10          	add    $0x10,%rsp
   1e68e:	48 89 ef             	mov    %rbp,%rdi
   1e691:	5d                   	pop    %rbp
   1e692:	e9 8f ff ff ff       	jmp    1e626 <http_conn_close>

000000000001e697 <http_conn_xfer_close>:
   1e697:	f3 0f 1e fa          	endbr64 
   1e69b:	55                   	push   %rbp
   1e69c:	48 89 fd             	mov    %rdi,%rbp
   1e69f:	85 f6                	test   %esi,%esi
   1e6a1:	75 28                	jne    1e6cb <http_conn_xfer_close+0x34>
   1e6a3:	f6 87 c8 00 00 00 01 	testb  $0x1,0xc8(%rdi)
   1e6aa:	74 1f                	je     1e6cb <http_conn_xfer_close+0x34>
   1e6ac:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1e6b0:	e8 63 b2 fe ff       	call   9918 <intf_restart>
   1e6b5:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   1e6b9:	5d                   	pop    %rbp
   1e6ba:	ba 00 28 00 00       	mov    $0x2800,%edx
   1e6bf:	48 8d 35 1a 96 00 00 	lea    0x961a(%rip),%rsi        # 27ce0 <http_connection_pool>
   1e6c6:	e9 e9 11 ff ff       	jmp    f8b4 <pool_add>
   1e6cb:	48 89 ef             	mov    %rbp,%rdi
   1e6ce:	5d                   	pop    %rbp
   1e6cf:	e9 52 ff ff ff       	jmp    1e626 <http_conn_close>

000000000001e6d4 <http_connect>:
   1e6d4:	f3 0f 1e fa          	endbr64 
   1e6d8:	41 57                	push   %r15
   1e6da:	41 56                	push   %r14
   1e6dc:	41 55                	push   %r13
   1e6de:	41 54                	push   %r12
   1e6e0:	55                   	push   %rbp
   1e6e1:	53                   	push   %rbx
   1e6e2:	48 83 ec 48          	sub    $0x48,%rsp
   1e6e6:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
   1e6ea:	48 8b 05 5f b9 00 00 	mov    0xb95f(%rip),%rax        # 2a050 <__stack_chk_guard>
   1e6f1:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e6f6:	31 c0                	xor    %eax,%eax
   1e6f8:	48 85 ed             	test   %rbp,%rbp
   1e6fb:	74 2f                	je     1e72c <http_connect+0x58>
   1e6fd:	49 89 fe             	mov    %rdi,%r14
   1e700:	48 89 f3             	mov    %rsi,%rbx
   1e703:	4c 8d 25 f6 a4 00 00 	lea    0xa4f6(%rip),%r12        # 28c00 <http_scheme>
   1e70a:	4c 8d 2d 07 a5 00 00 	lea    0xa507(%rip),%r13        # 28c18 <http_transfer_chunked>
   1e711:	4d 39 ec             	cmp    %r13,%r12
   1e714:	73 16                	jae    1e72c <http_connect+0x58>
   1e716:	49 8b 34 24          	mov    (%r12),%rsi
   1e71a:	48 89 ef             	mov    %rbp,%rdi
   1e71d:	e8 9a 52 ff ff       	call   139bc <strcmp>
   1e722:	85 c0                	test   %eax,%eax
   1e724:	74 11                	je     1e737 <http_connect+0x63>
   1e726:	49 83 c4 18          	add    $0x18,%r12
   1e72a:	eb e5                	jmp    1e711 <http_connect+0x3d>
   1e72c:	41 bd 7d 9f be c3    	mov    $0xc3be9f7d,%r13d
   1e732:	e9 be 01 00 00       	jmp    1e8f5 <http_connect+0x221>
   1e737:	48 83 7b 30 00       	cmpq   $0x0,0x30(%rbx)
   1e73c:	75 0b                	jne    1e749 <http_connect+0x75>
   1e73e:	41 bd 7e 9f be e3    	mov    $0xe3be9f7e,%r13d
   1e744:	e9 ac 01 00 00       	jmp    1e8f5 <http_connect+0x221>
   1e749:	41 8b 74 24 08       	mov    0x8(%r12),%esi
   1e74e:	48 89 df             	mov    %rbx,%rdi
   1e751:	e8 f0 7f ff ff       	call   16746 <uri_port>
   1e756:	89 44 24 04          	mov    %eax,0x4(%rsp)
   1e75a:	48 8b 05 87 95 00 00 	mov    0x9587(%rip),%rax        # 27ce8 <http_connection_pool+0x8>
   1e761:	4c 8d 78 a0          	lea    -0x60(%rax),%r15
   1e765:	49 8d 6f 60          	lea    0x60(%r15),%rbp
   1e769:	48 8d 05 70 95 00 00 	lea    0x9570(%rip),%rax        # 27ce0 <http_connection_pool>
   1e770:	48 39 c5             	cmp    %rax,%rbp
   1e773:	74 5e                	je     1e7d3 <http_connect+0xff>
   1e775:	4d 39 67 18          	cmp    %r12,0x18(%r15)
   1e779:	75 4e                	jne    1e7c9 <http_connect+0xf5>
   1e77b:	4d 8b 4f 10          	mov    0x10(%r15),%r9
   1e77f:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   1e783:	49 8b 71 30          	mov    0x30(%r9),%rsi
   1e787:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1e78c:	e8 2b 52 ff ff       	call   139bc <strcmp>
   1e791:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1e796:	85 c0                	test   %eax,%eax
   1e798:	41 89 c5             	mov    %eax,%r13d
   1e79b:	75 2c                	jne    1e7c9 <http_connect+0xf5>
   1e79d:	41 8b 74 24 08       	mov    0x8(%r12),%esi
   1e7a2:	4c 89 cf             	mov    %r9,%rdi
   1e7a5:	e8 9c 7f ff ff       	call   16746 <uri_port>
   1e7aa:	3b 44 24 04          	cmp    0x4(%rsp),%eax
   1e7ae:	75 19                	jne    1e7c9 <http_connect+0xf5>
   1e7b0:	48 89 ef             	mov    %rbp,%rdi
   1e7b3:	e8 1d 11 ff ff       	call   f8d5 <pool_del>
   1e7b8:	49 8d 7f 40          	lea    0x40(%r15),%rdi
   1e7bc:	4c 89 f6             	mov    %r14,%rsi
   1e7bf:	e8 7d b0 fe ff       	call   9841 <intf_plug_plug>
   1e7c4:	e9 2c 01 00 00       	jmp    1e8f5 <http_connect+0x221>
   1e7c9:	49 8b 57 68          	mov    0x68(%r15),%rdx
   1e7cd:	4c 8d 7a a0          	lea    -0x60(%rdx),%r15
   1e7d1:	eb 92                	jmp    1e765 <http_connect+0x91>
   1e7d3:	bf d0 00 00 00       	mov    $0xd0,%edi
   1e7d8:	e8 59 df fe ff       	call   c736 <zalloc>
   1e7dd:	48 89 c5             	mov    %rax,%rbp
   1e7e0:	48 85 c0             	test   %rax,%rax
   1e7e3:	75 0b                	jne    1e7f0 <http_connect+0x11c>
   1e7e5:	41 bd 77 9f be ce    	mov    $0xcebe9f77,%r13d
   1e7eb:	e9 05 01 00 00       	jmp    1e8f5 <http_connect+0x221>
   1e7f0:	48 8d 05 15 fe ff ff 	lea    -0x1eb(%rip),%rax        # 1e60c <http_conn_free>
   1e7f7:	48 89 df             	mov    %rbx,%rdi
   1e7fa:	4c 8d 7c 24 18       	lea    0x18(%rsp),%r15
   1e7ff:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1e803:	e8 06 17 ff ff       	call   ff0e <ref_increment>
   1e808:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
   1e80c:	4c 8d 45 20          	lea    0x20(%rbp),%r8
   1e810:	4c 89 ff             	mov    %r15,%rdi
   1e813:	48 8d 05 a6 7c 00 00 	lea    0x7ca6(%rip),%rax        # 264c0 <null_intf>
   1e81a:	48 8d 15 7f 94 00 00 	lea    0x947f(%rip),%rdx        # 27ca0 <http_conn_socket_desc>
   1e821:	4c 89 65 18          	mov    %r12,0x18(%rbp)
   1e825:	b9 20 00 00 00       	mov    $0x20,%ecx
   1e82a:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1e82e:	48 89 45 40          	mov    %rax,0x40(%rbp)
   1e832:	48 8d 05 27 94 00 00 	lea    0x9427(%rip),%rax        # 27c60 <http_conn_xfer_desc>
   1e839:	48 89 45 50          	mov    %rax,0x50(%rbp)
   1e83d:	48 89 45 58          	mov    %rax,0x58(%rbp)
   1e841:	48 8d 45 60          	lea    0x60(%rbp),%rax
   1e845:	48 89 45 60          	mov    %rax,0x60(%rbp)
   1e849:	48 89 45 68          	mov    %rax,0x68(%rbp)
   1e84d:	48 8d 05 b0 10 ff ff 	lea    -0xef50(%rip),%rax        # f904 <pool_expired>
   1e854:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   1e85b:	48 8d 05 ee fd ff ff 	lea    -0x212(%rip),%rax        # 1e650 <http_conn_expired>
   1e862:	48 89 85 c0 00 00 00 	mov    %rax,0xc0(%rbp)
   1e869:	31 c0                	xor    %eax,%eax
   1e86b:	48 89 6d 28          	mov    %rbp,0x28(%rbp)
   1e86f:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   1e873:	48 89 55 38          	mov    %rdx,0x38(%rbp)
   1e877:	48 89 6d 48          	mov    %rbp,0x48(%rbp)
   1e87b:	48 89 ad b8 00 00 00 	mov    %rbp,0xb8(%rbp)
   1e882:	f3 aa                	rep stos %al,%es:(%rdi)
   1e884:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1e888:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   1e88d:	86 c4                	xchg   %al,%ah
   1e88f:	66 89 44 24 1c       	mov    %ax,0x1c(%rsp)
   1e894:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1e899:	48 85 c0             	test   %rax,%rax
   1e89c:	75 2f                	jne    1e8cd <http_connect+0x1f9>
   1e89e:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   1e8a2:	8b 35 64 5d 00 00    	mov    0x5d64(%rip),%esi        # 2460c <tcp_sock_stream>
   1e8a8:	45 31 c0             	xor    %r8d,%r8d
   1e8ab:	4c 89 fa             	mov    %r15,%rdx
   1e8ae:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e8b3:	e8 ab 19 ff ff       	call   10263 <xfer_open_named_socket>
   1e8b8:	41 89 c5             	mov    %eax,%r13d
   1e8bb:	85 c0                	test   %eax,%eax
   1e8bd:	75 23                	jne    1e8e2 <http_connect+0x20e>
   1e8bf:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
   1e8c3:	4c 89 f6             	mov    %r14,%rsi
   1e8c6:	e8 76 af fe ff       	call   9841 <intf_plug_plug>
   1e8cb:	eb 20                	jmp    1e8ed <http_connect+0x219>
   1e8cd:	48 8b 73 30          	mov    0x30(%rbx),%rsi
   1e8d1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1e8d6:	4c 89 c7             	mov    %r8,%rdi
   1e8d9:	ff d0                	call   *%rax
   1e8db:	41 89 c5             	mov    %eax,%r13d
   1e8de:	85 c0                	test   %eax,%eax
   1e8e0:	74 bc                	je     1e89e <http_connect+0x1ca>
   1e8e2:	44 89 ee             	mov    %r13d,%esi
   1e8e5:	48 89 ef             	mov    %rbp,%rdi
   1e8e8:	e8 39 fd ff ff       	call   1e626 <http_conn_close>
   1e8ed:	48 89 ef             	mov    %rbp,%rdi
   1e8f0:	e8 25 16 ff ff       	call   ff1a <ref_decrement>
   1e8f5:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1e8fa:	48 2b 05 4f b7 00 00 	sub    0xb74f(%rip),%rax        # 2a050 <__stack_chk_guard>
   1e901:	74 05                	je     1e908 <http_connect+0x234>
   1e903:	e8 58 41 fe ff       	call   2a60 <__stack_chk_fail>
   1e908:	48 83 c4 48          	add    $0x48,%rsp
   1e90c:	44 89 e8             	mov    %r13d,%eax
   1e90f:	5b                   	pop    %rbx
   1e910:	5d                   	pop    %rbp
   1e911:	41 5c                	pop    %r12
   1e913:	41 5d                	pop    %r13
   1e915:	41 5e                	pop    %r14
   1e917:	41 5f                	pop    %r15
   1e919:	c3                   	ret    

000000000001e91a <http_format_digest_auth>:
   1e91a:	f3 0f 1e fa          	endbr64 
   1e91e:	41 55                	push   %r13
   1e920:	49 89 d5             	mov    %rdx,%r13
   1e923:	31 c0                	xor    %eax,%eax
   1e925:	48 8d 15 e6 58 00 00 	lea    0x58e6(%rip),%rdx        # 24212 <.LC0>
   1e92c:	41 54                	push   %r12
   1e92e:	49 89 f4             	mov    %rsi,%r12
   1e931:	4c 89 ee             	mov    %r13,%rsi
   1e934:	55                   	push   %rbp
   1e935:	48 89 fd             	mov    %rdi,%rbp
   1e938:	53                   	push   %rbx
   1e939:	48 83 ec 10          	sub    $0x10,%rsp
   1e93d:	48 8b 8f f0 01 00 00 	mov    0x1f0(%rdi),%rcx
   1e944:	ff b7 50 01 00 00    	push   0x150(%rdi)
   1e94a:	4c 8b 8f 10 01 00 00 	mov    0x110(%rdi),%r9
   1e951:	4c 8b 87 08 02 00 00 	mov    0x208(%rdi),%r8
   1e958:	4c 89 e7             	mov    %r12,%rdi
   1e95b:	e8 6f 88 ff ff       	call   171cf <ssnprintf>
   1e960:	48 8b 8d 10 02 00 00 	mov    0x210(%rbp),%rcx
   1e967:	5e                   	pop    %rsi
   1e968:	48 63 d8             	movslq %eax,%rbx
   1e96b:	5f                   	pop    %rdi
   1e96c:	48 85 c9             	test   %rcx,%rcx
   1e96f:	74 1d                	je     1e98e <http_format_digest_auth+0x74>
   1e971:	4c 89 ee             	mov    %r13,%rsi
   1e974:	49 8d 3c 1c          	lea    (%r12,%rbx,1),%rdi
   1e978:	48 8d 15 c3 58 00 00 	lea    0x58c3(%rip),%rdx        # 24242 <.LC1>
   1e97f:	31 c0                	xor    %eax,%eax
   1e981:	48 29 de             	sub    %rbx,%rsi
   1e984:	e8 46 88 ff ff       	call   171cf <ssnprintf>
   1e989:	48 98                	cltq   
   1e98b:	48 01 c3             	add    %rax,%rbx
   1e98e:	48 8b 8d 58 01 00 00 	mov    0x158(%rbp),%rcx
   1e995:	48 85 c9             	test   %rcx,%rcx
   1e998:	74 2b                	je     1e9c5 <http_format_digest_auth+0xab>
   1e99a:	4c 8b 85 60 01 00 00 	mov    0x160(%rbp),%r8
   1e9a1:	4c 89 ee             	mov    %r13,%rsi
   1e9a4:	49 8d 3c 1c          	lea    (%r12,%rbx,1),%rdi
   1e9a8:	31 c0                	xor    %eax,%eax
   1e9aa:	48 29 de             	sub    %rbx,%rsi
   1e9ad:	4c 8d 8d 68 01 00 00 	lea    0x168(%rbp),%r9
   1e9b4:	48 8d 15 95 58 00 00 	lea    0x5895(%rip),%rdx        # 24250 <.LC2>
   1e9bb:	e8 0f 88 ff ff       	call   171cf <ssnprintf>
   1e9c0:	48 98                	cltq   
   1e9c2:	48 01 c3             	add    %rax,%rbx
   1e9c5:	4c 89 ee             	mov    %r13,%rsi
   1e9c8:	49 8d 3c 1c          	lea    (%r12,%rbx,1),%rdi
   1e9cc:	48 8d 8d 71 01 00 00 	lea    0x171(%rbp),%rcx
   1e9d3:	31 c0                	xor    %eax,%eax
   1e9d5:	48 29 de             	sub    %rbx,%rsi
   1e9d8:	48 8d 15 a2 58 00 00 	lea    0x58a2(%rip),%rdx        # 24281 <.LC3>
   1e9df:	e8 eb 87 ff ff       	call   171cf <ssnprintf>
   1e9e4:	5a                   	pop    %rdx
   1e9e5:	01 d8                	add    %ebx,%eax
   1e9e7:	5b                   	pop    %rbx
   1e9e8:	5d                   	pop    %rbp
   1e9e9:	41 5c                	pop    %r12
   1e9eb:	41 5d                	pop    %r13
   1e9ed:	c3                   	ret    

000000000001e9ee <http_parse_digest_auth>:
   1e9ee:	f3 0f 1e fa          	endbr64 
   1e9f2:	41 56                	push   %r14
   1e9f4:	41 55                	push   %r13
   1e9f6:	4c 8d 2d 53 93 00 00 	lea    0x9353(%rip),%r13        # 27d50 <http_digest_fields+0x50>
   1e9fd:	41 54                	push   %r12
   1e9ff:	55                   	push   %rbp
   1ea00:	53                   	push   %rbx
   1ea01:	48 89 fb             	mov    %rdi,%rbx
   1ea04:	48 83 ec 20          	sub    $0x20,%rsp
   1ea08:	48 8b 05 41 b6 00 00 	mov    0xb641(%rip),%rax        # 2a050 <__stack_chk_guard>
   1ea0f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ea14:	31 c0                	xor    %eax,%eax
   1ea16:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1ea1b:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1ea20:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1ea25:	e8 c2 94 fe ff       	call   7eec <http_token>
   1ea2a:	49 89 c4             	mov    %rax,%r12
   1ea2d:	48 85 c0             	test   %rax,%rax
   1ea30:	74 2f                	je     1ea61 <http_parse_digest_auth+0x73>
   1ea32:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   1ea37:	48 8d 2d c2 92 00 00 	lea    0x92c2(%rip),%rbp        # 27d00 <http_digest_fields>
   1ea3e:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   1ea42:	4c 89 e7             	mov    %r12,%rdi
   1ea45:	e8 7f 4f ff ff       	call   139c9 <strcasecmp>
   1ea4a:	85 c0                	test   %eax,%eax
   1ea4c:	75 08                	jne    1ea56 <http_parse_digest_auth+0x68>
   1ea4e:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1ea52:	4c 89 34 03          	mov    %r14,(%rbx,%rax,1)
   1ea56:	48 83 c5 10          	add    $0x10,%rbp
   1ea5a:	4c 39 ed             	cmp    %r13,%rbp
   1ea5d:	75 df                	jne    1ea3e <http_parse_digest_auth+0x50>
   1ea5f:	eb ba                	jmp    1ea1b <http_parse_digest_auth+0x2d>
   1ea61:	48 83 bb 48 01 00 00 	cmpq   $0x0,0x148(%rbx)
   1ea68:	00 
   1ea69:	75 07                	jne    1ea72 <http_parse_digest_auth+0x84>
   1ea6b:	83 8b 1c 02 00 00 04 	orl    $0x4,0x21c(%rbx)
   1ea72:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1ea77:	48 2b 05 d2 b5 00 00 	sub    0xb5d2(%rip),%rax        # 2a050 <__stack_chk_guard>
   1ea7e:	74 05                	je     1ea85 <http_parse_digest_auth+0x97>
   1ea80:	e8 db 3f fe ff       	call   2a60 <__stack_chk_fail>
   1ea85:	48 83 c4 20          	add    $0x20,%rsp
   1ea89:	31 c0                	xor    %eax,%eax
   1ea8b:	5b                   	pop    %rbx
   1ea8c:	5d                   	pop    %rbp
   1ea8d:	41 5c                	pop    %r12
   1ea8f:	41 5d                	pop    %r13
   1ea91:	41 5e                	pop    %r14
   1ea93:	c3                   	ret    

000000000001ea94 <http_digest_final.constprop.0>:
   1ea94:	41 54                	push   %r12
   1ea96:	49 89 f4             	mov    %rsi,%r12
   1ea99:	55                   	push   %rbp
   1ea9a:	48 83 ec 28          	sub    $0x28,%rsp
   1ea9e:	48 8b 05 ab b5 00 00 	mov    0xb5ab(%rip),%rax        # 2a050 <__stack_chk_guard>
   1eaa5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1eaaa:	31 c0                	xor    %eax,%eax
   1eaac:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   1eab1:	48 89 ee             	mov    %rbp,%rsi
   1eab4:	ff 15 96 7c 00 00    	call   *0x7c96(%rip)        # 26750 <md5_algorithm+0x30>
   1eaba:	31 ff                	xor    %edi,%edi
   1eabc:	41 b8 21 00 00 00    	mov    $0x21,%r8d
   1eac2:	4c 89 e1             	mov    %r12,%rcx
   1eac5:	ba 10 00 00 00       	mov    $0x10,%edx
   1eaca:	48 89 ee             	mov    %rbp,%rsi
   1eacd:	e8 2e 9f ff ff       	call   18a00 <hex_encode>
   1ead2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1ead7:	48 2b 05 72 b5 00 00 	sub    0xb572(%rip),%rax        # 2a050 <__stack_chk_guard>
   1eade:	74 05                	je     1eae5 <http_digest_final.constprop.0+0x51>
   1eae0:	e8 7b 3f fe ff       	call   2a60 <__stack_chk_fail>
   1eae5:	48 83 c4 28          	add    $0x28,%rsp
   1eae9:	5d                   	pop    %rbp
   1eaea:	41 5c                	pop    %r12
   1eaec:	c3                   	ret    

000000000001eaed <http_digest_init>:
   1eaed:	ff 25 4d 7c 00 00    	jmp    *0x7c4d(%rip)        # 26740 <md5_algorithm+0x20>

000000000001eaf3 <http_digest_update>:
   1eaf3:	41 54                	push   %r12
   1eaf5:	49 89 f4             	mov    %rsi,%r12
   1eaf8:	55                   	push   %rbp
   1eaf9:	48 89 fd             	mov    %rdi,%rbp
   1eafc:	52                   	push   %rdx
   1eafd:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1eb01:	74 12                	je     1eb15 <http_digest_update+0x22>
   1eb03:	ba 01 00 00 00       	mov    $0x1,%edx
   1eb08:	48 8d 35 51 3c 00 00 	lea    0x3c51(%rip),%rsi        # 22760 <colon.0>
   1eb0f:	ff 15 33 7c 00 00    	call   *0x7c33(%rip)        # 26748 <md5_algorithm+0x28>
   1eb15:	4c 89 e7             	mov    %r12,%rdi
   1eb18:	e8 f9 4e ff ff       	call   13a16 <strlen>
   1eb1d:	4c 89 e6             	mov    %r12,%rsi
   1eb20:	48 89 ef             	mov    %rbp,%rdi
   1eb23:	48 89 c2             	mov    %rax,%rdx
   1eb26:	58                   	pop    %rax
   1eb27:	5d                   	pop    %rbp
   1eb28:	41 5c                	pop    %r12
   1eb2a:	ff 25 18 7c 00 00    	jmp    *0x7c18(%rip)        # 26748 <md5_algorithm+0x28>

000000000001eb30 <http_digest_authenticate>:
   1eb30:	f3 0f 1e fa          	endbr64 
   1eb34:	41 55                	push   %r13
   1eb36:	41 54                	push   %r12
   1eb38:	55                   	push   %rbp
   1eb39:	53                   	push   %rbx
   1eb3a:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   1eb41:	48 8b 05 08 b5 00 00 	mov    0xb508(%rip),%rax        # 2a050 <__stack_chk_guard>
   1eb48:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   1eb4f:	00 
   1eb50:	31 c0                	xor    %eax,%eax
   1eb52:	48 83 bf f0 01 00 00 	cmpq   $0x0,0x1f0(%rdi)
   1eb59:	00 
   1eb5a:	75 02                	jne    1eb5e <http_digest_authenticate+0x2e>
   1eb5c:	eb 0d                	jmp    1eb6b <http_digest_authenticate+0x3b>
   1eb5e:	48 83 bf 08 02 00 00 	cmpq   $0x0,0x208(%rdi)
   1eb65:	00 
   1eb66:	48 89 fb             	mov    %rdi,%rbx
   1eb69:	75 0a                	jne    1eb75 <http_digest_authenticate+0x45>
   1eb6b:	b8 7e 9f bb e3       	mov    $0xe3bb9f7e,%eax
   1eb70:	e9 d8 01 00 00       	jmp    1ed4d <http_digest_authenticate+0x21d>
   1eb75:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   1eb7c:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1eb80:	48 85 d2             	test   %rdx,%rdx
   1eb83:	75 0a                	jne    1eb8f <http_digest_authenticate+0x5f>
   1eb85:	b8 71 9e bb fd       	mov    $0xfdbb9e71,%eax
   1eb8a:	e9 be 01 00 00       	jmp    1ed4d <http_digest_authenticate+0x21d>
   1eb8f:	4c 8b 60 28          	mov    0x28(%rax),%r12
   1eb93:	48 89 97 50 01 00 00 	mov    %rdx,0x150(%rdi)
   1eb9a:	4d 85 e4             	test   %r12,%r12
   1eb9d:	75 07                	jne    1eba6 <http_digest_authenticate+0x76>
   1eb9f:	4c 8d 25 0e 59 00 00 	lea    0x590e(%rip),%r12        # 244b4 <.LC0>
   1eba6:	48 83 bb f8 01 00 00 	cmpq   $0x0,0x1f8(%rbx)
   1ebad:	00 
   1ebae:	4c 8d 2d b3 3b 00 00 	lea    0x3bb3(%rip),%r13        # 22768 <md5sess.1>
   1ebb5:	74 5d                	je     1ec14 <http_digest_authenticate+0xe4>
   1ebb7:	48 8d 05 d3 56 00 00 	lea    0x56d3(%rip),%rax        # 24291 <.LC5>
   1ebbe:	48 89 83 58 01 00 00 	mov    %rax,0x158(%rbx)
   1ebc5:	e8 53 0f ff ff       	call   fb1d <random>
   1ebca:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
   1ebd1:	be 09 00 00 00       	mov    $0x9,%esi
   1ebd6:	48 8d 15 b9 56 00 00 	lea    0x56b9(%rip),%rdx        # 24296 <.LC6>
   1ebdd:	48 89 c1             	mov    %rax,%rcx
   1ebe0:	31 c0                	xor    %eax,%eax
   1ebe2:	e8 76 85 ff ff       	call   1715d <snprintf>
   1ebe7:	48 8b bb 00 02 00 00 	mov    0x200(%rbx),%rdi
   1ebee:	48 8d 05 7c 3b 00 00 	lea    0x3b7c(%rip),%rax        # 22771 <md5.2>
   1ebf5:	48 89 83 60 01 00 00 	mov    %rax,0x160(%rbx)
   1ebfc:	48 85 ff             	test   %rdi,%rdi
   1ebff:	74 13                	je     1ec14 <http_digest_authenticate+0xe4>
   1ec01:	4c 89 ee             	mov    %r13,%rsi
   1ec04:	e8 c0 4d ff ff       	call   139c9 <strcasecmp>
   1ec09:	85 c0                	test   %eax,%eax
   1ec0b:	75 07                	jne    1ec14 <http_digest_authenticate+0xe4>
   1ec0d:	4c 89 ab 60 01 00 00 	mov    %r13,0x160(%rbx)
   1ec14:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
   1ec19:	48 89 ef             	mov    %rbp,%rdi
   1ec1c:	e8 cc fe ff ff       	call   1eaed <http_digest_init>
   1ec21:	48 8b b3 50 01 00 00 	mov    0x150(%rbx),%rsi
   1ec28:	48 89 ef             	mov    %rbp,%rdi
   1ec2b:	e8 c3 fe ff ff       	call   1eaf3 <http_digest_update>
   1ec30:	48 8b b3 f0 01 00 00 	mov    0x1f0(%rbx),%rsi
   1ec37:	48 89 ef             	mov    %rbp,%rdi
   1ec3a:	e8 b4 fe ff ff       	call   1eaf3 <http_digest_update>
   1ec3f:	4c 89 e6             	mov    %r12,%rsi
   1ec42:	48 89 ef             	mov    %rbp,%rdi
   1ec45:	4c 8d 64 24 0e       	lea    0xe(%rsp),%r12
   1ec4a:	e8 a4 fe ff ff       	call   1eaf3 <http_digest_update>
   1ec4f:	4c 89 e6             	mov    %r12,%rsi
   1ec52:	48 89 ef             	mov    %rbp,%rdi
   1ec55:	e8 3a fe ff ff       	call   1ea94 <http_digest_final.constprop.0>
   1ec5a:	4c 39 ab 60 01 00 00 	cmp    %r13,0x160(%rbx)
   1ec61:	75 3c                	jne    1ec9f <http_digest_authenticate+0x16f>
   1ec63:	48 89 ef             	mov    %rbp,%rdi
   1ec66:	e8 82 fe ff ff       	call   1eaed <http_digest_init>
   1ec6b:	4c 89 e6             	mov    %r12,%rsi
   1ec6e:	48 89 ef             	mov    %rbp,%rdi
   1ec71:	e8 7d fe ff ff       	call   1eaf3 <http_digest_update>
   1ec76:	48 8b b3 08 02 00 00 	mov    0x208(%rbx),%rsi
   1ec7d:	48 89 ef             	mov    %rbp,%rdi
   1ec80:	e8 6e fe ff ff       	call   1eaf3 <http_digest_update>
   1ec85:	48 8d b3 68 01 00 00 	lea    0x168(%rbx),%rsi
   1ec8c:	48 89 ef             	mov    %rbp,%rdi
   1ec8f:	e8 5f fe ff ff       	call   1eaf3 <http_digest_update>
   1ec94:	4c 89 e6             	mov    %r12,%rsi
   1ec97:	48 89 ef             	mov    %rbp,%rdi
   1ec9a:	e8 f5 fd ff ff       	call   1ea94 <http_digest_final.constprop.0>
   1ec9f:	48 89 ef             	mov    %rbp,%rdi
   1eca2:	4c 8d 6c 24 2f       	lea    0x2f(%rsp),%r13
   1eca7:	e8 41 fe ff ff       	call   1eaed <http_digest_init>
   1ecac:	48 8b 83 08 01 00 00 	mov    0x108(%rbx),%rax
   1ecb3:	48 89 ef             	mov    %rbp,%rdi
   1ecb6:	48 8b 30             	mov    (%rax),%rsi
   1ecb9:	e8 35 fe ff ff       	call   1eaf3 <http_digest_update>
   1ecbe:	48 8b b3 10 01 00 00 	mov    0x110(%rbx),%rsi
   1ecc5:	48 89 ef             	mov    %rbp,%rdi
   1ecc8:	e8 26 fe ff ff       	call   1eaf3 <http_digest_update>
   1eccd:	4c 89 ee             	mov    %r13,%rsi
   1ecd0:	48 89 ef             	mov    %rbp,%rdi
   1ecd3:	e8 bc fd ff ff       	call   1ea94 <http_digest_final.constprop.0>
   1ecd8:	48 89 ef             	mov    %rbp,%rdi
   1ecdb:	e8 0d fe ff ff       	call   1eaed <http_digest_init>
   1ece0:	4c 89 e6             	mov    %r12,%rsi
   1ece3:	48 89 ef             	mov    %rbp,%rdi
   1ece6:	e8 08 fe ff ff       	call   1eaf3 <http_digest_update>
   1eceb:	48 8b b3 08 02 00 00 	mov    0x208(%rbx),%rsi
   1ecf2:	48 89 ef             	mov    %rbp,%rdi
   1ecf5:	e8 f9 fd ff ff       	call   1eaf3 <http_digest_update>
   1ecfa:	48 83 bb 58 01 00 00 	cmpq   $0x0,0x158(%rbx)
   1ed01:	00 
   1ed02:	74 2d                	je     1ed31 <http_digest_authenticate+0x201>
   1ed04:	48 8d 35 6d 55 00 00 	lea    0x556d(%rip),%rsi        # 24278 <.LC7>
   1ed0b:	48 89 ef             	mov    %rbp,%rdi
   1ed0e:	e8 e0 fd ff ff       	call   1eaf3 <http_digest_update>
   1ed13:	48 8d b3 68 01 00 00 	lea    0x168(%rbx),%rsi
   1ed1a:	48 89 ef             	mov    %rbp,%rdi
   1ed1d:	e8 d1 fd ff ff       	call   1eaf3 <http_digest_update>
   1ed22:	48 8b b3 58 01 00 00 	mov    0x158(%rbx),%rsi
   1ed29:	48 89 ef             	mov    %rbp,%rdi
   1ed2c:	e8 c2 fd ff ff       	call   1eaf3 <http_digest_update>
   1ed31:	4c 89 ee             	mov    %r13,%rsi
   1ed34:	48 89 ef             	mov    %rbp,%rdi
   1ed37:	e8 b7 fd ff ff       	call   1eaf3 <http_digest_update>
   1ed3c:	48 8d b3 71 01 00 00 	lea    0x171(%rbx),%rsi
   1ed43:	48 89 ef             	mov    %rbp,%rdi
   1ed46:	e8 49 fd ff ff       	call   1ea94 <http_digest_final.constprop.0>
   1ed4b:	31 c0                	xor    %eax,%eax
   1ed4d:	48 8b 94 24 a8 00 00 	mov    0xa8(%rsp),%rdx
   1ed54:	00 
   1ed55:	48 2b 15 f4 b2 00 00 	sub    0xb2f4(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1ed5c:	74 05                	je     1ed63 <http_digest_authenticate+0x233>
   1ed5e:	e8 fd 3c fe ff       	call   2a60 <__stack_chk_fail>
   1ed63:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1ed6a:	5b                   	pop    %rbx
   1ed6b:	5d                   	pop    %rbp
   1ed6c:	41 5c                	pop    %r12
   1ed6e:	41 5d                	pop    %r13
   1ed70:	c3                   	ret    

000000000001ed71 <ibft_set_ipaddr>:
   1ed71:	48 89 fa             	mov    %rdi,%rdx
   1ed74:	31 c0                	xor    %eax,%eax
   1ed76:	ab                   	stos   %eax,%es:(%rdi)
   1ed77:	ab                   	stos   %eax,%es:(%rdi)
   1ed78:	ab                   	stos   %eax,%es:(%rdi)
   1ed79:	ab                   	stos   %eax,%es:(%rdi)
   1ed7a:	85 f6                	test   %esi,%esi
   1ed7c:	74 09                	je     1ed87 <ibft_set_ipaddr+0x16>
   1ed7e:	89 72 0c             	mov    %esi,0xc(%rdx)
   1ed81:	66 c7 42 0a ff ff    	movw   $0xffff,0xa(%rdx)
   1ed87:	c3                   	ret    

000000000001ed88 <ibft_alloc_string>:
   1ed88:	41 56                	push   %r14
   1ed8a:	41 55                	push   %r13
   1ed8c:	49 89 d5             	mov    %rdx,%r13
   1ed8f:	41 54                	push   %r12
   1ed91:	49 89 f4             	mov    %rsi,%r12
   1ed94:	55                   	push   %rbp
   1ed95:	48 8d 6a 01          	lea    0x1(%rdx),%rbp
   1ed99:	53                   	push   %rbx
   1ed9a:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   1ed9e:	48 89 fb             	mov    %rdi,%rbx
   1eda1:	48 8b 3f             	mov    (%rdi),%rdi
   1eda4:	49 01 ee             	add    %rbp,%r14
   1eda7:	4c 89 f6             	mov    %r14,%rsi
   1edaa:	e8 6b d8 fe ff       	call   c61a <realloc>
   1edaf:	49 89 c0             	mov    %rax,%r8
   1edb2:	48 85 c0             	test   %rax,%rax
   1edb5:	74 28                	je     1eddf <ibft_alloc_string+0x57>
   1edb7:	48 89 03             	mov    %rax,(%rbx)
   1edba:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1edbe:	48 89 e9             	mov    %rbp,%rcx
   1edc1:	49 01 c0             	add    %rax,%r8
   1edc4:	89 c2                	mov    %eax,%edx
   1edc6:	03 53 08             	add    0x8(%rbx),%edx
   1edc9:	31 c0                	xor    %eax,%eax
   1edcb:	66 41 89 54 24 02    	mov    %dx,0x2(%r12)
   1edd1:	4c 89 c7             	mov    %r8,%rdi
   1edd4:	66 45 89 2c 24       	mov    %r13w,(%r12)
   1edd9:	f3 aa                	rep stos %al,%es:(%rdi)
   1eddb:	4c 89 73 10          	mov    %r14,0x10(%rbx)
   1eddf:	5b                   	pop    %rbx
   1ede0:	4c 89 c0             	mov    %r8,%rax
   1ede3:	5d                   	pop    %rbp
   1ede4:	41 5c                	pop    %r12
   1ede6:	41 5d                	pop    %r13
   1ede8:	41 5e                	pop    %r14
   1edea:	c3                   	ret    

000000000001edeb <ibft_netdev_is_required>:
   1edeb:	48 8b 05 8e 96 00 00 	mov    0x968e(%rip),%rax        # 28480 <ibft_model>
   1edf2:	41 54                	push   %r12
   1edf4:	4c 8d 25 85 96 00 00 	lea    0x9685(%rip),%r12        # 28480 <ibft_model>
   1edfb:	55                   	push   %rbp
   1edfc:	48 89 fd             	mov    %rdi,%rbp
   1edff:	53                   	push   %rbx
   1ee00:	48 8d 98 10 fe ff ff 	lea    -0x1f0(%rax),%rbx
   1ee07:	48 8d 83 f0 01 00 00 	lea    0x1f0(%rbx),%rax
   1ee0e:	4c 39 e0             	cmp    %r12,%rax
   1ee11:	74 21                	je     1ee34 <ibft_netdev_is_required+0x49>
   1ee13:	48 8d bb b8 01 00 00 	lea    0x1b8(%rbx),%rdi
   1ee1a:	e8 4f 61 ff ff       	call   14f6e <tcpip_netdev>
   1ee1f:	48 39 c5             	cmp    %rax,%rbp
   1ee22:	74 14                	je     1ee38 <ibft_netdev_is_required+0x4d>
   1ee24:	48 8b 9b f0 01 00 00 	mov    0x1f0(%rbx),%rbx
   1ee2b:	48 81 eb f0 01 00 00 	sub    $0x1f0,%rbx
   1ee32:	eb d3                	jmp    1ee07 <ibft_netdev_is_required+0x1c>
   1ee34:	31 c0                	xor    %eax,%eax
   1ee36:	eb 05                	jmp    1ee3d <ibft_netdev_is_required+0x52>
   1ee38:	b8 01 00 00 00       	mov    $0x1,%eax
   1ee3d:	5b                   	pop    %rbx
   1ee3e:	5d                   	pop    %rbp
   1ee3f:	41 5c                	pop    %r12
   1ee41:	c3                   	ret    

000000000001ee42 <ibft_set_ipaddr_setting>:
   1ee42:	55                   	push   %rbp
   1ee43:	48 89 e5             	mov    %rsp,%rbp
   1ee46:	41 55                	push   %r13
   1ee48:	41 54                	push   %r12
   1ee4a:	41 89 cc             	mov    %ecx,%r12d
   1ee4d:	53                   	push   %rbx
   1ee4e:	48 89 f3             	mov    %rsi,%rbx
   1ee51:	48 89 d6             	mov    %rdx,%rsi
   1ee54:	48 83 ec 18          	sub    $0x18,%rsp
   1ee58:	48 8b 05 f1 b1 00 00 	mov    0xb1f1(%rip),%rax        # 2a050 <__stack_chk_guard>
   1ee5f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1ee63:	31 c0                	xor    %eax,%eax
   1ee65:	89 c8                	mov    %ecx,%eax
   1ee67:	48 89 e2             	mov    %rsp,%rdx
   1ee6a:	48 8d 04 85 0f 00 00 	lea    0xf(,%rax,4),%rax
   1ee71:	00 
   1ee72:	48 c1 e8 04          	shr    $0x4,%rax
   1ee76:	48 c1 e0 04          	shl    $0x4,%rax
   1ee7a:	48 89 c1             	mov    %rax,%rcx
   1ee7d:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
   1ee84:	48 29 ca             	sub    %rcx,%rdx
   1ee87:	48 39 d4             	cmp    %rdx,%rsp
   1ee8a:	74 12                	je     1ee9e <ibft_set_ipaddr_setting+0x5c>
   1ee8c:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1ee93:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1ee9a:	00 00 
   1ee9c:	eb e9                	jmp    1ee87 <ibft_set_ipaddr_setting+0x45>
   1ee9e:	25 ff 0f 00 00       	and    $0xfff,%eax
   1eea3:	48 29 c4             	sub    %rax,%rsp
   1eea6:	48 85 c0             	test   %rax,%rax
   1eea9:	74 06                	je     1eeb1 <ibft_set_ipaddr_setting+0x6f>
   1eeab:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1eeb1:	48 8d 54 24 03       	lea    0x3(%rsp),%rdx
   1eeb6:	44 89 e1             	mov    %r12d,%ecx
   1eeb9:	49 89 d5             	mov    %rdx,%r13
   1eebc:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
   1eec0:	e8 53 30 ff ff       	call   11f18 <fetch_ipv4_array_setting>
   1eec5:	49 c1 ed 02          	shr    $0x2,%r13
   1eec9:	48 89 df             	mov    %rbx,%rdi
   1eecc:	42 8b 34 ad 00 00 00 	mov    0x0(,%r13,4),%esi
   1eed3:	00 
   1eed4:	e8 98 fe ff ff       	call   1ed71 <ibft_set_ipaddr>
   1eed9:	41 83 fc 02          	cmp    $0x2,%r12d
   1eedd:	75 11                	jne    1eef0 <ibft_set_ipaddr_setting+0xae>
   1eedf:	42 8b 34 ad 04 00 00 	mov    0x4(,%r13,4),%esi
   1eee6:	00 
   1eee7:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1eeeb:	e8 81 fe ff ff       	call   1ed71 <ibft_set_ipaddr>
   1eef0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1eef4:	48 2b 05 55 b1 00 00 	sub    0xb155(%rip),%rax        # 2a050 <__stack_chk_guard>
   1eefb:	74 05                	je     1ef02 <ibft_set_ipaddr_setting+0xc0>
   1eefd:	e8 5e 3b fe ff       	call   2a60 <__stack_chk_fail>
   1ef02:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
   1ef06:	5b                   	pop    %rbx
   1ef07:	41 5c                	pop    %r12
   1ef09:	41 5d                	pop    %r13
   1ef0b:	5d                   	pop    %rbp
   1ef0c:	c3                   	ret    

000000000001ef0d <ibft_complete>:
   1ef0d:	f3 0f 1e fa          	endbr64 
   1ef11:	31 c0                	xor    %eax,%eax
   1ef13:	66 83 7f d8 00       	cmpw   $0x0,-0x28(%rdi)
   1ef18:	75 05                	jne    1ef1f <ibft_complete+0x12>
   1ef1a:	b8 7a 1f f3 f9       	mov    $0xf9f31f7a,%eax
   1ef1f:	c3                   	ret    

000000000001ef20 <ibft_set_string>:
   1ef20:	41 54                	push   %r12
   1ef22:	31 c0                	xor    %eax,%eax
   1ef24:	55                   	push   %rbp
   1ef25:	48 83 ec 18          	sub    $0x18,%rsp
   1ef29:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1ef2e:	48 85 d2             	test   %rdx,%rdx
   1ef31:	74 37                	je     1ef6a <ibft_set_string+0x4a>
   1ef33:	49 89 fc             	mov    %rdi,%r12
   1ef36:	48 89 d7             	mov    %rdx,%rdi
   1ef39:	48 89 d5             	mov    %rdx,%rbp
   1ef3c:	e8 d5 4a ff ff       	call   13a16 <strlen>
   1ef41:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1ef46:	4c 89 e7             	mov    %r12,%rdi
   1ef49:	48 89 c2             	mov    %rax,%rdx
   1ef4c:	e8 37 fe ff ff       	call   1ed88 <ibft_alloc_string>
   1ef51:	48 89 c7             	mov    %rax,%rdi
   1ef54:	48 85 c0             	test   %rax,%rax
   1ef57:	75 07                	jne    1ef60 <ibft_set_string+0x40>
   1ef59:	b8 77 1f f3 d5       	mov    $0xd5f31f77,%eax
   1ef5e:	eb 0a                	jmp    1ef6a <ibft_set_string+0x4a>
   1ef60:	48 89 ee             	mov    %rbp,%rsi
   1ef63:	e8 2e 4b ff ff       	call   13a96 <strcpy>
   1ef68:	31 c0                	xor    %eax,%eax
   1ef6a:	48 83 c4 18          	add    $0x18,%rsp
   1ef6e:	5d                   	pop    %rbp
   1ef6f:	41 5c                	pop    %r12
   1ef71:	c3                   	ret    

000000000001ef72 <ibft_install>:
   1ef72:	f3 0f 1e fa          	endbr64 
   1ef76:	41 57                	push   %r15
   1ef78:	31 d2                	xor    %edx,%edx
   1ef7a:	41 56                	push   %r14
   1ef7c:	41 55                	push   %r13
   1ef7e:	4c 8d 2d fb 94 00 00 	lea    0x94fb(%rip),%r13        # 28480 <ibft_model>
   1ef85:	41 54                	push   %r12
   1ef87:	55                   	push   %rbp
   1ef88:	53                   	push   %rbx
   1ef89:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1ef90:	48 8b 05 b9 b0 00 00 	mov    0xb0b9(%rip),%rax        # 2a050 <__stack_chk_guard>
   1ef97:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1ef9e:	00 
   1ef9f:	48 8b 05 da 94 00 00 	mov    0x94da(%rip),%rax        # 28480 <ibft_model>
   1efa6:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   1efab:	48 2d f0 01 00 00    	sub    $0x1f0,%rax
   1efb1:	48 8d 88 f0 01 00 00 	lea    0x1f0(%rax),%rcx
   1efb8:	4c 39 e9             	cmp    %r13,%rcx
   1efbb:	74 11                	je     1efce <ibft_install+0x5c>
   1efbd:	48 8b 80 f0 01 00 00 	mov    0x1f0(%rax),%rax
   1efc4:	ff c2                	inc    %edx
   1efc6:	48 2d f0 01 00 00    	sub    $0x1f0,%rax
   1efcc:	eb e3                	jmp    1efb1 <ibft_install+0x3f>
   1efce:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   1efd5:	00 00 
   1efd7:	b8 02 00 00 00       	mov    $0x2,%eax
   1efdc:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   1efe3:	00 00 
   1efe5:	39 c2                	cmp    %eax,%edx
   1efe7:	48 0f 43 c2          	cmovae %rdx,%rax
   1efeb:	45 31 e4             	xor    %r12d,%r12d
   1efee:	4c 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%r14
   1eff5:	00 
   1eff6:	49 8d 5e 49          	lea    0x49(%r14),%rbx
   1effa:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   1effe:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
   1f002:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1f007:	48 6b c8 70          	imul   $0x70,%rax,%rcx
   1f00b:	48 c1 e0 06          	shl    $0x6,%rax
   1f00f:	48 03 4c 24 10       	add    0x10(%rsp),%rcx
   1f014:	48 01 c8             	add    %rcx,%rax
   1f017:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1f01c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1f021:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1f026:	85 d2                	test   %edx,%edx
   1f028:	0f 84 93 04 00 00    	je     1f4c1 <ibft_install+0x54f>
   1f02e:	48 89 c7             	mov    %rax,%rdi
   1f031:	e8 00 d7 fe ff       	call   c736 <zalloc>
   1f036:	48 89 c5             	mov    %rax,%rbp
   1f039:	48 85 c0             	test   %rax,%rax
   1f03c:	75 0b                	jne    1f049 <ibft_install+0xd7>
   1f03e:	41 bc 77 1f f3 ce    	mov    $0xcef31f77,%r12d
   1f044:	e9 78 04 00 00       	jmp    1f4c1 <ibft_install+0x54f>
   1f049:	49 83 c6 0a          	add    $0xa,%r14
   1f04d:	66 c7 40 30 01 01    	movw   $0x101,0x30(%rax)
   1f053:	66 44 89 70 32       	mov    %r14w,0x32(%rax)
   1f058:	66 89 58 38          	mov    %bx,0x38(%rax)
   1f05c:	49 8b 45 00          	mov    0x0(%r13),%rax
   1f060:	4c 39 e8             	cmp    %r13,%rax
   1f063:	0f 84 78 04 00 00    	je     1f4e1 <ibft_install+0x56f>
   1f069:	48 01 eb             	add    %rbp,%rbx
   1f06c:	48 8b 90 80 fe ff ff 	mov    -0x180(%rax),%rdx
   1f073:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1f078:	c7 03 02 01 4a 00    	movl   $0x4a0102,(%rbx)
   1f07e:	48 8d 73 46          	lea    0x46(%rbx),%rsi
   1f082:	c6 43 05 03          	movb   $0x3,0x5(%rbx)
   1f086:	e8 95 fe ff ff       	call   1ef20 <ibft_set_string>
   1f08b:	41 89 c4             	mov    %eax,%r12d
   1f08e:	85 c0                	test   %eax,%eax
   1f090:	0f 85 23 04 00 00    	jne    1f4b9 <ibft_install+0x547>
   1f096:	48 8b 05 63 79 00 00 	mov    0x7963(%rip),%rax        # 26a00 <net_devices>
   1f09d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
   1f0a4:	00 
   1f0a5:	4c 8d 68 f0          	lea    -0x10(%rax),%r13
   1f0a9:	49 8d 45 10          	lea    0x10(%r13),%rax
   1f0ad:	48 8d 0d 4c 79 00 00 	lea    0x794c(%rip),%rcx        # 26a00 <net_devices>
   1f0b4:	48 39 c8             	cmp    %rcx,%rax
   1f0b7:	0f 84 ca 01 00 00    	je     1f287 <ibft_install+0x315>
   1f0bd:	4c 89 ef             	mov    %r13,%rdi
   1f0c0:	e8 26 fd ff ff       	call   1edeb <ibft_netdev_is_required>
   1f0c5:	85 c0                	test   %eax,%eax
   1f0c7:	0f 84 ad 01 00 00    	je     1f27a <ibft_install+0x308>
   1f0cd:	8b 44 24 18          	mov    0x18(%rsp),%eax
   1f0d1:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   1f0d5:	45 31 c9             	xor    %r9d,%r9d
   1f0d8:	45 31 c0             	xor    %r8d,%r8d
   1f0db:	4d 8d b5 68 01 00 00 	lea    0x168(%r13),%r14
   1f0e2:	4c 8d 3d 27 a3 00 00 	lea    0xa327(%rip),%r15        # 29410 <ip_setting>
   1f0e9:	31 c9                	xor    %ecx,%ecx
   1f0eb:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   1f0f2:	00 
   1f0f3:	66 89 5c 85 3a       	mov    %bx,0x3a(%rbp,%rax,4)
   1f0f8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1f0fd:	4c 89 fe             	mov    %r15,%rsi
   1f100:	4c 89 f7             	mov    %r14,%rdi
   1f103:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
   1f108:	48 8d 5c 05 00       	lea    0x0(%rbp,%rax,1),%rbx
   1f10d:	8a 44 24 18          	mov    0x18(%rsp),%al
   1f111:	88 43 04             	mov    %al,0x4(%rbx)
   1f114:	49 8b 45 50          	mov    0x50(%r13),%rax
   1f118:	c7 03 03 01 66 00    	movl   $0x660103,(%rbx)
   1f11e:	c6 43 05 03          	movb   $0x3,0x5(%rbx)
   1f122:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1f127:	e8 1d 2b ff ff       	call   11c49 <fetch_setting>
   1f12c:	4c 3b 74 24 48       	cmp    0x48(%rsp),%r14
   1f131:	4c 89 fa             	mov    %r15,%rdx
   1f134:	4c 89 f7             	mov    %r14,%rdi
   1f137:	0f 95 c0             	setne  %al
   1f13a:	48 8d 73 06          	lea    0x6(%rbx),%rsi
   1f13e:	b9 01 00 00 00       	mov    $0x1,%ecx
   1f143:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
   1f147:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
   1f14c:	88 43 17             	mov    %al,0x17(%rbx)
   1f14f:	e8 ee fc ff ff       	call   1ee42 <ibft_set_ipaddr_setting>
   1f154:	48 8d 73 18          	lea    0x18(%rbx),%rsi
   1f158:	b9 01 00 00 00       	mov    $0x1,%ecx
   1f15d:	4c 89 f7             	mov    %r14,%rdi
   1f160:	48 8d 15 81 a2 00 00 	lea    0xa281(%rip),%rdx        # 293e8 <gateway_setting>
   1f167:	e8 d6 fc ff ff       	call   1ee42 <ibft_set_ipaddr_setting>
   1f16c:	31 ff                	xor    %edi,%edi
   1f16e:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   1f172:	b9 02 00 00 00       	mov    $0x2,%ecx
   1f177:	48 8d 15 e2 a2 00 00 	lea    0xa2e2(%rip),%rdx        # 29460 <dns_setting>
   1f17e:	e8 bf fc ff ff       	call   1ee42 <ibft_set_ipaddr_setting>
   1f183:	48 8d 73 48          	lea    0x48(%rbx),%rsi
   1f187:	b9 01 00 00 00       	mov    $0x1,%ecx
   1f18c:	4c 89 f7             	mov    %r14,%rdi
   1f18f:	48 8d 15 02 a7 00 00 	lea    0xa702(%rip),%rdx        # 29898 <dhcp_server_setting>
   1f196:	e8 a7 fc ff ff       	call   1ee42 <ibft_set_ipaddr_setting>
   1f19b:	45 31 c9             	xor    %r9d,%r9d
   1f19e:	45 31 c0             	xor    %r8d,%r8d
   1f1a1:	31 ff                	xor    %edi,%edi
   1f1a3:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1f1a8:	4c 89 f9             	mov    %r15,%rcx
   1f1ab:	48 8d 35 b6 a4 00 00 	lea    0xa4b6(%rip),%rsi        # 29668 <hostname_setting>
   1f1b2:	e8 92 2a ff ff       	call   11c49 <fetch_setting>
   1f1b7:	85 c0                	test   %eax,%eax
   1f1b9:	79 09                	jns    1f1c4 <ibft_install+0x252>
   1f1bb:	c7 43 62 00 00 00 00 	movl   $0x0,0x62(%rbx)
   1f1c2:	eb 3d                	jmp    1f201 <ibft_install+0x28f>
   1f1c4:	48 63 d0             	movslq %eax,%rdx
   1f1c7:	48 8d 73 62          	lea    0x62(%rbx),%rsi
   1f1cb:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1f1d0:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   1f1d4:	e8 af fb ff ff       	call   1ed88 <ibft_alloc_string>
   1f1d9:	8b 4c 24 3c          	mov    0x3c(%rsp),%ecx
   1f1dd:	48 85 c0             	test   %rax,%rax
   1f1e0:	48 89 c2             	mov    %rax,%rdx
   1f1e3:	75 0a                	jne    1f1ef <ibft_install+0x27d>
   1f1e5:	b8 77 1f f3 d5       	mov    $0xd5f31f77,%eax
   1f1ea:	e9 c7 02 00 00       	jmp    1f4b6 <ibft_install+0x544>
   1f1ef:	ff c1                	inc    %ecx
   1f1f1:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1f1f6:	4c 89 fe             	mov    %r15,%rsi
   1f1f9:	48 63 c9             	movslq %ecx,%rcx
   1f1fc:	e8 f3 2c ff ff       	call   11ef4 <fetch_string_setting>
   1f201:	48 8d 54 24 44       	lea    0x44(%rsp),%rdx
   1f206:	48 8d 35 2b a2 00 00 	lea    0xa22b(%rip),%rsi        # 29438 <netmask_setting>
   1f20d:	4c 89 f7             	mov    %r14,%rdi
   1f210:	e8 23 2d ff ff       	call   11f38 <fetch_ipv4_setting>
   1f215:	8b 44 24 44          	mov    0x44(%rsp),%eax
   1f219:	31 c9                	xor    %ecx,%ecx
   1f21b:	31 d2                	xor    %edx,%edx
   1f21d:	85 c0                	test   %eax,%eax
   1f21f:	74 11                	je     1f232 <ibft_install+0x2c0>
   1f221:	89 c1                	mov    %eax,%ecx
   1f223:	83 e1 01             	and    $0x1,%ecx
   1f226:	83 f9 01             	cmp    $0x1,%ecx
   1f229:	b1 01                	mov    $0x1,%cl
   1f22b:	83 da ff             	sbb    $0xffffffff,%edx
   1f22e:	d1 e8                	shr    %eax
   1f230:	eb eb                	jmp    1f21d <ibft_install+0x2ab>
   1f232:	84 c9                	test   %cl,%cl
   1f234:	74 08                	je     1f23e <ibft_install+0x2cc>
   1f236:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   1f23d:	00 
   1f23e:	88 53 16             	mov    %dl,0x16(%rbx)
   1f241:	4c 89 ef             	mov    %r13,%rdi
   1f244:	e8 1d f2 fe ff       	call   e466 <vlan_tag>
   1f249:	48 8d 73 5a          	lea    0x5a(%rbx),%rsi
   1f24d:	49 8d 7d 60          	lea    0x60(%r13),%rdi
   1f251:	66 89 43 58          	mov    %ax,0x58(%rbx)
   1f255:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1f25a:	ff 50 30             	call   *0x30(%rax)
   1f25d:	85 c0                	test   %eax,%eax
   1f25f:	0f 85 51 02 00 00    	jne    1f4b6 <ibft_install+0x544>
   1f265:	49 8b 45 40          	mov    0x40(%r13),%rax
   1f269:	ff 44 24 18          	incl   0x18(%rsp)
   1f26d:	48 83 44 24 10 70    	addq   $0x70,0x10(%rsp)
   1f273:	8b 40 34             	mov    0x34(%rax),%eax
   1f276:	66 89 43 60          	mov    %ax,0x60(%rbx)
   1f27a:	4d 8b 6d 10          	mov    0x10(%r13),%r13
   1f27e:	49 83 ed 10          	sub    $0x10,%r13
   1f282:	e9 22 fe ff ff       	jmp    1f0a9 <ibft_install+0x137>
   1f287:	48 8b 05 f2 91 00 00 	mov    0x91f2(%rip),%rax        # 28480 <ibft_model>
   1f28e:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   1f293:	31 db                	xor    %ebx,%ebx
   1f295:	4c 8d b0 10 fe ff ff 	lea    -0x1f0(%rax),%r14
   1f29c:	49 01 ef             	add    %rbp,%r15
   1f29f:	49 8d 86 f0 01 00 00 	lea    0x1f0(%r14),%rax
   1f2a6:	48 8d 0d d3 91 00 00 	lea    0x91d3(%rip),%rcx        # 28480 <ibft_model>
   1f2ad:	48 39 c8             	cmp    %rcx,%rax
   1f2b0:	0f 84 a6 01 00 00    	je     1f45c <ibft_install+0x4ea>
   1f2b6:	44 89 fa             	mov    %r15d,%edx
   1f2b9:	49 8d 7f 06          	lea    0x6(%r15),%rdi
   1f2bd:	4d 8d 86 b8 01 00 00 	lea    0x1b8(%r14),%r8
   1f2c4:	89 d8                	mov    %ebx,%eax
   1f2c6:	29 ea                	sub    %ebp,%edx
   1f2c8:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   1f2cd:	4c 8d 6c 24 58       	lea    0x58(%rsp),%r13
   1f2d2:	66 89 54 85 3c       	mov    %dx,0x3c(%rbp,%rax,4)
   1f2d7:	41 88 5f 04          	mov    %bl,0x4(%r15)
   1f2db:	41 c6 07 04          	movb   $0x4,(%r15)
   1f2df:	41 c6 47 01 01       	movb   $0x1,0x1(%r15)
   1f2e4:	66 41 c7 47 02 36 00 	movw   $0x36,0x2(%r15)
   1f2eb:	41 c6 47 05 03       	movb   $0x3,0x5(%r15)
   1f2f0:	41 8b b6 c0 01 00 00 	mov    0x1c0(%r14),%esi
   1f2f7:	e8 75 fa ff ff       	call   1ed71 <ibft_set_ipaddr>
   1f2fc:	66 41 8b 86 bc 01 00 	mov    0x1bc(%r14),%ax
   1f303:	00 
   1f304:	49 8d 77 22          	lea    0x22(%r15),%rsi
   1f308:	4c 89 ef             	mov    %r13,%rdi
   1f30b:	86 c4                	xchg   %al,%ah
   1f30d:	66 41 89 47 16       	mov    %ax,0x16(%r15)
   1f312:	41 8b 86 d8 01 00 00 	mov    0x1d8(%r14),%eax
   1f319:	41 89 47 18          	mov    %eax,0x18(%r15)
   1f31d:	41 8b 86 dc 01 00 00 	mov    0x1dc(%r14),%eax
   1f324:	41 89 47 1c          	mov    %eax,0x1c(%r15)
   1f328:	49 8b 96 88 00 00 00 	mov    0x88(%r14),%rdx
   1f32f:	e8 ec fb ff ff       	call   1ef20 <ibft_set_string>
   1f334:	85 c0                	test   %eax,%eax
   1f336:	0f 85 7a 01 00 00    	jne    1f4b6 <ibft_install+0x544>
   1f33c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1f341:	e8 28 5c ff ff       	call   14f6e <tcpip_netdev>
   1f346:	48 89 c6             	mov    %rax,%rsi
   1f349:	48 85 c0             	test   %rax,%rax
   1f34c:	75 0b                	jne    1f359 <ibft_install+0x3e7>
   1f34e:	41 bc 70 1f f3 e8    	mov    $0xe8f31f70,%r12d
   1f354:	e9 60 01 00 00       	jmp    1f4b9 <ibft_install+0x547>
   1f359:	48 8d 05 a0 76 00 00 	lea    0x76a0(%rip),%rax        # 26a00 <net_devices>
   1f360:	48 8b 00             	mov    (%rax),%rax
   1f363:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f368:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
   1f36c:	48 8d 42 10          	lea    0x10(%rdx),%rax
   1f370:	48 8d 0d 89 76 00 00 	lea    0x7689(%rip),%rcx        # 26a00 <net_devices>
   1f377:	48 39 c8             	cmp    %rcx,%rax
   1f37a:	74 33                	je     1f3af <ibft_install+0x43d>
   1f37c:	48 39 d6             	cmp    %rdx,%rsi
   1f37f:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1f384:	74 34                	je     1f3ba <ibft_install+0x448>
   1f386:	48 89 d7             	mov    %rdx,%rdi
   1f389:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1f38e:	e8 58 fa ff ff       	call   1edeb <ibft_netdev_is_required>
   1f393:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1f398:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1f39d:	85 c0                	test   %eax,%eax
   1f39f:	74 04                	je     1f3a5 <ibft_install+0x433>
   1f3a1:	41 fe 47 21          	incb   0x21(%r15)
   1f3a5:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1f3a9:	48 83 ea 10          	sub    $0x10,%rdx
   1f3ad:	eb bd                	jmp    1f36c <ibft_install+0x3fa>
   1f3af:	41 bc 7e 1f f3 e3    	mov    $0xe3f31f7e,%r12d
   1f3b5:	e9 ff 00 00 00       	jmp    1f4b9 <ibft_install+0x547>
   1f3ba:	41 f6 86 92 00 00 00 	testb  $0x1,0x92(%r14)
   1f3c1:	01 
   1f3c2:	75 0c                	jne    1f3d0 <ibft_install+0x45e>
   1f3c4:	41 f6 86 92 00 00 00 	testb  $0x2,0x92(%r14)
   1f3cb:	02 
   1f3cc:	74 75                	je     1f443 <ibft_install+0x4d1>
   1f3ce:	eb 3c                	jmp    1f40c <ibft_install+0x49a>
   1f3d0:	41 c6 47 20 01       	movb   $0x1,0x20(%r15)
   1f3d5:	49 8b 96 98 00 00 00 	mov    0x98(%r14),%rdx
   1f3dc:	49 8d 77 26          	lea    0x26(%r15),%rsi
   1f3e0:	4c 89 ef             	mov    %r13,%rdi
   1f3e3:	e8 38 fb ff ff       	call   1ef20 <ibft_set_string>
   1f3e8:	85 c0                	test   %eax,%eax
   1f3ea:	0f 85 c6 00 00 00    	jne    1f4b6 <ibft_install+0x544>
   1f3f0:	49 8b 96 a0 00 00 00 	mov    0xa0(%r14),%rdx
   1f3f7:	49 8d 77 2a          	lea    0x2a(%r15),%rsi
   1f3fb:	4c 89 ef             	mov    %r13,%rdi
   1f3fe:	e8 1d fb ff ff       	call   1ef20 <ibft_set_string>
   1f403:	85 c0                	test   %eax,%eax
   1f405:	74 bd                	je     1f3c4 <ibft_install+0x452>
   1f407:	e9 aa 00 00 00       	jmp    1f4b6 <ibft_install+0x544>
   1f40c:	41 c6 47 20 02       	movb   $0x2,0x20(%r15)
   1f411:	49 8b 96 a8 00 00 00 	mov    0xa8(%r14),%rdx
   1f418:	49 8d 77 2e          	lea    0x2e(%r15),%rsi
   1f41c:	4c 89 ef             	mov    %r13,%rdi
   1f41f:	e8 fc fa ff ff       	call   1ef20 <ibft_set_string>
   1f424:	85 c0                	test   %eax,%eax
   1f426:	0f 85 8a 00 00 00    	jne    1f4b6 <ibft_install+0x544>
   1f42c:	49 8b 96 b0 00 00 00 	mov    0xb0(%r14),%rdx
   1f433:	49 8d 77 32          	lea    0x32(%r15),%rsi
   1f437:	4c 89 ef             	mov    %r13,%rdi
   1f43a:	e8 e1 fa ff ff       	call   1ef20 <ibft_set_string>
   1f43f:	85 c0                	test   %eax,%eax
   1f441:	75 73                	jne    1f4b6 <ibft_install+0x544>
   1f443:	49 8b 8e f0 01 00 00 	mov    0x1f0(%r14),%rcx
   1f44a:	ff c3                	inc    %ebx
   1f44c:	49 83 c7 40          	add    $0x40,%r15
   1f450:	4c 8d b1 10 fe ff ff 	lea    -0x1f0(%rcx),%r14
   1f457:	e9 43 fe ff ff       	jmp    1f29f <ibft_install+0x32d>
   1f45c:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1f461:	48 03 5c 24 68       	add    0x68(%rsp),%rbx
   1f466:	48 89 ef             	mov    %rbp,%rdi
   1f469:	48 89 de             	mov    %rbx,%rsi
   1f46c:	e8 a9 d1 fe ff       	call   c61a <realloc>
   1f471:	49 89 c5             	mov    %rax,%r13
   1f474:	48 85 c0             	test   %rax,%rax
   1f477:	74 40                	je     1f4b9 <ibft_install+0x547>
   1f479:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1f47e:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   1f483:	c6 40 08 01          	movb   $0x1,0x8(%rax)
   1f487:	31 ed                	xor    %ebp,%ebp
   1f489:	c7 00 69 42 46 54    	movl   $0x54464269,(%rax)
   1f48f:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   1f494:	89 58 04             	mov    %ebx,0x4(%rax)
   1f497:	48 01 c7             	add    %rax,%rdi
   1f49a:	e8 4a 7f ff ff       	call   173e9 <__memcpy>
   1f49f:	4c 89 ef             	mov    %r13,%rdi
   1f4a2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1f4a7:	ff d0                	call   *%rax
   1f4a9:	4c 89 ef             	mov    %r13,%rdi
   1f4ac:	41 89 c4             	mov    %eax,%r12d
   1f4af:	e8 6e d2 fe ff       	call   c722 <free>
   1f4b4:	eb 03                	jmp    1f4b9 <ibft_install+0x547>
   1f4b6:	41 89 c4             	mov    %eax,%r12d
   1f4b9:	48 89 ef             	mov    %rbp,%rdi
   1f4bc:	e8 61 d2 fe ff       	call   c722 <free>
   1f4c1:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1f4c6:	e8 57 d2 fe ff       	call   c722 <free>
   1f4cb:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   1f4d2:	00 
   1f4d3:	48 2b 05 76 ab 00 00 	sub    0xab76(%rip),%rax        # 2a050 <__stack_chk_guard>
   1f4da:	74 0f                	je     1f4eb <ibft_install+0x579>
   1f4dc:	e8 7f 35 fe ff       	call   2a60 <__stack_chk_fail>
   1f4e1:	48 8b 04 25 70 00 00 	mov    0x70,%rax
   1f4e8:	00 
   1f4e9:	0f 0b                	ud2    
   1f4eb:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1f4f2:	44 89 e0             	mov    %r12d,%eax
   1f4f5:	5b                   	pop    %rbx
   1f4f6:	5d                   	pop    %rbp
   1f4f7:	41 5c                	pop    %r12
   1f4f9:	41 5d                	pop    %r13
   1f4fb:	41 5e                	pop    %r14
   1f4fd:	41 5f                	pop    %r15
   1f4ff:	c3                   	ret    

000000000001f500 <icmpv4_rx>:
   1f500:	f3 0f 1e fa          	endbr64 
   1f504:	41 54                	push   %r12
   1f506:	55                   	push   %rbp
   1f507:	48 89 fd             	mov    %rdi,%rbp
   1f50a:	53                   	push   %rbx
   1f50b:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   1f50f:	48 8b 77 20          	mov    0x20(%rdi),%rsi
   1f513:	48 29 de             	sub    %rbx,%rsi
   1f516:	48 83 fe 03          	cmp    $0x3,%rsi
   1f51a:	77 02                	ja     1f51e <icmpv4_rx+0x1e>
   1f51c:	eb 10                	jmp    1f52e <icmpv4_rx+0x2e>
   1f51e:	48 89 df             	mov    %rbx,%rdi
   1f521:	49 89 d4             	mov    %rdx,%r12
   1f524:	e8 9c 5a ff ff       	call   14fc5 <tcpip_chksum>
   1f529:	66 85 c0             	test   %ax,%ax
   1f52c:	74 08                	je     1f536 <icmpv4_rx+0x36>
   1f52e:	41 bc 7e 9f e6 e3    	mov    $0xe3e69f7e,%r12d
   1f534:	eb 32                	jmp    1f568 <icmpv4_rx+0x68>
   1f536:	8a 03                	mov    (%rbx),%al
   1f538:	84 c0                	test   %al,%al
   1f53a:	74 1a                	je     1f556 <icmpv4_rx+0x56>
   1f53c:	3c 08                	cmp    $0x8,%al
   1f53e:	75 25                	jne    1f565 <icmpv4_rx+0x65>
   1f540:	5b                   	pop    %rbx
   1f541:	4c 89 e6             	mov    %r12,%rsi
   1f544:	48 8d 15 f5 96 00 00 	lea    0x96f5(%rip),%rdx        # 28c40 <icmpv4_echo_protocol>
   1f54b:	48 89 ef             	mov    %rbp,%rdi
   1f54e:	5d                   	pop    %rbp
   1f54f:	41 5c                	pop    %r12
   1f551:	e9 bf 1d 00 00       	jmp    21315 <icmp_rx_echo_request>
   1f556:	5b                   	pop    %rbx
   1f557:	4c 89 e6             	mov    %r12,%rsi
   1f55a:	48 89 ef             	mov    %rbp,%rdi
   1f55d:	5d                   	pop    %rbp
   1f55e:	41 5c                	pop    %r12
   1f560:	e9 ea 1d 00 00       	jmp    2134f <icmp_rx_echo_reply>
   1f565:	45 31 e4             	xor    %r12d,%r12d
   1f568:	48 89 ef             	mov    %rbp,%rdi
   1f56b:	e8 f6 a7 fe ff       	call   9d66 <free_iob>
   1f570:	44 89 e0             	mov    %r12d,%eax
   1f573:	5b                   	pop    %rbx
   1f574:	5d                   	pop    %rbp
   1f575:	41 5c                	pop    %r12
   1f577:	c3                   	ret    

000000000001f578 <ifpoller_progress>:
   1f578:	f3 0f 1e fa          	endbr64 
   1f57c:	ff 67 30             	jmp    *0x30(%rdi)

000000000001f57f <ifstat_errors>:
   1f57f:	41 56                	push   %r14
   1f581:	41 55                	push   %r13
   1f583:	4c 8d 2d 41 4d 00 00 	lea    0x4d41(%rip),%r13        # 242cb <.LC0>
   1f58a:	41 54                	push   %r12
   1f58c:	49 89 f4             	mov    %rsi,%r12
   1f58f:	55                   	push   %rbp
   1f590:	48 89 fd             	mov    %rdi,%rbp
   1f593:	53                   	push   %rbx
   1f594:	31 db                	xor    %ebx,%ebx
   1f596:	44 8b 74 1d 0c       	mov    0xc(%rbp,%rbx,1),%r14d
   1f59b:	45 85 f6             	test   %r14d,%r14d
   1f59e:	74 1c                	je     1f5bc <ifstat_errors+0x3d>
   1f5a0:	8b 7c 1d 08          	mov    0x8(%rbp,%rbx,1),%edi
   1f5a4:	e8 cf 42 ff ff       	call   13878 <strerror>
   1f5a9:	44 89 f2             	mov    %r14d,%edx
   1f5ac:	4c 89 e6             	mov    %r12,%rsi
   1f5af:	4c 89 ef             	mov    %r13,%rdi
   1f5b2:	48 89 c1             	mov    %rax,%rcx
   1f5b5:	31 c0                	xor    %eax,%eax
   1f5b7:	e8 be 7c ff ff       	call   1727a <printf>
   1f5bc:	48 83 c3 08          	add    $0x8,%rbx
   1f5c0:	48 83 fb 20          	cmp    $0x20,%rbx
   1f5c4:	75 d0                	jne    1f596 <ifstat_errors+0x17>
   1f5c6:	5b                   	pop    %rbx
   1f5c7:	5d                   	pop    %rbp
   1f5c8:	41 5c                	pop    %r12
   1f5ca:	41 5d                	pop    %r13
   1f5cc:	41 5e                	pop    %r14
   1f5ce:	c3                   	ret    

000000000001f5cf <iflinkwait_progress>:
   1f5cf:	f3 0f 1e fa          	endbr64 
   1f5d3:	48 8b 47 20          	mov    0x20(%rdi),%rax
   1f5d7:	41 54                	push   %r12
   1f5d9:	44 8b a0 84 00 00 00 	mov    0x84(%rax),%r12d
   1f5e0:	45 85 e4             	test   %r12d,%r12d
   1f5e3:	75 07                	jne    1f5ec <iflinkwait_progress+0x1d>
   1f5e5:	31 f6                	xor    %esi,%esi
   1f5e7:	e8 43 a3 fe ff       	call   992f <intf_close>
   1f5ec:	44 89 e0             	mov    %r12d,%eax
   1f5ef:	41 5c                	pop    %r12
   1f5f1:	c3                   	ret    

000000000001f5f2 <ifconf_progress>:
   1f5f2:	f3 0f 1e fa          	endbr64 
   1f5f6:	41 55                	push   %r13
   1f5f8:	41 54                	push   %r12
   1f5fa:	45 31 e4             	xor    %r12d,%r12d
   1f5fd:	55                   	push   %rbp
   1f5fe:	48 89 fd             	mov    %rdi,%rbp
   1f601:	53                   	push   %rbx
   1f602:	51                   	push   %rcx
   1f603:	4c 8b 6f 20          	mov    0x20(%rdi),%r13
   1f607:	48 8b 5f 28          	mov    0x28(%rdi),%rbx
   1f60b:	4c 89 ef             	mov    %r13,%rdi
   1f60e:	e8 70 ef fe ff       	call   e583 <netdev_configuration_in_progress>
   1f613:	85 c0                	test   %eax,%eax
   1f615:	75 47                	jne    1f65e <ifconf_progress+0x6c>
   1f617:	48 85 db             	test   %rbx,%rbx
   1f61a:	74 22                	je     1f63e <ifconf_progress+0x4c>
   1f61c:	48 8d 05 2d 97 00 00 	lea    0x972d(%rip),%rax        # 28d50 <dhcp_configurator>
   1f623:	48 29 c3             	sub    %rax,%rbx
   1f626:	48 c1 fb 03          	sar    $0x3,%rbx
   1f62a:	69 db ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%ebx
   1f630:	48 6b db 38          	imul   $0x38,%rbx,%rbx
   1f634:	45 8b a4 1d e0 01 00 	mov    0x1e0(%r13,%rbx,1),%r12d
   1f63b:	00 
   1f63c:	eb 15                	jmp    1f653 <ifconf_progress+0x61>
   1f63e:	4c 89 ef             	mov    %r13,%rdi
   1f641:	41 89 c4             	mov    %eax,%r12d
   1f644:	e8 7c ef fe ff       	call   e5c5 <netdev_configuration_ok>
   1f649:	85 c0                	test   %eax,%eax
   1f64b:	75 06                	jne    1f653 <ifconf_progress+0x61>
   1f64d:	41 bc 7a 1e f1 fb    	mov    $0xfbf11e7a,%r12d
   1f653:	44 89 e6             	mov    %r12d,%esi
   1f656:	48 89 ef             	mov    %rbp,%rdi
   1f659:	e8 d1 a2 fe ff       	call   992f <intf_close>
   1f65e:	5a                   	pop    %rdx
   1f65f:	44 89 e0             	mov    %r12d,%eax
   1f662:	5b                   	pop    %rbx
   1f663:	5d                   	pop    %rbp
   1f664:	41 5c                	pop    %r12
   1f666:	41 5d                	pop    %r13
   1f668:	c3                   	ret    

000000000001f669 <ifopen>:
   1f669:	f3 0f 1e fa          	endbr64 
   1f66d:	41 54                	push   %r12
   1f66f:	53                   	push   %rbx
   1f670:	48 89 fb             	mov    %rdi,%rbx
   1f673:	51                   	push   %rcx
   1f674:	e8 85 e8 fe ff       	call   defe <netdev_open>
   1f679:	41 89 c4             	mov    %eax,%r12d
   1f67c:	85 c0                	test   %eax,%eax
   1f67e:	74 1c                	je     1f69c <ifopen+0x33>
   1f680:	89 c7                	mov    %eax,%edi
   1f682:	e8 f1 41 ff ff       	call   13878 <strerror>
   1f687:	48 8d 73 34          	lea    0x34(%rbx),%rsi
   1f68b:	48 8d 3d 4c 4c 00 00 	lea    0x4c4c(%rip),%rdi        # 242de <.LC1>
   1f692:	48 89 c2             	mov    %rax,%rdx
   1f695:	31 c0                	xor    %eax,%eax
   1f697:	e8 de 7b ff ff       	call   1727a <printf>
   1f69c:	44 89 e0             	mov    %r12d,%eax
   1f69f:	5a                   	pop    %rdx
   1f6a0:	5b                   	pop    %rbx
   1f6a1:	41 5c                	pop    %r12
   1f6a3:	c3                   	ret    

000000000001f6a4 <ifclose>:
   1f6a4:	f3 0f 1e fa          	endbr64 
   1f6a8:	e9 a8 e8 fe ff       	jmp    df55 <netdev_close>

000000000001f6ad <ifstat>:
   1f6ad:	f3 0f 1e fa          	endbr64 
   1f6b1:	41 57                	push   %r15
   1f6b3:	48 8d 05 fa 4d 00 00 	lea    0x4dfa(%rip),%rax        # 244b4 <.LC0>
   1f6ba:	4c 8d 0d ef 34 00 00 	lea    0x34ef(%rip),%r9        # 22bb0 <.LC6>
   1f6c1:	41 56                	push   %r14
   1f6c3:	41 55                	push   %r13
   1f6c5:	41 54                	push   %r12
   1f6c7:	4c 8d 25 27 4c 00 00 	lea    0x4c27(%rip),%r12        # 242f5 <.LC2>
   1f6ce:	55                   	push   %rbp
   1f6cf:	48 8d 2d 2a 4c 00 00 	lea    0x4c2a(%rip),%rbp        # 24300 <.LC4>
   1f6d6:	53                   	push   %rbx
   1f6d7:	48 89 fb             	mov    %rdi,%rbx
   1f6da:	48 83 ec 28          	sub    $0x28,%rsp
   1f6de:	83 bf 98 00 00 00 00 	cmpl   $0x0,0x98(%rdi)
   1f6e5:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   1f6e9:	4c 0f 44 e0          	cmove  %rax,%r12
   1f6ed:	83 bf 84 00 00 00 00 	cmpl   $0x0,0x84(%rdi)
   1f6f4:	48 8d 05 08 4c 00 00 	lea    0x4c08(%rip),%rax        # 24303 <.LC5>
   1f6fb:	44 8b 97 44 01 00 00 	mov    0x144(%rdi),%r10d
   1f702:	48 0f 45 e8          	cmovne %rax,%rbp
   1f706:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1f70b:	4d 8b 68 28          	mov    0x28(%r8),%r13
   1f70f:	48 8d 05 f2 4b 00 00 	lea    0x4bf2(%rip),%rax        # 24308 <.LC7>
   1f716:	f6 87 80 00 00 00 01 	testb  $0x1,0x80(%rdi)
   1f71d:	8b 8f 40 01 00 00    	mov    0x140(%rdi),%ecx
   1f723:	44 89 54 24 1c       	mov    %r10d,0x1c(%rsp)
   1f728:	4c 0f 44 c8          	cmove  %rax,%r9
   1f72c:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1f730:	48 83 c7 60          	add    $0x60,%rdi
   1f734:	44 8b bf bc 00 00 00 	mov    0xbc(%rdi),%r15d
   1f73b:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
   1f73f:	44 8b b7 b8 00 00 00 	mov    0xb8(%rdi),%r14d
   1f746:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1f74b:	ff 50 20             	call   *0x20(%rax)
   1f74e:	44 8b 54 24 1c       	mov    0x1c(%rsp),%r10d
   1f753:	48 8d 3d b5 4b 00 00 	lea    0x4bb5(%rip),%rdi        # 2430f <.LC8>
   1f75a:	48 8d 73 34          	lea    0x34(%rbx),%rsi
   1f75e:	48 89 c2             	mov    %rax,%rdx
   1f761:	31 c0                	xor    %eax,%eax
   1f763:	41 52                	push   %r10
   1f765:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   1f769:	51                   	push   %rcx
   1f76a:	4c 89 e9             	mov    %r13,%rcx
   1f76d:	41 57                	push   %r15
   1f76f:	41 56                	push   %r14
   1f771:	41 54                	push   %r12
   1f773:	55                   	push   %rbp
   1f774:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
   1f779:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   1f77e:	e8 f7 7a ff ff       	call   1727a <printf>
   1f783:	8b bb 84 00 00 00    	mov    0x84(%rbx),%edi
   1f789:	48 83 c4 30          	add    $0x30,%rsp
   1f78d:	85 ff                	test   %edi,%edi
   1f78f:	74 16                	je     1f7a7 <ifstat+0xfa>
   1f791:	e8 e2 40 ff ff       	call   13878 <strerror>
   1f796:	48 8d 3d b7 4b 00 00 	lea    0x4bb7(%rip),%rdi        # 24354 <.LC9>
   1f79d:	48 89 c6             	mov    %rax,%rsi
   1f7a0:	31 c0                	xor    %eax,%eax
   1f7a2:	e8 d3 7a ff ff       	call   1727a <printf>
   1f7a7:	48 8d bb 18 01 00 00 	lea    0x118(%rbx),%rdi
   1f7ae:	48 8d 35 b4 4b 00 00 	lea    0x4bb4(%rip),%rsi        # 24369 <.LC10>
   1f7b5:	e8 c5 fd ff ff       	call   1f57f <ifstat_errors>
   1f7ba:	48 83 c4 28          	add    $0x28,%rsp
   1f7be:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
   1f7c5:	48 8d 35 a1 4b 00 00 	lea    0x4ba1(%rip),%rsi        # 2436d <.LC11>
   1f7cc:	5b                   	pop    %rbx
   1f7cd:	5d                   	pop    %rbp
   1f7ce:	41 5c                	pop    %r12
   1f7d0:	41 5d                	pop    %r13
   1f7d2:	41 5e                	pop    %r14
   1f7d4:	41 5f                	pop    %r15
   1f7d6:	e9 a4 fd ff ff       	jmp    1f57f <ifstat_errors>

000000000001f7db <iflinkwait>:
   1f7db:	f3 0f 1e fa          	endbr64 
   1f7df:	55                   	push   %rbp
   1f7e0:	48 89 f5             	mov    %rsi,%rbp
   1f7e3:	53                   	push   %rbx
   1f7e4:	48 89 fb             	mov    %rdi,%rbx
   1f7e7:	41 50                	push   %r8
   1f7e9:	e8 7b fe ff ff       	call   1f669 <ifopen>
   1f7ee:	85 c0                	test   %eax,%eax
   1f7f0:	75 69                	jne    1f85b <iflinkwait+0x80>
   1f7f2:	48 89 df             	mov    %rbx,%rdi
   1f7f5:	e8 01 e5 fe ff       	call   dcfb <netdev_poll>
   1f7fa:	8b 83 84 00 00 00    	mov    0x84(%rbx),%eax
   1f800:	85 c0                	test   %eax,%eax
   1f802:	74 57                	je     1f85b <iflinkwait+0x80>
   1f804:	48 8d 73 34          	lea    0x34(%rbx),%rsi
   1f808:	48 8d 3d 62 4b 00 00 	lea    0x4b62(%rip),%rdi        # 24371 <.LC12>
   1f80f:	31 c0                	xor    %eax,%eax
   1f811:	e8 64 7a ff ff       	call   1727a <printf>
   1f816:	48 8d 05 b2 fd ff ff 	lea    -0x24e(%rip),%rax        # 1f5cf <iflinkwait_progress>
   1f81d:	48 8d 35 3c 85 00 00 	lea    0x853c(%rip),%rsi        # 27d60 <ifpoller.0>
   1f824:	48 89 1d 55 85 00 00 	mov    %rbx,0x8555(%rip)        # 27d80 <ifpoller.0+0x20>
   1f82b:	48 8d 3d ce 70 00 00 	lea    0x70ce(%rip),%rdi        # 26900 <monojob>
   1f832:	48 89 05 57 85 00 00 	mov    %rax,0x8557(%rip)        # 27d90 <ifpoller.0+0x30>
   1f839:	48 c7 05 44 85 00 00 	movq   $0x0,0x8544(%rip)        # 27d88 <ifpoller.0+0x28>
   1f840:	00 00 00 00 
   1f844:	e8 f8 9f fe ff       	call   9841 <intf_plug_plug>
   1f849:	59                   	pop    %rcx
   1f84a:	48 89 ee             	mov    %rbp,%rsi
   1f84d:	5b                   	pop    %rbx
   1f84e:	48 8d 3d 5f 4c 00 00 	lea    0x4c5f(%rip),%rdi        # 244b4 <.LC0>
   1f855:	5d                   	pop    %rbp
   1f856:	e9 ac da fe ff       	jmp    d307 <monojob_wait>
   1f85b:	5a                   	pop    %rdx
   1f85c:	5b                   	pop    %rbx
   1f85d:	5d                   	pop    %rbp
   1f85e:	c3                   	ret    

000000000001f85f <ifconf>:
   1f85f:	f3 0f 1e fa          	endbr64 
   1f863:	41 56                	push   %r14
   1f865:	49 89 d6             	mov    %rdx,%r14
   1f868:	41 55                	push   %r13
   1f86a:	41 54                	push   %r12
   1f86c:	55                   	push   %rbp
   1f86d:	48 89 f5             	mov    %rsi,%rbp
   1f870:	be 00 3c 00 00       	mov    $0x3c00,%esi
   1f875:	53                   	push   %rbx
   1f876:	48 89 fb             	mov    %rdi,%rbx
   1f879:	e8 5d ff ff ff       	call   1f7db <iflinkwait>
   1f87e:	41 89 c4             	mov    %eax,%r12d
   1f881:	85 c0                	test   %eax,%eax
   1f883:	0f 85 f8 00 00 00    	jne    1f981 <ifconf+0x122>
   1f889:	4c 8d 6b 34          	lea    0x34(%rbx),%r13
   1f88d:	48 85 ed             	test   %rbp,%rbp
   1f890:	74 36                	je     1f8c8 <ifconf+0x69>
   1f892:	48 89 ee             	mov    %rbp,%rsi
   1f895:	48 89 df             	mov    %rbx,%rdi
   1f898:	e8 0f ec fe ff       	call   e4ac <netdev_configure>
   1f89d:	41 89 c4             	mov    %eax,%r12d
   1f8a0:	85 c0                	test   %eax,%eax
   1f8a2:	74 53                	je     1f8f7 <ifconf+0x98>
   1f8a4:	89 c7                	mov    %eax,%edi
   1f8a6:	e8 cd 3f ff ff       	call   13878 <strerror>
   1f8ab:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1f8af:	4c 89 ee             	mov    %r13,%rsi
   1f8b2:	48 8d 3d d5 4a 00 00 	lea    0x4ad5(%rip),%rdi        # 2438e <.LC15>
   1f8b9:	48 89 c1             	mov    %rax,%rcx
   1f8bc:	31 c0                	xor    %eax,%eax
   1f8be:	e8 b7 79 ff ff       	call   1727a <printf>
   1f8c3:	e9 b9 00 00 00       	jmp    1f981 <ifconf+0x122>
   1f8c8:	48 89 df             	mov    %rbx,%rdi
   1f8cb:	e8 65 ec fe ff       	call   e535 <netdev_configure_all>
   1f8d0:	41 89 c4             	mov    %eax,%r12d
   1f8d3:	85 c0                	test   %eax,%eax
   1f8d5:	74 20                	je     1f8f7 <ifconf+0x98>
   1f8d7:	89 c7                	mov    %eax,%edi
   1f8d9:	e8 9a 3f ff ff       	call   13878 <strerror>
   1f8de:	4c 89 ee             	mov    %r13,%rsi
   1f8e1:	48 8d 3d c9 4a 00 00 	lea    0x4ac9(%rip),%rdi        # 243b1 <.LC16>
   1f8e8:	48 89 c2             	mov    %rax,%rdx
   1f8eb:	31 c0                	xor    %eax,%eax
   1f8ed:	e8 88 79 ff ff       	call   1727a <printf>
   1f8f2:	e9 8a 00 00 00       	jmp    1f981 <ifconf+0x122>
   1f8f7:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1f8fb:	48 8d 7b 60          	lea    0x60(%rbx),%rdi
   1f8ff:	4c 8d 25 ae 4b 00 00 	lea    0x4bae(%rip),%r12        # 244b4 <.LC0>
   1f906:	ff 50 20             	call   *0x20(%rax)
   1f909:	48 85 ed             	test   %rbp,%rbp
   1f90c:	49 89 c1             	mov    %rax,%r9
   1f90f:	75 5c                	jne    1f96d <ifconf+0x10e>
   1f911:	4c 89 e2             	mov    %r12,%rdx
   1f914:	4c 89 e1             	mov    %r12,%rcx
   1f917:	4c 89 e6             	mov    %r12,%rsi
   1f91a:	4d 89 e8             	mov    %r13,%r8
   1f91d:	48 8d 3d a9 4a 00 00 	lea    0x4aa9(%rip),%rdi        # 243cd <.LC17>
   1f924:	31 c0                	xor    %eax,%eax
   1f926:	e8 4f 79 ff ff       	call   1727a <printf>
   1f92b:	48 8d 05 c0 fc ff ff 	lea    -0x340(%rip),%rax        # 1f5f2 <ifconf_progress>
   1f932:	48 8d 35 27 84 00 00 	lea    0x8427(%rip),%rsi        # 27d60 <ifpoller.0>
   1f939:	48 89 1d 40 84 00 00 	mov    %rbx,0x8440(%rip)        # 27d80 <ifpoller.0+0x20>
   1f940:	48 8d 3d b9 6f 00 00 	lea    0x6fb9(%rip),%rdi        # 26900 <monojob>
   1f947:	48 89 2d 3a 84 00 00 	mov    %rbp,0x843a(%rip)        # 27d88 <ifpoller.0+0x28>
   1f94e:	48 89 05 3b 84 00 00 	mov    %rax,0x843b(%rip)        # 27d90 <ifpoller.0+0x30>
   1f955:	e8 e7 9e fe ff       	call   9841 <intf_plug_plug>
   1f95a:	5b                   	pop    %rbx
   1f95b:	4c 89 f6             	mov    %r14,%rsi
   1f95e:	5d                   	pop    %rbp
   1f95f:	4c 89 e7             	mov    %r12,%rdi
   1f962:	41 5c                	pop    %r12
   1f964:	41 5d                	pop    %r13
   1f966:	41 5e                	pop    %r14
   1f968:	e9 9a d9 fe ff       	jmp    d307 <monojob_wait>
   1f96d:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1f971:	48 8d 0d 13 4a 00 00 	lea    0x4a13(%rip),%rcx        # 2438b <.LC13>
   1f978:	48 8d 35 76 3d 00 00 	lea    0x3d76(%rip),%rsi        # 236f5 <.LC11>
   1f97f:	eb 99                	jmp    1f91a <ifconf+0xbb>
   1f981:	5b                   	pop    %rbx
   1f982:	44 89 e0             	mov    %r12d,%eax
   1f985:	5d                   	pop    %rbp
   1f986:	41 5c                	pop    %r12
   1f988:	41 5d                	pop    %r13
   1f98a:	41 5e                	pop    %r14
   1f98c:	c3                   	ret    

000000000001f98d <free_image>:
   1f98d:	f3 0f 1e fa          	endbr64 
   1f991:	55                   	push   %rbp
   1f992:	48 89 fd             	mov    %rdi,%rbp
   1f995:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
   1f999:	e8 84 cd fe ff       	call   c722 <free>
   1f99e:	48 8b 7d 38          	mov    0x38(%rbp),%rdi
   1f9a2:	e8 7b cd fe ff       	call   c722 <free>
   1f9a7:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   1f9ab:	e8 6a 05 ff ff       	call   ff1a <ref_decrement>
   1f9b0:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
   1f9b4:	31 f6                	xor    %esi,%esi
   1f9b6:	e8 b6 de ff ff       	call   1d871 <urealloc>
   1f9bb:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
   1f9bf:	e8 56 05 ff ff       	call   ff1a <ref_decrement>
   1f9c4:	48 89 ef             	mov    %rbp,%rdi
   1f9c7:	5d                   	pop    %rbp
   1f9c8:	e9 55 cd fe ff       	jmp    c722 <free>

000000000001f9cd <image_set_name>:
   1f9cd:	f3 0f 1e fa          	endbr64 
   1f9d1:	55                   	push   %rbp
   1f9d2:	53                   	push   %rbx
   1f9d3:	48 89 fb             	mov    %rdi,%rbx
   1f9d6:	48 89 f7             	mov    %rsi,%rdi
   1f9d9:	51                   	push   %rcx
   1f9da:	e8 4a 41 ff ff       	call   13b29 <strdup>
   1f9df:	48 85 c0             	test   %rax,%rax
   1f9e2:	75 07                	jne    1f9eb <image_set_name+0x1e>
   1f9e4:	b8 77 7f ff ce       	mov    $0xceff7f77,%eax
   1f9e9:	eb 12                	jmp    1f9fd <image_set_name+0x30>
   1f9eb:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   1f9ef:	48 89 c5             	mov    %rax,%rbp
   1f9f2:	e8 2b cd fe ff       	call   c722 <free>
   1f9f7:	48 89 6b 28          	mov    %rbp,0x28(%rbx)
   1f9fb:	31 c0                	xor    %eax,%eax
   1f9fd:	5a                   	pop    %rdx
   1f9fe:	5b                   	pop    %rbx
   1f9ff:	5d                   	pop    %rbp
   1fa00:	c3                   	ret    

000000000001fa01 <image_set_uri>:
   1fa01:	f3 0f 1e fa          	endbr64 
   1fa05:	55                   	push   %rbp
   1fa06:	48 89 f5             	mov    %rsi,%rbp
   1fa09:	53                   	push   %rbx
   1fa0a:	48 89 fb             	mov    %rdi,%rbx
   1fa0d:	51                   	push   %rcx
   1fa0e:	48 8b 7e 40          	mov    0x40(%rsi),%rdi
   1fa12:	48 85 ff             	test   %rdi,%rdi
   1fa15:	75 19                	jne    1fa30 <image_set_uri+0x2f>
   1fa17:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1fa1b:	e8 fa 04 ff ff       	call   ff1a <ref_decrement>
   1fa20:	48 89 ef             	mov    %rbp,%rdi
   1fa23:	e8 e6 04 ff ff       	call   ff0e <ref_increment>
   1fa28:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
   1fa2c:	31 c0                	xor    %eax,%eax
   1fa2e:	eb 22                	jmp    1fa52 <image_set_uri+0x51>
   1fa30:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1fa34:	48 85 c0             	test   %rax,%rax
   1fa37:	74 05                	je     1fa3e <image_set_uri+0x3d>
   1fa39:	80 38 00             	cmpb   $0x0,(%rax)
   1fa3c:	75 d9                	jne    1fa17 <image_set_uri+0x16>
   1fa3e:	e8 97 92 ff ff       	call   18cda <basename>
   1fa43:	48 89 df             	mov    %rbx,%rdi
   1fa46:	48 89 c6             	mov    %rax,%rsi
   1fa49:	e8 7f ff ff ff       	call   1f9cd <image_set_name>
   1fa4e:	85 c0                	test   %eax,%eax
   1fa50:	74 c5                	je     1fa17 <image_set_uri+0x16>
   1fa52:	5a                   	pop    %rdx
   1fa53:	5b                   	pop    %rbx
   1fa54:	5d                   	pop    %rbp
   1fa55:	c3                   	ret    

000000000001fa56 <alloc_image>:
   1fa56:	f3 0f 1e fa          	endbr64 
   1fa5a:	41 54                	push   %r12
   1fa5c:	55                   	push   %rbp
   1fa5d:	48 89 fd             	mov    %rdi,%rbp
   1fa60:	bf 60 00 00 00       	mov    $0x60,%edi
   1fa65:	51                   	push   %rcx
   1fa66:	e8 cb cc fe ff       	call   c736 <zalloc>
   1fa6b:	49 89 c4             	mov    %rax,%r12
   1fa6e:	48 85 c0             	test   %rax,%rax
   1fa71:	74 2b                	je     1fa9e <alloc_image+0x48>
   1fa73:	48 8d 05 13 ff ff ff 	lea    -0xed(%rip),%rax        # 1f98d <free_image>
   1fa7a:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1fa7f:	48 85 ed             	test   %rbp,%rbp
   1fa82:	74 1a                	je     1fa9e <alloc_image+0x48>
   1fa84:	48 89 ee             	mov    %rbp,%rsi
   1fa87:	4c 89 e7             	mov    %r12,%rdi
   1fa8a:	e8 72 ff ff ff       	call   1fa01 <image_set_uri>
   1fa8f:	85 c0                	test   %eax,%eax
   1fa91:	74 0b                	je     1fa9e <alloc_image+0x48>
   1fa93:	4c 89 e7             	mov    %r12,%rdi
   1fa96:	45 31 e4             	xor    %r12d,%r12d
   1fa99:	e8 7c 04 ff ff       	call   ff1a <ref_decrement>
   1fa9e:	4c 89 e0             	mov    %r12,%rax
   1faa1:	5a                   	pop    %rdx
   1faa2:	5d                   	pop    %rbp
   1faa3:	41 5c                	pop    %r12
   1faa5:	c3                   	ret    

000000000001faa6 <image_set_cmdline>:
   1faa6:	f3 0f 1e fa          	endbr64 
   1faaa:	55                   	push   %rbp
   1faab:	48 89 f5             	mov    %rsi,%rbp
   1faae:	53                   	push   %rbx
   1faaf:	48 89 fb             	mov    %rdi,%rbx
   1fab2:	51                   	push   %rcx
   1fab3:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   1fab7:	e8 66 cc fe ff       	call   c722 <free>
   1fabc:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
   1fac3:	00 
   1fac4:	48 85 ed             	test   %rbp,%rbp
   1fac7:	75 04                	jne    1facd <image_set_cmdline+0x27>
   1fac9:	31 c0                	xor    %eax,%eax
   1facb:	eb 16                	jmp    1fae3 <image_set_cmdline+0x3d>
   1facd:	48 89 ef             	mov    %rbp,%rdi
   1fad0:	e8 54 40 ff ff       	call   13b29 <strdup>
   1fad5:	48 89 43 38          	mov    %rax,0x38(%rbx)
   1fad9:	48 85 c0             	test   %rax,%rax
   1fadc:	75 eb                	jne    1fac9 <image_set_cmdline+0x23>
   1fade:	b8 77 7f ff ce       	mov    $0xceff7f77,%eax
   1fae3:	5a                   	pop    %rdx
   1fae4:	5b                   	pop    %rbx
   1fae5:	5d                   	pop    %rbp
   1fae6:	c3                   	ret    

000000000001fae7 <unregister_image>:
   1fae7:	f3 0f 1e fa          	endbr64 
   1faeb:	8b 47 30             	mov    0x30(%rdi),%eax
   1faee:	a8 01                	test   $0x1,%al
   1faf0:	74 1a                	je     1fb0c <unregister_image+0x25>
   1faf2:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   1faf6:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   1fafa:	83 e0 fe             	and    $0xfffffffe,%eax
   1fafd:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   1fb01:	48 89 0a             	mov    %rcx,(%rdx)
   1fb04:	89 47 30             	mov    %eax,0x30(%rdi)
   1fb07:	e9 0e 04 ff ff       	jmp    ff1a <ref_decrement>
   1fb0c:	c3                   	ret    

000000000001fb0d <find_image>:
   1fb0d:	f3 0f 1e fa          	endbr64 
   1fb11:	48 8b 05 b8 82 00 00 	mov    0x82b8(%rip),%rax        # 27dd0 <images>
   1fb18:	41 54                	push   %r12
   1fb1a:	55                   	push   %rbp
   1fb1b:	48 8d 2d ae 82 00 00 	lea    0x82ae(%rip),%rbp        # 27dd0 <images>
   1fb22:	53                   	push   %rbx
   1fb23:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
   1fb27:	48 89 fb             	mov    %rdi,%rbx
   1fb2a:	49 8d 44 24 10       	lea    0x10(%r12),%rax
   1fb2f:	48 39 e8             	cmp    %rbp,%rax
   1fb32:	74 1c                	je     1fb50 <find_image+0x43>
   1fb34:	49 8b 7c 24 28       	mov    0x28(%r12),%rdi
   1fb39:	48 89 de             	mov    %rbx,%rsi
   1fb3c:	e8 7b 3e ff ff       	call   139bc <strcmp>
   1fb41:	85 c0                	test   %eax,%eax
   1fb43:	74 0e                	je     1fb53 <find_image+0x46>
   1fb45:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
   1fb4a:	49 83 ec 10          	sub    $0x10,%r12
   1fb4e:	eb da                	jmp    1fb2a <find_image+0x1d>
   1fb50:	45 31 e4             	xor    %r12d,%r12d
   1fb53:	4c 89 e0             	mov    %r12,%rax
   1fb56:	5b                   	pop    %rbx
   1fb57:	5d                   	pop    %rbp
   1fb58:	41 5c                	pop    %r12
   1fb5a:	c3                   	ret    

000000000001fb5b <image_exec>:
   1fb5b:	f3 0f 1e fa          	endbr64 
   1fb5f:	41 56                	push   %r14
   1fb61:	41 55                	push   %r13
   1fb63:	41 54                	push   %r12
   1fb65:	55                   	push   %rbp
   1fb66:	48 89 fd             	mov    %rdi,%rbp
   1fb69:	53                   	push   %rbx
   1fb6a:	4c 8b 2d ff a3 00 00 	mov    0xa3ff(%rip),%r13        # 29f70 <cwuri>
   1fb71:	4c 89 ef             	mov    %r13,%rdi
   1fb74:	e8 95 03 ff ff       	call   ff0e <ref_increment>
   1fb79:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   1fb7d:	e8 25 99 ff ff       	call   194a7 <churi>
   1fb82:	48 89 ef             	mov    %rbp,%rdi
   1fb85:	4c 8b 35 1c a5 00 00 	mov    0xa51c(%rip),%r14        # 2a0a8 <current_image>
   1fb8c:	e8 7d 03 ff ff       	call   ff0e <ref_increment>
   1fb91:	48 8b 45 50          	mov    0x50(%rbp),%rax
   1fb95:	48 89 2d 0c a5 00 00 	mov    %rbp,0xa50c(%rip)        # 2a0a8 <current_image>
   1fb9c:	48 85 c0             	test   %rax,%rax
   1fb9f:	74 09                	je     1fbaa <image_exec+0x4f>
   1fba1:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fba5:	48 85 c0             	test   %rax,%rax
   1fba8:	75 08                	jne    1fbb2 <image_exec+0x57>
   1fbaa:	41 bc 7f 7f ff d1    	mov    $0xd1ff7f7f,%r12d
   1fbb0:	eb 15                	jmp    1fbc7 <image_exec+0x6c>
   1fbb2:	83 3d 47 a4 00 00 00 	cmpl   $0x0,0xa447(%rip)        # 2a000 <require_trusted_images>
   1fbb9:	74 10                	je     1fbcb <image_exec+0x70>
   1fbbb:	f6 45 30 04          	testb  $0x4,0x30(%rbp)
   1fbbf:	75 0a                	jne    1fbcb <image_exec+0x70>
   1fbc1:	41 bc 71 7e ff fd    	mov    $0xfdff7e71,%r12d
   1fbc7:	31 db                	xor    %ebx,%ebx
   1fbc9:	eb 0c                	jmp    1fbd7 <image_exec+0x7c>
   1fbcb:	48 89 ef             	mov    %rbp,%rdi
   1fbce:	ff d0                	call   *%rax
   1fbd0:	48 8b 5d 58          	mov    0x58(%rbp),%rbx
   1fbd4:	41 89 c4             	mov    %eax,%r12d
   1fbd7:	f6 45 30 08          	testb  $0x8,0x30(%rbp)
   1fbdb:	74 08                	je     1fbe5 <image_exec+0x8a>
   1fbdd:	48 89 ef             	mov    %rbp,%rdi
   1fbe0:	e8 02 ff ff ff       	call   1fae7 <unregister_image>
   1fbe5:	48 89 ef             	mov    %rbp,%rdi
   1fbe8:	e8 2d 03 ff ff       	call   ff1a <ref_decrement>
   1fbed:	4c 89 ef             	mov    %r13,%rdi
   1fbf0:	4c 89 35 b1 a4 00 00 	mov    %r14,0xa4b1(%rip)        # 2a0a8 <current_image>
   1fbf7:	e8 ab 98 ff ff       	call   194a7 <churi>
   1fbfc:	4c 89 ef             	mov    %r13,%rdi
   1fbff:	e8 16 03 ff ff       	call   ff1a <ref_decrement>
   1fc04:	48 85 db             	test   %rbx,%rbx
   1fc07:	74 08                	je     1fc11 <image_exec+0xb6>
   1fc09:	48 89 dd             	mov    %rbx,%rbp
   1fc0c:	e9 59 ff ff ff       	jmp    1fb6a <image_exec+0xf>
   1fc11:	5b                   	pop    %rbx
   1fc12:	44 89 e0             	mov    %r12d,%eax
   1fc15:	5d                   	pop    %rbp
   1fc16:	41 5c                	pop    %r12
   1fc18:	41 5d                	pop    %r13
   1fc1a:	41 5e                	pop    %r14
   1fc1c:	c3                   	ret    

000000000001fc1d <image_replace>:
   1fc1d:	f3 0f 1e fa          	endbr64 
   1fc21:	55                   	push   %rbp
   1fc22:	53                   	push   %rbx
   1fc23:	51                   	push   %rcx
   1fc24:	48 8b 2d 7d a4 00 00 	mov    0xa47d(%rip),%rbp        # 2a0a8 <current_image>
   1fc2b:	48 85 ed             	test   %rbp,%rbp
   1fc2e:	75 07                	jne    1fc37 <image_replace+0x1a>
   1fc30:	b8 7d 7f ff c2       	mov    $0xc2ff7f7d,%eax
   1fc35:	eb 31                	jmp    1fc68 <image_replace+0x4b>
   1fc37:	48 8b 47 50          	mov    0x50(%rdi),%rax
   1fc3b:	48 89 fb             	mov    %rdi,%rbx
   1fc3e:	48 85 c0             	test   %rax,%rax
   1fc41:	74 07                	je     1fc4a <image_replace+0x2d>
   1fc43:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   1fc48:	75 07                	jne    1fc51 <image_replace+0x34>
   1fc4a:	b8 7f 7f ff d1       	mov    $0xd1ff7f7f,%eax
   1fc4f:	eb 17                	jmp    1fc68 <image_replace+0x4b>
   1fc51:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
   1fc55:	e8 c0 02 ff ff       	call   ff1a <ref_decrement>
   1fc5a:	48 89 df             	mov    %rbx,%rdi
   1fc5d:	e8 ac 02 ff ff       	call   ff0e <ref_increment>
   1fc62:	48 89 5d 58          	mov    %rbx,0x58(%rbp)
   1fc66:	31 c0                	xor    %eax,%eax
   1fc68:	5a                   	pop    %rdx
   1fc69:	5b                   	pop    %rbx
   1fc6a:	5d                   	pop    %rbp
   1fc6b:	c3                   	ret    

000000000001fc6c <image_select>:
   1fc6c:	f3 0f 1e fa          	endbr64 
   1fc70:	48 8b 05 59 81 00 00 	mov    0x8159(%rip),%rax        # 27dd0 <images>
   1fc77:	48 8d 15 52 81 00 00 	lea    0x8152(%rip),%rdx        # 27dd0 <images>
   1fc7e:	48 83 e8 10          	sub    $0x10,%rax
   1fc82:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1fc86:	48 39 d1             	cmp    %rdx,%rcx
   1fc89:	74 0e                	je     1fc99 <image_select+0x2d>
   1fc8b:	83 60 30 fd          	andl   $0xfffffffd,0x30(%rax)
   1fc8f:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fc93:	48 83 e8 10          	sub    $0x10,%rax
   1fc97:	eb e9                	jmp    1fc82 <image_select+0x16>
   1fc99:	48 8b 47 50          	mov    0x50(%rdi),%rax
   1fc9d:	48 85 c0             	test   %rax,%rax
   1fca0:	74 07                	je     1fca9 <image_select+0x3d>
   1fca2:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   1fca7:	75 06                	jne    1fcaf <image_select+0x43>
   1fca9:	b8 7f 7f ff d1       	mov    $0xd1ff7f7f,%eax
   1fcae:	c3                   	ret    
   1fcaf:	83 4f 30 02          	orl    $0x2,0x30(%rdi)
   1fcb3:	31 c0                	xor    %eax,%eax
   1fcb5:	c3                   	ret    

000000000001fcb6 <image_find_selected>:
   1fcb6:	f3 0f 1e fa          	endbr64 
   1fcba:	48 8b 05 0f 81 00 00 	mov    0x810f(%rip),%rax        # 27dd0 <images>
   1fcc1:	48 8d 15 08 81 00 00 	lea    0x8108(%rip),%rdx        # 27dd0 <images>
   1fcc8:	48 83 e8 10          	sub    $0x10,%rax
   1fccc:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1fcd0:	48 39 d1             	cmp    %rdx,%rcx
   1fcd3:	74 10                	je     1fce5 <image_find_selected+0x2f>
   1fcd5:	f6 40 30 02          	testb  $0x2,0x30(%rax)
   1fcd9:	75 0c                	jne    1fce7 <image_find_selected+0x31>
   1fcdb:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fcdf:	48 83 e8 10          	sub    $0x10,%rax
   1fce3:	eb e7                	jmp    1fccc <image_find_selected+0x16>
   1fce5:	31 c0                	xor    %eax,%eax
   1fce7:	c3                   	ret    

000000000001fce8 <register_image>:
   1fce8:	f3 0f 1e fa          	endbr64 
   1fcec:	41 54                	push   %r12
   1fcee:	55                   	push   %rbp
   1fcef:	53                   	push   %rbx
   1fcf0:	48 89 fb             	mov    %rdi,%rbx
   1fcf3:	48 83 ec 10          	sub    $0x10,%rsp
   1fcf7:	48 8b 05 52 a3 00 00 	mov    0xa352(%rip),%rax        # 2a050 <__stack_chk_guard>
   1fcfe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1fd03:	31 c0                	xor    %eax,%eax
   1fd05:	48 83 7f 28 00       	cmpq   $0x0,0x28(%rdi)
   1fd0a:	74 10                	je     1fd1c <register_image+0x34>
   1fd0c:	e8 a5 ff ff ff       	call   1fcb6 <image_find_selected>
   1fd11:	48 85 c0             	test   %rax,%rax
   1fd14:	74 3f                	je     1fd55 <register_image+0x6d>
   1fd16:	83 63 30 fd          	andl   $0xfffffffd,0x30(%rbx)
   1fd1a:	eb 39                	jmp    1fd55 <register_image+0x6d>
   1fd1c:	8b 0d d6 a2 00 00    	mov    0xa2d6(%rip),%ecx        # 29ff8 <imgindex.0>
   1fd22:	48 89 e5             	mov    %rsp,%rbp
   1fd25:	be 08 00 00 00       	mov    $0x8,%esi
   1fd2a:	48 8d 15 d9 46 00 00 	lea    0x46d9(%rip),%rdx        # 2440a <.LC0>
   1fd31:	48 89 ef             	mov    %rbp,%rdi
   1fd34:	8d 41 01             	lea    0x1(%rcx),%eax
   1fd37:	89 05 bb a2 00 00    	mov    %eax,0xa2bb(%rip)        # 29ff8 <imgindex.0>
   1fd3d:	31 c0                	xor    %eax,%eax
   1fd3f:	e8 19 74 ff ff       	call   1715d <snprintf>
   1fd44:	48 89 ee             	mov    %rbp,%rsi
   1fd47:	48 89 df             	mov    %rbx,%rdi
   1fd4a:	e8 7e fc ff ff       	call   1f9cd <image_set_name>
   1fd4f:	85 c0                	test   %eax,%eax
   1fd51:	74 b9                	je     1fd0c <register_image+0x24>
   1fd53:	eb 4e                	jmp    1fda3 <register_image+0xbb>
   1fd55:	48 89 df             	mov    %rbx,%rdi
   1fd58:	e8 b1 01 ff ff       	call   ff0e <ref_increment>
   1fd5d:	83 4b 30 01          	orl    $0x1,0x30(%rbx)
   1fd61:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1fd65:	48 8d 35 64 80 00 00 	lea    0x8064(%rip),%rsi        # 27dd0 <images>
   1fd6c:	e8 36 c4 fe ff       	call   c1a7 <extern_list_add_tail>
   1fd71:	48 83 7b 50 00       	cmpq   $0x0,0x50(%rbx)
   1fd76:	75 29                	jne    1fda1 <register_image+0xb9>
   1fd78:	48 8d 2d d9 8e 00 00 	lea    0x8ed9(%rip),%rbp        # 28c58 <efi_image_type>
   1fd7f:	4c 8d 25 22 8f 00 00 	lea    0x8f22(%rip),%r12        # 28ca8 <efi_console_init_fn>
   1fd86:	4c 39 e5             	cmp    %r12,%rbp
   1fd89:	73 16                	jae    1fda1 <register_image+0xb9>
   1fd8b:	48 89 df             	mov    %rbx,%rdi
   1fd8e:	ff 55 08             	call   *0x8(%rbp)
   1fd91:	85 c0                	test   %eax,%eax
   1fd93:	75 06                	jne    1fd9b <register_image+0xb3>
   1fd95:	48 89 6b 50          	mov    %rbp,0x50(%rbx)
   1fd99:	eb 08                	jmp    1fda3 <register_image+0xbb>
   1fd9b:	48 83 c5 28          	add    $0x28,%rbp
   1fd9f:	eb e5                	jmp    1fd86 <register_image+0x9e>
   1fda1:	31 c0                	xor    %eax,%eax
   1fda3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1fda8:	48 2b 15 a1 a2 00 00 	sub    0xa2a1(%rip),%rdx        # 2a050 <__stack_chk_guard>
   1fdaf:	74 05                	je     1fdb6 <register_image+0xce>
   1fdb1:	e8 aa 2c fe ff       	call   2a60 <__stack_chk_fail>
   1fdb6:	48 83 c4 10          	add    $0x10,%rsp
   1fdba:	5b                   	pop    %rbx
   1fdbb:	5d                   	pop    %rbp
   1fdbc:	41 5c                	pop    %r12
   1fdbe:	c3                   	ret    

000000000001fdbf <jump_scroll_key>:
   1fdbf:	f3 0f 1e fa          	endbr64 
   1fdc3:	81 fe 48 01 00 00    	cmp    $0x148,%esi
   1fdc9:	74 47                	je     1fe12 <jump_scroll_key+0x53>
   1fdcb:	7f 22                	jg     1fdef <jump_scroll_key+0x30>
   1fdcd:	b8 01 00 00 00       	mov    $0x1,%eax
   1fdd2:	81 fe 42 01 00 00    	cmp    $0x142,%esi
   1fdd8:	74 41                	je     1fe1b <jump_scroll_key+0x5c>
   1fdda:	81 fe 46 01 00 00    	cmp    $0x146,%esi
   1fde0:	74 36                	je     1fe18 <jump_scroll_key+0x59>
   1fde2:	31 c0                	xor    %eax,%eax
   1fde4:	81 fe 41 01 00 00    	cmp    $0x141,%esi
   1fdea:	0f 94 c0             	sete   %al
   1fded:	eb 26                	jmp    1fe15 <jump_scroll_key+0x56>
   1fdef:	81 fe 7e 06 00 00    	cmp    $0x67e,%esi
   1fdf5:	74 0b                	je     1fe02 <jump_scroll_key+0x43>
   1fdf7:	81 fe 7e 07 00 00    	cmp    $0x77e,%esi
   1fdfd:	74 0a                	je     1fe09 <jump_scroll_key+0x4a>
   1fdff:	31 c0                	xor    %eax,%eax
   1fe01:	c3                   	ret    
   1fe02:	8b 47 0c             	mov    0xc(%rdi),%eax
   1fe05:	ff c8                	dec    %eax
   1fe07:	eb 05                	jmp    1fe0e <jump_scroll_key+0x4f>
   1fe09:	8b 07                	mov    (%rdi),%eax
   1fe0b:	03 47 0c             	add    0xc(%rdi),%eax
   1fe0e:	2b 47 08             	sub    0x8(%rdi),%eax
   1fe11:	c3                   	ret    
   1fe12:	8b 47 04             	mov    0x4(%rdi),%eax
   1fe15:	f7 d8                	neg    %eax
   1fe17:	c3                   	ret    
   1fe18:	8b 47 04             	mov    0x4(%rdi),%eax
   1fe1b:	c3                   	ret    

000000000001fe1c <jump_scroll_move>:
   1fe1c:	f3 0f 1e fa          	endbr64 
   1fe20:	89 f2                	mov    %esi,%edx
   1fe22:	03 57 08             	add    0x8(%rdi),%edx
   1fe25:	78 1f                	js     1fe46 <jump_scroll_move+0x2a>
   1fe27:	8b 47 04             	mov    0x4(%rdi),%eax
   1fe2a:	41 83 c8 ff          	or     $0xffffffff,%r8d
   1fe2e:	ff c8                	dec    %eax
   1fe30:	39 d0                	cmp    %edx,%eax
   1fe32:	7c 1a                	jl     1fe4e <jump_scroll_move+0x32>
   1fe34:	45 31 c0             	xor    %r8d,%r8d
   1fe37:	85 f6                	test   %esi,%esi
   1fe39:	89 d0                	mov    %edx,%eax
   1fe3b:	41 0f 9f c0          	setg   %r8b
   1fe3f:	47 8d 44 00 ff       	lea    -0x1(%r8,%r8,1),%r8d
   1fe44:	eb 08                	jmp    1fe4e <jump_scroll_move+0x32>
   1fe46:	31 c0                	xor    %eax,%eax
   1fe48:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1fe4e:	89 47 08             	mov    %eax,0x8(%rdi)
   1fe51:	44 89 c0             	mov    %r8d,%eax
   1fe54:	c3                   	ret    

000000000001fe55 <jump_scroll>:
   1fe55:	f3 0f 1e fa          	endbr64 
   1fe59:	8b 57 08             	mov    0x8(%rdi),%edx
   1fe5c:	8b 0f                	mov    (%rdi),%ecx
   1fe5e:	31 c0                	xor    %eax,%eax
   1fe60:	89 d6                	mov    %edx,%esi
   1fe62:	2b 77 0c             	sub    0xc(%rdi),%esi
   1fe65:	39 ce                	cmp    %ecx,%esi
   1fe67:	73 01                	jae    1fe6a <jump_scroll+0x15>
   1fe69:	c3                   	ret    
   1fe6a:	8b 47 0c             	mov    0xc(%rdi),%eax
   1fe6d:	39 c2                	cmp    %eax,%edx
   1fe6f:	76 07                	jbe    1fe78 <jump_scroll+0x23>
   1fe71:	01 c8                	add    %ecx,%eax
   1fe73:	89 47 0c             	mov    %eax,0xc(%rdi)
   1fe76:	eb f2                	jmp    1fe6a <jump_scroll+0x15>
   1fe78:	8b 47 0c             	mov    0xc(%rdi),%eax
   1fe7b:	39 c2                	cmp    %eax,%edx
   1fe7d:	73 07                	jae    1fe86 <jump_scroll+0x31>
   1fe7f:	29 c8                	sub    %ecx,%eax
   1fe81:	89 47 0c             	mov    %eax,0xc(%rdi)
   1fe84:	eb f2                	jmp    1fe78 <jump_scroll+0x23>
   1fe86:	b8 01 00 00 00       	mov    $0x1,%eax
   1fe8b:	c3                   	ret    

000000000001fe8c <add_menu_item>:
   1fe8c:	f3 0f 1e fa          	endbr64 
   1fe90:	41 57                	push   %r15
   1fe92:	41 89 cf             	mov    %ecx,%r15d
   1fe95:	41 56                	push   %r14
   1fe97:	45 89 c6             	mov    %r8d,%r14d
   1fe9a:	41 55                	push   %r13
   1fe9c:	41 54                	push   %r12
   1fe9e:	55                   	push   %rbp
   1fe9f:	48 8d 2d 0e 46 00 00 	lea    0x460e(%rip),%rbp        # 244b4 <.LC0>
   1fea6:	53                   	push   %rbx
   1fea7:	48 83 ec 18          	sub    $0x18,%rsp
   1feab:	48 89 3c 24          	mov    %rdi,(%rsp)
   1feaf:	48 85 d2             	test   %rdx,%rdx
   1feb2:	74 03                	je     1feb7 <add_menu_item+0x2b>
   1feb4:	48 89 d5             	mov    %rdx,%rbp
   1feb7:	31 db                	xor    %ebx,%ebx
   1feb9:	48 85 f6             	test   %rsi,%rsi
   1febc:	74 16                	je     1fed4 <add_menu_item+0x48>
   1febe:	48 89 f7             	mov    %rsi,%rdi
   1fec1:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1fec6:	e8 4b 3b ff ff       	call   13a16 <strlen>
   1fecb:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1fed0:	48 8d 58 01          	lea    0x1(%rax),%rbx
   1fed4:	48 89 ef             	mov    %rbp,%rdi
   1fed7:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1fedc:	e8 35 3b ff ff       	call   13a16 <strlen>
   1fee1:	48 8d 7c 03 29       	lea    0x29(%rbx,%rax,1),%rdi
   1fee6:	e8 4b c8 fe ff       	call   c736 <zalloc>
   1feeb:	49 89 c4             	mov    %rax,%r12
   1feee:	48 85 c0             	test   %rax,%rax
   1fef1:	74 48                	je     1ff3b <add_menu_item+0xaf>
   1fef3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1fef8:	4c 8d 68 28          	lea    0x28(%rax),%r13
   1fefc:	4c 01 eb             	add    %r13,%rbx
   1feff:	48 85 f6             	test   %rsi,%rsi
   1ff02:	74 0d                	je     1ff11 <add_menu_item+0x85>
   1ff04:	4c 89 ef             	mov    %r13,%rdi
   1ff07:	e8 8a 3b ff ff       	call   13a96 <strcpy>
   1ff0c:	4d 89 6c 24 10       	mov    %r13,0x10(%r12)
   1ff11:	48 89 ee             	mov    %rbp,%rsi
   1ff14:	48 89 df             	mov    %rbx,%rdi
   1ff17:	e8 7a 3b ff ff       	call   13a96 <strcpy>
   1ff1c:	48 8b 34 24          	mov    (%rsp),%rsi
   1ff20:	4c 89 e7             	mov    %r12,%rdi
   1ff23:	49 89 5c 24 18       	mov    %rbx,0x18(%r12)
   1ff28:	45 89 7c 24 20       	mov    %r15d,0x20(%r12)
   1ff2d:	48 83 c6 20          	add    $0x20,%rsi
   1ff31:	45 89 74 24 24       	mov    %r14d,0x24(%r12)
   1ff36:	e8 6c c2 fe ff       	call   c1a7 <extern_list_add_tail>
   1ff3b:	48 83 c4 18          	add    $0x18,%rsp
   1ff3f:	4c 89 e0             	mov    %r12,%rax
   1ff42:	5b                   	pop    %rbx
   1ff43:	5d                   	pop    %rbp
   1ff44:	41 5c                	pop    %r12
   1ff46:	41 5d                	pop    %r13
   1ff48:	41 5e                	pop    %r14
   1ff4a:	41 5f                	pop    %r15
   1ff4c:	c3                   	ret    

000000000001ff4d <destroy_menu>:
   1ff4d:	f3 0f 1e fa          	endbr64 
   1ff51:	41 54                	push   %r12
   1ff53:	55                   	push   %rbp
   1ff54:	48 89 fd             	mov    %rdi,%rbp
   1ff57:	53                   	push   %rbx
   1ff58:	48 8b 17             	mov    (%rdi),%rdx
   1ff5b:	4c 8d 65 20          	lea    0x20(%rbp),%r12
   1ff5f:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1ff63:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1ff67:	48 89 10             	mov    %rdx,(%rax)
   1ff6a:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   1ff6e:	48 8b 1f             	mov    (%rdi),%rbx
   1ff71:	4c 39 e7             	cmp    %r12,%rdi
   1ff74:	74 1b                	je     1ff91 <destroy_menu+0x44>
   1ff76:	48 8b 17             	mov    (%rdi),%rdx
   1ff79:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1ff7d:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1ff81:	48 89 10             	mov    %rdx,(%rax)
   1ff84:	e8 99 c7 fe ff       	call   c722 <free>
   1ff89:	48 89 df             	mov    %rbx,%rdi
   1ff8c:	48 8b 1b             	mov    (%rbx),%rbx
   1ff8f:	eb e0                	jmp    1ff71 <destroy_menu+0x24>
   1ff91:	5b                   	pop    %rbx
   1ff92:	48 89 ef             	mov    %rbp,%rdi
   1ff95:	5d                   	pop    %rbp
   1ff96:	41 5c                	pop    %r12
   1ff98:	e9 85 c7 fe ff       	jmp    c722 <free>

000000000001ff9d <find_menu>:
   1ff9d:	f3 0f 1e fa          	endbr64 
   1ffa1:	41 54                	push   %r12
   1ffa3:	4c 8b 25 36 7e 00 00 	mov    0x7e36(%rip),%r12        # 27de0 <menus>
   1ffaa:	55                   	push   %rbp
   1ffab:	48 8d 2d 2e 7e 00 00 	lea    0x7e2e(%rip),%rbp        # 27de0 <menus>
   1ffb2:	53                   	push   %rbx
   1ffb3:	48 89 fb             	mov    %rdi,%rbx
   1ffb6:	49 39 ec             	cmp    %rbp,%r12
   1ffb9:	74 1c                	je     1ffd7 <find_menu+0x3a>
   1ffbb:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   1ffc0:	48 39 df             	cmp    %rbx,%rdi
   1ffc3:	74 15                	je     1ffda <find_menu+0x3d>
   1ffc5:	48 89 de             	mov    %rbx,%rsi
   1ffc8:	e8 ef 39 ff ff       	call   139bc <strcmp>
   1ffcd:	85 c0                	test   %eax,%eax
   1ffcf:	74 09                	je     1ffda <find_menu+0x3d>
   1ffd1:	4d 8b 24 24          	mov    (%r12),%r12
   1ffd5:	eb df                	jmp    1ffb6 <find_menu+0x19>
   1ffd7:	45 31 e4             	xor    %r12d,%r12d
   1ffda:	4c 89 e0             	mov    %r12,%rax
   1ffdd:	5b                   	pop    %rbx
   1ffde:	5d                   	pop    %rbp
   1ffdf:	41 5c                	pop    %r12
   1ffe1:	c3                   	ret    

000000000001ffe2 <create_menu>:
   1ffe2:	f3 0f 1e fa          	endbr64 
   1ffe6:	41 56                	push   %r14
   1ffe8:	41 55                	push   %r13
   1ffea:	49 89 f5             	mov    %rsi,%r13
   1ffed:	41 54                	push   %r12
   1ffef:	55                   	push   %rbp
   1fff0:	48 89 fd             	mov    %rdi,%rbp
   1fff3:	53                   	push   %rbx
   1fff4:	e8 a4 ff ff ff       	call   1ff9d <find_menu>
   1fff9:	48 85 c0             	test   %rax,%rax
   1fffc:	74 08                	je     20006 <create_menu+0x24>
   1fffe:	48 89 c7             	mov    %rax,%rdi
   20001:	e8 47 ff ff ff       	call   1ff4d <destroy_menu>
   20006:	4d 85 ed             	test   %r13,%r13
   20009:	75 07                	jne    20012 <create_menu+0x30>
   2000b:	4c 8d 2d a2 44 00 00 	lea    0x44a2(%rip),%r13        # 244b4 <.LC0>
   20012:	31 db                	xor    %ebx,%ebx
   20014:	48 85 ed             	test   %rbp,%rbp
   20017:	74 0c                	je     20025 <create_menu+0x43>
   20019:	48 89 ef             	mov    %rbp,%rdi
   2001c:	e8 f5 39 ff ff       	call   13a16 <strlen>
   20021:	48 8d 58 01          	lea    0x1(%rax),%rbx
   20025:	4c 89 ef             	mov    %r13,%rdi
   20028:	e8 e9 39 ff ff       	call   13a16 <strlen>
   2002d:	48 8d 7c 03 31       	lea    0x31(%rbx,%rax,1),%rdi
   20032:	e8 ff c6 fe ff       	call   c736 <zalloc>
   20037:	49 89 c4             	mov    %rax,%r12
   2003a:	48 85 c0             	test   %rax,%rax
   2003d:	74 4a                	je     20089 <create_menu+0xa7>
   2003f:	4c 8d 70 30          	lea    0x30(%rax),%r14
   20043:	4c 01 f3             	add    %r14,%rbx
   20046:	48 85 ed             	test   %rbp,%rbp
   20049:	74 10                	je     2005b <create_menu+0x79>
   2004b:	48 89 ee             	mov    %rbp,%rsi
   2004e:	4c 89 f7             	mov    %r14,%rdi
   20051:	e8 40 3a ff ff       	call   13a96 <strcpy>
   20056:	4d 89 74 24 10       	mov    %r14,0x10(%r12)
   2005b:	4c 89 ee             	mov    %r13,%rsi
   2005e:	48 89 df             	mov    %rbx,%rdi
   20061:	e8 30 3a ff ff       	call   13a96 <strcpy>
   20066:	49 8d 44 24 20       	lea    0x20(%r12),%rax
   2006b:	4c 89 e7             	mov    %r12,%rdi
   2006e:	48 8d 35 6b 7d 00 00 	lea    0x7d6b(%rip),%rsi        # 27de0 <menus>
   20075:	49 89 5c 24 18       	mov    %rbx,0x18(%r12)
   2007a:	49 89 44 24 20       	mov    %rax,0x20(%r12)
   2007f:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   20084:	e8 1e c1 fe ff       	call   c1a7 <extern_list_add_tail>
   20089:	5b                   	pop    %rbx
   2008a:	4c 89 e0             	mov    %r12,%rax
   2008d:	5d                   	pop    %rbp
   2008e:	41 5c                	pop    %r12
   20090:	41 5d                	pop    %r13
   20092:	41 5e                	pop    %r14
   20094:	c3                   	ret    

0000000000020095 <netdev_clear>:
   20095:	f3 0f 1e fa          	endbr64 
   20099:	e9 de 15 ff ff       	jmp    1167c <generic_settings_clear>

000000000002009e <netdev_fetch>:
   2009e:	f3 0f 1e fa          	endbr64 
   200a2:	41 57                	push   %r15
   200a4:	4c 8d 3d b5 7d 00 00 	lea    0x7db5(%rip),%r15        # 27e60 <netdev_setting_operations>
   200ab:	41 56                	push   %r14
   200ad:	49 89 ce             	mov    %rcx,%r14
   200b0:	41 55                	push   %r13
   200b2:	49 89 d5             	mov    %rdx,%r13
   200b5:	41 54                	push   %r12
   200b7:	49 89 f4             	mov    %rsi,%r12
   200ba:	55                   	push   %rbp
   200bb:	48 89 fd             	mov    %rdi,%rbp
   200be:	53                   	push   %rbx
   200bf:	31 db                	xor    %ebx,%ebx
   200c1:	41 50                	push   %r8
   200c3:	49 8b 37             	mov    (%r15),%rsi
   200c6:	4c 89 e7             	mov    %r12,%rdi
   200c9:	e8 28 1a ff ff       	call   11af6 <setting_cmp>
   200ce:	48 8d 15 8b 7d 00 00 	lea    0x7d8b(%rip),%rdx        # 27e60 <netdev_setting_operations>
   200d5:	85 c0                	test   %eax,%eax
   200d7:	75 23                	jne    200fc <netdev_fetch+0x5e>
   200d9:	48 6b db 18          	imul   $0x18,%rbx,%rbx
   200dd:	48 8d bd 98 fe ff ff 	lea    -0x168(%rbp),%rdi
   200e4:	4c 89 ee             	mov    %r13,%rsi
   200e7:	48 8b 44 1a 10       	mov    0x10(%rdx,%rbx,1),%rax
   200ec:	59                   	pop    %rcx
   200ed:	4c 89 f2             	mov    %r14,%rdx
   200f0:	5b                   	pop    %rbx
   200f1:	5d                   	pop    %rbp
   200f2:	41 5c                	pop    %r12
   200f4:	41 5d                	pop    %r13
   200f6:	41 5e                	pop    %r14
   200f8:	41 5f                	pop    %r15
   200fa:	ff e0                	jmp    *%rax
   200fc:	ff c3                	inc    %ebx
   200fe:	49 83 c7 18          	add    $0x18,%r15
   20102:	83 fb 07             	cmp    $0x7,%ebx
   20105:	75 bc                	jne    200c3 <netdev_fetch+0x25>
   20107:	58                   	pop    %rax
   20108:	4c 89 f1             	mov    %r14,%rcx
   2010b:	5b                   	pop    %rbx
   2010c:	4c 89 ea             	mov    %r13,%rdx
   2010f:	4c 89 e6             	mov    %r12,%rsi
   20112:	48 89 ef             	mov    %rbp,%rdi
   20115:	5d                   	pop    %rbp
   20116:	41 5c                	pop    %r12
   20118:	41 5d                	pop    %r13
   2011a:	41 5e                	pop    %r14
   2011c:	41 5f                	pop    %r15
   2011e:	e9 4c 22 ff ff       	jmp    1236f <generic_settings_fetch>

0000000000020123 <netdev_fetch_ifname>:
   20123:	f3 0f 1e fa          	endbr64 
   20127:	55                   	push   %rbp
   20128:	49 89 f0             	mov    %rsi,%r8
   2012b:	48 8d 6f 34          	lea    0x34(%rdi),%rbp
   2012f:	48 89 ee             	mov    %rbp,%rsi
   20132:	4c 89 c7             	mov    %r8,%rdi
   20135:	e8 73 39 ff ff       	call   13aad <strncpy>
   2013a:	48 89 ef             	mov    %rbp,%rdi
   2013d:	e8 d4 38 ff ff       	call   13a16 <strlen>
   20142:	5d                   	pop    %rbp
   20143:	c3                   	ret    

0000000000020144 <netdev_fetch_chip>:
   20144:	f3 0f 1e fa          	endbr64 
   20148:	49 89 f8             	mov    %rdi,%r8
   2014b:	55                   	push   %rbp
   2014c:	48 89 f7             	mov    %rsi,%rdi
   2014f:	49 8b 40 40          	mov    0x40(%r8),%rax
   20153:	48 8b 68 28          	mov    0x28(%rax),%rbp
   20157:	48 89 ee             	mov    %rbp,%rsi
   2015a:	e8 4e 39 ff ff       	call   13aad <strncpy>
   2015f:	48 89 ef             	mov    %rbp,%rdi
   20162:	e8 af 38 ff ff       	call   13a16 <strlen>
   20167:	5d                   	pop    %rbp
   20168:	c3                   	ret    

0000000000020169 <netdev_store_mac>:
   20169:	f3 0f 1e fa          	endbr64 
   2016d:	51                   	push   %rcx
   2016e:	48 8b 47 50          	mov    0x50(%rdi),%rax
   20172:	48 85 f6             	test   %rsi,%rsi
   20175:	74 1f                	je     20196 <netdev_store_mac+0x2d>
   20177:	44 0f b6 40 43       	movzbl 0x43(%rax),%r8d
   2017c:	49 39 d0             	cmp    %rdx,%r8
   2017f:	74 07                	je     20188 <netdev_store_mac+0x1f>
   20181:	b8 7e 9f eb e3       	mov    $0xe3eb9f7e,%eax
   20186:	eb 1b                	jmp    201a3 <netdev_store_mac+0x3a>
   20188:	48 83 c7 60          	add    $0x60,%rdi
   2018c:	4c 89 c2             	mov    %r8,%rdx
   2018f:	e8 55 72 ff ff       	call   173e9 <__memcpy>
   20194:	eb 0b                	jmp    201a1 <netdev_store_mac+0x38>
   20196:	48 8d 77 60          	lea    0x60(%rdi),%rsi
   2019a:	48 83 c7 58          	add    $0x58,%rdi
   2019e:	ff 50 18             	call   *0x18(%rax)
   201a1:	31 c0                	xor    %eax,%eax
   201a3:	5a                   	pop    %rdx
   201a4:	c3                   	ret    

00000000000201a5 <netdev_fetch_mac>:
   201a5:	f3 0f 1e fa          	endbr64 
   201a9:	48 89 f8             	mov    %rdi,%rax
   201ac:	53                   	push   %rbx
   201ad:	49 89 d0             	mov    %rdx,%r8
   201b0:	48 89 f7             	mov    %rsi,%rdi
   201b3:	48 8b 50 50          	mov    0x50(%rax),%rdx
   201b7:	48 8d 70 60          	lea    0x60(%rax),%rsi
   201bb:	0f b6 52 43          	movzbl 0x43(%rdx),%edx
   201bf:	4c 39 c2             	cmp    %r8,%rdx
   201c2:	48 89 d3             	mov    %rdx,%rbx
   201c5:	49 0f 47 d0          	cmova  %r8,%rdx
   201c9:	e8 1b 72 ff ff       	call   173e9 <__memcpy>
   201ce:	0f b6 c3             	movzbl %bl,%eax
   201d1:	5b                   	pop    %rbx
   201d2:	c3                   	ret    

00000000000201d3 <netdev_fetch_hwaddr>:
   201d3:	f3 0f 1e fa          	endbr64 
   201d7:	48 89 f8             	mov    %rdi,%rax
   201da:	53                   	push   %rbx
   201db:	49 89 d0             	mov    %rdx,%r8
   201de:	48 89 f7             	mov    %rsi,%rdi
   201e1:	48 8b 50 50          	mov    0x50(%rax),%rdx
   201e5:	48 8d 70 58          	lea    0x58(%rax),%rsi
   201e9:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
   201ed:	4c 39 c2             	cmp    %r8,%rdx
   201f0:	48 89 d3             	mov    %rdx,%rbx
   201f3:	49 0f 47 d0          	cmova  %r8,%rdx
   201f7:	e8 ed 71 ff ff       	call   173e9 <__memcpy>
   201fc:	0f b6 c3             	movzbl %bl,%eax
   201ff:	5b                   	pop    %rbx
   20200:	c3                   	ret    

0000000000020201 <netdev_fetch_busid>:
   20201:	f3 0f 1e fa          	endbr64 
   20205:	49 89 f8             	mov    %rdi,%r8
   20208:	48 83 ec 18          	sub    $0x18,%rsp
   2020c:	48 89 f7             	mov    %rsi,%rdi
   2020f:	48 8b 05 3a 9e 00 00 	mov    0x9e3a(%rip),%rax        # 2a050 <__stack_chk_guard>
   20216:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2021b:	31 c0                	xor    %eax,%eax
   2021d:	49 8b 48 40          	mov    0x40(%r8),%rcx
   20221:	48 8d 74 24 03       	lea    0x3(%rsp),%rsi
   20226:	8b 41 30             	mov    0x30(%rcx),%eax
   20229:	88 44 24 03          	mov    %al,0x3(%rsp)
   2022d:	8b 41 38             	mov    0x38(%rcx),%eax
   20230:	86 c4                	xchg   %al,%ah
   20232:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
   20237:	8b 41 3c             	mov    0x3c(%rcx),%eax
   2023a:	86 c4                	xchg   %al,%ah
   2023c:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
   20241:	b8 05 00 00 00       	mov    $0x5,%eax
   20246:	48 39 c2             	cmp    %rax,%rdx
   20249:	48 0f 47 d0          	cmova  %rax,%rdx
   2024d:	e8 97 71 ff ff       	call   173e9 <__memcpy>
   20252:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   20257:	48 2b 05 f2 9d 00 00 	sub    0x9df2(%rip),%rax        # 2a050 <__stack_chk_guard>
   2025e:	74 05                	je     20265 <netdev_fetch_busid+0x64>
   20260:	e8 fb 27 fe ff       	call   2a60 <__stack_chk_fail>
   20265:	b8 05 00 00 00       	mov    $0x5,%eax
   2026a:	48 83 c4 18          	add    $0x18,%rsp
   2026e:	c3                   	ret    

000000000002026f <netdev_fetch_busloc>:
   2026f:	f3 0f 1e fa          	endbr64 
   20273:	48 83 ec 18          	sub    $0x18,%rsp
   20277:	49 89 f8             	mov    %rdi,%r8
   2027a:	48 89 f7             	mov    %rsi,%rdi
   2027d:	48 8b 05 cc 9d 00 00 	mov    0x9dcc(%rip),%rax        # 2a050 <__stack_chk_guard>
   20284:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20289:	49 8b 40 40          	mov    0x40(%r8),%rax
   2028d:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   20292:	8b 40 34             	mov    0x34(%rax),%eax
   20295:	0f c8                	bswap  %eax
   20297:	89 44 24 04          	mov    %eax,0x4(%rsp)
   2029b:	b8 04 00 00 00       	mov    $0x4,%eax
   202a0:	48 39 c2             	cmp    %rax,%rdx
   202a3:	48 0f 47 d0          	cmova  %rax,%rdx
   202a7:	e8 3d 71 ff ff       	call   173e9 <__memcpy>
   202ac:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   202b1:	48 2b 05 98 9d 00 00 	sub    0x9d98(%rip),%rax        # 2a050 <__stack_chk_guard>
   202b8:	74 05                	je     202bf <netdev_fetch_busloc+0x50>
   202ba:	e8 a1 27 fe ff       	call   2a60 <__stack_chk_fail>
   202bf:	b8 04 00 00 00       	mov    $0x4,%eax
   202c4:	48 83 c4 18          	add    $0x18,%rsp
   202c8:	c3                   	ret    

00000000000202c9 <netdev_store>:
   202c9:	f3 0f 1e fa          	endbr64 
   202cd:	41 57                	push   %r15
   202cf:	4c 8d 3d 8a 7b 00 00 	lea    0x7b8a(%rip),%r15        # 27e60 <netdev_setting_operations>
   202d6:	41 56                	push   %r14
   202d8:	49 89 ce             	mov    %rcx,%r14
   202db:	41 55                	push   %r13
   202dd:	49 89 d5             	mov    %rdx,%r13
   202e0:	41 54                	push   %r12
   202e2:	49 89 f4             	mov    %rsi,%r12
   202e5:	55                   	push   %rbp
   202e6:	48 89 fd             	mov    %rdi,%rbp
   202e9:	53                   	push   %rbx
   202ea:	31 db                	xor    %ebx,%ebx
   202ec:	41 52                	push   %r10
   202ee:	49 8b 37             	mov    (%r15),%rsi
   202f1:	4c 89 e7             	mov    %r12,%rdi
   202f4:	e8 fd 17 ff ff       	call   11af6 <setting_cmp>
   202f9:	48 8d 15 60 7b 00 00 	lea    0x7b60(%rip),%rdx        # 27e60 <netdev_setting_operations>
   20300:	85 c0                	test   %eax,%eax
   20302:	75 29                	jne    2032d <netdev_store+0x64>
   20304:	48 6b db 18          	imul   $0x18,%rbx,%rbx
   20308:	48 8b 44 1a 08       	mov    0x8(%rdx,%rbx,1),%rax
   2030d:	48 85 c0             	test   %rax,%rax
   20310:	74 43                	je     20355 <netdev_store+0x8c>
   20312:	41 59                	pop    %r9
   20314:	48 8d bd 98 fe ff ff 	lea    -0x168(%rbp),%rdi
   2031b:	5b                   	pop    %rbx
   2031c:	4c 89 f2             	mov    %r14,%rdx
   2031f:	5d                   	pop    %rbp
   20320:	4c 89 ee             	mov    %r13,%rsi
   20323:	41 5c                	pop    %r12
   20325:	41 5d                	pop    %r13
   20327:	41 5e                	pop    %r14
   20329:	41 5f                	pop    %r15
   2032b:	ff e0                	jmp    *%rax
   2032d:	ff c3                	inc    %ebx
   2032f:	49 83 c7 18          	add    $0x18,%r15
   20333:	83 fb 07             	cmp    $0x7,%ebx
   20336:	75 b6                	jne    202ee <netdev_store+0x25>
   20338:	41 58                	pop    %r8
   2033a:	4c 89 f1             	mov    %r14,%rcx
   2033d:	5b                   	pop    %rbx
   2033e:	4c 89 ea             	mov    %r13,%rdx
   20341:	4c 89 e6             	mov    %r12,%rsi
   20344:	48 89 ef             	mov    %rbp,%rdi
   20347:	5d                   	pop    %rbp
   20348:	41 5c                	pop    %r12
   2034a:	41 5d                	pop    %r13
   2034c:	41 5e                	pop    %r14
   2034e:	41 5f                	pop    %r15
   20350:	e9 e7 17 ff ff       	jmp    11b3c <generic_settings_store>
   20355:	b8 7d 9f eb c3       	mov    $0xc3eb9f7d,%eax
   2035a:	5a                   	pop    %rdx
   2035b:	5b                   	pop    %rbx
   2035c:	5d                   	pop    %rbp
   2035d:	41 5c                	pop    %r12
   2035f:	41 5d                	pop    %r13
   20361:	41 5e                	pop    %r14
   20363:	41 5f                	pop    %r15
   20365:	c3                   	ret    

0000000000020366 <netdev_redirect_settings_init>:
   20366:	f3 0f 1e fa          	endbr64 
   2036a:	48 8d 15 10 32 00 00 	lea    0x3210(%rip),%rdx        # 23581 <.LC0>
   20371:	31 f6                	xor    %esi,%esi
   20373:	48 8d 3d a6 7b 00 00 	lea    0x7ba6(%rip),%rdi        # 27f20 <netdev_redirect_settings>
   2037a:	e9 1b 1d ff ff       	jmp    1209a <register_settings>

000000000002037f <netdev_redirect>:
   2037f:	f3 0f 1e fa          	endbr64 
   20383:	41 54                	push   %r12
   20385:	49 89 fc             	mov    %rdi,%r12
   20388:	e8 39 dd fe ff       	call   e0c6 <last_opened_netdev>
   2038d:	48 85 c0             	test   %rax,%rax
   20390:	74 07                	je     20399 <netdev_redirect+0x1a>
   20392:	4c 8d a0 68 01 00 00 	lea    0x168(%rax),%r12
   20399:	4c 89 e0             	mov    %r12,%rax
   2039c:	41 5c                	pop    %r12
   2039e:	c3                   	ret    

000000000002039f <apply_netdev_settings>:
   2039f:	f3 0f 1e fa          	endbr64 
   203a3:	55                   	push   %rbp
   203a4:	48 8d 2d 55 66 00 00 	lea    0x6655(%rip),%rbp        # 26a00 <net_devices>
   203ab:	53                   	push   %rbx
   203ac:	51                   	push   %rcx
   203ad:	48 8b 05 4c 66 00 00 	mov    0x664c(%rip),%rax        # 26a00 <net_devices>
   203b4:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
   203b8:	48 8d 43 10          	lea    0x10(%rbx),%rax
   203bc:	48 39 e8             	cmp    %rbp,%rax
   203bf:	74 6d                	je     2042e <apply_netdev_settings+0x8f>
   203c1:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
   203c8:	48 8d 35 f1 8f 00 00 	lea    0x8ff1(%rip),%rsi        # 293c0 <mtu_setting>
   203cf:	e8 34 1e ff ff       	call   12208 <fetch_uintz_setting>
   203d4:	48 85 c0             	test   %rax,%rax
   203d7:	75 0a                	jne    203e3 <apply_netdev_settings+0x44>
   203d9:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   203dd:	48 83 eb 10          	sub    $0x10,%rbx
   203e1:	eb d5                	jmp    203b8 <apply_netdev_settings+0x19>
   203e3:	48 8b 53 50          	mov    0x50(%rbx),%rdx
   203e7:	0f b6 4a 44          	movzbl 0x44(%rdx),%ecx
   203eb:	48 8b 93 d8 00 00 00 	mov    0xd8(%rbx),%rdx
   203f2:	48 29 ca             	sub    %rcx,%rdx
   203f5:	48 39 c2             	cmp    %rax,%rdx
   203f8:	48 0f 46 c2          	cmovbe %rdx,%rax
   203fc:	48 8b 93 e0 00 00 00 	mov    0xe0(%rbx),%rdx
   20403:	48 89 83 e0 00 00 00 	mov    %rax,0xe0(%rbx)
   2040a:	48 39 c2             	cmp    %rax,%rdx
   2040d:	73 ca                	jae    203d9 <apply_netdev_settings+0x3a>
   2040f:	f6 83 80 00 00 00 01 	testb  $0x1,0x80(%rbx)
   20416:	74 c1                	je     203d9 <apply_netdev_settings+0x3a>
   20418:	48 89 df             	mov    %rbx,%rdi
   2041b:	e8 35 db fe ff       	call   df55 <netdev_close>
   20420:	48 89 df             	mov    %rbx,%rdi
   20423:	e8 d6 da fe ff       	call   defe <netdev_open>
   20428:	85 c0                	test   %eax,%eax
   2042a:	74 ad                	je     203d9 <apply_netdev_settings+0x3a>
   2042c:	eb 02                	jmp    20430 <apply_netdev_settings+0x91>
   2042e:	31 c0                	xor    %eax,%eax
   20430:	5a                   	pop    %rdx
   20431:	5b                   	pop    %rbx
   20432:	5d                   	pop    %rbp
   20433:	c3                   	ret    

0000000000020434 <netdev_fetch_bustype>:
   20434:	f3 0f 1e fa          	endbr64 
   20438:	55                   	push   %rbp
   20439:	48 8b 47 40          	mov    0x40(%rdi),%rax
   2043d:	8b 48 30             	mov    0x30(%rax),%ecx
   20440:	48 8d 05 b9 79 00 00 	lea    0x79b9(%rip),%rax        # 27e00 <bustypes.0>
   20447:	48 8b 2c c8          	mov    (%rax,%rcx,8),%rbp
   2044b:	48 85 ed             	test   %rbp,%rbp
   2044e:	75 07                	jne    20457 <netdev_fetch_bustype+0x23>
   20450:	b8 72 9f eb d2       	mov    $0xd2eb9f72,%eax
   20455:	eb 13                	jmp    2046a <netdev_fetch_bustype+0x36>
   20457:	48 89 f7             	mov    %rsi,%rdi
   2045a:	48 89 ee             	mov    %rbp,%rsi
   2045d:	e8 4b 36 ff ff       	call   13aad <strncpy>
   20462:	48 89 ef             	mov    %rbp,%rdi
   20465:	e8 ac 35 ff ff       	call   13a16 <strlen>
   2046a:	5d                   	pop    %rbp
   2046b:	c3                   	ret    

000000000002046c <find_parameters>:
   2046c:	f3 0f 1e fa          	endbr64 
   20470:	48 8b 05 79 7b 00 00 	mov    0x7b79(%rip),%rax        # 27ff0 <parameters>
   20477:	41 54                	push   %r12
   20479:	55                   	push   %rbp
   2047a:	48 8d 2d 6f 7b 00 00 	lea    0x7b6f(%rip),%rbp        # 27ff0 <parameters>
   20481:	53                   	push   %rbx
   20482:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
   20486:	48 89 fb             	mov    %rdi,%rbx
   20489:	49 8d 44 24 10       	lea    0x10(%r12),%rax
   2048e:	48 39 e8             	cmp    %rbp,%rax
   20491:	74 21                	je     204b4 <find_parameters+0x48>
   20493:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   20498:	48 39 df             	cmp    %rbx,%rdi
   2049b:	74 1a                	je     204b7 <find_parameters+0x4b>
   2049d:	48 89 de             	mov    %rbx,%rsi
   204a0:	e8 17 35 ff ff       	call   139bc <strcmp>
   204a5:	85 c0                	test   %eax,%eax
   204a7:	74 0e                	je     204b7 <find_parameters+0x4b>
   204a9:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
   204ae:	49 83 ec 10          	sub    $0x10,%r12
   204b2:	eb d5                	jmp    20489 <find_parameters+0x1d>
   204b4:	45 31 e4             	xor    %r12d,%r12d
   204b7:	4c 89 e0             	mov    %r12,%rax
   204ba:	5b                   	pop    %rbx
   204bb:	5d                   	pop    %rbp
   204bc:	41 5c                	pop    %r12
   204be:	c3                   	ret    

00000000000204bf <pending_get>:
   204bf:	f3 0f 1e fa          	endbr64 
   204c3:	ff 07                	incl   (%rdi)
   204c5:	ff 05 e5 9b 00 00    	incl   0x9be5(%rip)        # 2a0b0 <pending_total>
   204cb:	c3                   	ret    

00000000000204cc <pending_put>:
   204cc:	f3 0f 1e fa          	endbr64 
   204d0:	83 3f 00             	cmpl   $0x0,(%rdi)
   204d3:	74 08                	je     204dd <pending_put+0x11>
   204d5:	ff 0d d5 9b 00 00    	decl   0x9bd5(%rip)        # 2a0b0 <pending_total>
   204db:	ff 0f                	decl   (%rdi)
   204dd:	c3                   	ret    

00000000000204de <prompt>:
   204de:	f3 0f 1e fa          	endbr64 
   204e2:	41 55                	push   %r13
   204e4:	31 c0                	xor    %eax,%eax
   204e6:	4c 8d 2d c4 3f 00 00 	lea    0x3fc4(%rip),%r13        # 244b1 <.LC1>
   204ed:	41 54                	push   %r12
   204ef:	49 89 f4             	mov    %rsi,%r12
   204f2:	48 89 fe             	mov    %rdi,%rsi
   204f5:	55                   	push   %rbp
   204f6:	89 d5                	mov    %edx,%ebp
   204f8:	53                   	push   %rbx
   204f9:	48 89 fb             	mov    %rdi,%rbx
   204fc:	48 8d 3d fe 31 00 00 	lea    0x31fe(%rip),%rdi        # 23701 <.LC0>
   20503:	51                   	push   %rcx
   20504:	e8 71 6d ff ff       	call   1727a <printf>
   20509:	4c 89 e7             	mov    %r12,%rdi
   2050c:	e8 2a df ff ff       	call   1e43b <getkey>
   20511:	41 89 c4             	mov    %eax,%r12d
   20514:	48 ff c3             	inc    %rbx
   20517:	80 7b ff 00          	cmpb   $0x0,-0x1(%rbx)
   2051b:	74 0c                	je     20529 <prompt+0x4b>
   2051d:	4c 89 ef             	mov    %r13,%rdi
   20520:	31 c0                	xor    %eax,%eax
   20522:	e8 53 6d ff ff       	call   1727a <printf>
   20527:	eb eb                	jmp    20514 <prompt+0x36>
   20529:	45 85 e4             	test   %r12d,%r12d
   2052c:	79 07                	jns    20535 <prompt+0x57>
   2052e:	b8 6e 1f dd b3       	mov    $0xb3dd1f6e,%eax
   20533:	eb 12                	jmp    20547 <prompt+0x69>
   20535:	85 ed                	test   %ebp,%ebp
   20537:	74 0c                	je     20545 <prompt+0x67>
   20539:	41 39 ec             	cmp    %ebp,%r12d
   2053c:	74 07                	je     20545 <prompt+0x67>
   2053e:	b8 6b 1f dd f4       	mov    $0xf4dd1f6b,%eax
   20543:	eb 02                	jmp    20547 <prompt+0x69>
   20545:	31 c0                	xor    %eax,%eax
   20547:	5a                   	pop    %rdx
   20548:	5b                   	pop    %rbx
   20549:	5d                   	pop    %rbp
   2054a:	41 5c                	pop    %r12
   2054c:	41 5d                	pop    %r13
   2054e:	c3                   	ret    

000000000002054f <route>:
   2054f:	f3 0f 1e fa          	endbr64 
   20553:	41 55                	push   %r13
   20555:	41 54                	push   %r12
   20557:	4c 8d 25 a2 64 00 00 	lea    0x64a2(%rip),%r12        # 26a00 <net_devices>
   2055e:	55                   	push   %rbp
   2055f:	53                   	push   %rbx
   20560:	52                   	push   %rdx
   20561:	48 8b 05 98 64 00 00 	mov    0x6498(%rip),%rax        # 26a00 <net_devices>
   20568:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
   2056c:	48 8d 43 10          	lea    0x10(%rbx),%rax
   20570:	4c 39 e0             	cmp    %r12,%rax
   20573:	74 29                	je     2059e <route+0x4f>
   20575:	48 8d 2d 7c 8a 00 00 	lea    0x8a7c(%rip),%rbp        # 28ff8 <ipv4_routing_family>
   2057c:	4c 8d 2d 7d 8a 00 00 	lea    0x8a7d(%rip),%r13        # 29000 <setting_type_dnssl>
   20583:	4c 39 ed             	cmp    %r13,%rbp
   20586:	73 0c                	jae    20594 <route+0x45>
   20588:	48 89 df             	mov    %rbx,%rdi
   2058b:	ff 55 00             	call   *0x0(%rbp)
   2058e:	48 83 c5 08          	add    $0x8,%rbp
   20592:	eb ef                	jmp    20583 <route+0x34>
   20594:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   20598:	48 83 eb 10          	sub    $0x10,%rbx
   2059c:	eb ce                	jmp    2056c <route+0x1d>
   2059e:	58                   	pop    %rax
   2059f:	5b                   	pop    %rbx
   205a0:	5d                   	pop    %rbp
   205a1:	41 5c                	pop    %r12
   205a3:	41 5d                	pop    %r13
   205a5:	c3                   	ret    

00000000000205a6 <sandev_command_capacity>:
   205a6:	f3 0f 1e fa          	endbr64 
   205aa:	48 81 c7 a0 00 00 00 	add    $0xa0,%rdi
   205b1:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   205b2:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   205b3:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   205b4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   205b5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   205b6:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   205b7:	c3                   	ret    

00000000000205b8 <sanpath_block_window>:
   205b8:	f3 0f 1e fa          	endbr64 
   205bc:	31 c0                	xor    %eax,%eax
   205be:	c3                   	ret    

00000000000205bf <sandev_command_rw>:
   205bf:	f3 0f 1e fa          	endbr64 
   205c3:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
   205ca:	44 8b 4e 18          	mov    0x18(%rsi),%r9d
   205ce:	4c 8d 5f 28          	lea    0x28(%rdi),%r11
   205d2:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   205d6:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   205da:	4c 8d 50 28          	lea    0x28(%rax),%r10
   205de:	4c 89 c9             	mov    %r9,%rcx
   205e1:	48 8b 06             	mov    (%rsi),%rax
   205e4:	4c 89 de             	mov    %r11,%rsi
   205e7:	4c 0f af 8f a8 00 00 	imul   0xa8(%rdi),%r9
   205ee:	00 
   205ef:	4c 89 d7             	mov    %r10,%rdi
   205f2:	ff e0                	jmp    *%rax

00000000000205f4 <sandev_undescribe>:
   205f4:	41 54                	push   %r12
   205f6:	49 89 fc             	mov    %rdi,%r12
   205f9:	55                   	push   %rbp
   205fa:	31 ed                	xor    %ebp,%ebp
   205fc:	53                   	push   %rbx
   205fd:	41 39 ac 24 c8 00 00 	cmp    %ebp,0xc8(%r12)
   20604:	00 
   20605:	76 29                	jbe    20630 <sandev_undescribe+0x3c>
   20607:	89 eb                	mov    %ebp,%ebx
   20609:	48 6b db 78          	imul   $0x78,%rbx,%rbx
   2060d:	4c 01 e3             	add    %r12,%rbx
   20610:	48 8b bb 68 01 00 00 	mov    0x168(%rbx),%rdi
   20617:	48 85 ff             	test   %rdi,%rdi
   2061a:	74 10                	je     2062c <sandev_undescribe+0x38>
   2061c:	e8 79 75 ff ff       	call   17b9a <acpi_del>
   20621:	48 c7 83 68 01 00 00 	movq   $0x0,0x168(%rbx)
   20628:	00 00 00 00 
   2062c:	ff c5                	inc    %ebp
   2062e:	eb cd                	jmp    205fd <sandev_undescribe+0x9>
   20630:	5b                   	pop    %rbx
   20631:	5d                   	pop    %rbp
   20632:	41 5c                	pop    %r12
   20634:	c3                   	ret    

0000000000020635 <sandev_command_close>:
   20635:	f3 0f 1e fa          	endbr64 
   20639:	55                   	push   %rbp
   2063a:	89 f5                	mov    %esi,%ebp
   2063c:	53                   	push   %rbx
   2063d:	48 89 fb             	mov    %rdi,%rbx
   20640:	48 8d 7f 48          	lea    0x48(%rdi),%rdi
   20644:	50                   	push   %rax
   20645:	e8 62 fd fe ff       	call   103ac <stop_timer>
   2064a:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   2064e:	89 ee                	mov    %ebp,%esi
   20650:	e8 c3 92 fe ff       	call   9918 <intf_restart>
   20655:	89 ab 98 00 00 00    	mov    %ebp,0x98(%rbx)
   2065b:	5a                   	pop    %rdx
   2065c:	5b                   	pop    %rbx
   2065d:	5d                   	pop    %rbp
   2065e:	c3                   	ret    

000000000002065f <sandev_command_expired>:
   2065f:	f3 0f 1e fa          	endbr64 
   20663:	be 6e df dc b3       	mov    $0xb3dcdf6e,%esi
   20668:	48 83 ef 48          	sub    $0x48,%rdi
   2066c:	e9 c4 ff ff ff       	jmp    20635 <sandev_command_close>

0000000000020671 <sandev_free>:
   20671:	f3 0f 1e fa          	endbr64 
   20675:	55                   	push   %rbp
   20676:	48 89 fd             	mov    %rdi,%rbp
   20679:	53                   	push   %rbx
   2067a:	31 db                	xor    %ebx,%ebx
   2067c:	52                   	push   %rdx
   2067d:	3b 9d c8 00 00 00    	cmp    0xc8(%rbp),%ebx
   20683:	73 17                	jae    2069c <sandev_free+0x2b>
   20685:	89 d8                	mov    %ebx,%eax
   20687:	ff c3                	inc    %ebx
   20689:	48 6b c0 78          	imul   $0x78,%rax,%rax
   2068d:	48 8b bc 05 08 01 00 	mov    0x108(%rbp,%rax,1),%rdi
   20694:	00 
   20695:	e8 80 f8 fe ff       	call   ff1a <ref_decrement>
   2069a:	eb e1                	jmp    2067d <sandev_free+0xc>
   2069c:	58                   	pop    %rax
   2069d:	48 89 ef             	mov    %rbp,%rdi
   206a0:	5b                   	pop    %rbx
   206a1:	5d                   	pop    %rbp
   206a2:	e9 7b c0 fe ff       	jmp    c722 <free>

00000000000206a7 <sandev_command_read_capacity>:
   206a7:	f3 0f 1e fa          	endbr64 
   206ab:	48 8d 77 28          	lea    0x28(%rdi),%rsi
   206af:	48 8b bf d0 00 00 00 	mov    0xd0(%rdi),%rdi
   206b6:	48 83 c7 28          	add    $0x28,%rdi
   206ba:	e9 8d 88 ff ff       	jmp    18f4c <block_read_capacity>

00000000000206bf <sandev_apply>:
   206bf:	f3 0f 1e fa          	endbr64 
   206c3:	51                   	push   %rcx
   206c4:	31 ff                	xor    %edi,%edi
   206c6:	48 8d 15 8b 44 00 00 	lea    0x448b(%rip),%rdx        # 24b58 <san_retries>
   206cd:	48 8d 35 44 8f 00 00 	lea    0x8f44(%rip),%rsi        # 29618 <san_retries_setting>
   206d4:	e8 d5 18 ff ff       	call   11fae <fetch_uint_setting>
   206d9:	85 c0                	test   %eax,%eax
   206db:	79 0b                	jns    206e8 <sandev_apply+0x29>
   206dd:	48 c7 05 70 44 00 00 	movq   $0xa,0x4470(%rip)        # 24b58 <san_retries>
   206e4:	0a 00 00 00 
   206e8:	31 c0                	xor    %eax,%eax
   206ea:	5a                   	pop    %rdx
   206eb:	c3                   	ret    

00000000000206ec <sanpath_close>:
   206ec:	41 54                	push   %r12
   206ee:	55                   	push   %rbp
   206ef:	89 f5                	mov    %esi,%ebp
   206f1:	53                   	push   %rbx
   206f2:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   206f6:	48 89 fb             	mov    %rdi,%rbx
   206f9:	48 83 c7 18          	add    $0x18,%rdi
   206fd:	48 8b 47 08          	mov    0x8(%rdi),%rax
   20701:	4c 8b 67 e8          	mov    -0x18(%rdi),%r12
   20705:	89 77 50             	mov    %esi,0x50(%rdi)
   20708:	48 89 42 08          	mov    %rax,0x8(%rdx)
   2070c:	49 8d b4 24 e8 00 00 	lea    0xe8(%r12),%rsi
   20713:	00 
   20714:	48 89 10             	mov    %rdx,(%rax)
   20717:	e8 8b ba fe ff       	call   c1a7 <extern_list_add_tail>
   2071c:	48 8d 7b 48          	lea    0x48(%rbx),%rdi
   20720:	e8 3b f3 fe ff       	call   fa60 <process_del>
   20725:	48 8d 53 28          	lea    0x28(%rbx),%rdx
   20729:	49 3b 9c 24 d0 00 00 	cmp    0xd0(%r12),%rbx
   20730:	00 
   20731:	75 2a                	jne    2075d <sanpath_close+0x71>
   20733:	49 8d 74 24 28       	lea    0x28(%r12),%rsi
   20738:	89 ef                	mov    %ebp,%edi
   2073a:	31 c9                	xor    %ecx,%ecx
   2073c:	31 c0                	xor    %eax,%eax
   2073e:	e8 60 94 fe ff       	call   9ba3 <intfs_restart>
   20743:	89 ee                	mov    %ebp,%esi
   20745:	4c 89 e7             	mov    %r12,%rdi
   20748:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
   2074f:	00 00 00 00 00 
   20754:	5b                   	pop    %rbx
   20755:	5d                   	pop    %rbp
   20756:	41 5c                	pop    %r12
   20758:	e9 d8 fe ff ff       	jmp    20635 <sandev_command_close>
   2075d:	5b                   	pop    %rbx
   2075e:	89 ee                	mov    %ebp,%esi
   20760:	48 89 d7             	mov    %rdx,%rdi
   20763:	5d                   	pop    %rbp
   20764:	41 5c                	pop    %r12
   20766:	e9 ad 91 fe ff       	jmp    9918 <intf_restart>

000000000002076b <sanpath_block_close>:
   2076b:	f3 0f 1e fa          	endbr64 
   2076f:	85 f6                	test   %esi,%esi
   20771:	75 05                	jne    20778 <sanpath_block_close+0xd>
   20773:	be 6d df dc c7       	mov    $0xc7dcdf6d,%esi
   20778:	e9 6f ff ff ff       	jmp    206ec <sanpath_close>

000000000002077d <sandev_restart>:
   2077d:	55                   	push   %rbp
   2077e:	48 89 fd             	mov    %rdi,%rbp
   20781:	53                   	push   %rbx
   20782:	48 8d 9f d8 00 00 00 	lea    0xd8(%rdi),%rbx
   20789:	48 83 ec 18          	sub    $0x18,%rsp
   2078d:	48 8b bd d8 00 00 00 	mov    0xd8(%rbp),%rdi
   20794:	48 39 df             	cmp    %rbx,%rdi
   20797:	74 13                	je     207ac <sandev_restart+0x2f>
   20799:	48 83 ef 18          	sub    $0x18,%rdi
   2079d:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   207a1:	e8 46 ff ff ff       	call   206ec <sanpath_close>
   207a6:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   207aa:	eb e1                	jmp    2078d <sandev_restart+0x10>
   207ac:	48 c7 85 d0 00 00 00 	movq   $0x0,0xd0(%rbp)
   207b3:	00 00 00 00 
   207b7:	48 83 c4 18          	add    $0x18,%rsp
   207bb:	48 89 ef             	mov    %rbp,%rdi
   207be:	5b                   	pop    %rbx
   207bf:	5d                   	pop    %rbp
   207c0:	e9 70 fe ff ff       	jmp    20635 <sandev_command_close>

00000000000207c5 <sanpath_step>:
   207c5:	f3 0f 1e fa          	endbr64 
   207c9:	55                   	push   %rbp
   207ca:	53                   	push   %rbx
   207cb:	51                   	push   %rcx
   207cc:	48 8b 1f             	mov    (%rdi),%rbx
   207cf:	48 39 bb d0 00 00 00 	cmp    %rdi,0xd0(%rbx)
   207d6:	74 38                	je     20810 <sanpath_step+0x4b>
   207d8:	48 89 fd             	mov    %rdi,%rbp
   207db:	48 8d 7f 28          	lea    0x28(%rdi),%rdi
   207df:	e8 30 6d ff ff       	call   17514 <xfer_window>
   207e4:	48 85 c0             	test   %rax,%rax
   207e7:	74 27                	je     20810 <sanpath_step+0x4b>
   207e9:	48 83 bb d0 00 00 00 	cmpq   $0x0,0xd0(%rbx)
   207f0:	00 
   207f1:	c7 45 68 00 00 00 00 	movl   $0x0,0x68(%rbp)
   207f8:	75 09                	jne    20803 <sanpath_step+0x3e>
   207fa:	48 89 ab d0 00 00 00 	mov    %rbp,0xd0(%rbx)
   20801:	eb 0d                	jmp    20810 <sanpath_step+0x4b>
   20803:	5a                   	pop    %rdx
   20804:	48 89 ef             	mov    %rbp,%rdi
   20807:	5b                   	pop    %rbx
   20808:	31 f6                	xor    %esi,%esi
   2080a:	5d                   	pop    %rbp
   2080b:	e9 dc fe ff ff       	jmp    206ec <sanpath_close>
   20810:	58                   	pop    %rax
   20811:	5b                   	pop    %rbx
   20812:	5d                   	pop    %rbp
   20813:	c3                   	ret    

0000000000020814 <sandev_find>:
   20814:	f3 0f 1e fa          	endbr64 
   20818:	48 8b 05 a1 78 00 00 	mov    0x78a1(%rip),%rax        # 280c0 <san_devices>
   2081f:	48 8d 15 9a 78 00 00 	lea    0x789a(%rip),%rdx        # 280c0 <san_devices>
   20826:	48 83 e8 10          	sub    $0x10,%rax
   2082a:	48 8d 48 10          	lea    0x10(%rax),%rcx
   2082e:	48 39 d1             	cmp    %rdx,%rcx
   20831:	74 0f                	je     20842 <sandev_find+0x2e>
   20833:	39 78 20             	cmp    %edi,0x20(%rax)
   20836:	74 0c                	je     20844 <sandev_find+0x30>
   20838:	48 8b 40 10          	mov    0x10(%rax),%rax
   2083c:	48 83 e8 10          	sub    $0x10,%rax
   20840:	eb e8                	jmp    2082a <sandev_find+0x16>
   20842:	31 c0                	xor    %eax,%eax
   20844:	c3                   	ret    

0000000000020845 <sandev_reopen>:
   20845:	f3 0f 1e fa          	endbr64 
   20849:	41 57                	push   %r15
   2084b:	41 56                	push   %r14
   2084d:	41 55                	push   %r13
   2084f:	41 54                	push   %r12
   20851:	55                   	push   %rbp
   20852:	48 89 fd             	mov    %rdi,%rbp
   20855:	53                   	push   %rbx
   20856:	51                   	push   %rcx
   20857:	e8 3d 0b 00 00       	call   21399 <unquiesce>
   2085c:	be 6b df dc f0       	mov    $0xf0dcdf6b,%esi
   20861:	48 89 ef             	mov    %rbp,%rdi
   20864:	4c 8d bd e8 00 00 00 	lea    0xe8(%rbp),%r15
   2086b:	e8 0d ff ff ff       	call   2077d <sandev_restart>
   20870:	48 8b 9d e8 00 00 00 	mov    0xe8(%rbp),%rbx
   20877:	4c 39 fb             	cmp    %r15,%rbx
   2087a:	75 0c                	jne    20888 <sandev_reopen+0x43>
   2087c:	4c 8d a5 d8 00 00 00 	lea    0xd8(%rbp),%r12
   20883:	e9 8d 00 00 00       	jmp    20915 <sandev_reopen+0xd0>
   20888:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
   2088c:	4c 8d 73 10          	lea    0x10(%rbx),%r14
   20890:	4c 8b 6b e8          	mov    -0x18(%rbx),%r13
   20894:	4c 89 f7             	mov    %r14,%rdi
   20897:	e8 53 e2 fe ff       	call   eaef <xfer_open_uri>
   2089c:	41 89 c4             	mov    %eax,%r12d
   2089f:	85 c0                	test   %eax,%eax
   208a1:	0f 85 97 00 00 00    	jne    2093e <sandev_reopen+0xf9>
   208a7:	41 f6 45 24 01       	testb  $0x1,0x24(%r13)
   208ac:	75 27                	jne    208d5 <sandev_reopen+0x90>
   208ae:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
   208b2:	48 85 ff             	test   %rdi,%rdi
   208b5:	74 05                	je     208bc <sandev_reopen+0x77>
   208b7:	e8 de 72 ff ff       	call   17b9a <acpi_del>
   208bc:	4c 89 f7             	mov    %r14,%rdi
   208bf:	e8 32 72 ff ff       	call   17af6 <acpi_describe>
   208c4:	48 89 43 58          	mov    %rax,0x58(%rbx)
   208c8:	48 89 c7             	mov    %rax,%rdi
   208cb:	48 85 c0             	test   %rax,%rax
   208ce:	74 05                	je     208d5 <sandev_reopen+0x90>
   208d0:	e8 a7 72 ff ff       	call   17b7c <acpi_add>
   208d5:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   208d9:	e8 2f f1 fe ff       	call   fa0d <process_add>
   208de:	48 8b 13             	mov    (%rbx),%rdx
   208e1:	48 8b 43 08          	mov    0x8(%rbx),%rax
   208e5:	48 89 df             	mov    %rbx,%rdi
   208e8:	49 8d b5 d8 00 00 00 	lea    0xd8(%r13),%rsi
   208ef:	48 89 42 08          	mov    %rax,0x8(%rdx)
   208f3:	48 89 10             	mov    %rdx,(%rax)
   208f6:	e8 ac b8 fe ff       	call   c1a7 <extern_list_add_tail>
   208fb:	c7 43 50 6c df dc e5 	movl   $0xe5dcdf6c,0x50(%rbx)
   20902:	e9 69 ff ff ff       	jmp    20870 <sandev_reopen+0x2b>
   20907:	e8 7c f1 fe ff       	call   fa88 <step>
   2090c:	4c 39 a5 d8 00 00 00 	cmp    %r12,0xd8(%rbp)
   20913:	74 0c                	je     20921 <sandev_reopen+0xdc>
   20915:	48 83 bd d0 00 00 00 	cmpq   $0x0,0xd0(%rbp)
   2091c:	00 
   2091d:	74 e8                	je     20907 <sandev_reopen+0xc2>
   2091f:	eb 18                	jmp    20939 <sandev_reopen+0xf4>
   20921:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
   20928:	41 bc 79 df dc d3    	mov    $0xd3dcdf79,%r12d
   2092e:	48 39 c3             	cmp    %rax,%rbx
   20931:	74 0b                	je     2093e <sandev_reopen+0xf9>
   20933:	44 8b 60 50          	mov    0x50(%rax),%r12d
   20937:	eb 05                	jmp    2093e <sandev_reopen+0xf9>
   20939:	45 31 e4             	xor    %r12d,%r12d
   2093c:	eb 0b                	jmp    20949 <sandev_reopen+0x104>
   2093e:	44 89 e6             	mov    %r12d,%esi
   20941:	48 89 ef             	mov    %rbp,%rdi
   20944:	e8 34 fe ff ff       	call   2077d <sandev_restart>
   20949:	5a                   	pop    %rdx
   2094a:	44 89 e0             	mov    %r12d,%eax
   2094d:	5b                   	pop    %rbx
   2094e:	5d                   	pop    %rbp
   2094f:	41 5c                	pop    %r12
   20951:	41 5d                	pop    %r13
   20953:	41 5e                	pop    %r14
   20955:	41 5f                	pop    %r15
   20957:	c3                   	ret    

0000000000020958 <sandev_command>:
   20958:	41 56                	push   %r14
   2095a:	41 55                	push   %r13
   2095c:	49 89 d5             	mov    %rdx,%r13
   2095f:	41 54                	push   %r12
   20961:	49 89 f4             	mov    %rsi,%r12
   20964:	55                   	push   %rbp
   20965:	31 ed                	xor    %ebp,%ebp
   20967:	53                   	push   %rbx
   20968:	48 89 fb             	mov    %rdi,%rbx
   2096b:	4c 8d 73 48          	lea    0x48(%rbx),%r14
   2096f:	48 83 ec 10          	sub    $0x10,%rsp
   20973:	e8 21 0a 00 00       	call   21399 <unquiesce>
   20978:	48 83 bb d0 00 00 00 	cmpq   $0x0,0xd0(%rbx)
   2097f:	00 
   20980:	75 29                	jne    209ab <sandev_command+0x53>
   20982:	48 89 df             	mov    %rbx,%rdi
   20985:	e8 bb fe ff ff       	call   20845 <sandev_reopen>
   2098a:	85 c0                	test   %eax,%eax
   2098c:	74 1d                	je     209ab <sandev_command+0x53>
   2098e:	bf 05 00 00 00       	mov    $0x5,%edi
   20993:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   20997:	e8 b2 54 ff ff       	call   15e4e <sleep_fixed>
   2099c:	83 bb c8 00 00 00 01 	cmpl   $0x1,0xc8(%rbx)
   209a3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   209a7:	77 35                	ja     209de <sandev_command+0x86>
   209a9:	eb 31                	jmp    209dc <sandev_command+0x84>
   209ab:	4c 89 ee             	mov    %r13,%rsi
   209ae:	48 89 df             	mov    %rbx,%rdi
   209b1:	41 ff d4             	call   *%r12
   209b4:	85 c0                	test   %eax,%eax
   209b6:	75 24                	jne    209dc <sandev_command+0x84>
   209b8:	be 00 3c 00 00       	mov    $0x3c00,%esi
   209bd:	4c 89 f7             	mov    %r14,%rdi
   209c0:	e8 79 f9 fe ff       	call   1033e <start_timer_fixed>
   209c5:	83 7b 58 00          	cmpl   $0x0,0x58(%rbx)
   209c9:	74 07                	je     209d2 <sandev_command+0x7a>
   209cb:	e8 b8 f0 fe ff       	call   fa88 <step>
   209d0:	eb f3                	jmp    209c5 <sandev_command+0x6d>
   209d2:	8b 83 98 00 00 00    	mov    0x98(%rbx),%eax
   209d8:	85 c0                	test   %eax,%eax
   209da:	74 0d                	je     209e9 <sandev_command+0x91>
   209dc:	ff c5                	inc    %ebp
   209de:	89 ea                	mov    %ebp,%edx
   209e0:	48 3b 15 71 41 00 00 	cmp    0x4171(%rip),%rdx        # 24b58 <san_retries>
   209e7:	76 8f                	jbe    20978 <sandev_command+0x20>
   209e9:	48 83 c4 10          	add    $0x10,%rsp
   209ed:	5b                   	pop    %rbx
   209ee:	5d                   	pop    %rbp
   209ef:	41 5c                	pop    %r12
   209f1:	41 5d                	pop    %r13
   209f3:	41 5e                	pop    %r14
   209f5:	c3                   	ret    

00000000000209f6 <sandev_rw>:
   209f6:	41 54                	push   %r12
   209f8:	4c 8d 25 c0 fb ff ff 	lea    -0x440(%rip),%r12        # 205bf <sandev_command_rw>
   209ff:	55                   	push   %rbp
   20a00:	48 89 fd             	mov    %rdi,%rbp
   20a03:	53                   	push   %rbx
   20a04:	89 d3                	mov    %edx,%ebx
   20a06:	48 83 ec 30          	sub    $0x30,%rsp
   20a0a:	48 8b 05 3f 96 00 00 	mov    0x963f(%rip),%rax        # 2a050 <__stack_chk_guard>
   20a11:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   20a16:	31 c0                	xor    %eax,%eax
   20a18:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   20a1d:	8b 8f b8 00 00 00    	mov    0xb8(%rdi),%ecx
   20a23:	8b 87 b0 00 00 00    	mov    0xb0(%rdi),%eax
   20a29:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   20a2e:	48 d3 e6             	shl    %cl,%rsi
   20a31:	d3 e3                	shl    %cl,%ebx
   20a33:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   20a38:	89 44 24 20          	mov    %eax,0x20(%rsp)
   20a3c:	85 db                	test   %ebx,%ebx
   20a3e:	74 3b                	je     20a7b <sandev_rw+0x85>
   20a40:	39 5c 24 20          	cmp    %ebx,0x20(%rsp)
   20a44:	76 04                	jbe    20a4a <sandev_rw+0x54>
   20a46:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
   20a4a:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   20a4f:	4c 89 e6             	mov    %r12,%rsi
   20a52:	48 89 ef             	mov    %rbp,%rdi
   20a55:	e8 fe fe ff ff       	call   20958 <sandev_command>
   20a5a:	85 c0                	test   %eax,%eax
   20a5c:	75 1f                	jne    20a7d <sandev_rw+0x87>
   20a5e:	8b 54 24 20          	mov    0x20(%rsp),%edx
   20a62:	48 8b 8d a8 00 00 00 	mov    0xa8(%rbp),%rcx
   20a69:	48 01 54 24 18       	add    %rdx,0x18(%rsp)
   20a6e:	48 0f af ca          	imul   %rdx,%rcx
   20a72:	29 d3                	sub    %edx,%ebx
   20a74:	48 01 4c 24 10       	add    %rcx,0x10(%rsp)
   20a79:	eb c1                	jmp    20a3c <sandev_rw+0x46>
   20a7b:	31 c0                	xor    %eax,%eax
   20a7d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   20a82:	48 2b 15 c7 95 00 00 	sub    0x95c7(%rip),%rdx        # 2a050 <__stack_chk_guard>
   20a89:	74 05                	je     20a90 <sandev_rw+0x9a>
   20a8b:	e8 d0 1f fe ff       	call   2a60 <__stack_chk_fail>
   20a90:	48 83 c4 30          	add    $0x30,%rsp
   20a94:	5b                   	pop    %rbx
   20a95:	5d                   	pop    %rbp
   20a96:	41 5c                	pop    %r12
   20a98:	c3                   	ret    

0000000000020a99 <sandev_reset>:
   20a99:	f3 0f 1e fa          	endbr64 
   20a9d:	e9 a3 fd ff ff       	jmp    20845 <sandev_reopen>

0000000000020aa2 <sandev_read>:
   20aa2:	f3 0f 1e fa          	endbr64 
   20aa6:	4c 8d 05 5d 83 ff ff 	lea    -0x7ca3(%rip),%r8        # 18e0a <block_read>
   20aad:	e9 44 ff ff ff       	jmp    209f6 <sandev_rw>

0000000000020ab2 <sandev_write>:
   20ab2:	f3 0f 1e fa          	endbr64 
   20ab6:	48 83 ec 18          	sub    $0x18,%rsp
   20aba:	4c 8d 05 ea 83 ff ff 	lea    -0x7c16(%rip),%r8        # 18eab <block_write>
   20ac1:	e8 30 ff ff ff       	call   209f6 <sandev_rw>
   20ac6:	85 c0                	test   %eax,%eax
   20ac8:	75 0d                	jne    20ad7 <sandev_write+0x25>
   20aca:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   20ace:	e8 a0 08 00 00       	call   21373 <quiesce>
   20ad3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   20ad7:	48 83 c4 18          	add    $0x18,%rsp
   20adb:	c3                   	ret    

0000000000020adc <alloc_sandev>:
   20adc:	f3 0f 1e fa          	endbr64 
   20ae0:	41 57                	push   %r15
   20ae2:	41 56                	push   %r14
   20ae4:	41 55                	push   %r13
   20ae6:	41 89 f5             	mov    %esi,%r13d
   20ae9:	41 54                	push   %r12
   20aeb:	55                   	push   %rbp
   20aec:	48 89 fd             	mov    %rdi,%rbp
   20aef:	53                   	push   %rbx
   20af0:	49 6b dd 78          	imul   $0x78,%r13,%rbx
   20af4:	48 81 c3 f8 00 00 00 	add    $0xf8,%rbx
   20afb:	48 83 ec 18          	sub    $0x18,%rsp
   20aff:	48 8d 3c 1a          	lea    (%rdx,%rbx,1),%rdi
   20b03:	e8 2e bc fe ff       	call   c736 <zalloc>
   20b08:	49 89 c4             	mov    %rax,%r12
   20b0b:	48 85 c0             	test   %rax,%rax
   20b0e:	0f 84 0b 01 00 00    	je     20c1f <alloc_sandev+0x143>
   20b14:	48 8d 15 65 75 00 00 	lea    0x7565(%rip),%rdx        # 28080 <sandev_command_desc>
   20b1b:	4d 89 64 24 30       	mov    %r12,0x30(%r12)
   20b20:	4c 01 e3             	add    %r12,%rbx
   20b23:	48 8d 05 47 fb ff ff 	lea    -0x4b9(%rip),%rax        # 20671 <sandev_free>
   20b2a:	4d 8d bc 24 e8 00 00 	lea    0xe8(%r12),%r15
   20b31:	00 
   20b32:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   20b37:	45 31 f6             	xor    %r14d,%r14d
   20b3a:	48 8d 05 7f 59 00 00 	lea    0x597f(%rip),%rax        # 264c0 <null_intf>
   20b41:	49 89 54 24 38       	mov    %rdx,0x38(%r12)
   20b46:	48 8d 35 12 fb ff ff 	lea    -0x4ee(%rip),%rsi        # 2065f <sandev_command_expired>
   20b4d:	49 89 54 24 40       	mov    %rdx,0x40(%r12)
   20b52:	49 8d 94 24 d8 00 00 	lea    0xd8(%r12),%rdx
   20b59:	00 
   20b5a:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   20b5f:	49 89 b4 24 88 00 00 	mov    %rsi,0x88(%r12)
   20b66:	00 
   20b67:	4d 89 a4 24 90 00 00 	mov    %r12,0x90(%r12)
   20b6e:	00 
   20b6f:	45 89 ac 24 c8 00 00 	mov    %r13d,0xc8(%r12)
   20b76:	00 
   20b77:	49 89 94 24 d8 00 00 	mov    %rdx,0xd8(%r12)
   20b7e:	00 
   20b7f:	49 89 94 24 e0 00 00 	mov    %rdx,0xe0(%r12)
   20b86:	00 
   20b87:	4d 89 bc 24 e8 00 00 	mov    %r15,0xe8(%r12)
   20b8e:	00 
   20b8f:	4d 89 bc 24 f0 00 00 	mov    %r15,0xf0(%r12)
   20b96:	00 
   20b97:	49 89 9c 24 c0 00 00 	mov    %rbx,0xc0(%r12)
   20b9e:	00 
   20b9f:	49 8d 9c 24 40 01 00 	lea    0x140(%r12),%rbx
   20ba6:	00 
   20ba7:	4d 39 f5             	cmp    %r14,%r13
   20baa:	74 73                	je     20c1f <alloc_sandev+0x143>
   20bac:	4a 8b 4c f5 00       	mov    0x0(%rbp,%r14,8),%rcx
   20bb1:	4c 89 63 b8          	mov    %r12,-0x48(%rbx)
   20bb5:	44 89 73 c0          	mov    %r14d,-0x40(%rbx)
   20bb9:	48 89 cf             	mov    %rcx,%rdi
   20bbc:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   20bc1:	e8 48 f3 fe ff       	call   ff0e <ref_increment>
   20bc6:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   20bcb:	48 8d 7b d0          	lea    -0x30(%rbx),%rdi
   20bcf:	4c 89 fe             	mov    %r15,%rsi
   20bd2:	48 89 4b c8          	mov    %rcx,-0x38(%rbx)
   20bd6:	e8 cc b5 fe ff       	call   c1a7 <extern_list_add_tail>
   20bdb:	48 8d 15 3e 74 00 00 	lea    0x743e(%rip),%rdx        # 28020 <sanpath_block_desc>
   20be2:	48 8d 05 d7 58 00 00 	lea    0x58d7(%rip),%rax        # 264c0 <null_intf>
   20be9:	4c 89 63 e8          	mov    %r12,-0x18(%rbx)
   20bed:	48 8d 0d 0c 74 00 00 	lea    0x740c(%rip),%rcx        # 28000 <sanpath_process_desc>
   20bf4:	48 89 43 e0          	mov    %rax,-0x20(%rbx)
   20bf8:	48 89 53 f0          	mov    %rdx,-0x10(%rbx)
   20bfc:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
   20c00:	48 89 1b             	mov    %rbx,(%rbx)
   20c03:	48 89 5b 08          	mov    %rbx,0x8(%rbx)
   20c07:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   20c0b:	4c 89 63 18          	mov    %r12,0x18(%rbx)
   20c0f:	c7 43 20 6c df dc e5 	movl   $0xe5dcdf6c,0x20(%rbx)
   20c16:	49 ff c6             	inc    %r14
   20c19:	48 83 c3 78          	add    $0x78,%rbx
   20c1d:	eb 88                	jmp    20ba7 <alloc_sandev+0xcb>
   20c1f:	48 83 c4 18          	add    $0x18,%rsp
   20c23:	4c 89 e0             	mov    %r12,%rax
   20c26:	5b                   	pop    %rbx
   20c27:	5d                   	pop    %rbp
   20c28:	41 5c                	pop    %r12
   20c2a:	41 5d                	pop    %r13
   20c2c:	41 5e                	pop    %r14
   20c2e:	41 5f                	pop    %r15
   20c30:	c3                   	ret    

0000000000020c31 <register_sandev>:
   20c31:	f3 0f 1e fa          	endbr64 
   20c35:	41 56                	push   %r14
   20c37:	41 89 d0             	mov    %edx,%r8d
   20c3a:	41 55                	push   %r13
   20c3c:	41 54                	push   %r12
   20c3e:	55                   	push   %rbp
   20c3f:	48 89 fd             	mov    %rdi,%rbp
   20c42:	89 f7                	mov    %esi,%edi
   20c44:	53                   	push   %rbx
   20c45:	e8 ca fb ff ff       	call   20814 <sandev_find>
   20c4a:	48 85 c0             	test   %rax,%rax
   20c4d:	74 0b                	je     20c5a <register_sandev+0x29>
   20c4f:	41 bc 6c df dc fc    	mov    $0xfcdcdf6c,%r12d
   20c55:	e9 79 01 00 00       	jmp    20dd3 <register_sandev+0x1a2>
   20c5a:	89 75 20             	mov    %esi,0x20(%rbp)
   20c5d:	48 89 ef             	mov    %rbp,%rdi
   20c60:	44 89 45 24          	mov    %r8d,0x24(%rbp)
   20c64:	e8 dc fb ff ff       	call   20845 <sandev_reopen>
   20c69:	41 89 c4             	mov    %eax,%r12d
   20c6c:	85 c0                	test   %eax,%eax
   20c6e:	0f 85 b6 00 00 00    	jne    20d2a <register_sandev+0xf9>
   20c74:	48 8d 9d e8 00 00 00 	lea    0xe8(%rbp),%rbx
   20c7b:	e8 08 ee fe ff       	call   fa88 <step>
   20c80:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
   20c87:	4c 8d 68 e8          	lea    -0x18(%rax),%r13
   20c8b:	49 8d 45 18          	lea    0x18(%r13),%rax
   20c8f:	48 39 d8             	cmp    %rbx,%rax
   20c92:	74 23                	je     20cb7 <register_sandev+0x86>
   20c94:	49 8b 7d 70          	mov    0x70(%r13),%rdi
   20c98:	48 85 ff             	test   %rdi,%rdi
   20c9b:	75 0a                	jne    20ca7 <register_sandev+0x76>
   20c9d:	4d 8b 6d 18          	mov    0x18(%r13),%r13
   20ca1:	49 83 ed 18          	sub    $0x18,%r13
   20ca5:	eb e4                	jmp    20c8b <register_sandev+0x5a>
   20ca7:	48 8b 47 08          	mov    0x8(%rdi),%rax
   20cab:	ff 50 10             	call   *0x10(%rax)
   20cae:	41 89 c4             	mov    %eax,%r12d
   20cb1:	85 c0                	test   %eax,%eax
   20cb3:	74 e8                	je     20c9d <register_sandev+0x6c>
   20cb5:	eb 73                	jmp    20d2a <register_sandev+0xf9>
   20cb7:	48 8b 85 d8 00 00 00 	mov    0xd8(%rbp),%rax
   20cbe:	4c 8d ad d8 00 00 00 	lea    0xd8(%rbp),%r13
   20cc5:	4c 8d 60 e8          	lea    -0x18(%rax),%r12
   20cc9:	49 8d 44 24 18       	lea    0x18(%r12),%rax
   20cce:	4c 39 e8             	cmp    %r13,%rax
   20cd1:	74 6f                	je     20d42 <register_sandev+0x111>
   20cd3:	49 8b 7c 24 70       	mov    0x70(%r12),%rdi
   20cd8:	48 85 ff             	test   %rdi,%rdi
   20cdb:	74 0b                	je     20ce8 <register_sandev+0xb7>
   20cdd:	48 8b 47 08          	mov    0x8(%rdi),%rax
   20ce1:	ff 50 10             	call   *0x10(%rax)
   20ce4:	85 c0                	test   %eax,%eax
   20ce6:	75 93                	jne    20c7b <register_sandev+0x4a>
   20ce8:	4d 8b 64 24 18       	mov    0x18(%r12),%r12
   20ced:	49 83 ec 18          	sub    $0x18,%r12
   20cf1:	eb d6                	jmp    20cc9 <register_sandev+0x98>
   20cf3:	3d 00 08 00 00       	cmp    $0x800,%eax
   20cf8:	0f 85 96 00 00 00    	jne    20d94 <register_sandev+0x163>
   20cfe:	89 d9                	mov    %ebx,%ecx
   20d00:	41 bc 10 00 00 00    	mov    $0x10,%r12d
   20d06:	41 be 01 00 00 00    	mov    $0x1,%r14d
   20d0c:	bf 00 08 00 00       	mov    $0x800,%edi
   20d11:	41 d3 e4             	shl    %cl,%r12d
   20d14:	41 d3 e6             	shl    %cl,%r14d
   20d17:	e8 f9 b9 fe ff       	call   c715 <malloc>
   20d1c:	49 89 c5             	mov    %rax,%r13
   20d1f:	48 85 c0             	test   %rax,%rax
   20d22:	75 4b                	jne    20d6f <register_sandev+0x13e>
   20d24:	41 bc 77 df dc ce    	mov    $0xcedcdf77,%r12d
   20d2a:	48 89 ef             	mov    %rbp,%rdi
   20d2d:	44 89 e6             	mov    %r12d,%esi
   20d30:	e8 48 fa ff ff       	call   2077d <sandev_restart>
   20d35:	48 89 ef             	mov    %rbp,%rdi
   20d38:	e8 b7 f8 ff ff       	call   205f4 <sandev_undescribe>
   20d3d:	e9 91 00 00 00       	jmp    20dd3 <register_sandev+0x1a2>
   20d42:	31 d2                	xor    %edx,%edx
   20d44:	48 8d 35 5c f9 ff ff 	lea    -0x6a4(%rip),%rsi        # 206a7 <sandev_command_read_capacity>
   20d4b:	48 89 ef             	mov    %rbp,%rdi
   20d4e:	e8 05 fc ff ff       	call   20958 <sandev_command>
   20d53:	41 89 c4             	mov    %eax,%r12d
   20d56:	85 c0                	test   %eax,%eax
   20d58:	75 d0                	jne    20d2a <register_sandev+0xf9>
   20d5a:	8b 85 a8 00 00 00    	mov    0xa8(%rbp),%eax
   20d60:	31 db                	xor    %ebx,%ebx
   20d62:	3d ff 07 00 00       	cmp    $0x7ff,%eax
   20d67:	77 8a                	ja     20cf3 <register_sandev+0xc2>
   20d69:	01 c0                	add    %eax,%eax
   20d6b:	ff c3                	inc    %ebx
   20d6d:	eb f3                	jmp    20d62 <register_sandev+0x131>
   20d6f:	44 89 e6             	mov    %r12d,%esi
   20d72:	48 89 c1             	mov    %rax,%rcx
   20d75:	44 89 f2             	mov    %r14d,%edx
   20d78:	48 89 ef             	mov    %rbp,%rdi
   20d7b:	e8 22 fd ff ff       	call   20aa2 <sandev_read>
   20d80:	41 89 c4             	mov    %eax,%r12d
   20d83:	85 c0                	test   %eax,%eax
   20d85:	74 22                	je     20da9 <register_sandev+0x178>
   20d87:	4c 89 ef             	mov    %r13,%rdi
   20d8a:	e8 93 b9 fe ff       	call   c722 <free>
   20d8f:	45 85 e4             	test   %r12d,%r12d
   20d92:	75 96                	jne    20d2a <register_sandev+0xf9>
   20d94:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   20d98:	48 8d 35 21 73 00 00 	lea    0x7321(%rip),%rsi        # 280c0 <san_devices>
   20d9f:	45 31 e4             	xor    %r12d,%r12d
   20da2:	e8 00 b4 fe ff       	call   c1a7 <extern_list_add_tail>
   20da7:	eb 2a                	jmp    20dd3 <register_sandev+0x1a2>
   20da9:	ba 06 00 00 00       	mov    $0x6,%edx
   20dae:	48 8d 35 c0 19 00 00 	lea    0x19c0(%rip),%rsi        # 22775 <primary_check.0>
   20db5:	4c 89 ef             	mov    %r13,%rdi
   20db8:	e8 73 2b ff ff       	call   13930 <memcmp>
   20dbd:	85 c0                	test   %eax,%eax
   20dbf:	75 c6                	jne    20d87 <register_sandev+0x156>
   20dc1:	89 9d b8 00 00 00    	mov    %ebx,0xb8(%rbp)
   20dc7:	c7 85 bc 00 00 00 01 	movl   $0x1,0xbc(%rbp)
   20dce:	00 00 00 
   20dd1:	eb b4                	jmp    20d87 <register_sandev+0x156>
   20dd3:	5b                   	pop    %rbx
   20dd4:	44 89 e0             	mov    %r12d,%eax
   20dd7:	5d                   	pop    %rbp
   20dd8:	41 5c                	pop    %r12
   20dda:	41 5d                	pop    %r13
   20ddc:	41 5e                	pop    %r14
   20dde:	c3                   	ret    

0000000000020ddf <unregister_sandev>:
   20ddf:	f3 0f 1e fa          	endbr64 
   20de3:	48 83 ec 18          	sub    $0x18,%rsp
   20de7:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   20deb:	48 8b 47 18          	mov    0x18(%rdi),%rax
   20def:	31 f6                	xor    %esi,%esi
   20df1:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   20df6:	48 89 42 08          	mov    %rax,0x8(%rdx)
   20dfa:	48 89 10             	mov    %rdx,(%rax)
   20dfd:	e8 7b f9 ff ff       	call   2077d <sandev_restart>
   20e02:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   20e07:	48 83 c4 18          	add    $0x18,%rsp
   20e0b:	e9 e4 f7 ff ff       	jmp    205f4 <sandev_undescribe>

0000000000020e10 <san_default_drive>:
   20e10:	f3 0f 1e fa          	endbr64 
   20e14:	48 83 ec 18          	sub    $0x18,%rsp
   20e18:	48 8d 35 d1 87 00 00 	lea    0x87d1(%rip),%rsi        # 295f0 <san_drive_setting>
   20e1f:	31 ff                	xor    %edi,%edi
   20e21:	48 8b 05 28 92 00 00 	mov    0x9228(%rip),%rax        # 2a050 <__stack_chk_guard>
   20e28:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20e2d:	31 c0                	xor    %eax,%eax
   20e2f:	48 89 e2             	mov    %rsp,%rdx
   20e32:	e8 77 11 ff ff       	call   11fae <fetch_uint_setting>
   20e37:	41 89 c0             	mov    %eax,%r8d
   20e3a:	8b 04 24             	mov    (%rsp),%eax
   20e3d:	45 85 c0             	test   %r8d,%r8d
   20e40:	79 05                	jns    20e47 <san_default_drive+0x37>
   20e42:	b8 80 00 00 00       	mov    $0x80,%eax
   20e47:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   20e4c:	48 2b 15 fd 91 00 00 	sub    0x91fd(%rip),%rdx        # 2a050 <__stack_chk_guard>
   20e53:	74 05                	je     20e5a <san_default_drive+0x4a>
   20e55:	e8 06 1c fe ff       	call   2a60 <__stack_chk_fail>
   20e5a:	48 83 c4 18          	add    $0x18,%rsp
   20e5e:	c3                   	ret    

0000000000020e5f <find_smbios_structure>:
   20e5f:	f3 0f 1e fa          	endbr64 
   20e63:	41 55                	push   %r13
   20e65:	4c 8d 2d b4 91 00 00 	lea    0x91b4(%rip),%r13        # 2a020 <smbios>
   20e6c:	41 54                	push   %r12
   20e6e:	49 89 d4             	mov    %rdx,%r12
   20e71:	55                   	push   %rbp
   20e72:	89 f5                	mov    %esi,%ebp
   20e74:	53                   	push   %rbx
   20e75:	89 fb                	mov    %edi,%ebx
   20e77:	51                   	push   %rcx
   20e78:	48 83 3d a0 91 00 00 	cmpq   $0x0,0x91a0(%rip)        # 2a020 <smbios>
   20e7f:	00 
   20e80:	74 07                	je     20e89 <find_smbios_structure+0x2a>
   20e82:	31 d2                	xor    %edx,%edx
   20e84:	45 31 c0             	xor    %r8d,%r8d
   20e87:	eb 49                	jmp    20ed2 <find_smbios_structure+0x73>
   20e89:	4c 89 ef             	mov    %r13,%rdi
   20e8c:	e8 d2 01 00 00       	call   21063 <find_smbios>
   20e91:	85 c0                	test   %eax,%eax
   20e93:	74 ed                	je     20e82 <find_smbios_structure+0x23>
   20e95:	e9 92 00 00 00       	jmp    20f2c <find_smbios_structure+0xcd>
   20e9a:	4d 8b 55 00          	mov    0x0(%r13),%r10
   20e9e:	4c 8d 49 fe          	lea    -0x2(%rcx),%r9
   20ea2:	48 89 c1             	mov    %rax,%rcx
   20ea5:	49 39 c9             	cmp    %rcx,%r9
   20ea8:	72 67                	jb     20f11 <find_smbios_structure+0xb2>
   20eaa:	66 41 83 3c 0a 00    	cmpw   $0x0,(%r10,%rcx,1)
   20eb0:	48 8d 79 01          	lea    0x1(%rcx),%rdi
   20eb4:	75 56                	jne    20f0c <find_smbios_structure+0xad>
   20eb6:	48 85 ff             	test   %rdi,%rdi
   20eb9:	74 56                	je     20f11 <find_smbios_structure+0xb2>
   20ebb:	48 29 c7             	sub    %rax,%rdi
   20ebe:	40 0f b6 f6          	movzbl %sil,%esi
   20ec2:	49 89 7c 24 10       	mov    %rdi,0x10(%r12)
   20ec7:	39 de                	cmp    %ebx,%esi
   20ec9:	74 48                	je     20f13 <find_smbios_structure+0xb4>
   20ecb:	48 8d 51 02          	lea    0x2(%rcx),%rdx
   20ecf:	41 ff c0             	inc    %r8d
   20ed2:	48 8d 42 04          	lea    0x4(%rdx),%rax
   20ed6:	48 3b 05 4b 91 00 00 	cmp    0x914b(%rip),%rax        # 2a028 <smbios+0x8>
   20edd:	73 48                	jae    20f27 <find_smbios_structure+0xc8>
   20edf:	44 3b 05 4a 91 00 00 	cmp    0x914a(%rip),%r8d        # 2a030 <smbios+0x10>
   20ee6:	73 3f                	jae    20f27 <find_smbios_structure+0xc8>
   20ee8:	49 8b 45 00          	mov    0x0(%r13),%rax
   20eec:	8b 34 10             	mov    (%rax,%rdx,1),%esi
   20eef:	89 f0                	mov    %esi,%eax
   20ef1:	41 89 34 24          	mov    %esi,(%r12)
   20ef5:	48 8b 0d 2c 91 00 00 	mov    0x912c(%rip),%rcx        # 2a028 <smbios+0x8>
   20efc:	0f b6 c4             	movzbl %ah,%eax
   20eff:	0f b6 c0             	movzbl %al,%eax
   20f02:	48 01 d0             	add    %rdx,%rax
   20f05:	48 39 c1             	cmp    %rax,%rcx
   20f08:	73 90                	jae    20e9a <find_smbios_structure+0x3b>
   20f0a:	eb 1b                	jmp    20f27 <find_smbios_structure+0xc8>
   20f0c:	48 89 f9             	mov    %rdi,%rcx
   20f0f:	eb 94                	jmp    20ea5 <find_smbios_structure+0x46>
   20f11:	eb 14                	jmp    20f27 <find_smbios_structure+0xc8>
   20f13:	8d 45 ff             	lea    -0x1(%rbp),%eax
   20f16:	85 ed                	test   %ebp,%ebp
   20f18:	75 09                	jne    20f23 <find_smbios_structure+0xc4>
   20f1a:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
   20f1f:	31 c0                	xor    %eax,%eax
   20f21:	eb 09                	jmp    20f2c <find_smbios_structure+0xcd>
   20f23:	89 c5                	mov    %eax,%ebp
   20f25:	eb a4                	jmp    20ecb <find_smbios_structure+0x6c>
   20f27:	b8 72 1f ed d2       	mov    $0xd2ed1f72,%eax
   20f2c:	5a                   	pop    %rdx
   20f2d:	5b                   	pop    %rbx
   20f2e:	5d                   	pop    %rbp
   20f2f:	41 5c                	pop    %r12
   20f31:	41 5d                	pop    %r13
   20f33:	c3                   	ret    

0000000000020f34 <read_smbios_structure>:
   20f34:	f3 0f 1e fa          	endbr64 
   20f38:	50                   	push   %rax
   20f39:	48 89 f8             	mov    %rdi,%rax
   20f3c:	49 89 d0             	mov    %rdx,%r8
   20f3f:	48 89 f7             	mov    %rsi,%rdi
   20f42:	0f b6 50 01          	movzbl 0x1(%rax),%edx
   20f46:	48 8b 35 d3 90 00 00 	mov    0x90d3(%rip),%rsi        # 2a020 <smbios>
   20f4d:	4c 39 c2             	cmp    %r8,%rdx
   20f50:	49 0f 47 d0          	cmova  %r8,%rdx
   20f54:	48 03 70 08          	add    0x8(%rax),%rsi
   20f58:	e8 8c 64 ff ff       	call   173e9 <__memcpy>
   20f5d:	31 c0                	xor    %eax,%eax
   20f5f:	5a                   	pop    %rdx
   20f60:	c3                   	ret    

0000000000020f61 <read_smbios_string>:
   20f61:	f3 0f 1e fa          	endbr64 
   20f65:	41 57                	push   %r15
   20f67:	41 56                	push   %r14
   20f69:	41 55                	push   %r13
   20f6b:	41 54                	push   %r12
   20f6d:	55                   	push   %rbp
   20f6e:	53                   	push   %rbx
   20f6f:	48 83 ec 18          	sub    $0x18,%rsp
   20f73:	48 8b 47 10          	mov    0x10(%rdi),%rax
   20f77:	0f b6 6f 01          	movzbl 0x1(%rdi),%ebp
   20f7b:	48 03 6f 08          	add    0x8(%rdi),%rbp
   20f7f:	48 01 e8             	add    %rbp,%rax
   20f82:	48 89 04 24          	mov    %rax,(%rsp)
   20f86:	85 f6                	test   %esi,%esi
   20f88:	74 12                	je     20f9c <read_smbios_string+0x3b>
   20f8a:	4c 8b 35 8f 90 00 00 	mov    0x908f(%rip),%r14        # 2a020 <smbios>
   20f91:	41 89 f4             	mov    %esi,%r12d
   20f94:	49 89 d7             	mov    %rdx,%r15
   20f97:	49 89 cd             	mov    %rcx,%r13
   20f9a:	eb 07                	jmp    20fa3 <read_smbios_string+0x42>
   20f9c:	eb 3f                	jmp    20fdd <read_smbios_string+0x7c>
   20f9e:	48 8d 6c 05 01       	lea    0x1(%rbp,%rax,1),%rbp
   20fa3:	48 3b 2c 24          	cmp    (%rsp),%rbp
   20fa7:	73 34                	jae    20fdd <read_smbios_string+0x7c>
   20fa9:	49 8d 34 2e          	lea    (%r14,%rbp,1),%rsi
   20fad:	48 89 f7             	mov    %rsi,%rdi
   20fb0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   20fb5:	e8 5c 2a ff ff       	call   13a16 <strlen>
   20fba:	41 ff cc             	dec    %r12d
   20fbd:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   20fc2:	48 89 c3             	mov    %rax,%rbx
   20fc5:	75 d7                	jne    20f9e <read_smbios_string+0x3d>
   20fc7:	49 39 c5             	cmp    %rax,%r13
   20fca:	4c 89 ea             	mov    %r13,%rdx
   20fcd:	4c 89 ff             	mov    %r15,%rdi
   20fd0:	48 0f 47 d0          	cmova  %rax,%rdx
   20fd4:	e8 10 64 ff ff       	call   173e9 <__memcpy>
   20fd9:	89 d8                	mov    %ebx,%eax
   20fdb:	eb 05                	jmp    20fe2 <read_smbios_string+0x81>
   20fdd:	b8 72 1f ed d2       	mov    $0xd2ed1f72,%eax
   20fe2:	48 83 c4 18          	add    $0x18,%rsp
   20fe6:	5b                   	pop    %rbx
   20fe7:	5d                   	pop    %rbp
   20fe8:	41 5c                	pop    %r12
   20fea:	41 5d                	pop    %r13
   20fec:	41 5e                	pop    %r14
   20fee:	41 5f                	pop    %r15
   20ff0:	c3                   	ret    

0000000000020ff1 <smbios_version>:
   20ff1:	f3 0f 1e fa          	endbr64 
   20ff5:	48 83 3d 23 90 00 00 	cmpq   $0x0,0x9023(%rip)        # 2a020 <smbios>
   20ffc:	00 
   20ffd:	75 1a                	jne    21019 <smbios_version+0x28>
   20fff:	51                   	push   %rcx
   21000:	48 8d 3d 19 90 00 00 	lea    0x9019(%rip),%rdi        # 2a020 <smbios>
   21007:	e8 57 00 00 00       	call   21063 <find_smbios>
   2100c:	85 c0                	test   %eax,%eax
   2100e:	75 07                	jne    21017 <smbios_version+0x26>
   21010:	0f b7 05 1d 90 00 00 	movzwl 0x901d(%rip),%eax        # 2a034 <smbios+0x14>
   21017:	5a                   	pop    %rdx
   21018:	c3                   	ret    
   21019:	0f b7 05 14 90 00 00 	movzwl 0x9014(%rip),%eax        # 2a034 <smbios+0x14>
   21020:	c3                   	ret    

0000000000021021 <sync_progress>:
   21021:	f3 0f 1e fa          	endbr64 
   21025:	83 3d 84 90 00 00 00 	cmpl   $0x0,0x9084(%rip)        # 2a0b0 <pending_total>
   2102c:	75 0c                	jne    2103a <sync_progress+0x19>
   2102e:	50                   	push   %rax
   2102f:	31 f6                	xor    %esi,%esi
   21031:	e8 f9 88 fe ff       	call   992f <intf_close>
   21036:	31 c0                	xor    %eax,%eax
   21038:	5a                   	pop    %rdx
   21039:	c3                   	ret    
   2103a:	31 c0                	xor    %eax,%eax
   2103c:	c3                   	ret    

000000000002103d <sync>:
   2103d:	f3 0f 1e fa          	endbr64 
   21041:	55                   	push   %rbp
   21042:	48 8d 35 97 70 00 00 	lea    0x7097(%rip),%rsi        # 280e0 <sync_intf>
   21049:	48 89 fd             	mov    %rdi,%rbp
   2104c:	48 8d 3d ad 58 00 00 	lea    0x58ad(%rip),%rdi        # 26900 <monojob>
   21053:	e8 e9 87 fe ff       	call   9841 <intf_plug_plug>
   21058:	48 89 ee             	mov    %rbp,%rsi
   2105b:	31 ff                	xor    %edi,%edi
   2105d:	5d                   	pop    %rbp
   2105e:	e9 a4 c2 fe ff       	jmp    d307 <monojob_wait>

0000000000021063 <find_smbios>:
   21063:	f3 0f 1e fa          	endbr64 
   21067:	48 8b 05 d2 8f 00 00 	mov    0x8fd2(%rip),%rax        # 2a040 <smbios_entry>
   2106e:	48 85 c0             	test   %rax,%rax
   21071:	75 02                	jne    21075 <find_smbios+0x12>
   21073:	eb 08                	jmp    2107d <find_smbios+0x1a>
   21075:	81 38 5f 53 4d 5f    	cmpl   $0x5f4d535f,(%rax)
   2107b:	74 06                	je     21083 <find_smbios+0x20>
   2107d:	b8 79 1f eb d3       	mov    $0xd3eb1f79,%eax
   21082:	c3                   	ret    
   21083:	0f b7 50 16          	movzwl 0x16(%rax),%edx
   21087:	8b 48 18             	mov    0x18(%rax),%ecx
   2108a:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   2108e:	0f b7 50 1c          	movzwl 0x1c(%rax),%edx
   21092:	48 89 0f             	mov    %rcx,(%rdi)
   21095:	89 57 10             	mov    %edx,0x10(%rdi)
   21098:	66 8b 40 06          	mov    0x6(%rax),%ax
   2109c:	86 e0                	xchg   %ah,%al
   2109e:	66 89 47 14          	mov    %ax,0x14(%rdi)
   210a2:	31 c0                	xor    %eax,%eax
   210a4:	c3                   	ret    

00000000000210a5 <eth_slow_rx>:
   210a5:	f3 0f 1e fa          	endbr64 
   210a9:	41 54                	push   %r12
   210ab:	49 89 fc             	mov    %rdi,%r12
   210ae:	55                   	push   %rbp
   210af:	53                   	push   %rbx
   210b0:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   210b4:	48 8b 47 20          	mov    0x20(%rdi),%rax
   210b8:	48 29 d8             	sub    %rbx,%rax
   210bb:	48 83 f8 6d          	cmp    $0x6d,%rax
   210bf:	77 0a                	ja     210cb <eth_slow_rx+0x26>
   210c1:	e8 a0 8c fe ff       	call   9d66 <free_iob>
   210c6:	e9 fd 00 00 00       	jmp    211c8 <eth_slow_rx+0x123>
   210cb:	8a 03                	mov    (%rbx),%al
   210cd:	48 89 f5             	mov    %rsi,%rbp
   210d0:	3c 01                	cmp    $0x1,%al
   210d2:	74 0d                	je     210e1 <eth_slow_rx+0x3c>
   210d4:	3c 02                	cmp    $0x2,%al
   210d6:	0f 84 b5 00 00 00    	je     21191 <eth_slow_rx+0xec>
   210dc:	e9 e2 00 00 00       	jmp    211c3 <eth_slow_rx+0x11e>
   210e1:	8a 43 12             	mov    0x12(%rbx),%al
   210e4:	89 c2                	mov    %eax,%edx
   210e6:	f7 d2                	not    %edx
   210e8:	80 e2 38             	and    $0x38,%dl
   210eb:	74 1c                	je     21109 <eth_slow_rx+0x64>
   210ed:	83 e0 02             	and    $0x2,%eax
   210f0:	48 89 ef             	mov    %rbp,%rdi
   210f3:	3c 01                	cmp    $0x1,%al
   210f5:	19 c0                	sbb    %eax,%eax
   210f7:	25 00 74 00 00       	and    $0x7400,%eax
   210fc:	8d b0 00 08 00 00    	lea    0x800(%rax),%esi
   21102:	e8 46 ca fe ff       	call   db4d <netdev_link_block>
   21107:	eb 08                	jmp    21111 <eth_slow_rx+0x6c>
   21109:	48 89 f7             	mov    %rsi,%rdi
   2110c:	e8 4c ca fe ff       	call   db5d <netdev_link_unblock>
   21111:	31 d2                	xor    %edx,%edx
   21113:	48 8d 7b 3c          	lea    0x3c(%rbx),%rdi
   21117:	b9 32 00 00 00       	mov    $0x32,%ecx
   2111c:	89 d0                	mov    %edx,%eax
   2111e:	f3 aa                	rep stos %al,%es:(%rdi)
   21120:	66 c7 43 3a 00 00    	movw   $0x0,0x3a(%rbx)
   21126:	48 8d 7b 2a          	lea    0x2a(%rbx),%rdi
   2112a:	ab                   	stos   %eax,%es:(%rdi)
   2112b:	ab                   	stos   %eax,%es:(%rdi)
   2112c:	ab                   	stos   %eax,%es:(%rdi)
   2112d:	ab                   	stos   %eax,%es:(%rdi)
   2112e:	48 8d 43 02          	lea    0x2(%rbx),%rax
   21132:	66 c7 43 2a 03 10    	movw   $0x1003,0x2a(%rbx)
   21138:	48 8d 7b 16          	lea    0x16(%rbx),%rdi
   2113c:	48 89 c6             	mov    %rax,%rsi
   2113f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21140:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21141:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21142:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21143:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21144:	48 89 c7             	mov    %rax,%rdi
   21147:	66 c7 43 16 02 14    	movw   $0x1402,0x16(%rbx)
   2114d:	89 d0                	mov    %edx,%eax
   2114f:	66 c7 43 27 00 00    	movw   $0x0,0x27(%rbx)
   21155:	c6 43 29 00          	movb   $0x0,0x29(%rbx)
   21159:	ab                   	stos   %eax,%es:(%rdi)
   2115a:	ab                   	stos   %eax,%es:(%rdi)
   2115b:	ab                   	stos   %eax,%es:(%rdi)
   2115c:	ab                   	stos   %eax,%es:(%rdi)
   2115d:	ab                   	stos   %eax,%es:(%rdi)
   2115e:	c7 43 02 01 14 ff ff 	movl   $0xffff1401,0x2(%rbx)
   21165:	8b 45 60             	mov    0x60(%rbp),%eax
   21168:	89 43 06             	mov    %eax,0x6(%rbx)
   2116b:	8b 45 64             	mov    0x64(%rbp),%eax
   2116e:	c7 43 0c 00 01 00 ff 	movl   $0xff000100,0xc(%rbx)
   21175:	66 89 43 0a          	mov    %ax,0xa(%rbx)
   21179:	8a 43 26             	mov    0x26(%rbx),%al
   2117c:	66 c7 43 10 00 01    	movw   $0x100,0x10(%rbx)
   21182:	83 e0 02             	and    $0x2,%eax
   21185:	c6 43 01 01          	movb   $0x1,0x1(%rbx)
   21189:	83 c8 3c             	or     $0x3c,%eax
   2118c:	88 43 12             	mov    %al,0x12(%rbx)
   2118f:	eb 0a                	jmp    2119b <eth_slow_rx+0xf6>
   21191:	80 7b 02 01          	cmpb   $0x1,0x2(%rbx)
   21195:	75 25                	jne    211bc <eth_slow_rx+0x117>
   21197:	c6 43 02 02          	movb   $0x2,0x2(%rbx)
   2119b:	5b                   	pop    %rbx
   2119c:	4c 8d 45 60          	lea    0x60(%rbp),%r8
   211a0:	48 89 ee             	mov    %rbp,%rsi
   211a3:	4c 89 e7             	mov    %r12,%rdi
   211a6:	5d                   	pop    %rbp
   211a7:	48 8d 0d cd 15 00 00 	lea    0x15cd(%rip),%rcx        # 2277b <eth_slow_address>
   211ae:	48 8d 15 33 7c 00 00 	lea    0x7c33(%rip),%rdx        # 28de8 <eth_slow_protocol>
   211b5:	41 5c                	pop    %r12
   211b7:	e9 20 d1 fe ff       	jmp    e2dc <net_tx>
   211bc:	e8 a5 8b fe ff       	call   9d66 <free_iob>
   211c1:	eb 05                	jmp    211c8 <eth_slow_rx+0x123>
   211c3:	e8 9e 8b fe ff       	call   9d66 <free_iob>
   211c8:	5b                   	pop    %rbx
   211c9:	b8 7e 9f d5 e3       	mov    $0xe3d59f7e,%eax
   211ce:	5d                   	pop    %rbp
   211cf:	41 5c                	pop    %r12
   211d1:	c3                   	ret    

00000000000211d2 <http_parse_www_authenticate>:
   211d2:	f3 0f 1e fa          	endbr64 
   211d6:	41 55                	push   %r13
   211d8:	4c 8d 2d 31 79 00 00 	lea    0x7931(%rip),%r13        # 28b10 <http_request_accept_encoding>
   211df:	41 54                	push   %r12
   211e1:	55                   	push   %rbp
   211e2:	48 89 fd             	mov    %rdi,%rbp
   211e5:	53                   	push   %rbx
   211e6:	48 8d 1d e3 78 00 00 	lea    0x78e3(%rip),%rbx        # 28ad0 <http_basic_auth>
   211ed:	48 83 ec 18          	sub    $0x18,%rsp
   211f1:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   211f6:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   211fb:	31 f6                	xor    %esi,%esi
   211fd:	e8 ea 6c fe ff       	call   7eec <http_token>
   21202:	49 89 c4             	mov    %rax,%r12
   21205:	48 85 c0             	test   %rax,%rax
   21208:	75 1a                	jne    21224 <http_parse_www_authenticate+0x52>
   2120a:	b8 68 9f bd bc       	mov    $0xbcbd9f68,%eax
   2120f:	eb 3a                	jmp    2124b <http_parse_www_authenticate+0x79>
   21211:	48 8b 33             	mov    (%rbx),%rsi
   21214:	4c 89 e7             	mov    %r12,%rdi
   21217:	e8 ad 27 ff ff       	call   139c9 <strcasecmp>
   2121c:	85 c0                	test   %eax,%eax
   2121e:	74 0b                	je     2122b <http_parse_www_authenticate+0x59>
   21220:	48 83 c3 20          	add    $0x20,%rbx
   21224:	4c 39 eb             	cmp    %r13,%rbx
   21227:	72 e8                	jb     21211 <http_parse_www_authenticate+0x3f>
   21229:	eb 1e                	jmp    21249 <http_parse_www_authenticate+0x77>
   2122b:	48 83 bd e8 01 00 00 	cmpq   $0x0,0x1e8(%rbp)
   21232:	00 
   21233:	75 16                	jne    2124b <http_parse_www_authenticate+0x79>
   21235:	48 89 9d e8 01 00 00 	mov    %rbx,0x1e8(%rbp)
   2123c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21241:	48 89 ef             	mov    %rbp,%rdi
   21244:	ff 53 08             	call   *0x8(%rbx)
   21247:	eb 02                	jmp    2124b <http_parse_www_authenticate+0x79>
   21249:	31 c0                	xor    %eax,%eax
   2124b:	48 83 c4 18          	add    $0x18,%rsp
   2124f:	5b                   	pop    %rbx
   21250:	5d                   	pop    %rbp
   21251:	41 5c                	pop    %r12
   21253:	41 5d                	pop    %r13
   21255:	c3                   	ret    

0000000000021256 <http_format_authorization>:
   21256:	f3 0f 1e fa          	endbr64 
   2125a:	41 56                	push   %r14
   2125c:	31 c0                	xor    %eax,%eax
   2125e:	41 55                	push   %r13
   21260:	41 54                	push   %r12
   21262:	55                   	push   %rbp
   21263:	53                   	push   %rbx
   21264:	4c 8b b7 48 01 00 00 	mov    0x148(%rdi),%r14
   2126b:	4d 85 f6             	test   %r14,%r14
   2126e:	74 44                	je     212b4 <http_format_authorization+0x5e>
   21270:	49 8b 0e             	mov    (%r14),%rcx
   21273:	48 89 f3             	mov    %rsi,%rbx
   21276:	48 89 d5             	mov    %rdx,%rbp
   21279:	49 89 fd             	mov    %rdi,%r13
   2127c:	48 8d 15 70 27 00 00 	lea    0x2770(%rip),%rdx        # 239f3 <.LC0>
   21283:	48 89 ee             	mov    %rbp,%rsi
   21286:	48 89 df             	mov    %rbx,%rdi
   21289:	e8 cf 5e ff ff       	call   1715d <snprintf>
   2128e:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   21292:	31 d2                	xor    %edx,%edx
   21294:	41 89 c4             	mov    %eax,%r12d
   21297:	48 98                	cltq   
   21299:	48 39 c5             	cmp    %rax,%rbp
   2129c:	76 06                	jbe    212a4 <http_format_authorization+0x4e>
   2129e:	48 89 ea             	mov    %rbp,%rdx
   212a1:	48 29 c2             	sub    %rax,%rdx
   212a4:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
   212a8:	4c 89 ef             	mov    %r13,%rdi
   212ab:	ff d1                	call   *%rcx
   212ad:	85 c0                	test   %eax,%eax
   212af:	78 03                	js     212b4 <http_format_authorization+0x5e>
   212b1:	44 01 e0             	add    %r12d,%eax
   212b4:	5b                   	pop    %rbx
   212b5:	5d                   	pop    %rbp
   212b6:	41 5c                	pop    %r12
   212b8:	41 5d                	pop    %r13
   212ba:	41 5e                	pop    %r14
   212bc:	c3                   	ret    

00000000000212bd <icmp_tx_echo>:
   212bd:	41 55                	push   %r13
   212bf:	49 89 f5             	mov    %rsi,%r13
   212c2:	41 54                	push   %r12
   212c4:	49 89 d4             	mov    %rdx,%r12
   212c7:	55                   	push   %rbp
   212c8:	48 89 fd             	mov    %rdi,%rbp
   212cb:	53                   	push   %rbx
   212cc:	51                   	push   %rcx
   212cd:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   212d1:	48 8b 77 20          	mov    0x20(%rdi),%rsi
   212d5:	66 c7 43 02 00 00    	movw   $0x0,0x2(%rbx)
   212db:	48 89 df             	mov    %rbx,%rdi
   212de:	48 29 de             	sub    %rbx,%rsi
   212e1:	e8 df 3c ff ff       	call   14fc5 <tcpip_chksum>
   212e6:	41 83 7c 24 10 00    	cmpl   $0x0,0x10(%r12)
   212ec:	4c 8d 4b 02          	lea    0x2(%rbx),%r9
   212f0:	66 89 43 02          	mov    %ax,0x2(%rbx)
   212f4:	75 03                	jne    212f9 <icmp_tx_echo+0x3c>
   212f6:	45 31 c9             	xor    %r9d,%r9d
   212f9:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   212fe:	4c 89 e9             	mov    %r13,%rcx
   21301:	58                   	pop    %rax
   21302:	48 89 ef             	mov    %rbp,%rdi
   21305:	5b                   	pop    %rbx
   21306:	45 31 c0             	xor    %r8d,%r8d
   21309:	5d                   	pop    %rbp
   2130a:	31 d2                	xor    %edx,%edx
   2130c:	41 5c                	pop    %r12
   2130e:	41 5d                	pop    %r13
   21310:	e9 18 3c ff ff       	jmp    14f2d <tcpip_tx>

0000000000021315 <icmp_rx_echo_request>:
   21315:	f3 0f 1e fa          	endbr64 
   21319:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
   2131d:	48 8b 47 20          	mov    0x20(%rdi),%rax
   21321:	48 29 c8             	sub    %rcx,%rax
   21324:	48 83 f8 07          	cmp    $0x7,%rax
   21328:	76 0a                	jbe    21334 <icmp_rx_echo_request+0x1f>
   2132a:	8a 42 03             	mov    0x3(%rdx),%al
   2132d:	88 01                	mov    %al,(%rcx)
   2132f:	e9 89 ff ff ff       	jmp    212bd <icmp_tx_echo>
   21334:	50                   	push   %rax
   21335:	e8 2c 8a fe ff       	call   9d66 <free_iob>
   2133a:	b8 7e 9f c6 e3       	mov    $0xe3c69f7e,%eax
   2133f:	5a                   	pop    %rdx
   21340:	c3                   	ret    

0000000000021341 <ping_rx>:
   21341:	f3 0f 1e fa          	endbr64 
   21345:	50                   	push   %rax
   21346:	e8 1b 8a fe ff       	call   9d66 <free_iob>
   2134b:	31 c0                	xor    %eax,%eax
   2134d:	5a                   	pop    %rdx
   2134e:	c3                   	ret    

000000000002134f <icmp_rx_echo_reply>:
   2134f:	f3 0f 1e fa          	endbr64 
   21353:	48 8b 47 20          	mov    0x20(%rdi),%rax
   21357:	48 2b 47 18          	sub    0x18(%rdi),%rax
   2135b:	48 83 f8 07          	cmp    $0x7,%rax
   2135f:	76 05                	jbe    21366 <icmp_rx_echo_reply+0x17>
   21361:	e9 db ff ff ff       	jmp    21341 <ping_rx>
   21366:	50                   	push   %rax
   21367:	e8 fa 89 fe ff       	call   9d66 <free_iob>
   2136c:	b8 7e 9f c6 e3       	mov    $0xe3c69f7e,%eax
   21371:	5a                   	pop    %rdx
   21372:	c3                   	ret    

0000000000021373 <quiesce>:
   21373:	f3 0f 1e fa          	endbr64 
   21377:	55                   	push   %rbp
   21378:	48 8d 2d 31 7b 00 00 	lea    0x7b31(%rip),%rbp        # 28eb0 <__table_entries.0>
   2137f:	53                   	push   %rbx
   21380:	48 8d 1d 29 7b 00 00 	lea    0x7b29(%rip),%rbx        # 28eb0 <__table_entries.0>
   21387:	52                   	push   %rdx
   21388:	48 39 eb             	cmp    %rbp,%rbx
   2138b:	73 08                	jae    21395 <quiesce+0x22>
   2138d:	ff 13                	call   *(%rbx)
   2138f:	48 83 c3 10          	add    $0x10,%rbx
   21393:	eb f3                	jmp    21388 <quiesce+0x15>
   21395:	58                   	pop    %rax
   21396:	5b                   	pop    %rbx
   21397:	5d                   	pop    %rbp
   21398:	c3                   	ret    

0000000000021399 <unquiesce>:
   21399:	f3 0f 1e fa          	endbr64 
   2139d:	55                   	push   %rbp
   2139e:	48 8d 2d 0b 7b 00 00 	lea    0x7b0b(%rip),%rbp        # 28eb0 <__table_entries.0>
   213a5:	53                   	push   %rbx
   213a6:	48 8d 1d 03 7b 00 00 	lea    0x7b03(%rip),%rbx        # 28eb0 <__table_entries.0>
   213ad:	52                   	push   %rdx
   213ae:	48 39 eb             	cmp    %rbp,%rbx
   213b1:	73 09                	jae    213bc <unquiesce+0x23>
   213b3:	ff 53 08             	call   *0x8(%rbx)
   213b6:	48 83 c3 10          	add    $0x10,%rbx
   213ba:	eb f2                	jmp    213ae <unquiesce+0x15>
   213bc:	58                   	pop    %rax
   213bd:	5b                   	pop    %rbx
   213be:	5d                   	pop    %rbp
   213bf:	c3                   	ret    

00000000000213c0 <route_ipv4_print>:
   213c0:	f3 0f 1e fa          	endbr64 
   213c4:	41 54                	push   %r12
   213c6:	4c 8d 25 83 51 00 00 	lea    0x5183(%rip),%r12        # 26550 <ipv4_miniroutes>
   213cd:	55                   	push   %rbp
   213ce:	48 89 fd             	mov    %rdi,%rbp
   213d1:	53                   	push   %rbx
   213d2:	48 8b 1d 77 51 00 00 	mov    0x5177(%rip),%rbx        # 26550 <ipv4_miniroutes>
   213d9:	4c 39 e3             	cmp    %r12,%rbx
   213dc:	0f 84 8c 00 00 00    	je     2146e <route_ipv4_print+0xae>
   213e2:	48 3b 6b 10          	cmp    0x10(%rbx),%rbp
   213e6:	75 7e                	jne    21466 <route_ipv4_print+0xa6>
   213e8:	8b 7b 18             	mov    0x18(%rbx),%edi
   213eb:	e8 9f 92 fe ff       	call   a68f <inet_ntoa>
   213f0:	48 8d 75 34          	lea    0x34(%rbp),%rsi
   213f4:	48 8d 3d 22 31 00 00 	lea    0x3122(%rip),%rdi        # 2451d <.LC0>
   213fb:	48 89 c2             	mov    %rax,%rdx
   213fe:	31 c0                	xor    %eax,%eax
   21400:	e8 75 5e ff ff       	call   1727a <printf>
   21405:	8b 7b 1c             	mov    0x1c(%rbx),%edi
   21408:	e8 82 92 fe ff       	call   a68f <inet_ntoa>
   2140d:	48 8d 3d ed 22 00 00 	lea    0x22ed(%rip),%rdi        # 23701 <.LC0>
   21414:	48 89 c6             	mov    %rax,%rsi
   21417:	31 c0                	xor    %eax,%eax
   21419:	e8 5c 5e ff ff       	call   1727a <printf>
   2141e:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
   21422:	74 19                	je     2143d <route_ipv4_print+0x7d>
   21424:	8b 7b 20             	mov    0x20(%rbx),%edi
   21427:	e8 63 92 fe ff       	call   a68f <inet_ntoa>
   2142c:	48 8d 3d f2 30 00 00 	lea    0x30f2(%rip),%rdi        # 24525 <.LC2>
   21433:	48 89 c6             	mov    %rax,%rsi
   21436:	31 c0                	xor    %eax,%eax
   21438:	e8 3d 5e ff ff       	call   1727a <printf>
   2143d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   21441:	f6 80 80 00 00 00 01 	testb  $0x1,0x80(%rax)
   21448:	75 0e                	jne    21458 <route_ipv4_print+0x98>
   2144a:	48 8d 3d db 30 00 00 	lea    0x30db(%rip),%rdi        # 2452c <.LC3>
   21451:	31 c0                	xor    %eax,%eax
   21453:	e8 22 5e ff ff       	call   1727a <printf>
   21458:	48 8d 3d 50 26 00 00 	lea    0x2650(%rip),%rdi        # 23aaf <.LC0>
   2145f:	31 c0                	xor    %eax,%eax
   21461:	e8 14 5e ff ff       	call   1727a <printf>
   21466:	48 8b 1b             	mov    (%rbx),%rbx
   21469:	e9 6b ff ff ff       	jmp    213d9 <route_ipv4_print+0x19>
   2146e:	5b                   	pop    %rbx
   2146f:	5d                   	pop    %rbp
   21470:	41 5c                	pop    %r12
   21472:	c3                   	ret    

0000000000021473 <stp_ntoa>:
   21473:	f3 0f 1e fa          	endbr64 
   21477:	48 8d 05 be 30 00 00 	lea    0x30be(%rip),%rax        # 2453c <.LC0>
   2147e:	c3                   	ret    

000000000002147f <stp_rx>:
   2147f:	f3 0f 1e fa          	endbr64 
   21483:	41 54                	push   %r12
   21485:	55                   	push   %rbp
   21486:	48 89 fd             	mov    %rdi,%rbp
   21489:	51                   	push   %rcx
   2148a:	48 8b 47 18          	mov    0x18(%rdi),%rax
   2148e:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   21492:	48 29 c2             	sub    %rax,%rdx
   21495:	48 83 fa 25          	cmp    $0x25,%rdx
   21499:	77 08                	ja     214a3 <stp_rx+0x24>
   2149b:	41 bc 7e 9f c0 e3    	mov    $0xe3c09f7e,%r12d
   214a1:	eb 5d                	jmp    21500 <stp_rx+0x81>
   214a3:	66 83 78 03 00       	cmpw   $0x0,0x3(%rax)
   214a8:	74 08                	je     214b2 <stp_rx+0x33>
   214aa:	41 bc 7d 9d c0 c3    	mov    $0xc3c09d7d,%r12d
   214b0:	eb 4e                	jmp    21500 <stp_rx+0x81>
   214b2:	80 78 05 01          	cmpb   $0x1,0x5(%rax)
   214b6:	77 08                	ja     214c0 <stp_rx+0x41>
   214b8:	41 bc 7d 9c c0 c3    	mov    $0xc3c09c7d,%r12d
   214be:	eb 40                	jmp    21500 <stp_rx+0x81>
   214c0:	80 78 06 02          	cmpb   $0x2,0x6(%rax)
   214c4:	74 08                	je     214ce <stp_rx+0x4f>
   214c6:	41 bc 7d 9b c0 c3    	mov    $0xc3c09b7d,%r12d
   214cc:	eb 32                	jmp    21500 <stp_rx+0x81>
   214ce:	48 89 f7             	mov    %rsi,%rdi
   214d1:	f6 40 07 20          	testb  $0x20,0x7(%rax)
   214d5:	75 21                	jne    214f8 <stp_rx+0x79>
   214d7:	66 8b 40 22          	mov    0x22(%rax),%ax
   214db:	86 c4                	xchg   %al,%ah
   214dd:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   214e4:	00 
   214e5:	81 e6 f8 ff 07 00    	and    $0x7fff8,%esi
   214eb:	e8 5d c6 fe ff       	call   db4d <netdev_link_block>
   214f0:	41 bc 70 9f c0 d7    	mov    $0xd7c09f70,%r12d
   214f6:	eb 08                	jmp    21500 <stp_rx+0x81>
   214f8:	e8 60 c6 fe ff       	call   db5d <netdev_link_unblock>
   214fd:	45 31 e4             	xor    %r12d,%r12d
   21500:	48 89 ef             	mov    %rbp,%rdi
   21503:	e8 5e 88 fe ff       	call   9d66 <free_iob>
   21508:	44 89 e0             	mov    %r12d,%eax
   2150b:	5a                   	pop    %rdx
   2150c:	5d                   	pop    %rbp
   2150d:	41 5c                	pop    %r12
   2150f:	c3                   	ret    

0000000000021510 <aoecmd_ata_cmd_len>:
   21510:	f3 0f 1e fa          	endbr64 
   21514:	48 8b 47 68          	mov    0x68(%rdi),%rax
   21518:	48 83 c0 16          	add    $0x16,%rax
   2151c:	c3                   	ret    

000000000002151d <aoecmd_cfg_cmd_len>:
   2151d:	f3 0f 1e fa          	endbr64 
   21521:	b8 12 00 00 00       	mov    $0x12,%eax
   21526:	c3                   	ret    

0000000000021527 <aoecmd_cfg_cmd>:
   21527:	f3 0f 1e fa          	endbr64 
   2152b:	c6 46 05 01          	movb   $0x1,0x5(%rsi)
   2152f:	48 c7 46 0a 00 00 00 	movq   $0x0,0xa(%rsi)
   21536:	00 
   21537:	c3                   	ret    

0000000000021538 <aoedev_window>:
   21538:	f3 0f 1e fa          	endbr64 
   2153c:	8b 47 78             	mov    0x78(%rdi),%eax
   2153f:	f7 d8                	neg    %eax
   21541:	48 19 c0             	sbb    %rax,%rax
   21544:	c3                   	ret    

0000000000021545 <aoedev_identify_device>:
   21545:	f3 0f 1e fa          	endbr64 
   21549:	48 8b 47 10          	mov    0x10(%rdi),%rax
   2154d:	48 8b 40 40          	mov    0x40(%rax),%rax
   21551:	c3                   	ret    

0000000000021552 <aoedev_describe>:
   21552:	f3 0f 1e fa          	endbr64 
   21556:	48 8d 87 80 00 00 00 	lea    0x80(%rdi),%rax
   2155d:	c3                   	ret    

000000000002155e <abft_complete>:
   2155e:	f3 0f 1e fa          	endbr64 
   21562:	31 c0                	xor    %eax,%eax
   21564:	c3                   	ret    

0000000000021565 <abft_install>:
   21565:	f3 0f 1e fa          	endbr64 
   21569:	41 54                	push   %r12
   2156b:	49 89 fc             	mov    %rdi,%r12
   2156e:	55                   	push   %rbp
   2156f:	48 8d 2d 2a 6f 00 00 	lea    0x6f2a(%rip),%rbp        # 284a0 <abft_model>
   21576:	53                   	push   %rbx
   21577:	48 83 ec 40          	sub    $0x40,%rsp
   2157b:	48 8b 05 ce 8a 00 00 	mov    0x8ace(%rip),%rax        # 2a050 <__stack_chk_guard>
   21582:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   21587:	48 8b 05 12 6f 00 00 	mov    0x6f12(%rip),%rax        # 284a0 <abft_model>
   2158e:	48 8d 98 70 ff ff ff 	lea    -0x90(%rax),%rbx
   21595:	48 8d 83 90 00 00 00 	lea    0x90(%rbx),%rax
   2159c:	48 39 e8             	cmp    %rbp,%rax
   2159f:	74 61                	je     21602 <abft_install+0x9d>
   215a1:	4c 8d 44 24 0a       	lea    0xa(%rsp),%r8
   215a6:	b9 2e 00 00 00       	mov    $0x2e,%ecx
   215ab:	31 c0                	xor    %eax,%eax
   215ad:	4c 89 c7             	mov    %r8,%rdi
   215b0:	f3 aa                	rep stos %al,%es:(%rdi)
   215b2:	48 b8 61 42 46 54 2e 	movabs $0x2e54464261,%rax
   215b9:	00 00 00 
   215bc:	c6 44 24 12 01       	movb   $0x1,0x12(%rsp)
   215c1:	4c 89 c7             	mov    %r8,%rdi
   215c4:	48 89 44 24 0a       	mov    %rax,0xa(%rsp)
   215c9:	8b 43 38             	mov    0x38(%rbx),%eax
   215cc:	66 89 44 24 2e       	mov    %ax,0x2e(%rsp)
   215d1:	8a 43 3a             	mov    0x3a(%rbx),%al
   215d4:	88 44 24 30          	mov    %al,0x30(%rsp)
   215d8:	48 8b 43 10          	mov    0x10(%rbx),%rax
   215dc:	8b 50 60             	mov    0x60(%rax),%edx
   215df:	8b 40 64             	mov    0x64(%rax),%eax
   215e2:	89 54 24 32          	mov    %edx,0x32(%rsp)
   215e6:	66 89 44 24 36       	mov    %ax,0x36(%rsp)
   215eb:	41 ff d4             	call   *%r12
   215ee:	85 c0                	test   %eax,%eax
   215f0:	75 12                	jne    21604 <abft_install+0x9f>
   215f2:	48 8b 9b 90 00 00 00 	mov    0x90(%rbx),%rbx
   215f9:	48 81 eb 90 00 00 00 	sub    $0x90,%rbx
   21600:	eb 93                	jmp    21595 <abft_install+0x30>
   21602:	31 c0                	xor    %eax,%eax
   21604:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   21609:	48 2b 15 40 8a 00 00 	sub    0x8a40(%rip),%rdx        # 2a050 <__stack_chk_guard>
   21610:	74 05                	je     21617 <abft_install+0xb2>
   21612:	e8 49 14 fe ff       	call   2a60 <__stack_chk_fail>
   21617:	48 83 c4 40          	add    $0x40,%rsp
   2161b:	5b                   	pop    %rbx
   2161c:	5d                   	pop    %rbp
   2161d:	41 5c                	pop    %r12
   2161f:	c3                   	ret    

0000000000021620 <aoecmd_close>:
   21620:	f3 0f 1e fa          	endbr64 
   21624:	41 54                	push   %r12
   21626:	55                   	push   %rbp
   21627:	89 f5                	mov    %esi,%ebp
   21629:	53                   	push   %rbx
   2162a:	48 89 fb             	mov    %rdi,%rbx
   2162d:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   21631:	48 81 c7 90 00 00 00 	add    $0x90,%rdi
   21638:	e8 6f ed fe ff       	call   103ac <stop_timer>
   2163d:	48 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%rax
   21644:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   21648:	49 89 44 24 50       	mov    %rax,0x50(%r12)
   2164d:	48 8d 43 18          	lea    0x18(%rbx),%rax
   21651:	48 39 c2             	cmp    %rax,%rdx
   21654:	74 1b                	je     21671 <aoecmd_close+0x51>
   21656:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   2165a:	48 89 df             	mov    %rbx,%rdi
   2165d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   21661:	48 89 11             	mov    %rdx,(%rcx)
   21664:	48 89 43 18          	mov    %rax,0x18(%rbx)
   21668:	48 89 43 20          	mov    %rax,0x20(%rbx)
   2166c:	e8 a9 e8 fe ff       	call   ff1a <ref_decrement>
   21671:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   21675:	89 ee                	mov    %ebp,%esi
   21677:	5b                   	pop    %rbx
   21678:	5d                   	pop    %rbp
   21679:	41 5c                	pop    %r12
   2167b:	e9 1f 83 fe ff       	jmp    999f <intf_shutdown>

0000000000021680 <aoedev_close>:
   21680:	f3 0f 1e fa          	endbr64 
   21684:	41 56                	push   %r14
   21686:	4c 8d 35 e3 6b 00 00 	lea    0x6be3(%rip),%r14        # 28270 <aoe_commands>
   2168d:	41 55                	push   %r13
   2168f:	41 89 f5             	mov    %esi,%r13d
   21692:	41 54                	push   %r12
   21694:	49 89 fc             	mov    %rdi,%r12
   21697:	48 83 c7 18          	add    $0x18,%rdi
   2169b:	55                   	push   %rbp
   2169c:	53                   	push   %rbx
   2169d:	e8 fd 82 fe ff       	call   999f <intf_shutdown>
   216a2:	49 8d 7c 24 58       	lea    0x58(%r12),%rdi
   216a7:	44 89 ee             	mov    %r13d,%esi
   216aa:	e8 f0 82 fe ff       	call   999f <intf_shutdown>
   216af:	48 8b 05 ba 6b 00 00 	mov    0x6bba(%rip),%rax        # 28270 <aoe_commands>
   216b6:	48 8b 18             	mov    (%rax),%rbx
   216b9:	48 8d 68 e8          	lea    -0x18(%rax),%rbp
   216bd:	48 83 eb 18          	sub    $0x18,%rbx
   216c1:	48 8d 45 18          	lea    0x18(%rbp),%rax
   216c5:	4c 39 f0             	cmp    %r14,%rax
   216c8:	74 2e                	je     216f8 <aoedev_close+0x78>
   216ca:	4c 39 65 10          	cmp    %r12,0x10(%rbp)
   216ce:	75 1b                	jne    216eb <aoedev_close+0x6b>
   216d0:	48 89 ef             	mov    %rbp,%rdi
   216d3:	e8 36 e8 fe ff       	call   ff0e <ref_increment>
   216d8:	48 89 ef             	mov    %rbp,%rdi
   216db:	44 89 ee             	mov    %r13d,%esi
   216de:	e8 3d ff ff ff       	call   21620 <aoecmd_close>
   216e3:	48 89 ef             	mov    %rbp,%rdi
   216e6:	e8 2f e8 fe ff       	call   ff1a <ref_decrement>
   216eb:	48 8b 43 18          	mov    0x18(%rbx),%rax
   216ef:	48 89 dd             	mov    %rbx,%rbp
   216f2:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
   216f6:	eb c9                	jmp    216c1 <aoedev_close+0x41>
   216f8:	5b                   	pop    %rbx
   216f9:	5d                   	pop    %rbp
   216fa:	41 5c                	pop    %r12
   216fc:	41 5d                	pop    %r13
   216fe:	41 5e                	pop    %r14
   21700:	c3                   	ret    

0000000000021701 <aoecmd_ata_cmd>:
   21701:	f3 0f 1e fa          	endbr64 
   21705:	48 89 f9             	mov    %rdi,%rcx
   21708:	c6 46 05 00          	movb   $0x0,0x5(%rsi)
   2170c:	48 89 f2             	mov    %rsi,%rdx
   2170f:	48 8d 7e 0a          	lea    0xa(%rsi),%rdi
   21713:	31 c0                	xor    %eax,%eax
   21715:	ab                   	stos   %eax,%es:(%rdi)
   21716:	ab                   	stos   %eax,%es:(%rdi)
   21717:	ab                   	stos   %eax,%es:(%rdi)
   21718:	8a 41 54             	mov    0x54(%rcx),%al
   2171b:	4c 8b 41 68          	mov    0x68(%rcx),%r8
   2171f:	44 8b 49 58          	mov    0x58(%rcx),%r9d
   21723:	89 c6                	mov    %eax,%esi
   21725:	83 e6 10             	and    $0x10,%esi
   21728:	4d 85 c0             	test   %r8,%r8
   2172b:	40 0f 95 c7          	setne  %dil
   2172f:	09 fe                	or     %edi,%esi
   21731:	45 85 c9             	test   %r9d,%r9d
   21734:	40 0f 95 c7          	setne  %dil
   21738:	c1 e7 06             	shl    $0x6,%edi
   2173b:	09 fe                	or     %edi,%esi
   2173d:	40 88 72 0a          	mov    %sil,0xa(%rdx)
   21741:	40 8a 71 52          	mov    0x52(%rcx),%sil
   21745:	40 88 72 0b          	mov    %sil,0xb(%rdx)
   21749:	8b 71 50             	mov    0x50(%rcx),%esi
   2174c:	40 88 72 0c          	mov    %sil,0xc(%rdx)
   21750:	40 8a 71 55          	mov    0x55(%rcx),%sil
   21754:	40 88 72 0d          	mov    %sil,0xd(%rdx)
   21758:	48 8b 71 48          	mov    0x48(%rcx),%rsi
   2175c:	48 89 72 0e          	mov    %rsi,0xe(%rdx)
   21760:	45 85 c9             	test   %r9d,%r9d
   21763:	75 0c                	jne    21771 <aoecmd_ata_cmd+0x70>
   21765:	83 e0 f0             	and    $0xfffffff0,%eax
   21768:	48 c1 ee 18          	shr    $0x18,%rsi
   2176c:	09 f0                	or     %esi,%eax
   2176e:	88 42 11             	mov    %al,0x11(%rdx)
   21771:	48 8b 71 60          	mov    0x60(%rcx),%rsi
   21775:	48 8d 7a 16          	lea    0x16(%rdx),%rdi
   21779:	4c 89 c2             	mov    %r8,%rdx
   2177c:	e9 68 5c ff ff       	jmp    173e9 <__memcpy>

0000000000021781 <aoecmd_ata_rsp>:
   21781:	f3 0f 1e fa          	endbr64 
   21785:	48 83 fa 15          	cmp    $0x15,%rdx
   21789:	77 06                	ja     21791 <aoecmd_ata_rsp+0x10>
   2178b:	b8 7e 9f ff e3       	mov    $0xe3ff9f7e,%eax
   21790:	c3                   	ret    
   21791:	48 8d 42 ea          	lea    -0x16(%rdx),%rax
   21795:	f6 46 0d 01          	testb  $0x1,0xd(%rsi)
   21799:	74 06                	je     217a1 <aoecmd_ata_rsp+0x20>
   2179b:	b8 68 9f ff e2       	mov    $0xe2ff9f68,%eax
   217a0:	c3                   	ret    
   217a1:	48 8b 57 78          	mov    0x78(%rdi),%rdx
   217a5:	48 39 d0             	cmp    %rdx,%rax
   217a8:	73 06                	jae    217b0 <aoecmd_ata_rsp+0x2f>
   217aa:	b8 7b 9f ff b9       	mov    $0xb9ff9f7b,%eax
   217af:	c3                   	ret    
   217b0:	50                   	push   %rax
   217b1:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
   217b5:	48 83 c6 16          	add    $0x16,%rsi
   217b9:	e8 2b 5c ff ff       	call   173e9 <__memcpy>
   217be:	31 c0                	xor    %eax,%eax
   217c0:	5a                   	pop    %rdx
   217c1:	c3                   	ret    

00000000000217c2 <aoecmd_cfg_rsp>:
   217c2:	f3 0f 1e fa          	endbr64 
   217c6:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   217ca:	48 8b 47 10          	mov    0x10(%rdi),%rax
   217ce:	48 8b 40 50          	mov    0x50(%rax),%rax
   217d2:	48 83 fa 11          	cmp    $0x11,%rdx
   217d6:	77 06                	ja     217de <aoecmd_cfg_rsp+0x1c>
   217d8:	b8 7e 9f ff e3       	mov    $0xe3ff9f7e,%eax
   217dd:	c3                   	ret    
   217de:	52                   	push   %rdx
   217df:	0f b6 50 43          	movzbl 0x43(%rax),%edx
   217e3:	48 89 ce             	mov    %rcx,%rsi
   217e6:	48 83 c7 3b          	add    $0x3b,%rdi
   217ea:	e8 fa 5b ff ff       	call   173e9 <__memcpy>
   217ef:	31 c0                	xor    %eax,%eax
   217f1:	59                   	pop    %rcx
   217f2:	c3                   	ret    

00000000000217f3 <aoedev_config_done>:
   217f3:	f3 0f 1e fa          	endbr64 
   217f7:	55                   	push   %rbp
   217f8:	48 89 fd             	mov    %rdi,%rbp
   217fb:	48 83 c7 58          	add    $0x58,%rdi
   217ff:	48 83 ec 10          	sub    $0x10,%rsp
   21803:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   21807:	e8 93 81 fe ff       	call   999f <intf_shutdown>
   2180c:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   21810:	85 f6                	test   %esi,%esi
   21812:	74 0d                	je     21821 <aoedev_config_done+0x2e>
   21814:	48 83 c4 10          	add    $0x10,%rsp
   21818:	48 89 ef             	mov    %rbp,%rdi
   2181b:	5d                   	pop    %rbp
   2181c:	e9 5f fe ff ff       	jmp    21680 <aoedev_close>
   21821:	c7 45 78 01 00 00 00 	movl   $0x1,0x78(%rbp)
   21828:	48 83 c4 10          	add    $0x10,%rsp
   2182c:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   21830:	5d                   	pop    %rbp
   21831:	e9 4a 5d ff ff       	jmp    17580 <xfer_window_changed>

0000000000021836 <aoecmd_create>:
   21836:	48 8b 05 33 6a 00 00 	mov    0x6a33(%rip),%rax        # 28270 <aoe_commands>
   2183d:	66 44 8b 05 05 88 00 	mov    0x8805(%rip),%r8w        # 2a04a <tag_idx.0>
   21844:	00 
   21845:	41 56                	push   %r14
   21847:	ba 01 00 00 00       	mov    $0x1,%edx
   2184c:	41 55                	push   %r13
   2184e:	4c 8d 2d 1b 6a 00 00 	lea    0x6a1b(%rip),%r13        # 28270 <aoe_commands>
   21855:	41 54                	push   %r12
   21857:	55                   	push   %rbp
   21858:	48 89 f5             	mov    %rsi,%rbp
   2185b:	48 8d 70 e8          	lea    -0x18(%rax),%rsi
   2185f:	53                   	push   %rbx
   21860:	48 89 fb             	mov    %rdi,%rbx
   21863:	41 8d 0c 10          	lea    (%r8,%rdx,1),%ecx
   21867:	48 89 f0             	mov    %rsi,%rax
   2186a:	0f b7 f9             	movzwl %cx,%edi
   2186d:	4c 8d 48 18          	lea    0x18(%rax),%r9
   21871:	4d 39 e9             	cmp    %r13,%r9
   21874:	74 16                	je     2188c <aoecmd_create+0x56>
   21876:	3b b8 88 00 00 00    	cmp    0x88(%rax),%edi
   2187c:	0f 84 ad 00 00 00    	je     2192f <aoecmd_create+0xf9>
   21882:	48 8b 40 18          	mov    0x18(%rax),%rax
   21886:	48 83 e8 18          	sub    $0x18,%rax
   2188a:	eb e1                	jmp    2186d <aoecmd_create+0x37>
   2188c:	81 cf 00 00 ae 18    	or     $0x18ae0000,%edi
   21892:	66 89 0d b1 87 00 00 	mov    %cx,0x87b1(%rip)        # 2a04a <tag_idx.0>
   21899:	41 89 fe             	mov    %edi,%r14d
   2189c:	bf e0 00 00 00       	mov    $0xe0,%edi
   218a1:	e8 90 ae fe ff       	call   c736 <zalloc>
   218a6:	49 89 c4             	mov    %rax,%r12
   218a9:	48 85 c0             	test   %rax,%rax
   218ac:	0f 84 95 00 00 00    	je     21947 <aoecmd_create+0x111>
   218b2:	48 8d 05 9a 00 00 00 	lea    0x9a(%rip),%rax        # 21953 <aoecmd_free>
   218b9:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   218be:	4c 89 ee             	mov    %r13,%rsi
   218c1:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   218c6:	e8 c6 a8 fe ff       	call   c191 <extern_list_add>
   218cb:	48 8d 05 ee 4b 00 00 	lea    0x4bee(%rip),%rax        # 264c0 <null_intf>
   218d2:	4d 89 64 24 30       	mov    %r12,0x30(%r12)
   218d7:	48 89 df             	mov    %rbx,%rdi
   218da:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   218df:	48 8d 05 1a 69 00 00 	lea    0x691a(%rip),%rax        # 28200 <aoecmd_ata_desc>
   218e6:	49 89 44 24 38       	mov    %rax,0x38(%r12)
   218eb:	49 89 44 24 40       	mov    %rax,0x40(%r12)
   218f0:	48 8d 05 2e 03 00 00 	lea    0x32e(%rip),%rax        # 21c25 <aoecmd_expired>
   218f7:	49 89 84 24 d0 00 00 	mov    %rax,0xd0(%r12)
   218fe:	00 
   218ff:	4d 89 a4 24 d8 00 00 	mov    %r12,0xd8(%r12)
   21906:	00 
   21907:	e8 02 e6 fe ff       	call   ff0e <ref_increment>
   2190c:	48 8b 43 50          	mov    0x50(%rbx),%rax
   21910:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
   21915:	49 89 ac 24 80 00 00 	mov    %rbp,0x80(%r12)
   2191c:	00 
   2191d:	45 89 b4 24 88 00 00 	mov    %r14d,0x88(%r12)
   21924:	00 
   21925:	49 89 84 24 a8 00 00 	mov    %rax,0xa8(%r12)
   2192c:	00 
   2192d:	eb 18                	jmp    21947 <aoecmd_create+0x111>
   2192f:	ff c2                	inc    %edx
   21931:	81 fa 01 00 01 00    	cmp    $0x10001,%edx
   21937:	0f 85 26 ff ff ff    	jne    21863 <aoecmd_create+0x2d>
   2193d:	66 89 0d 06 87 00 00 	mov    %cx,0x8706(%rip)        # 2a04a <tag_idx.0>
   21944:	45 31 e4             	xor    %r12d,%r12d
   21947:	5b                   	pop    %rbx
   21948:	4c 89 e0             	mov    %r12,%rax
   2194b:	5d                   	pop    %rbp
   2194c:	41 5c                	pop    %r12
   2194e:	41 5d                	pop    %r13
   21950:	41 5e                	pop    %r14
   21952:	c3                   	ret    

0000000000021953 <aoecmd_free>:
   21953:	f3 0f 1e fa          	endbr64 
   21957:	55                   	push   %rbp
   21958:	48 89 fd             	mov    %rdi,%rbp
   2195b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2195f:	e8 b6 e5 fe ff       	call   ff1a <ref_decrement>
   21964:	48 89 ef             	mov    %rbp,%rdi
   21967:	5d                   	pop    %rbp
   21968:	e9 b5 ad fe ff       	jmp    c722 <free>

000000000002196d <aoedev_free>:
   2196d:	f3 0f 1e fa          	endbr64 
   21971:	55                   	push   %rbp
   21972:	48 89 fd             	mov    %rdi,%rbp
   21975:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   21979:	e8 9c e5 fe ff       	call   ff1a <ref_decrement>
   2197e:	48 89 ef             	mov    %rbp,%rdi
   21981:	5d                   	pop    %rbp
   21982:	e9 9b ad fe ff       	jmp    c722 <free>

0000000000021987 <aoecmd_tx.isra.0>:
   21987:	41 56                	push   %r14
   21989:	41 55                	push   %r13
   2198b:	49 89 fd             	mov    %rdi,%r13
   2198e:	48 81 c7 90 00 00 00 	add    $0x90,%rdi
   21995:	41 54                	push   %r12
   21997:	55                   	push   %rbp
   21998:	53                   	push   %rbx
   21999:	48 8b 5f 80          	mov    -0x80(%rdi),%rbx
   2199d:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
   219a1:	e8 d8 e9 fe ff       	call   1037e <start_timer>
   219a6:	49 8b 85 80 00 00 00 	mov    0x80(%r13),%rax
   219ad:	4c 89 ef             	mov    %r13,%rdi
   219b0:	ff 10                	call   *(%rax)
   219b2:	48 8d 78 40          	lea    0x40(%rax),%rdi
   219b6:	49 89 c6             	mov    %rax,%r14
   219b9:	e8 8e 83 fe ff       	call   9d4c <alloc_iob>
   219be:	48 85 c0             	test   %rax,%rax
   219c1:	75 09                	jne    219cc <aoecmd_tx.isra.0+0x45>
   219c3:	5b                   	pop    %rbx
   219c4:	5d                   	pop    %rbp
   219c5:	41 5c                	pop    %r12
   219c7:	41 5d                	pop    %r13
   219c9:	41 5e                	pop    %r14
   219cb:	c3                   	ret    
   219cc:	48 8b 50 20          	mov    0x20(%rax),%rdx
   219d0:	48 83 40 18 40       	addq   $0x40,0x18(%rax)
   219d5:	49 89 c4             	mov    %rax,%r12
   219d8:	48 8d 7a 40          	lea    0x40(%rdx),%rdi
   219dc:	49 01 fe             	add    %rdi,%r14
   219df:	4c 89 70 20          	mov    %r14,0x20(%rax)
   219e3:	31 c0                	xor    %eax,%eax
   219e5:	ab                   	stos   %eax,%es:(%rdi)
   219e6:	ab                   	stos   %eax,%es:(%rdi)
   219e7:	66 ab                	stos   %ax,%es:(%rdi)
   219e9:	c6 42 40 10          	movb   $0x10,0x40(%rdx)
   219ed:	8b 43 38             	mov    0x38(%rbx),%eax
   219f0:	4c 89 ef             	mov    %r13,%rdi
   219f3:	86 c4                	xchg   %al,%ah
   219f5:	66 89 42 42          	mov    %ax,0x42(%rdx)
   219f9:	8a 43 3a             	mov    0x3a(%rbx),%al
   219fc:	88 42 44             	mov    %al,0x44(%rdx)
   219ff:	41 8b 85 88 00 00 00 	mov    0x88(%r13),%eax
   21a06:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   21a0b:	0f c8                	bswap  %eax
   21a0d:	89 42 46             	mov    %eax,0x46(%rdx)
   21a10:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
   21a15:	49 8b 85 80 00 00 00 	mov    0x80(%r13),%rax
   21a1c:	48 29 f2             	sub    %rsi,%rdx
   21a1f:	ff 50 08             	call   *0x8(%rax)
   21a22:	48 8d 4b 3b          	lea    0x3b(%rbx),%rcx
   21a26:	4c 8d 45 60          	lea    0x60(%rbp),%r8
   21a2a:	5b                   	pop    %rbx
   21a2b:	48 89 ee             	mov    %rbp,%rsi
   21a2e:	4c 89 e7             	mov    %r12,%rdi
   21a31:	48 8d 15 f0 73 00 00 	lea    0x73f0(%rip),%rdx        # 28e28 <aoe_protocol>
   21a38:	5d                   	pop    %rbp
   21a39:	41 5c                	pop    %r12
   21a3b:	41 5d                	pop    %r13
   21a3d:	41 5e                	pop    %r14
   21a3f:	e9 98 c8 fe ff       	jmp    e2dc <net_tx>

0000000000021a44 <aoe_open>:
   21a44:	f3 0f 1e fa          	endbr64 
   21a48:	41 57                	push   %r15
   21a4a:	41 56                	push   %r14
   21a4c:	41 55                	push   %r13
   21a4e:	49 89 fd             	mov    %rdi,%r13
   21a51:	41 54                	push   %r12
   21a53:	55                   	push   %rbp
   21a54:	53                   	push   %rbx
   21a55:	48 89 f3             	mov    %rsi,%rbx
   21a58:	48 83 ec 18          	sub    $0x18,%rsp
   21a5c:	48 8b 05 ed 85 00 00 	mov    0x85ed(%rip),%rax        # 2a050 <__stack_chk_guard>
   21a63:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21a68:	31 c0                	xor    %eax,%eax
   21a6a:	e8 57 c6 fe ff       	call   e0c6 <last_opened_netdev>
   21a6f:	48 85 c0             	test   %rax,%rax
   21a72:	75 0b                	jne    21a7f <aoe_open+0x3b>
   21a74:	41 bc 79 9f ff d3    	mov    $0xd3ff9f79,%r12d
   21a7a:	e9 81 01 00 00       	jmp    21c00 <aoe_open+0x1bc>
   21a7f:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   21a83:	48 85 ff             	test   %rdi,%rdi
   21a86:	75 02                	jne    21a8a <aoe_open+0x46>
   21a88:	eb 47                	jmp    21ad1 <aoe_open+0x8d>
   21a8a:	80 3f 65             	cmpb   $0x65,(%rdi)
   21a8d:	74 02                	je     21a91 <aoe_open+0x4d>
   21a8f:	eb 40                	jmp    21ad1 <aoe_open+0x8d>
   21a91:	48 89 e5             	mov    %rsp,%rbp
   21a94:	48 ff c7             	inc    %rdi
   21a97:	ba 0a 00 00 00       	mov    $0xa,%edx
   21a9c:	49 89 c4             	mov    %rax,%r12
   21a9f:	48 89 ee             	mov    %rbp,%rsi
   21aa2:	e8 b0 20 ff ff       	call   13b57 <strtoul>
   21aa7:	48 8b 3c 24          	mov    (%rsp),%rdi
   21aab:	48 89 c3             	mov    %rax,%rbx
   21aae:	80 3f 2e             	cmpb   $0x2e,(%rdi)
   21ab1:	74 02                	je     21ab5 <aoe_open+0x71>
   21ab3:	eb 1c                	jmp    21ad1 <aoe_open+0x8d>
   21ab5:	48 ff c7             	inc    %rdi
   21ab8:	ba 0a 00 00 00       	mov    $0xa,%edx
   21abd:	48 89 ee             	mov    %rbp,%rsi
   21ac0:	e8 92 20 ff ff       	call   13b57 <strtoul>
   21ac5:	49 89 c7             	mov    %rax,%r15
   21ac8:	48 8b 04 24          	mov    (%rsp),%rax
   21acc:	80 38 00             	cmpb   $0x0,(%rax)
   21acf:	74 0b                	je     21adc <aoe_open+0x98>
   21ad1:	41 bc 7e 9f ff e3    	mov    $0xe3ff9f7e,%r12d
   21ad7:	e9 24 01 00 00       	jmp    21c00 <aoe_open+0x1bc>
   21adc:	bf a0 00 00 00       	mov    $0xa0,%edi
   21ae1:	e8 50 ac fe ff       	call   c736 <zalloc>
   21ae6:	48 89 c5             	mov    %rax,%rbp
   21ae9:	48 85 c0             	test   %rax,%rax
   21aec:	75 0b                	jne    21af9 <aoe_open+0xb5>
   21aee:	41 bc 77 9f ff ce    	mov    $0xceff9f77,%r12d
   21af4:	e9 07 01 00 00       	jmp    21c00 <aoe_open+0x1bc>
   21af9:	48 8d 05 6d fe ff ff 	lea    -0x193(%rip),%rax        # 2196d <aoedev_free>
   21b00:	48 89 6d 20          	mov    %rbp,0x20(%rbp)
   21b04:	4c 89 e7             	mov    %r12,%rdi
   21b07:	4c 8d 75 58          	lea    0x58(%rbp),%r14
   21b0b:	48 89 45 08          	mov    %rax,0x8(%rbp)
   21b0f:	48 8d 05 aa 49 00 00 	lea    0x49aa(%rip),%rax        # 264c0 <null_intf>
   21b16:	48 8d 15 63 66 00 00 	lea    0x6663(%rip),%rdx        # 28180 <aoedev_ata_desc>
   21b1d:	48 89 45 18          	mov    %rax,0x18(%rbp)
   21b21:	48 89 45 58          	mov    %rax,0x58(%rbp)
   21b25:	48 8d 05 14 66 00 00 	lea    0x6614(%rip),%rax        # 28140 <aoedev_config_desc>
   21b2c:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   21b30:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   21b34:	48 89 45 68          	mov    %rax,0x68(%rbp)
   21b38:	48 89 45 70          	mov    %rax,0x70(%rbp)
   21b3c:	48 89 6d 60          	mov    %rbp,0x60(%rbp)
   21b40:	e8 c9 e3 fe ff       	call   ff0e <ref_increment>
   21b45:	44 88 7d 3a          	mov    %r15b,0x3a(%rbp)
   21b49:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   21b4e:	48 8d 7d 3b          	lea    0x3b(%rbp),%rdi
   21b52:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   21b56:	49 8b 74 24 78       	mov    0x78(%r12),%rsi
   21b5b:	66 89 5d 38          	mov    %bx,0x38(%rbp)
   21b5f:	0f b6 50 43          	movzbl 0x43(%rax),%edx
   21b63:	e8 81 58 ff ff       	call   173e9 <__memcpy>
   21b68:	48 8d 05 31 69 00 00 	lea    0x6931(%rip),%rax        # 284a0 <abft_model>
   21b6f:	48 89 ad 80 00 00 00 	mov    %rbp,0x80(%rbp)
   21b76:	48 89 ef             	mov    %rbp,%rdi
   21b79:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
   21b80:	48 8d 85 90 00 00 00 	lea    0x90(%rbp),%rax
   21b87:	48 8d 35 a2 66 00 00 	lea    0x66a2(%rip),%rsi        # 28230 <aoecmd_cfg>
   21b8e:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   21b95:	48 89 85 98 00 00 00 	mov    %rax,0x98(%rbp)
   21b9c:	e8 95 fc ff ff       	call   21836 <aoecmd_create>
   21ba1:	49 89 c4             	mov    %rax,%r12
   21ba4:	48 85 c0             	test   %rax,%rax
   21ba7:	75 08                	jne    21bb1 <aoe_open+0x16d>
   21ba9:	41 bc 77 9f ff ce    	mov    $0xceff9f77,%r12d
   21baf:	eb 3c                	jmp    21bed <aoe_open+0x1a9>
   21bb1:	48 89 c7             	mov    %rax,%rdi
   21bb4:	e8 ce fd ff ff       	call   21987 <aoecmd_tx.isra.0>
   21bb9:	49 8d 7c 24 28       	lea    0x28(%r12),%rdi
   21bbe:	4c 89 f6             	mov    %r14,%rsi
   21bc1:	e8 7b 7c fe ff       	call   9841 <intf_plug_plug>
   21bc6:	45 8b a4 24 88 00 00 	mov    0x88(%r12),%r12d
   21bcd:	00 
   21bce:	45 85 e4             	test   %r12d,%r12d
   21bd1:	78 1a                	js     21bed <aoe_open+0x1a9>
   21bd3:	48 8d 75 18          	lea    0x18(%rbp),%rsi
   21bd7:	b9 02 00 00 00       	mov    $0x2,%ecx
   21bdc:	31 d2                	xor    %edx,%edx
   21bde:	4c 89 ef             	mov    %r13,%rdi
   21be1:	e8 64 06 00 00       	call   2224a <ata_open>
   21be6:	41 89 c4             	mov    %eax,%r12d
   21be9:	85 c0                	test   %eax,%eax
   21beb:	74 0b                	je     21bf8 <aoe_open+0x1b4>
   21bed:	44 89 e6             	mov    %r12d,%esi
   21bf0:	48 89 ef             	mov    %rbp,%rdi
   21bf3:	e8 88 fa ff ff       	call   21680 <aoedev_close>
   21bf8:	48 89 ef             	mov    %rbp,%rdi
   21bfb:	e8 1a e3 fe ff       	call   ff1a <ref_decrement>
   21c00:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   21c05:	48 2b 05 44 84 00 00 	sub    0x8444(%rip),%rax        # 2a050 <__stack_chk_guard>
   21c0c:	74 05                	je     21c13 <aoe_open+0x1cf>
   21c0e:	e8 4d 0e fe ff       	call   2a60 <__stack_chk_fail>
   21c13:	48 83 c4 18          	add    $0x18,%rsp
   21c17:	44 89 e0             	mov    %r12d,%eax
   21c1a:	5b                   	pop    %rbx
   21c1b:	5d                   	pop    %rbp
   21c1c:	41 5c                	pop    %r12
   21c1e:	41 5d                	pop    %r13
   21c20:	41 5e                	pop    %r14
   21c22:	41 5f                	pop    %r15
   21c24:	c3                   	ret    

0000000000021c25 <aoecmd_expired>:
   21c25:	f3 0f 1e fa          	endbr64 
   21c29:	48 81 ef 90 00 00 00 	sub    $0x90,%rdi
   21c30:	85 f6                	test   %esi,%esi
   21c32:	74 0a                	je     21c3e <aoecmd_expired+0x19>
   21c34:	be 6e 9f ff b3       	mov    $0xb3ff9f6e,%esi
   21c39:	e9 e2 f9 ff ff       	jmp    21620 <aoecmd_close>
   21c3e:	e9 44 fd ff ff       	jmp    21987 <aoecmd_tx.isra.0>

0000000000021c43 <aoedev_ata_command>:
   21c43:	f3 0f 1e fa          	endbr64 
   21c47:	48 8b 47 10          	mov    0x10(%rdi),%rax
   21c4b:	f6 80 80 00 00 00 01 	testb  $0x1,0x80(%rax)
   21c52:	75 06                	jne    21c5a <aoedev_ata_command+0x17>
   21c54:	b8 7a 9f ff b1       	mov    $0xb1ff9f7a,%eax
   21c59:	c3                   	ret    
   21c5a:	41 54                	push   %r12
   21c5c:	49 89 d4             	mov    %rdx,%r12
   21c5f:	55                   	push   %rbp
   21c60:	48 89 f5             	mov    %rsi,%rbp
   21c63:	48 8d 35 e6 65 00 00 	lea    0x65e6(%rip),%rsi        # 28250 <aoecmd_ata>
   21c6a:	53                   	push   %rbx
   21c6b:	e8 c6 fb ff ff       	call   21836 <aoecmd_create>
   21c70:	48 89 c3             	mov    %rax,%rbx
   21c73:	48 85 c0             	test   %rax,%rax
   21c76:	75 07                	jne    21c7f <aoedev_ata_command+0x3c>
   21c78:	b8 77 9f ff ce       	mov    $0xceff9f77,%eax
   21c7d:	eb 2b                	jmp    21caa <aoedev_ata_command+0x67>
   21c7f:	ba 38 00 00 00       	mov    $0x38,%edx
   21c84:	4c 89 e6             	mov    %r12,%rsi
   21c87:	48 8d 78 48          	lea    0x48(%rax),%rdi
   21c8b:	e8 59 57 ff ff       	call   173e9 <__memcpy>
   21c90:	48 89 df             	mov    %rbx,%rdi
   21c93:	e8 ef fc ff ff       	call   21987 <aoecmd_tx.isra.0>
   21c98:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   21c9c:	48 89 ee             	mov    %rbp,%rsi
   21c9f:	e8 9d 7b fe ff       	call   9841 <intf_plug_plug>
   21ca4:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax
   21caa:	5b                   	pop    %rbx
   21cab:	5d                   	pop    %rbp
   21cac:	41 5c                	pop    %r12
   21cae:	c3                   	ret    

0000000000021caf <aoe_rx>:
   21caf:	f3 0f 1e fa          	endbr64 
   21cb3:	41 55                	push   %r13
   21cb5:	49 89 fd             	mov    %rdi,%r13
   21cb8:	41 54                	push   %r12
   21cba:	55                   	push   %rbp
   21cbb:	48 8b 47 18          	mov    0x18(%rdi),%rax
   21cbf:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   21cc3:	48 29 c2             	sub    %rax,%rdx
   21cc6:	48 83 fa 09          	cmp    $0x9,%rdx
   21cca:	77 0b                	ja     21cd7 <aoe_rx+0x28>
   21ccc:	41 bc 7e 9f ff e3    	mov    $0xe3ff9f7e,%r12d
   21cd2:	e9 ee 00 00 00       	jmp    21dc5 <aoe_rx+0x116>
   21cd7:	8a 10                	mov    (%rax),%dl
   21cd9:	49 89 cc             	mov    %rcx,%r12
   21cdc:	89 d1                	mov    %edx,%ecx
   21cde:	83 e1 f0             	and    $0xfffffff0,%ecx
   21ce1:	80 f9 10             	cmp    $0x10,%cl
   21ce4:	74 0b                	je     21cf1 <aoe_rx+0x42>
   21ce6:	41 bc 7d 9f ff bb    	mov    $0xbbff9f7d,%r12d
   21cec:	e9 d4 00 00 00       	jmp    21dc5 <aoe_rx+0x116>
   21cf1:	80 e2 08             	and    $0x8,%dl
   21cf4:	75 0b                	jne    21d01 <aoe_rx+0x52>
   21cf6:	41 bc 7d 9f ff c0    	mov    $0xc0ff9f7d,%r12d
   21cfc:	e9 c4 00 00 00       	jmp    21dc5 <aoe_rx+0x116>
   21d01:	48 8b 35 68 65 00 00 	mov    0x6568(%rip),%rsi        # 28270 <aoe_commands>
   21d08:	48 8d 15 61 65 00 00 	lea    0x6561(%rip),%rdx        # 28270 <aoe_commands>
   21d0f:	8b 40 06             	mov    0x6(%rax),%eax
   21d12:	0f c8                	bswap  %eax
   21d14:	48 8d 6e e8          	lea    -0x18(%rsi),%rbp
   21d18:	48 8d 4d 18          	lea    0x18(%rbp),%rcx
   21d1c:	48 39 d1             	cmp    %rdx,%rcx
   21d1f:	0f 84 9a 00 00 00    	je     21dbf <aoe_rx+0x110>
   21d25:	3b 85 88 00 00 00    	cmp    0x88(%rbp),%eax
   21d2b:	75 1f                	jne    21d4c <aoe_rx+0x9d>
   21d2d:	48 89 ef             	mov    %rbp,%rdi
   21d30:	e8 d9 e1 fe ff       	call   ff0e <ref_increment>
   21d35:	49 8b 75 18          	mov    0x18(%r13),%rsi
   21d39:	49 8b 55 20          	mov    0x20(%r13),%rdx
   21d3d:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   21d41:	48 29 f2             	sub    %rsi,%rdx
   21d44:	48 83 fa 09          	cmp    $0x9,%rdx
   21d48:	77 0c                	ja     21d56 <aoe_rx+0xa7>
   21d4a:	eb 1e                	jmp    21d6a <aoe_rx+0xbb>
   21d4c:	48 8b 6d 18          	mov    0x18(%rbp),%rbp
   21d50:	48 83 ed 18          	sub    $0x18,%rbp
   21d54:	eb c2                	jmp    21d18 <aoe_rx+0x69>
   21d56:	66 8b 46 02          	mov    0x2(%rsi),%ax
   21d5a:	86 c4                	xchg   %al,%ah
   21d5c:	66 3b 41 38          	cmp    0x38(%rcx),%ax
   21d60:	75 08                	jne    21d6a <aoe_rx+0xbb>
   21d62:	8a 41 3a             	mov    0x3a(%rcx),%al
   21d65:	38 46 04             	cmp    %al,0x4(%rsi)
   21d68:	74 08                	je     21d72 <aoe_rx+0xc3>
   21d6a:	41 bc 7e 9f ff e3    	mov    $0xe3ff9f7e,%r12d
   21d70:	eb 2d                	jmp    21d9f <aoe_rx+0xf0>
   21d72:	f6 06 04             	testb  $0x4,(%rsi)
   21d75:	74 15                	je     21d8c <aoe_rx+0xdd>
   21d77:	be 68 9f ff e2       	mov    $0xe2ff9f68,%esi
   21d7c:	48 89 ef             	mov    %rbp,%rdi
   21d7f:	e8 9c f8 ff ff       	call   21620 <aoecmd_close>
   21d84:	41 bc 68 9f ff e2    	mov    $0xe2ff9f68,%r12d
   21d8a:	eb 13                	jmp    21d9f <aoe_rx+0xf0>
   21d8c:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   21d93:	4c 89 e1             	mov    %r12,%rcx
   21d96:	48 89 ef             	mov    %rbp,%rdi
   21d99:	ff 50 10             	call   *0x10(%rax)
   21d9c:	41 89 c4             	mov    %eax,%r12d
   21d9f:	4c 89 ef             	mov    %r13,%rdi
   21da2:	45 31 ed             	xor    %r13d,%r13d
   21da5:	e8 bc 7f fe ff       	call   9d66 <free_iob>
   21daa:	44 89 e6             	mov    %r12d,%esi
   21dad:	48 89 ef             	mov    %rbp,%rdi
   21db0:	e8 6b f8 ff ff       	call   21620 <aoecmd_close>
   21db5:	48 89 ef             	mov    %rbp,%rdi
   21db8:	e8 5d e1 fe ff       	call   ff1a <ref_decrement>
   21dbd:	eb 06                	jmp    21dc5 <aoe_rx+0x116>
   21dbf:	41 bc 72 9f ff d2    	mov    $0xd2ff9f72,%r12d
   21dc5:	4c 89 ef             	mov    %r13,%rdi
   21dc8:	e8 99 7f fe ff       	call   9d66 <free_iob>
   21dcd:	44 89 e0             	mov    %r12d,%eax
   21dd0:	5d                   	pop    %rbp
   21dd1:	41 5c                	pop    %r12
   21dd3:	41 5d                	pop    %r13
   21dd5:	c3                   	ret    

0000000000021dd6 <atacmd_done>:
   21dd6:	f3 0f 1e fa          	endbr64 
   21dda:	48 8b 47 68          	mov    0x68(%rdi),%rax
   21dde:	ff 60 28             	jmp    *0x28(%rax)

0000000000021de1 <atacmd_data_buffer>:
   21de1:	f3 0f 1e fa          	endbr64 
   21de5:	48 89 31             	mov    %rsi,(%rcx)
   21de8:	49 89 10             	mov    %rdx,(%r8)
   21deb:	c3                   	ret    

0000000000021dec <atacmd_data_none>:
   21dec:	f3 0f 1e fa          	endbr64 
   21df0:	c3                   	ret    

0000000000021df1 <atacmd_data_priv>:
   21df1:	f3 0f 1e fa          	endbr64 
   21df5:	48 8d 47 74          	lea    0x74(%rdi),%rax
   21df9:	48 89 01             	mov    %rax,(%rcx)
   21dfc:	48 8b 47 68          	mov    0x68(%rdi),%rax
   21e00:	48 8b 40 08          	mov    0x8(%rax),%rax
   21e04:	49 89 00             	mov    %rax,(%r8)
   21e07:	c3                   	ret    

0000000000021e08 <atadev_edd_describe>:
   21e08:	f3 0f 1e fa          	endbr64 
   21e0c:	48 b8 41 54 41 20 20 	movabs $0x2020202020415441,%rax
   21e13:	20 20 20 
   21e16:	83 7f 50 10          	cmpl   $0x10,0x50(%rdi)
   21e1a:	48 89 06             	mov    %rax,(%rsi)
   21e1d:	0f 94 02             	sete   (%rdx)
   21e20:	31 c0                	xor    %eax,%eax
   21e22:	c3                   	ret    

0000000000021e23 <ata_command>:
   21e23:	f3 0f 1e fa          	endbr64 
   21e27:	41 55                	push   %r13
   21e29:	49 89 d5             	mov    %rdx,%r13
   21e2c:	41 54                	push   %r12
   21e2e:	55                   	push   %rbp
   21e2f:	48 89 f5             	mov    %rsi,%rbp
   21e32:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 21e23 <ata_command>
   21e39:	48 83 ec 10          	sub    $0x10,%rsp
   21e3d:	48 8b 05 0c 82 00 00 	mov    0x820c(%rip),%rax        # 2a050 <__stack_chk_guard>
   21e44:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21e49:	31 c0                	xor    %eax,%eax
   21e4b:	48 89 e2             	mov    %rsp,%rdx
   21e4e:	e8 82 7a fe ff       	call   98d5 <intf_get_dest_op_untyped>
   21e53:	48 8b 3c 24          	mov    (%rsp),%rdi
   21e57:	49 89 c4             	mov    %rax,%r12
   21e5a:	e8 20 7a fe ff       	call   987f <intf_object>
   21e5f:	4d 85 e4             	test   %r12,%r12
   21e62:	74 11                	je     21e75 <ata_command+0x52>
   21e64:	48 89 c7             	mov    %rax,%rdi
   21e67:	4c 89 ea             	mov    %r13,%rdx
   21e6a:	48 89 ee             	mov    %rbp,%rsi
   21e6d:	41 ff d4             	call   *%r12
   21e70:	41 89 c4             	mov    %eax,%r12d
   21e73:	eb 06                	jmp    21e7b <ata_command+0x58>
   21e75:	41 bc 7d bf 8b c0    	mov    $0xc08bbf7d,%r12d
   21e7b:	48 8b 3c 24          	mov    (%rsp),%rdi
   21e7f:	e8 8c 79 fe ff       	call   9810 <intf_put>
   21e84:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   21e89:	48 2b 05 c0 81 00 00 	sub    0x81c0(%rip),%rax        # 2a050 <__stack_chk_guard>
   21e90:	74 05                	je     21e97 <ata_command+0x74>
   21e92:	e8 c9 0b fe ff       	call   2a60 <__stack_chk_fail>
   21e97:	48 83 c4 10          	add    $0x10,%rsp
   21e9b:	44 89 e0             	mov    %r12d,%eax
   21e9e:	5d                   	pop    %rbp
   21e9f:	41 5c                	pop    %r12
   21ea1:	41 5d                	pop    %r13
   21ea3:	c3                   	ret    

0000000000021ea4 <atacmd_close>:
   21ea4:	f3 0f 1e fa          	endbr64 
   21ea8:	53                   	push   %rbx
   21ea9:	48 89 fb             	mov    %rdi,%rbx
   21eac:	48 8d 7f 48          	lea    0x48(%rdi),%rdi
   21eb0:	48 83 ec 10          	sub    $0x10,%rsp
   21eb4:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   21eb8:	e8 e2 7a fe ff       	call   999f <intf_shutdown>
   21ebd:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   21ec1:	48 83 c4 10          	add    $0x10,%rsp
   21ec5:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   21ec9:	5b                   	pop    %rbx
   21eca:	e9 d0 7a fe ff       	jmp    999f <intf_shutdown>

0000000000021ecf <atadev_close>:
   21ecf:	f3 0f 1e fa          	endbr64 
   21ed3:	41 56                	push   %r14
   21ed5:	4c 8d 35 94 65 00 00 	lea    0x6594(%rip),%r14        # 28470 <ata_commands>
   21edc:	41 55                	push   %r13
   21ede:	41 89 f5             	mov    %esi,%r13d
   21ee1:	41 54                	push   %r12
   21ee3:	49 89 fc             	mov    %rdi,%r12
   21ee6:	48 83 c7 10          	add    $0x10,%rdi
   21eea:	55                   	push   %rbp
   21eeb:	53                   	push   %rbx
   21eec:	e8 ae 7a fe ff       	call   999f <intf_shutdown>
   21ef1:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
   21ef6:	44 89 ee             	mov    %r13d,%esi
   21ef9:	e8 a1 7a fe ff       	call   999f <intf_shutdown>
   21efe:	48 8b 05 6b 65 00 00 	mov    0x656b(%rip),%rax        # 28470 <ata_commands>
   21f05:	48 8b 18             	mov    (%rax),%rbx
   21f08:	48 8d 68 e8          	lea    -0x18(%rax),%rbp
   21f0c:	48 83 eb 18          	sub    $0x18,%rbx
   21f10:	48 8d 45 18          	lea    0x18(%rbp),%rax
   21f14:	4c 39 f0             	cmp    %r14,%rax
   21f17:	74 2e                	je     21f47 <atadev_close+0x78>
   21f19:	4c 39 65 10          	cmp    %r12,0x10(%rbp)
   21f1d:	75 1b                	jne    21f3a <atadev_close+0x6b>
   21f1f:	48 89 ef             	mov    %rbp,%rdi
   21f22:	e8 e7 df fe ff       	call   ff0e <ref_increment>
   21f27:	48 89 ef             	mov    %rbp,%rdi
   21f2a:	44 89 ee             	mov    %r13d,%esi
   21f2d:	e8 72 ff ff ff       	call   21ea4 <atacmd_close>
   21f32:	48 89 ef             	mov    %rbp,%rdi
   21f35:	e8 e0 df fe ff       	call   ff1a <ref_decrement>
   21f3a:	48 8b 43 18          	mov    0x18(%rbx),%rax
   21f3e:	48 89 dd             	mov    %rbx,%rbp
   21f41:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
   21f45:	eb c9                	jmp    21f10 <atadev_close+0x41>
   21f47:	5b                   	pop    %rbx
   21f48:	5d                   	pop    %rbp
   21f49:	41 5c                	pop    %r12
   21f4b:	41 5d                	pop    %r13
   21f4d:	41 5e                	pop    %r14
   21f4f:	c3                   	ret    

0000000000021f50 <atacmd_identify_done>:
   21f50:	f3 0f 1e fa          	endbr64 
   21f54:	55                   	push   %rbp
   21f55:	48 89 fd             	mov    %rdi,%rbp
   21f58:	48 83 ec 20          	sub    $0x20,%rsp
   21f5c:	48 8b 05 ed 80 00 00 	mov    0x80ed(%rip),%rax        # 2a050 <__stack_chk_guard>
   21f63:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   21f68:	48 8b 47 10          	mov    0x10(%rdi),%rax
   21f6c:	85 f6                	test   %esi,%esi
   21f6e:	74 18                	je     21f88 <atacmd_identify_done+0x38>
   21f70:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   21f75:	48 2b 05 d4 80 00 00 	sub    0x80d4(%rip),%rax        # 2a050 <__stack_chk_guard>
   21f7c:	75 61                	jne    21fdf <atacmd_identify_done+0x8f>
   21f7e:	48 83 c4 20          	add    $0x20,%rsp
   21f82:	5d                   	pop    %rbp
   21f83:	e9 1c ff ff ff       	jmp    21ea4 <atacmd_close>
   21f88:	f6 87 1b 01 00 00 04 	testb  $0x4,0x11b(%rdi)
   21f8f:	74 10                	je     21fa1 <atacmd_identify_done+0x51>
   21f91:	c7 40 58 01 00 00 00 	movl   $0x1,0x58(%rax)
   21f98:	48 8b 97 3c 01 00 00 	mov    0x13c(%rdi),%rdx
   21f9f:	eb 06                	jmp    21fa7 <atacmd_identify_done+0x57>
   21fa1:	8b 97 ec 00 00 00    	mov    0xec(%rdi),%edx
   21fa7:	8b 40 54             	mov    0x54(%rax),%eax
   21faa:	48 89 e6             	mov    %rsp,%rsi
   21fad:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
   21fb1:	48 89 14 24          	mov    %rdx,(%rsp)
   21fb5:	48 c7 44 24 08 00 02 	movq   $0x200,0x8(%rsp)
   21fbc:	00 00 
   21fbe:	89 44 24 10          	mov    %eax,0x10(%rsp)
   21fc2:	e8 fc 6f ff ff       	call   18fc3 <block_capacity>
   21fc7:	31 f6                	xor    %esi,%esi
   21fc9:	48 89 ef             	mov    %rbp,%rdi
   21fcc:	e8 d3 fe ff ff       	call   21ea4 <atacmd_close>
   21fd1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   21fd6:	48 2b 05 73 80 00 00 	sub    0x8073(%rip),%rax        # 2a050 <__stack_chk_guard>
   21fdd:	74 05                	je     21fe4 <atacmd_identify_done+0x94>
   21fdf:	e8 7c 0a fe ff       	call   2a60 <__stack_chk_fail>
   21fe4:	48 83 c4 20          	add    $0x20,%rsp
   21fe8:	5d                   	pop    %rbp
   21fe9:	c3                   	ret    

0000000000021fea <atadev_command>:
   21fea:	41 57                	push   %r15
   21fec:	41 56                	push   %r14
   21fee:	45 89 c6             	mov    %r8d,%r14d
   21ff1:	41 55                	push   %r13
   21ff3:	49 89 d5             	mov    %rdx,%r13
   21ff6:	41 54                	push   %r12
   21ff8:	4d 89 cc             	mov    %r9,%r12
   21ffb:	55                   	push   %rbp
   21ffc:	48 89 cd             	mov    %rcx,%rbp
   21fff:	53                   	push   %rbx
   22000:	48 89 fb             	mov    %rdi,%rbx
   22003:	48 83 ec 58          	sub    $0x58,%rsp
   22007:	48 8b 05 42 80 00 00 	mov    0x8042(%rip),%rax        # 2a050 <__stack_chk_guard>
   2200e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   22013:	48 8b 42 08          	mov    0x8(%rdx),%rax
   22017:	48 89 34 24          	mov    %rsi,(%rsp)
   2201b:	48 8d 78 78          	lea    0x78(%rax),%rdi
   2201f:	e8 12 a7 fe ff       	call   c736 <zalloc>
   22024:	48 85 c0             	test   %rax,%rax
   22027:	75 0b                	jne    22034 <atadev_command+0x4a>
   22029:	41 bc 77 bf 8b ce    	mov    $0xce8bbf77,%r12d
   2202f:	e9 57 01 00 00       	jmp    2218b <atadev_command+0x1a1>
   22034:	49 89 c7             	mov    %rax,%r15
   22037:	48 8d 05 e3 01 00 00 	lea    0x1e3(%rip),%rax        # 22221 <atacmd_free>
   2203e:	48 8d 15 3b 63 00 00 	lea    0x633b(%rip),%rdx        # 28380 <atacmd_block_desc>
   22045:	48 89 df             	mov    %rbx,%rdi
   22048:	49 89 47 08          	mov    %rax,0x8(%r15)
   2204c:	48 8d 05 6d 44 00 00 	lea    0x446d(%rip),%rax        # 264c0 <null_intf>
   22053:	49 89 47 28          	mov    %rax,0x28(%r15)
   22057:	49 89 47 48          	mov    %rax,0x48(%r15)
   2205b:	48 8d 05 de 62 00 00 	lea    0x62de(%rip),%rax        # 28340 <atacmd_ata_desc>
   22062:	49 89 47 58          	mov    %rax,0x58(%r15)
   22066:	49 89 47 60          	mov    %rax,0x60(%r15)
   2206a:	49 89 57 38          	mov    %rdx,0x38(%r15)
   2206e:	49 89 57 40          	mov    %rdx,0x40(%r15)
   22072:	4d 89 7f 30          	mov    %r15,0x30(%r15)
   22076:	4d 89 7f 50          	mov    %r15,0x50(%r15)
   2207a:	e8 8f de fe ff       	call   ff0e <ref_increment>
   2207f:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   22083:	49 8d 7f 18          	lea    0x18(%r15),%rdi
   22087:	48 8d 35 e2 63 00 00 	lea    0x63e2(%rip),%rsi        # 28470 <ata_commands>
   2208e:	e8 fe a0 fe ff       	call   c191 <extern_list_add>
   22093:	44 89 f0             	mov    %r14d,%eax
   22096:	4d 89 6f 68          	mov    %r13,0x68(%r15)
   2209a:	c1 e0 09             	shl    $0x9,%eax
   2209d:	48 39 84 24 90 00 00 	cmp    %rax,0x90(%rsp)
   220a4:	00 
   220a5:	74 0b                	je     220b2 <atadev_command+0xc8>
   220a7:	41 bc 7e bf 8b e3    	mov    $0xe38bbf7e,%r12d
   220ad:	e9 bb 00 00 00       	jmp    2216d <atadev_command+0x183>
   220b2:	4c 8d 5c 24 10       	lea    0x10(%rsp),%r11
   220b7:	b9 38 00 00 00       	mov    $0x38,%ecx
   220bc:	31 c0                	xor    %eax,%eax
   220be:	4c 89 df             	mov    %r11,%rdi
   220c1:	f3 aa                	rep stos %al,%es:(%rdi)
   220c3:	8a 43 50             	mov    0x50(%rbx),%al
   220c6:	8b 53 58             	mov    0x58(%rbx),%edx
   220c9:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   220ce:	66 44 89 74 24 18    	mov    %r14w,0x18(%rsp)
   220d4:	83 c8 e0             	or     $0xffffffe0,%eax
   220d7:	89 54 24 20          	mov    %edx,0x20(%rsp)
   220db:	88 44 24 1c          	mov    %al,0x1c(%rsp)
   220df:	85 d2                	test   %edx,%edx
   220e1:	0f 85 9b 00 00 00    	jne    22182 <atadev_command+0x198>
   220e7:	48 c1 ed 18          	shr    $0x18,%rbp
   220eb:	09 e8                	or     %ebp,%eax
   220ed:	88 44 24 1c          	mov    %al,0x1c(%rsp)
   220f1:	41 8a 45 10          	mov    0x10(%r13),%al
   220f5:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   220fa:	4c 89 e6             	mov    %r12,%rsi
   220fd:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   22102:	4c 89 ff             	mov    %r15,%rdi
   22105:	88 44 24 1d          	mov    %al,0x1d(%rsp)
   22109:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
   22110:	00 
   22111:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
   22116:	41 ff 55 18          	call   *0x18(%r13)
   2211a:	4c 89 e6             	mov    %r12,%rsi
   2211d:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   22122:	4c 89 ff             	mov    %r15,%rdi
   22125:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
   2212c:	00 
   2212d:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   22132:	41 ff 55 20          	call   *0x20(%r13)
   22136:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2213b:	49 8d 77 48          	lea    0x48(%r15),%rsi
   2213f:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   22143:	e8 db fc ff ff       	call   21e23 <ata_command>
   22148:	41 89 c4             	mov    %eax,%r12d
   2214b:	85 c0                	test   %eax,%eax
   2214d:	78 1e                	js     2216d <atadev_command+0x183>
   2214f:	41 89 47 70          	mov    %eax,0x70(%r15)
   22153:	48 8b 34 24          	mov    (%rsp),%rsi
   22157:	49 8d 7f 28          	lea    0x28(%r15),%rdi
   2215b:	45 31 e4             	xor    %r12d,%r12d
   2215e:	e8 de 76 fe ff       	call   9841 <intf_plug_plug>
   22163:	4c 89 ff             	mov    %r15,%rdi
   22166:	e8 af dd fe ff       	call   ff1a <ref_decrement>
   2216b:	eb 1e                	jmp    2218b <atadev_command+0x1a1>
   2216d:	4c 89 ff             	mov    %r15,%rdi
   22170:	44 89 e6             	mov    %r12d,%esi
   22173:	e8 2c fd ff ff       	call   21ea4 <atacmd_close>
   22178:	4c 89 ff             	mov    %r15,%rdi
   2217b:	e8 9a dd fe ff       	call   ff1a <ref_decrement>
   22180:	eb 09                	jmp    2218b <atadev_command+0x1a1>
   22182:	41 8a 45 11          	mov    0x11(%r13),%al
   22186:	e9 6a ff ff ff       	jmp    220f5 <atadev_command+0x10b>
   2218b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   22190:	48 2b 05 b9 7e 00 00 	sub    0x7eb9(%rip),%rax        # 2a050 <__stack_chk_guard>
   22197:	74 05                	je     2219e <atadev_command+0x1b4>
   22199:	e8 c2 08 fe ff       	call   2a60 <__stack_chk_fail>
   2219e:	48 83 c4 58          	add    $0x58,%rsp
   221a2:	44 89 e0             	mov    %r12d,%eax
   221a5:	5b                   	pop    %rbx
   221a6:	5d                   	pop    %rbp
   221a7:	41 5c                	pop    %r12
   221a9:	41 5d                	pop    %r13
   221ab:	41 5e                	pop    %r14
   221ad:	41 5f                	pop    %r15
   221af:	c3                   	ret    

00000000000221b0 <atadev_read_capacity>:
   221b0:	f3 0f 1e fa          	endbr64 
   221b4:	48 83 ec 10          	sub    $0x10,%rsp
   221b8:	45 31 c9             	xor    %r9d,%r9d
   221bb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   221c1:	31 c9                	xor    %ecx,%ecx
   221c3:	68 00 02 00 00       	push   $0x200
   221c8:	48 8d 15 f1 61 00 00 	lea    0x61f1(%rip),%rdx        # 283c0 <atacmd_identify>
   221cf:	e8 16 fe ff ff       	call   21fea <atadev_command>
   221d4:	48 83 c4 18          	add    $0x18,%rsp
   221d8:	c3                   	ret    

00000000000221d9 <atadev_write>:
   221d9:	f3 0f 1e fa          	endbr64 
   221dd:	48 83 ec 10          	sub    $0x10,%rsp
   221e1:	41 51                	push   %r9
   221e3:	4d 89 c1             	mov    %r8,%r9
   221e6:	41 89 c8             	mov    %ecx,%r8d
   221e9:	48 89 d1             	mov    %rdx,%rcx
   221ec:	48 8d 15 0d 62 00 00 	lea    0x620d(%rip),%rdx        # 28400 <atacmd_write>
   221f3:	e8 f2 fd ff ff       	call   21fea <atadev_command>
   221f8:	48 83 c4 18          	add    $0x18,%rsp
   221fc:	c3                   	ret    

00000000000221fd <atadev_read>:
   221fd:	f3 0f 1e fa          	endbr64 
   22201:	48 83 ec 10          	sub    $0x10,%rsp
   22205:	41 51                	push   %r9
   22207:	4d 89 c1             	mov    %r8,%r9
   2220a:	41 89 c8             	mov    %ecx,%r8d
   2220d:	48 89 d1             	mov    %rdx,%rcx
   22210:	48 8d 15 29 62 00 00 	lea    0x6229(%rip),%rdx        # 28440 <atacmd_read>
   22217:	e8 ce fd ff ff       	call   21fea <atadev_command>
   2221c:	48 83 c4 18          	add    $0x18,%rsp
   22220:	c3                   	ret    

0000000000022221 <atacmd_free>:
   22221:	f3 0f 1e fa          	endbr64 
   22225:	55                   	push   %rbp
   22226:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   2222a:	48 89 fd             	mov    %rdi,%rbp
   2222d:	48 8b 47 20          	mov    0x20(%rdi),%rax
   22231:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   22235:	48 89 42 08          	mov    %rax,0x8(%rdx)
   22239:	48 89 10             	mov    %rdx,(%rax)
   2223c:	e8 d9 dc fe ff       	call   ff1a <ref_decrement>
   22241:	48 89 ef             	mov    %rbp,%rdi
   22244:	5d                   	pop    %rbp
   22245:	e9 d8 a4 fe ff       	jmp    c722 <free>

000000000002224a <ata_open>:
   2224a:	f3 0f 1e fa          	endbr64 
   2224e:	41 56                	push   %r14
   22250:	41 89 d6             	mov    %edx,%r14d
   22253:	41 54                	push   %r12
   22255:	49 89 fc             	mov    %rdi,%r12
   22258:	bf 60 00 00 00       	mov    $0x60,%edi
   2225d:	55                   	push   %rbp
   2225e:	53                   	push   %rbx
   2225f:	89 cb                	mov    %ecx,%ebx
   22261:	48 83 ec 18          	sub    $0x18,%rsp
   22265:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   2226a:	e8 c7 a4 fe ff       	call   c736 <zalloc>
   2226f:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   22274:	48 85 c0             	test   %rax,%rax
   22277:	75 07                	jne    22280 <ata_open+0x36>
   22279:	b8 77 bf 8b ce       	mov    $0xce8bbf77,%eax
   2227e:	eb 5e                	jmp    222de <ata_open+0x94>
   22280:	48 89 c5             	mov    %rax,%rbp
   22283:	48 8d 05 36 42 00 00 	lea    0x4236(%rip),%rax        # 264c0 <null_intf>
   2228a:	48 8d 15 2f 60 00 00 	lea    0x602f(%rip),%rdx        # 282c0 <atadev_block_desc>
   22291:	48 89 45 10          	mov    %rax,0x10(%rbp)
   22295:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   22299:	48 89 45 30          	mov    %rax,0x30(%rbp)
   2229d:	48 8d 05 dc 5f 00 00 	lea    0x5fdc(%rip),%rax        # 28280 <atadev_ata_desc>
   222a4:	48 89 45 40          	mov    %rax,0x40(%rbp)
   222a8:	48 89 45 48          	mov    %rax,0x48(%rbp)
   222ac:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   222b0:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   222b4:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   222b8:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   222bc:	44 89 75 50          	mov    %r14d,0x50(%rbp)
   222c0:	89 5d 54             	mov    %ebx,0x54(%rbp)
   222c3:	e8 79 75 fe ff       	call   9841 <intf_plug_plug>
   222c8:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   222cc:	4c 89 e6             	mov    %r12,%rsi
   222cf:	e8 6d 75 fe ff       	call   9841 <intf_plug_plug>
   222d4:	48 89 ef             	mov    %rbp,%rdi
   222d7:	e8 3e dc fe ff       	call   ff1a <ref_decrement>
   222dc:	31 c0                	xor    %eax,%eax
   222de:	48 83 c4 18          	add    $0x18,%rsp
   222e2:	5b                   	pop    %rbx
   222e3:	5d                   	pop    %rbp
   222e4:	41 5c                	pop    %r12
   222e6:	41 5e                	pop    %r14
   222e8:	c3                   	ret    

00000000000222e9 <edd_describe>:
   222e9:	f3 0f 1e fa          	endbr64 
   222ed:	41 55                	push   %r13
   222ef:	49 89 d5             	mov    %rdx,%r13
   222f2:	41 54                	push   %r12
   222f4:	55                   	push   %rbp
   222f5:	48 89 f5             	mov    %rsi,%rbp
   222f8:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 222e9 <edd_describe>
   222ff:	48 83 ec 10          	sub    $0x10,%rsp
   22303:	48 8b 05 46 7d 00 00 	mov    0x7d46(%rip),%rax        # 2a050 <__stack_chk_guard>
   2230a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2230f:	31 c0                	xor    %eax,%eax
   22311:	48 89 e2             	mov    %rsp,%rdx
   22314:	e8 bc 75 fe ff       	call   98d5 <intf_get_dest_op_untyped>
   22319:	48 8b 3c 24          	mov    (%rsp),%rdi
   2231d:	49 89 c4             	mov    %rax,%r12
   22320:	e8 5a 75 fe ff       	call   987f <intf_object>
   22325:	4d 85 e4             	test   %r12,%r12
   22328:	74 11                	je     2233b <edd_describe+0x52>
   2232a:	48 89 c7             	mov    %rax,%rdi
   2232d:	4c 89 ea             	mov    %r13,%rdx
   22330:	48 89 ee             	mov    %rbp,%rsi
   22333:	41 ff d4             	call   *%r12
   22336:	41 89 c4             	mov    %eax,%r12d
   22339:	eb 06                	jmp    22341 <edd_describe+0x58>
   2233b:	41 bc 7d df ea c3    	mov    $0xc3eadf7d,%r12d
   22341:	48 8b 3c 24          	mov    (%rsp),%rdi
   22345:	e8 c6 74 fe ff       	call   9810 <intf_put>
   2234a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2234f:	48 2b 05 fa 7c 00 00 	sub    0x7cfa(%rip),%rax        # 2a050 <__stack_chk_guard>
   22356:	74 05                	je     2235d <edd_describe+0x74>
   22358:	e8 03 07 fe ff       	call   2a60 <__stack_chk_fail>
   2235d:	48 83 c4 10          	add    $0x10,%rsp
   22361:	44 89 e0             	mov    %r12d,%eax
   22364:	5d                   	pop    %rbp
   22365:	41 5c                	pop    %r12
   22367:	41 5d                	pop    %r13
   22369:	c3                   	ret    
