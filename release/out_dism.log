
bin-x86_64-efi/8086100e.efidrv.tmp:     file format elf64-x86-64


Disassembly of section .text:

0000000000001000 <config_exec>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	41 54                	push   %r12
    1006:	48 8d 15 83 3a 02 00 	lea    0x23a83(%rip),%rdx        # 24a90 <config_cmd>
    100d:	55                   	push   %rbp
    100e:	89 fd                	mov    %edi,%ebp
    1010:	53                   	push   %rbx
    1011:	48 89 f3             	mov    %rsi,%rbx
    1014:	48 83 ec 20          	sub    $0x20,%rsp
    1018:	48 8b 05 51 8f 02 00 	mov    0x28f51(%rip),%rax        # 29f70 <__stack_chk_guard>
    101f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1024:	31 c0                	xor    %eax,%eax
    1026:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
    102b:	e8 7f e1 00 00       	call   f1af <parse_options>
    1030:	41 89 c4             	mov    %eax,%r12d
    1033:	85 c0                	test   %eax,%eax
    1035:	75 50                	jne    1087 <config_exec+0x87>
    1037:	48 63 05 6a 8f 02 00 	movslq 0x28f6a(%rip),%rax        # 29fa8 <optind>
    103e:	48 8d 3d 8f 33 02 00 	lea    0x2338f(%rip),%rdi        # 243d4 <.LC0>
    1045:	39 c5                	cmp    %eax,%ebp
    1047:	7e 04                	jle    104d <config_exec+0x4d>
    1049:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    104d:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    1052:	e8 b6 dd 00 00       	call   ee0d <parse_settings>
    1057:	41 89 c4             	mov    %eax,%r12d
    105a:	85 c0                	test   %eax,%eax
    105c:	75 29                	jne    1087 <config_exec+0x87>
    105e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    1063:	e8 43 23 01 00       	call   133ab <settings_ui>
    1068:	41 89 c4             	mov    %eax,%r12d
    106b:	85 c0                	test   %eax,%eax
    106d:	74 18                	je     1087 <config_exec+0x87>
    106f:	89 c7                	mov    %eax,%edi
    1071:	e8 26 27 01 00       	call   1379c <strerror>
    1076:	48 8d 3d 24 16 02 00 	lea    0x21624(%rip),%rdi        # 226a1 <.LC1>
    107d:	48 89 c6             	mov    %rax,%rsi
    1080:	31 c0                	xor    %eax,%eax
    1082:	e8 17 61 01 00       	call   1719e <printf>
    1087:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    108c:	48 2b 05 dd 8e 02 00 	sub    0x28edd(%rip),%rax        # 29f70 <__stack_chk_guard>
    1093:	74 05                	je     109a <config_exec+0x9a>
    1095:	e8 c6 19 00 00       	call   2a60 <__stack_chk_fail>
    109a:	48 83 c4 20          	add    $0x20,%rsp
    109e:	44 89 e0             	mov    %r12d,%eax
    10a1:	5b                   	pop    %rbx
    10a2:	5d                   	pop    %rbp
    10a3:	41 5c                	pop    %r12
    10a5:	c3                   	ret    

00000000000010a6 <cpuid_exec>:
    10a6:	f3 0f 1e fa          	endbr64 
    10aa:	53                   	push   %rbx
    10ab:	48 8d 15 0e 3a 02 00 	lea    0x23a0e(%rip),%rdx        # 24ac0 <cpuid_cmd>
    10b2:	48 89 f3             	mov    %rsi,%rbx
    10b5:	48 83 ec 40          	sub    $0x40,%rsp
    10b9:	48 8b 05 b0 8e 02 00 	mov    0x28eb0(%rip),%rax        # 29f70 <__stack_chk_guard>
    10c0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    10c5:	31 c0                	xor    %eax,%eax
    10c7:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    10cc:	e8 de e0 00 00       	call   f1af <parse_options>
    10d1:	85 c0                	test   %eax,%eax
    10d3:	75 57                	jne    112c <cpuid_exec+0x86>
    10d5:	48 63 05 cc 8e 02 00 	movslq 0x28ecc(%rip),%rax        # 29fa8 <optind>
    10dc:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
    10e1:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    10e5:	e8 88 db 00 00       	call   ec72 <parse_integer>
    10ea:	85 c0                	test   %eax,%eax
    10ec:	75 3e                	jne    112c <cpuid_exec+0x86>
    10ee:	48 8d 5c 24 28       	lea    0x28(%rsp),%rbx
    10f3:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    10f7:	48 89 df             	mov    %rbx,%rdi
    10fa:	e8 68 82 01 00       	call   19367 <x86_features>
    10ff:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
    1104:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
    1109:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    110d:	48 0f 44 d3          	cmove  %rbx,%rdx
    1111:	83 7c 24 24 00       	cmpl   $0x0,0x24(%rsp)
    1116:	8b 4a 04             	mov    0x4(%rdx),%ecx
    1119:	0f 45 0a             	cmovne (%rdx),%ecx
    111c:	89 ca                	mov    %ecx,%edx
    111e:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    1122:	0f a3 ca             	bt     %ecx,%edx
    1125:	72 05                	jb     112c <cpuid_exec+0x86>
    1127:	b8 72 1f 7f d2       	mov    $0xd27f1f72,%eax
    112c:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    1131:	48 2b 15 38 8e 02 00 	sub    0x28e38(%rip),%rdx        # 29f70 <__stack_chk_guard>
    1138:	74 05                	je     113f <cpuid_exec+0x99>
    113a:	e8 21 19 00 00       	call   2a60 <__stack_chk_fail>
    113f:	48 83 c4 40          	add    $0x40,%rsp
    1143:	5b                   	pop    %rbx
    1144:	c3                   	ret    

0000000000001145 <probe_devices>:
    1145:	f3 0f 1e fa          	endbr64 
    1149:	55                   	push   %rbp
    114a:	48 8d 2d c7 7d 02 00 	lea    0x27dc7(%rip),%rbp        # 28f18 <ipv4_routing_family>
    1151:	53                   	push   %rbx
    1152:	48 8d 1d 9f 7c 02 00 	lea    0x27c9f(%rip),%rbx        # 28df8 <efi_root_device>
    1159:	52                   	push   %rdx
    115a:	48 39 eb             	cmp    %rbp,%rbx
    115d:	73 44                	jae    11a3 <probe_devices+0x5e>
    115f:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    1163:	48 8d 35 c6 39 02 00 	lea    0x239c6(%rip),%rsi        # 24b30 <devices>
    116a:	e8 52 af 00 00       	call   c0c1 <extern_list_add>
    116f:	48 8d 43 68          	lea    0x68(%rbx),%rax
    1173:	48 89 df             	mov    %rbx,%rdi
    1176:	48 89 43 68          	mov    %rax,0x68(%rbx)
    117a:	48 89 43 70          	mov    %rax,0x70(%rbx)
    117e:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
    1185:	ff 10                	call   *(%rax)
    1187:	85 c0                	test   %eax,%eax
    1189:	74 0f                	je     119a <probe_devices+0x55>
    118b:	48 8b 53 58          	mov    0x58(%rbx),%rdx
    118f:	48 8b 43 60          	mov    0x60(%rbx),%rax
    1193:	48 89 42 08          	mov    %rax,0x8(%rdx)
    1197:	48 89 10             	mov    %rdx,(%rax)
    119a:	48 81 c3 90 00 00 00 	add    $0x90,%rbx
    11a1:	eb b7                	jmp    115a <probe_devices+0x15>
    11a3:	58                   	pop    %rax
    11a4:	5b                   	pop    %rbx
    11a5:	5d                   	pop    %rbp
    11a6:	c3                   	ret    

00000000000011a7 <identify_device>:
    11a7:	f3 0f 1e fa          	endbr64 
    11ab:	41 54                	push   %r12
    11ad:	48 8d 35 f3 ff ff ff 	lea    -0xd(%rip),%rsi        # 11a7 <identify_device>
    11b4:	45 31 e4             	xor    %r12d,%r12d
    11b7:	53                   	push   %rbx
    11b8:	48 83 ec 18          	sub    $0x18,%rsp
    11bc:	48 8b 05 ad 8d 02 00 	mov    0x28dad(%rip),%rax        # 29f70 <__stack_chk_guard>
    11c3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    11c8:	31 c0                	xor    %eax,%eax
    11ca:	48 89 e2             	mov    %rsp,%rdx
    11cd:	e8 33 86 00 00       	call   9805 <intf_get_dest_op_untyped>
    11d2:	48 8b 3c 24          	mov    (%rsp),%rdi
    11d6:	48 89 c3             	mov    %rax,%rbx
    11d9:	e8 d1 85 00 00       	call   97af <intf_object>
    11de:	48 85 db             	test   %rbx,%rbx
    11e1:	74 08                	je     11eb <identify_device+0x44>
    11e3:	48 89 c7             	mov    %rax,%rdi
    11e6:	ff d3                	call   *%rbx
    11e8:	49 89 c4             	mov    %rax,%r12
    11eb:	48 8b 3c 24          	mov    (%rsp),%rdi
    11ef:	e8 4c 85 00 00       	call   9740 <intf_put>
    11f4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    11f9:	48 2b 05 70 8d 02 00 	sub    0x28d70(%rip),%rax        # 29f70 <__stack_chk_guard>
    1200:	74 05                	je     1207 <identify_device+0x60>
    1202:	e8 59 18 00 00       	call   2a60 <__stack_chk_fail>
    1207:	48 83 c4 18          	add    $0x18,%rsp
    120b:	4c 89 e0             	mov    %r12,%rax
    120e:	5b                   	pop    %rbx
    120f:	41 5c                	pop    %r12
    1211:	c3                   	ret    

0000000000001212 <remove_devices>:
    1212:	f3 0f 1e fa          	endbr64 
    1216:	83 3d ab 88 02 00 00 	cmpl   $0x0,0x288ab(%rip)        # 29ac8 <device_keep_count>
    121d:	75 54                	jne    1273 <remove_devices+0x61>
    121f:	48 8b 05 0a 39 02 00 	mov    0x2390a(%rip),%rax        # 24b30 <devices>
    1226:	41 54                	push   %r12
    1228:	4c 8d 25 01 39 02 00 	lea    0x23901(%rip),%r12        # 24b30 <devices>
    122f:	55                   	push   %rbp
    1230:	53                   	push   %rbx
    1231:	48 8b 28             	mov    (%rax),%rbp
    1234:	48 8d 58 a8          	lea    -0x58(%rax),%rbx
    1238:	48 83 ed 58          	sub    $0x58,%rbp
    123c:	48 8d 43 58          	lea    0x58(%rbx),%rax
    1240:	4c 39 e0             	cmp    %r12,%rax
    1243:	74 29                	je     126e <remove_devices+0x5c>
    1245:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
    124c:	48 89 df             	mov    %rbx,%rdi
    124f:	ff 50 08             	call   *0x8(%rax)
    1252:	48 8b 43 60          	mov    0x60(%rbx),%rax
    1256:	48 8b 53 58          	mov    0x58(%rbx),%rdx
    125a:	48 89 eb             	mov    %rbp,%rbx
    125d:	48 89 42 08          	mov    %rax,0x8(%rdx)
    1261:	48 89 10             	mov    %rdx,(%rax)
    1264:	48 8b 45 58          	mov    0x58(%rbp),%rax
    1268:	48 8d 68 a8          	lea    -0x58(%rax),%rbp
    126c:	eb ce                	jmp    123c <remove_devices+0x2a>
    126e:	5b                   	pop    %rbx
    126f:	5d                   	pop    %rbp
    1270:	41 5c                	pop    %r12
    1272:	c3                   	ret    
    1273:	c3                   	ret    

0000000000001274 <pxebs_exec>:
    1274:	f3 0f 1e fa          	endbr64 
    1278:	41 54                	push   %r12
    127a:	48 8d 15 bf 38 02 00 	lea    0x238bf(%rip),%rdx        # 24b40 <pxebs_cmd>
    1281:	53                   	push   %rbx
    1282:	48 89 f3             	mov    %rsi,%rbx
    1285:	48 83 ec 28          	sub    $0x28,%rsp
    1289:	48 8b 05 e0 8c 02 00 	mov    0x28ce0(%rip),%rax        # 29f70 <__stack_chk_guard>
    1290:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1295:	31 c0                	xor    %eax,%eax
    1297:	48 8d 4c 24 0b       	lea    0xb(%rsp),%rcx
    129c:	e8 0e df 00 00       	call   f1af <parse_options>
    12a1:	41 89 c4             	mov    %eax,%r12d
    12a4:	85 c0                	test   %eax,%eax
    12a6:	75 6f                	jne    1317 <pxebs_exec+0xa3>
    12a8:	48 63 05 f9 8c 02 00 	movslq 0x28cf9(%rip),%rax        # 29fa8 <optind>
    12af:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    12b4:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    12b8:	e8 68 da 00 00       	call   ed25 <parse_netdev>
    12bd:	41 89 c4             	mov    %eax,%r12d
    12c0:	85 c0                	test   %eax,%eax
    12c2:	75 53                	jne    1317 <pxebs_exec+0xa3>
    12c4:	48 63 05 dd 8c 02 00 	movslq 0x28cdd(%rip),%rax        # 29fa8 <optind>
    12cb:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    12d0:	48 8b 7c c3 08       	mov    0x8(%rbx,%rax,8),%rdi
    12d5:	e8 98 d9 00 00       	call   ec72 <parse_integer>
    12da:	41 89 c4             	mov    %eax,%r12d
    12dd:	85 c0                	test   %eax,%eax
    12df:	75 36                	jne    1317 <pxebs_exec+0xa3>
    12e1:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    12e5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    12ea:	e8 46 00 00 00       	call   1335 <pxebs>
    12ef:	41 89 c4             	mov    %eax,%r12d
    12f2:	85 c0                	test   %eax,%eax
    12f4:	74 21                	je     1317 <pxebs_exec+0xa3>
    12f6:	89 c7                	mov    %eax,%edi
    12f8:	e8 9f 24 01 00       	call   1379c <strerror>
    12fd:	48 8d 3d eb 13 02 00 	lea    0x213eb(%rip),%rdi        # 226ef <.LC0>
    1304:	48 89 c2             	mov    %rax,%rdx
    1307:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    130c:	48 8d 70 34          	lea    0x34(%rax),%rsi
    1310:	31 c0                	xor    %eax,%eax
    1312:	e8 87 5e 01 00       	call   1719e <printf>
    1317:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    131c:	48 2b 05 4d 8c 02 00 	sub    0x28c4d(%rip),%rax        # 29f70 <__stack_chk_guard>
    1323:	74 05                	je     132a <pxebs_exec+0xb6>
    1325:	e8 36 17 00 00       	call   2a60 <__stack_chk_fail>
    132a:	48 83 c4 28          	add    $0x28,%rsp
    132e:	44 89 e0             	mov    %r12d,%eax
    1331:	5b                   	pop    %rbx
    1332:	41 5c                	pop    %r12
    1334:	c3                   	ret    

0000000000001335 <pxebs>:
    1335:	f3 0f 1e fa          	endbr64 
    1339:	41 54                	push   %r12
    133b:	41 89 f4             	mov    %esi,%r12d
    133e:	31 c0                	xor    %eax,%eax
    1340:	48 8d 77 34          	lea    0x34(%rdi),%rsi
    1344:	55                   	push   %rbp
    1345:	44 89 e2             	mov    %r12d,%edx
    1348:	48 89 fd             	mov    %rdi,%rbp
    134b:	48 8d 3d e7 13 02 00 	lea    0x213e7(%rip),%rdi        # 22739 <.LC0>
    1352:	41 50                	push   %r8
    1354:	e8 45 5e 01 00       	call   1719e <printf>
    1359:	44 89 e2             	mov    %r12d,%edx
    135c:	48 89 ee             	mov    %rbp,%rsi
    135f:	48 8d 3d ba 54 02 00 	lea    0x254ba(%rip),%rdi        # 26820 <monojob>
    1366:	e8 b9 8e 01 00       	call   1a224 <start_pxebs>
    136b:	85 c0                	test   %eax,%eax
    136d:	75 12                	jne    1381 <pxebs+0x4c>
    136f:	59                   	pop    %rcx
    1370:	31 f6                	xor    %esi,%esi
    1372:	48 8d 3d 5b 30 02 00 	lea    0x2305b(%rip),%rdi        # 243d4 <.LC0>
    1379:	5d                   	pop    %rbp
    137a:	41 5c                	pop    %r12
    137c:	e9 aa be 00 00       	jmp    d22b <monojob_wait>
    1381:	5a                   	pop    %rdx
    1382:	5d                   	pop    %rbp
    1383:	41 5c                	pop    %r12
    1385:	c3                   	ret    

0000000000001386 <dns_label>:
    1386:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    138a:	48 89 f0             	mov    %rsi,%rax
    138d:	48 8d 70 01          	lea    0x1(%rax),%rsi
    1391:	48 39 ce             	cmp    %rcx,%rsi
    1394:	76 02                	jbe    1398 <dns_label+0x12>
    1396:	eb 3a                	jmp    13d2 <dns_label+0x4c>
    1398:	4c 8b 07             	mov    (%rdi),%r8
    139b:	49 01 c0             	add    %rax,%r8
    139e:	41 0f b6 10          	movzbl (%r8),%edx
    13a2:	f6 c2 c0             	test   $0xc0,%dl
    13a5:	74 23                	je     13ca <dns_label+0x44>
    13a7:	48 8d 50 02          	lea    0x2(%rax),%rdx
    13ab:	48 39 d1             	cmp    %rdx,%rcx
    13ae:	73 02                	jae    13b2 <dns_label+0x2c>
    13b0:	eb 20                	jmp    13d2 <dns_label+0x4c>
    13b2:	66 41 8b 10          	mov    (%r8),%dx
    13b6:	86 d6                	xchg   %dl,%dh
    13b8:	81 e2 ff 3f 00 00    	and    $0x3fff,%edx
    13be:	48 39 d0             	cmp    %rdx,%rax
    13c1:	76 05                	jbe    13c8 <dns_label+0x42>
    13c3:	48 89 d0             	mov    %rdx,%rax
    13c6:	eb c5                	jmp    138d <dns_label+0x7>
    13c8:	eb 08                	jmp    13d2 <dns_label+0x4c>
    13ca:	48 01 f2             	add    %rsi,%rdx
    13cd:	48 39 d1             	cmp    %rdx,%rcx
    13d0:	73 05                	jae    13d7 <dns_label+0x51>
    13d2:	b8 7e 9f ee e3       	mov    $0xe3ee9f7e,%eax
    13d7:	c3                   	ret    

00000000000013d8 <dns_done>:
    13d8:	f3 0f 1e fa          	endbr64 
    13dc:	55                   	push   %rbp
    13dd:	89 f5                	mov    %esi,%ebp
    13df:	53                   	push   %rbx
    13e0:	48 89 fb             	mov    %rdi,%rbx
    13e3:	48 8d 7f 50          	lea    0x50(%rdi),%rdi
    13e7:	50                   	push   %rax
    13e8:	e8 e3 ee 00 00       	call   102d0 <stop_timer>
    13ed:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    13f1:	89 ee                	mov    %ebp,%esi
    13f3:	e8 d7 84 00 00       	call   98cf <intf_shutdown>
    13f8:	5a                   	pop    %rdx
    13f9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    13fd:	89 ee                	mov    %ebp,%esi
    13ff:	5b                   	pop    %rbx
    1400:	5d                   	pop    %rbp
    1401:	e9 c9 84 00 00       	jmp    98cf <intf_shutdown>

0000000000001406 <dns_xfer_close>:
    1406:	f3 0f 1e fa          	endbr64 
    140a:	85 f6                	test   %esi,%esi
    140c:	75 05                	jne    1413 <dns_xfer_close+0xd>
    140e:	be 6b 9f ee f2       	mov    $0xf2ee9f6b,%esi
    1413:	e9 c0 ff ff ff       	jmp    13d8 <dns_done>

0000000000001418 <dns_send_packet.isra.0>:
    1418:	41 54                	push   %r12
    141a:	55                   	push   %rbp
    141b:	48 8d af c2 00 00 00 	lea    0xc2(%rdi),%rbp
    1422:	53                   	push   %rbx
    1423:	48 89 fb             	mov    %rdi,%rbx
    1426:	48 83 c7 50          	add    $0x50,%rdi
    142a:	48 83 ec 50          	sub    $0x50,%rsp
    142e:	48 8b 05 3b 8b 02 00 	mov    0x28b3b(%rip),%rax        # 29f70 <__stack_chk_guard>
    1435:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    143a:	31 c0                	xor    %eax,%eax
    143c:	e8 61 ee 00 00       	call   102a2 <start_timer>
    1441:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
    1446:	b9 20 00 00 00       	mov    $0x20,%ecx
    144b:	31 c0                	xor    %eax,%eax
    144d:	4c 89 c7             	mov    %r8,%rdi
    1450:	f3 aa                	rep stos %al,%es:(%rdi)
    1452:	8b 0d b4 86 02 00    	mov    0x286b4(%rip),%ecx        # 29b0c <dns_count>
    1458:	66 c7 44 24 2c 00 35 	movw   $0x3500,0x2c(%rsp)
    145f:	85 c9                	test   %ecx,%ecx
    1461:	75 05                	jne    1468 <dns_send_packet.isra.0+0x50>
    1463:	e9 8a 00 00 00       	jmp    14f2 <dns_send_packet.isra.0+0xda>
    1468:	8b 05 9a 86 02 00    	mov    0x2869a(%rip),%eax        # 29b08 <dns_index>
    146e:	31 d2                	xor    %edx,%edx
    1470:	f7 f1                	div    %ecx
    1472:	8b 05 a0 86 02 00    	mov    0x286a0(%rip),%eax        # 29b18 <dns6+0x8>
    1478:	39 c2                	cmp    %eax,%edx
    147a:	73 1f                	jae    149b <dns_send_packet.isra.0+0x83>
    147c:	89 d6                	mov    %edx,%esi
    147e:	66 c7 44 24 28 02 00 	movw   $0x2,0x28(%rsp)
    1485:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    148a:	48 c1 e6 04          	shl    $0x4,%rsi
    148e:	48 03 35 7b 86 02 00 	add    0x2867b(%rip),%rsi        # 29b10 <dns6>
    1495:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1496:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1497:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1498:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1499:	eb 17                	jmp    14b2 <dns_send_packet.isra.0+0x9a>
    149b:	29 c2                	sub    %eax,%edx
    149d:	48 8b 05 7c 86 02 00 	mov    0x2867c(%rip),%rax        # 29b20 <dns4>
    14a4:	66 c7 44 24 28 01 00 	movw   $0x1,0x28(%rsp)
    14ab:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    14ae:	89 44 24 30          	mov    %eax,0x30(%rsp)
    14b2:	49 89 e4             	mov    %rsp,%r12
    14b5:	b9 28 00 00 00       	mov    $0x28,%ecx
    14ba:	31 c0                	xor    %eax,%eax
    14bc:	4c 89 e7             	mov    %r12,%rdi
    14bf:	f3 aa                	rep stos %al,%es:(%rdi)
    14c1:	66 83 bb c2 00 00 00 	cmpw   $0x0,0xc2(%rbx)
    14c8:	00 
    14c9:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    14ce:	75 0c                	jne    14dc <dns_send_packet.isra.0+0xc4>
    14d0:	e8 6c e5 00 00       	call   fa41 <random>
    14d5:	66 89 83 c2 00 00 00 	mov    %ax,0xc2(%rbx)
    14dc:	48 8b 93 f8 01 00 00 	mov    0x1f8(%rbx),%rdx
    14e3:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    14e7:	4c 89 e1             	mov    %r12,%rcx
    14ea:	48 89 ee             	mov    %rbp,%rsi
    14ed:	e8 24 62 01 00       	call   17716 <xfer_deliver_raw_meta>
    14f2:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    14f7:	48 2b 05 72 8a 02 00 	sub    0x28a72(%rip),%rax        # 29f70 <__stack_chk_guard>
    14fe:	74 05                	je     1505 <dns_send_packet.isra.0+0xed>
    1500:	e8 5b 15 00 00       	call   2a60 <__stack_chk_fail>
    1505:	48 83 c4 50          	add    $0x50,%rsp
    1509:	5b                   	pop    %rbx
    150a:	5d                   	pop    %rbp
    150b:	41 5c                	pop    %r12
    150d:	c3                   	ret    

000000000000150e <dns_timer_expired>:
    150e:	f3 0f 1e fa          	endbr64 
    1512:	4c 8d 47 b0          	lea    -0x50(%rdi),%r8
    1516:	85 f6                	test   %esi,%esi
    1518:	74 0d                	je     1527 <dns_timer_expired+0x19>
    151a:	be 6e 9f ee b3       	mov    $0xb3ee9f6e,%esi
    151f:	4c 89 c7             	mov    %r8,%rdi
    1522:	e9 b1 fe ff ff       	jmp    13d8 <dns_done>
    1527:	66 83 7f 72 00       	cmpw   $0x0,0x72(%rdi)
    152c:	74 06                	je     1534 <dns_timer_expired+0x26>
    152e:	ff 05 d4 85 02 00    	incl   0x285d4(%rip)        # 29b08 <dns_index>
    1534:	4c 89 c7             	mov    %r8,%rdi
    1537:	e9 dc fe ff ff       	jmp    1418 <dns_send_packet.isra.0>

000000000000153c <dns_encode>:
    153c:	f3 0f 1e fa          	endbr64 
    1540:	48 8b 0e             	mov    (%rsi),%rcx
    1543:	4c 8b 46 08          	mov    0x8(%rsi),%r8
    1547:	31 d2                	xor    %edx,%edx
    1549:	49 01 c8             	add    %rcx,%r8
    154c:	48 03 4e 10          	add    0x10(%rsi),%rcx
    1550:	4c 89 c0             	mov    %r8,%rax
    1553:	40 8a 37             	mov    (%rdi),%sil
    1556:	48 ff c7             	inc    %rdi
    1559:	40 84 f6             	test   %sil,%sil
    155c:	74 44                	je     15a2 <dns_encode+0x66>
    155e:	40 80 fe 2e          	cmp    $0x2e,%sil
    1562:	75 1c                	jne    1580 <dns_encode+0x44>
    1564:	48 85 d2             	test   %rdx,%rdx
    1567:	75 07                	jne    1570 <dns_encode+0x34>
    1569:	4c 39 c0             	cmp    %r8,%rax
    156c:	74 02                	je     1570 <dns_encode+0x34>
    156e:	eb 0a                	jmp    157a <dns_encode+0x3e>
    1570:	80 3f 00             	cmpb   $0x0,(%rdi)
    1573:	74 2d                	je     15a2 <dns_encode+0x66>
    1575:	48 85 d2             	test   %rdx,%rdx
    1578:	75 11                	jne    158b <dns_encode+0x4f>
    157a:	b8 7e 9f ee e3       	mov    $0xe3ee9f7e,%eax
    157f:	c3                   	ret    
    1580:	48 ff c2             	inc    %rdx
    1583:	48 83 fa 40          	cmp    $0x40,%rdx
    1587:	75 04                	jne    158d <dns_encode+0x51>
    1589:	eb ef                	jmp    157a <dns_encode+0x3e>
    158b:	31 d2                	xor    %edx,%edx
    158d:	48 ff c0             	inc    %rax
    1590:	48 39 c1             	cmp    %rax,%rcx
    1593:	76 be                	jbe    1553 <dns_encode+0x17>
    1595:	40 88 30             	mov    %sil,(%rax)
    1598:	48 89 c6             	mov    %rax,%rsi
    159b:	48 29 d6             	sub    %rdx,%rsi
    159e:	88 16                	mov    %dl,(%rsi)
    15a0:	eb b1                	jmp    1553 <dns_encode+0x17>
    15a2:	48 83 fa 01          	cmp    $0x1,%rdx
    15a6:	48 83 d8 ff          	sbb    $0xffffffffffffffff,%rax
    15aa:	48 39 c8             	cmp    %rcx,%rax
    15ad:	73 03                	jae    15b2 <dns_encode+0x76>
    15af:	c6 00 00             	movb   $0x0,(%rax)
    15b2:	48 ff c0             	inc    %rax
    15b5:	44 29 c0             	sub    %r8d,%eax
    15b8:	c3                   	ret    

00000000000015b9 <apply_dns_settings>:
    15b9:	f3 0f 1e fa          	endbr64 
    15bd:	55                   	push   %rbp
    15be:	53                   	push   %rbx
    15bf:	48 83 ec 18          	sub    $0x18,%rsp
    15c3:	48 8b 3d 56 85 02 00 	mov    0x28556(%rip),%rdi        # 29b20 <dns4>
    15ca:	48 8b 05 9f 89 02 00 	mov    0x2899f(%rip),%rax        # 29f70 <__stack_chk_guard>
    15d1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    15d6:	31 c0                	xor    %eax,%eax
    15d8:	e8 72 b0 00 00       	call   c64f <free>
    15dd:	48 8b 3d 2c 85 02 00 	mov    0x2852c(%rip),%rdi        # 29b10 <dns6>
    15e4:	e8 66 b0 00 00       	call   c64f <free>
    15e9:	31 ff                	xor    %edi,%edi
    15eb:	48 8d 15 2e 85 02 00 	lea    0x2852e(%rip),%rdx        # 29b20 <dns4>
    15f2:	48 8d 35 87 7d 02 00 	lea    0x27d87(%rip),%rsi        # 29380 <dns_setting>
    15f9:	48 c7 05 1c 85 02 00 	movq   $0x0,0x2851c(%rip)        # 29b20 <dns4>
    1600:	00 00 00 00 
    1604:	48 c7 05 01 85 02 00 	movq   $0x0,0x28501(%rip)        # 29b10 <dns6>
    160b:	00 00 00 00 
    160f:	c7 05 0f 85 02 00 00 	movl   $0x0,0x2850f(%rip)        # 29b28 <dns4+0x8>
    1616:	00 00 00 
    1619:	c7 05 f5 84 02 00 00 	movl   $0x0,0x284f5(%rip)        # 29b18 <dns6+0x8>
    1620:	00 00 00 
    1623:	e8 b6 07 01 00       	call   11dde <fetch_raw_setting_copy>
    1628:	85 c0                	test   %eax,%eax
    162a:	78 0c                	js     1638 <apply_dns_settings+0x7f>
    162c:	48 98                	cltq   
    162e:	48 c1 e8 02          	shr    $0x2,%rax
    1632:	89 05 f0 84 02 00    	mov    %eax,0x284f0(%rip)        # 29b28 <dns4+0x8>
    1638:	31 ff                	xor    %edi,%edi
    163a:	48 8d 15 cf 84 02 00 	lea    0x284cf(%rip),%rdx        # 29b10 <dns6>
    1641:	48 8d 35 60 7d 02 00 	lea    0x27d60(%rip),%rsi        # 293a8 <dns6_setting>
    1648:	e8 91 07 01 00       	call   11dde <fetch_raw_setting_copy>
    164d:	85 c0                	test   %eax,%eax
    164f:	78 0c                	js     165d <apply_dns_settings+0xa4>
    1651:	48 98                	cltq   
    1653:	48 c1 e8 04          	shr    $0x4,%rax
    1657:	89 05 bb 84 02 00    	mov    %eax,0x284bb(%rip)        # 29b18 <dns6+0x8>
    165d:	48 8b 3d 8c 84 02 00 	mov    0x2848c(%rip),%rdi        # 29af0 <dns_search>
    1664:	8b 05 ae 84 02 00    	mov    0x284ae(%rip),%eax        # 29b18 <dns6+0x8>
    166a:	48 8d 2d 7f 84 02 00 	lea    0x2847f(%rip),%rbp        # 29af0 <dns_search>
    1671:	03 05 b1 84 02 00    	add    0x284b1(%rip),%eax        # 29b28 <dns4+0x8>
    1677:	89 05 8f 84 02 00    	mov    %eax,0x2848f(%rip)        # 29b0c <dns_count>
    167d:	e8 cd af 00 00       	call   c64f <free>
    1682:	48 89 ef             	mov    %rbp,%rdi
    1685:	31 c0                	xor    %eax,%eax
    1687:	ab                   	stos   %eax,%es:(%rdi)
    1688:	ab                   	stos   %eax,%es:(%rdi)
    1689:	ab                   	stos   %eax,%es:(%rdi)
    168a:	ab                   	stos   %eax,%es:(%rdi)
    168b:	ab                   	stos   %eax,%es:(%rdi)
    168c:	ab                   	stos   %eax,%es:(%rdi)
    168d:	31 ff                	xor    %edi,%edi
    168f:	48 89 ea             	mov    %rbp,%rdx
    1692:	48 8d 35 37 7d 02 00 	lea    0x27d37(%rip),%rsi        # 293d0 <dnssl_setting>
    1699:	e8 40 07 01 00       	call   11dde <fetch_raw_setting_copy>
    169e:	85 c0                	test   %eax,%eax
    16a0:	78 0b                	js     16ad <apply_dns_settings+0xf4>
    16a2:	48 98                	cltq   
    16a4:	48 89 05 55 84 02 00 	mov    %rax,0x28455(%rip)        # 29b00 <dns_search+0x10>
    16ab:	eb 59                	jmp    1706 <apply_dns_settings+0x14d>
    16ad:	31 ff                	xor    %edi,%edi
    16af:	48 89 e2             	mov    %rsp,%rdx
    16b2:	48 8d 35 3f 7d 02 00 	lea    0x27d3f(%rip),%rsi        # 293f8 <domain_setting>
    16b9:	e8 30 07 01 00       	call   11dee <fetch_string_setting_copy>
    16be:	48 8b 3c 24          	mov    (%rsp),%rdi
    16c2:	48 85 ff             	test   %rdi,%rdi
    16c5:	74 3f                	je     1706 <apply_dns_settings+0x14d>
    16c7:	48 89 ee             	mov    %rbp,%rsi
    16ca:	e8 6d fe ff ff       	call   153c <dns_encode>
    16cf:	85 c0                	test   %eax,%eax
    16d1:	78 2a                	js     16fd <apply_dns_settings+0x144>
    16d3:	48 63 d8             	movslq %eax,%rbx
    16d6:	48 89 df             	mov    %rbx,%rdi
    16d9:	e8 63 af 00 00       	call   c641 <malloc>
    16de:	48 89 05 0b 84 02 00 	mov    %rax,0x2840b(%rip)        # 29af0 <dns_search>
    16e5:	48 85 c0             	test   %rax,%rax
    16e8:	74 13                	je     16fd <apply_dns_settings+0x144>
    16ea:	48 8b 3c 24          	mov    (%rsp),%rdi
    16ee:	48 89 ee             	mov    %rbp,%rsi
    16f1:	48 89 1d 08 84 02 00 	mov    %rbx,0x28408(%rip)        # 29b00 <dns_search+0x10>
    16f8:	e8 3f fe ff ff       	call   153c <dns_encode>
    16fd:	48 8b 3c 24          	mov    (%rsp),%rdi
    1701:	e8 49 af 00 00       	call   c64f <free>
    1706:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    170b:	48 2b 05 5e 88 02 00 	sub    0x2885e(%rip),%rax        # 29f70 <__stack_chk_guard>
    1712:	74 05                	je     1719 <apply_dns_settings+0x160>
    1714:	e8 47 13 00 00       	call   2a60 <__stack_chk_fail>
    1719:	48 83 c4 18          	add    $0x18,%rsp
    171d:	31 c0                	xor    %eax,%eax
    171f:	5b                   	pop    %rbx
    1720:	5d                   	pop    %rbp
    1721:	c3                   	ret    

0000000000001722 <dns_decode>:
    1722:	f3 0f 1e fa          	endbr64 
    1726:	41 57                	push   %r15
    1728:	45 31 c9             	xor    %r9d,%r9d
    172b:	41 56                	push   %r14
    172d:	41 55                	push   %r13
    172f:	49 89 d5             	mov    %rdx,%r13
    1732:	41 54                	push   %r12
    1734:	55                   	push   %rbp
    1735:	48 89 fd             	mov    %rdi,%rbp
    1738:	53                   	push   %rbx
    1739:	48 89 f3             	mov    %rsi,%rbx
    173c:	48 83 ec 28          	sub    $0x28,%rsp
    1740:	44 8b 77 10          	mov    0x10(%rdi),%r14d
    1744:	8b 77 08             	mov    0x8(%rdi),%esi
    1747:	45 85 f6             	test   %r14d,%r14d
    174a:	0f 84 a3 00 00 00    	je     17f3 <dns_decode+0xd1>
    1750:	48 63 f6             	movslq %esi,%rsi
    1753:	48 89 ef             	mov    %rbp,%rdi
    1756:	e8 2b fc ff ff       	call   1386 <dns_label>
    175b:	41 89 c4             	mov    %eax,%r12d
    175e:	85 c0                	test   %eax,%eax
    1760:	0f 88 93 00 00 00    	js     17f9 <dns_decode+0xd7>
    1766:	48 98                	cltq   
    1768:	48 03 45 00          	add    0x0(%rbp),%rax
    176c:	44 0f b6 00          	movzbl (%rax),%r8d
    1770:	48 8d 70 01          	lea    0x1(%rax),%rsi
    1774:	4c 89 c1             	mov    %r8,%rcx
    1777:	4d 85 c0             	test   %r8,%r8
    177a:	75 0d                	jne    1789 <dns_decode+0x67>
    177c:	4d 39 e9             	cmp    %r13,%r9
    177f:	73 03                	jae    1784 <dns_decode+0x62>
    1781:	c6 03 00             	movb   $0x0,(%rbx)
    1784:	45 89 cc             	mov    %r9d,%r12d
    1787:	eb 70                	jmp    17f9 <dns_decode+0xd7>
    1789:	45 31 d2             	xor    %r10d,%r10d
    178c:	4d 85 c9             	test   %r9,%r9
    178f:	74 0f                	je     17a0 <dns_decode+0x7e>
    1791:	4d 8d 51 01          	lea    0x1(%r9),%r10
    1795:	4d 39 e9             	cmp    %r13,%r9
    1798:	73 06                	jae    17a0 <dns_decode+0x7e>
    179a:	c6 03 2e             	movb   $0x2e,(%rbx)
    179d:	48 ff c3             	inc    %rbx
    17a0:	31 c0                	xor    %eax,%eax
    17a2:	4d 39 ea             	cmp    %r13,%r10
    17a5:	73 06                	jae    17ad <dns_decode+0x8b>
    17a7:	4c 89 e8             	mov    %r13,%rax
    17aa:	4c 29 d0             	sub    %r10,%rax
    17ad:	4c 39 c0             	cmp    %r8,%rax
    17b0:	48 89 df             	mov    %rbx,%rdi
    17b3:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    17b8:	49 0f 47 c0          	cmova  %r8,%rax
    17bc:	88 4c 24 17          	mov    %cl,0x17(%rsp)
    17c0:	41 ff ce             	dec    %r14d
    17c3:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    17c8:	48 89 c2             	mov    %rax,%rdx
    17cb:	49 89 c7             	mov    %rax,%r15
    17ce:	e8 3a 5b 01 00       	call   1730d <__memcpy>
    17d3:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    17d8:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    17dd:	4c 01 fb             	add    %r15,%rbx
    17e0:	0f b6 4c 24 17       	movzbl 0x17(%rsp),%ecx
    17e5:	4f 8d 0c 02          	lea    (%r10,%r8,1),%r9
    17e9:	41 8d 74 0c 01       	lea    0x1(%r12,%rcx,1),%esi
    17ee:	e9 54 ff ff ff       	jmp    1747 <dns_decode+0x25>
    17f3:	41 bc 7e 9f ee e3    	mov    $0xe3ee9f7e,%r12d
    17f9:	48 83 c4 28          	add    $0x28,%rsp
    17fd:	44 89 e0             	mov    %r12d,%eax
    1800:	5b                   	pop    %rbx
    1801:	5d                   	pop    %rbp
    1802:	41 5c                	pop    %r12
    1804:	41 5d                	pop    %r13
    1806:	41 5e                	pop    %r14
    1808:	41 5f                	pop    %r15
    180a:	c3                   	ret    

000000000000180b <dns_progress>:
    180b:	f3 0f 1e fa          	endbr64 
    180f:	53                   	push   %rbx
    1810:	48 81 c7 d8 01 00 00 	add    $0x1d8,%rdi
    1817:	48 89 f3             	mov    %rsi,%rbx
    181a:	ba 1f 00 00 00       	mov    $0x1f,%edx
    181f:	48 83 c6 10          	add    $0x10,%rsi
    1823:	e8 fa fe ff ff       	call   1722 <dns_decode>
    1828:	85 c0                	test   %eax,%eax
    182a:	79 04                	jns    1830 <dns_progress+0x25>
    182c:	c6 43 10 00          	movb   $0x0,0x10(%rbx)
    1830:	31 c0                	xor    %eax,%eax
    1832:	5b                   	pop    %rbx
    1833:	c3                   	ret    

0000000000001834 <dns_compare>:
    1834:	f3 0f 1e fa          	endbr64 
    1838:	41 54                	push   %r12
    183a:	55                   	push   %rbp
    183b:	48 89 f5             	mov    %rsi,%rbp
    183e:	53                   	push   %rbx
    183f:	44 8b 5f 10          	mov    0x10(%rdi),%r11d
    1843:	48 89 fb             	mov    %rdi,%rbx
    1846:	44 8b 4f 08          	mov    0x8(%rdi),%r9d
    184a:	44 8b 56 08          	mov    0x8(%rsi),%r10d
    184e:	45 85 db             	test   %r11d,%r11d
    1851:	0f 84 92 00 00 00    	je     18e9 <dns_compare+0xb5>
    1857:	49 63 f1             	movslq %r9d,%rsi
    185a:	48 89 df             	mov    %rbx,%rdi
    185d:	e8 24 fb ff ff       	call   1386 <dns_label>
    1862:	41 89 c1             	mov    %eax,%r9d
    1865:	85 c0                	test   %eax,%eax
    1867:	0f 88 8c 00 00 00    	js     18f9 <dns_compare+0xc5>
    186d:	49 63 f2             	movslq %r10d,%rsi
    1870:	48 89 ef             	mov    %rbp,%rdi
    1873:	e8 0e fb ff ff       	call   1386 <dns_label>
    1878:	85 c0                	test   %eax,%eax
    187a:	78 75                	js     18f1 <dns_compare+0xbd>
    187c:	49 63 c9             	movslq %r9d,%rcx
    187f:	48 63 f8             	movslq %eax,%rdi
    1882:	48 03 0b             	add    (%rbx),%rcx
    1885:	48 03 7d 00          	add    0x0(%rbp),%rdi
    1889:	0f b6 31             	movzbl (%rcx),%esi
    188c:	40 3a 37             	cmp    (%rdi),%sil
    188f:	74 02                	je     1893 <dns_compare+0x5f>
    1891:	eb 37                	jmp    18ca <dns_compare+0x96>
    1893:	48 85 f6             	test   %rsi,%rsi
    1896:	74 5e                	je     18f6 <dns_compare+0xc2>
    1898:	31 d2                	xor    %edx,%edx
    189a:	44 0f b6 44 11 01    	movzbl 0x1(%rcx,%rdx,1),%r8d
    18a0:	45 8d 50 bf          	lea    -0x41(%r8),%r10d
    18a4:	41 83 fa 19          	cmp    $0x19,%r10d
    18a8:	77 04                	ja     18ae <dns_compare+0x7a>
    18aa:	41 83 c0 20          	add    $0x20,%r8d
    18ae:	44 0f b6 54 17 01    	movzbl 0x1(%rdi,%rdx,1),%r10d
    18b4:	45 8d 62 bf          	lea    -0x41(%r10),%r12d
    18b8:	41 83 fc 19          	cmp    $0x19,%r12d
    18bc:	77 04                	ja     18c2 <dns_compare+0x8e>
    18be:	41 83 c2 20          	add    $0x20,%r10d
    18c2:	48 ff c2             	inc    %rdx
    18c5:	45 39 c2             	cmp    %r8d,%r10d
    18c8:	74 08                	je     18d2 <dns_compare+0x9e>
    18ca:	41 b9 72 9f ee d2    	mov    $0xd2ee9f72,%r9d
    18d0:	eb 27                	jmp    18f9 <dns_compare+0xc5>
    18d2:	48 39 d6             	cmp    %rdx,%rsi
    18d5:	75 c3                	jne    189a <dns_compare+0x66>
    18d7:	48 ff c6             	inc    %rsi
    18da:	41 ff cb             	dec    %r11d
    18dd:	41 01 f1             	add    %esi,%r9d
    18e0:	44 8d 14 30          	lea    (%rax,%rsi,1),%r10d
    18e4:	e9 65 ff ff ff       	jmp    184e <dns_compare+0x1a>
    18e9:	41 b9 7e 9f ee e3    	mov    $0xe3ee9f7e,%r9d
    18ef:	eb 08                	jmp    18f9 <dns_compare+0xc5>
    18f1:	41 89 c1             	mov    %eax,%r9d
    18f4:	eb 03                	jmp    18f9 <dns_compare+0xc5>
    18f6:	45 31 c9             	xor    %r9d,%r9d
    18f9:	5b                   	pop    %rbx
    18fa:	44 89 c8             	mov    %r9d,%eax
    18fd:	5d                   	pop    %rbp
    18fe:	41 5c                	pop    %r12
    1900:	c3                   	ret    

0000000000001901 <dns_copy>:
    1901:	f3 0f 1e fa          	endbr64 
    1905:	41 57                	push   %r15
    1907:	41 56                	push   %r14
    1909:	49 89 f6             	mov    %rsi,%r14
    190c:	41 55                	push   %r13
    190e:	49 89 fd             	mov    %rdi,%r13
    1911:	41 54                	push   %r12
    1913:	55                   	push   %rbp
    1914:	53                   	push   %rbx
    1915:	48 83 ec 18          	sub    $0x18,%rsp
    1919:	8b 5f 10             	mov    0x10(%rdi),%ebx
    191c:	44 8b 67 08          	mov    0x8(%rdi),%r12d
    1920:	48 8b 6e 08          	mov    0x8(%rsi),%rbp
    1924:	85 db                	test   %ebx,%ebx
    1926:	74 63                	je     198b <dns_copy+0x8a>
    1928:	49 63 f4             	movslq %r12d,%rsi
    192b:	4c 89 ef             	mov    %r13,%rdi
    192e:	e8 53 fa ff ff       	call   1386 <dns_label>
    1933:	41 89 c4             	mov    %eax,%r12d
    1936:	85 c0                	test   %eax,%eax
    1938:	78 57                	js     1991 <dns_copy+0x90>
    193a:	48 63 f0             	movslq %eax,%rsi
    193d:	49 03 75 00          	add    0x0(%r13),%rsi
    1941:	49 8b 46 10          	mov    0x10(%r14),%rax
    1945:	31 d2                	xor    %edx,%edx
    1947:	0f b6 0e             	movzbl (%rsi),%ecx
    194a:	4c 8d 79 01          	lea    0x1(%rcx),%r15
    194e:	48 39 e8             	cmp    %rbp,%rax
    1951:	76 06                	jbe    1959 <dns_copy+0x58>
    1953:	48 29 e8             	sub    %rbp,%rax
    1956:	48 89 c2             	mov    %rax,%rdx
    1959:	4c 39 fa             	cmp    %r15,%rdx
    195c:	49 8b 3e             	mov    (%r14),%rdi
    195f:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    1964:	49 0f 47 d7          	cmova  %r15,%rdx
    1968:	45 01 fc             	add    %r15d,%r12d
    196b:	ff cb                	dec    %ebx
    196d:	48 01 ef             	add    %rbp,%rdi
    1970:	4c 01 fd             	add    %r15,%rbp
    1973:	e8 95 59 01 00       	call   1730d <__memcpy>
    1978:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    197d:	48 85 c9             	test   %rcx,%rcx
    1980:	75 a2                	jne    1924 <dns_copy+0x23>
    1982:	41 89 ec             	mov    %ebp,%r12d
    1985:	45 2b 66 08          	sub    0x8(%r14),%r12d
    1989:	eb 06                	jmp    1991 <dns_copy+0x90>
    198b:	41 bc 7e 9f ee e3    	mov    $0xe3ee9f7e,%r12d
    1991:	48 83 c4 18          	add    $0x18,%rsp
    1995:	44 89 e0             	mov    %r12d,%eax
    1998:	5b                   	pop    %rbx
    1999:	5d                   	pop    %rbp
    199a:	41 5c                	pop    %r12
    199c:	41 5d                	pop    %r13
    199e:	41 5e                	pop    %r14
    19a0:	41 5f                	pop    %r15
    19a2:	c3                   	ret    

00000000000019a3 <dns_question>:
    19a3:	53                   	push   %rbx
    19a4:	48 89 fb             	mov    %rdi,%rbx
    19a7:	48 8b 87 18 02 00 00 	mov    0x218(%rdi),%rax
    19ae:	48 8d bf 08 02 00 00 	lea    0x208(%rdi),%rdi
    19b5:	48 39 83 10 02 00 00 	cmp    %rax,0x210(%rbx)
    19bc:	75 07                	jne    19c5 <dns_question+0x22>
    19be:	48 8d 3d 9b 31 02 00 	lea    0x2319b(%rip),%rdi        # 24b60 <search_root.0>
    19c5:	48 8b 83 00 02 00 00 	mov    0x200(%rbx),%rax
    19cc:	48 8d b3 d8 01 00 00 	lea    0x1d8(%rbx),%rsi
    19d3:	48 89 83 e0 01 00 00 	mov    %rax,0x1e0(%rbx)
    19da:	e8 22 ff ff ff       	call   1901 <dns_copy>
    19df:	85 c0                	test   %eax,%eax
    19e1:	78 58                	js     1a3b <dns_question+0x98>
    19e3:	48 98                	cltq   
    19e5:	48 03 83 e0 01 00 00 	add    0x1e0(%rbx),%rax
    19ec:	48 39 83 e8 01 00 00 	cmp    %rax,0x1e8(%rbx)
    19f3:	73 07                	jae    19fc <dns_question+0x59>
    19f5:	b8 7e 9f ee e3       	mov    $0xe3ee9f7e,%eax
    19fa:	eb 3f                	jmp    1a3b <dns_question+0x98>
    19fc:	8b 8b c0 00 00 00    	mov    0xc0(%rbx),%ecx
    1a02:	48 8d 94 03 c2 00 00 	lea    0xc2(%rbx,%rax,1),%rdx
    1a09:	00 
    1a0a:	48 83 c0 04          	add    $0x4,%rax
    1a0e:	48 89 93 f0 01 00 00 	mov    %rdx,0x1f0(%rbx)
    1a15:	66 89 0a             	mov    %cx,(%rdx)
    1a18:	66 c7 42 02 00 01    	movw   $0x100,0x2(%rdx)
    1a1e:	48 c7 83 e0 01 00 00 	movq   $0xc,0x1e0(%rbx)
    1a25:	0c 00 00 00 
    1a29:	66 c7 83 c2 00 00 00 	movw   $0x0,0xc2(%rbx)
    1a30:	00 00 
    1a32:	48 89 83 f8 01 00 00 	mov    %rax,0x1f8(%rbx)
    1a39:	31 c0                	xor    %eax,%eax
    1a3b:	5b                   	pop    %rbx
    1a3c:	c3                   	ret    

0000000000001a3d <dns_resolv>:
    1a3d:	f3 0f 1e fa          	endbr64 
    1a41:	83 3d c4 80 02 00 00 	cmpl   $0x0,0x280c4(%rip)        # 29b0c <dns_count>
    1a48:	75 06                	jne    1a50 <dns_resolv+0x13>
    1a4a:	b8 72 9d ee c1       	mov    $0xc1ee9d72,%eax
    1a4f:	c3                   	ret    
    1a50:	41 57                	push   %r15
    1a52:	49 89 d7             	mov    %rdx,%r15
    1a55:	41 56                	push   %r14
    1a57:	45 31 f6             	xor    %r14d,%r14d
    1a5a:	41 55                	push   %r13
    1a5c:	49 89 fd             	mov    %rdi,%r13
    1a5f:	41 54                	push   %r12
    1a61:	49 89 f4             	mov    %rsi,%r12
    1a64:	be 2e 00 00 00       	mov    $0x2e,%esi
    1a69:	55                   	push   %rbp
    1a6a:	4c 89 e7             	mov    %r12,%rdi
    1a6d:	48 83 ec 10          	sub    $0x10,%rsp
    1a71:	e8 d1 1e 01 00       	call   13947 <strchr>
    1a76:	48 85 c0             	test   %rax,%rax
    1a79:	75 07                	jne    1a82 <dns_resolv+0x45>
    1a7b:	4c 8b 35 7e 80 02 00 	mov    0x2807e(%rip),%r14        # 29b00 <dns_search+0x10>
    1a82:	49 8d be 28 02 00 00 	lea    0x228(%r14),%rdi
    1a89:	e8 cc ab 00 00       	call   c65a <zalloc>
    1a8e:	48 89 c5             	mov    %rax,%rbp
    1a91:	48 85 c0             	test   %rax,%rax
    1a94:	75 0a                	jne    1aa0 <dns_resolv+0x63>
    1a96:	b8 77 9f ee ce       	mov    $0xceee9f77,%eax
    1a9b:	e9 39 01 00 00       	jmp    1bd9 <dns_resolv+0x19c>
    1aa0:	48 8d 05 39 49 02 00 	lea    0x24939(%rip),%rax        # 263e0 <null_intf>
    1aa7:	48 8d 15 d2 30 02 00 	lea    0x230d2(%rip),%rdx        # 24b80 <dns_resolv_desc>
    1aae:	4c 89 fe             	mov    %r15,%rsi
    1ab1:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
    1ab5:	48 89 45 10          	mov    %rax,0x10(%rbp)
    1ab9:	48 8d bd a0 00 00 00 	lea    0xa0(%rbp),%rdi
    1ac0:	48 89 45 30          	mov    %rax,0x30(%rbp)
    1ac4:	48 8d 05 f5 30 02 00 	lea    0x230f5(%rip),%rax        # 24bc0 <dns_socket_desc>
    1acb:	48 89 55 20          	mov    %rdx,0x20(%rbp)
    1acf:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    1ad3:	ba 20 00 00 00       	mov    $0x20,%edx
    1ad8:	48 89 45 40          	mov    %rax,0x40(%rbp)
    1adc:	48 89 45 48          	mov    %rax,0x48(%rbp)
    1ae0:	48 8d 05 27 fa ff ff 	lea    -0x5d9(%rip),%rax        # 150e <dns_timer_expired>
    1ae7:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
    1aeb:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    1af2:	48 89 ad 98 00 00 00 	mov    %rbp,0x98(%rbp)
    1af9:	e8 0f 58 01 00       	call   1730d <__memcpy>
    1afe:	48 8b 35 eb 7f 02 00 	mov    0x27feb(%rip),%rsi        # 29af0 <dns_search>
    1b05:	4c 89 f2             	mov    %r14,%rdx
    1b08:	48 8d bd 28 02 00 00 	lea    0x228(%rbp),%rdi
    1b0f:	48 89 bd 08 02 00 00 	mov    %rdi,0x208(%rbp)
    1b16:	4c 89 b5 18 02 00 00 	mov    %r14,0x218(%rbp)
    1b1d:	e8 eb 57 01 00       	call   1730d <__memcpy>
    1b22:	83 3d ef 7f 02 00 01 	cmpl   $0x1,0x27fef(%rip)        # 29b18 <dns6+0x8>
    1b29:	48 8d b5 d8 01 00 00 	lea    0x1d8(%rbp),%rsi
    1b30:	4c 89 e7             	mov    %r12,%rdi
    1b33:	c7 85 c4 00 00 00 01 	movl   $0x1000001,0xc4(%rbp)
    1b3a:	00 00 01 
    1b3d:	19 c0                	sbb    %eax,%eax
    1b3f:	48 c7 85 e0 01 00 00 	movq   $0xc,0x1e0(%rbp)
    1b46:	0c 00 00 00 
    1b4a:	66 25 00 e5          	and    $0xe500,%ax
    1b4e:	48 c7 85 e8 01 00 00 	movq   $0x10b,0x1e8(%rbp)
    1b55:	0b 01 00 00 
    1b59:	66 05 00 1c          	add    $0x1c00,%ax
    1b5d:	66 89 85 c0 00 00 00 	mov    %ax,0xc0(%rbp)
    1b64:	48 8d 85 c2 00 00 00 	lea    0xc2(%rbp),%rax
    1b6b:	48 89 85 d8 01 00 00 	mov    %rax,0x1d8(%rbp)
    1b72:	e8 c5 f9 ff ff       	call   153c <dns_encode>
    1b77:	85 c0                	test   %eax,%eax
    1b79:	78 4e                	js     1bc9 <dns_resolv+0x18c>
    1b7b:	4c 63 e0             	movslq %eax,%r12
    1b7e:	48 89 ef             	mov    %rbp,%rdi
    1b81:	49 83 c4 0b          	add    $0xb,%r12
    1b85:	4c 89 a5 00 02 00 00 	mov    %r12,0x200(%rbp)
    1b8c:	e8 12 fe ff ff       	call   19a3 <dns_question>
    1b91:	85 c0                	test   %eax,%eax
    1b93:	75 34                	jne    1bc9 <dns_resolv+0x18c>
    1b95:	8b 35 c5 29 02 00    	mov    0x229c5(%rip),%esi        # 24560 <udp_sock_dgram>
    1b9b:	31 c9                	xor    %ecx,%ecx
    1b9d:	31 d2                	xor    %edx,%edx
    1b9f:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    1ba3:	e8 12 cf 00 00       	call   eaba <xfer_open_socket>
    1ba8:	85 c0                	test   %eax,%eax
    1baa:	75 1d                	jne    1bc9 <dns_resolv+0x18c>
    1bac:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    1bb0:	31 f6                	xor    %esi,%esi
    1bb2:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    1bb6:	e8 a7 e6 00 00       	call   10262 <start_timer_fixed>
    1bbb:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    1bbf:	4c 89 ee             	mov    %r13,%rsi
    1bc2:	e8 aa 7b 00 00       	call   9771 <intf_plug_plug>
    1bc7:	eb 04                	jmp    1bcd <dns_resolv+0x190>
    1bc9:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    1bcd:	48 89 ef             	mov    %rbp,%rdi
    1bd0:	e8 69 e2 00 00       	call   fe3e <ref_decrement>
    1bd5:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    1bd9:	48 83 c4 10          	add    $0x10,%rsp
    1bdd:	5d                   	pop    %rbp
    1bde:	41 5c                	pop    %r12
    1be0:	41 5d                	pop    %r13
    1be2:	41 5e                	pop    %r14
    1be4:	41 5f                	pop    %r15
    1be6:	c3                   	ret    

0000000000001be7 <dns_skip>:
    1be7:	f3 0f 1e fa          	endbr64 
    1beb:	44 8b 57 10          	mov    0x10(%rdi),%r10d
    1bef:	44 8b 4f 08          	mov    0x8(%rdi),%r9d
    1bf3:	45 85 d2             	test   %r10d,%r10d
    1bf6:	74 30                	je     1c28 <dns_skip+0x41>
    1bf8:	4d 63 d9             	movslq %r9d,%r11
    1bfb:	4c 89 de             	mov    %r11,%rsi
    1bfe:	e8 83 f7 ff ff       	call   1386 <dns_label>
    1c03:	85 c0                	test   %eax,%eax
    1c05:	78 29                	js     1c30 <dns_skip+0x49>
    1c07:	41 39 c1             	cmp    %eax,%r9d
    1c0a:	74 06                	je     1c12 <dns_skip+0x2b>
    1c0c:	41 83 c1 02          	add    $0x2,%r9d
    1c10:	eb 21                	jmp    1c33 <dns_skip+0x4c>
    1c12:	48 8b 07             	mov    (%rdi),%rax
    1c15:	41 ff ca             	dec    %r10d
    1c18:	42 0f b6 14 18       	movzbl (%rax,%r11,1),%edx
    1c1d:	45 8d 4c 11 01       	lea    0x1(%r9,%rdx,1),%r9d
    1c22:	84 d2                	test   %dl,%dl
    1c24:	75 cd                	jne    1bf3 <dns_skip+0xc>
    1c26:	eb 0b                	jmp    1c33 <dns_skip+0x4c>
    1c28:	41 b9 7e 9f ee e3    	mov    $0xe3ee9f7e,%r9d
    1c2e:	eb 03                	jmp    1c33 <dns_skip+0x4c>
    1c30:	41 89 c1             	mov    %eax,%r9d
    1c33:	44 89 c8             	mov    %r9d,%eax
    1c36:	c3                   	ret    

0000000000001c37 <dns_skip_search>:
    1c37:	e8 ab ff ff ff       	call   1be7 <dns_skip>
    1c3c:	85 c0                	test   %eax,%eax
    1c3e:	78 1b                	js     1c5b <dns_skip_search+0x24>
    1c40:	8b 77 10             	mov    0x10(%rdi),%esi
    1c43:	48 63 d0             	movslq %eax,%rdx
    1c46:	39 c6                	cmp    %eax,%esi
    1c48:	7e 11                	jle    1c5b <dns_skip_search+0x24>
    1c4a:	48 8b 0f             	mov    (%rdi),%rcx
    1c4d:	8a 0c 11             	mov    (%rcx,%rdx,1),%cl
    1c50:	48 ff c2             	inc    %rdx
    1c53:	84 c9                	test   %cl,%cl
    1c55:	75 04                	jne    1c5b <dns_skip_search+0x24>
    1c57:	ff c0                	inc    %eax
    1c59:	eb eb                	jmp    1c46 <dns_skip_search+0xf>
    1c5b:	c3                   	ret    

0000000000001c5c <format_dnssl_setting>:
    1c5c:	f3 0f 1e fa          	endbr64 
    1c60:	41 56                	push   %r14
    1c62:	41 55                	push   %r13
    1c64:	49 89 cd             	mov    %rcx,%r13
    1c67:	41 54                	push   %r12
    1c69:	4d 89 c4             	mov    %r8,%r12
    1c6c:	55                   	push   %rbp
    1c6d:	48 89 d5             	mov    %rdx,%rbp
    1c70:	53                   	push   %rbx
    1c71:	31 db                	xor    %ebx,%ebx
    1c73:	48 83 ec 20          	sub    $0x20,%rsp
    1c77:	48 8b 05 f2 82 02 00 	mov    0x282f2(%rip),%rax        # 29f70 <__stack_chk_guard>
    1c7e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1c83:	31 c0                	xor    %eax,%eax
    1c85:	48 89 34 24          	mov    %rsi,(%rsp)
    1c89:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    1c90:	00 00 
    1c92:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    1c97:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
    1c9c:	73 4a                	jae    1ce8 <format_dnssl_setting+0x8c>
    1c9e:	31 d2                	xor    %edx,%edx
    1ca0:	4c 39 e3             	cmp    %r12,%rbx
    1ca3:	73 06                	jae    1cab <format_dnssl_setting+0x4f>
    1ca5:	4c 89 e2             	mov    %r12,%rdx
    1ca8:	48 29 da             	sub    %rbx,%rdx
    1cab:	49 89 e6             	mov    %rsp,%r14
    1cae:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    1cb3:	4c 89 f7             	mov    %r14,%rdi
    1cb6:	e8 67 fa ff ff       	call   1722 <dns_decode>
    1cbb:	85 c0                	test   %eax,%eax
    1cbd:	78 2b                	js     1cea <format_dnssl_setting+0x8e>
    1cbf:	48 98                	cltq   
    1cc1:	4c 89 f7             	mov    %r14,%rdi
    1cc4:	48 01 c3             	add    %rax,%rbx
    1cc7:	e8 6b ff ff ff       	call   1c37 <dns_skip_search>
    1ccc:	48 98                	cltq   
    1cce:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1cd3:	48 39 e8             	cmp    %rbp,%rax
    1cd6:	74 bf                	je     1c97 <format_dnssl_setting+0x3b>
    1cd8:	49 39 dc             	cmp    %rbx,%r12
    1cdb:	76 06                	jbe    1ce3 <format_dnssl_setting+0x87>
    1cdd:	41 c6 44 1d 00 20    	movb   $0x20,0x0(%r13,%rbx,1)
    1ce3:	48 ff c3             	inc    %rbx
    1ce6:	eb af                	jmp    1c97 <format_dnssl_setting+0x3b>
    1ce8:	89 d8                	mov    %ebx,%eax
    1cea:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    1cef:	48 2b 15 7a 82 02 00 	sub    0x2827a(%rip),%rdx        # 29f70 <__stack_chk_guard>
    1cf6:	74 05                	je     1cfd <format_dnssl_setting+0xa1>
    1cf8:	e8 63 0d 00 00       	call   2a60 <__stack_chk_fail>
    1cfd:	48 83 c4 20          	add    $0x20,%rsp
    1d01:	5b                   	pop    %rbx
    1d02:	5d                   	pop    %rbp
    1d03:	41 5c                	pop    %r12
    1d05:	41 5d                	pop    %r13
    1d07:	41 5e                	pop    %r14
    1d09:	c3                   	ret    

0000000000001d0a <dns_xfer_deliver>:
    1d0a:	f3 0f 1e fa          	endbr64 
    1d0e:	41 57                	push   %r15
    1d10:	41 56                	push   %r14
    1d12:	41 55                	push   %r13
    1d14:	41 54                	push   %r12
    1d16:	55                   	push   %rbp
    1d17:	48 89 f5             	mov    %rsi,%rbp
    1d1a:	53                   	push   %rbx
    1d1b:	48 83 ec 58          	sub    $0x58,%rsp
    1d1f:	48 8b 56 18          	mov    0x18(%rsi),%rdx
    1d23:	48 8b 05 46 82 02 00 	mov    0x28246(%rip),%rax        # 29f70 <__stack_chk_guard>
    1d2a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    1d2f:	31 c0                	xor    %eax,%eax
    1d31:	48 8b 87 f0 01 00 00 	mov    0x1f0(%rdi),%rax
    1d38:	66 44 8b 28          	mov    (%rax),%r13w
    1d3c:	48 8b 46 20          	mov    0x20(%rsi),%rax
    1d40:	48 29 d0             	sub    %rdx,%rax
    1d43:	48 83 f8 0b          	cmp    $0xb,%rax
    1d47:	77 05                	ja     1d4e <dns_xfer_deliver+0x44>
    1d49:	e9 a5 02 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1d4e:	66 8b 9f c2 00 00 00 	mov    0xc2(%rdi),%bx
    1d55:	49 89 fe             	mov    %rdi,%r14
    1d58:	66 39 1a             	cmp    %bx,(%rdx)
    1d5b:	74 05                	je     1d62 <dns_xfer_deliver+0x58>
    1d5d:	e9 91 02 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1d62:	66 81 7a 04 00 01    	cmpw   $0x100,0x4(%rdx)
    1d68:	74 05                	je     1d6f <dns_xfer_deliver+0x65>
    1d6a:	e9 84 02 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1d6f:	48 8d 5c 24 30       	lea    0x30(%rsp),%rbx
    1d74:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    1d79:	48 89 df             	mov    %rbx,%rdi
    1d7c:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    1d81:	48 c7 44 24 38 0c 00 	movq   $0xc,0x38(%rsp)
    1d88:	00 00 
    1d8a:	e8 58 fe ff ff       	call   1be7 <dns_skip>
    1d8f:	4c 63 e0             	movslq %eax,%r12
    1d92:	45 85 e4             	test   %r12d,%r12d
    1d95:	0f 88 5e 02 00 00    	js     1ff9 <dns_xfer_deliver+0x2ef>
    1d9b:	49 8d 44 24 04       	lea    0x4(%r12),%rax
    1da0:	4d 8d be d8 01 00 00 	lea    0x1d8(%r14),%r15
    1da7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1dac:	49 89 c2             	mov    %rax,%r10
    1daf:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    1db4:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
    1db9:	49 39 f2             	cmp    %rsi,%r10
    1dbc:	0f 84 74 01 00 00    	je     1f36 <dns_xfer_deliver+0x22c>
    1dc2:	48 89 df             	mov    %rbx,%rdi
    1dc5:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    1dca:	e8 18 fe ff ff       	call   1be7 <dns_skip>
    1dcf:	41 89 c4             	mov    %eax,%r12d
    1dd2:	85 c0                	test   %eax,%eax
    1dd4:	0f 88 1f 02 00 00    	js     1ff9 <dns_xfer_deliver+0x2ef>
    1dda:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    1ddf:	4c 63 c8             	movslq %eax,%r9
    1de2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    1de7:	4c 01 ca             	add    %r9,%rdx
    1dea:	49 83 c1 0a          	add    $0xa,%r9
    1dee:	49 39 f1             	cmp    %rsi,%r9
    1df1:	76 05                	jbe    1df8 <dns_xfer_deliver+0xee>
    1df3:	e9 fb 01 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1df8:	66 8b 4a 08          	mov    0x8(%rdx),%cx
    1dfc:	86 cd                	xchg   %cl,%ch
    1dfe:	0f b7 c9             	movzwl %cx,%ecx
    1e01:	4e 8d 14 09          	lea    (%rcx,%r9,1),%r10
    1e05:	49 39 f2             	cmp    %rsi,%r10
    1e08:	76 05                	jbe    1e0f <dns_xfer_deliver+0x105>
    1e0a:	e9 e4 01 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1e0f:	4c 89 fe             	mov    %r15,%rsi
    1e12:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    1e17:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    1e1c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    1e21:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    1e26:	e8 09 fa ff ff       	call   1834 <dns_compare>
    1e2b:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    1e30:	85 c0                	test   %eax,%eax
    1e32:	41 89 c4             	mov    %eax,%r12d
    1e35:	0f 85 74 ff ff ff    	jne    1daf <dns_xfer_deliver+0xa5>
    1e3b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    1e40:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    1e45:	66 8b 02             	mov    (%rdx),%ax
    1e48:	66 3d 00 05          	cmp    $0x500,%ax
    1e4c:	74 73                	je     1ec1 <dns_xfer_deliver+0x1b7>
    1e4e:	66 3d 00 1c          	cmp    $0x1c00,%ax
    1e52:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    1e57:	74 0c                	je     1e65 <dns_xfer_deliver+0x15b>
    1e59:	66 3d 00 01          	cmp    $0x100,%ax
    1e5d:	0f 85 4c ff ff ff    	jne    1daf <dns_xfer_deliver+0xa5>
    1e63:	eb 26                	jmp    1e8b <dns_xfer_deliver+0x181>
    1e65:	48 83 f9 0f          	cmp    $0xf,%rcx
    1e69:	77 05                	ja     1e70 <dns_xfer_deliver+0x166>
    1e6b:	e9 83 01 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1e70:	66 41 c7 86 a0 00 00 	movw   $0x2,0xa0(%r14)
    1e77:	00 02 00 
    1e7a:	49 8d be a8 00 00 00 	lea    0xa8(%r14),%rdi
    1e81:	48 8d 72 0a          	lea    0xa(%rdx),%rsi
    1e85:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1e86:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1e87:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1e88:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1e89:	eb 1f                	jmp    1eaa <dns_xfer_deliver+0x1a0>
    1e8b:	48 83 f9 03          	cmp    $0x3,%rcx
    1e8f:	77 05                	ja     1e96 <dns_xfer_deliver+0x18c>
    1e91:	e9 5d 01 00 00       	jmp    1ff3 <dns_xfer_deliver+0x2e9>
    1e96:	66 41 c7 86 a0 00 00 	movw   $0x1,0xa0(%r14)
    1e9d:	00 01 00 
    1ea0:	8b 42 0a             	mov    0xa(%rdx),%eax
    1ea3:	41 89 86 a8 00 00 00 	mov    %eax,0xa8(%r14)
    1eaa:	49 8d b6 a0 00 00 00 	lea    0xa0(%r14),%rsi
    1eb1:	49 8d 7e 10          	lea    0x10(%r14),%rdi
    1eb5:	e8 c8 df 00 00       	call   fe82 <resolv_done>
    1eba:	31 f6                	xor    %esi,%esi
    1ebc:	e9 1b 01 00 00       	jmp    1fdc <dns_xfer_deliver+0x2d2>
    1ec1:	41 8b 86 20 02 00 00 	mov    0x220(%r14),%eax
    1ec8:	ff c0                	inc    %eax
    1eca:	41 89 86 20 02 00 00 	mov    %eax,0x220(%r14)
    1ed1:	83 f8 20             	cmp    $0x20,%eax
    1ed4:	76 18                	jbe    1eee <dns_xfer_deliver+0x1e4>
    1ed6:	be 76 9f ee df       	mov    $0xdfee9f76,%esi
    1edb:	4c 89 f7             	mov    %r14,%rdi
    1ede:	41 bc 76 9f ee df    	mov    $0xdfee9f76,%r12d
    1ee4:	e8 ef f4 ff ff       	call   13d8 <dns_done>
    1ee9:	e9 0b 01 00 00       	jmp    1ff9 <dns_xfer_deliver+0x2ef>
    1eee:	49 8b 86 18 02 00 00 	mov    0x218(%r14),%rax
    1ef5:	4c 89 fe             	mov    %r15,%rsi
    1ef8:	48 89 df             	mov    %rbx,%rdi
    1efb:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
    1f00:	49 89 86 10 02 00 00 	mov    %rax,0x210(%r14)
    1f07:	e8 f5 f9 ff ff       	call   1901 <dns_copy>
    1f0c:	4c 89 f7             	mov    %r14,%rdi
    1f0f:	48 98                	cltq   
    1f11:	48 83 c0 0b          	add    $0xb,%rax
    1f15:	49 89 86 00 02 00 00 	mov    %rax,0x200(%r14)
    1f1c:	e8 82 fa ff ff       	call   19a3 <dns_question>
    1f21:	41 89 c4             	mov    %eax,%r12d
    1f24:	85 c0                	test   %eax,%eax
    1f26:	0f 85 ad 00 00 00    	jne    1fd9 <dns_xfer_deliver+0x2cf>
    1f2c:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    1f31:	e9 79 fe ff ff       	jmp    1daf <dns_xfer_deliver+0xa5>
    1f36:	49 8d 7e 50          	lea    0x50(%r14),%rdi
    1f3a:	e8 91 e3 00 00       	call   102d0 <stop_timer>
    1f3f:	66 41 81 fd 00 05    	cmp    $0x500,%r13w
    1f45:	74 30                	je     1f77 <dns_xfer_deliver+0x26d>
    1f47:	66 41 81 fd 00 1c    	cmp    $0x1c00,%r13w
    1f4d:	74 1a                	je     1f69 <dns_xfer_deliver+0x25f>
    1f4f:	66 41 81 fd 00 01    	cmp    $0x100,%r13w
    1f55:	0f 85 8b 00 00 00    	jne    1fe6 <dns_xfer_deliver+0x2dc>
    1f5b:	49 8b 86 f0 01 00 00 	mov    0x1f0(%r14),%rax
    1f62:	66 c7 00 00 05       	movw   $0x500,(%rax)
    1f67:	eb 1a                	jmp    1f83 <dns_xfer_deliver+0x279>
    1f69:	49 8b 86 f0 01 00 00 	mov    0x1f0(%r14),%rax
    1f70:	66 c7 00 00 01       	movw   $0x100,(%rax)
    1f75:	eb 0c                	jmp    1f83 <dns_xfer_deliver+0x279>
    1f77:	66 41 81 be c0 00 00 	cmpw   $0x500,0xc0(%r14)
    1f7e:	00 00 05 
    1f81:	75 0d                	jne    1f90 <dns_xfer_deliver+0x286>
    1f83:	4c 89 f7             	mov    %r14,%rdi
    1f86:	45 31 e4             	xor    %r12d,%r12d
    1f89:	e8 8a f4 ff ff       	call   1418 <dns_send_packet.isra.0>
    1f8e:	eb 69                	jmp    1ff9 <dns_xfer_deliver+0x2ef>
    1f90:	49 8b 86 18 02 00 00 	mov    0x218(%r14),%rax
    1f97:	49 39 86 10 02 00 00 	cmp    %rax,0x210(%r14)
    1f9e:	75 15                	jne    1fb5 <dns_xfer_deliver+0x2ab>
    1fa0:	be 72 9e ee c1       	mov    $0xc1ee9e72,%esi
    1fa5:	4c 89 f7             	mov    %r14,%rdi
    1fa8:	41 bc 72 9e ee c1    	mov    $0xc1ee9e72,%r12d
    1fae:	e8 25 f4 ff ff       	call   13d8 <dns_done>
    1fb3:	eb 44                	jmp    1ff9 <dns_xfer_deliver+0x2ef>
    1fb5:	49 8d be 08 02 00 00 	lea    0x208(%r14),%rdi
    1fbc:	e8 76 fc ff ff       	call   1c37 <dns_skip_search>
    1fc1:	4c 89 f7             	mov    %r14,%rdi
    1fc4:	48 98                	cltq   
    1fc6:	49 89 86 10 02 00 00 	mov    %rax,0x210(%r14)
    1fcd:	e8 d1 f9 ff ff       	call   19a3 <dns_question>
    1fd2:	41 89 c4             	mov    %eax,%r12d
    1fd5:	85 c0                	test   %eax,%eax
    1fd7:	74 aa                	je     1f83 <dns_xfer_deliver+0x279>
    1fd9:	44 89 e6             	mov    %r12d,%esi
    1fdc:	4c 89 f7             	mov    %r14,%rdi
    1fdf:	e8 f4 f3 ff ff       	call   13d8 <dns_done>
    1fe4:	eb 13                	jmp    1ff9 <dns_xfer_deliver+0x2ef>
    1fe6:	be 7e 9f ee e3       	mov    $0xe3ee9f7e,%esi
    1feb:	4c 89 f7             	mov    %r14,%rdi
    1fee:	e8 e5 f3 ff ff       	call   13d8 <dns_done>
    1ff3:	41 bc 7e 9f ee e3    	mov    $0xe3ee9f7e,%r12d
    1ff9:	48 89 ef             	mov    %rbp,%rdi
    1ffc:	e8 95 7c 00 00       	call   9c96 <free_iob>
    2001:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    2006:	48 2b 05 63 7f 02 00 	sub    0x27f63(%rip),%rax        # 29f70 <__stack_chk_guard>
    200d:	74 05                	je     2014 <dns_xfer_deliver+0x30a>
    200f:	e8 4c 0a 00 00       	call   2a60 <__stack_chk_fail>
    2014:	48 83 c4 58          	add    $0x58,%rsp
    2018:	44 89 e0             	mov    %r12d,%eax
    201b:	5b                   	pop    %rbx
    201c:	5d                   	pop    %rbp
    201d:	41 5c                	pop    %r12
    201f:	41 5d                	pop    %r13
    2021:	41 5e                	pop    %r14
    2023:	41 5f                	pop    %r15
    2025:	c3                   	ret    

0000000000002026 <efi_handle_cup>:
    2026:	f3 0f 1e fa          	endbr64 
    202a:	48 83 ec 28          	sub    $0x28,%rsp
    202e:	8b 32                	mov    (%rdx),%esi
    2030:	8b 52 04             	mov    0x4(%rdx),%edx
    2033:	31 c9                	xor    %ecx,%ecx
    2035:	48 8b 05 5c 7f 02 00 	mov    0x27f5c(%rip),%rax        # 29f98 <efi_systab>
    203c:	44 8d 46 ff          	lea    -0x1(%rsi),%r8d
    2040:	45 85 c0             	test   %r8d,%r8d
    2043:	48 8b 40 40          	mov    0x40(%rax),%rax
    2047:	44 0f 48 c1          	cmovs  %ecx,%r8d
    204b:	ff ca                	dec    %edx
    204d:	0f 48 d1             	cmovs  %ecx,%edx
    2050:	48 89 c1             	mov    %rax,%rcx
    2053:	4d 63 c0             	movslq %r8d,%r8
    2056:	48 63 d2             	movslq %edx,%rdx
    2059:	ff 50 38             	call   *0x38(%rax)
    205c:	48 83 c4 28          	add    $0x28,%rsp
    2060:	c3                   	ret    

0000000000002061 <efi_handle_ed>:
    2061:	f3 0f 1e fa          	endbr64 
    2065:	48 83 ec 28          	sub    $0x28,%rsp
    2069:	48 8b 05 28 7f 02 00 	mov    0x27f28(%rip),%rax        # 29f98 <efi_systab>
    2070:	48 8b 40 40          	mov    0x40(%rax),%rax
    2074:	48 89 c1             	mov    %rax,%rcx
    2077:	ff 50 30             	call   *0x30(%rax)
    207a:	48 83 c4 28          	add    $0x28,%rsp
    207e:	c3                   	ret    

000000000000207f <efi_handle_sgr>:
    207f:	f3 0f 1e fa          	endbr64 
    2083:	48 8b 05 0e 7f 02 00 	mov    0x27f0e(%rip),%rax        # 29f98 <efi_systab>
    208a:	53                   	push   %rbx
    208b:	41 89 f0             	mov    %esi,%r8d
    208e:	49 89 d1             	mov    %rdx,%r9
    2091:	31 f6                	xor    %esi,%esi
    2093:	31 c9                	xor    %ecx,%ecx
    2095:	4c 8d 1d 9c 02 02 00 	lea    0x2029c(%rip),%r11        # 22338 <efi_attr_bcols.0>
    209c:	4c 8b 50 40          	mov    0x40(%rax),%r10
    20a0:	8b 05 da 23 02 00    	mov    0x223da(%rip),%eax        # 24480 <efi_attr>
    20a6:	48 8d 1d 9b 02 02 00 	lea    0x2029b(%rip),%rbx        # 22348 <efi_attr_fcols.1>
    20ad:	41 39 f0             	cmp    %esi,%r8d
    20b0:	76 55                	jbe    2107 <efi_handle_sgr+0x88>
    20b2:	41 8b 14 b1          	mov    (%r9,%rsi,4),%edx
    20b6:	85 d2                	test   %edx,%edx
    20b8:	74 41                	je     20fb <efi_handle_sgr+0x7c>
    20ba:	83 fa 01             	cmp    $0x1,%edx
    20bd:	75 05                	jne    20c4 <efi_handle_sgr+0x45>
    20bf:	83 c8 08             	or     $0x8,%eax
    20c2:	eb 33                	jmp    20f7 <efi_handle_sgr+0x78>
    20c4:	83 fa 16             	cmp    $0x16,%edx
    20c7:	75 05                	jne    20ce <efi_handle_sgr+0x4f>
    20c9:	83 e0 f7             	and    $0xfffffff7,%eax
    20cc:	eb 29                	jmp    20f7 <efi_handle_sgr+0x78>
    20ce:	8d 7a e2             	lea    -0x1e(%rdx),%edi
    20d1:	83 ff 09             	cmp    $0x9,%edi
    20d4:	77 0c                	ja     20e2 <efi_handle_sgr+0x63>
    20d6:	48 63 ff             	movslq %edi,%rdi
    20d9:	83 e0 f8             	and    $0xfffffff8,%eax
    20dc:	0f b6 14 3b          	movzbl (%rbx,%rdi,1),%edx
    20e0:	eb 13                	jmp    20f5 <efi_handle_sgr+0x76>
    20e2:	83 ea 28             	sub    $0x28,%edx
    20e5:	83 fa 09             	cmp    $0x9,%edx
    20e8:	77 18                	ja     2102 <efi_handle_sgr+0x83>
    20ea:	48 63 d2             	movslq %edx,%rdx
    20ed:	83 e0 8f             	and    $0xffffff8f,%eax
    20f0:	41 0f b6 14 13       	movzbl (%r11,%rdx,1),%edx
    20f5:	09 d0                	or     %edx,%eax
    20f7:	b1 01                	mov    $0x1,%cl
    20f9:	eb 07                	jmp    2102 <efi_handle_sgr+0x83>
    20fb:	b1 01                	mov    $0x1,%cl
    20fd:	b8 07 00 00 00       	mov    $0x7,%eax
    2102:	48 ff c6             	inc    %rsi
    2105:	eb a6                	jmp    20ad <efi_handle_sgr+0x2e>
    2107:	84 c9                	test   %cl,%cl
    2109:	74 06                	je     2111 <efi_handle_sgr+0x92>
    210b:	89 05 6f 23 02 00    	mov    %eax,0x2236f(%rip)        # 24480 <efi_attr>
    2111:	48 83 ec 20          	sub    $0x20,%rsp
    2115:	8b 15 65 23 02 00    	mov    0x22365(%rip),%edx        # 24480 <efi_attr>
    211b:	4c 89 d1             	mov    %r10,%rcx
    211e:	41 ff 52 28          	call   *0x28(%r10)
    2122:	48 83 c4 20          	add    $0x20,%rsp
    2126:	5b                   	pop    %rbx
    2127:	c3                   	ret    

0000000000002128 <efi_handle_dectcem_set>:
    2128:	f3 0f 1e fa          	endbr64 
    212c:	48 83 ec 28          	sub    $0x28,%rsp
    2130:	48 8b 05 61 7e 02 00 	mov    0x27e61(%rip),%rax        # 29f98 <efi_systab>
    2137:	ba 01 00 00 00       	mov    $0x1,%edx
    213c:	48 8b 40 40          	mov    0x40(%rax),%rax
    2140:	48 89 c1             	mov    %rax,%rcx
    2143:	ff 50 40             	call   *0x40(%rax)
    2146:	48 83 c4 28          	add    $0x28,%rsp
    214a:	c3                   	ret    

000000000000214b <efi_handle_dectcem_reset>:
    214b:	f3 0f 1e fa          	endbr64 
    214f:	48 83 ec 28          	sub    $0x28,%rsp
    2153:	48 8b 05 3e 7e 02 00 	mov    0x27e3e(%rip),%rax        # 29f98 <efi_systab>
    215a:	31 d2                	xor    %edx,%edx
    215c:	48 8b 40 40          	mov    0x40(%rax),%rax
    2160:	48 89 c1             	mov    %rax,%rcx
    2163:	ff 50 40             	call   *0x40(%rax)
    2166:	48 83 c4 28          	add    $0x28,%rsp
    216a:	c3                   	ret    

000000000000216b <efi_getchar>:
    216b:	f3 0f 1e fa          	endbr64 
    216f:	48 83 ec 18          	sub    $0x18,%rsp
    2173:	48 8b 15 46 2b 02 00 	mov    0x22b46(%rip),%rdx        # 24cc0 <ansi_input>
    217a:	48 8b 05 ef 7d 02 00 	mov    0x27def(%rip),%rax        # 29f70 <__stack_chk_guard>
    2181:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2186:	48 8b 05 0b 7e 02 00 	mov    0x27e0b(%rip),%rax        # 29f98 <efi_systab>
    218d:	48 8b 48 30          	mov    0x30(%rax),%rcx
    2191:	0f be 02             	movsbl (%rdx),%eax
    2194:	84 c0                	test   %al,%al
    2196:	74 0c                	je     21a4 <efi_getchar+0x39>
    2198:	48 ff c2             	inc    %rdx
    219b:	48 89 15 1e 2b 02 00 	mov    %rdx,0x22b1e(%rip)        # 24cc0 <ansi_input>
    21a2:	eb 4b                	jmp    21ef <efi_getchar+0x84>
    21a4:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    21a9:	48 83 ec 20          	sub    $0x20,%rsp
    21ad:	ff 51 08             	call   *0x8(%rcx)
    21b0:	48 83 c4 20          	add    $0x20,%rsp
    21b4:	48 85 c0             	test   %rax,%rax
    21b7:	74 04                	je     21bd <efi_getchar+0x52>
    21b9:	31 c0                	xor    %eax,%eax
    21bb:	eb 32                	jmp    21ef <efi_getchar+0x84>
    21bd:	0f b7 44 24 06       	movzwl 0x6(%rsp),%eax
    21c2:	66 85 c0             	test   %ax,%ax
    21c5:	75 28                	jne    21ef <efi_getchar+0x84>
    21c7:	0f b7 54 24 04       	movzwl 0x4(%rsp),%edx
    21cc:	31 c0                	xor    %eax,%eax
    21ce:	83 fa 17             	cmp    $0x17,%edx
    21d1:	77 1c                	ja     21ef <efi_getchar+0x84>
    21d3:	48 8d 0d 26 2a 02 00 	lea    0x22a26(%rip),%rcx        # 24c00 <ansi_sequences>
    21da:	48 8b 14 d1          	mov    (%rcx,%rdx,8),%rdx
    21de:	48 85 d2             	test   %rdx,%rdx
    21e1:	74 0c                	je     21ef <efi_getchar+0x84>
    21e3:	48 89 15 d6 2a 02 00 	mov    %rdx,0x22ad6(%rip)        # 24cc0 <ansi_input>
    21ea:	b8 1b 00 00 00       	mov    $0x1b,%eax
    21ef:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    21f4:	48 2b 15 75 7d 02 00 	sub    0x27d75(%rip),%rdx        # 29f70 <__stack_chk_guard>
    21fb:	74 05                	je     2202 <efi_getchar+0x97>
    21fd:	e8 5e 08 00 00       	call   2a60 <__stack_chk_fail>
    2202:	48 83 c4 18          	add    $0x18,%rsp
    2206:	c3                   	ret    

0000000000002207 <efi_iskey>:
    2207:	f3 0f 1e fa          	endbr64 
    220b:	48 8b 15 ae 2a 02 00 	mov    0x22aae(%rip),%rdx        # 24cc0 <ansi_input>
    2212:	80 3a 00             	cmpb   $0x0,(%rdx)
    2215:	75 28                	jne    223f <efi_iskey+0x38>
    2217:	48 83 ec 28          	sub    $0x28,%rsp
    221b:	48 8b 05 76 7d 02 00 	mov    0x27d76(%rip),%rax        # 29f98 <efi_systab>
    2222:	48 8b 50 30          	mov    0x30(%rax),%rdx
    2226:	48 8b 40 60          	mov    0x60(%rax),%rax
    222a:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    222e:	ff 50 78             	call   *0x78(%rax)
    2231:	48 85 c0             	test   %rax,%rax
    2234:	0f 94 c0             	sete   %al
    2237:	48 83 c4 28          	add    $0x28,%rsp
    223b:	0f b6 c0             	movzbl %al,%eax
    223e:	c3                   	ret    
    223f:	b8 01 00 00 00       	mov    $0x1,%eax
    2244:	c3                   	ret    

0000000000002245 <efi_putchar>:
    2245:	f3 0f 1e fa          	endbr64 
    2249:	53                   	push   %rbx
    224a:	89 fe                	mov    %edi,%esi
    224c:	48 83 ec 10          	sub    $0x10,%rsp
    2250:	48 8b 05 19 7d 02 00 	mov    0x27d19(%rip),%rax        # 29f70 <__stack_chk_guard>
    2257:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    225c:	48 8b 05 35 7d 02 00 	mov    0x27d35(%rip),%rax        # 29f98 <efi_systab>
    2263:	66 89 7c 24 04       	mov    %di,0x4(%rsp)
    2268:	48 8d 3d 71 2a 02 00 	lea    0x22a71(%rip),%rdi        # 24ce0 <efi_ansiesc_ctx>
    226f:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
    2276:	48 8b 58 40          	mov    0x40(%rax),%rbx
    227a:	e8 5b 5a 01 00       	call   17cda <ansiesc_process>
    227f:	85 c0                	test   %eax,%eax
    2281:	78 13                	js     2296 <efi_putchar+0x51>
    2283:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    2288:	48 83 ec 20          	sub    $0x20,%rsp
    228c:	48 89 d9             	mov    %rbx,%rcx
    228f:	ff 53 08             	call   *0x8(%rbx)
    2292:	48 83 c4 20          	add    $0x20,%rsp
    2296:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    229b:	48 2b 05 ce 7c 02 00 	sub    0x27cce(%rip),%rax        # 29f70 <__stack_chk_guard>
    22a2:	74 05                	je     22a9 <efi_putchar+0x64>
    22a4:	e8 b7 07 00 00       	call   2a60 <__stack_chk_fail>
    22a9:	48 83 c4 10          	add    $0x10,%rsp
    22ad:	5b                   	pop    %rbx
    22ae:	c3                   	ret    

00000000000022af <efi_console_init>:
    22af:	f3 0f 1e fa          	endbr64 
    22b3:	48 83 ec 18          	sub    $0x18,%rsp
    22b7:	48 8b 05 b2 7c 02 00 	mov    0x27cb2(%rip),%rax        # 29f70 <__stack_chk_guard>
    22be:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    22c3:	48 8b 05 6e 78 02 00 	mov    0x2786e(%rip),%rax        # 29b38 <conctrl>
    22ca:	48 85 c0             	test   %rax,%rax
    22cd:	74 36                	je     2305 <efi_console_init+0x56>
    22cf:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    22d4:	48 83 ec 20          	sub    $0x20,%rsp
    22d8:	45 31 c9             	xor    %r9d,%r9d
    22db:	45 31 c0             	xor    %r8d,%r8d
    22de:	48 89 c1             	mov    %rax,%rcx
    22e1:	ff 10                	call   *(%rax)
    22e3:	48 83 c4 20          	add    $0x20,%rsp
    22e7:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
    22ec:	74 17                	je     2305 <efi_console_init+0x56>
    22ee:	48 8b 05 43 78 02 00 	mov    0x27843(%rip),%rax        # 29b38 <conctrl>
    22f5:	48 83 ec 20          	sub    $0x20,%rsp
    22f9:	31 d2                	xor    %edx,%edx
    22fb:	48 89 c1             	mov    %rax,%rcx
    22fe:	ff 50 08             	call   *0x8(%rax)
    2301:	48 83 c4 20          	add    $0x20,%rsp
    2305:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    230a:	48 2b 05 5f 7c 02 00 	sub    0x27c5f(%rip),%rax        # 29f70 <__stack_chk_guard>
    2311:	74 05                	je     2318 <efi_console_init+0x69>
    2313:	e8 48 07 00 00       	call   2a60 <__stack_chk_fail>
    2318:	48 83 c4 18          	add    $0x18,%rsp
    231c:	c3                   	ret    

000000000000231d <efi_image_probe>:
    231d:	f3 0f 1e fa          	endbr64 
    2321:	41 54                	push   %r12
    2323:	4c 8d 05 5a 21 02 00 	lea    0x2215a(%rip),%r8        # 24484 <empty_path.0>
    232a:	31 c9                	xor    %ecx,%ecx
    232c:	53                   	push   %rbx
    232d:	48 83 ec 18          	sub    $0x18,%rsp
    2331:	4c 8b 4f 40          	mov    0x40(%rdi),%r9
    2335:	48 8b 15 4c 7c 02 00 	mov    0x27c4c(%rip),%rdx        # 29f88 <efi_image_handle>
    233c:	48 8b 05 2d 7c 02 00 	mov    0x27c2d(%rip),%rax        # 29f70 <__stack_chk_guard>
    2343:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2348:	48 8b 05 49 7c 02 00 	mov    0x27c49(%rip),%rax        # 29f98 <efi_systab>
    234f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    2356:	00 
    2357:	48 8b 58 60          	mov    0x60(%rax),%rbx
    235b:	48 89 e0             	mov    %rsp,%rax
    235e:	50                   	push   %rax
    235f:	ff 77 48             	push   0x48(%rdi)
    2362:	48 83 ec 20          	sub    $0x20,%rsp
    2366:	ff 93 c8 00 00 00    	call   *0xc8(%rbx)
    236c:	48 83 c4 30          	add    $0x30,%rsp
    2370:	48 85 c0             	test   %rax,%rax
    2373:	74 3c                	je     23b1 <efi_image_probe+0x94>
    2375:	48 ba 1a 00 00 00 00 	movabs $0x800000000000001a,%rdx
    237c:	00 00 80 
    237f:	49 89 c4             	mov    %rax,%r12
    2382:	49 c1 ec 38          	shr    $0x38,%r12
    2386:	41 09 c4             	or     %eax,%r12d
    2389:	45 0f b6 e4          	movzbl %r12b,%r12d
    238d:	41 81 cc 00 81 04 7f 	or     $0x7f048100,%r12d
    2394:	41 f7 dc             	neg    %r12d
    2397:	48 39 d0             	cmp    %rdx,%rax
    239a:	75 2b                	jne    23c7 <efi_image_probe+0xaa>
    239c:	48 83 ec 20          	sub    $0x20,%rsp
    23a0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    23a5:	ff 93 e0 00 00 00    	call   *0xe0(%rbx)
    23ab:	48 83 c4 20          	add    $0x20,%rsp
    23af:	eb 16                	jmp    23c7 <efi_image_probe+0xaa>
    23b1:	48 83 ec 20          	sub    $0x20,%rsp
    23b5:	45 31 e4             	xor    %r12d,%r12d
    23b8:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    23bd:	ff 93 e0 00 00 00    	call   *0xe0(%rbx)
    23c3:	48 83 c4 20          	add    $0x20,%rsp
    23c7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    23cc:	48 2b 05 9d 7b 02 00 	sub    0x27b9d(%rip),%rax        # 29f70 <__stack_chk_guard>
    23d3:	74 05                	je     23da <efi_image_probe+0xbd>
    23d5:	e8 86 06 00 00       	call   2a60 <__stack_chk_fail>
    23da:	48 83 c4 18          	add    $0x18,%rsp
    23de:	44 89 e0             	mov    %r12d,%eax
    23e1:	5b                   	pop    %rbx
    23e2:	41 5c                	pop    %r12
    23e4:	c3                   	ret    

00000000000023e5 <efi_image_exec>:
    23e5:	f3 0f 1e fa          	endbr64 
    23e9:	41 57                	push   %r15
    23eb:	41 56                	push   %r14
    23ed:	41 55                	push   %r13
    23ef:	49 89 fd             	mov    %rdi,%r13
    23f2:	41 54                	push   %r12
    23f4:	55                   	push   %rbp
    23f5:	53                   	push   %rbx
    23f6:	48 83 ec 48          	sub    $0x48,%rsp
    23fa:	48 8b 05 6f 7b 02 00 	mov    0x27b6f(%rip),%rax        # 29f70 <__stack_chk_guard>
    2401:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    2406:	48 8b 05 8b 7b 02 00 	mov    0x27b8b(%rip),%rax        # 29f98 <efi_systab>
    240d:	4c 8b 78 60          	mov    0x60(%rax),%r15
    2411:	e8 a5 35 00 00       	call   59bb <last_opened_snpdev>
    2416:	48 85 c0             	test   %rax,%rax
    2419:	75 0b                	jne    2426 <efi_image_exec+0x41>
    241b:	41 bc 79 7f fb d3    	mov    $0xd3fb7f79,%r12d
    2421:	e9 d8 02 00 00       	jmp    26fe <efi_image_exec+0x319>
    2426:	48 8b 78 20          	mov    0x20(%rax),%rdi
    242a:	48 89 c5             	mov    %rax,%rbp
    242d:	e8 5c a3 01 00       	call   1c78e <efi_file_install>
    2432:	41 89 c4             	mov    %eax,%r12d
    2435:	85 c0                	test   %eax,%eax
    2437:	0f 85 c1 02 00 00    	jne    26fe <efi_image_exec+0x319>
    243d:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    2441:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    2445:	e8 43 1d 00 00       	call   418d <efi_pxe_install>
    244a:	41 89 c4             	mov    %eax,%r12d
    244d:	85 c0                	test   %eax,%eax
    244f:	0f 85 a0 02 00 00    	jne    26f5 <efi_image_exec+0x310>
    2455:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    2459:	e8 85 97 01 00       	call   1bbe3 <efi_download_install>
    245e:	41 89 c4             	mov    %eax,%r12d
    2461:	85 c0                	test   %eax,%eax
    2463:	0f 85 83 02 00 00    	jne    26ec <efi_image_exec+0x307>
    2469:	48 8b b5 90 05 00 00 	mov    0x590(%rbp),%rsi
    2470:	48 89 f7             	mov    %rsi,%rdi
    2473:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    2478:	e8 3d 45 00 00       	call   69ba <efi_devpath_len>
    247d:	49 8b 7d 28          	mov    0x28(%r13),%rdi
    2481:	48 89 c3             	mov    %rax,%rbx
    2484:	e8 b1 14 01 00       	call   1393a <strlen>
    2489:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    248e:	48 83 c0 03          	add    $0x3,%rax
    2492:	48 01 c0             	add    %rax,%rax
    2495:	48 8d 7c 03 04       	lea    0x4(%rbx,%rax,1),%rdi
    249a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    249f:	e8 b6 a1 00 00       	call   c65a <zalloc>
    24a4:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    24a9:	48 85 c0             	test   %rax,%rax
    24ac:	49 89 c6             	mov    %rax,%r14
    24af:	75 0b                	jne    24bc <efi_image_exec+0xd7>
    24b1:	41 bc 77 7f fb ce    	mov    $0xcefb7f77,%r12d
    24b7:	e9 27 02 00 00       	jmp    26e3 <efi_image_exec+0x2fe>
    24bc:	48 89 da             	mov    %rbx,%rdx
    24bf:	48 89 c7             	mov    %rax,%rdi
    24c2:	4c 01 f3             	add    %r14,%rbx
    24c5:	e8 43 4e 01 00       	call   1730d <__memcpy>
    24ca:	8b 44 24 08          	mov    0x8(%rsp),%eax
    24ce:	66 c7 03 04 04       	movw   $0x404,(%rbx)
    24d3:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
    24d7:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    24dc:	49 8b 4d 28          	mov    0x28(%r13),%rcx
    24e0:	48 8d 15 3a 11 02 00 	lea    0x2113a(%rip),%rdx        # 23621 <.LC0>
    24e7:	66 89 43 02          	mov    %ax,0x2(%rbx)
    24eb:	31 c0                	xor    %eax,%eax
    24ed:	48 ff c6             	inc    %rsi
    24f0:	e8 4f 44 00 00       	call   6944 <efi_snprintf>
    24f5:	49 8b 7d 38          	mov    0x38(%r13),%rdi
    24f9:	48 03 5c 24 08       	add    0x8(%rsp),%rbx
    24fe:	66 c7 03 7f ff       	movw   $0xff7f,(%rbx)
    2503:	c6 43 02 04          	movb   $0x4,0x2(%rbx)
    2507:	31 db                	xor    %ebx,%ebx
    2509:	48 85 ff             	test   %rdi,%rdi
    250c:	74 09                	je     2517 <efi_image_exec+0x132>
    250e:	e8 27 14 01 00       	call   1393a <strlen>
    2513:	48 8d 58 01          	lea    0x1(%rax),%rbx
    2517:	49 8b 7d 28          	mov    0x28(%r13),%rdi
    251b:	e8 1a 14 01 00       	call   1393a <strlen>
    2520:	48 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%rsi
    2525:	48 8d 3c 36          	lea    (%rsi,%rsi,1),%rdi
    2529:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    252e:	e8 27 a1 00 00       	call   c65a <zalloc>
    2533:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    2538:	48 85 c0             	test   %rax,%rax
    253b:	48 89 c3             	mov    %rax,%rbx
    253e:	75 0b                	jne    254b <efi_image_exec+0x166>
    2540:	41 bc 77 7f fb ce    	mov    $0xcefb7f77,%r12d
    2546:	e9 90 01 00 00       	jmp    26db <efi_image_exec+0x2f6>
    254b:	4d 8b 4d 38          	mov    0x38(%r13),%r9
    254f:	4c 8d 05 00 14 02 00 	lea    0x21400(%rip),%r8        # 23956 <.LC1>
    2556:	4d 85 c9             	test   %r9,%r9
    2559:	75 0a                	jne    2565 <efi_image_exec+0x180>
    255b:	4c 8d 0d 72 1e 02 00 	lea    0x21e72(%rip),%r9        # 243d4 <.LC0>
    2562:	4d 89 c8             	mov    %r9,%r8
    2565:	49 8b 4d 28          	mov    0x28(%r13),%rcx
    2569:	48 8d 15 54 02 02 00 	lea    0x20254(%rip),%rdx        # 227c4 <.LC3>
    2570:	48 89 df             	mov    %rbx,%rdi
    2573:	31 c0                	xor    %eax,%eax
    2575:	e8 ca 43 00 00       	call   6944 <efi_snprintf>
    257a:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    257f:	4d 8b 4d 40          	mov    0x40(%r13),%r9
    2583:	31 c9                	xor    %ecx,%ecx
    2585:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    258c:	00 00 
    258e:	48 8b 15 f3 79 02 00 	mov    0x279f3(%rip),%rdx        # 29f88 <efi_image_handle>
    2595:	4d 89 f0             	mov    %r14,%r8
    2598:	50                   	push   %rax
    2599:	41 ff 75 48          	push   0x48(%r13)
    259d:	48 83 ec 20          	sub    $0x20,%rsp
    25a1:	41 ff 97 c8 00 00 00 	call   *0xc8(%r15)
    25a8:	48 83 c4 30          	add    $0x30,%rsp
    25ac:	48 85 c0             	test   %rax,%rax
    25af:	74 30                	je     25e1 <efi_image_exec+0x1fc>
    25b1:	48 ba 1a 00 00 00 00 	movabs $0x800000000000001a,%rdx
    25b8:	00 00 80 
    25bb:	49 89 c4             	mov    %rax,%r12
    25be:	49 c1 ec 38          	shr    $0x38,%r12
    25c2:	41 09 c4             	or     %eax,%r12d
    25c5:	45 0f b6 e4          	movzbl %r12b,%r12d
    25c9:	41 81 cc 00 81 04 7f 	or     $0x7f048100,%r12d
    25d0:	41 f7 dc             	neg    %r12d
    25d3:	48 39 d0             	cmp    %rdx,%rax
    25d6:	0f 85 f7 00 00 00    	jne    26d3 <efi_image_exec+0x2ee>
    25dc:	e9 de 00 00 00       	jmp    26bf <efi_image_exec+0x2da>
    25e1:	6a 02                	push   $0x2
    25e3:	4c 8b 0d 9e 79 02 00 	mov    0x2799e(%rip),%r9        # 29f88 <efi_image_handle>
    25ea:	48 8d 15 ef 22 02 00 	lea    0x222ef(%rip),%rdx        # 248e0 <efi_loaded_image_protocol_guid>
    25f1:	6a 00                	push   $0x0
    25f3:	48 83 ec 20          	sub    $0x20,%rsp
    25f7:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx
    25fc:	4c 8d 44 24 58       	lea    0x58(%rsp),%r8
    2601:	41 ff 97 18 01 00 00 	call   *0x118(%r15)
    2608:	48 83 c4 30          	add    $0x30,%rsp
    260c:	48 85 c0             	test   %rax,%rax
    260f:	74 1d                	je     262e <efi_image_exec+0x249>
    2611:	49 89 c4             	mov    %rax,%r12
    2614:	49 c1 ec 38          	shr    $0x38,%r12
    2618:	41 09 c4             	or     %eax,%r12d
    261b:	45 0f b6 e4          	movzbl %r12b,%r12d
    261f:	41 81 cc 00 80 04 7f 	or     $0x7f048000,%r12d
    2626:	41 f7 dc             	neg    %r12d
    2629:	e9 91 00 00 00       	jmp    26bf <efi_image_exec+0x2da>
    262e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2633:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
    2638:	75 08                	jne    2642 <efi_image_exec+0x25d>
    263a:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    263e:	48 89 50 18          	mov    %rdx,0x18(%rax)
    2642:	48 89 58 38          	mov    %rbx,0x38(%rax)
    2646:	48 89 df             	mov    %rbx,%rdi
    2649:	e8 ba 4b 01 00       	call   17208 <wcslen>
    264e:	83 cf ff             	or     $0xffffffff,%edi
    2651:	8d 54 00 02          	lea    0x2(%rax,%rax,1),%edx
    2655:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    265a:	89 50 30             	mov    %edx,0x30(%rax)
    265d:	e8 75 33 00 00       	call   59d7 <efi_snp_add_claim>
    2662:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    2667:	e8 53 44 00 00       	call   6abf <efi_wrap>
    266c:	31 ff                	xor    %edi,%edi
    266e:	e8 31 6c 01 00       	call   192a4 <console_configure>
    2673:	48 83 ec 20          	sub    $0x20,%rsp
    2677:	45 31 c0             	xor    %r8d,%r8d
    267a:	31 d2                	xor    %edx,%edx
    267c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    2681:	41 ff 97 d0 00 00 00 	call   *0xd0(%r15)
    2688:	48 83 c4 20          	add    $0x20,%rsp
    268c:	48 85 c0             	test   %rax,%rax
    268f:	75 0c                	jne    269d <efi_image_exec+0x2b8>
    2691:	bf 01 00 00 00       	mov    $0x1,%edi
    2696:	e8 3c 33 00 00       	call   59d7 <efi_snp_add_claim>
    269b:	eb 36                	jmp    26d3 <efi_image_exec+0x2ee>
    269d:	49 89 c4             	mov    %rax,%r12
    26a0:	bf 01 00 00 00       	mov    $0x1,%edi
    26a5:	49 c1 ec 38          	shr    $0x38,%r12
    26a9:	41 09 c4             	or     %eax,%r12d
    26ac:	45 0f b6 e4          	movzbl %r12b,%r12d
    26b0:	41 81 cc 00 82 04 7f 	or     $0x7f048200,%r12d
    26b7:	41 f7 dc             	neg    %r12d
    26ba:	e8 18 33 00 00       	call   59d7 <efi_snp_add_claim>
    26bf:	48 83 ec 20          	sub    $0x20,%rsp
    26c3:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    26c8:	41 ff 97 e0 00 00 00 	call   *0xe0(%r15)
    26cf:	48 83 c4 20          	add    $0x20,%rsp
    26d3:	48 89 df             	mov    %rbx,%rdi
    26d6:	e8 74 9f 00 00       	call   c64f <free>
    26db:	4c 89 f7             	mov    %r14,%rdi
    26de:	e8 6c 9f 00 00       	call   c64f <free>
    26e3:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    26e7:	e8 55 95 01 00       	call   1bc41 <efi_download_uninstall>
    26ec:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    26f0:	e8 b2 1c 00 00       	call   43a7 <efi_pxe_uninstall>
    26f5:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    26f9:	e8 cf a1 01 00       	call   1c8cd <efi_file_uninstall>
    26fe:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    2703:	48 2b 05 66 78 02 00 	sub    0x27866(%rip),%rax        # 29f70 <__stack_chk_guard>
    270a:	74 05                	je     2711 <efi_image_exec+0x32c>
    270c:	e8 4f 03 00 00       	call   2a60 <__stack_chk_fail>
    2711:	48 83 c4 48          	add    $0x48,%rsp
    2715:	44 89 e0             	mov    %r12d,%eax
    2718:	5b                   	pop    %rbx
    2719:	5d                   	pop    %rbp
    271a:	41 5c                	pop    %r12
    271c:	41 5d                	pop    %r13
    271e:	41 5e                	pop    %r14
    2720:	41 5f                	pop    %r15
    2722:	c3                   	ret    

0000000000002723 <efi_unload>:
    2723:	f3 0f 1e fa          	endbr64 
    2727:	57                   	push   %rdi
    2728:	31 ff                	xor    %edi,%edi
    272a:	56                   	push   %rsi
    272b:	53                   	push   %rbx
    272c:	48 83 ec 20          	sub    $0x20,%rsp
    2730:	48 8b 05 61 78 02 00 	mov    0x27861(%rip),%rax        # 29f98 <efi_systab>
    2737:	48 8b 58 60          	mov    0x60(%rax),%rbx
    273b:	e8 98 66 00 00       	call   8dd8 <shutdown>
    2740:	e8 d1 9a 01 00       	call   1c216 <efi_driver_disconnect_all>
    2745:	e8 87 9a 01 00       	call   1c1d1 <efi_driver_uninstall>
    274a:	48 8b 0d ff 73 02 00 	mov    0x273ff(%rip),%rcx        # 29b50 <efi_shutdown_event>
    2751:	ff 53 70             	call   *0x70(%rbx)
    2754:	48 8b 0d 35 78 02 00 	mov    0x27835(%rip),%rcx        # 29f90 <efi_loaded_image_path>
    275b:	ff 53 48             	call   *0x48(%rbx)
    275e:	48 83 c4 20          	add    $0x20,%rsp
    2762:	31 c0                	xor    %eax,%eax
    2764:	5b                   	pop    %rbx
    2765:	5e                   	pop    %rsi
    2766:	5f                   	pop    %rdi
    2767:	c3                   	ret    

0000000000002768 <efi_shutdown_hook>:
    2768:	f3 0f 1e fa          	endbr64 
    276c:	57                   	push   %rdi
    276d:	bf 01 00 00 00       	mov    $0x1,%edi
    2772:	56                   	push   %rsi
    2773:	50                   	push   %rax
    2774:	c7 05 fa 77 02 00 01 	movl   $0x1,0x277fa(%rip)        # 29f78 <efi_shutdown_in_progress>
    277b:	00 00 00 
    277e:	e8 55 66 00 00       	call   8dd8 <shutdown>
    2783:	5a                   	pop    %rdx
    2784:	5e                   	pop    %rsi
    2785:	5f                   	pop    %rdi
    2786:	c3                   	ret    

0000000000002787 <efi_stack_cookie>:
    2787:	f3 0f 1e fa          	endbr64 
    278b:	50                   	push   %rax
    278c:	48 c1 c7 10          	rol    $0x10,%rdi
    2790:	48 89 e0             	mov    %rsp,%rax
    2793:	48 31 c7             	xor    %rax,%rdi
    2796:	48 c1 c7 10          	rol    $0x10,%rdi
    279a:	0f 31                	rdtsc  
    279c:	48 c1 e2 20          	shl    $0x20,%rdx
    27a0:	89 c0                	mov    %eax,%eax
    27a2:	48 09 d0             	or     %rdx,%rax
    27a5:	48 31 f8             	xor    %rdi,%rax
    27a8:	48 c1 c0 10          	rol    $0x10,%rax
    27ac:	48 33 05 cd 22 02 00 	xor    0x222cd(%rip),%rax        # 24a80 <build_id>
    27b3:	5a                   	pop    %rdx
    27b4:	48 c1 e0 08          	shl    $0x8,%rax
    27b8:	c3                   	ret    

00000000000027b9 <efi_init>:
    27b9:	f3 0f 1e fa          	endbr64 
    27bd:	41 57                	push   %r15
    27bf:	41 56                	push   %r14
    27c1:	41 55                	push   %r13
    27c3:	41 54                	push   %r12
    27c5:	55                   	push   %rbp
    27c6:	53                   	push   %rbx
    27c7:	48 83 ec 38          	sub    $0x38,%rsp
    27cb:	48 89 3d b6 77 02 00 	mov    %rdi,0x277b6(%rip)        # 29f88 <efi_image_handle>
    27d2:	48 8b 05 97 77 02 00 	mov    0x27797(%rip),%rax        # 29f70 <__stack_chk_guard>
    27d9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    27de:	31 c0                	xor    %eax,%eax
    27e0:	48 89 35 b1 77 02 00 	mov    %rsi,0x277b1(%rip)        # 29f98 <efi_systab>
    27e7:	48 85 f6             	test   %rsi,%rsi
    27ea:	75 0f                	jne    27fb <efi_init+0x42>
    27ec:	49 bc 02 00 00 00 00 	movabs $0xa000000000000002,%r12
    27f3:	00 00 a0 
    27f6:	e9 40 02 00 00       	jmp    2a3b <efi_init+0x282>
    27fb:	48 83 7e 40 00       	cmpq   $0x0,0x40(%rsi)
    2800:	74 ea                	je     27ec <efi_init+0x33>
    2802:	48 8b 5e 60          	mov    0x60(%rsi),%rbx
    2806:	48 85 db             	test   %rbx,%rbx
    2809:	74 e1                	je     27ec <efi_init+0x33>
    280b:	48 83 7e 58 00       	cmpq   $0x0,0x58(%rsi)
    2810:	74 da                	je     27ec <efi_init+0x33>
    2812:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
    2819:	48 89 fd             	mov    %rdi,%rbp
    281c:	4c 8d 2d b5 5f 02 00 	lea    0x25fb5(%rip),%r13        # 287d8 <__EFI_CONSOLE_CONTROL_PROTOCOL>
    2823:	4c 8d 35 0e 60 02 00 	lea    0x2600e(%rip),%r14        # 28838 <http_errors>
    282a:	48 89 05 17 73 02 00 	mov    %rax,0x27317(%rip)        # 29b48 <efi_exit>
    2831:	4d 39 f5             	cmp    %r14,%r13
    2834:	73 30                	jae    2866 <efi_init+0xad>
    2836:	48 83 ec 20          	sub    $0x20,%rsp
    283a:	4d 8b 45 10          	mov    0x10(%r13),%r8
    283e:	31 d2                	xor    %edx,%edx
    2840:	4c 89 e9             	mov    %r13,%rcx
    2843:	ff 93 40 01 00 00    	call   *0x140(%rbx)
    2849:	48 83 c4 20          	add    $0x20,%rsp
    284d:	49 89 c4             	mov    %rax,%r12
    2850:	48 85 c0             	test   %rax,%rax
    2853:	74 0b                	je     2860 <efi_init+0xa7>
    2855:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
    285a:	0f 85 db 01 00 00    	jne    2a3b <efi_init+0x282>
    2860:	49 83 c5 20          	add    $0x20,%r13
    2864:	eb cb                	jmp    2831 <efi_init+0x78>
    2866:	4c 8d 3d 0b 5f 02 00 	lea    0x25f0b(%rip),%r15        # 28778 <__ACPI_10_TABLE>
    286d:	48 8d 05 44 5f 02 00 	lea    0x25f44(%rip),%rax        # 287b8 <efipci_driver>
    2874:	49 39 c7             	cmp    %rax,%r15
    2877:	73 6d                	jae    28e6 <efi_init+0x12d>
    2879:	4c 8b 0d 18 77 02 00 	mov    0x27718(%rip),%r9        # 29f98 <efi_systab>
    2880:	4d 8b 6f 10          	mov    0x10(%r15),%r13
    2884:	45 31 f6             	xor    %r14d,%r14d
    2887:	49 8b 41 68          	mov    0x68(%r9),%rax
    288b:	48 89 04 24          	mov    %rax,(%rsp)
    288f:	45 89 f4             	mov    %r14d,%r12d
    2892:	4c 3b 24 24          	cmp    (%rsp),%r12
    2896:	73 32                	jae    28ca <efi_init+0x111>
    2898:	4d 6b e4 18          	imul   $0x18,%r12,%r12
    289c:	4d 03 61 70          	add    0x70(%r9),%r12
    28a0:	ba 10 00 00 00       	mov    $0x10,%edx
    28a5:	4c 89 fe             	mov    %r15,%rsi
    28a8:	4c 89 e7             	mov    %r12,%rdi
    28ab:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    28b0:	e8 9f 0f 01 00       	call   13854 <memcmp>
    28b5:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    28ba:	85 c0                	test   %eax,%eax
    28bc:	75 07                	jne    28c5 <efi_init+0x10c>
    28be:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    28c3:	eb 07                	jmp    28cc <efi_init+0x113>
    28c5:	41 ff c6             	inc    %r14d
    28c8:	eb c5                	jmp    288f <efi_init+0xd6>
    28ca:	31 c0                	xor    %eax,%eax
    28cc:	49 89 45 00          	mov    %rax,0x0(%r13)
    28d0:	48 85 c0             	test   %rax,%rax
    28d3:	75 0b                	jne    28e0 <efi_init+0x127>
    28d5:	41 83 7f 18 00       	cmpl   $0x0,0x18(%r15)
    28da:	0f 85 0c ff ff ff    	jne    27ec <efi_init+0x33>
    28e0:	49 83 c7 20          	add    $0x20,%r15
    28e4:	eb 87                	jmp    286d <efi_init+0xb4>
    28e6:	6a 02                	push   $0x2
    28e8:	49 89 e9             	mov    %rbp,%r9
    28eb:	48 8d 15 ee 1f 02 00 	lea    0x21fee(%rip),%rdx        # 248e0 <efi_loaded_image_protocol_guid>
    28f2:	48 89 e9             	mov    %rbp,%rcx
    28f5:	6a 00                	push   $0x0
    28f7:	48 83 ec 20          	sub    $0x20,%rsp
    28fb:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    2900:	ff 93 18 01 00 00    	call   *0x118(%rbx)
    2906:	48 83 c4 30          	add    $0x30,%rsp
    290a:	49 89 c4             	mov    %rax,%r12
    290d:	48 85 c0             	test   %rax,%rax
    2910:	74 05                	je     2917 <efi_init+0x15e>
    2912:	e9 24 01 00 00       	jmp    2a3b <efi_init+0x282>
    2917:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    291c:	49 89 e9             	mov    %rbp,%r9
    291f:	48 8d 15 8a 20 02 00 	lea    0x2208a(%rip),%rdx        # 249b0 <efi_device_path_protocol_guid>
    2926:	48 8b 48 18          	mov    0x18(%rax),%rcx
    292a:	6a 02                	push   $0x2
    292c:	6a 00                	push   $0x0
    292e:	48 89 05 4b 76 02 00 	mov    %rax,0x2764b(%rip)        # 29f80 <efi_loaded_image>
    2935:	48 83 ec 20          	sub    $0x20,%rsp
    2939:	4c 8d 44 24 48       	lea    0x48(%rsp),%r8
    293e:	ff 93 18 01 00 00    	call   *0x118(%rbx)
    2944:	48 83 c4 30          	add    $0x30,%rsp
    2948:	49 89 c4             	mov    %rax,%r12
    294b:	48 85 c0             	test   %rax,%rax
    294e:	74 05                	je     2955 <efi_init+0x19c>
    2950:	e9 e6 00 00 00       	jmp    2a3b <efi_init+0x282>
    2955:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    295a:	e8 5b 40 00 00       	call   69ba <efi_devpath_len>
    295f:	48 83 ec 20          	sub    $0x20,%rsp
    2963:	b9 04 00 00 00       	mov    $0x4,%ecx
    2968:	4c 8d 68 04          	lea    0x4(%rax),%r13
    296c:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    2971:	4c 89 ea             	mov    %r13,%rdx
    2974:	ff 53 40             	call   *0x40(%rbx)
    2977:	48 83 c4 20          	add    $0x20,%rsp
    297b:	49 89 c4             	mov    %rax,%r12
    297e:	48 85 c0             	test   %rax,%rax
    2981:	74 05                	je     2988 <efi_init+0x1cf>
    2983:	e9 b3 00 00 00       	jmp    2a3b <efi_init+0x282>
    2988:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    298d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    2992:	4c 89 ea             	mov    %r13,%rdx
    2995:	e8 73 49 01 00       	call   1730d <__memcpy>
    299a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    299f:	45 31 c9             	xor    %r9d,%r9d
    29a2:	4c 8d 05 bf fd ff ff 	lea    -0x241(%rip),%r8        # 2768 <efi_shutdown_hook>
    29a9:	ba 08 00 00 00       	mov    $0x8,%edx
    29ae:	b9 01 02 00 00       	mov    $0x201,%ecx
    29b3:	48 89 05 d6 75 02 00 	mov    %rax,0x275d6(%rip)        # 29f90 <efi_loaded_image_path>
    29ba:	50                   	push   %rax
    29bb:	48 8d 05 8e 71 02 00 	lea    0x2718e(%rip),%rax        # 29b50 <efi_shutdown_event>
    29c2:	50                   	push   %rax
    29c3:	48 83 ec 20          	sub    $0x20,%rsp
    29c7:	ff 53 50             	call   *0x50(%rbx)
    29ca:	48 83 c4 30          	add    $0x30,%rsp
    29ce:	49 89 c4             	mov    %rax,%r12
    29d1:	48 85 c0             	test   %rax,%rax
    29d4:	74 02                	je     29d8 <efi_init+0x21f>
    29d6:	eb 51                	jmp    2a29 <efi_init+0x270>
    29d8:	e8 6b 97 01 00       	call   1c148 <efi_driver_install>
    29dd:	89 c2                	mov    %eax,%edx
    29df:	85 c0                	test   %eax,%eax
    29e1:	74 32                	je     2a15 <efi_init+0x25c>
    29e3:	f7 da                	neg    %edx
    29e5:	b9 01 00 00 00       	mov    $0x1,%ecx
    29ea:	48 83 ec 20          	sub    $0x20,%rsp
    29ee:	48 89 d0             	mov    %rdx,%rax
    29f1:	48 c1 e1 3f          	shl    $0x3f,%rcx
    29f5:	83 e2 7f             	and    $0x7f,%edx
    29f8:	48 c1 e0 38          	shl    $0x38,%rax
    29fc:	48 21 c8             	and    %rcx,%rax
    29ff:	48 8b 0d 4a 71 02 00 	mov    0x2714a(%rip),%rcx        # 29b50 <efi_shutdown_event>
    2a06:	48 09 d0             	or     %rdx,%rax
    2a09:	49 89 c4             	mov    %rax,%r12
    2a0c:	ff 53 70             	call   *0x70(%rbx)
    2a0f:	48 83 c4 20          	add    $0x20,%rsp
    2a13:	eb 14                	jmp    2a29 <efi_init+0x270>
    2a15:	48 8b 05 64 75 02 00 	mov    0x27564(%rip),%rax        # 29f80 <efi_loaded_image>
    2a1c:	48 8d 3d 00 fd ff ff 	lea    -0x300(%rip),%rdi        # 2723 <efi_unload>
    2a23:	48 89 78 58          	mov    %rdi,0x58(%rax)
    2a27:	eb 12                	jmp    2a3b <efi_init+0x282>
    2a29:	48 83 ec 20          	sub    $0x20,%rsp
    2a2d:	48 8b 0d 5c 75 02 00 	mov    0x2755c(%rip),%rcx        # 29f90 <efi_loaded_image_path>
    2a34:	ff 53 48             	call   *0x48(%rbx)
    2a37:	48 83 c4 20          	add    $0x20,%rsp
    2a3b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2a40:	48 2b 05 29 75 02 00 	sub    0x27529(%rip),%rax        # 29f70 <__stack_chk_guard>
    2a47:	74 05                	je     2a4e <efi_init+0x295>
    2a49:	e8 12 00 00 00       	call   2a60 <__stack_chk_fail>
    2a4e:	48 83 c4 38          	add    $0x38,%rsp
    2a52:	4c 89 e0             	mov    %r12,%rax
    2a55:	5b                   	pop    %rbx
    2a56:	5d                   	pop    %rbp
    2a57:	41 5c                	pop    %r12
    2a59:	41 5d                	pop    %r13
    2a5b:	41 5e                	pop    %r14
    2a5d:	41 5f                	pop    %r15
    2a5f:	c3                   	ret    

0000000000002a60 <__stack_chk_fail>:
    2a60:	f3 0f 1e fa          	endbr64 
    2a64:	50                   	push   %rax
    2a65:	58                   	pop    %rax
    2a66:	50                   	push   %rax
    2a67:	48 8b 05 da 70 02 00 	mov    0x270da(%rip),%rax        # 29b48 <efi_exit>
    2a6e:	48 85 c0             	test   %rax,%rax
    2a71:	74 21                	je     2a94 <__stack_chk_fail+0x34>
    2a73:	48 83 ec 20          	sub    $0x20,%rsp
    2a77:	48 8b 0d 0a 75 02 00 	mov    0x2750a(%rip),%rcx        # 29f88 <efi_image_handle>
    2a7e:	45 31 c9             	xor    %r9d,%r9d
    2a81:	45 31 c0             	xor    %r8d,%r8d
    2a84:	48 ba 21 00 00 00 00 	movabs $0x8000000000000021,%rdx
    2a8b:	00 00 80 
    2a8e:	ff d0                	call   *%rax
    2a90:	48 83 c4 20          	add    $0x20,%rsp
    2a94:	eb fe                	jmp    2a94 <__stack_chk_fail+0x34>

0000000000002a96 <efi_local_check_volume_name>:
    2a96:	f3 0f 1e fa          	endbr64 
    2a9a:	41 56                	push   %r14
    2a9c:	4c 8d 35 4d 1c 02 00 	lea    0x21c4d(%rip),%r14        # 246f0 <efi_file_system_info_id>
    2aa3:	45 31 c9             	xor    %r9d,%r9d
    2aa6:	41 55                	push   %r13
    2aa8:	49 89 cd             	mov    %rcx,%r13
    2aab:	41 54                	push   %r12
    2aad:	49 89 d4             	mov    %rdx,%r12
    2ab0:	4c 89 f2             	mov    %r14,%rdx
    2ab3:	55                   	push   %rbp
    2ab4:	4c 89 e1             	mov    %r12,%rcx
    2ab7:	48 83 ec 38          	sub    $0x38,%rsp
    2abb:	48 8b 05 ae 74 02 00 	mov    0x274ae(%rip),%rax        # 29f70 <__stack_chk_guard>
    2ac2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2ac7:	31 c0                	xor    %eax,%eax
    2ac9:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
    2ace:	48 83 ec 20          	sub    $0x20,%rsp
    2ad2:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    2ad9:	00 00 
    2adb:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    2ae0:	41 ff 54 24 40       	call   *0x40(%r12)
    2ae5:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    2aea:	48 83 c4 20          	add    $0x20,%rsp
    2aee:	e8 4e 9b 00 00       	call   c641 <malloc>
    2af3:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    2af8:	48 85 c0             	test   %rax,%rax
    2afb:	75 0b                	jne    2b08 <efi_local_check_volume_name+0x72>
    2afd:	41 bc 77 1f b2 ce    	mov    $0xceb21f77,%r12d
    2b03:	e9 88 00 00 00       	jmp    2b90 <efi_local_check_volume_name+0xfa>
    2b08:	48 83 ec 20          	sub    $0x20,%rsp
    2b0c:	48 89 c5             	mov    %rax,%rbp
    2b0f:	49 89 c1             	mov    %rax,%r9
    2b12:	4c 89 f2             	mov    %r14,%rdx
    2b15:	4c 89 e1             	mov    %r12,%rcx
    2b18:	41 ff 54 24 40       	call   *0x40(%r12)
    2b1d:	48 83 c4 20          	add    $0x20,%rsp
    2b21:	48 85 c0             	test   %rax,%rax
    2b24:	74 1a                	je     2b40 <efi_local_check_volume_name+0xaa>
    2b26:	49 89 c4             	mov    %rax,%r12
    2b29:	49 c1 ec 38          	shr    $0x38,%r12
    2b2d:	41 09 c4             	or     %eax,%r12d
    2b30:	45 0f b6 e4          	movzbl %r12b,%r12d
    2b34:	41 81 cc 00 e0 4d 7f 	or     $0x7f4de000,%r12d
    2b3b:	41 f7 dc             	neg    %r12d
    2b3e:	eb 48                	jmp    2b88 <efi_local_check_volume_name+0xf2>
    2b40:	31 c0                	xor    %eax,%eax
    2b42:	48 8d 55 24          	lea    0x24(%rbp),%rdx
    2b46:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    2b4b:	48 8d 35 7d fc 01 00 	lea    0x1fc7d(%rip),%rsi        # 227cf <.LC0>
    2b52:	e8 4c 55 01 00       	call   180a3 <asprintf>
    2b57:	85 c0                	test   %eax,%eax
    2b59:	79 08                	jns    2b63 <efi_local_check_volume_name+0xcd>
    2b5b:	41 bc 77 1f b2 ce    	mov    $0xceb21f77,%r12d
    2b61:	eb 25                	jmp    2b88 <efi_local_check_volume_name+0xf2>
    2b63:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    2b68:	4c 89 ef             	mov    %r13,%rdi
    2b6b:	4c 89 f6             	mov    %r14,%rsi
    2b6e:	e8 7a 0d 01 00       	call   138ed <strcasecmp>
    2b73:	41 89 c4             	mov    %eax,%r12d
    2b76:	85 c0                	test   %eax,%eax
    2b78:	74 06                	je     2b80 <efi_local_check_volume_name+0xea>
    2b7a:	41 bc 72 1f b2 d2    	mov    $0xd2b21f72,%r12d
    2b80:	4c 89 f7             	mov    %r14,%rdi
    2b83:	e8 c7 9a 00 00       	call   c64f <free>
    2b88:	48 89 ef             	mov    %rbp,%rdi
    2b8b:	e8 bf 9a 00 00       	call   c64f <free>
    2b90:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    2b95:	48 2b 05 d4 73 02 00 	sub    0x273d4(%rip),%rax        # 29f70 <__stack_chk_guard>
    2b9c:	74 05                	je     2ba3 <efi_local_check_volume_name+0x10d>
    2b9e:	e8 bd fe ff ff       	call   2a60 <__stack_chk_fail>
    2ba3:	48 83 c4 38          	add    $0x38,%rsp
    2ba7:	44 89 e0             	mov    %r12d,%eax
    2baa:	5d                   	pop    %rbp
    2bab:	41 5c                	pop    %r12
    2bad:	41 5d                	pop    %r13
    2baf:	41 5e                	pop    %r14
    2bb1:	c3                   	ret    

0000000000002bb2 <efi_local_close>:
    2bb2:	f3 0f 1e fa          	endbr64 
    2bb6:	53                   	push   %rbx
    2bb7:	48 89 fb             	mov    %rdi,%rbx
    2bba:	48 83 c7 30          	add    $0x30,%rdi
    2bbe:	48 83 ec 10          	sub    $0x10,%rsp
    2bc2:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    2bc6:	e8 b9 cd 00 00       	call   f984 <process_del>
    2bcb:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    2bcf:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    2bd3:	e8 f7 6c 00 00       	call   98cf <intf_shutdown>
    2bd8:	48 8b 43 58          	mov    0x58(%rbx),%rax
    2bdc:	48 85 c0             	test   %rax,%rax
    2bdf:	74 16                	je     2bf7 <efi_local_close+0x45>
    2be1:	48 83 ec 20          	sub    $0x20,%rsp
    2be5:	48 89 c1             	mov    %rax,%rcx
    2be8:	ff 50 10             	call   *0x10(%rax)
    2beb:	48 c7 43 58 00 00 00 	movq   $0x0,0x58(%rbx)
    2bf2:	00 
    2bf3:	48 83 c4 20          	add    $0x20,%rsp
    2bf7:	48 8b 43 50          	mov    0x50(%rbx),%rax
    2bfb:	48 85 c0             	test   %rax,%rax
    2bfe:	74 16                	je     2c16 <efi_local_close+0x64>
    2c00:	48 83 ec 20          	sub    $0x20,%rsp
    2c04:	48 89 c1             	mov    %rax,%rcx
    2c07:	ff 50 10             	call   *0x10(%rax)
    2c0a:	48 c7 43 50 00 00 00 	movq   $0x0,0x50(%rbx)
    2c11:	00 
    2c12:	48 83 c4 20          	add    $0x20,%rsp
    2c16:	48 83 c4 10          	add    $0x10,%rsp
    2c1a:	5b                   	pop    %rbx
    2c1b:	c3                   	ret    

0000000000002c1c <efi_local_step>:
    2c1c:	f3 0f 1e fa          	endbr64 
    2c20:	41 57                	push   %r15
    2c22:	41 56                	push   %r14
    2c24:	41 55                	push   %r13
    2c26:	4c 8d 6f 10          	lea    0x10(%rdi),%r13
    2c2a:	41 54                	push   %r12
    2c2c:	55                   	push   %rbp
    2c2d:	48 89 fd             	mov    %rdi,%rbp
    2c30:	53                   	push   %rbx
    2c31:	48 83 ec 28          	sub    $0x28,%rsp
    2c35:	4c 8b 77 58          	mov    0x58(%rdi),%r14
    2c39:	4c 89 ef             	mov    %r13,%rdi
    2c3c:	48 8b 05 2d 73 02 00 	mov    0x2732d(%rip),%rax        # 29f70 <__stack_chk_guard>
    2c43:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2c48:	31 c0                	xor    %eax,%eax
    2c4a:	e8 e9 47 01 00       	call   17438 <xfer_window>
    2c4f:	48 85 c0             	test   %rax,%rax
    2c52:	0f 84 cc 00 00 00    	je     2d24 <efi_local_step+0x108>
    2c58:	48 8b 5d 60          	mov    0x60(%rbp),%rbx
    2c5c:	4c 89 ef             	mov    %r13,%rdi
    2c5f:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    2c64:	48 89 de             	mov    %rbx,%rsi
    2c67:	e8 2a 4b 01 00       	call   17796 <xfer_seek>
    2c6c:	31 f6                	xor    %esi,%esi
    2c6e:	4c 89 ef             	mov    %r13,%rdi
    2c71:	e8 20 4b 01 00       	call   17796 <xfer_seek>
    2c76:	48 85 db             	test   %rbx,%rbx
    2c79:	0f 84 8a 00 00 00    	je     2d09 <efi_local_step+0xed>
    2c7f:	41 bc 00 10 00 00    	mov    $0x1000,%r12d
    2c85:	4c 89 ef             	mov    %r13,%rdi
    2c88:	4c 39 e3             	cmp    %r12,%rbx
    2c8b:	4c 0f 46 e3          	cmovbe %rbx,%r12
    2c8f:	4c 89 e6             	mov    %r12,%rsi
    2c92:	e8 04 49 01 00       	call   1759b <xfer_alloc_iob>
    2c97:	48 89 c7             	mov    %rax,%rdi
    2c9a:	48 85 c0             	test   %rax,%rax
    2c9d:	75 07                	jne    2ca6 <efi_local_step+0x8a>
    2c9f:	be 77 1f b2 ce       	mov    $0xceb21f77,%esi
    2ca4:	eb 69                	jmp    2d0f <efi_local_step+0xf3>
    2ca6:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    2cab:	48 83 ec 20          	sub    $0x20,%rsp
    2caf:	4c 8b 40 18          	mov    0x18(%rax),%r8
    2cb3:	4c 89 fa             	mov    %r15,%rdx
    2cb6:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    2cbb:	4c 89 f1             	mov    %r14,%rcx
    2cbe:	41 ff 56 20          	call   *0x20(%r14)
    2cc2:	48 83 c4 20          	add    $0x20,%rsp
    2cc6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    2ccb:	48 85 c0             	test   %rax,%rax
    2cce:	74 17                	je     2ce7 <efi_local_step+0xcb>
    2cd0:	48 89 c6             	mov    %rax,%rsi
    2cd3:	48 c1 ee 38          	shr    $0x38,%rsi
    2cd7:	09 c6                	or     %eax,%esi
    2cd9:	40 0f b6 f6          	movzbl %sil,%esi
    2cdd:	81 ce 00 e0 4d 7f    	or     $0x7f4de000,%esi
    2ce3:	f7 de                	neg    %esi
    2ce5:	eb 28                	jmp    2d0f <efi_local_step+0xf3>
    2ce7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2cec:	48 01 47 20          	add    %rax,0x20(%rdi)
    2cf0:	48 89 fe             	mov    %rdi,%rsi
    2cf3:	4c 89 ef             	mov    %r13,%rdi
    2cf6:	e8 0b 4a 01 00       	call   17706 <xfer_deliver_iob>
    2cfb:	89 c6                	mov    %eax,%esi
    2cfd:	85 c0                	test   %eax,%eax
    2cff:	75 0c                	jne    2d0d <efi_local_step+0xf1>
    2d01:	4c 29 e3             	sub    %r12,%rbx
    2d04:	e9 6d ff ff ff       	jmp    2c76 <efi_local_step+0x5a>
    2d09:	31 f6                	xor    %esi,%esi
    2d0b:	eb 0f                	jmp    2d1c <efi_local_step+0x100>
    2d0d:	31 ff                	xor    %edi,%edi
    2d0f:	89 74 24 08          	mov    %esi,0x8(%rsp)
    2d13:	e8 7e 6f 00 00       	call   9c96 <free_iob>
    2d18:	8b 74 24 08          	mov    0x8(%rsp),%esi
    2d1c:	48 89 ef             	mov    %rbp,%rdi
    2d1f:	e8 8e fe ff ff       	call   2bb2 <efi_local_close>
    2d24:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2d29:	48 2b 05 40 72 02 00 	sub    0x27240(%rip),%rax        # 29f70 <__stack_chk_guard>
    2d30:	74 05                	je     2d37 <efi_local_step+0x11b>
    2d32:	e8 29 fd ff ff       	call   2a60 <__stack_chk_fail>
    2d37:	48 83 c4 28          	add    $0x28,%rsp
    2d3b:	5b                   	pop    %rbx
    2d3c:	5d                   	pop    %rbp
    2d3d:	41 5c                	pop    %r12
    2d3f:	41 5d                	pop    %r13
    2d41:	41 5e                	pop    %r14
    2d43:	41 5f                	pop    %r15
    2d45:	c3                   	ret    

0000000000002d46 <efi_local_open>:
    2d46:	f3 0f 1e fa          	endbr64 
    2d4a:	55                   	push   %rbp
    2d4b:	48 89 e5             	mov    %rsp,%rbp
    2d4e:	41 57                	push   %r15
    2d50:	41 56                	push   %r14
    2d52:	41 55                	push   %r13
    2d54:	41 54                	push   %r12
    2d56:	53                   	push   %rbx
    2d57:	48 83 ec 78          	sub    $0x78,%rsp
    2d5b:	48 8b 5e 30          	mov    0x30(%rsi),%rbx
    2d5f:	48 89 bd 70 ff ff ff 	mov    %rdi,-0x90(%rbp)
    2d66:	48 8b 05 03 72 02 00 	mov    0x27203(%rip),%rax        # 29f70 <__stack_chk_guard>
    2d6d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2d71:	31 c0                	xor    %eax,%eax
    2d73:	48 85 db             	test   %rbx,%rbx
    2d76:	74 07                	je     2d7f <efi_local_open+0x39>
    2d78:	80 3b 00             	cmpb   $0x0,(%rbx)
    2d7b:	75 02                	jne    2d7f <efi_local_open+0x39>
    2d7d:	31 db                	xor    %ebx,%ebx
    2d7f:	48 8b 46 18          	mov    0x18(%rsi),%rax
    2d83:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    2d87:	48 85 c0             	test   %rax,%rax
    2d8a:	75 08                	jne    2d94 <efi_local_open+0x4e>
    2d8c:	48 8b 46 40          	mov    0x40(%rsi),%rax
    2d90:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    2d94:	bf 68 00 00 00       	mov    $0x68,%edi
    2d99:	e8 bc 98 00 00       	call   c65a <zalloc>
    2d9e:	49 89 c4             	mov    %rax,%r12
    2da1:	48 85 c0             	test   %rax,%rax
    2da4:	75 0b                	jne    2db1 <efi_local_open+0x6b>
    2da6:	41 bd 77 1f b2 ce    	mov    $0xceb21f77,%r13d
    2dac:	e9 d7 04 00 00       	jmp    3288 <efi_local_open+0x542>
    2db1:	48 8d 05 28 36 02 00 	lea    0x23628(%rip),%rax        # 263e0 <null_intf>
    2db8:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    2dbd:	4d 89 64 24 18       	mov    %r12,0x18(%r12)
    2dc2:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    2dc7:	48 8d 05 d2 1f 02 00 	lea    0x21fd2(%rip),%rax        # 24da0 <efi_local_xfer_desc>
    2dce:	4c 8d 35 4b 1a 02 00 	lea    0x21a4b(%rip),%r14        # 24820 <efi_simple_file_system_protocol_guid>
    2dd5:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    2dda:	49 89 44 24 28       	mov    %rax,0x28(%r12)
    2ddf:	48 8d 05 9a 1f 02 00 	lea    0x21f9a(%rip),%rax        # 24d80 <efi_local_process_desc>
    2de6:	49 89 44 24 40       	mov    %rax,0x40(%r12)
    2deb:	49 89 7c 24 30       	mov    %rdi,0x30(%r12)
    2df0:	49 89 7c 24 38       	mov    %rdi,0x38(%r12)
    2df5:	4d 89 64 24 48       	mov    %r12,0x48(%r12)
    2dfa:	e8 32 cb 00 00       	call   f931 <process_add>
    2dff:	48 8b 05 92 71 02 00 	mov    0x27192(%rip),%rax        # 29f98 <efi_systab>
    2e06:	48 85 db             	test   %rbx,%rbx
    2e09:	48 8b 40 60          	mov    0x60(%rax),%rax
    2e0d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    2e11:	74 35                	je     2e48 <efi_local_open+0x102>
    2e13:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    2e17:	51                   	push   %rcx
    2e18:	4c 8d 4d b8          	lea    -0x48(%rbp),%r9
    2e1c:	45 31 c0             	xor    %r8d,%r8d
    2e1f:	50                   	push   %rax
    2e20:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2e24:	4c 89 f2             	mov    %r14,%rdx
    2e27:	b9 02 00 00 00       	mov    $0x2,%ecx
    2e2c:	4c 8d 3d 63 fc ff ff 	lea    -0x39d(%rip),%r15        # 2a96 <efi_local_check_volume_name>
    2e33:	48 83 ec 20          	sub    $0x20,%rsp
    2e37:	ff 90 38 01 00 00    	call   *0x138(%rax)
    2e3d:	48 83 c4 30          	add    $0x30,%rsp
    2e41:	48 85 c0             	test   %rax,%rax
    2e44:	74 5e                	je     2ea4 <efi_local_open+0x15e>
    2e46:	eb 30                	jmp    2e78 <efi_local_open+0x132>
    2e48:	4c 8d 6d b0          	lea    -0x50(%rbp),%r13
    2e4c:	48 83 ec 20          	sub    $0x20,%rsp
    2e50:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    2e54:	4c 89 f1             	mov    %r14,%rcx
    2e57:	48 8b 05 32 71 02 00 	mov    0x27132(%rip),%rax        # 29f90 <efi_loaded_image_path>
    2e5e:	4d 89 e8             	mov    %r13,%r8
    2e61:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    2e65:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2e69:	ff 90 b8 00 00 00    	call   *0xb8(%rax)
    2e6f:	48 83 c4 20          	add    $0x20,%rsp
    2e73:	48 85 c0             	test   %rax,%rax
    2e76:	74 1d                	je     2e95 <efi_local_open+0x14f>
    2e78:	49 89 c5             	mov    %rax,%r13
    2e7b:	49 c1 ed 38          	shr    $0x38,%r13
    2e7f:	41 09 c5             	or     %eax,%r13d
    2e82:	45 0f b6 ed          	movzbl %r13b,%r13d
    2e86:	41 81 cd 00 e0 4d 7f 	or     $0x7f4de000,%r13d
    2e8d:	41 f7 dd             	neg    %r13d
    2e90:	e9 e1 03 00 00       	jmp    3276 <efi_local_open+0x530>
    2e95:	4c 89 6d a8          	mov    %r13,-0x58(%rbp)
    2e99:	45 31 ff             	xor    %r15d,%r15d
    2e9c:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    2ea3:	00 
    2ea4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    2ea8:	45 31 ed             	xor    %r13d,%r13d
    2eab:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    2eb2:	4c 3b 6d b8          	cmp    -0x48(%rbp),%r13
    2eb6:	0f 83 17 01 00 00    	jae    2fd3 <efi_local_open+0x28d>
    2ebc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2ec0:	4c 8b 0d c1 70 02 00 	mov    0x270c1(%rip),%r9        # 29f88 <efi_image_handle>
    2ec7:	4c 89 f2             	mov    %r14,%rdx
    2eca:	4c 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%r8
    2ed1:	4e 8b 14 e8          	mov    (%rax,%r13,8),%r10
    2ed5:	48 8b 05 bc 70 02 00 	mov    0x270bc(%rip),%rax        # 29f98 <efi_systab>
    2edc:	48 8b 40 60          	mov    0x60(%rax),%rax
    2ee0:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    2ee4:	4c 89 d1             	mov    %r10,%rcx
    2ee7:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    2eee:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    2ef5:	6a 02                	push   $0x2
    2ef7:	41 52                	push   %r10
    2ef9:	4c 89 95 60 ff ff ff 	mov    %r10,-0xa0(%rbp)
    2f00:	48 83 ec 20          	sub    $0x20,%rsp
    2f04:	ff 90 18 01 00 00    	call   *0x118(%rax)
    2f0a:	48 83 c4 30          	add    $0x30,%rsp
    2f0e:	4c 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%r10
    2f15:	48 85 c0             	test   %rax,%rax
    2f18:	74 05                	je     2f1f <efi_local_open+0x1d9>
    2f1a:	e9 ac 00 00 00       	jmp    2fcb <efi_local_open+0x285>
    2f1f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2f23:	48 83 ec 20          	sub    $0x20,%rsp
    2f27:	4c 89 95 60 ff ff ff 	mov    %r10,-0xa0(%rbp)
    2f2e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    2f32:	48 89 c1             	mov    %rax,%rcx
    2f35:	ff 50 08             	call   *0x8(%rax)
    2f38:	48 83 c4 20          	add    $0x20,%rsp
    2f3c:	31 f6                	xor    %esi,%esi
    2f3e:	4c 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%r10
    2f45:	48 85 c0             	test   %rax,%rax
    2f48:	74 15                	je     2f5f <efi_local_open+0x219>
    2f4a:	48 89 c6             	mov    %rax,%rsi
    2f4d:	48 c1 ee 38          	shr    $0x38,%rsi
    2f51:	09 c6                	or     %eax,%esi
    2f53:	40 0f b6 f6          	movzbl %sil,%esi
    2f57:	81 ce 00 e0 4d 7f    	or     $0x7f4de000,%esi
    2f5d:	f7 de                	neg    %esi
    2f5f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    2f66:	4d 89 d1             	mov    %r10,%r9
    2f69:	4c 89 f2             	mov    %r14,%rdx
    2f6c:	4c 89 d1             	mov    %r10,%rcx
    2f6f:	89 b5 60 ff ff ff    	mov    %esi,-0xa0(%rbp)
    2f75:	48 83 ec 20          	sub    $0x20,%rsp
    2f79:	4c 8b 05 08 70 02 00 	mov    0x27008(%rip),%r8        # 29f88 <efi_image_handle>
    2f80:	ff 90 20 01 00 00    	call   *0x120(%rax)
    2f86:	8b b5 60 ff ff ff    	mov    -0xa0(%rbp),%esi
    2f8c:	48 83 c4 20          	add    $0x20,%rsp
    2f90:	85 f6                	test   %esi,%esi
    2f92:	75 37                	jne    2fcb <efi_local_open+0x285>
    2f94:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    2f98:	4d 85 ff             	test   %r15,%r15
    2f9b:	75 0b                	jne    2fa8 <efi_local_open+0x262>
    2f9d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2fa1:	49 89 44 24 50       	mov    %rax,0x50(%r12)
    2fa6:	eb 2b                	jmp    2fd3 <efi_local_open+0x28d>
    2fa8:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    2fac:	48 89 d9             	mov    %rbx,%rcx
    2faf:	4c 89 e7             	mov    %r12,%rdi
    2fb2:	41 ff d7             	call   *%r15
    2fb5:	85 c0                	test   %eax,%eax
    2fb7:	74 e4                	je     2f9d <efi_local_open+0x257>
    2fb9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    2fbd:	48 83 ec 20          	sub    $0x20,%rsp
    2fc1:	48 89 c1             	mov    %rax,%rcx
    2fc4:	ff 50 10             	call   *0x10(%rax)
    2fc7:	48 83 c4 20          	add    $0x20,%rsp
    2fcb:	49 ff c5             	inc    %r13
    2fce:	e9 df fe ff ff       	jmp    2eb2 <efi_local_open+0x16c>
    2fd3:	48 85 db             	test   %rbx,%rbx
    2fd6:	74 13                	je     2feb <efi_local_open+0x2a5>
    2fd8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2fdc:	48 83 ec 20          	sub    $0x20,%rsp
    2fe0:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    2fe4:	ff 50 48             	call   *0x48(%rax)
    2fe7:	48 83 c4 20          	add    $0x20,%rsp
    2feb:	49 83 7c 24 50 00    	cmpq   $0x0,0x50(%r12)
    2ff1:	74 22                	je     3015 <efi_local_open+0x2cf>
    2ff3:	48 8b 05 86 6f 02 00 	mov    0x26f86(%rip),%rax        # 29f80 <efi_loaded_image>
    2ffa:	49 89 e6             	mov    %rsp,%r14
    2ffd:	31 db                	xor    %ebx,%ebx
    2fff:	4c 8b 68 20          	mov    0x20(%rax),%r13
    3003:	4d 85 ed             	test   %r13,%r13
    3006:	74 18                	je     3020 <efi_local_open+0x2da>
    3008:	4c 89 ef             	mov    %r13,%rdi
    300b:	e8 aa 39 00 00       	call   69ba <efi_devpath_len>
    3010:	48 89 c3             	mov    %rax,%rbx
    3013:	eb 0b                	jmp    3020 <efi_local_open+0x2da>
    3015:	41 bd 72 1f b2 d2    	mov    $0xd2b21f72,%r13d
    301b:	e9 56 02 00 00       	jmp    3276 <efi_local_open+0x530>
    3020:	48 d1 eb             	shr    %rbx
    3023:	48 89 e1             	mov    %rsp,%rcx
    3026:	48 8d 53 0f          	lea    0xf(%rbx),%rdx
    302a:	48 89 d0             	mov    %rdx,%rax
    302d:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    3034:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    3038:	48 29 d1             	sub    %rdx,%rcx
    303b:	48 39 cc             	cmp    %rcx,%rsp
    303e:	74 12                	je     3052 <efi_local_open+0x30c>
    3040:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    3047:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    304e:	00 00 
    3050:	eb e9                	jmp    303b <efi_local_open+0x2f5>
    3052:	25 ff 0f 00 00       	and    $0xfff,%eax
    3057:	48 29 c4             	sub    %rax,%rsp
    305a:	48 85 c0             	test   %rax,%rax
    305d:	74 06                	je     3065 <efi_local_open+0x31f>
    305f:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    3065:	49 89 e7             	mov    %rsp,%r15
    3068:	48 89 e7             	mov    %rsp,%rdi
    306b:	48 89 d9             	mov    %rbx,%rcx
    306e:	31 c0                	xor    %eax,%eax
    3070:	f3 aa                	rep stos %al,%es:(%rdi)
    3072:	48 89 e7             	mov    %rsp,%rdi
    3075:	48 8d 15 53 f7 01 00 	lea    0x1f753(%rip),%rdx        # 227cf <.LC0>
    307c:	4d 85 ed             	test   %r13,%r13
    307f:	74 2f                	je     30b0 <efi_local_open+0x36a>
    3081:	41 80 7d 00 7f       	cmpb   $0x7f,0x0(%r13)
    3086:	74 28                	je     30b0 <efi_local_open+0x36a>
    3088:	49 8d 4d 04          	lea    0x4(%r13),%rcx
    308c:	48 89 de             	mov    %rbx,%rsi
    308f:	31 c0                	xor    %eax,%eax
    3091:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
    3095:	e8 e7 3f 01 00       	call   17081 <snprintf>
    309a:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    309e:	48 98                	cltq   
    30a0:	48 01 c7             	add    %rax,%rdi
    30a3:	48 29 c3             	sub    %rax,%rbx
    30a6:	41 0f b7 45 02       	movzwl 0x2(%r13),%eax
    30ab:	49 01 c5             	add    %rax,%r13
    30ae:	eb c5                	jmp    3075 <efi_local_open+0x32f>
    30b0:	4c 89 f8             	mov    %r15,%rax
    30b3:	8a 10                	mov    (%rax),%dl
    30b5:	84 d2                	test   %dl,%dl
    30b7:	74 0d                	je     30c6 <efi_local_open+0x380>
    30b9:	80 fa 5c             	cmp    $0x5c,%dl
    30bc:	75 03                	jne    30c1 <efi_local_open+0x37b>
    30be:	c6 00 2f             	movb   $0x2f,(%rax)
    30c1:	48 ff c0             	inc    %rax
    30c4:	eb ed                	jmp    30b3 <efi_local_open+0x36d>
    30c6:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    30ca:	4c 89 ff             	mov    %r15,%rdi
    30cd:	e8 49 37 01 00       	call   1681b <resolve_path>
    30d2:	49 89 c7             	mov    %rax,%r15
    30d5:	48 85 c0             	test   %rax,%rax
    30d8:	75 13                	jne    30ed <efi_local_open+0x3a7>
    30da:	4c 89 f4             	mov    %r14,%rsp
    30dd:	e9 2f 01 00 00       	jmp    3211 <efi_local_open+0x4cb>
    30e2:	80 fa 2f             	cmp    $0x2f,%dl
    30e5:	75 03                	jne    30ea <efi_local_open+0x3a4>
    30e7:	c6 00 5c             	movb   $0x5c,(%rax)
    30ea:	48 ff c0             	inc    %rax
    30ed:	8a 10                	mov    (%rax),%dl
    30ef:	84 d2                	test   %dl,%dl
    30f1:	75 ef                	jne    30e2 <efi_local_open+0x39c>
    30f3:	4c 89 ff             	mov    %r15,%rdi
    30f6:	48 89 65 88          	mov    %rsp,-0x78(%rbp)
    30fa:	e8 3b 08 01 00       	call   1393a <strlen>
    30ff:	48 89 e1             	mov    %rsp,%rcx
    3102:	48 8d 70 01          	lea    0x1(%rax),%rsi
    3106:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
    310a:	48 83 c0 0f          	add    $0xf,%rax
    310e:	48 89 c2             	mov    %rax,%rdx
    3111:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    3117:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
    311b:	48 29 c1             	sub    %rax,%rcx
    311e:	48 39 cc             	cmp    %rcx,%rsp
    3121:	74 12                	je     3135 <efi_local_open+0x3ef>
    3123:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    312a:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    3131:	00 00 
    3133:	eb e9                	jmp    311e <efi_local_open+0x3d8>
    3135:	48 89 d0             	mov    %rdx,%rax
    3138:	25 ff 0f 00 00       	and    $0xfff,%eax
    313d:	48 29 c4             	sub    %rax,%rsp
    3140:	48 85 c0             	test   %rax,%rax
    3143:	74 06                	je     314b <efi_local_open+0x405>
    3145:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    314b:	49 89 e0             	mov    %rsp,%r8
    314e:	48 8d 15 cc 04 02 00 	lea    0x204cc(%rip),%rdx        # 23621 <.LC0>
    3155:	4c 89 f9             	mov    %r15,%rcx
    3158:	31 c0                	xor    %eax,%eax
    315a:	4c 89 c7             	mov    %r8,%rdi
    315d:	4c 89 45 80          	mov    %r8,-0x80(%rbp)
    3161:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
    3165:	e8 da 37 00 00       	call   6944 <efi_snprintf>
    316a:	49 8b 44 24 50       	mov    0x50(%r12),%rax
    316f:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    3175:	52                   	push   %rdx
    3176:	48 89 da             	mov    %rbx,%rdx
    3179:	4c 8b 45 80          	mov    -0x80(%rbp),%r8
    317d:	6a 00                	push   $0x0
    317f:	48 89 c1             	mov    %rax,%rcx
    3182:	48 83 ec 20          	sub    $0x20,%rsp
    3186:	ff 50 08             	call   *0x8(%rax)
    3189:	48 83 c4 30          	add    $0x30,%rsp
    318d:	48 85 c0             	test   %rax,%rax
    3190:	74 1a                	je     31ac <efi_local_open+0x466>
    3192:	49 89 c5             	mov    %rax,%r13
    3195:	49 c1 ed 38          	shr    $0x38,%r13
    3199:	41 09 c5             	or     %eax,%r13d
    319c:	45 0f b6 ed          	movzbl %r13b,%r13d
    31a0:	41 81 cd 00 e0 4d 7f 	or     $0x7f4de000,%r13d
    31a7:	41 f7 dd             	neg    %r13d
    31aa:	eb 0c                	jmp    31b8 <efi_local_open+0x472>
    31ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    31b0:	45 31 ed             	xor    %r13d,%r13d
    31b3:	49 89 44 24 58       	mov    %rax,0x58(%r12)
    31b8:	48 8b 65 88          	mov    -0x78(%rbp),%rsp
    31bc:	4c 89 ff             	mov    %r15,%rdi
    31bf:	e8 8b 94 00 00       	call   c64f <free>
    31c4:	4c 89 f4             	mov    %r14,%rsp
    31c7:	45 85 ed             	test   %r13d,%r13d
    31ca:	0f 85 a6 00 00 00    	jne    3276 <efi_local_open+0x530>
    31d0:	4d 8b 7c 24 58       	mov    0x58(%r12),%r15
    31d5:	48 83 ec 20          	sub    $0x20,%rsp
    31d9:	45 31 c9             	xor    %r9d,%r9d
    31dc:	49 89 d8             	mov    %rbx,%r8
    31df:	48 8d 15 1a 15 02 00 	lea    0x2151a(%rip),%rdx        # 24700 <efi_file_info_id>
    31e6:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    31ed:	00 
    31ee:	4c 89 f9             	mov    %r15,%rcx
    31f1:	41 ff 57 40          	call   *0x40(%r15)
    31f5:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    31f9:	48 83 c4 20          	add    $0x20,%rsp
    31fd:	e8 3f 94 00 00       	call   c641 <malloc>
    3202:	48 8d 15 f7 14 02 00 	lea    0x214f7(%rip),%rdx        # 24700 <efi_file_info_id>
    3209:	48 85 c0             	test   %rax,%rax
    320c:	49 89 c6             	mov    %rax,%r14
    320f:	75 08                	jne    3219 <efi_local_open+0x4d3>
    3211:	41 bd 77 1f b2 ce    	mov    $0xceb21f77,%r13d
    3217:	eb 5d                	jmp    3276 <efi_local_open+0x530>
    3219:	48 83 ec 20          	sub    $0x20,%rsp
    321d:	49 89 c1             	mov    %rax,%r9
    3220:	49 89 d8             	mov    %rbx,%r8
    3223:	4c 89 f9             	mov    %r15,%rcx
    3226:	41 ff 57 40          	call   *0x40(%r15)
    322a:	48 83 c4 20          	add    $0x20,%rsp
    322e:	48 85 c0             	test   %rax,%rax
    3231:	74 1a                	je     324d <efi_local_open+0x507>
    3233:	49 89 c5             	mov    %rax,%r13
    3236:	49 c1 ed 38          	shr    $0x38,%r13
    323a:	41 09 c5             	or     %eax,%r13d
    323d:	45 0f b6 ed          	movzbl %r13b,%r13d
    3241:	41 81 cd 00 e0 4d 7f 	or     $0x7f4de000,%r13d
    3248:	41 f7 dd             	neg    %r13d
    324b:	eb 09                	jmp    3256 <efi_local_open+0x510>
    324d:	49 8b 46 08          	mov    0x8(%r14),%rax
    3251:	49 89 44 24 60       	mov    %rax,0x60(%r12)
    3256:	4c 89 f7             	mov    %r14,%rdi
    3259:	e8 f1 93 00 00       	call   c64f <free>
    325e:	45 85 ed             	test   %r13d,%r13d
    3261:	75 13                	jne    3276 <efi_local_open+0x530>
    3263:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
    326a:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    326f:	e8 fd 64 00 00       	call   9771 <intf_plug_plug>
    3274:	eb 0a                	jmp    3280 <efi_local_open+0x53a>
    3276:	31 f6                	xor    %esi,%esi
    3278:	4c 89 e7             	mov    %r12,%rdi
    327b:	e8 32 f9 ff ff       	call   2bb2 <efi_local_close>
    3280:	4c 89 e7             	mov    %r12,%rdi
    3283:	e8 b6 cb 00 00       	call   fe3e <ref_decrement>
    3288:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    328c:	48 2b 05 dd 6c 02 00 	sub    0x26cdd(%rip),%rax        # 29f70 <__stack_chk_guard>
    3293:	74 05                	je     329a <efi_local_open+0x554>
    3295:	e8 c6 f7 ff ff       	call   2a60 <__stack_chk_fail>
    329a:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    329e:	44 89 e8             	mov    %r13d,%eax
    32a1:	5b                   	pop    %rbx
    32a2:	41 5c                	pop    %r12
    32a4:	41 5d                	pop    %r13
    32a6:	41 5e                	pop    %r14
    32a8:	41 5f                	pop    %r15
    32aa:	5d                   	pop    %rbp
    32ab:	c3                   	ret    

00000000000032ac <efi_pxe_buf_realloc>:
    32ac:	f3 0f 1e fa          	endbr64 
    32b0:	b8 7b 1f b5 b9       	mov    $0xb9b51f7b,%eax
    32b5:	c3                   	ret    

00000000000032b6 <efi_pxe_tftp_window>:
    32b6:	f3 0f 1e fa          	endbr64 
    32ba:	48 8b 87 c0 29 00 00 	mov    0x29c0(%rdi),%rax
    32c1:	c3                   	ret    

00000000000032c2 <efi_pxe_arp>:
    32c2:	f3 0f 1e fa          	endbr64 
    32c6:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    32cd:	00 00 80 
    32d0:	c3                   	ret    

00000000000032d1 <efi_pxe_set_parameters>:
    32d1:	f3 0f 1e fa          	endbr64 
    32d5:	48 89 c8             	mov    %rcx,%rax
    32d8:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
    32dd:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    32e2:	48 85 d2             	test   %rdx,%rdx
    32e5:	74 05                	je     32ec <efi_pxe_set_parameters+0x1b>
    32e7:	8a 12                	mov    (%rdx),%dl
    32e9:	88 50 76             	mov    %dl,0x76(%rax)
    32ec:	4d 85 c0             	test   %r8,%r8
    32ef:	74 06                	je     32f7 <efi_pxe_set_parameters+0x26>
    32f1:	41 8a 10             	mov    (%r8),%dl
    32f4:	88 50 77             	mov    %dl,0x77(%rax)
    32f7:	4d 85 c9             	test   %r9,%r9
    32fa:	74 09                	je     3305 <efi_pxe_set_parameters+0x34>
    32fc:	41 8a 11             	mov    (%r9),%dl
    32ff:	88 90 81 00 00 00    	mov    %dl,0x81(%rax)
    3305:	4d 85 d2             	test   %r10,%r10
    3308:	74 09                	je     3313 <efi_pxe_set_parameters+0x42>
    330a:	41 8a 12             	mov    (%r10),%dl
    330d:	88 90 82 00 00 00    	mov    %dl,0x82(%rax)
    3313:	48 85 c9             	test   %rcx,%rcx
    3316:	74 08                	je     3320 <efi_pxe_set_parameters+0x4f>
    3318:	8a 11                	mov    (%rcx),%dl
    331a:	88 90 80 00 00 00    	mov    %dl,0x80(%rax)
    3320:	31 c0                	xor    %eax,%eax
    3322:	c3                   	ret    

0000000000003323 <efi_pxe_set_station_ip>:
    3323:	f3 0f 1e fa          	endbr64 
    3327:	57                   	push   %rdi
    3328:	48 89 c8             	mov    %rcx,%rax
    332b:	56                   	push   %rsi
    332c:	48 85 d2             	test   %rdx,%rdx
    332f:	74 0e                	je     333f <efi_pxe_set_station_ip+0x1c>
    3331:	48 89 d6             	mov    %rdx,%rsi
    3334:	48 8d b9 84 00 00 00 	lea    0x84(%rcx),%rdi
    333b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    333c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    333d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    333e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    333f:	4d 85 c0             	test   %r8,%r8
    3342:	74 0e                	je     3352 <efi_pxe_set_station_ip+0x2f>
    3344:	48 8d b8 94 00 00 00 	lea    0x94(%rax),%rdi
    334b:	4c 89 c6             	mov    %r8,%rsi
    334e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    334f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    3350:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    3351:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    3352:	31 c0                	xor    %eax,%eax
    3354:	5e                   	pop    %rsi
    3355:	5f                   	pop    %rdi
    3356:	c3                   	ret    

0000000000003357 <efi_pxe_ip>:
    3357:	53                   	push   %rbx
    3358:	48 83 ec 10          	sub    $0x10,%rsp
    335c:	48 8b 05 0d 6c 02 00 	mov    0x26c0d(%rip),%rax        # 29f70 <__stack_chk_guard>
    3363:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3368:	31 c0                	xor    %eax,%eax
    336a:	80 bf ab 00 00 00 00 	cmpb   $0x0,0xab(%rdi)
    3371:	74 07                	je     337a <efi_pxe_ip+0x23>
    3373:	b8 7d 1f b5 c3       	mov    $0xc3b51f7d,%eax
    3378:	eb 6a                	jmp    33e4 <efi_pxe_ip+0x8d>
    337a:	48 8b 47 10          	mov    0x10(%rdi),%rax
    337e:	48 89 fb             	mov    %rdi,%rbx
    3381:	48 89 e2             	mov    %rsp,%rdx
    3384:	48 8d 35 a5 5f 02 00 	lea    0x25fa5(%rip),%rsi        # 29330 <ip_setting>
    338b:	48 8d b8 68 01 00 00 	lea    0x168(%rax),%rdi
    3392:	e8 c5 ea 00 00       	call   11e5c <fetch_ipv4_setting>
    3397:	48 8b 43 10          	mov    0x10(%rbx),%rax
    339b:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    33a0:	48 8d 35 b1 5f 02 00 	lea    0x25fb1(%rip),%rsi        # 29358 <netmask_setting>
    33a7:	48 8d b8 68 01 00 00 	lea    0x168(%rax),%rdi
    33ae:	e8 a9 ea 00 00       	call   11e5c <fetch_ipv4_setting>
    33b3:	31 d2                	xor    %edx,%edx
    33b5:	48 8d bb bc 00 00 00 	lea    0xbc(%rbx),%rdi
    33bc:	89 d0                	mov    %edx,%eax
    33be:	ab                   	stos   %eax,%es:(%rdi)
    33bf:	ab                   	stos   %eax,%es:(%rdi)
    33c0:	ab                   	stos   %eax,%es:(%rdi)
    33c1:	ab                   	stos   %eax,%es:(%rdi)
    33c2:	8b 04 24             	mov    (%rsp),%eax
    33c5:	48 8d bb cc 00 00 00 	lea    0xcc(%rbx),%rdi
    33cc:	89 83 bc 00 00 00    	mov    %eax,0xbc(%rbx)
    33d2:	89 d0                	mov    %edx,%eax
    33d4:	ab                   	stos   %eax,%es:(%rdi)
    33d5:	ab                   	stos   %eax,%es:(%rdi)
    33d6:	ab                   	stos   %eax,%es:(%rdi)
    33d7:	ab                   	stos   %eax,%es:(%rdi)
    33d8:	8b 44 24 04          	mov    0x4(%rsp),%eax
    33dc:	89 83 cc 00 00 00    	mov    %eax,0xcc(%rbx)
    33e2:	31 c0                	xor    %eax,%eax
    33e4:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    33e9:	48 2b 15 80 6b 02 00 	sub    0x26b80(%rip),%rdx        # 29f70 <__stack_chk_guard>
    33f0:	74 05                	je     33f7 <efi_pxe_ip+0xa0>
    33f2:	e8 69 f6 ff ff       	call   2a60 <__stack_chk_fail>
    33f7:	48 83 c4 10          	add    $0x10,%rsp
    33fb:	5b                   	pop    %rbx
    33fc:	c3                   	ret    

00000000000033fd <efi_pxe_tftp_close>:
    33fd:	f3 0f 1e fa          	endbr64 
    3401:	55                   	push   %rbp
    3402:	89 f5                	mov    %esi,%ebp
    3404:	53                   	push   %rbx
    3405:	48 89 fb             	mov    %rdi,%rbx
    3408:	48 8d bf a0 29 00 00 	lea    0x29a0(%rdi),%rdi
    340f:	50                   	push   %rax
    3410:	e8 33 64 00 00       	call   9848 <intf_restart>
    3415:	89 ab c8 29 00 00    	mov    %ebp,0x29c8(%rbx)
    341b:	5a                   	pop    %rdx
    341c:	5b                   	pop    %rbx
    341d:	5d                   	pop    %rbp
    341e:	c3                   	ret    

000000000000341f <efi_pxe_tftp_deliver>:
    341f:	f3 0f 1e fa          	endbr64 
    3423:	55                   	push   %rbp
    3424:	48 89 fd             	mov    %rdi,%rbp
    3427:	48 81 c7 80 29 00 00 	add    $0x2980,%rdi
    342e:	48 83 ec 10          	sub    $0x10,%rsp
    3432:	e8 7b 45 01 00       	call   179b2 <xferbuf_deliver>
    3437:	85 c0                	test   %eax,%eax
    3439:	74 12                	je     344d <efi_pxe_tftp_deliver+0x2e>
    343b:	89 c6                	mov    %eax,%esi
    343d:	48 89 ef             	mov    %rbp,%rdi
    3440:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3444:	e8 b4 ff ff ff       	call   33fd <efi_pxe_tftp_close>
    3449:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    344d:	48 83 c4 10          	add    $0x10,%rsp
    3451:	5d                   	pop    %rbp
    3452:	c3                   	ret    

0000000000003453 <efi_pxe_free>:
    3453:	f3 0f 1e fa          	endbr64 
    3457:	55                   	push   %rbp
    3458:	48 89 fd             	mov    %rdi,%rbp
    345b:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    345f:	e8 da c9 00 00       	call   fe3e <ref_decrement>
    3464:	48 89 ef             	mov    %rbp,%rdi
    3467:	5d                   	pop    %rbp
    3468:	e9 e2 91 00 00       	jmp    c64f <free>

000000000000346d <efi_pxe_ip_sockaddr>:
    346d:	55                   	push   %rbp
    346e:	48 89 fd             	mov    %rdi,%rbp
    3471:	b9 20 00 00 00       	mov    $0x20,%ecx
    3476:	48 89 d7             	mov    %rdx,%rdi
    3479:	53                   	push   %rbx
    347a:	48 89 d3             	mov    %rdx,%rbx
    347d:	50                   	push   %rax
    347e:	31 c0                	xor    %eax,%eax
    3480:	f3 aa                	rep stos %al,%es:(%rdi)
    3482:	48 8b 85 70 29 00 00 	mov    0x2970(%rbp),%rax
    3489:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    348d:	8b 40 08             	mov    0x8(%rax),%eax
    3490:	66 89 02             	mov    %ax,(%rdx)
    3493:	48 8b 85 78 29 00 00 	mov    0x2978(%rbp),%rax
    349a:	0f b6 50 1a          	movzbl 0x1a(%rax),%edx
    349e:	e8 6a 3e 01 00       	call   1730d <__memcpy>
    34a3:	48 8b 45 10          	mov    0x10(%rbp),%rax
    34a7:	8b 40 30             	mov    0x30(%rax),%eax
    34aa:	66 89 43 06          	mov    %ax,0x6(%rbx)
    34ae:	5a                   	pop    %rdx
    34af:	5b                   	pop    %rbx
    34b0:	5d                   	pop    %rbp
    34b1:	c3                   	ret    

00000000000034b2 <efi_pxe_mtftp>:
    34b2:	f3 0f 1e fa          	endbr64 
    34b6:	41 57                	push   %r15
    34b8:	83 e2 fb             	and    $0xfffffffb,%edx
    34bb:	41 56                	push   %r14
    34bd:	41 55                	push   %r13
    34bf:	41 54                	push   %r12
    34c1:	55                   	push   %rbp
    34c2:	48 89 cd             	mov    %rcx,%rbp
    34c5:	57                   	push   %rdi
    34c6:	56                   	push   %rsi
    34c7:	53                   	push   %rbx
    34c8:	48 83 ec 48          	sub    $0x48,%rsp
    34cc:	48 8b 0d 9d 6a 02 00 	mov    0x26a9d(%rip),%rcx        # 29f70 <__stack_chk_guard>
    34d3:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    34d8:	31 c9                	xor    %ecx,%ecx
    34da:	4c 8b b4 24 b0 00 00 	mov    0xb0(%rsp),%r14
    34e1:	00 
    34e2:	4c 8b ac 24 b8 00 00 	mov    0xb8(%rsp),%r13
    34e9:	00 
    34ea:	4c 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%r15
    34f1:	00 
    34f2:	4c 8b a4 24 c8 00 00 	mov    0xc8(%rsp),%r12
    34f9:	00 
    34fa:	8b 84 24 d8 00 00 00 	mov    0xd8(%rsp),%eax
    3501:	83 fa 02             	cmp    $0x2,%edx
    3504:	74 0a                	je     3510 <efi_pxe_mtftp+0x5e>
    3506:	bb 7d 1f b5 c3       	mov    $0xc3b51f7d,%ebx
    350b:	e9 bf 00 00 00       	jmp    35cf <efi_pxe_mtftp+0x11d>
    3510:	bf 01 00 00 00       	mov    $0x1,%edi
    3515:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3519:	4c 89 c3             	mov    %r8,%rbx
    351c:	e8 b6 24 00 00       	call   59d7 <efi_snp_add_claim>
    3521:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3525:	84 c0                	test   %al,%al
    3527:	74 0b                	je     3534 <efi_pxe_mtftp+0x82>
    3529:	4d 85 ed             	test   %r13,%r13
    352c:	74 06                	je     3534 <efi_pxe_mtftp+0x82>
    352e:	49 8b 45 00          	mov    0x0(%r13),%rax
    3532:	eb 04                	jmp    3538 <efi_pxe_mtftp+0x86>
    3534:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
    3538:	48 89 85 88 29 00 00 	mov    %rax,0x2988(%rbp)
    353f:	49 8b 06             	mov    (%r14),%rax
    3542:	4c 8d 6d c8          	lea    -0x38(%rbp),%r13
    3546:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
    354b:	48 89 9d 48 29 00 00 	mov    %rbx,0x2948(%rbp)
    3552:	4c 89 f2             	mov    %r14,%rdx
    3555:	4c 89 fe             	mov    %r15,%rsi
    3558:	4c 89 ef             	mov    %r13,%rdi
    355b:	48 89 85 50 29 00 00 	mov    %rax,0x2950(%rbp)
    3562:	e8 06 ff ff ff       	call   346d <efi_pxe_ip_sockaddr>
    3567:	4c 89 e6             	mov    %r12,%rsi
    356a:	4c 89 f7             	mov    %r14,%rdi
    356d:	e8 be 34 01 00       	call   16a30 <pxe_uri>
    3572:	49 89 c4             	mov    %rax,%r12
    3575:	48 85 c0             	test   %rax,%rax
    3578:	75 07                	jne    3581 <efi_pxe_mtftp+0xcf>
    357a:	bb 7d 1f b5 c3       	mov    $0xc3b51f7d,%ebx
    357f:	eb 46                	jmp    35c7 <efi_pxe_mtftp+0x115>
    3581:	48 8d bd 68 29 00 00 	lea    0x2968(%rbp),%rdi
    3588:	48 89 c6             	mov    %rax,%rsi
    358b:	e8 83 b4 00 00       	call   ea13 <xfer_open_uri>
    3590:	4c 89 e7             	mov    %r12,%rdi
    3593:	89 c3                	mov    %eax,%ebx
    3595:	e8 a4 c8 00 00       	call   fe3e <ref_decrement>
    359a:	85 db                	test   %ebx,%ebx
    359c:	75 29                	jne    35c7 <efi_pxe_mtftp+0x115>
    359e:	c7 85 90 29 00 00 6c 	movl   $0xe5b51f6c,0x2990(%rbp)
    35a5:	1f b5 e5 
    35a8:	8b 9d 90 29 00 00    	mov    0x2990(%rbp),%ebx
    35ae:	81 fb 6c 1f b5 e5    	cmp    $0xe5b51f6c,%ebx
    35b4:	75 07                	jne    35bd <efi_pxe_mtftp+0x10b>
    35b6:	e8 f1 c3 00 00       	call   f9ac <step>
    35bb:	eb eb                	jmp    35a8 <efi_pxe_mtftp+0xf6>
    35bd:	89 de                	mov    %ebx,%esi
    35bf:	4c 89 ef             	mov    %r13,%rdi
    35c2:	e8 36 fe ff ff       	call   33fd <efi_pxe_tftp_close>
    35c7:	83 cf ff             	or     $0xffffffff,%edi
    35ca:	e8 08 24 00 00       	call   59d7 <efi_snp_add_claim>
    35cf:	f7 db                	neg    %ebx
    35d1:	ba 01 00 00 00       	mov    $0x1,%edx
    35d6:	48 89 d8             	mov    %rbx,%rax
    35d9:	48 c1 e2 3f          	shl    $0x3f,%rdx
    35dd:	83 e3 7f             	and    $0x7f,%ebx
    35e0:	48 c1 e0 38          	shl    $0x38,%rax
    35e4:	48 21 d0             	and    %rdx,%rax
    35e7:	48 09 d8             	or     %rbx,%rax
    35ea:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    35ef:	48 2b 15 7a 69 02 00 	sub    0x2697a(%rip),%rdx        # 29f70 <__stack_chk_guard>
    35f6:	74 05                	je     35fd <efi_pxe_mtftp+0x14b>
    35f8:	e8 63 f4 ff ff       	call   2a60 <__stack_chk_fail>
    35fd:	48 83 c4 48          	add    $0x48,%rsp
    3601:	5b                   	pop    %rbx
    3602:	5e                   	pop    %rsi
    3603:	5f                   	pop    %rdi
    3604:	5d                   	pop    %rbp
    3605:	41 5c                	pop    %r12
    3607:	41 5d                	pop    %r13
    3609:	41 5e                	pop    %r14
    360b:	41 5f                	pop    %r15
    360d:	c3                   	ret    

000000000000360e <efi_pxe_buf_write>:
    360e:	f3 0f 1e fa          	endbr64 
    3612:	49 89 d0             	mov    %rdx,%r8
    3615:	48 03 37             	add    (%rdi),%rsi
    3618:	48 89 ca             	mov    %rcx,%rdx
    361b:	48 89 f7             	mov    %rsi,%rdi
    361e:	4c 89 c6             	mov    %r8,%rsi
    3621:	e9 e7 3c 01 00       	jmp    1730d <__memcpy>

0000000000003626 <efi_pxe_set_ip_filter>:
    3626:	f3 0f 1e fa          	endbr64 
    362a:	57                   	push   %rdi
    362b:	48 8d b9 24 23 00 00 	lea    0x2324(%rcx),%rdi
    3632:	56                   	push   %rsi
    3633:	48 89 d6             	mov    %rdx,%rsi
    3636:	ba 84 00 00 00       	mov    $0x84,%edx
    363b:	50                   	push   %rax
    363c:	e8 cc 3c 01 00       	call   1730d <__memcpy>
    3641:	5a                   	pop    %rdx
    3642:	31 c0                	xor    %eax,%eax
    3644:	5e                   	pop    %rsi
    3645:	5f                   	pop    %rdi
    3646:	c3                   	ret    

0000000000003647 <efi_pxe_set_packets>:
    3647:	f3 0f 1e fa          	endbr64 
    364b:	48 89 d0             	mov    %rdx,%rax
    364e:	41 57                	push   %r15
    3650:	41 56                	push   %r14
    3652:	41 55                	push   %r13
    3654:	41 54                	push   %r12
    3656:	55                   	push   %rbp
    3657:	57                   	push   %rdi
    3658:	56                   	push   %rsi
    3659:	53                   	push   %rbx
    365a:	48 89 cb             	mov    %rcx,%rbx
    365d:	41 52                	push   %r10
    365f:	4c 8b 54 24 70       	mov    0x70(%rsp),%r10
    3664:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    3669:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    3670:	00 
    3671:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    3678:	00 
    3679:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
    3680:	00 
    3681:	4c 8b b4 24 98 00 00 	mov    0x98(%rsp),%r14
    3688:	00 
    3689:	4c 8b ac 24 a0 00 00 	mov    0xa0(%rsp),%r13
    3690:	00 
    3691:	4c 8b a4 24 a8 00 00 	mov    0xa8(%rsp),%r12
    3698:	00 
    3699:	48 8b ac 24 b0 00 00 	mov    0xb0(%rsp),%rbp
    36a0:	00 
    36a1:	48 85 c0             	test   %rax,%rax
    36a4:	74 05                	je     36ab <efi_pxe_set_packets+0x64>
    36a6:	8a 00                	mov    (%rax),%al
    36a8:	88 43 78             	mov    %al,0x78(%rbx)
    36ab:	4d 85 c0             	test   %r8,%r8
    36ae:	74 06                	je     36b6 <efi_pxe_set_packets+0x6f>
    36b0:	41 8a 00             	mov    (%r8),%al
    36b3:	88 43 79             	mov    %al,0x79(%rbx)
    36b6:	4d 85 c9             	test   %r9,%r9
    36b9:	74 06                	je     36c1 <efi_pxe_set_packets+0x7a>
    36bb:	41 8a 01             	mov    (%r9),%al
    36be:	88 43 7a             	mov    %al,0x7a(%rbx)
    36c1:	4d 85 d2             	test   %r10,%r10
    36c4:	74 06                	je     36cc <efi_pxe_set_packets+0x85>
    36c6:	41 8a 02             	mov    (%r10),%al
    36c9:	88 43 7b             	mov    %al,0x7b(%rbx)
    36cc:	48 85 c9             	test   %rcx,%rcx
    36cf:	74 05                	je     36d6 <efi_pxe_set_packets+0x8f>
    36d1:	8a 01                	mov    (%rcx),%al
    36d3:	88 43 7c             	mov    %al,0x7c(%rbx)
    36d6:	48 85 d2             	test   %rdx,%rdx
    36d9:	74 05                	je     36e0 <efi_pxe_set_packets+0x99>
    36db:	8a 02                	mov    (%rdx),%al
    36dd:	88 43 7d             	mov    %al,0x7d(%rbx)
    36e0:	48 85 f6             	test   %rsi,%rsi
    36e3:	74 11                	je     36f6 <efi_pxe_set_packets+0xaf>
    36e5:	48 8d bb a4 00 00 00 	lea    0xa4(%rbx),%rdi
    36ec:	ba c0 05 00 00       	mov    $0x5c0,%edx
    36f1:	e8 17 3c 01 00       	call   1730d <__memcpy>
    36f6:	4d 85 ff             	test   %r15,%r15
    36f9:	74 14                	je     370f <efi_pxe_set_packets+0xc8>
    36fb:	48 8d bb 64 06 00 00 	lea    0x664(%rbx),%rdi
    3702:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3707:	4c 89 fe             	mov    %r15,%rsi
    370a:	e8 fe 3b 01 00       	call   1730d <__memcpy>
    370f:	4d 85 f6             	test   %r14,%r14
    3712:	74 14                	je     3728 <efi_pxe_set_packets+0xe1>
    3714:	48 8d bb 24 0c 00 00 	lea    0xc24(%rbx),%rdi
    371b:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3720:	4c 89 f6             	mov    %r14,%rsi
    3723:	e8 e5 3b 01 00       	call   1730d <__memcpy>
    3728:	4d 85 ed             	test   %r13,%r13
    372b:	74 14                	je     3741 <efi_pxe_set_packets+0xfa>
    372d:	48 8d bb e4 11 00 00 	lea    0x11e4(%rbx),%rdi
    3734:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3739:	4c 89 ee             	mov    %r13,%rsi
    373c:	e8 cc 3b 01 00       	call   1730d <__memcpy>
    3741:	4d 85 e4             	test   %r12,%r12
    3744:	74 14                	je     375a <efi_pxe_set_packets+0x113>
    3746:	48 8d bb a4 17 00 00 	lea    0x17a4(%rbx),%rdi
    374d:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3752:	4c 89 e6             	mov    %r12,%rsi
    3755:	e8 b3 3b 01 00       	call   1730d <__memcpy>
    375a:	48 85 ed             	test   %rbp,%rbp
    375d:	74 14                	je     3773 <efi_pxe_set_packets+0x12c>
    375f:	48 8d bb 64 1d 00 00 	lea    0x1d64(%rbx),%rdi
    3766:	ba c0 05 00 00       	mov    $0x5c0,%edx
    376b:	48 89 ee             	mov    %rbp,%rsi
    376e:	e8 9a 3b 01 00       	call   1730d <__memcpy>
    3773:	5a                   	pop    %rdx
    3774:	31 c0                	xor    %eax,%eax
    3776:	5b                   	pop    %rbx
    3777:	5e                   	pop    %rsi
    3778:	5f                   	pop    %rdi
    3779:	5d                   	pop    %rbp
    377a:	41 5c                	pop    %r12
    377c:	41 5d                	pop    %r13
    377e:	41 5e                	pop    %r14
    3780:	41 5f                	pop    %r15
    3782:	c3                   	ret    

0000000000003783 <efi_apple_get_bsdp_response>:
    3783:	f3 0f 1e fa          	endbr64 
    3787:	48 b8 05 00 00 00 00 	movabs $0x8000000000000005,%rax
    378e:	00 00 80 
    3791:	57                   	push   %rdi
    3792:	56                   	push   %rsi
    3793:	53                   	push   %rbx
    3794:	48 81 3a bf 05 00 00 	cmpq   $0x5bf,(%rdx)
    379b:	48 89 d3             	mov    %rdx,%rbx
    379e:	76 16                	jbe    37b6 <efi_apple_get_bsdp_response+0x33>
    37a0:	4c 89 c7             	mov    %r8,%rdi
    37a3:	48 8d b1 7c ee ff ff 	lea    -0x1184(%rcx),%rsi
    37aa:	ba c0 05 00 00       	mov    $0x5c0,%edx
    37af:	e8 59 3b 01 00       	call   1730d <__memcpy>
    37b4:	31 c0                	xor    %eax,%eax
    37b6:	48 c7 03 c0 05 00 00 	movq   $0x5c0,(%rbx)
    37bd:	5b                   	pop    %rbx
    37be:	5e                   	pop    %rsi
    37bf:	5f                   	pop    %rdi
    37c0:	c3                   	ret    

00000000000037c1 <efi_pxe_udp_deliver>:
    37c1:	f3 0f 1e fa          	endbr64 
    37c5:	41 57                	push   %r15
    37c7:	41 56                	push   %r14
    37c9:	41 55                	push   %r13
    37cb:	41 54                	push   %r12
    37cd:	55                   	push   %rbp
    37ce:	48 89 f5             	mov    %rsi,%rbp
    37d1:	53                   	push   %rbx
    37d2:	48 89 fb             	mov    %rdi,%rbx
    37d5:	48 83 ec 18          	sub    $0x18,%rsp
    37d9:	4c 8b 6a 10          	mov    0x10(%rdx),%r13
    37dd:	4c 8b 72 18          	mov    0x18(%rdx),%r14
    37e1:	41 0f b7 7d 00       	movzwl 0x0(%r13),%edi
    37e6:	e8 40 16 01 00       	call   14e2b <tcpip_net_protocol>
    37eb:	48 85 c0             	test   %rax,%rax
    37ee:	75 0b                	jne    37fb <efi_pxe_udp_deliver+0x3a>
    37f0:	41 bc 7d 1f b5 c3    	mov    $0xc3b51f7d,%r12d
    37f6:	e9 9b 00 00 00       	jmp    3896 <efi_pxe_udp_deliver+0xd5>
    37fb:	4c 8b 78 18          	mov    0x18(%rax),%r15
    37ff:	48 89 ef             	mov    %rbp,%rdi
    3802:	41 0f b6 57 1a       	movzbl 0x1a(%r15),%edx
    3807:	48 8d 72 06          	lea    0x6(%rdx),%rsi
    380b:	48 89 14 24          	mov    %rdx,(%rsp)
    380f:	48 01 f6             	add    %rsi,%rsi
    3812:	e8 b8 64 00 00       	call   9ccf <iob_ensure_headroom>
    3817:	41 89 c4             	mov    %eax,%r12d
    381a:	85 c0                	test   %eax,%eax
    381c:	75 78                	jne    3896 <efi_pxe_udp_deliver+0xd5>
    381e:	48 8b 14 24          	mov    (%rsp),%rdx
    3822:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    3826:	49 8d 75 08          	lea    0x8(%r13),%rsi
    382a:	48 29 d7             	sub    %rdx,%rdi
    382d:	48 89 d0             	mov    %rdx,%rax
    3830:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3835:	48 89 7d 18          	mov    %rdi,0x18(%rbp)
    3839:	48 f7 d8             	neg    %rax
    383c:	48 89 04 24          	mov    %rax,(%rsp)
    3840:	e8 c8 3a 01 00       	call   1730d <__memcpy>
    3845:	48 8b 3c 24          	mov    (%rsp),%rdi
    3849:	48 03 7d 18          	add    0x18(%rbp),%rdi
    384d:	49 8d 76 08          	lea    0x8(%r14),%rsi
    3851:	48 89 7d 18          	mov    %rdi,0x18(%rbp)
    3855:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    385a:	e8 ae 3a 01 00       	call   1730d <__memcpy>
    385f:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    3863:	48 8d b3 f0 29 00 00 	lea    0x29f0(%rbx),%rsi
    386a:	48 89 ef             	mov    %rbp,%rdi
    386d:	48 8d 42 f4          	lea    -0xc(%rdx),%rax
    3871:	48 89 45 18          	mov    %rax,0x18(%rbp)
    3875:	4c 89 7a f4          	mov    %r15,-0xc(%rdx)
    3879:	66 41 8b 46 04       	mov    0x4(%r14),%ax
    387e:	86 c4                	xchg   %al,%ah
    3880:	66 89 42 fc          	mov    %ax,-0x4(%rdx)
    3884:	66 41 8b 45 04       	mov    0x4(%r13),%ax
    3889:	86 c4                	xchg   %al,%ah
    388b:	66 89 42 fe          	mov    %ax,-0x2(%rdx)
    388f:	e8 43 88 00 00       	call   c0d7 <extern_list_add_tail>
    3894:	eb 08                	jmp    389e <efi_pxe_udp_deliver+0xdd>
    3896:	48 89 ef             	mov    %rbp,%rdi
    3899:	e8 f8 63 00 00       	call   9c96 <free_iob>
    389e:	48 83 c4 18          	add    $0x18,%rsp
    38a2:	44 89 e0             	mov    %r12d,%eax
    38a5:	5b                   	pop    %rbx
    38a6:	5d                   	pop    %rbp
    38a7:	41 5c                	pop    %r12
    38a9:	41 5d                	pop    %r13
    38ab:	41 5e                	pop    %r14
    38ad:	41 5f                	pop    %r15
    38af:	c3                   	ret    

00000000000038b0 <efi_pxe_discover>:
    38b0:	f3 0f 1e fa          	endbr64 
    38b4:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    38bb:	00 00 80 
    38be:	c3                   	ret    

00000000000038bf <efi_pxe_fake>:
    38bf:	53                   	push   %rbx
    38c0:	48 89 d3             	mov    %rdx,%rbx
    38c3:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    38ca:	48 8b 15 9f 66 02 00 	mov    0x2669f(%rip),%rdx        # 29f70 <__stack_chk_guard>
    38d1:	48 89 94 24 88 00 00 	mov    %rdx,0x88(%rsp)
    38d8:	00 
    38d9:	31 d2                	xor    %edx,%edx
    38db:	80 bf ab 00 00 00 00 	cmpb   $0x0,0xab(%rdi)
    38e2:	74 04                	je     38e8 <efi_pxe_fake+0x29>
    38e4:	31 c0                	xor    %eax,%eax
    38e6:	eb 3b                	jmp    3923 <efi_pxe_fake+0x64>
    38e8:	48 89 f0             	mov    %rsi,%rax
    38eb:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    38ef:	ba c0 05 00 00       	mov    $0x5c0,%edx
    38f4:	48 89 de             	mov    %rbx,%rsi
    38f7:	ff d0                	call   *%rax
    38f9:	85 c0                	test   %eax,%eax
    38fb:	75 e7                	jne    38e4 <efi_pxe_fake+0x25>
    38fd:	48 89 e7             	mov    %rsp,%rdi
    3900:	ba c0 05 00 00       	mov    $0x5c0,%edx
    3905:	48 89 de             	mov    %rbx,%rsi
    3908:	e8 55 71 01 00       	call   1aa62 <dhcppkt_init>
    390d:	8b 44 24 20          	mov    0x20(%rsp),%eax
    3911:	05 f0 00 00 00       	add    $0xf0,%eax
    3916:	3d bf 05 00 00       	cmp    $0x5bf,%eax
    391b:	77 04                	ja     3921 <efi_pxe_fake+0x62>
    391d:	c6 04 03 ff          	movb   $0xff,(%rbx,%rax,1)
    3921:	b0 01                	mov    $0x1,%al
    3923:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    392a:	00 
    392b:	48 2b 15 3e 66 02 00 	sub    0x2663e(%rip),%rdx        # 29f70 <__stack_chk_guard>
    3932:	74 05                	je     3939 <efi_pxe_fake+0x7a>
    3934:	e8 27 f1 ff ff       	call   2a60 <__stack_chk_fail>
    3939:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    3940:	5b                   	pop    %rbx
    3941:	c3                   	ret    

0000000000003942 <efi_pxe_fake_all>:
    3942:	53                   	push   %rbx
    3943:	48 8d 97 dc 00 00 00 	lea    0xdc(%rdi),%rdx
    394a:	48 8d 35 d8 32 00 00 	lea    0x32d8(%rip),%rsi        # 6c29 <create_fakedhcpdiscover>
    3951:	48 89 fb             	mov    %rdi,%rbx
    3954:	e8 66 ff ff ff       	call   38bf <efi_pxe_fake>
    3959:	48 8d 93 9c 06 00 00 	lea    0x69c(%rbx),%rdx
    3960:	48 89 df             	mov    %rbx,%rdi
    3963:	48 8d 35 1c 33 00 00 	lea    0x331c(%rip),%rsi        # 6c86 <create_fakedhcpack>
    396a:	88 83 b0 00 00 00    	mov    %al,0xb0(%rbx)
    3970:	e8 4a ff ff ff       	call   38bf <efi_pxe_fake>
    3975:	48 8d 93 dc 17 00 00 	lea    0x17dc(%rbx),%rdx
    397c:	48 89 df             	mov    %rbx,%rdi
    397f:	48 8d 35 8a 33 00 00 	lea    0x338a(%rip),%rsi        # 6d10 <create_fakepxebsack>
    3986:	88 83 b1 00 00 00    	mov    %al,0xb1(%rbx)
    398c:	e8 2e ff ff ff       	call   38bf <efi_pxe_fake>
    3991:	88 83 b4 00 00 00    	mov    %al,0xb4(%rbx)
    3997:	5b                   	pop    %rbx
    3998:	c3                   	ret    

0000000000003999 <efi_pxe_start>:
    3999:	f3 0f 1e fa          	endbr64 
    399d:	41 55                	push   %r13
    399f:	4c 8d 69 70          	lea    0x70(%rcx),%r13
    39a3:	41 54                	push   %r12
    39a5:	41 89 d4             	mov    %edx,%r12d
    39a8:	55                   	push   %rbp
    39a9:	48 8d 69 c8          	lea    -0x38(%rcx),%rbp
    39ad:	57                   	push   %rdi
    39ae:	bf 02 00 00 00       	mov    $0x2,%edi
    39b3:	56                   	push   %rsi
    39b4:	53                   	push   %rbx
    39b5:	48 89 cb             	mov    %rcx,%rbx
    39b8:	41 50                	push   %r8
    39ba:	e8 6c 14 01 00       	call   14e2b <tcpip_net_protocol>
    39bf:	41 80 fc 01          	cmp    $0x1,%r12b
    39c3:	4c 89 ef             	mov    %r13,%rdi
    39c6:	b9 b8 28 00 00       	mov    $0x28b8,%ecx
    39cb:	19 d2                	sbb    %edx,%edx
    39cd:	49 89 c0             	mov    %rax,%r8
    39d0:	31 c0                	xor    %eax,%eax
    39d2:	83 c2 02             	add    $0x2,%edx
    39d5:	f3 aa                	rep stos %al,%es:(%rdi)
    39d7:	4d 85 c0             	test   %r8,%r8
    39da:	c6 43 76 01          	movb   $0x1,0x76(%rbx)
    39de:	0f b7 fa             	movzwl %dx,%edi
    39e1:	0f 95 c0             	setne  %al
    39e4:	c6 83 24 23 00 00 0f 	movb   $0xf,0x2324(%rbx)
    39eb:	66 c7 83 81 00 00 00 	movw   $0x10,0x81(%rbx)
    39f2:	10 00 
    39f4:	88 43 72             	mov    %al,0x72(%rbx)
    39f7:	88 43 71             	mov    %al,0x71(%rbx)
    39fa:	e8 2c 14 01 00       	call   14e2b <tcpip_net_protocol>
    39ff:	48 89 c2             	mov    %rax,%rdx
    3a02:	48 89 83 38 29 00 00 	mov    %rax,0x2938(%rbx)
    3a09:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    3a10:	00 00 80 
    3a13:	48 85 d2             	test   %rdx,%rdx
    3a16:	74 2d                	je     3a45 <efi_pxe_start+0xac>
    3a18:	48 8b 42 18          	mov    0x18(%rdx),%rax
    3a1c:	44 88 63 73          	mov    %r12b,0x73(%rbx)
    3a20:	48 89 ef             	mov    %rbp,%rdi
    3a23:	48 89 83 40 29 00 00 	mov    %rax,0x2940(%rbx)
    3a2a:	e8 28 f9 ff ff       	call   3357 <efi_pxe_ip>
    3a2f:	85 c0                	test   %eax,%eax
    3a31:	74 04                	je     3a37 <efi_pxe_start+0x9e>
    3a33:	48 98                	cltq   
    3a35:	eb 0e                	jmp    3a45 <efi_pxe_start+0xac>
    3a37:	48 89 ef             	mov    %rbp,%rdi
    3a3a:	e8 03 ff ff ff       	call   3942 <efi_pxe_fake_all>
    3a3f:	c6 43 70 01          	movb   $0x1,0x70(%rbx)
    3a43:	31 c0                	xor    %eax,%eax
    3a45:	5a                   	pop    %rdx
    3a46:	5b                   	pop    %rbx
    3a47:	5e                   	pop    %rsi
    3a48:	5f                   	pop    %rdi
    3a49:	5d                   	pop    %rbp
    3a4a:	41 5c                	pop    %r12
    3a4c:	41 5d                	pop    %r13
    3a4e:	c3                   	ret    

0000000000003a4f <efi_pxe_udp_open>:
    3a4f:	48 83 ec 18          	sub    $0x18,%rsp
    3a53:	4c 8d 87 00 2a 00 00 	lea    0x2a00(%rdi),%r8
    3a5a:	4c 3b 87 00 2a 00 00 	cmp    0x2a00(%rdi),%r8
    3a61:	74 0c                	je     3a6f <efi_pxe_udp_open+0x20>
    3a63:	4c 89 c7             	mov    %r8,%rdi
    3a66:	e8 19 bf 00 00       	call   f984 <process_del>
    3a6b:	31 c0                	xor    %eax,%eax
    3a6d:	eb 22                	jmp    3a91 <efi_pxe_udp_open+0x42>
    3a6f:	48 81 c7 d0 29 00 00 	add    $0x29d0,%rdi
    3a76:	e8 78 27 01 00       	call   161f3 <udp_open_promisc>
    3a7b:	85 c0                	test   %eax,%eax
    3a7d:	75 12                	jne    3a91 <efi_pxe_udp_open+0x42>
    3a7f:	bf 01 00 00 00       	mov    $0x1,%edi
    3a84:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3a88:	e8 4a 1f 00 00       	call   59d7 <efi_snp_add_claim>
    3a8d:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3a91:	48 83 c4 18          	add    $0x18,%rsp
    3a95:	c3                   	ret    

0000000000003a96 <efi_pxe_udp_read>:
    3a96:	f3 0f 1e fa          	endbr64 
    3a9a:	41 57                	push   %r15
    3a9c:	41 56                	push   %r14
    3a9e:	41 55                	push   %r13
    3aa0:	41 54                	push   %r12
    3aa2:	55                   	push   %rbp
    3aa3:	48 89 cd             	mov    %rcx,%rbp
    3aa6:	57                   	push   %rdi
    3aa7:	48 8d 79 c8          	lea    -0x38(%rcx),%rdi
    3aab:	56                   	push   %rsi
    3aac:	53                   	push   %rbx
    3aad:	48 83 ec 38          	sub    $0x38,%rsp
    3ab1:	89 54 24 08          	mov    %edx,0x8(%rsp)
    3ab5:	4c 89 84 24 90 00 00 	mov    %r8,0x90(%rsp)
    3abc:	00 
    3abd:	4c 89 8c 24 98 00 00 	mov    %r9,0x98(%rsp)
    3ac4:	00 
    3ac5:	e8 85 ff ff ff       	call   3a4f <efi_pxe_udp_open>
    3aca:	89 c3                	mov    %eax,%ebx
    3acc:	85 c0                	test   %eax,%eax
    3ace:	0f 85 12 03 00 00    	jne    3de6 <efi_pxe_udp_read+0x350>
    3ad4:	4c 8d ad b8 29 00 00 	lea    0x29b8(%rbp),%r13
    3adb:	4c 3b ad b8 29 00 00 	cmp    0x29b8(%rbp),%r13
    3ae2:	75 05                	jne    3ae9 <efi_pxe_udp_read+0x53>
    3ae4:	e8 c3 be 00 00       	call   f9ac <step>
    3ae9:	4c 8b b5 b8 29 00 00 	mov    0x29b8(%rbp),%r14
    3af0:	4d 85 f6             	test   %r14,%r14
    3af3:	74 05                	je     3afa <efi_pxe_udp_read+0x64>
    3af5:	4d 39 f5             	cmp    %r14,%r13
    3af8:	75 0a                	jne    3b04 <efi_pxe_udp_read+0x6e>
    3afa:	bb 6e 1f b5 b3       	mov    $0xb3b51f6e,%ebx
    3aff:	e9 d6 02 00 00       	jmp    3dda <efi_pxe_udp_read+0x344>
    3b04:	49 8b 16             	mov    (%r14),%rdx
    3b07:	49 8b 46 08          	mov    0x8(%r14),%rax
    3b0b:	4d 8b 66 18          	mov    0x18(%r14),%r12
    3b0f:	4c 8b 8d 40 29 00 00 	mov    0x2940(%rbp),%r9
    3b16:	48 89 42 08          	mov    %rax,0x8(%rdx)
    3b1a:	48 89 10             	mov    %rdx,(%rax)
    3b1d:	49 8b 04 24          	mov    (%r12),%rax
    3b21:	4d 8d 7c 24 0c       	lea    0xc(%r12),%r15
    3b26:	44 0f b6 68 1a       	movzbl 0x1a(%rax),%r13d
    3b2b:	4b 8d 0c 2f          	lea    (%r15,%r13,1),%rcx
    3b2f:	4a 8d 14 29          	lea    (%rcx,%r13,1),%rdx
    3b33:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    3b38:	49 89 56 18          	mov    %rdx,0x18(%r14)
    3b3c:	4c 39 c8             	cmp    %r9,%rax
    3b3f:	74 02                	je     3b43 <efi_pxe_udp_read+0xad>
    3b41:	eb 25                	jmp    3b68 <efi_pxe_udp_read+0xd2>
    3b43:	f6 44 24 08 08       	testb  $0x8,0x8(%rsp)
    3b48:	75 28                	jne    3b72 <efi_pxe_udp_read+0xdc>
    3b4a:	48 83 bc 24 98 00 00 	cmpq   $0x0,0x98(%rsp)
    3b51:	00 00 
    3b53:	74 13                	je     3b68 <efi_pxe_udp_read+0xd2>
    3b55:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    3b5c:	00 
    3b5d:	66 41 8b 4c 24 08    	mov    0x8(%r12),%cx
    3b63:	66 39 08             	cmp    %cx,(%rax)
    3b66:	74 0a                	je     3b72 <efi_pxe_udp_read+0xdc>
    3b68:	bb 6e 1f b5 b3       	mov    $0xb3b51f6e,%ebx
    3b6d:	e9 60 02 00 00       	jmp    3dd2 <efi_pxe_udp_read+0x33c>
    3b72:	f6 44 24 08 02       	testb  $0x2,0x8(%rsp)
    3b77:	75 20                	jne    3b99 <efi_pxe_udp_read+0x103>
    3b79:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
    3b80:	00 00 
    3b82:	74 13                	je     3b97 <efi_pxe_udp_read+0x101>
    3b84:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
    3b8b:	00 
    3b8c:	66 41 8b 4c 24 0a    	mov    0xa(%r12),%cx
    3b92:	66 39 08             	cmp    %cx,(%rax)
    3b95:	74 02                	je     3b99 <efi_pxe_udp_read+0x103>
    3b97:	eb cf                	jmp    3b68 <efi_pxe_udp_read+0xd2>
    3b99:	f6 44 24 08 01       	testb  $0x1,0x8(%rsp)
    3b9e:	75 30                	jne    3bd0 <efi_pxe_udp_read+0x13a>
    3ba0:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
    3ba7:	00 00 
    3ba9:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
    3bae:	74 1e                	je     3bce <efi_pxe_udp_read+0x138>
    3bb0:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3bb5:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
    3bbc:	00 
    3bbd:	4c 89 ea             	mov    %r13,%rdx
    3bc0:	e8 8f fc 00 00       	call   13854 <memcmp>
    3bc5:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    3bca:	85 c0                	test   %eax,%eax
    3bcc:	74 02                	je     3bd0 <efi_pxe_udp_read+0x13a>
    3bce:	eb 98                	jmp    3b68 <efi_pxe_udp_read+0xd2>
    3bd0:	f6 44 24 08 10       	testb  $0x10,0x8(%rsp)
    3bd5:	0f 84 be 00 00 00    	je     3c99 <efi_pxe_udp_read+0x203>
    3bdb:	8a 85 24 23 00 00    	mov    0x2324(%rbp),%al
    3be1:	a8 04                	test   $0x4,%al
    3be3:	0f 85 de 00 00 00    	jne    3cc7 <efi_pxe_udp_read+0x231>
    3be9:	a8 08                	test   $0x8,%al
    3beb:	74 25                	je     3c12 <efi_pxe_udp_read+0x17c>
    3bed:	80 7d 73 00          	cmpb   $0x0,0x73(%rbp)
    3bf1:	74 08                	je     3bfb <efi_pxe_udp_read+0x165>
    3bf3:	41 80 7c 24 0c ff    	cmpb   $0xff,0xc(%r12)
    3bf9:	eb 11                	jmp    3c0c <efi_pxe_udp_read+0x176>
    3bfb:	41 8b 54 24 0c       	mov    0xc(%r12),%edx
    3c00:	81 e2 f0 00 00 00    	and    $0xf0,%edx
    3c06:	81 fa e0 00 00 00    	cmp    $0xe0,%edx
    3c0c:	0f 84 b5 00 00 00    	je     3cc7 <efi_pxe_udp_read+0x231>
    3c12:	a8 02                	test   $0x2,%al
    3c14:	74 12                	je     3c28 <efi_pxe_udp_read+0x192>
    3c16:	80 7d 73 00          	cmpb   $0x0,0x73(%rbp)
    3c1a:	75 0c                	jne    3c28 <efi_pxe_udp_read+0x192>
    3c1c:	41 83 7c 24 0c ff    	cmpl   $0xffffffff,0xc(%r12)
    3c22:	0f 84 9f 00 00 00    	je     3cc7 <efi_pxe_udp_read+0x231>
    3c28:	41 0f b6 49 1a       	movzbl 0x1a(%r9),%ecx
    3c2d:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    3c32:	a8 01                	test   $0x1,%al
    3c34:	74 16                	je     3c4c <efi_pxe_udp_read+0x1b6>
    3c36:	48 8d b5 84 00 00 00 	lea    0x84(%rbp),%rsi
    3c3d:	48 89 ca             	mov    %rcx,%rdx
    3c40:	4c 89 ff             	mov    %r15,%rdi
    3c43:	e8 0c fc 00 00       	call   13854 <memcmp>
    3c48:	85 c0                	test   %eax,%eax
    3c4a:	74 7b                	je     3cc7 <efi_pxe_udp_read+0x231>
    3c4c:	0f b6 85 25 23 00 00 	movzbl 0x2325(%rbp),%eax
    3c53:	4c 8d 95 28 23 00 00 	lea    0x2328(%rbp),%r10
    3c5a:	45 31 c9             	xor    %r9d,%r9d
    3c5d:	89 44 24 18          	mov    %eax,0x18(%rsp)
    3c61:	44 3b 4c 24 18       	cmp    0x18(%rsp),%r9d
    3c66:	73 5a                	jae    3cc2 <efi_pxe_udp_read+0x22c>
    3c68:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3c6d:	4c 89 d6             	mov    %r10,%rsi
    3c70:	4c 89 ff             	mov    %r15,%rdi
    3c73:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    3c78:	44 89 4c 24 2c       	mov    %r9d,0x2c(%rsp)
    3c7d:	e8 d2 fb 00 00       	call   13854 <memcmp>
    3c82:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    3c87:	49 83 c2 10          	add    $0x10,%r10
    3c8b:	85 c0                	test   %eax,%eax
    3c8d:	74 38                	je     3cc7 <efi_pxe_udp_read+0x231>
    3c8f:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
    3c94:	41 ff c1             	inc    %r9d
    3c97:	eb c8                	jmp    3c61 <efi_pxe_udp_read+0x1cb>
    3c99:	f6 44 24 08 04       	testb  $0x4,0x8(%rsp)
    3c9e:	75 27                	jne    3cc7 <efi_pxe_udp_read+0x231>
    3ca0:	48 83 bc 24 90 00 00 	cmpq   $0x0,0x90(%rsp)
    3ca7:	00 00 
    3ca9:	74 17                	je     3cc2 <efi_pxe_udp_read+0x22c>
    3cab:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    3cb2:	00 
    3cb3:	4c 89 ea             	mov    %r13,%rdx
    3cb6:	4c 89 fe             	mov    %r15,%rsi
    3cb9:	e8 96 fb 00 00       	call   13854 <memcmp>
    3cbe:	85 c0                	test   %eax,%eax
    3cc0:	74 10                	je     3cd2 <efi_pxe_udp_read+0x23c>
    3cc2:	e9 a1 fe ff ff       	jmp    3b68 <efi_pxe_udp_read+0xd2>
    3cc7:	48 83 bc 24 90 00 00 	cmpq   $0x0,0x90(%rsp)
    3cce:	00 00 
    3cd0:	74 13                	je     3ce5 <efi_pxe_udp_read+0x24f>
    3cd2:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    3cd9:	00 
    3cda:	4c 89 ea             	mov    %r13,%rdx
    3cdd:	4c 89 fe             	mov    %r15,%rsi
    3ce0:	e8 28 36 01 00       	call   1730d <__memcpy>
    3ce5:	48 83 bc 24 98 00 00 	cmpq   $0x0,0x98(%rsp)
    3cec:	00 00 
    3cee:	74 11                	je     3d01 <efi_pxe_udp_read+0x26b>
    3cf0:	66 41 8b 44 24 08    	mov    0x8(%r12),%ax
    3cf6:	48 8b 8c 24 98 00 00 	mov    0x98(%rsp),%rcx
    3cfd:	00 
    3cfe:	66 89 01             	mov    %ax,(%rcx)
    3d01:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
    3d08:	00 00 
    3d0a:	74 15                	je     3d21 <efi_pxe_udp_read+0x28b>
    3d0c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3d11:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
    3d18:	00 
    3d19:	4c 89 ea             	mov    %r13,%rdx
    3d1c:	e8 ec 35 01 00       	call   1730d <__memcpy>
    3d21:	48 83 bc 24 a8 00 00 	cmpq   $0x0,0xa8(%rsp)
    3d28:	00 00 
    3d2a:	74 11                	je     3d3d <efi_pxe_udp_read+0x2a7>
    3d2c:	66 41 8b 44 24 0a    	mov    0xa(%r12),%ax
    3d32:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
    3d39:	00 
    3d3a:	66 89 01             	mov    %ax,(%rcx)
    3d3d:	48 83 bc 24 b0 00 00 	cmpq   $0x0,0xb0(%rsp)
    3d44:	00 00 
    3d46:	74 3c                	je     3d84 <efi_pxe_udp_read+0x2ee>
    3d48:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    3d4f:	00 
    3d50:	49 8b 76 18          	mov    0x18(%r14),%rsi
    3d54:	4d 8b 66 20          	mov    0x20(%r14),%r12
    3d58:	48 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%rdi
    3d5f:	00 
    3d60:	48 8b 00             	mov    (%rax),%rax
    3d63:	49 29 f4             	sub    %rsi,%r12
    3d66:	49 39 c4             	cmp    %rax,%r12
    3d69:	4c 0f 47 e0          	cmova  %rax,%r12
    3d6d:	4c 89 e2             	mov    %r12,%rdx
    3d70:	e8 98 35 01 00       	call   1730d <__memcpy>
    3d75:	48 8b 84 24 b0 00 00 	mov    0xb0(%rsp),%rax
    3d7c:	00 
    3d7d:	4d 01 66 18          	add    %r12,0x18(%r14)
    3d81:	4c 89 20             	mov    %r12,(%rax)
    3d84:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
    3d8b:	00 
    3d8c:	49 8b 76 18          	mov    0x18(%r14),%rsi
    3d90:	4d 8b 66 20          	mov    0x20(%r14),%r12
    3d94:	48 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%rdi
    3d9b:	00 
    3d9c:	48 8b 00             	mov    (%rax),%rax
    3d9f:	49 29 f4             	sub    %rsi,%r12
    3da2:	49 39 c4             	cmp    %rax,%r12
    3da5:	4c 0f 47 e0          	cmova  %rax,%r12
    3da9:	4c 89 e2             	mov    %r12,%rdx
    3dac:	e8 5c 35 01 00       	call   1730d <__memcpy>
    3db1:	49 8b 46 18          	mov    0x18(%r14),%rax
    3db5:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
    3dbc:	00 
    3dbd:	4c 01 e0             	add    %r12,%rax
    3dc0:	49 89 46 18          	mov    %rax,0x18(%r14)
    3dc4:	4c 89 27             	mov    %r12,(%rdi)
    3dc7:	49 39 46 20          	cmp    %rax,0x20(%r14)
    3dcb:	74 05                	je     3dd2 <efi_pxe_udp_read+0x33c>
    3dcd:	bb 7b 1f b5 b9       	mov    $0xb9b51f7b,%ebx
    3dd2:	4c 89 f7             	mov    %r14,%rdi
    3dd5:	e8 bc 5e 00 00       	call   9c96 <free_iob>
    3dda:	48 8d bd c8 29 00 00 	lea    0x29c8(%rbp),%rdi
    3de1:	e8 4b bb 00 00       	call   f931 <process_add>
    3de6:	f7 db                	neg    %ebx
    3de8:	ba 01 00 00 00       	mov    $0x1,%edx
    3ded:	48 83 c4 38          	add    $0x38,%rsp
    3df1:	48 89 d8             	mov    %rbx,%rax
    3df4:	48 c1 e2 3f          	shl    $0x3f,%rdx
    3df8:	83 e3 7f             	and    $0x7f,%ebx
    3dfb:	48 c1 e0 38          	shl    $0x38,%rax
    3dff:	48 21 d0             	and    %rdx,%rax
    3e02:	48 09 d8             	or     %rbx,%rax
    3e05:	5b                   	pop    %rbx
    3e06:	5e                   	pop    %rsi
    3e07:	5f                   	pop    %rdi
    3e08:	5d                   	pop    %rbp
    3e09:	41 5c                	pop    %r12
    3e0b:	41 5d                	pop    %r13
    3e0d:	41 5e                	pop    %r14
    3e0f:	41 5f                	pop    %r15
    3e11:	c3                   	ret    

0000000000003e12 <efi_pxe_udp_write>:
    3e12:	f3 0f 1e fa          	endbr64 
    3e16:	41 57                	push   %r15
    3e18:	4c 8d 79 c8          	lea    -0x38(%rcx),%r15
    3e1c:	41 56                	push   %r14
    3e1e:	41 55                	push   %r13
    3e20:	4d 89 cd             	mov    %r9,%r13
    3e23:	41 54                	push   %r12
    3e25:	55                   	push   %rbp
    3e26:	57                   	push   %rdi
    3e27:	4c 89 ff             	mov    %r15,%rdi
    3e2a:	56                   	push   %rsi
    3e2b:	53                   	push   %rbx
    3e2c:	48 89 cb             	mov    %rcx,%rbx
    3e2f:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    3e36:	48 8b 84 24 30 01 00 	mov    0x130(%rsp),%rax
    3e3d:	00 
    3e3e:	4c 8b 94 24 18 01 00 	mov    0x118(%rsp),%r10
    3e45:	00 
    3e46:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    3e4a:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    3e4f:	4c 8b a4 24 20 01 00 	mov    0x120(%rsp),%r12
    3e56:	00 
    3e57:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3e5c:	48 8b 84 24 38 01 00 	mov    0x138(%rsp),%rax
    3e63:	00 
    3e64:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
    3e69:	48 8b ac 24 28 01 00 	mov    0x128(%rsp),%rbp
    3e70:	00 
    3e71:	48 89 04 24          	mov    %rax,(%rsp)
    3e75:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
    3e7c:	00 
    3e7d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3e82:	48 8b 05 e7 60 02 00 	mov    0x260e7(%rip),%rax        # 29f70 <__stack_chk_guard>
    3e89:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    3e90:	00 
    3e91:	31 c0                	xor    %eax,%eax
    3e93:	e8 b7 fb ff ff       	call   3a4f <efi_pxe_udp_open>
    3e98:	41 89 c6             	mov    %eax,%r14d
    3e9b:	85 c0                	test   %eax,%eax
    3e9d:	0f 85 30 01 00 00    	jne    3fd3 <efi_pxe_udp_write+0x1c1>
    3ea3:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    3ea8:	4c 8d 74 24 58       	lea    0x58(%rsp),%r14
    3ead:	4c 89 ff             	mov    %r15,%rdi
    3eb0:	4c 89 f2             	mov    %r14,%rdx
    3eb3:	e8 b5 f5 ff ff       	call   346d <efi_pxe_ip_sockaddr>
    3eb8:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
    3ebd:	66 41 8b 45 00       	mov    0x0(%r13),%ax
    3ec2:	86 c4                	xchg   %al,%ah
    3ec4:	66 89 44 24 5c       	mov    %ax,0x5c(%rsp)
    3ec9:	4d 85 d2             	test   %r10,%r10
    3ecc:	75 07                	jne    3ed5 <efi_pxe_udp_write+0xc3>
    3ece:	4c 8d 93 84 00 00 00 	lea    0x84(%rbx),%r10
    3ed5:	4c 8d 6c 24 78       	lea    0x78(%rsp),%r13
    3eda:	4c 89 d6             	mov    %r10,%rsi
    3edd:	4c 89 ff             	mov    %r15,%rdi
    3ee0:	4c 89 ea             	mov    %r13,%rdx
    3ee3:	e8 85 f5 ff ff       	call   346d <efi_pxe_ip_sockaddr>
    3ee8:	4d 85 e4             	test   %r12,%r12
    3eeb:	74 15                	je     3f02 <efi_pxe_udp_write+0xf0>
    3eed:	f6 44 24 0c 02       	testb  $0x2,0xc(%rsp)
    3ef2:	75 0e                	jne    3f02 <efi_pxe_udp_write+0xf0>
    3ef4:	66 41 8b 04 24       	mov    (%r12),%ax
    3ef9:	86 c4                	xchg   %al,%ah
    3efb:	66 89 44 24 7c       	mov    %ax,0x7c(%rsp)
    3f00:	eb 19                	jmp    3f1b <efi_pxe_udp_write+0x109>
    3f02:	e8 3a bb 00 00       	call   fa41 <random>
    3f07:	83 c8 04             	or     $0x4,%eax
    3f0a:	66 89 44 24 7c       	mov    %ax,0x7c(%rsp)
    3f0f:	4d 85 e4             	test   %r12,%r12
    3f12:	74 07                	je     3f1b <efi_pxe_udp_write+0x109>
    3f14:	86 c4                	xchg   %al,%ah
    3f16:	66 41 89 04 24       	mov    %ax,(%r12)
    3f1b:	48 8b 04 24          	mov    (%rsp),%rax
    3f1f:	48 8b 30             	mov    (%rax),%rsi
    3f22:	31 c0                	xor    %eax,%eax
    3f24:	48 85 ed             	test   %rbp,%rbp
    3f27:	74 04                	je     3f2d <efi_pxe_udp_write+0x11b>
    3f29:	48 8b 45 00          	mov    0x0(%rbp),%rax
    3f2d:	4c 8d bb 98 29 00 00 	lea    0x2998(%rbx),%r15
    3f34:	48 01 c6             	add    %rax,%rsi
    3f37:	4c 89 ff             	mov    %r15,%rdi
    3f3a:	e8 5c 36 01 00       	call   1759b <xfer_alloc_iob>
    3f3f:	49 89 c4             	mov    %rax,%r12
    3f42:	48 85 c0             	test   %rax,%rax
    3f45:	75 08                	jne    3f4f <efi_pxe_udp_write+0x13d>
    3f47:	41 be 77 1f b5 ce    	mov    $0xceb51f77,%r14d
    3f4d:	eb 78                	jmp    3fc7 <efi_pxe_udp_write+0x1b5>
    3f4f:	48 85 ed             	test   %rbp,%rbp
    3f52:	74 1b                	je     3f6f <efi_pxe_udp_write+0x15d>
    3f54:	48 8b 78 20          	mov    0x20(%rax),%rdi
    3f58:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    3f5c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3f61:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    3f65:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    3f6a:	e8 9e 33 01 00       	call   1730d <__memcpy>
    3f6f:	48 8b 04 24          	mov    (%rsp),%rax
    3f73:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    3f78:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    3f7d:	48 8b 10             	mov    (%rax),%rdx
    3f80:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    3f84:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    3f89:	e8 7f 33 01 00       	call   1730d <__memcpy>
    3f8e:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
    3f93:	b9 28 00 00 00       	mov    $0x28,%ecx
    3f98:	31 c0                	xor    %eax,%eax
    3f9a:	48 89 d7             	mov    %rdx,%rdi
    3f9d:	f3 aa                	rep stos %al,%es:(%rdi)
    3f9f:	48 8b 43 d8          	mov    -0x28(%rbx),%rax
    3fa3:	4c 89 ff             	mov    %r15,%rdi
    3fa6:	4c 89 e6             	mov    %r12,%rsi
    3fa9:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
    3fae:	4c 89 6c 24 40       	mov    %r13,0x40(%rsp)
    3fb3:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    3fb8:	e8 5c 36 01 00       	call   17619 <xfer_deliver>
    3fbd:	31 ff                	xor    %edi,%edi
    3fbf:	41 89 c6             	mov    %eax,%r14d
    3fc2:	e8 cf 5c 00 00       	call   9c96 <free_iob>
    3fc7:	48 8d bb c8 29 00 00 	lea    0x29c8(%rbx),%rdi
    3fce:	e8 5e b9 00 00       	call   f931 <process_add>
    3fd3:	41 f7 de             	neg    %r14d
    3fd6:	ba 01 00 00 00       	mov    $0x1,%edx
    3fdb:	4c 89 f0             	mov    %r14,%rax
    3fde:	48 c1 e2 3f          	shl    $0x3f,%rdx
    3fe2:	41 83 e6 7f          	and    $0x7f,%r14d
    3fe6:	48 c1 e0 38          	shl    $0x38,%rax
    3fea:	48 21 d0             	and    %rdx,%rax
    3fed:	4c 09 f0             	or     %r14,%rax
    3ff0:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    3ff7:	00 
    3ff8:	48 2b 15 71 5f 02 00 	sub    0x25f71(%rip),%rdx        # 29f70 <__stack_chk_guard>
    3fff:	74 05                	je     4006 <efi_pxe_udp_write+0x1f4>
    4001:	e8 5a ea ff ff       	call   2a60 <__stack_chk_fail>
    4006:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    400d:	5b                   	pop    %rbx
    400e:	5e                   	pop    %rsi
    400f:	5f                   	pop    %rdi
    4010:	5d                   	pop    %rbp
    4011:	41 5c                	pop    %r12
    4013:	41 5d                	pop    %r13
    4015:	41 5e                	pop    %r14
    4017:	41 5f                	pop    %r15
    4019:	c3                   	ret    

000000000000401a <efi_pxe_udp_close>:
    401a:	f3 0f 1e fa          	endbr64 
    401e:	41 54                	push   %r12
    4020:	4c 8d a7 00 2a 00 00 	lea    0x2a00(%rdi),%r12
    4027:	55                   	push   %rbp
    4028:	89 f5                	mov    %esi,%ebp
    402a:	53                   	push   %rbx
    402b:	48 89 fb             	mov    %rdi,%rbx
    402e:	4c 39 a7 00 2a 00 00 	cmp    %r12,0x2a00(%rdi)
    4035:	74 08                	je     403f <efi_pxe_udp_close+0x25>
    4037:	83 cf ff             	or     $0xffffffff,%edi
    403a:	e8 98 19 00 00       	call   59d7 <efi_snp_add_claim>
    403f:	4c 89 e7             	mov    %r12,%rdi
    4042:	e8 3d b9 00 00       	call   f984 <process_del>
    4047:	48 8d bb d0 29 00 00 	lea    0x29d0(%rbx),%rdi
    404e:	89 ee                	mov    %ebp,%esi
    4050:	48 81 c3 f0 29 00 00 	add    $0x29f0,%rbx
    4057:	e8 ec 57 00 00       	call   9848 <intf_restart>
    405c:	48 8b 3b             	mov    (%rbx),%rdi
    405f:	48 8b 2f             	mov    (%rdi),%rbp
    4062:	48 39 df             	cmp    %rbx,%rdi
    4065:	74 1c                	je     4083 <efi_pxe_udp_close+0x69>
    4067:	48 8b 17             	mov    (%rdi),%rdx
    406a:	48 8b 47 08          	mov    0x8(%rdi),%rax
    406e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    4072:	48 89 10             	mov    %rdx,(%rax)
    4075:	e8 1c 5c 00 00       	call   9c96 <free_iob>
    407a:	48 89 ef             	mov    %rbp,%rdi
    407d:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
    4081:	eb df                	jmp    4062 <efi_pxe_udp_close+0x48>
    4083:	5b                   	pop    %rbx
    4084:	5d                   	pop    %rbp
    4085:	41 5c                	pop    %r12
    4087:	c3                   	ret    

0000000000004088 <efi_pxe_udp_scheduled_close>:
    4088:	f3 0f 1e fa          	endbr64 
    408c:	31 f6                	xor    %esi,%esi
    408e:	e9 87 ff ff ff       	jmp    401a <efi_pxe_udp_close>

0000000000004093 <efi_pxe_stop>:
    4093:	f3 0f 1e fa          	endbr64 
    4097:	55                   	push   %rbp
    4098:	48 8d 69 c8          	lea    -0x38(%rcx),%rbp
    409c:	57                   	push   %rdi
    409d:	48 89 ef             	mov    %rbp,%rdi
    40a0:	56                   	push   %rsi
    40a1:	31 f6                	xor    %esi,%esi
    40a3:	c6 41 70 00          	movb   $0x0,0x70(%rcx)
    40a7:	e8 51 f3 ff ff       	call   33fd <efi_pxe_tftp_close>
    40ac:	48 89 ef             	mov    %rbp,%rdi
    40af:	31 f6                	xor    %esi,%esi
    40b1:	e8 64 ff ff ff       	call   401a <efi_pxe_udp_close>
    40b6:	5e                   	pop    %rsi
    40b7:	31 c0                	xor    %eax,%eax
    40b9:	5f                   	pop    %rdi
    40ba:	5d                   	pop    %rbp
    40bb:	c3                   	ret    

00000000000040bc <efi_pxe_dhcp>:
    40bc:	f3 0f 1e fa          	endbr64 
    40c0:	41 54                	push   %r12
    40c2:	4c 8b 61 d8          	mov    -0x28(%rcx),%r12
    40c6:	55                   	push   %rbp
    40c7:	48 89 cd             	mov    %rcx,%rbp
    40ca:	57                   	push   %rdi
    40cb:	bf 01 00 00 00       	mov    $0x1,%edi
    40d0:	56                   	push   %rsi
    40d1:	53                   	push   %rbx
    40d2:	e8 00 19 00 00       	call   59d7 <efi_snp_add_claim>
    40d7:	4c 89 e7             	mov    %r12,%rdi
    40da:	e8 7a a3 00 00       	call   e459 <netdev_configure_all>
    40df:	89 c3                	mov    %eax,%ebx
    40e1:	85 c0                	test   %eax,%eax
    40e3:	75 40                	jne    4125 <efi_pxe_dhcp+0x69>
    40e5:	4c 89 e7             	mov    %r12,%rdi
    40e8:	e8 ba a3 00 00       	call   e4a7 <netdev_configuration_in_progress>
    40ed:	85 c0                	test   %eax,%eax
    40ef:	74 07                	je     40f8 <efi_pxe_dhcp+0x3c>
    40f1:	e8 b6 b8 00 00       	call   f9ac <step>
    40f6:	eb ed                	jmp    40e5 <efi_pxe_dhcp+0x29>
    40f8:	4c 89 e7             	mov    %r12,%rdi
    40fb:	e8 e9 a3 00 00       	call   e4e9 <netdev_configuration_ok>
    4100:	85 c0                	test   %eax,%eax
    4102:	75 07                	jne    410b <efi_pxe_dhcp+0x4f>
    4104:	bb 6e 1f b5 b3       	mov    $0xb3b51f6e,%ebx
    4109:	eb 1a                	jmp    4125 <efi_pxe_dhcp+0x69>
    410b:	48 83 ed 38          	sub    $0x38,%rbp
    410f:	48 89 ef             	mov    %rbp,%rdi
    4112:	e8 40 f2 ff ff       	call   3357 <efi_pxe_ip>
    4117:	89 c3                	mov    %eax,%ebx
    4119:	85 c0                	test   %eax,%eax
    411b:	75 08                	jne    4125 <efi_pxe_dhcp+0x69>
    411d:	48 89 ef             	mov    %rbp,%rdi
    4120:	e8 1d f8 ff ff       	call   3942 <efi_pxe_fake_all>
    4125:	83 cf ff             	or     $0xffffffff,%edi
    4128:	f7 db                	neg    %ebx
    412a:	e8 a8 18 00 00       	call   59d7 <efi_snp_add_claim>
    412f:	48 89 d8             	mov    %rbx,%rax
    4132:	ba 01 00 00 00       	mov    $0x1,%edx
    4137:	83 e3 7f             	and    $0x7f,%ebx
    413a:	48 c1 e0 38          	shl    $0x38,%rax
    413e:	48 c1 e2 3f          	shl    $0x3f,%rdx
    4142:	48 21 d0             	and    %rdx,%rax
    4145:	48 09 d8             	or     %rbx,%rax
    4148:	5b                   	pop    %rbx
    4149:	5e                   	pop    %rsi
    414a:	5f                   	pop    %rdi
    414b:	5d                   	pop    %rbp
    414c:	41 5c                	pop    %r12
    414e:	c3                   	ret    

000000000000414f <efi_apple_get_dhcp_response>:
    414f:	f3 0f 1e fa          	endbr64 
    4153:	48 b8 05 00 00 00 00 	movabs $0x8000000000000005,%rax
    415a:	00 00 80 
    415d:	57                   	push   %rdi
    415e:	56                   	push   %rsi
    415f:	53                   	push   %rbx
    4160:	48 81 3a bf 05 00 00 	cmpq   $0x5bf,(%rdx)
    4167:	48 89 d3             	mov    %rdx,%rbx
    416a:	76 16                	jbe    4182 <efi_apple_get_dhcp_response+0x33>
    416c:	4c 89 c7             	mov    %r8,%rdi
    416f:	48 8d b1 3c dd ff ff 	lea    -0x22c4(%rcx),%rsi
    4176:	ba c0 05 00 00       	mov    $0x5c0,%edx
    417b:	e8 8d 31 01 00       	call   1730d <__memcpy>
    4180:	31 c0                	xor    %eax,%eax
    4182:	48 c7 03 c0 05 00 00 	movq   $0x5c0,(%rbx)
    4189:	5b                   	pop    %rbx
    418a:	5e                   	pop    %rsi
    418b:	5f                   	pop    %rdi
    418c:	c3                   	ret    

000000000000418d <efi_pxe_install>:
    418d:	f3 0f 1e fa          	endbr64 
    4191:	41 57                	push   %r15
    4193:	41 56                	push   %r14
    4195:	41 55                	push   %r13
    4197:	41 54                	push   %r12
    4199:	55                   	push   %rbp
    419a:	53                   	push   %rbx
    419b:	48 89 f3             	mov    %rsi,%rbx
    419e:	48 83 ec 28          	sub    $0x28,%rsp
    41a2:	48 8b 05 c7 5d 02 00 	mov    0x25dc7(%rip),%rax        # 29f70 <__stack_chk_guard>
    41a9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    41ae:	48 8b 05 e3 5d 02 00 	mov    0x25de3(%rip),%rax        # 29f98 <efi_systab>
    41b5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    41ba:	bf 02 00 00 00       	mov    $0x2,%edi
    41bf:	4c 8b 68 60          	mov    0x60(%rax),%r13
    41c3:	e8 63 0c 01 00       	call   14e2b <tcpip_net_protocol>
    41c8:	bf 20 2a 00 00       	mov    $0x2a20,%edi
    41cd:	49 89 c4             	mov    %rax,%r12
    41d0:	e8 85 84 00 00       	call   c65a <zalloc>
    41d5:	48 85 c0             	test   %rax,%rax
    41d8:	75 0b                	jne    41e5 <efi_pxe_install+0x58>
    41da:	41 bc 77 1f b5 ce    	mov    $0xceb51f77,%r12d
    41e0:	e9 9d 01 00 00       	jmp    4382 <efi_pxe_install+0x1f5>
    41e5:	48 89 c5             	mov    %rax,%rbp
    41e8:	48 8d 05 64 f2 ff ff 	lea    -0xd9c(%rip),%rax        # 3453 <efi_pxe_free>
    41ef:	48 89 df             	mov    %rbx,%rdi
    41f2:	48 89 45 08          	mov    %rax,0x8(%rbp)
    41f6:	4c 8d 75 38          	lea    0x38(%rbp),%r14
    41fa:	4c 8d bd 60 29 00 00 	lea    0x2960(%rbp),%r15
    4201:	e8 2c bc 00 00       	call   fe32 <ref_increment>
    4206:	48 8d 43 34          	lea    0x34(%rbx),%rax
    420a:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    420e:	4c 89 f7             	mov    %r14,%rdi
    4211:	48 89 45 18          	mov    %rax,0x18(%rbp)
    4215:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    421a:	ba 70 00 00 00       	mov    $0x70,%edx
    421f:	48 8d 35 da 0b 02 00 	lea    0x20bda(%rip),%rsi        # 24e00 <efi_pxe_base_code_protocol>
    4226:	48 89 45 30          	mov    %rax,0x30(%rbp)
    422a:	e8 de 30 01 00       	call   1730d <__memcpy>
    422f:	48 8d 85 a8 00 00 00 	lea    0xa8(%rbp),%rax
    4236:	4c 89 ff             	mov    %r15,%rdi
    4239:	48 8d 35 a0 0b 02 00 	lea    0x20ba0(%rip),%rsi        # 24de0 <efi_apple_net_boot_protocol>
    4240:	48 89 85 a0 00 00 00 	mov    %rax,0xa0(%rbp)
    4247:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    4248:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    4249:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    424a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    424b:	48 8d 05 de 0c 02 00 	lea    0x20cde(%rip),%rax        # 24f30 <efi_pxe_buf_operations>
    4252:	48 8d 15 87 0c 02 00 	lea    0x20c87(%rip),%rdx        # 24ee0 <efi_pxe_tftp_desc>
    4259:	48 89 ad a8 29 00 00 	mov    %rbp,0x29a8(%rbp)
    4260:	48 89 85 98 29 00 00 	mov    %rax,0x2998(%rbp)
    4267:	48 8d 05 72 21 02 00 	lea    0x22172(%rip),%rax        # 263e0 <null_intf>
    426e:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
    4275:	48 89 85 a0 29 00 00 	mov    %rax,0x29a0(%rbp)
    427c:	48 8d 35 ad 50 02 00 	lea    0x250ad(%rip),%rsi        # 29330 <ip_setting>
    4283:	48 89 85 d0 29 00 00 	mov    %rax,0x29d0(%rbp)
    428a:	48 8d 05 0f 0c 02 00 	lea    0x20c0f(%rip),%rax        # 24ea0 <efi_pxe_udp_desc>
    4291:	48 89 85 e0 29 00 00 	mov    %rax,0x29e0(%rbp)
    4298:	48 89 85 e8 29 00 00 	mov    %rax,0x29e8(%rbp)
    429f:	48 8d 85 f0 29 00 00 	lea    0x29f0(%rbp),%rax
    42a6:	48 89 85 f0 29 00 00 	mov    %rax,0x29f0(%rbp)
    42ad:	48 89 85 f8 29 00 00 	mov    %rax,0x29f8(%rbp)
    42b4:	48 8d 85 00 2a 00 00 	lea    0x2a00(%rbp),%rax
    42bb:	48 89 85 00 2a 00 00 	mov    %rax,0x2a00(%rbp)
    42c2:	48 89 85 08 2a 00 00 	mov    %rax,0x2a08(%rbp)
    42c9:	48 8d 05 b0 0b 02 00 	lea    0x20bb0(%rip),%rax        # 24e80 <efi_pxe_process_desc>
    42d0:	48 89 95 b0 29 00 00 	mov    %rdx,0x29b0(%rbp)
    42d7:	48 89 95 b8 29 00 00 	mov    %rdx,0x29b8(%rbp)
    42de:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
    42e3:	48 89 ad d8 29 00 00 	mov    %rbp,0x29d8(%rbp)
    42ea:	48 89 85 10 2a 00 00 	mov    %rax,0x2a10(%rbp)
    42f1:	48 89 ad 18 2a 00 00 	mov    %rbp,0x2a18(%rbp)
    42f8:	e8 5f db 00 00       	call   11e5c <fetch_ipv4_setting>
    42fd:	83 7c 24 14 00       	cmpl   $0x0,0x14(%rsp)
    4302:	4c 89 f1             	mov    %r14,%rcx
    4305:	0f 94 c0             	sete   %al
    4308:	31 d2                	xor    %edx,%edx
    430a:	4d 85 e4             	test   %r12,%r12
    430d:	0f 95 c2             	setne  %dl
    4310:	48 83 ec 20          	sub    $0x20,%rsp
    4314:	21 c2                	and    %eax,%edx
    4316:	e8 7e f6 ff ff       	call   3999 <efi_pxe_start>
    431b:	48 83 c4 20          	add    $0x20,%rsp
    431f:	4d 89 f0             	mov    %r14,%r8
    4322:	4c 8d 0d 17 07 02 00 	lea    0x20717(%rip),%r9        # 24a40 <efi_apple_net_boot_protocol_guid>
    4329:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    432e:	6a 00                	push   $0x0
    4330:	48 8d 15 59 01 02 00 	lea    0x20159(%rip),%rdx        # 24490 <dummy_pxe_base_code_protocol_guid>
    4337:	41 57                	push   %r15
    4339:	48 83 ec 20          	sub    $0x20,%rsp
    433d:	41 ff 95 48 01 00 00 	call   *0x148(%r13)
    4344:	48 83 c4 30          	add    $0x30,%rsp
    4348:	48 85 c0             	test   %rax,%rax
    434b:	74 22                	je     436f <efi_pxe_install+0x1e2>
    434d:	49 89 c4             	mov    %rax,%r12
    4350:	48 89 ef             	mov    %rbp,%rdi
    4353:	49 c1 ec 38          	shr    $0x38,%r12
    4357:	41 09 c4             	or     %eax,%r12d
    435a:	45 0f b6 e4          	movzbl %r12b,%r12d
    435e:	41 81 cc 00 e0 4a 7f 	or     $0x7f4ae000,%r12d
    4365:	41 f7 dc             	neg    %r12d
    4368:	e8 d1 ba 00 00       	call   fe3e <ref_decrement>
    436d:	eb 13                	jmp    4382 <efi_pxe_install+0x1f5>
    436f:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    4373:	48 8d 35 d6 0b 02 00 	lea    0x20bd6(%rip),%rsi        # 24f50 <efi_pxes>
    437a:	45 31 e4             	xor    %r12d,%r12d
    437d:	e8 55 7d 00 00       	call   c0d7 <extern_list_add_tail>
    4382:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4387:	48 2b 05 e2 5b 02 00 	sub    0x25be2(%rip),%rax        # 29f70 <__stack_chk_guard>
    438e:	74 05                	je     4395 <efi_pxe_install+0x208>
    4390:	e8 cb e6 ff ff       	call   2a60 <__stack_chk_fail>
    4395:	48 83 c4 28          	add    $0x28,%rsp
    4399:	44 89 e0             	mov    %r12d,%eax
    439c:	5b                   	pop    %rbx
    439d:	5d                   	pop    %rbp
    439e:	41 5c                	pop    %r12
    43a0:	41 5d                	pop    %r13
    43a2:	41 5e                	pop    %r14
    43a4:	41 5f                	pop    %r15
    43a6:	c3                   	ret    

00000000000043a7 <efi_pxe_uninstall>:
    43a7:	f3 0f 1e fa          	endbr64 
    43ab:	41 54                	push   %r12
    43ad:	49 89 fc             	mov    %rdi,%r12
    43b0:	55                   	push   %rbp
    43b1:	53                   	push   %rbx
    43b2:	48 83 ec 10          	sub    $0x10,%rsp
    43b6:	48 8b 05 93 0b 02 00 	mov    0x20b93(%rip),%rax        # 24f50 <efi_pxes>
    43bd:	48 8d 68 e0          	lea    -0x20(%rax),%rbp
    43c1:	48 8d 05 88 0b 02 00 	lea    0x20b88(%rip),%rax        # 24f50 <efi_pxes>
    43c8:	48 8d 55 20          	lea    0x20(%rbp),%rdx
    43cc:	48 39 c2             	cmp    %rax,%rdx
    43cf:	74 10                	je     43e1 <efi_pxe_uninstall+0x3a>
    43d1:	4c 3b 65 30          	cmp    0x30(%rbp),%r12
    43d5:	74 0c                	je     43e3 <efi_pxe_uninstall+0x3c>
    43d7:	48 8b 6d 20          	mov    0x20(%rbp),%rbp
    43db:	48 83 ed 20          	sub    $0x20,%rbp
    43df:	eb e7                	jmp    43c8 <efi_pxe_uninstall+0x21>
    43e1:	31 ed                	xor    %ebp,%ebp
    43e3:	4d 85 e4             	test   %r12,%r12
    43e6:	74 6d                	je     4455 <efi_pxe_uninstall+0xae>
    43e8:	4c 8d 45 38          	lea    0x38(%rbp),%r8
    43ec:	48 8b 05 a5 5b 02 00 	mov    0x25ba5(%rip),%rax        # 29f98 <efi_systab>
    43f3:	48 83 ec 20          	sub    $0x20,%rsp
    43f7:	4c 89 c1             	mov    %r8,%rcx
    43fa:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    43ff:	48 8b 58 60          	mov    0x60(%rax),%rbx
    4403:	e8 8b fc ff ff       	call   4093 <efi_pxe_stop>
    4408:	48 83 c4 20          	add    $0x20,%rsp
    440c:	48 8d 85 60 29 00 00 	lea    0x2960(%rbp),%rax
    4413:	48 8d 15 76 00 02 00 	lea    0x20076(%rip),%rdx        # 24490 <dummy_pxe_base_code_protocol_guid>
    441a:	6a 00                	push   $0x0
    441c:	4c 89 e1             	mov    %r12,%rcx
    441f:	4c 8d 0d 1a 06 02 00 	lea    0x2061a(%rip),%r9        # 24a40 <efi_apple_net_boot_protocol_guid>
    4426:	50                   	push   %rax
    4427:	48 83 ec 20          	sub    $0x20,%rsp
    442b:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
    4430:	ff 93 50 01 00 00    	call   *0x150(%rbx)
    4436:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    443a:	48 8b 45 28          	mov    0x28(%rbp),%rax
    443e:	48 89 ef             	mov    %rbp,%rdi
    4441:	48 89 42 08          	mov    %rax,0x8(%rdx)
    4445:	48 89 10             	mov    %rdx,(%rax)
    4448:	48 83 c4 40          	add    $0x40,%rsp
    444c:	5b                   	pop    %rbx
    444d:	5d                   	pop    %rbp
    444e:	41 5c                	pop    %r12
    4450:	e9 e9 b9 00 00       	jmp    fe3e <ref_decrement>
    4455:	48 83 c4 10          	add    $0x10,%rsp
    4459:	5b                   	pop    %rbx
    445a:	5d                   	pop    %rbp
    445b:	41 5c                	pop    %r12
    445d:	c3                   	ret    

000000000000445e <efi_snp_receive_filters>:
    445e:	f3 0f 1e fa          	endbr64 
    4462:	31 c0                	xor    %eax,%eax
    4464:	89 c2                	mov    %eax,%edx
    4466:	48 39 54 24 28       	cmp    %rdx,0x28(%rsp)
    446b:	76 04                	jbe    4471 <efi_snp_receive_filters+0x13>
    446d:	ff c0                	inc    %eax
    446f:	eb f3                	jmp    4464 <efi_snp_receive_filters+0x6>
    4471:	31 c0                	xor    %eax,%eax
    4473:	c3                   	ret    

0000000000004474 <efi_snp_nvdata>:
    4474:	f3 0f 1e fa          	endbr64 
    4478:	83 3d e9 56 02 00 00 	cmpl   $0x0,0x256e9(%rip)        # 29b68 <efi_snp_claimed>
    447f:	48 ba 06 00 00 00 00 	movabs $0x8000000000000006,%rdx
    4486:	00 00 80 
    4489:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    4490:	00 00 80 
    4493:	48 0f 45 c2          	cmovne %rdx,%rax
    4497:	c3                   	ret    

0000000000004498 <efi_snp_get_driver_name>:
    4498:	f3 0f 1e fa          	endbr64 
    449c:	48 83 c1 70          	add    $0x70,%rcx
    44a0:	31 c0                	xor    %eax,%eax
    44a2:	49 89 08             	mov    %rcx,(%r8)
    44a5:	c3                   	ret    

00000000000044a6 <efi_snp_get_controller_name>:
    44a6:	f3 0f 1e fa          	endbr64 
    44aa:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    44af:	48 81 c1 90 00 00 00 	add    $0x90,%rcx
    44b6:	48 89 08             	mov    %rcx,(%rax)
    44b9:	31 c0                	xor    %eax,%eax
    44bb:	c3                   	ret    

00000000000044bc <efi_snp_demux>:
    44bc:	48 8b 05 3d 0b 02 00 	mov    0x20b3d(%rip),%rax        # 25000 <efi_snp_devices>
    44c3:	48 8d 15 36 0b 02 00 	lea    0x20b36(%rip),%rdx        # 25000 <efi_snp_devices>
    44ca:	48 39 d0             	cmp    %rdx,%rax
    44cd:	74 0b                	je     44da <efi_snp_demux+0x1e>
    44cf:	48 39 78 10          	cmp    %rdi,0x10(%rax)
    44d3:	74 07                	je     44dc <efi_snp_demux+0x20>
    44d5:	48 8b 00             	mov    (%rax),%rax
    44d8:	eb f0                	jmp    44ca <efi_snp_demux+0xe>
    44da:	31 c0                	xor    %eax,%eax
    44dc:	c3                   	ret    

00000000000044dd <efi_snp_poll>:
    44dd:	41 55                	push   %r13
    44df:	41 54                	push   %r12
    44e1:	55                   	push   %rbp
    44e2:	53                   	push   %rbx
    44e3:	48 89 fb             	mov    %rdi,%rbx
    44e6:	52                   	push   %rdx
    44e7:	48 8b 05 aa 5a 02 00 	mov    0x25aaa(%rip),%rax        # 29f98 <efi_systab>
    44ee:	4c 8d a3 48 04 00 00 	lea    0x448(%rbx),%r12
    44f5:	4c 8d ab 98 00 00 00 	lea    0x98(%rbx),%r13
    44fc:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    4500:	48 8b 68 60          	mov    0x60(%rax),%rbp
    4504:	e8 16 97 00 00       	call   dc1f <netdev_poll>
    4509:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    450d:	e8 22 97 00 00       	call   dc34 <netdev_rx_dequeue>
    4512:	48 89 c7             	mov    %rax,%rdi
    4515:	48 85 c0             	test   %rax,%rax
    4518:	74 1f                	je     4539 <efi_snp_poll+0x5c>
    451a:	4c 89 e6             	mov    %r12,%rsi
    451d:	e8 b5 7b 00 00       	call   c0d7 <extern_list_add_tail>
    4522:	48 83 ec 20          	sub    $0x20,%rsp
    4526:	83 8b 3c 03 00 00 01 	orl    $0x1,0x33c(%rbx)
    452d:	4c 89 e9             	mov    %r13,%rcx
    4530:	ff 55 68             	call   *0x68(%rbp)
    4533:	48 83 c4 20          	add    $0x20,%rsp
    4537:	eb d0                	jmp    4509 <efi_snp_poll+0x2c>
    4539:	58                   	pop    %rax
    453a:	5b                   	pop    %rbx
    453b:	5d                   	pop    %rbp
    453c:	41 5c                	pop    %r12
    453e:	41 5d                	pop    %r13
    4540:	c3                   	ret    

0000000000004541 <efi_snp_get_status>:
    4541:	f3 0f 1e fa          	endbr64 
    4545:	83 3d 1c 56 02 00 00 	cmpl   $0x0,0x2561c(%rip)        # 29b68 <efi_snp_claimed>
    454c:	0f 85 9d 00 00 00    	jne    45ef <efi_snp_get_status+0xae>
    4552:	41 56                	push   %r14
    4554:	41 55                	push   %r13
    4556:	41 54                	push   %r12
    4558:	49 89 d4             	mov    %rdx,%r12
    455b:	55                   	push   %rbp
    455c:	4c 89 c5             	mov    %r8,%rbp
    455f:	57                   	push   %rdi
    4560:	48 8d 79 d8          	lea    -0x28(%rcx),%rdi
    4564:	56                   	push   %rsi
    4565:	53                   	push   %rbx
    4566:	48 89 cb             	mov    %rcx,%rbx
    4569:	b9 08 00 00 00       	mov    $0x8,%ecx
    456e:	48 83 ec 20          	sub    $0x20,%rsp
    4572:	48 8b 05 1f 5a 02 00 	mov    0x25a1f(%rip),%rax        # 29f98 <efi_systab>
    4579:	4c 8b 70 60          	mov    0x60(%rax),%r14
    457d:	41 ff 56 18          	call   *0x18(%r14)
    4581:	49 89 c5             	mov    %rax,%r13
    4584:	e8 54 ff ff ff       	call   44dd <efi_snp_poll>
    4589:	4d 85 e4             	test   %r12,%r12
    458c:	74 14                	je     45a2 <efi_snp_get_status+0x61>
    458e:	8b 83 14 03 00 00    	mov    0x314(%rbx),%eax
    4594:	41 89 04 24          	mov    %eax,(%r12)
    4598:	c7 83 14 03 00 00 00 	movl   $0x0,0x314(%rbx)
    459f:	00 00 00 
    45a2:	48 85 ed             	test   %rbp,%rbp
    45a5:	74 30                	je     45d7 <efi_snp_get_status+0x96>
    45a7:	8b 93 1c 04 00 00    	mov    0x41c(%rbx),%edx
    45ad:	39 93 18 04 00 00    	cmp    %edx,0x418(%rbx)
    45b3:	74 1a                	je     45cf <efi_snp_get_status+0x8e>
    45b5:	8d 42 01             	lea    0x1(%rdx),%eax
    45b8:	83 e2 1f             	and    $0x1f,%edx
    45bb:	89 83 1c 04 00 00    	mov    %eax,0x41c(%rbx)
    45c1:	48 8b 84 d3 18 03 00 	mov    0x318(%rbx,%rdx,8),%rax
    45c8:	00 
    45c9:	48 89 45 00          	mov    %rax,0x0(%rbp)
    45cd:	eb 08                	jmp    45d7 <efi_snp_get_status+0x96>
    45cf:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    45d6:	00 
    45d7:	4c 89 e9             	mov    %r13,%rcx
    45da:	41 ff 56 20          	call   *0x20(%r14)
    45de:	48 83 c4 20          	add    $0x20,%rsp
    45e2:	31 c0                	xor    %eax,%eax
    45e4:	5b                   	pop    %rbx
    45e5:	5e                   	pop    %rsi
    45e6:	5f                   	pop    %rdi
    45e7:	5d                   	pop    %rbp
    45e8:	41 5c                	pop    %r12
    45ea:	41 5d                	pop    %r13
    45ec:	41 5e                	pop    %r14
    45ee:	c3                   	ret    
    45ef:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    45f6:	00 00 80 
    45f9:	c3                   	ret    

00000000000045fa <efi_snp_wait_for_packet>:
    45fa:	f3 0f 1e fa          	endbr64 
    45fe:	48 8b 42 10          	mov    0x10(%rdx),%rax
    4602:	f6 80 80 00 00 00 01 	testb  $0x1,0x80(%rax)
    4609:	74 42                	je     464d <efi_snp_wait_for_packet+0x53>
    460b:	83 3d 56 55 02 00 00 	cmpl   $0x0,0x25556(%rip)        # 29b68 <efi_snp_claimed>
    4612:	75 39                	jne    464d <efi_snp_wait_for_packet+0x53>
    4614:	41 54                	push   %r12
    4616:	b9 08 00 00 00       	mov    $0x8,%ecx
    461b:	57                   	push   %rdi
    461c:	48 89 d7             	mov    %rdx,%rdi
    461f:	56                   	push   %rsi
    4620:	53                   	push   %rbx
    4621:	48 83 ec 28          	sub    $0x28,%rsp
    4625:	48 8b 05 6c 59 02 00 	mov    0x2596c(%rip),%rax        # 29f98 <efi_systab>
    462c:	48 8b 58 60          	mov    0x60(%rax),%rbx
    4630:	ff 53 18             	call   *0x18(%rbx)
    4633:	49 89 c4             	mov    %rax,%r12
    4636:	e8 a2 fe ff ff       	call   44dd <efi_snp_poll>
    463b:	48 8b 43 20          	mov    0x20(%rbx),%rax
    463f:	48 83 c4 28          	add    $0x28,%rsp
    4643:	4c 89 e1             	mov    %r12,%rcx
    4646:	5b                   	pop    %rbx
    4647:	5e                   	pop    %rsi
    4648:	5f                   	pop    %rdi
    4649:	41 5c                	pop    %r12
    464b:	ff e0                	jmp    *%rax
    464d:	c3                   	ret    

000000000000464e <efi_snp_mcast_ip_to_mac>:
    464e:	f3 0f 1e fa          	endbr64 
    4652:	41 55                	push   %r13
    4654:	41 54                	push   %r12
    4656:	4d 89 cc             	mov    %r9,%r12
    4659:	55                   	push   %rbp
    465a:	4c 89 c5             	mov    %r8,%rbp
    465d:	57                   	push   %rdi
    465e:	56                   	push   %rsi
    465f:	53                   	push   %rbx
    4660:	89 d3                	mov    %edx,%ebx
    4662:	41 52                	push   %r10
    4664:	48 8b 41 e8          	mov    -0x18(%rcx),%rax
    4668:	4c 8b 68 50          	mov    0x50(%rax),%r13
    466c:	84 d2                	test   %dl,%dl
    466e:	75 08                	jne    4678 <efi_snp_mcast_ip_to_mac+0x2a>
    4670:	41 8b 38             	mov    (%r8),%edi
    4673:	e8 47 5f 00 00       	call   a5bf <inet_ntoa>
    4678:	83 3d e9 54 02 00 00 	cmpl   $0x0,0x254e9(%rip)        # 29b68 <efi_snp_claimed>
    467f:	49 ba 06 00 00 00 00 	movabs $0x8000000000000006,%r10
    4686:	00 00 80 
    4689:	75 34                	jne    46bf <efi_snp_mcast_ip_to_mac+0x71>
    468b:	80 fb 01             	cmp    $0x1,%bl
    468e:	4c 89 e2             	mov    %r12,%rdx
    4691:	48 89 ee             	mov    %rbp,%rsi
    4694:	19 ff                	sbb    %edi,%edi
    4696:	83 c7 02             	add    $0x2,%edi
    4699:	41 ff 55 28          	call   *0x28(%r13)
    469d:	45 31 d2             	xor    %r10d,%r10d
    46a0:	85 c0                	test   %eax,%eax
    46a2:	74 1b                	je     46bf <efi_snp_mcast_ip_to_mac+0x71>
    46a4:	f7 d8                	neg    %eax
    46a6:	ba 01 00 00 00       	mov    $0x1,%edx
    46ab:	49 89 c2             	mov    %rax,%r10
    46ae:	48 c1 e2 3f          	shl    $0x3f,%rdx
    46b2:	83 e0 7f             	and    $0x7f,%eax
    46b5:	49 c1 e2 38          	shl    $0x38,%r10
    46b9:	49 21 d2             	and    %rdx,%r10
    46bc:	49 09 c2             	or     %rax,%r10
    46bf:	5a                   	pop    %rdx
    46c0:	4c 89 d0             	mov    %r10,%rax
    46c3:	5b                   	pop    %rbx
    46c4:	5e                   	pop    %rsi
    46c5:	5f                   	pop    %rdi
    46c6:	5d                   	pop    %rbp
    46c7:	41 5c                	pop    %r12
    46c9:	41 5d                	pop    %r13
    46cb:	c3                   	ret    

00000000000046cc <efi_snp_station_address>:
    46cc:	f3 0f 1e fa          	endbr64 
    46d0:	83 3d 91 54 02 00 00 	cmpl   $0x0,0x25491(%rip)        # 29b68 <efi_snp_claimed>
    46d7:	75 2d                	jne    4706 <efi_snp_station_address+0x3a>
    46d9:	57                   	push   %rdi
    46da:	56                   	push   %rsi
    46db:	4c 89 c6             	mov    %r8,%rsi
    46de:	41 51                	push   %r9
    46e0:	84 d2                	test   %dl,%dl
    46e2:	74 07                	je     46eb <efi_snp_station_address+0x1f>
    46e4:	48 8d b1 e8 02 00 00 	lea    0x2e8(%rcx),%rsi
    46eb:	48 8b 79 e8          	mov    -0x18(%rcx),%rdi
    46ef:	48 8b 47 50          	mov    0x50(%rdi),%rax
    46f3:	48 83 c7 60          	add    $0x60,%rdi
    46f7:	0f b6 50 43          	movzbl 0x43(%rax),%edx
    46fb:	e8 0d 2c 01 00       	call   1730d <__memcpy>
    4700:	5a                   	pop    %rdx
    4701:	31 c0                	xor    %eax,%eax
    4703:	5e                   	pop    %rsi
    4704:	5f                   	pop    %rdi
    4705:	c3                   	ret    
    4706:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    470d:	00 00 80 
    4710:	c3                   	ret    

0000000000004711 <efi_snp_statistics>:
    4711:	f3 0f 1e fa          	endbr64 
    4715:	49 ba 06 00 00 00 00 	movabs $0x8000000000000006,%r10
    471c:	00 00 80 
    471f:	55                   	push   %rbp
    4720:	57                   	push   %rdi
    4721:	56                   	push   %rsi
    4722:	53                   	push   %rbx
    4723:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    472a:	48 8b 05 3f 58 02 00 	mov    0x2583f(%rip),%rax        # 29f70 <__stack_chk_guard>
    4731:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
    4738:	00 
    4739:	31 c0                	xor    %eax,%eax
    473b:	83 3d 26 54 02 00 00 	cmpl   $0x0,0x25426(%rip)        # 29b68 <efi_snp_claimed>
    4742:	0f 85 a7 00 00 00    	jne    47ef <efi_snp_statistics+0xde>
    4748:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    474d:	48 89 cb             	mov    %rcx,%rbx
    4750:	89 d5                	mov    %edx,%ebp
    4752:	b9 d0 00 00 00       	mov    $0xd0,%ecx
    4757:	48 89 f7             	mov    %rsi,%rdi
    475a:	f3 aa                	rep stos %al,%es:(%rdi)
    475c:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    4760:	8b 8a 18 01 00 00    	mov    0x118(%rdx),%ecx
    4766:	8b ba 1c 01 00 00    	mov    0x11c(%rdx),%edi
    476c:	48 89 c8             	mov    %rcx,%rax
    476f:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)
    4774:	8b 8a 40 01 00 00    	mov    0x140(%rdx),%ecx
    477a:	01 f8                	add    %edi,%eax
    477c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    4781:	8b ba 44 01 00 00    	mov    0x144(%rdx),%edi
    4787:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    478c:	48 89 c8             	mov    %rcx,%rax
    478f:	01 f8                	add    %edi,%eax
    4791:	49 81 38 d0 00 00 00 	cmpq   $0xd0,(%r8)
    4798:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    479d:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    47a2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    47a7:	76 07                	jbe    47b0 <efi_snp_statistics+0x9f>
    47a9:	49 c7 00 d0 00 00 00 	movq   $0xd0,(%r8)
    47b0:	4d 85 c9             	test   %r9,%r9
    47b3:	74 0b                	je     47c0 <efi_snp_statistics+0xaf>
    47b5:	49 8b 10             	mov    (%r8),%rdx
    47b8:	4c 89 cf             	mov    %r9,%rdi
    47bb:	e8 4d 2b 01 00       	call   1730d <__memcpy>
    47c0:	45 31 d2             	xor    %r10d,%r10d
    47c3:	40 84 ed             	test   %bpl,%bpl
    47c6:	74 27                	je     47ef <efi_snp_statistics+0xde>
    47c8:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    47cc:	ba 28 00 00 00       	mov    $0x28,%edx
    47d1:	48 89 d1             	mov    %rdx,%rcx
    47d4:	48 8d b8 18 01 00 00 	lea    0x118(%rax),%rdi
    47db:	31 c0                	xor    %eax,%eax
    47dd:	f3 aa                	rep stos %al,%es:(%rdi)
    47df:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    47e3:	48 89 d1             	mov    %rdx,%rcx
    47e6:	48 81 c7 40 01 00 00 	add    $0x140,%rdi
    47ed:	f3 aa                	rep stos %al,%es:(%rdi)
    47ef:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
    47f6:	00 
    47f7:	48 2b 05 72 57 02 00 	sub    0x25772(%rip),%rax        # 29f70 <__stack_chk_guard>
    47fe:	74 05                	je     4805 <efi_snp_statistics+0xf4>
    4800:	e8 5b e2 ff ff       	call   2a60 <__stack_chk_fail>
    4805:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    480c:	4c 89 d0             	mov    %r10,%rax
    480f:	5b                   	pop    %rbx
    4810:	5e                   	pop    %rsi
    4811:	5f                   	pop    %rdi
    4812:	5d                   	pop    %rbp
    4813:	c3                   	ret    

0000000000004814 <efi_snp_receive>:
    4814:	f3 0f 1e fa          	endbr64 
    4818:	41 57                	push   %r15
    481a:	41 56                	push   %r14
    481c:	41 55                	push   %r13
    481e:	41 54                	push   %r12
    4820:	55                   	push   %rbp
    4821:	57                   	push   %rdi
    4822:	56                   	push   %rsi
    4823:	53                   	push   %rbx
    4824:	48 83 ec 78          	sub    $0x78,%rsp
    4828:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
    482f:	00 
    4830:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    4835:	4c 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%r15
    483c:	00 
    483d:	4c 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%r14
    4844:	00 
    4845:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    484a:	48 8b 05 1f 57 02 00 	mov    0x2571f(%rip),%rax        # 29f70 <__stack_chk_guard>
    4851:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    4856:	31 c0                	xor    %eax,%eax
    4858:	83 3d 09 53 02 00 00 	cmpl   $0x0,0x25309(%rip)        # 29b68 <efi_snp_claimed>
    485f:	74 0a                	je     486b <efi_snp_receive+0x57>
    4861:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    4866:	e9 73 01 00 00       	jmp    49de <efi_snp_receive+0x1ca>
    486b:	48 8b 05 26 57 02 00 	mov    0x25726(%rip),%rax        # 29f98 <efi_systab>
    4872:	48 89 cb             	mov    %rcx,%rbx
    4875:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    487a:	4c 89 c5             	mov    %r8,%rbp
    487d:	48 8d 7b d8          	lea    -0x28(%rbx),%rdi
    4881:	48 8b 40 60          	mov    0x60(%rax),%rax
    4885:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    488a:	48 8b 41 e8          	mov    -0x18(%rcx),%rax
    488e:	b9 08 00 00 00       	mov    $0x8,%ecx
    4893:	4c 8b 60 50          	mov    0x50(%rax),%r12
    4897:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    489c:	ff 50 18             	call   *0x18(%rax)
    489f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    48a4:	e8 34 fc ff ff       	call   44dd <efi_snp_poll>
    48a9:	4c 8b ab 20 04 00 00 	mov    0x420(%rbx),%r13
    48b0:	48 8d 83 20 04 00 00 	lea    0x420(%rbx),%rax
    48b7:	49 39 c5             	cmp    %rax,%r13
    48ba:	74 0a                	je     48c6 <efi_snp_receive+0xb2>
    48bc:	4d 85 ed             	test   %r13,%r13
    48bf:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
    48c4:	75 0a                	jne    48d0 <efi_snp_receive+0xbc>
    48c6:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    48cb:	e9 01 01 00 00       	jmp    49d1 <efi_snp_receive+0x1bd>
    48d0:	49 8b 45 08          	mov    0x8(%r13),%rax
    48d4:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    48d9:	48 39 d0             	cmp    %rdx,%rax
    48dc:	76 0a                	jbe    48e8 <efi_snp_receive+0xd4>
    48de:	8a 15 46 fc 01 00    	mov    0x1fc46(%rip),%dl        # 2452a <loop>
    48e4:	84 d2                	test   %dl,%dl
    48e6:	75 f6                	jne    48de <efi_snp_receive+0xca>
    48e8:	49 8b 55 00          	mov    0x0(%r13),%rdx
    48ec:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    48f1:	48 39 ca             	cmp    %rcx,%rdx
    48f4:	76 0a                	jbe    4900 <efi_snp_receive+0xec>
    48f6:	8a 0d 2e fc 01 00    	mov    0x1fc2e(%rip),%cl        # 2452a <loop>
    48fc:	84 c9                	test   %cl,%cl
    48fe:	75 f6                	jne    48f6 <efi_snp_receive+0xe2>
    4900:	48 89 42 08          	mov    %rax,0x8(%rdx)
    4904:	49 8b 75 18          	mov    0x18(%r13),%rsi
    4908:	4c 89 cf             	mov    %r9,%rdi
    490b:	48 89 10             	mov    %rdx,(%rax)
    490e:	49 8b 45 20          	mov    0x20(%r13),%rax
    4912:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    4916:	48 29 f0             	sub    %rsi,%rax
    4919:	48 39 d0             	cmp    %rdx,%rax
    491c:	48 0f 46 d0          	cmovbe %rax,%rdx
    4920:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    4925:	e8 e3 29 01 00       	call   1730d <__memcpy>
    492a:	49 8b 45 20          	mov    0x20(%r13),%rax
    492e:	49 2b 45 18          	sub    0x18(%r13),%rax
    4932:	4c 89 ee             	mov    %r13,%rsi
    4935:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    4939:	48 89 45 00          	mov    %rax,0x0(%rbp)
    493d:	48 8d 4c 24 60       	lea    0x60(%rsp),%rcx
    4942:	48 8d 54 24 58       	lea    0x58(%rsp),%rdx
    4947:	4c 8d 4c 24 54       	lea    0x54(%rsp),%r9
    494c:	4c 8d 44 24 52       	lea    0x52(%rsp),%r8
    4951:	41 ff 54 24 10       	call   *0x10(%r12)
    4956:	89 c3                	mov    %eax,%ebx
    4958:	85 c0                	test   %eax,%eax
    495a:	75 6d                	jne    49c9 <efi_snp_receive+0x1b5>
    495c:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
    4962:	74 0e                	je     4972 <efi_snp_receive+0x15e>
    4964:	41 0f b6 44 24 44    	movzbl 0x44(%r12),%eax
    496a:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    496f:	48 89 06             	mov    %rax,(%rsi)
    4972:	4d 85 ff             	test   %r15,%r15
    4975:	74 13                	je     498a <efi_snp_receive+0x176>
    4977:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    497d:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    4982:	4c 89 ff             	mov    %r15,%rdi
    4985:	e8 83 29 01 00       	call   1730d <__memcpy>
    498a:	4d 85 f6             	test   %r14,%r14
    498d:	74 13                	je     49a2 <efi_snp_receive+0x18e>
    498f:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    4995:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    499a:	4c 89 f7             	mov    %r14,%rdi
    499d:	e8 6b 29 01 00       	call   1730d <__memcpy>
    49a2:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    49a8:	74 0f                	je     49b9 <efi_snp_receive+0x1a5>
    49aa:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    49af:	66 8b 44 24 52       	mov    0x52(%rsp),%ax
    49b4:	86 c4                	xchg   %al,%ah
    49b6:	66 89 06             	mov    %ax,(%rsi)
    49b9:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    49be:	48 39 45 00          	cmp    %rax,0x0(%rbp)
    49c2:	74 05                	je     49c9 <efi_snp_receive+0x1b5>
    49c4:	bb 7b 1f ee b9       	mov    $0xb9ee1f7b,%ebx
    49c9:	4c 89 ef             	mov    %r13,%rdi
    49cc:	e8 c5 52 00 00       	call   9c96 <free_iob>
    49d1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    49d6:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    49db:	ff 50 20             	call   *0x20(%rax)
    49de:	f7 db                	neg    %ebx
    49e0:	ba 01 00 00 00       	mov    $0x1,%edx
    49e5:	48 89 d8             	mov    %rbx,%rax
    49e8:	48 c1 e2 3f          	shl    $0x3f,%rdx
    49ec:	83 e3 7f             	and    $0x7f,%ebx
    49ef:	48 c1 e0 38          	shl    $0x38,%rax
    49f3:	48 21 d0             	and    %rdx,%rax
    49f6:	48 09 d8             	or     %rbx,%rax
    49f9:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    49fe:	48 2b 15 6b 55 02 00 	sub    0x2556b(%rip),%rdx        # 29f70 <__stack_chk_guard>
    4a05:	74 05                	je     4a0c <efi_snp_receive+0x1f8>
    4a07:	e8 54 e0 ff ff       	call   2a60 <__stack_chk_fail>
    4a0c:	48 83 c4 78          	add    $0x78,%rsp
    4a10:	5b                   	pop    %rbx
    4a11:	5e                   	pop    %rsi
    4a12:	5f                   	pop    %rdi
    4a13:	5d                   	pop    %rbp
    4a14:	41 5c                	pop    %r12
    4a16:	41 5d                	pop    %r13
    4a18:	41 5e                	pop    %r14
    4a1a:	41 5f                	pop    %r15
    4a1c:	c3                   	ret    

0000000000004a1d <efi_snp_transmit>:
    4a1d:	f3 0f 1e fa          	endbr64 
    4a21:	41 57                	push   %r15
    4a23:	41 56                	push   %r14
    4a25:	41 55                	push   %r13
    4a27:	41 54                	push   %r12
    4a29:	55                   	push   %rbp
    4a2a:	57                   	push   %rdi
    4a2b:	56                   	push   %rsi
    4a2c:	53                   	push   %rbx
    4a2d:	48 83 ec 28          	sub    $0x28,%rsp
    4a31:	48 8b 05 60 55 02 00 	mov    0x25560(%rip),%rax        # 29f98 <efi_systab>
    4a38:	83 3d 29 51 02 00 00 	cmpl   $0x0,0x25129(%rip)        # 29b68 <efi_snp_claimed>
    4a3f:	4c 89 8c 24 88 00 00 	mov    %r9,0x88(%rsp)
    4a46:	00 
    4a47:	4c 8b 70 60          	mov    0x60(%rax),%r14
    4a4b:	48 8b 41 e8          	mov    -0x18(%rcx),%rax
    4a4f:	4c 8b 68 50          	mov    0x50(%rax),%r13
    4a53:	74 0a                	je     4a5f <efi_snp_transmit+0x42>
    4a55:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    4a5a:	e9 92 01 00 00       	jmp    4bf1 <efi_snp_transmit+0x1d4>
    4a5f:	48 89 d3             	mov    %rdx,%rbx
    4a62:	4c 89 84 24 80 00 00 	mov    %r8,0x80(%rsp)
    4a69:	00 
    4a6a:	48 89 cd             	mov    %rcx,%rbp
    4a6d:	b9 08 00 00 00       	mov    $0x8,%ecx
    4a72:	41 ff 56 18          	call   *0x18(%r14)
    4a76:	48 85 db             	test   %rbx,%rbx
    4a79:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    4a80:	00 
    4a81:	49 89 c4             	mov    %rax,%r12
    4a84:	41 0f b6 45 44       	movzbl 0x44(%r13),%eax
    4a89:	74 4a                	je     4ad5 <efi_snp_transmit+0xb8>
    4a8b:	48 39 c3             	cmp    %rax,%rbx
    4a8e:	74 02                	je     4a92 <efi_snp_transmit+0x75>
    4a90:	eb 1f                	jmp    4ab1 <efi_snp_transmit+0x94>
    4a92:	48 39 da             	cmp    %rbx,%rdx
    4a95:	73 02                	jae    4a99 <efi_snp_transmit+0x7c>
    4a97:	eb 18                	jmp    4ab1 <efi_snp_transmit+0x94>
    4a99:	48 83 bc 24 98 00 00 	cmpq   $0x0,0x98(%rsp)
    4aa0:	00 00 
    4aa2:	75 02                	jne    4aa6 <efi_snp_transmit+0x89>
    4aa4:	eb 0b                	jmp    4ab1 <efi_snp_transmit+0x94>
    4aa6:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
    4aad:	00 00 
    4aaf:	75 0a                	jne    4abb <efi_snp_transmit+0x9e>
    4ab1:	bb 7e 1f ee e3       	mov    $0xe3ee1f7e,%ebx
    4ab6:	e9 2f 01 00 00       	jmp    4bea <efi_snp_transmit+0x1cd>
    4abb:	48 83 bc 24 90 00 00 	cmpq   $0x0,0x90(%rsp)
    4ac2:	00 00 
    4ac4:	75 0f                	jne    4ad5 <efi_snp_transmit+0xb8>
    4ac6:	48 8d b5 a8 02 00 00 	lea    0x2a8(%rbp),%rsi
    4acd:	48 89 b4 24 90 00 00 	mov    %rsi,0x90(%rsp)
    4ad4:	00 
    4ad5:	48 89 d7             	mov    %rdx,%rdi
    4ad8:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
    4adf:	00 
    4ae0:	48 29 c7             	sub    %rax,%rdi
    4ae3:	b8 80 00 00 00       	mov    $0x80,%eax
    4ae8:	48 39 c7             	cmp    %rax,%rdi
    4aeb:	48 0f 42 f8          	cmovb  %rax,%rdi
    4aef:	48 83 c7 40          	add    $0x40,%rdi
    4af3:	e8 84 51 00 00       	call   9c7c <alloc_iob>
    4af8:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    4aff:	00 
    4b00:	48 85 c0             	test   %rax,%rax
    4b03:	49 89 c7             	mov    %rax,%r15
    4b06:	75 0a                	jne    4b12 <efi_snp_transmit+0xf5>
    4b08:	bb 77 1f ee ce       	mov    $0xceee1f77,%ebx
    4b0d:	e9 d8 00 00 00       	jmp    4bea <efi_snp_transmit+0x1cd>
    4b12:	41 0f b6 45 44       	movzbl 0x44(%r13),%eax
    4b17:	bf 40 00 00 00       	mov    $0x40,%edi
    4b1c:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    4b23:	00 
    4b24:	29 c7                	sub    %eax,%edi
    4b26:	48 63 ff             	movslq %edi,%rdi
    4b29:	49 01 7f 18          	add    %rdi,0x18(%r15)
    4b2d:	49 03 7f 20          	add    0x20(%r15),%rdi
    4b31:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    4b35:	49 89 47 20          	mov    %rax,0x20(%r15)
    4b39:	e8 cf 27 01 00       	call   1730d <__memcpy>
    4b3e:	48 85 db             	test   %rbx,%rbx
    4b41:	75 17                	jne    4b5a <efi_snp_transmit+0x13d>
    4b43:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    4b47:	4c 89 fe             	mov    %r15,%rsi
    4b4a:	e8 d3 8f 00 00       	call   db22 <netdev_tx>
    4b4f:	89 c3                	mov    %eax,%ebx
    4b51:	85 c0                	test   %eax,%eax
    4b53:	74 42                	je     4b97 <efi_snp_transmit+0x17a>
    4b55:	e9 85 00 00 00       	jmp    4bdf <efi_snp_transmit+0x1c2>
    4b5a:	41 0f b6 45 44       	movzbl 0x44(%r13),%eax
    4b5f:	49 01 47 18          	add    %rax,0x18(%r15)
    4b63:	4c 89 fe             	mov    %r15,%rsi
    4b66:	48 8b 84 24 a0 00 00 	mov    0xa0(%rsp),%rax
    4b6d:	00 
    4b6e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    4b72:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    4b79:	00 
    4b7a:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    4b81:	00 
    4b82:	66 8b 00             	mov    (%rax),%ax
    4b85:	86 c4                	xchg   %al,%ah
    4b87:	44 0f b7 c0          	movzwl %ax,%r8d
    4b8b:	41 ff 55 08          	call   *0x8(%r13)
    4b8f:	89 c3                	mov    %eax,%ebx
    4b91:	85 c0                	test   %eax,%eax
    4b93:	74 ae                	je     4b43 <efi_snp_transmit+0x126>
    4b95:	eb 4b                	jmp    4be2 <efi_snp_transmit+0x1c5>
    4b97:	8b 85 18 04 00 00    	mov    0x418(%rbp),%eax
    4b9d:	89 c2                	mov    %eax,%edx
    4b9f:	2b 95 1c 04 00 00    	sub    0x41c(%rbp),%edx
    4ba5:	83 fa 1f             	cmp    $0x1f,%edx
    4ba8:	76 07                	jbe    4bb1 <efi_snp_transmit+0x194>
    4baa:	bb 77 1f ee d5       	mov    $0xd5ee1f77,%ebx
    4baf:	eb 2e                	jmp    4bdf <efi_snp_transmit+0x1c2>
    4bb1:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    4bb8:	00 
    4bb9:	8d 50 01             	lea    0x1(%rax),%edx
    4bbc:	83 e0 1f             	and    $0x1f,%eax
    4bbf:	4c 89 e1             	mov    %r12,%rcx
    4bc2:	89 95 18 04 00 00    	mov    %edx,0x418(%rbp)
    4bc8:	48 89 b4 c5 18 03 00 	mov    %rsi,0x318(%rbp,%rax,8)
    4bcf:	00 
    4bd0:	83 8d 14 03 00 00 02 	orl    $0x2,0x314(%rbp)
    4bd7:	41 ff 56 20          	call   *0x20(%r14)
    4bdb:	31 c0                	xor    %eax,%eax
    4bdd:	eb 2d                	jmp    4c0c <efi_snp_transmit+0x1ef>
    4bdf:	45 31 ff             	xor    %r15d,%r15d
    4be2:	4c 89 ff             	mov    %r15,%rdi
    4be5:	e8 ac 50 00 00       	call   9c96 <free_iob>
    4bea:	4c 89 e1             	mov    %r12,%rcx
    4bed:	41 ff 56 20          	call   *0x20(%r14)
    4bf1:	f7 db                	neg    %ebx
    4bf3:	ba 01 00 00 00       	mov    $0x1,%edx
    4bf8:	48 89 d8             	mov    %rbx,%rax
    4bfb:	48 c1 e2 3f          	shl    $0x3f,%rdx
    4bff:	83 e3 7f             	and    $0x7f,%ebx
    4c02:	48 c1 e0 38          	shl    $0x38,%rax
    4c06:	48 21 d0             	and    %rdx,%rax
    4c09:	48 09 d8             	or     %rbx,%rax
    4c0c:	48 83 c4 28          	add    $0x28,%rsp
    4c10:	5b                   	pop    %rbx
    4c11:	5e                   	pop    %rsi
    4c12:	5f                   	pop    %rdi
    4c13:	5d                   	pop    %rbp
    4c14:	41 5c                	pop    %r12
    4c16:	41 5d                	pop    %r13
    4c18:	41 5e                	pop    %r14
    4c1a:	41 5f                	pop    %r15
    4c1c:	c3                   	ret    

0000000000004c1d <efi_snp_set_state>:
    4c1d:	31 c0                	xor    %eax,%eax
    4c1f:	83 bf 38 03 00 00 00 	cmpl   $0x0,0x338(%rdi)
    4c26:	74 1f                	je     4c47 <efi_snp_set_state+0x2a>
    4c28:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    4c2c:	b8 01 00 00 00       	mov    $0x1,%eax
    4c31:	f6 82 80 00 00 00 01 	testb  $0x1,0x80(%rdx)
    4c38:	74 0d                	je     4c47 <efi_snp_set_state+0x2a>
    4c3a:	8b 05 28 4f 02 00    	mov    0x24f28(%rip),%eax        # 29b68 <efi_snp_claimed>
    4c40:	f7 d8                	neg    %eax
    4c42:	19 c0                	sbb    %eax,%eax
    4c44:	83 c0 02             	add    $0x2,%eax
    4c47:	89 87 a8 00 00 00    	mov    %eax,0xa8(%rdi)
    4c4d:	c3                   	ret    

0000000000004c4e <efi_snp_start>:
    4c4e:	f3 0f 1e fa          	endbr64 
    4c52:	83 3d 0f 4f 02 00 00 	cmpl   $0x0,0x24f0f(%rip)        # 29b68 <efi_snp_claimed>
    4c59:	75 1c                	jne    4c77 <efi_snp_start+0x29>
    4c5b:	57                   	push   %rdi
    4c5c:	48 8d 79 d8          	lea    -0x28(%rcx),%rdi
    4c60:	56                   	push   %rsi
    4c61:	50                   	push   %rax
    4c62:	c7 81 10 03 00 00 01 	movl   $0x1,0x310(%rcx)
    4c69:	00 00 00 
    4c6c:	e8 ac ff ff ff       	call   4c1d <efi_snp_set_state>
    4c71:	5a                   	pop    %rdx
    4c72:	31 c0                	xor    %eax,%eax
    4c74:	5e                   	pop    %rsi
    4c75:	5f                   	pop    %rdi
    4c76:	c3                   	ret    
    4c77:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    4c7e:	00 00 80 
    4c81:	c3                   	ret    

0000000000004c82 <efi_snp_stop>:
    4c82:	f3 0f 1e fa          	endbr64 
    4c86:	83 3d db 4e 02 00 00 	cmpl   $0x0,0x24edb(%rip)        # 29b68 <efi_snp_claimed>
    4c8d:	75 1c                	jne    4cab <efi_snp_stop+0x29>
    4c8f:	57                   	push   %rdi
    4c90:	48 8d 79 d8          	lea    -0x28(%rcx),%rdi
    4c94:	56                   	push   %rsi
    4c95:	50                   	push   %rax
    4c96:	c7 81 10 03 00 00 00 	movl   $0x0,0x310(%rcx)
    4c9d:	00 00 00 
    4ca0:	e8 78 ff ff ff       	call   4c1d <efi_snp_set_state>
    4ca5:	5a                   	pop    %rdx
    4ca6:	31 c0                	xor    %eax,%eax
    4ca8:	5e                   	pop    %rsi
    4ca9:	5f                   	pop    %rdi
    4caa:	c3                   	ret    
    4cab:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    4cb2:	00 00 80 
    4cb5:	c3                   	ret    

0000000000004cb6 <efi_snp_notify>:
    4cb6:	f3 0f 1e fa          	endbr64 
    4cba:	e8 fd f7 ff ff       	call   44bc <efi_snp_demux>
    4cbf:	48 89 f9             	mov    %rdi,%rcx
    4cc2:	48 89 c7             	mov    %rax,%rdi
    4cc5:	48 85 c0             	test   %rax,%rax
    4cc8:	74 13                	je     4cdd <efi_snp_notify+0x27>
    4cca:	83 b9 84 00 00 00 00 	cmpl   $0x0,0x84(%rcx)
    4cd1:	0f 94 80 34 03 00 00 	sete   0x334(%rax)
    4cd8:	e9 40 ff ff ff       	jmp    4c1d <efi_snp_set_state>
    4cdd:	c3                   	ret    

0000000000004cde <efi_snp_initialize>:
    4cde:	f3 0f 1e fa          	endbr64 
    4ce2:	41 55                	push   %r13
    4ce4:	41 54                	push   %r12
    4ce6:	55                   	push   %rbp
    4ce7:	57                   	push   %rdi
    4ce8:	56                   	push   %rsi
    4ce9:	53                   	push   %rbx
    4cea:	48 83 ec 28          	sub    $0x28,%rsp
    4cee:	83 3d 73 4e 02 00 00 	cmpl   $0x0,0x24e73(%rip)        # 29b68 <efi_snp_claimed>
    4cf5:	74 07                	je     4cfe <efi_snp_initialize+0x20>
    4cf7:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    4cfc:	eb 39                	jmp    4d37 <efi_snp_initialize+0x59>
    4cfe:	48 8b 05 93 52 02 00 	mov    0x25293(%rip),%rax        # 29f98 <efi_systab>
    4d05:	48 89 cd             	mov    %rcx,%rbp
    4d08:	b9 08 00 00 00       	mov    $0x8,%ecx
    4d0d:	4c 8b 68 60          	mov    0x60(%rax),%r13
    4d11:	41 ff 55 18          	call   *0x18(%r13)
    4d15:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    4d19:	49 89 c4             	mov    %rax,%r12
    4d1c:	e8 01 91 00 00       	call   de22 <netdev_open>
    4d21:	89 c3                	mov    %eax,%ebx
    4d23:	85 c0                	test   %eax,%eax
    4d25:	75 09                	jne    4d30 <efi_snp_initialize+0x52>
    4d27:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
    4d2b:	e8 ed fe ff ff       	call   4c1d <efi_snp_set_state>
    4d30:	4c 89 e1             	mov    %r12,%rcx
    4d33:	41 ff 55 20          	call   *0x20(%r13)
    4d37:	f7 db                	neg    %ebx
    4d39:	ba 01 00 00 00       	mov    $0x1,%edx
    4d3e:	48 83 c4 28          	add    $0x28,%rsp
    4d42:	48 89 d8             	mov    %rbx,%rax
    4d45:	48 c1 e2 3f          	shl    $0x3f,%rdx
    4d49:	83 e3 7f             	and    $0x7f,%ebx
    4d4c:	48 c1 e0 38          	shl    $0x38,%rax
    4d50:	48 21 d0             	and    %rdx,%rax
    4d53:	48 09 d8             	or     %rbx,%rax
    4d56:	5b                   	pop    %rbx
    4d57:	5e                   	pop    %rsi
    4d58:	5f                   	pop    %rdi
    4d59:	5d                   	pop    %rbp
    4d5a:	41 5c                	pop    %r12
    4d5c:	41 5d                	pop    %r13
    4d5e:	c3                   	ret    

0000000000004d5f <efi_snp_probe>:
    4d5f:	f3 0f 1e fa          	endbr64 
    4d63:	41 57                	push   %r15
    4d65:	41 56                	push   %r14
    4d67:	41 55                	push   %r13
    4d69:	41 54                	push   %r12
    4d6b:	45 31 e4             	xor    %r12d,%r12d
    4d6e:	55                   	push   %rbp
    4d6f:	48 89 fd             	mov    %rdi,%rbp
    4d72:	53                   	push   %rbx
    4d73:	48 83 ec 28          	sub    $0x28,%rsp
    4d77:	48 8b 05 1a 52 02 00 	mov    0x2521a(%rip),%rax        # 29f98 <efi_systab>
    4d7e:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
    4d82:	48 8b 40 60          	mov    0x60(%rax),%rax
    4d86:	48 89 04 24          	mov    %rax,(%rsp)
    4d8a:	e8 7c 73 01 00       	call   1c10b <efidev_parent>
    4d8f:	48 85 c0             	test   %rax,%rax
    4d92:	0f 84 2d 05 00 00    	je     52c5 <efi_snp_probe+0x566>
    4d98:	bf 98 05 00 00       	mov    $0x598,%edi
    4d9d:	48 89 c3             	mov    %rax,%rbx
    4da0:	e8 b5 78 00 00       	call   c65a <zalloc>
    4da5:	49 89 c5             	mov    %rax,%r13
    4da8:	48 85 c0             	test   %rax,%rax
    4dab:	75 0b                	jne    4db8 <efi_snp_probe+0x59>
    4dad:	41 bc 77 1f ee ce    	mov    $0xceee1f77,%r12d
    4db3:	e9 0d 05 00 00       	jmp    52c5 <efi_snp_probe+0x566>
    4db8:	48 89 ef             	mov    %rbp,%rdi
    4dbb:	e8 72 b0 00 00       	call   fe32 <ref_increment>
    4dc0:	49 8d 85 48 04 00 00 	lea    0x448(%r13),%rax
    4dc7:	49 89 6d 10          	mov    %rbp,0x10(%r13)
    4dcb:	49 89 85 48 04 00 00 	mov    %rax,0x448(%r13)
    4dd2:	49 89 85 50 04 00 00 	mov    %rax,0x450(%r13)
    4dd9:	48 8b 45 50          	mov    0x50(%rbp),%rax
    4ddd:	49 89 5d 18          	mov    %rbx,0x18(%r13)
    4de1:	80 78 43 20          	cmpb   $0x20,0x43(%rax)
    4de5:	76 0b                	jbe    4df2 <efi_snp_probe+0x93>
    4de7:	41 bc 7d 1f ee c3    	mov    $0xc3ee1f7d,%r12d
    4ded:	e9 c3 04 00 00       	jmp    52b5 <efi_snp_probe+0x556>
    4df2:	49 8d 45 28          	lea    0x28(%r13),%rax
    4df6:	ba 80 00 00 00       	mov    $0x80,%edx
    4dfb:	48 8d 35 7e 01 02 00 	lea    0x2017e(%rip),%rsi        # 24f80 <efi_snp_device_snp>
    4e02:	48 89 c7             	mov    %rax,%rdi
    4e05:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4e0a:	e8 fe 24 01 00       	call   1730d <__memcpy>
    4e0f:	49 8d 85 a8 00 00 00 	lea    0xa8(%r13),%rax
    4e16:	4d 89 e9             	mov    %r13,%r9
    4e19:	4c 8d 05 da f7 ff ff 	lea    -0x826(%rip),%r8        # 45fa <efi_snp_wait_for_packet>
    4e20:	57                   	push   %rdi
    4e21:	ba 10 00 00 00       	mov    $0x10,%edx
    4e26:	b9 00 01 00 00       	mov    $0x100,%ecx
    4e2b:	49 89 85 a0 00 00 00 	mov    %rax,0xa0(%r13)
    4e32:	49 8d 85 98 00 00 00 	lea    0x98(%r13),%rax
    4e39:	50                   	push   %rax
    4e3a:	48 83 ec 20          	sub    $0x20,%rsp
    4e3e:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    4e43:	ff 50 50             	call   *0x50(%rax)
    4e46:	48 83 c4 30          	add    $0x30,%rsp
    4e4a:	48 85 c0             	test   %rax,%rax
    4e4d:	74 1d                	je     4e6c <efi_snp_probe+0x10d>
    4e4f:	49 89 c4             	mov    %rax,%r12
    4e52:	49 c1 ec 38          	shr    $0x38,%r12
    4e56:	41 09 c4             	or     %eax,%r12d
    4e59:	45 0f b6 e4          	movzbl %r12b,%r12d
    4e5d:	41 81 cc 00 e0 11 7f 	or     $0x7f11e000,%r12d
    4e64:	41 f7 dc             	neg    %r12d
    4e67:	e9 49 04 00 00       	jmp    52b5 <efi_snp_probe+0x556>
    4e6c:	4d 8b 65 10          	mov    0x10(%r13),%r12
    4e70:	49 8d bd d0 02 00 00 	lea    0x2d0(%r13),%rdi
    4e77:	41 c7 85 a8 00 00 00 	movl   $0x0,0xa8(%r13)
    4e7e:	00 00 00 00 
    4e82:	4d 8b 7c 24 50       	mov    0x50(%r12),%r15
    4e87:	49 8d 74 24 60       	lea    0x60(%r12),%rsi
    4e8c:	41 0f b6 47 43       	movzbl 0x43(%r15),%eax
    4e91:	49 89 c6             	mov    %rax,%r14
    4e94:	41 89 85 ac 00 00 00 	mov    %eax,0xac(%r13)
    4e9b:	41 0f b6 47 44       	movzbl 0x44(%r15),%eax
    4ea0:	4c 89 f2             	mov    %r14,%rdx
    4ea3:	41 89 85 b0 00 00 00 	mov    %eax,0xb0(%r13)
    4eaa:	49 8b 84 24 e0 00 00 	mov    0xe0(%r12),%rax
    4eb1:	00 
    4eb2:	41 c7 85 c0 00 00 00 	movl   $0x7,0xc0(%r13)
    4eb9:	07 00 00 00 
    4ebd:	41 89 85 b4 00 00 00 	mov    %eax,0xb4(%r13)
    4ec4:	e8 44 24 01 00       	call   1730d <__memcpy>
    4ec9:	49 8b 74 24 78       	mov    0x78(%r12),%rsi
    4ece:	4c 89 f2             	mov    %r14,%rdx
    4ed1:	49 8d bd f0 02 00 00 	lea    0x2f0(%r13),%rdi
    4ed8:	4d 8d b5 58 04 00 00 	lea    0x458(%r13),%r14
    4edf:	e8 29 24 01 00       	call   1730d <__memcpy>
    4ee4:	49 8d b5 10 03 00 00 	lea    0x310(%r13),%rsi
    4eeb:	49 8d 7c 24 58       	lea    0x58(%r12),%rdi
    4ef0:	41 ff 57 18          	call   *0x18(%r15)
    4ef4:	41 8b 47 40          	mov    0x40(%r15),%eax
    4ef8:	ba 28 00 00 00       	mov    $0x28,%edx
    4efd:	4c 89 f7             	mov    %r14,%rdi
    4f00:	86 c4                	xchg   %al,%ah
    4f02:	41 c6 85 31 03 00 00 	movb   $0x1,0x331(%r13)
    4f09:	01 
    4f0a:	48 8d 35 8f f5 01 00 	lea    0x1f58f(%rip),%rsi        # 244a0 <efi_snp_device_nii>
    4f11:	41 88 85 30 03 00 00 	mov    %al,0x330(%r13)
    4f18:	41 c6 85 33 03 00 00 	movb   $0x1,0x333(%r13)
    4f1f:	01 
    4f20:	41 83 bc 24 84 00 00 	cmpl   $0x0,0x84(%r12)
    4f27:	00 00 
    4f29:	41 0f 94 85 34 03 00 	sete   0x334(%r13)
    4f30:	00 
    4f31:	e8 d7 23 01 00       	call   1730d <__memcpy>
    4f36:	49 8b 45 10          	mov    0x10(%r13),%rax
    4f3a:	0f b6 35 96 f5 01 00 	movzbl 0x1f596(%rip),%esi        # 244d7 <efi_snp_undi+0x7>
    4f41:	48 8d 15 88 f5 01 00 	lea    0x1f588(%rip),%rdx        # 244d0 <efi_snp_undi>
    4f48:	49 89 95 60 04 00 00 	mov    %rdx,0x460(%r13)
    4f4f:	8b 48 30             	mov    0x30(%rax),%ecx
    4f52:	48 8d 05 d1 04 00 00 	lea    0x4d1(%rip),%rax        # 542a <efi_undi_issue>
    4f59:	48 89 05 80 f5 01 00 	mov    %rax,0x1f580(%rip)        # 244e0 <efi_snp_undi+0x10>
    4f60:	0f b6 05 73 f5 01 00 	movzbl 0x1f573(%rip),%eax        # 244da <efi_snp_undi+0xa>
    4f67:	ff c9                	dec    %ecx
    4f69:	c1 e0 08             	shl    $0x8,%eax
    4f6c:	66 41 89 8d 7c 04 00 	mov    %cx,0x47c(%r13)
    4f73:	00 
    4f74:	0f b7 c9             	movzwl %cx,%ecx
    4f77:	09 f0                	or     %esi,%eax
    4f79:	39 c8                	cmp    %ecx,%eax
    4f7b:	0f 42 c1             	cmovb  %ecx,%eax
    4f7e:	31 c9                	xor    %ecx,%ecx
    4f80:	88 05 51 f5 01 00    	mov    %al,0x1f551(%rip)        # 244d7 <efi_snp_undi+0x7>
    4f86:	88 25 4e f5 01 00    	mov    %ah,0x1f54e(%rip)        # 244da <efi_snp_undi+0xa>
    4f8c:	48 89 d0             	mov    %rdx,%rax
    4f8f:	48 83 c2 20          	add    $0x20,%rdx
    4f93:	48 ff c0             	inc    %rax
    4f96:	02 48 ff             	add    -0x1(%rax),%cl
    4f99:	48 39 d0             	cmp    %rdx,%rax
    4f9c:	75 f5                	jne    4f93 <efi_snp_probe+0x234>
    4f9e:	48 8b 45 40          	mov    0x40(%rbp),%rax
    4fa2:	4c 8d 3d 67 d3 01 00 	lea    0x1d367(%rip),%r15        # 22310 <product_short_name>
    4fa9:	be 10 00 00 00       	mov    $0x10,%esi
    4fae:	48 8d 15 4e d8 01 00 	lea    0x1d84e(%rip),%rdx        # 22803 <.LC0>
    4fb5:	28 0d 1a f5 01 00    	sub    %cl,0x1f51a(%rip)        # 244d5 <efi_snp_undi+0x5>
    4fbb:	49 8d bd f0 04 00 00 	lea    0x4f0(%r13),%rdi
    4fc2:	4c 8d 65 60          	lea    0x60(%rbp),%r12
    4fc6:	4c 89 f9             	mov    %r15,%rcx
    4fc9:	4c 8b 40 28          	mov    0x28(%rax),%r8
    4fcd:	31 c0                	xor    %eax,%eax
    4fcf:	e8 70 19 00 00       	call   6944 <efi_snprintf>
    4fd4:	48 8b 45 50          	mov    0x50(%rbp),%rax
    4fd8:	4c 89 e7             	mov    %r12,%rdi
    4fdb:	ff 50 20             	call   *0x20(%rax)
    4fde:	4c 8b 4d 40          	mov    0x40(%rbp),%r9
    4fe2:	4c 89 f9             	mov    %r15,%rcx
    4fe5:	be 40 00 00 00       	mov    $0x40,%esi
    4fea:	49 8d bd 10 05 00 00 	lea    0x510(%r13),%rdi
    4ff1:	4d 8b 41 28          	mov    0x28(%r9),%r8
    4ff5:	52                   	push   %rdx
    4ff6:	48 8d 15 0c d8 01 00 	lea    0x1d80c(%rip),%rdx        # 22809 <.LC1>
    4ffd:	50                   	push   %rax
    4ffe:	31 c0                	xor    %eax,%eax
    5000:	e8 3f 19 00 00       	call   6944 <efi_snprintf>
    5005:	48 8d 05 8c f4 ff ff 	lea    -0xb74(%rip),%rax        # 4498 <efi_snp_get_driver_name>
    500c:	48 8d 4d 34          	lea    0x34(%rbp),%rcx
    5010:	be 0c 00 00 00       	mov    $0xc,%esi
    5015:	49 89 85 80 04 00 00 	mov    %rax,0x480(%r13)
    501c:	48 8d 05 83 f4 ff ff 	lea    -0xb7d(%rip),%rax        # 44a6 <efi_snp_get_controller_name>
    5023:	48 8d 15 f7 e5 01 00 	lea    0x1e5f7(%rip),%rdx        # 23621 <.LC0>
    502a:	49 89 85 88 04 00 00 	mov    %rax,0x488(%r13)
    5031:	48 8d 05 9a da 01 00 	lea    0x1da9a(%rip),%rax        # 22ad2 <.LC2>
    5038:	49 8d bd d8 04 00 00 	lea    0x4d8(%r13),%rdi
    503f:	49 89 85 90 04 00 00 	mov    %rax,0x490(%r13)
    5046:	49 8d 85 98 04 00 00 	lea    0x498(%r13),%rax
    504d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5052:	48 8b 05 07 ff 01 00 	mov    0x1ff07(%rip),%rax        # 24f60 <efi_snp_load_file_protocol>
    5059:	49 89 85 98 04 00 00 	mov    %rax,0x498(%r13)
    5060:	31 c0                	xor    %eax,%eax
    5062:	e8 dd 18 00 00       	call   6944 <efi_snprintf>
    5067:	48 8b bb 88 00 00 00 	mov    0x88(%rbx),%rdi
    506e:	e8 47 19 00 00       	call   69ba <efi_devpath_len>
    5073:	48 8d 78 2f          	lea    0x2f(%rax),%rdi
    5077:	49 89 c7             	mov    %rax,%r15
    507a:	e8 db 75 00 00       	call   c65a <zalloc>
    507f:	59                   	pop    %rcx
    5080:	5e                   	pop    %rsi
    5081:	49 89 85 90 05 00 00 	mov    %rax,0x590(%r13)
    5088:	48 89 c7             	mov    %rax,%rdi
    508b:	48 85 c0             	test   %rax,%rax
    508e:	75 0b                	jne    509b <efi_snp_probe+0x33c>
    5090:	41 bc 77 1f ee ce    	mov    $0xceee1f77,%r12d
    5096:	e9 03 02 00 00       	jmp    529e <efi_snp_probe+0x53f>
    509b:	48 8b b3 88 00 00 00 	mov    0x88(%rbx),%rsi
    50a2:	4c 89 fa             	mov    %r15,%rdx
    50a5:	e8 63 22 01 00       	call   1730d <__memcpy>
    50aa:	4d 03 bd 90 05 00 00 	add    0x590(%r13),%r15
    50b1:	b9 25 00 00 00       	mov    $0x25,%ecx
    50b6:	31 c0                	xor    %eax,%eax
    50b8:	4c 89 ff             	mov    %r15,%rdi
    50bb:	f3 aa                	rep stos %al,%es:(%rdi)
    50bd:	66 41 c7 07 03 0b    	movw   $0xb03,(%r15)
    50c3:	49 8d 7f 04          	lea    0x4(%r15),%rdi
    50c7:	4c 89 e6             	mov    %r12,%rsi
    50ca:	41 c6 47 02 25       	movb   $0x25,0x2(%r15)
    50cf:	48 8b 45 50          	mov    0x50(%rbp),%rax
    50d3:	0f b6 50 43          	movzbl 0x43(%rax),%edx
    50d7:	e8 31 22 01 00       	call   1730d <__memcpy>
    50dc:	48 8b 45 50          	mov    0x50(%rbp),%rax
    50e0:	48 89 ef             	mov    %rbp,%rdi
    50e3:	8b 40 40             	mov    0x40(%rax),%eax
    50e6:	86 c4                	xchg   %al,%ah
    50e8:	41 88 47 24          	mov    %al,0x24(%r15)
    50ec:	e8 99 92 00 00       	call   e38a <vlan_tag>
    50f1:	49 8d 57 25          	lea    0x25(%r15),%rdx
    50f5:	85 c0                	test   %eax,%eax
    50f7:	74 11                	je     510a <efi_snp_probe+0x3ab>
    50f9:	41 c7 47 25 03 14 06 	movl   $0x61403,0x25(%r15)
    5100:	00 
    5101:	49 8d 57 2b          	lea    0x2b(%r15),%rdx
    5105:	66 41 89 47 29       	mov    %ax,0x29(%r15)
    510a:	49 8d 85 80 04 00 00 	lea    0x480(%r13),%rax
    5111:	c7 02 7f ff 04 00    	movl   $0x4ff7f,(%rdx)
    5117:	49 8d 4d 20          	lea    0x20(%r13),%rcx
    511b:	4d 8b 85 90 05 00 00 	mov    0x590(%r13),%r8
    5122:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5127:	48 8d 05 c2 f3 01 00 	lea    0x1f3c2(%rip),%rax        # 244f0 <dummy_load_file_protocol_guid>
    512e:	4c 8d 3d 7b f8 01 00 	lea    0x1f87b(%rip),%r15        # 249b0 <efi_device_path_protocol_guid>
    5135:	6a 00                	push   $0x0
    5137:	4c 8d 0d 42 f7 01 00 	lea    0x1f742(%rip),%r9        # 24880 <efi_nii_protocol_guid>
    513e:	4c 89 fa             	mov    %r15,%rdx
    5141:	ff 74 24 10          	push   0x10(%rsp)
    5145:	50                   	push   %rax
    5146:	48 8d 05 83 f8 01 00 	lea    0x1f883(%rip),%rax        # 249d0 <efi_component_name2_protocol_guid>
    514d:	ff 74 24 28          	push   0x28(%rsp)
    5151:	50                   	push   %rax
    5152:	48 8d 05 17 f7 01 00 	lea    0x1f717(%rip),%rax        # 24870 <efi_nii31_protocol_guid>
    5159:	41 56                	push   %r14
    515b:	50                   	push   %rax
    515c:	41 56                	push   %r14
    515e:	48 83 ec 20          	sub    $0x20,%rsp
    5162:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    5167:	ff 90 48 01 00 00    	call   *0x148(%rax)
    516d:	48 83 c4 60          	add    $0x60,%rsp
    5171:	48 85 c0             	test   %rax,%rax
    5174:	74 1d                	je     5193 <efi_snp_probe+0x434>
    5176:	49 89 c4             	mov    %rax,%r12
    5179:	49 c1 ec 38          	shr    $0x38,%r12
    517d:	41 09 c4             	or     %eax,%r12d
    5180:	45 0f b6 e4          	movzbl %r12b,%r12d
    5184:	41 81 cc 00 e0 11 7f 	or     $0x7f11e000,%r12d
    518b:	41 f7 dc             	neg    %r12d
    518e:	e9 ff 00 00 00       	jmp    5292 <efi_snp_probe+0x533>
    5193:	49 8b 75 20          	mov    0x20(%r13),%rsi
    5197:	48 8b bb 80 00 00 00 	mov    0x80(%rbx),%rdi
    519e:	e8 24 18 00 00       	call   69c7 <efi_child_add>
    51a3:	41 89 c4             	mov    %eax,%r12d
    51a6:	85 c0                	test   %eax,%eax
    51a8:	0f 84 a4 00 00 00    	je     5252 <efi_snp_probe+0x4f3>
    51ae:	48 83 ec 20          	sub    $0x20,%rsp
    51b2:	49 8b 4d 20          	mov    0x20(%r13),%rcx
    51b6:	4c 8b 05 cb 4d 02 00 	mov    0x24dcb(%rip),%r8        # 29f88 <efi_image_handle>
    51bd:	48 8d 15 ac f6 01 00 	lea    0x1f6ac(%rip),%rdx        # 24870 <efi_nii31_protocol_guid>
    51c4:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    51c9:	48 8d 1d b0 f6 01 00 	lea    0x1f6b0(%rip),%rbx        # 24880 <efi_nii_protocol_guid>
    51d0:	49 89 c9             	mov    %rcx,%r9
    51d3:	ff 90 20 01 00 00    	call   *0x120(%rax)
    51d9:	49 8b 4d 20          	mov    0x20(%r13),%rcx
    51dd:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    51e2:	48 89 da             	mov    %rbx,%rdx
    51e5:	4c 8b 05 9c 4d 02 00 	mov    0x24d9c(%rip),%r8        # 29f88 <efi_image_handle>
    51ec:	49 89 c9             	mov    %rcx,%r9
    51ef:	ff 90 20 01 00 00    	call   *0x120(%rax)
    51f5:	48 83 c4 20          	add    $0x20,%rsp
    51f9:	49 8b 4d 20          	mov    0x20(%r13),%rcx
    51fd:	4d 89 f9             	mov    %r15,%r9
    5200:	48 8d 05 e9 f2 01 00 	lea    0x1f2e9(%rip),%rax        # 244f0 <dummy_load_file_protocol_guid>
    5207:	6a 00                	push   $0x0
    5209:	48 8d 15 00 f6 01 00 	lea    0x1f600(%rip),%rdx        # 24810 <efi_simple_network_protocol_guid>
    5210:	ff 74 24 10          	push   0x10(%rsp)
    5214:	50                   	push   %rax
    5215:	48 8d 05 b4 f7 01 00 	lea    0x1f7b4(%rip),%rax        # 249d0 <efi_component_name2_protocol_guid>
    521c:	ff 74 24 28          	push   0x28(%rsp)
    5220:	50                   	push   %rax
    5221:	48 8d 05 48 f6 01 00 	lea    0x1f648(%rip),%rax        # 24870 <efi_nii31_protocol_guid>
    5228:	41 56                	push   %r14
    522a:	50                   	push   %rax
    522b:	41 56                	push   %r14
    522d:	53                   	push   %rbx
    522e:	41 ff b5 90 05 00 00 	push   0x590(%r13)
    5235:	48 83 ec 20          	sub    $0x20,%rsp
    5239:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    523e:	4c 8b 84 24 88 00 00 	mov    0x88(%rsp),%r8
    5245:	00 
    5246:	ff 90 50 01 00 00    	call   *0x150(%rax)
    524c:	48 83 c4 70          	add    $0x70,%rsp
    5250:	eb 40                	jmp    5292 <efi_snp_probe+0x533>
    5252:	4c 89 ef             	mov    %r13,%rdi
    5255:	e8 c3 0f 00 00       	call   621d <efi_snp_hii_install>
    525a:	48 8d 35 9f fd 01 00 	lea    0x1fd9f(%rip),%rsi        # 25000 <efi_snp_devices>
    5261:	4c 89 ef             	mov    %r13,%rdi
    5264:	e8 58 6e 00 00       	call   c0c1 <extern_list_add>
    5269:	48 83 ec 20          	sub    $0x20,%rsp
    526d:	48 8b 8b 80 00 00 00 	mov    0x80(%rbx),%rcx
    5274:	4c 89 fa             	mov    %r15,%rdx
    5277:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    527c:	4c 8b 05 05 4d 02 00 	mov    0x24d05(%rip),%r8        # 29f88 <efi_image_handle>
    5283:	49 89 c9             	mov    %rcx,%r9
    5286:	ff 90 20 01 00 00    	call   *0x120(%rax)
    528c:	48 83 c4 20          	add    $0x20,%rsp
    5290:	eb 33                	jmp    52c5 <efi_snp_probe+0x566>
    5292:	49 8b bd 90 05 00 00 	mov    0x590(%r13),%rdi
    5299:	e8 b1 73 00 00       	call   c64f <free>
    529e:	48 83 ec 20          	sub    $0x20,%rsp
    52a2:	49 8b 8d 98 00 00 00 	mov    0x98(%r13),%rcx
    52a9:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    52ae:	ff 50 70             	call   *0x70(%rax)
    52b1:	48 83 c4 20          	add    $0x20,%rsp
    52b5:	48 89 ef             	mov    %rbp,%rdi
    52b8:	e8 81 ab 00 00       	call   fe3e <ref_decrement>
    52bd:	4c 89 ef             	mov    %r13,%rdi
    52c0:	e8 8a 73 00 00       	call   c64f <free>
    52c5:	48 83 c4 28          	add    $0x28,%rsp
    52c9:	44 89 e0             	mov    %r12d,%eax
    52cc:	5b                   	pop    %rbx
    52cd:	5d                   	pop    %rbp
    52ce:	41 5c                	pop    %r12
    52d0:	41 5d                	pop    %r13
    52d2:	41 5e                	pop    %r14
    52d4:	41 5f                	pop    %r15
    52d6:	c3                   	ret    

00000000000052d7 <efi_snp_flush>:
    52d7:	55                   	push   %rbp
    52d8:	53                   	push   %rbx
    52d9:	48 8d 9f 48 04 00 00 	lea    0x448(%rdi),%rbx
    52e0:	52                   	push   %rdx
    52e1:	4c 8b 87 48 04 00 00 	mov    0x448(%rdi),%r8
    52e8:	48 c7 87 40 04 00 00 	movq   $0x0,0x440(%rdi)
    52ef:	00 00 00 00 
    52f3:	49 8b 28             	mov    (%r8),%rbp
    52f6:	49 39 d8             	cmp    %rbx,%r8
    52f9:	74 1f                	je     531a <efi_snp_flush+0x43>
    52fb:	49 8b 10             	mov    (%r8),%rdx
    52fe:	49 8b 40 08          	mov    0x8(%r8),%rax
    5302:	4c 89 c7             	mov    %r8,%rdi
    5305:	48 89 42 08          	mov    %rax,0x8(%rdx)
    5309:	48 89 10             	mov    %rdx,(%rax)
    530c:	e8 85 49 00 00       	call   9c96 <free_iob>
    5311:	49 89 e8             	mov    %rbp,%r8
    5314:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
    5318:	eb dc                	jmp    52f6 <efi_snp_flush+0x1f>
    531a:	58                   	pop    %rax
    531b:	5b                   	pop    %rbx
    531c:	5d                   	pop    %rbp
    531d:	c3                   	ret    

000000000000531e <efi_snp_reset>:
    531e:	f3 0f 1e fa          	endbr64 
    5322:	41 55                	push   %r13
    5324:	41 54                	push   %r12
    5326:	55                   	push   %rbp
    5327:	57                   	push   %rdi
    5328:	56                   	push   %rsi
    5329:	53                   	push   %rbx
    532a:	48 83 ec 28          	sub    $0x28,%rsp
    532e:	83 3d 33 48 02 00 00 	cmpl   $0x0,0x24833(%rip)        # 29b68 <efi_snp_claimed>
    5335:	74 07                	je     533e <efi_snp_reset+0x20>
    5337:	bb 7a 1f ee f9       	mov    $0xf9ee1f7a,%ebx
    533c:	eb 55                	jmp    5393 <efi_snp_reset+0x75>
    533e:	48 8b 05 53 4c 02 00 	mov    0x24c53(%rip),%rax        # 29f98 <efi_systab>
    5345:	48 89 cb             	mov    %rcx,%rbx
    5348:	48 8d 69 d8          	lea    -0x28(%rcx),%rbp
    534c:	b9 08 00 00 00       	mov    $0x8,%ecx
    5351:	4c 8b 68 60          	mov    0x60(%rax),%r13
    5355:	41 ff 55 18          	call   *0x18(%r13)
    5359:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    535d:	49 89 c4             	mov    %rax,%r12
    5360:	e8 14 8b 00 00       	call   de79 <netdev_close>
    5365:	48 89 ef             	mov    %rbp,%rdi
    5368:	e8 b0 f8 ff ff       	call   4c1d <efi_snp_set_state>
    536d:	48 89 ef             	mov    %rbp,%rdi
    5370:	e8 62 ff ff ff       	call   52d7 <efi_snp_flush>
    5375:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    5379:	e8 a4 8a 00 00       	call   de22 <netdev_open>
    537e:	89 c3                	mov    %eax,%ebx
    5380:	85 c0                	test   %eax,%eax
    5382:	75 08                	jne    538c <efi_snp_reset+0x6e>
    5384:	48 89 ef             	mov    %rbp,%rdi
    5387:	e8 91 f8 ff ff       	call   4c1d <efi_snp_set_state>
    538c:	4c 89 e1             	mov    %r12,%rcx
    538f:	41 ff 55 20          	call   *0x20(%r13)
    5393:	f7 db                	neg    %ebx
    5395:	ba 01 00 00 00       	mov    $0x1,%edx
    539a:	48 83 c4 28          	add    $0x28,%rsp
    539e:	48 89 d8             	mov    %rbx,%rax
    53a1:	48 c1 e2 3f          	shl    $0x3f,%rdx
    53a5:	83 e3 7f             	and    $0x7f,%ebx
    53a8:	48 c1 e0 38          	shl    $0x38,%rax
    53ac:	48 21 d0             	and    %rdx,%rax
    53af:	48 09 d8             	or     %rbx,%rax
    53b2:	5b                   	pop    %rbx
    53b3:	5e                   	pop    %rsi
    53b4:	5f                   	pop    %rdi
    53b5:	5d                   	pop    %rbp
    53b6:	41 5c                	pop    %r12
    53b8:	41 5d                	pop    %r13
    53ba:	c3                   	ret    

00000000000053bb <efi_snp_shutdown>:
    53bb:	f3 0f 1e fa          	endbr64 
    53bf:	83 3d a2 47 02 00 00 	cmpl   $0x0,0x247a2(%rip)        # 29b68 <efi_snp_claimed>
    53c6:	75 57                	jne    541f <efi_snp_shutdown+0x64>
    53c8:	41 55                	push   %r13
    53ca:	4c 8d 69 d8          	lea    -0x28(%rcx),%r13
    53ce:	41 54                	push   %r12
    53d0:	55                   	push   %rbp
    53d1:	57                   	push   %rdi
    53d2:	56                   	push   %rsi
    53d3:	53                   	push   %rbx
    53d4:	48 89 cb             	mov    %rcx,%rbx
    53d7:	b9 08 00 00 00       	mov    $0x8,%ecx
    53dc:	48 83 ec 28          	sub    $0x28,%rsp
    53e0:	48 8b 05 b1 4b 02 00 	mov    0x24bb1(%rip),%rax        # 29f98 <efi_systab>
    53e7:	48 8b 68 60          	mov    0x60(%rax),%rbp
    53eb:	ff 55 18             	call   *0x18(%rbp)
    53ee:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
    53f2:	49 89 c4             	mov    %rax,%r12
    53f5:	e8 7f 8a 00 00       	call   de79 <netdev_close>
    53fa:	4c 89 ef             	mov    %r13,%rdi
    53fd:	e8 1b f8 ff ff       	call   4c1d <efi_snp_set_state>
    5402:	4c 89 ef             	mov    %r13,%rdi
    5405:	e8 cd fe ff ff       	call   52d7 <efi_snp_flush>
    540a:	4c 89 e1             	mov    %r12,%rcx
    540d:	ff 55 20             	call   *0x20(%rbp)
    5410:	48 83 c4 28          	add    $0x28,%rsp
    5414:	31 c0                	xor    %eax,%eax
    5416:	5b                   	pop    %rbx
    5417:	5e                   	pop    %rsi
    5418:	5f                   	pop    %rdi
    5419:	5d                   	pop    %rbp
    541a:	41 5c                	pop    %r12
    541c:	41 5d                	pop    %r13
    541e:	c3                   	ret    
    541f:	48 b8 06 00 00 00 00 	movabs $0x8000000000000006,%rax
    5426:	00 00 80 
    5429:	c3                   	ret    

000000000000542a <efi_undi_issue>:
    542a:	f3 0f 1e fa          	endbr64 
    542e:	41 55                	push   %r13
    5430:	48 8d 15 c9 fb 01 00 	lea    0x1fbc9(%rip),%rdx        # 25000 <efi_snp_devices>
    5437:	41 54                	push   %r12
    5439:	55                   	push   %rbp
    543a:	57                   	push   %rdi
    543b:	56                   	push   %rsi
    543c:	53                   	push   %rbx
    543d:	48 89 cb             	mov    %rcx,%rbx
    5440:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    5447:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    544b:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
    544f:	48 8b 05 1a 4b 02 00 	mov    0x24b1a(%rip),%rax        # 29f70 <__stack_chk_guard>
    5456:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    545d:	00 
    545e:	31 c0                	xor    %eax,%eax
    5460:	44 0f b7 43 1c       	movzwl 0x1c(%rbx),%r8d
    5465:	48 8b 35 94 fb 01 00 	mov    0x1fb94(%rip),%rsi        # 25000 <efi_snp_devices>
    546c:	48 39 d6             	cmp    %rdx,%rsi
    546f:	74 14                	je     5485 <efi_undi_issue+0x5b>
    5471:	4c 8b 6e 10          	mov    0x10(%rsi),%r13
    5475:	41 8b 45 30          	mov    0x30(%r13),%eax
    5479:	ff c8                	dec    %eax
    547b:	41 39 c0             	cmp    %eax,%r8d
    547e:	74 11                	je     5491 <efi_undi_issue+0x67>
    5480:	48 8b 36             	mov    (%rsi),%rsi
    5483:	eb e7                	jmp    546c <efi_undi_issue+0x42>
    5485:	c7 43 18 01 00 00 80 	movl   $0x80000001,0x18(%rbx)
    548c:	e9 cd 03 00 00       	jmp    585e <efi_undi_issue+0x434>
    5491:	83 3d d0 46 02 00 00 	cmpl   $0x0,0x246d0(%rip)        # 29b68 <efi_snp_claimed>
    5498:	74 0c                	je     54a6 <efi_undi_issue+0x7c>
    549a:	c7 43 18 03 00 00 80 	movl   $0x80000003,0x18(%rbx)
    54a1:	e9 b8 03 00 00       	jmp    585e <efi_undi_issue+0x434>
    54a6:	66 83 3b 11          	cmpw   $0x11,(%rbx)
    54aa:	c7 43 18 00 00 00 c0 	movl   $0xc0000000,0x18(%rbx)
    54b1:	0f 87 64 03 00 00    	ja     581b <efi_undi_issue+0x3f1>
    54b7:	0f b7 03             	movzwl (%rbx),%eax
    54ba:	48 8d 15 9f ce 01 00 	lea    0x1ce9f(%rip),%rdx        # 22360 <efi_attr_fcols.1+0x18>
    54c1:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    54c5:	48 01 d0             	add    %rdx,%rax
    54c8:	3e ff e0             	notrack jmp *%rax
    54cb:	8b 86 a8 00 00 00    	mov    0xa8(%rsi),%eax
    54d1:	83 f8 02             	cmp    $0x2,%eax
    54d4:	75 0b                	jne    54e1 <efi_undi_issue+0xb7>
    54d6:	66 c7 43 1a 02 c0    	movw   $0xc002,0x1a(%rbx)
    54dc:	e9 7d 03 00 00       	jmp    585e <efi_undi_issue+0x434>
    54e1:	ff c8                	dec    %eax
    54e3:	0f 85 75 03 00 00    	jne    585e <efi_undi_issue+0x434>
    54e9:	66 c7 43 1a 01 c0    	movw   $0xc001,0x1a(%rbx)
    54ef:	e9 6a 03 00 00       	jmp    585e <efi_undi_issue+0x434>
    54f4:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    54f8:	e8 51 f7 ff ff       	call   4c4e <efi_snp_start>
    54fd:	e9 12 03 00 00       	jmp    5814 <efi_undi_issue+0x3ea>
    5502:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5506:	e8 77 f7 ff ff       	call   4c82 <efi_snp_stop>
    550b:	e9 04 03 00 00       	jmp    5814 <efi_undi_issue+0x3ea>
    5510:	49 8b 55 50          	mov    0x50(%r13),%rdx
    5514:	48 89 ef             	mov    %rbp,%rdi
    5517:	b9 2f 00 00 00       	mov    $0x2f,%ecx
    551c:	31 c0                	xor    %eax,%eax
    551e:	f3 aa                	rep stos %al,%es:(%rdi)
    5520:	44 0f b6 42 44       	movzbl 0x44(%rdx),%r8d
    5525:	49 8b 8d d8 00 00 00 	mov    0xd8(%r13),%rcx
    552c:	44 29 c1             	sub    %r8d,%ecx
    552f:	66 44 89 45 1e       	mov    %r8w,0x1e(%rbp)
    5534:	89 4d 04             	mov    %ecx,0x4(%rbp)
    5537:	0f b6 42 43          	movzbl 0x43(%rdx),%eax
    553b:	66 89 45 20          	mov    %ax,0x20(%rbp)
    553f:	8b 42 40             	mov    0x40(%rdx),%eax
    5542:	86 c4                	xchg   %al,%ah
    5544:	88 45 2c             	mov    %al,0x2c(%rbp)
    5547:	66 83 4b 1a 03       	orw    $0x3,0x1a(%rbx)
    554c:	e9 0d 03 00 00       	jmp    585e <efi_undi_issue+0x434>
    5551:	45 31 c0             	xor    %r8d,%r8d
    5554:	31 d2                	xor    %edx,%edx
    5556:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    555a:	e8 7f f7 ff ff       	call   4cde <efi_snp_initialize>
    555f:	48 85 c0             	test   %rax,%rax
    5562:	0f 85 bd 02 00 00    	jne    5825 <efi_undi_issue+0x3fb>
    5568:	41 83 bd 84 00 00 00 	cmpl   $0x0,0x84(%r13)
    556f:	00 
    5570:	0f 84 e8 02 00 00    	je     585e <efi_undi_issue+0x434>
    5576:	66 83 4b 1a 01       	orw    $0x1,0x1a(%rbx)
    557b:	e9 de 02 00 00       	jmp    585e <efi_undi_issue+0x434>
    5580:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5584:	31 d2                	xor    %edx,%edx
    5586:	e8 93 fd ff ff       	call   531e <efi_snp_reset>
    558b:	e9 84 02 00 00       	jmp    5814 <efi_undi_issue+0x3ea>
    5590:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5594:	e8 22 fe ff ff       	call   53bb <efi_snp_shutdown>
    5599:	e9 76 02 00 00       	jmp    5814 <efi_undi_issue+0x3ea>
    559e:	66 c7 43 1a 1b c0    	movw   $0xc01b,0x1a(%rbx)
    55a4:	e9 b5 02 00 00       	jmp    585e <efi_undi_issue+0x434>
    55a9:	4d 8b 65 50          	mov    0x50(%r13),%r12
    55ad:	66 8b 53 02          	mov    0x2(%rbx),%dx
    55b1:	48 85 c9             	test   %rcx,%rcx
    55b4:	75 57                	jne    560d <efi_undi_issue+0x1e3>
    55b6:	f6 c2 01             	test   $0x1,%dl
    55b9:	75 52                	jne    560d <efi_undi_issue+0x1e3>
    55bb:	48 85 ed             	test   %rbp,%rbp
    55be:	0f 84 9a 02 00 00    	je     585e <efi_undi_issue+0x434>
    55c4:	48 89 ef             	mov    %rbp,%rdi
    55c7:	b9 60 00 00 00       	mov    $0x60,%ecx
    55cc:	31 c0                	xor    %eax,%eax
    55ce:	f3 aa                	rep stos %al,%es:(%rdi)
    55d0:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    55d6:	49 8d 75 60          	lea    0x60(%r13),%rsi
    55da:	48 89 ef             	mov    %rbp,%rdi
    55dd:	e8 2b 1d 01 00       	call   1730d <__memcpy>
    55e2:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    55e8:	49 8b 75 78          	mov    0x78(%r13),%rsi
    55ec:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    55f0:	e8 18 1d 01 00       	call   1730d <__memcpy>
    55f5:	41 0f b6 54 24 42    	movzbl 0x42(%r12),%edx
    55fb:	49 8d 75 58          	lea    0x58(%r13),%rsi
    55ff:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
    5603:	e8 05 1d 01 00       	call   1730d <__memcpy>
    5608:	e9 51 02 00 00       	jmp    585e <efi_undi_issue+0x434>
    560d:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    5611:	83 e2 01             	and    $0x1,%edx
    5614:	49 89 c8             	mov    %rcx,%r8
    5617:	4c 89 c9             	mov    %r9,%rcx
    561a:	e8 ad f0 ff ff       	call   46cc <efi_snp_station_address>
    561f:	48 85 c0             	test   %rax,%rax
    5622:	74 97                	je     55bb <efi_undi_issue+0x191>
    5624:	e9 fc 01 00 00       	jmp    5825 <efi_undi_issue+0x3fb>
    5629:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
    562e:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5632:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    5637:	e8 05 ef ff ff       	call   4541 <efi_snp_get_status>
    563c:	48 85 c0             	test   %rax,%rax
    563f:	0f 85 e0 01 00 00    	jne    5825 <efi_undi_issue+0x3fb>
    5645:	48 89 ef             	mov    %rbp,%rdi
    5648:	b9 08 01 00 00       	mov    $0x108,%ecx
    564d:	f3 aa                	rep stos %al,%es:(%rdi)
    564f:	8b 44 24 48          	mov    0x48(%rsp),%eax
    5653:	a8 01                	test   $0x1,%al
    5655:	74 05                	je     565c <efi_undi_issue+0x232>
    5657:	66 83 4b 1a 01       	orw    $0x1,0x1a(%rbx)
    565c:	a8 02                	test   $0x2,%al
    565e:	74 05                	je     5665 <efi_undi_issue+0x23b>
    5660:	66 83 4b 1a 02       	orw    $0x2,0x1a(%rbx)
    5665:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    566a:	48 85 c0             	test   %rax,%rax
    566d:	74 06                	je     5675 <efi_undi_issue+0x24b>
    566f:	48 89 45 08          	mov    %rax,0x8(%rbp)
    5673:	eb 22                	jmp    5697 <efi_undi_issue+0x26d>
    5675:	66 8b 43 1a          	mov    0x1a(%rbx),%ax
    5679:	8b be 44 04 00 00    	mov    0x444(%rsi),%edi
    567f:	89 c2                	mov    %eax,%edx
    5681:	83 ca 20             	or     $0x20,%edx
    5684:	66 89 53 1a          	mov    %dx,0x1a(%rbx)
    5688:	39 be 40 04 00 00    	cmp    %edi,0x440(%rsi)
    568e:	75 07                	jne    5697 <efi_undi_issue+0x26d>
    5690:	83 c8 30             	or     $0x30,%eax
    5693:	66 89 43 1a          	mov    %ax,0x1a(%rbx)
    5697:	48 8b 86 48 04 00 00 	mov    0x448(%rsi),%rax
    569e:	48 8d 96 48 04 00 00 	lea    0x448(%rsi),%rdx
    56a5:	48 39 d0             	cmp    %rdx,%rax
    56a8:	74 10                	je     56ba <efi_undi_issue+0x290>
    56aa:	48 85 c0             	test   %rax,%rax
    56ad:	74 0b                	je     56ba <efi_undi_issue+0x290>
    56af:	48 8b 50 20          	mov    0x20(%rax),%rdx
    56b3:	48 2b 50 18          	sub    0x18(%rax),%rdx
    56b7:	89 55 00             	mov    %edx,0x0(%rbp)
    56ba:	48 8b 46 10          	mov    0x10(%rsi),%rax
    56be:	83 b8 84 00 00 00 00 	cmpl   $0x0,0x84(%rax)
    56c5:	0f 84 93 01 00 00    	je     585e <efi_undi_issue+0x434>
    56cb:	66 83 4b 1a 40       	orw    $0x40,0x1a(%rbx)
    56d0:	e9 89 01 00 00       	jmp    585e <efi_undi_issue+0x434>
    56d5:	4d 8b 4d 50          	mov    0x50(%r13),%r9
    56d9:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    56dd:	f6 43 02 01          	testb  $0x1,0x2(%rbx)
    56e1:	74 0b                	je     56ee <efi_undi_issue+0x2c4>
    56e3:	48 8b 41 4c          	mov    0x4c(%rcx),%rax
    56e7:	44 0f b7 41 44       	movzwl 0x44(%rcx),%r8d
    56ec:	eb 09                	jmp    56f7 <efi_undi_issue+0x2cd>
    56ee:	48 8b 41 40          	mov    0x40(%rcx),%rax
    56f2:	44 0f b7 41 4c       	movzwl 0x4c(%rcx),%r8d
    56f7:	45 0f b6 51 44       	movzbl 0x44(%r9),%r10d
    56fc:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    5701:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
    5706:	4c 89 ef             	mov    %r13,%rdi
    5709:	4c 01 d0             	add    %r10,%rax
    570c:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    5711:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    5716:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    571b:	41 ff 51 08          	call   *0x8(%r9)
    571f:	89 c2                	mov    %eax,%edx
    5721:	85 c0                	test   %eax,%eax
    5723:	0f 84 35 01 00 00    	je     585e <efi_undi_issue+0x434>
    5729:	f7 da                	neg    %edx
    572b:	b9 01 00 00 00       	mov    $0x1,%ecx
    5730:	48 89 d0             	mov    %rdx,%rax
    5733:	48 c1 e1 3f          	shl    $0x3f,%rcx
    5737:	83 e2 7f             	and    $0x7f,%edx
    573a:	48 c1 e0 38          	shl    $0x38,%rax
    573e:	48 21 c8             	and    %rcx,%rax
    5741:	48 09 d0             	or     %rdx,%rax
    5744:	e9 cb 00 00 00       	jmp    5814 <efi_undi_issue+0x3ea>
    5749:	44 8b 41 08          	mov    0x8(%rcx),%r8d
    574d:	4c 8d 56 28          	lea    0x28(%rsi),%r10
    5751:	31 d2                	xor    %edx,%edx
    5753:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
    575a:	00 00 
    575c:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    5763:	00 00 
    5765:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    576c:	00 00 
    576e:	4c 8b 09             	mov    (%rcx),%r9
    5771:	4c 89 d1             	mov    %r10,%rcx
    5774:	e8 a4 f2 ff ff       	call   4a1d <efi_snp_transmit>
    5779:	e9 96 00 00 00       	jmp    5814 <efi_undi_issue+0x3ea>
    577e:	8b 41 08             	mov    0x8(%rcx),%eax
    5781:	4c 8b 09             	mov    (%rcx),%r9
    5784:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    5788:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
    578d:	4d 8b 65 50          	mov    0x50(%r13),%r12
    5791:	48 8d b4 24 88 00 00 	lea    0x88(%rsp),%rsi
    5798:	00 
    5799:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    579e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    57a3:	4c 8d ac 24 a8 00 00 	lea    0xa8(%rsp),%r13
    57aa:	00 
    57ab:	48 8d 44 24 46       	lea    0x46(%rsp),%rax
    57b0:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    57b5:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
    57ba:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    57bf:	e8 50 f0 ff ff       	call   4814 <efi_snp_receive>
    57c4:	48 85 c0             	test   %rax,%rax
    57c7:	75 5c                	jne    5825 <efi_undi_issue+0x3fb>
    57c9:	48 89 ef             	mov    %rbp,%rdi
    57cc:	b9 50 00 00 00       	mov    $0x50,%ecx
    57d1:	f3 aa                	rep stos %al,%es:(%rdi)
    57d3:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    57d9:	48 89 ef             	mov    %rbp,%rdi
    57dc:	e8 2c 1b 01 00       	call   1730d <__memcpy>
    57e1:	41 0f b6 54 24 43    	movzbl 0x43(%r12),%edx
    57e7:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    57eb:	4c 89 ee             	mov    %r13,%rsi
    57ee:	e8 1a 1b 01 00       	call   1730d <__memcpy>
    57f3:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    57f8:	89 45 40             	mov    %eax,0x40(%rbp)
    57fb:	66 8b 44 24 46       	mov    0x46(%rsp),%ax
    5800:	66 89 45 44          	mov    %ax,0x44(%rbp)
    5804:	41 0f b6 44 24 44    	movzbl 0x44(%r12),%eax
    580a:	c6 45 48 04          	movb   $0x4,0x48(%rbp)
    580e:	66 89 45 46          	mov    %ax,0x46(%rbp)
    5812:	eb 4a                	jmp    585e <efi_undi_issue+0x434>
    5814:	48 85 c0             	test   %rax,%rax
    5817:	75 0c                	jne    5825 <efi_undi_issue+0x3fb>
    5819:	eb 43                	jmp    585e <efi_undi_issue+0x434>
    581b:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    5822:	00 00 80 
    5825:	66 8b 53 1a          	mov    0x1a(%rbx),%dx
    5829:	66 81 e2 ff 3f       	and    $0x3fff,%dx
    582e:	66 81 ca 00 80       	or     $0x8000,%dx
    5833:	66 89 53 1a          	mov    %dx,0x1a(%rbx)
    5837:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    583e:	ff ff 7f 
    5841:	48 01 d0             	add    %rdx,%rax
    5844:	ba 01 00 00 00       	mov    $0x1,%edx
    5849:	48 83 f8 16          	cmp    $0x16,%rax
    584d:	77 0b                	ja     585a <efi_undi_issue+0x430>
    584f:	48 8d 15 5a cb 01 00 	lea    0x1cb5a(%rip),%rdx        # 223b0 <CSWTCH.261>
    5856:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    585a:	66 89 53 18          	mov    %dx,0x18(%rbx)
    585e:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    5865:	00 
    5866:	48 2b 05 03 47 02 00 	sub    0x24703(%rip),%rax        # 29f70 <__stack_chk_guard>
    586d:	74 05                	je     5874 <efi_undi_issue+0x44a>
    586f:	e8 ec d1 ff ff       	call   2a60 <__stack_chk_fail>
    5874:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    587b:	5b                   	pop    %rbx
    587c:	5e                   	pop    %rsi
    587d:	5f                   	pop    %rdi
    587e:	5d                   	pop    %rbp
    587f:	41 5c                	pop    %r12
    5881:	41 5d                	pop    %r13
    5883:	c3                   	ret    

0000000000005884 <efi_snp_remove>:
    5884:	f3 0f 1e fa          	endbr64 
    5888:	41 55                	push   %r13
    588a:	41 54                	push   %r12
    588c:	55                   	push   %rbp
    588d:	53                   	push   %rbx
    588e:	51                   	push   %rcx
    588f:	e8 28 ec ff ff       	call   44bc <efi_snp_demux>
    5894:	48 85 c0             	test   %rax,%rax
    5897:	0f 84 16 01 00 00    	je     59b3 <efi_snp_remove+0x12f>
    589d:	48 89 c5             	mov    %rax,%rbp
    58a0:	48 8b 05 f1 46 02 00 	mov    0x246f1(%rip),%rax        # 29f98 <efi_systab>
    58a7:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    58ab:	48 83 bd b8 04 00 00 	cmpq   $0x0,0x4b8(%rbp)
    58b2:	00 
    58b3:	48 8b 58 60          	mov    0x60(%rax),%rbx
    58b7:	48 8b 45 08          	mov    0x8(%rbp),%rax
    58bb:	48 89 42 08          	mov    %rax,0x8(%rdx)
    58bf:	48 89 10             	mov    %rdx,(%rax)
    58c2:	74 08                	je     58cc <efi_snp_remove+0x48>
    58c4:	48 89 ef             	mov    %rbp,%rdi
    58c7:	e8 34 0f 00 00       	call   6800 <efi_snp_hii_uninstall>
    58cc:	48 8b 45 18          	mov    0x18(%rbp),%rax
    58d0:	48 8b 75 20          	mov    0x20(%rbp),%rsi
    58d4:	4c 8d 25 a5 ef 01 00 	lea    0x1efa5(%rip),%r12        # 24880 <efi_nii_protocol_guid>
    58db:	4c 8d 2d 8e ef 01 00 	lea    0x1ef8e(%rip),%r13        # 24870 <efi_nii31_protocol_guid>
    58e2:	48 8b b8 80 00 00 00 	mov    0x80(%rax),%rdi
    58e9:	e8 54 11 00 00       	call   6a42 <efi_child_del>
    58ee:	48 8b 4d 20          	mov    0x20(%rbp),%rcx
    58f2:	48 83 ec 20          	sub    $0x20,%rsp
    58f6:	4c 89 e2             	mov    %r12,%rdx
    58f9:	4c 8b 05 88 46 02 00 	mov    0x24688(%rip),%r8        # 29f88 <efi_image_handle>
    5900:	49 89 c9             	mov    %rcx,%r9
    5903:	ff 93 20 01 00 00    	call   *0x120(%rbx)
    5909:	48 8b 4d 20          	mov    0x20(%rbp),%rcx
    590d:	4c 89 ea             	mov    %r13,%rdx
    5910:	4c 8b 05 71 46 02 00 	mov    0x24671(%rip),%r8        # 29f88 <efi_image_handle>
    5917:	49 89 c9             	mov    %rcx,%r9
    591a:	ff 93 20 01 00 00    	call   *0x120(%rbx)
    5920:	48 83 c4 20          	add    $0x20,%rsp
    5924:	48 8b 4d 20          	mov    0x20(%rbp),%rcx
    5928:	48 8d 95 98 04 00 00 	lea    0x498(%rbp),%rdx
    592f:	48 8d 35 ba eb 01 00 	lea    0x1ebba(%rip),%rsi        # 244f0 <dummy_load_file_protocol_guid>
    5936:	6a 00                	push   $0x0
    5938:	4c 8d 45 28          	lea    0x28(%rbp),%r8
    593c:	52                   	push   %rdx
    593d:	48 8d 85 58 04 00 00 	lea    0x458(%rbp),%rax
    5944:	48 8d 95 80 04 00 00 	lea    0x480(%rbp),%rdx
    594b:	56                   	push   %rsi
    594c:	48 8d 35 7d f0 01 00 	lea    0x1f07d(%rip),%rsi        # 249d0 <efi_component_name2_protocol_guid>
    5953:	4c 8d 0d 56 f0 01 00 	lea    0x1f056(%rip),%r9        # 249b0 <efi_device_path_protocol_guid>
    595a:	52                   	push   %rdx
    595b:	48 8d 15 ae ee 01 00 	lea    0x1eeae(%rip),%rdx        # 24810 <efi_simple_network_protocol_guid>
    5962:	56                   	push   %rsi
    5963:	50                   	push   %rax
    5964:	41 55                	push   %r13
    5966:	50                   	push   %rax
    5967:	41 54                	push   %r12
    5969:	ff b5 90 05 00 00    	push   0x590(%rbp)
    596f:	48 83 ec 20          	sub    $0x20,%rsp
    5973:	ff 93 50 01 00 00    	call   *0x150(%rbx)
    5979:	48 8b bd 90 05 00 00 	mov    0x590(%rbp),%rdi
    5980:	48 83 c4 70          	add    $0x70,%rsp
    5984:	e8 c6 6c 00 00       	call   c64f <free>
    5989:	48 8b 8d 98 00 00 00 	mov    0x98(%rbp),%rcx
    5990:	48 83 ec 20          	sub    $0x20,%rsp
    5994:	ff 53 70             	call   *0x70(%rbx)
    5997:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    599b:	48 83 c4 20          	add    $0x20,%rsp
    599f:	e8 9a a4 00 00       	call   fe3e <ref_decrement>
    59a4:	5a                   	pop    %rdx
    59a5:	48 89 ef             	mov    %rbp,%rdi
    59a8:	5b                   	pop    %rbx
    59a9:	5d                   	pop    %rbp
    59aa:	41 5c                	pop    %r12
    59ac:	41 5d                	pop    %r13
    59ae:	e9 9c 6c 00 00       	jmp    c64f <free>
    59b3:	58                   	pop    %rax
    59b4:	5b                   	pop    %rbx
    59b5:	5d                   	pop    %rbp
    59b6:	41 5c                	pop    %r12
    59b8:	41 5d                	pop    %r13
    59ba:	c3                   	ret    

00000000000059bb <last_opened_snpdev>:
    59bb:	f3 0f 1e fa          	endbr64 
    59bf:	56                   	push   %rsi
    59c0:	e8 25 86 00 00       	call   dfea <last_opened_netdev>
    59c5:	48 85 c0             	test   %rax,%rax
    59c8:	74 09                	je     59d3 <last_opened_snpdev+0x18>
    59ca:	48 89 c7             	mov    %rax,%rdi
    59cd:	59                   	pop    %rcx
    59ce:	e9 e9 ea ff ff       	jmp    44bc <efi_snp_demux>
    59d3:	31 c0                	xor    %eax,%eax
    59d5:	5a                   	pop    %rdx
    59d6:	c3                   	ret    

00000000000059d7 <efi_snp_add_claim>:
    59d7:	f3 0f 1e fa          	endbr64 
    59db:	55                   	push   %rbp
    59dc:	53                   	push   %rbx
    59dd:	89 fb                	mov    %edi,%ebx
    59df:	52                   	push   %rdx
    59e0:	48 8b 05 b1 45 02 00 	mov    0x245b1(%rip),%rax        # 29f98 <efi_systab>
    59e7:	83 3d 7a 41 02 00 00 	cmpl   $0x0,0x2417a(%rip)        # 29b68 <efi_snp_claimed>
    59ee:	48 8b 68 60          	mov    0x60(%rax),%rbp
    59f2:	75 17                	jne    5a0b <efi_snp_add_claim+0x34>
    59f4:	48 83 ec 20          	sub    $0x20,%rsp
    59f8:	b9 08 00 00 00       	mov    $0x8,%ecx
    59fd:	ff 55 18             	call   *0x18(%rbp)
    5a00:	48 83 c4 20          	add    $0x20,%rsp
    5a04:	48 89 05 55 41 02 00 	mov    %rax,0x24155(%rip)        # 29b60 <efi_snp_old_tpl>
    5a0b:	03 1d 57 41 02 00    	add    0x24157(%rip),%ebx        # 29b68 <efi_snp_claimed>
    5a11:	48 8b 35 e8 f5 01 00 	mov    0x1f5e8(%rip),%rsi        # 25000 <efi_snp_devices>
    5a18:	4c 8d 05 e1 f5 01 00 	lea    0x1f5e1(%rip),%r8        # 25000 <efi_snp_devices>
    5a1f:	89 1d 43 41 02 00    	mov    %ebx,0x24143(%rip)        # 29b68 <efi_snp_claimed>
    5a25:	4c 39 c6             	cmp    %r8,%rsi
    5a28:	74 0d                	je     5a37 <efi_snp_add_claim+0x60>
    5a2a:	48 89 f7             	mov    %rsi,%rdi
    5a2d:	e8 eb f1 ff ff       	call   4c1d <efi_snp_set_state>
    5a32:	48 8b 36             	mov    (%rsi),%rsi
    5a35:	eb ee                	jmp    5a25 <efi_snp_add_claim+0x4e>
    5a37:	85 db                	test   %ebx,%ebx
    5a39:	75 12                	jne    5a4d <efi_snp_add_claim+0x76>
    5a3b:	48 83 ec 20          	sub    $0x20,%rsp
    5a3f:	48 8b 0d 1a 41 02 00 	mov    0x2411a(%rip),%rcx        # 29b60 <efi_snp_old_tpl>
    5a46:	ff 55 20             	call   *0x20(%rbp)
    5a49:	48 83 c4 20          	add    $0x20,%rsp
    5a4d:	58                   	pop    %rax
    5a4e:	5b                   	pop    %rbx
    5a4f:	5d                   	pop    %rbp
    5a50:	c3                   	ret    

0000000000005a51 <efi_snp_load_file>:
    5a51:	f3 0f 1e fa          	endbr64 
    5a55:	45 84 c0             	test   %r8b,%r8b
    5a58:	74 6f                	je     5ac9 <efi_snp_load_file+0x78>
    5a5a:	41 54                	push   %r12
    5a5c:	4c 8b a1 78 fb ff ff 	mov    -0x488(%rcx),%r12
    5a63:	55                   	push   %rbp
    5a64:	48 8d 2d d5 f5 01 00 	lea    0x1f5d5(%rip),%rbp        # 25040 <efi_watchdog>
    5a6b:	57                   	push   %rdi
    5a6c:	bf 01 00 00 00       	mov    $0x1,%edi
    5a71:	56                   	push   %rsi
    5a72:	53                   	push   %rbx
    5a73:	e8 5f ff ff ff       	call   59d7 <efi_snp_add_claim>
    5a78:	31 f6                	xor    %esi,%esi
    5a7a:	48 89 ef             	mov    %rbp,%rdi
    5a7d:	e8 e0 a7 00 00       	call   10262 <start_timer_fixed>
    5a82:	4c 89 e7             	mov    %r12,%rdi
    5a85:	e8 f1 2c 01 00       	call   1877b <ipxe>
    5a8a:	89 c3                	mov    %eax,%ebx
    5a8c:	85 c0                	test   %eax,%eax
    5a8e:	75 07                	jne    5a97 <efi_snp_load_file+0x46>
    5a90:	31 ff                	xor    %edi,%edi
    5a92:	e8 0d 38 01 00       	call   192a4 <console_configure>
    5a97:	48 89 ef             	mov    %rbp,%rdi
    5a9a:	f7 db                	neg    %ebx
    5a9c:	e8 2f a8 00 00       	call   102d0 <stop_timer>
    5aa1:	83 cf ff             	or     $0xffffffff,%edi
    5aa4:	e8 2e ff ff ff       	call   59d7 <efi_snp_add_claim>
    5aa9:	48 89 d8             	mov    %rbx,%rax
    5aac:	ba 01 00 00 00       	mov    $0x1,%edx
    5ab1:	83 e3 7f             	and    $0x7f,%ebx
    5ab4:	48 c1 e0 38          	shl    $0x38,%rax
    5ab8:	48 c1 e2 3f          	shl    $0x3f,%rdx
    5abc:	48 21 d0             	and    %rdx,%rax
    5abf:	48 09 d8             	or     %rbx,%rax
    5ac2:	5b                   	pop    %rbx
    5ac3:	5e                   	pop    %rsi
    5ac4:	5f                   	pop    %rdi
    5ac5:	5d                   	pop    %rbp
    5ac6:	41 5c                	pop    %r12
    5ac8:	c3                   	ret    
    5ac9:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    5ad0:	00 00 80 
    5ad3:	c3                   	ret    

0000000000005ad4 <efi_snp_hii_callback>:
    5ad4:	f3 0f 1e fa          	endbr64 
    5ad8:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
    5adf:	00 00 80 
    5ae2:	c3                   	ret    

0000000000005ae3 <efi_snp_hii_process>:
    5ae3:	41 57                	push   %r15
    5ae5:	49 89 fa             	mov    %rdi,%r10
    5ae8:	4d 89 cf             	mov    %r9,%r15
    5aeb:	41 56                	push   %r14
    5aed:	49 89 d6             	mov    %rdx,%r14
    5af0:	31 d2                	xor    %edx,%edx
    5af2:	41 55                	push   %r13
    5af4:	49 89 f5             	mov    %rsi,%r13
    5af7:	41 54                	push   %r12
    5af9:	49 89 f4             	mov    %rsi,%r12
    5afc:	55                   	push   %rbp
    5afd:	53                   	push   %rbx
    5afe:	48 83 ec 28          	sub    $0x28,%rsp
    5b02:	66 41 8b 04 24       	mov    (%r12),%ax
    5b07:	66 83 f8 26          	cmp    $0x26,%ax
    5b0b:	74 13                	je     5b20 <efi_snp_hii_process+0x3d>
    5b0d:	66 85 c0             	test   %ax,%ax
    5b10:	74 0e                	je     5b20 <efi_snp_hii_process+0x3d>
    5b12:	49 83 c4 02          	add    $0x2,%r12
    5b16:	66 83 f8 3d          	cmp    $0x3d,%ax
    5b1a:	49 0f 44 d4          	cmove  %r12,%rdx
    5b1e:	eb e2                	jmp    5b02 <efi_snp_hii_process+0x1f>
    5b20:	4c 89 e3             	mov    %r12,%rbx
    5b23:	48 85 d2             	test   %rdx,%rdx
    5b26:	74 04                	je     5b2c <efi_snp_hii_process+0x49>
    5b28:	48 8d 5a fe          	lea    -0x2(%rdx),%rbx
    5b2c:	4c 89 e5             	mov    %r12,%rbp
    5b2f:	4c 29 eb             	sub    %r13,%rbx
    5b32:	b8 00 00 00 00       	mov    $0x0,%eax
    5b37:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    5b3c:	48 29 d5             	sub    %rdx,%rbp
    5b3f:	48 d1 fb             	sar    %rbx
    5b42:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    5b47:	48 d1 fd             	sar    %rbp
    5b4a:	48 85 d2             	test   %rdx,%rdx
    5b4d:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    5b52:	48 0f 44 e8          	cmove  %rax,%rbp
    5b56:	48 89 14 24          	mov    %rdx,(%rsp)
    5b5a:	48 8d 7c 1d 02       	lea    0x2(%rbp,%rbx,1),%rdi
    5b5f:	e8 f6 6a 00 00       	call   c65a <zalloc>
    5b64:	48 8b 14 24          	mov    (%rsp),%rdx
    5b68:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    5b6d:	48 85 c0             	test   %rax,%rax
    5b70:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    5b75:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    5b7a:	49 89 c1             	mov    %rax,%r9
    5b7d:	4c 8d 5c 18 01       	lea    0x1(%rax,%rbx,1),%r11
    5b82:	75 07                	jne    5b8b <efi_snp_hii_process+0xa8>
    5b84:	b8 77 1f ce ce       	mov    $0xcece1f77,%eax
    5b89:	eb 4b                	jmp    5bd6 <efi_snp_hii_process+0xf3>
    5b8b:	48 83 eb 01          	sub    $0x1,%rbx
    5b8f:	72 0c                	jb     5b9d <efi_snp_hii_process+0xba>
    5b91:	66 41 8b 44 5d 00    	mov    0x0(%r13,%rbx,2),%ax
    5b97:	41 88 04 19          	mov    %al,(%r9,%rbx,1)
    5b9b:	eb ee                	jmp    5b8b <efi_snp_hii_process+0xa8>
    5b9d:	48 83 ed 01          	sub    $0x1,%rbp
    5ba1:	72 0a                	jb     5bad <efi_snp_hii_process+0xca>
    5ba3:	66 8b 04 6a          	mov    (%rdx,%rbp,2),%ax
    5ba7:	41 88 04 2b          	mov    %al,(%r11,%rbp,1)
    5bab:	eb f0                	jmp    5b9d <efi_snp_hii_process+0xba>
    5bad:	4c 89 0c 24          	mov    %r9,(%rsp)
    5bb1:	4c 89 ce             	mov    %r9,%rsi
    5bb4:	4c 89 da             	mov    %r11,%rdx
    5bb7:	4c 89 d7             	mov    %r10,%rdi
    5bba:	41 ff d7             	call   *%r15
    5bbd:	4c 8b 0c 24          	mov    (%rsp),%r9
    5bc1:	85 c0                	test   %eax,%eax
    5bc3:	75 03                	jne    5bc8 <efi_snp_hii_process+0xe5>
    5bc5:	4d 89 26             	mov    %r12,(%r14)
    5bc8:	4c 89 cf             	mov    %r9,%rdi
    5bcb:	89 04 24             	mov    %eax,(%rsp)
    5bce:	e8 7c 6a 00 00       	call   c64f <free>
    5bd3:	8b 04 24             	mov    (%rsp),%eax
    5bd6:	48 83 c4 28          	add    $0x28,%rsp
    5bda:	5b                   	pop    %rbx
    5bdb:	5d                   	pop    %rbp
    5bdc:	41 5c                	pop    %r12
    5bde:	41 5d                	pop    %r13
    5be0:	41 5e                	pop    %r14
    5be2:	41 5f                	pop    %r15
    5be4:	c3                   	ret    

0000000000005be5 <efi_snp_hii_route_config>:
    5be5:	f3 0f 1e fa          	endbr64 
    5be9:	41 54                	push   %r12
    5beb:	4c 8d 25 68 03 00 00 	lea    0x368(%rip),%r12        # 5f5a <efi_snp_hii_store>
    5bf2:	55                   	push   %rbp
    5bf3:	48 8d a9 60 fb ff ff 	lea    -0x4a0(%rcx),%rbp
    5bfa:	57                   	push   %rdi
    5bfb:	56                   	push   %rsi
    5bfc:	48 89 d6             	mov    %rdx,%rsi
    5bff:	53                   	push   %rbx
    5c00:	4c 89 c3             	mov    %r8,%rbx
    5c03:	49 89 10             	mov    %rdx,(%r8)
    5c06:	48 8b 03             	mov    (%rbx),%rax
    5c09:	48 85 c0             	test   %rax,%rax
    5c0c:	74 43                	je     5c51 <efi_snp_hii_route_config+0x6c>
    5c0e:	66 83 38 00          	cmpw   $0x0,(%rax)
    5c12:	74 3d                	je     5c51 <efi_snp_hii_route_config+0x6c>
    5c14:	45 31 c0             	xor    %r8d,%r8d
    5c17:	31 c9                	xor    %ecx,%ecx
    5c19:	4d 89 e1             	mov    %r12,%r9
    5c1c:	48 89 da             	mov    %rbx,%rdx
    5c1f:	48 89 ef             	mov    %rbp,%rdi
    5c22:	e8 bc fe ff ff       	call   5ae3 <efi_snp_hii_process>
    5c27:	85 c0                	test   %eax,%eax
    5c29:	74 1d                	je     5c48 <efi_snp_hii_route_config+0x63>
    5c2b:	f7 d8                	neg    %eax
    5c2d:	b9 01 00 00 00       	mov    $0x1,%ecx
    5c32:	48 89 c2             	mov    %rax,%rdx
    5c35:	48 c1 e1 3f          	shl    $0x3f,%rcx
    5c39:	83 e0 7f             	and    $0x7f,%eax
    5c3c:	48 c1 e2 38          	shl    $0x38,%rdx
    5c40:	48 21 ca             	and    %rcx,%rdx
    5c43:	48 09 d0             	or     %rdx,%rax
    5c46:	eb 0b                	jmp    5c53 <efi_snp_hii_route_config+0x6e>
    5c48:	48 8b 03             	mov    (%rbx),%rax
    5c4b:	48 8d 70 02          	lea    0x2(%rax),%rsi
    5c4f:	eb b5                	jmp    5c06 <efi_snp_hii_route_config+0x21>
    5c51:	31 c0                	xor    %eax,%eax
    5c53:	5b                   	pop    %rbx
    5c54:	5e                   	pop    %rsi
    5c55:	5f                   	pop    %rdi
    5c56:	5d                   	pop    %rbp
    5c57:	41 5c                	pop    %r12
    5c59:	c3                   	ret    

0000000000005c5a <efi_snp_hii_random_guid>:
    5c5a:	55                   	push   %rbp
    5c5b:	48 89 fd             	mov    %rdi,%rbp
    5c5e:	53                   	push   %rbx
    5c5f:	31 db                	xor    %ebx,%ebx
    5c61:	52                   	push   %rdx
    5c62:	e8 da 9d 00 00       	call   fa41 <random>
    5c67:	88 44 1d 00          	mov    %al,0x0(%rbp,%rbx,1)
    5c6b:	48 ff c3             	inc    %rbx
    5c6e:	48 83 fb 10          	cmp    $0x10,%rbx
    5c72:	75 ee                	jne    5c62 <efi_snp_hii_random_guid+0x8>
    5c74:	58                   	pop    %rax
    5c75:	5b                   	pop    %rbx
    5c76:	5d                   	pop    %rbp
    5c77:	c3                   	ret    

0000000000005c78 <efi_snp_hii_append.constprop.0>:
    5c78:	41 56                	push   %r14
    5c7a:	45 31 f6             	xor    %r14d,%r14d
    5c7d:	41 55                	push   %r13
    5c7f:	41 54                	push   %r12
    5c81:	49 89 f4             	mov    %rsi,%r12
    5c84:	55                   	push   %rbp
    5c85:	48 89 fd             	mov    %rdi,%rbp
    5c88:	53                   	push   %rbx
    5c89:	48 89 d3             	mov    %rdx,%rbx
    5c8c:	48 83 ec 10          	sub    $0x10,%rsp
    5c90:	48 8b 3a             	mov    (%rdx),%rdi
    5c93:	48 8b 05 d6 42 02 00 	mov    0x242d6(%rip),%rax        # 29f70 <__stack_chk_guard>
    5c9a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5c9f:	48 8b 05 f2 42 02 00 	mov    0x242f2(%rip),%rax        # 29f98 <efi_systab>
    5ca6:	4c 8b 68 60          	mov    0x60(%rax),%r13
    5caa:	48 85 ff             	test   %rdi,%rdi
    5cad:	74 09                	je     5cb8 <efi_snp_hii_append.constprop.0+0x40>
    5caf:	e8 54 15 01 00       	call   17208 <wcslen>
    5cb4:	4c 8d 70 01          	lea    0x1(%rax),%r14
    5cb8:	48 89 ef             	mov    %rbp,%rdi
    5cbb:	e8 7a dc 00 00       	call   1393a <strlen>
    5cc0:	4c 89 e7             	mov    %r12,%rdi
    5cc3:	49 01 c6             	add    %rax,%r14
    5cc6:	e8 6f dc 00 00       	call   1393a <strlen>
    5ccb:	48 83 ec 20          	sub    $0x20,%rsp
    5ccf:	b9 04 00 00 00       	mov    $0x4,%ecx
    5cd4:	4d 8d 74 06 02       	lea    0x2(%r14,%rax,1),%r14
    5cd9:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
    5cde:	4b 8d 14 36          	lea    (%r14,%r14,1),%rdx
    5ce2:	41 ff 55 40          	call   *0x40(%r13)
    5ce6:	48 83 c4 20          	add    $0x20,%rsp
    5cea:	48 89 c2             	mov    %rax,%rdx
    5ced:	48 85 c0             	test   %rax,%rax
    5cf0:	74 12                	je     5d04 <efi_snp_hii_append.constprop.0+0x8c>
    5cf2:	48 c1 e8 38          	shr    $0x38,%rax
    5cf6:	09 d0                	or     %edx,%eax
    5cf8:	0f b6 c0             	movzbl %al,%eax
    5cfb:	0d 00 e0 31 7f       	or     $0x7f31e000,%eax
    5d00:	f7 d8                	neg    %eax
    5d02:	eb 4e                	jmp    5d52 <efi_snp_hii_append.constprop.0+0xda>
    5d04:	48 8b 0b             	mov    (%rbx),%rcx
    5d07:	4c 8d 05 0e cb 01 00 	lea    0x1cb0e(%rip),%r8        # 2281c <.LC1>
    5d0e:	48 85 c9             	test   %rcx,%rcx
    5d11:	75 0a                	jne    5d1d <efi_snp_hii_append.constprop.0+0xa5>
    5d13:	4c 8d 05 04 cb 01 00 	lea    0x1cb04(%rip),%r8        # 2281e <.LC0>
    5d1a:	4c 89 c1             	mov    %r8,%rcx
    5d1d:	56                   	push   %rsi
    5d1e:	49 89 e9             	mov    %rbp,%r9
    5d21:	48 8d 15 f8 ca 01 00 	lea    0x1caf8(%rip),%rdx        # 22820 <.LC2>
    5d28:	4c 89 f6             	mov    %r14,%rsi
    5d2b:	41 54                	push   %r12
    5d2d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    5d32:	31 c0                	xor    %eax,%eax
    5d34:	e8 0b 0c 00 00       	call   6944 <efi_snprintf>
    5d39:	48 83 ec 20          	sub    $0x20,%rsp
    5d3d:	48 8b 0b             	mov    (%rbx),%rcx
    5d40:	41 ff 55 48          	call   *0x48(%r13)
    5d44:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    5d49:	48 83 c4 30          	add    $0x30,%rsp
    5d4d:	48 89 03             	mov    %rax,(%rbx)
    5d50:	31 c0                	xor    %eax,%eax
    5d52:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    5d57:	48 2b 15 12 42 02 00 	sub    0x24212(%rip),%rdx        # 29f70 <__stack_chk_guard>
    5d5e:	74 05                	je     5d65 <efi_snp_hii_append.constprop.0+0xed>
    5d60:	e8 fb cc ff ff       	call   2a60 <__stack_chk_fail>
    5d65:	48 83 c4 10          	add    $0x10,%rsp
    5d69:	5b                   	pop    %rbx
    5d6a:	5d                   	pop    %rbp
    5d6b:	41 5c                	pop    %r12
    5d6d:	41 5d                	pop    %r13
    5d6f:	41 5e                	pop    %r14
    5d71:	c3                   	ret    

0000000000005d72 <efi_snp_hii_fetch>:
    5d72:	f3 0f 1e fa          	endbr64 
    5d76:	41 57                	push   %r15
    5d78:	41 56                	push   %r14
    5d7a:	49 89 ce             	mov    %rcx,%r14
    5d7d:	41 55                	push   %r13
    5d7f:	49 89 f5             	mov    %rsi,%r13
    5d82:	48 8d 35 a2 ca 01 00 	lea    0x1caa2(%rip),%rsi        # 2282b <.LC4>
    5d89:	41 54                	push   %r12
    5d8b:	49 89 d4             	mov    %rdx,%r12
    5d8e:	55                   	push   %rbp
    5d8f:	53                   	push   %rbx
    5d90:	4c 89 c3             	mov    %r8,%rbx
    5d93:	48 83 ec 58          	sub    $0x58,%rsp
    5d97:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    5d9b:	48 8b 05 ce 41 02 00 	mov    0x241ce(%rip),%rax        # 29f70 <__stack_chk_guard>
    5da2:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    5da7:	31 c0                	xor    %eax,%eax
    5da9:	48 81 c7 68 01 00 00 	add    $0x168,%rdi
    5db0:	e8 27 bb 00 00       	call   118dc <find_child_settings>
    5db5:	48 8d 35 73 ca 01 00 	lea    0x1ca73(%rip),%rsi        # 2282f <.LC5>
    5dbc:	4c 89 ef             	mov    %r13,%rdi
    5dbf:	48 89 c5             	mov    %rax,%rbp
    5dc2:	e8 26 db 00 00       	call   138ed <strcasecmp>
    5dc7:	85 c0                	test   %eax,%eax
    5dc9:	74 26                	je     5df1 <efi_snp_hii_fetch+0x7f>
    5dcb:	48 8d 35 62 ca 01 00 	lea    0x1ca62(%rip),%rsi        # 22834 <.LC6>
    5dd2:	4c 89 ef             	mov    %r13,%rdi
    5dd5:	e8 13 db 00 00       	call   138ed <strcasecmp>
    5dda:	85 c0                	test   %eax,%eax
    5ddc:	74 13                	je     5df1 <efi_snp_hii_fetch+0x7f>
    5dde:	48 8d 35 54 ca 01 00 	lea    0x1ca54(%rip),%rsi        # 22839 <.LC7>
    5de5:	4c 89 ef             	mov    %r13,%rdi
    5de8:	e8 00 db 00 00       	call   138ed <strcasecmp>
    5ded:	85 c0                	test   %eax,%eax
    5def:	75 2e                	jne    5e1f <efi_snp_hii_fetch+0xad>
    5df1:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    5df6:	48 2b 05 73 41 02 00 	sub    0x24173(%rip),%rax        # 29f70 <__stack_chk_guard>
    5dfd:	0f 85 40 01 00 00    	jne    5f43 <efi_snp_hii_fetch+0x1d1>
    5e03:	48 83 c4 58          	add    $0x58,%rsp
    5e07:	4c 89 f2             	mov    %r14,%rdx
    5e0a:	4c 89 e6             	mov    %r12,%rsi
    5e0d:	4c 89 ef             	mov    %r13,%rdi
    5e10:	5b                   	pop    %rbx
    5e11:	5d                   	pop    %rbp
    5e12:	41 5c                	pop    %r12
    5e14:	41 5d                	pop    %r13
    5e16:	41 5e                	pop    %r14
    5e18:	41 5f                	pop    %r15
    5e1a:	e9 59 fe ff ff       	jmp    5c78 <efi_snp_hii_append.constprop.0>
    5e1f:	48 85 db             	test   %rbx,%rbx
    5e22:	74 06                	je     5e2a <efi_snp_hii_fetch+0xb8>
    5e24:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    5e2a:	48 85 ed             	test   %rbp,%rbp
    5e2d:	75 0b                	jne    5e3a <efi_snp_hii_fetch+0xc8>
    5e2f:	41 bc 7d 1f ce c3    	mov    $0xc3ce1f7d,%r12d
    5e35:	e9 fb 00 00 00       	jmp    5f35 <efi_snp_hii_fetch+0x1c3>
    5e3a:	4c 89 ef             	mov    %r13,%rdi
    5e3d:	e8 10 c8 00 00       	call   12652 <find_setting>
    5e42:	49 89 c4             	mov    %rax,%r12
    5e45:	48 85 c0             	test   %rax,%rax
    5e48:	75 0b                	jne    5e55 <efi_snp_hii_fetch+0xe3>
    5e4a:	41 bc 79 1f ce d3    	mov    $0xd3ce1f79,%r12d
    5e50:	e9 e0 00 00 00       	jmp    5f35 <efi_snp_hii_fetch+0x1c3>
    5e55:	45 31 c9             	xor    %r9d,%r9d
    5e58:	45 31 c0             	xor    %r8d,%r8d
    5e5b:	31 c9                	xor    %ecx,%ecx
    5e5d:	31 d2                	xor    %edx,%edx
    5e5f:	48 89 c6             	mov    %rax,%rsi
    5e62:	48 89 ef             	mov    %rbp,%rdi
    5e65:	e8 03 bd 00 00       	call   11b6d <fetch_setting>
    5e6a:	85 c0                	test   %eax,%eax
    5e6c:	0f 88 a1 00 00 00    	js     5f13 <efi_snp_hii_fetch+0x1a1>
    5e72:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
    5e77:	4c 89 e6             	mov    %r12,%rsi
    5e7a:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    5e7f:	45 31 c9             	xor    %r9d,%r9d
    5e82:	45 31 c0             	xor    %r8d,%r8d
    5e85:	4c 89 f9             	mov    %r15,%rcx
    5e88:	48 89 ef             	mov    %rbp,%rdi
    5e8b:	e8 d6 c4 00 00       	call   12366 <fetchf_setting>
    5e90:	41 89 c4             	mov    %eax,%r12d
    5e93:	85 c0                	test   %eax,%eax
    5e95:	0f 88 9a 00 00 00    	js     5f35 <efi_snp_hii_fetch+0x1c3>
    5e9b:	8d 04 85 00 00 00 00 	lea    0x0(,%rax,4),%eax
    5ea2:	41 8d 7c 04 02       	lea    0x2(%r12,%rax,1),%edi
    5ea7:	48 63 ff             	movslq %edi,%rdi
    5eaa:	e8 ab 67 00 00       	call   c65a <zalloc>
    5eaf:	48 89 c5             	mov    %rax,%rbp
    5eb2:	48 85 c0             	test   %rax,%rax
    5eb5:	75 08                	jne    5ebf <efi_snp_hii_fetch+0x14d>
    5eb7:	41 bc 77 1f ce ce    	mov    $0xcece1f77,%r12d
    5ebd:	eb 76                	jmp    5f35 <efi_snp_hii_fetch+0x1c3>
    5ebf:	4d 63 cc             	movslq %r12d,%r9
    5ec2:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    5ec7:	4c 89 fe             	mov    %r15,%rsi
    5eca:	49 89 c0             	mov    %rax,%r8
    5ecd:	49 ff c1             	inc    %r9
    5ed0:	31 c9                	xor    %ecx,%ecx
    5ed2:	31 d2                	xor    %edx,%edx
    5ed4:	45 31 ff             	xor    %r15d,%r15d
    5ed7:	4a 8d 1c 08          	lea    (%rax,%r9,1),%rbx
    5edb:	e8 86 c4 00 00       	call   12366 <fetchf_setting>
    5ee0:	48 89 df             	mov    %rbx,%rdi
    5ee3:	48 8d 15 54 c9 01 00 	lea    0x1c954(%rip),%rdx        # 2283e <.LC8>
    5eea:	45 39 fc             	cmp    %r15d,%r12d
    5eed:	7e 2d                	jle    5f1c <efi_snp_hii_fetch+0x1aa>
    5eef:	42 0f b6 4c 3d 00    	movzbl 0x0(%rbp,%r15,1),%ecx
    5ef5:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
    5ef9:	31 c0                	xor    %eax,%eax
    5efb:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    5f00:	49 ff c7             	inc    %r15
    5f03:	e8 79 11 01 00       	call   17081 <snprintf>
    5f08:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5f0d:	48 83 c7 04          	add    $0x4,%rdi
    5f11:	eb d0                	jmp    5ee3 <efi_snp_hii_fetch+0x171>
    5f13:	48 8d 1d ba e4 01 00 	lea    0x1e4ba(%rip),%rbx        # 243d4 <.LC0>
    5f1a:	31 ed                	xor    %ebp,%ebp
    5f1c:	4c 89 ef             	mov    %r13,%rdi
    5f1f:	4c 89 f2             	mov    %r14,%rdx
    5f22:	48 89 de             	mov    %rbx,%rsi
    5f25:	e8 4e fd ff ff       	call   5c78 <efi_snp_hii_append.constprop.0>
    5f2a:	48 89 ef             	mov    %rbp,%rdi
    5f2d:	41 89 c4             	mov    %eax,%r12d
    5f30:	e8 1a 67 00 00       	call   c64f <free>
    5f35:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    5f3a:	48 2b 05 2f 40 02 00 	sub    0x2402f(%rip),%rax        # 29f70 <__stack_chk_guard>
    5f41:	74 05                	je     5f48 <efi_snp_hii_fetch+0x1d6>
    5f43:	e8 18 cb ff ff       	call   2a60 <__stack_chk_fail>
    5f48:	48 83 c4 58          	add    $0x58,%rsp
    5f4c:	44 89 e0             	mov    %r12d,%eax
    5f4f:	5b                   	pop    %rbx
    5f50:	5d                   	pop    %rbp
    5f51:	41 5c                	pop    %r12
    5f53:	41 5d                	pop    %r13
    5f55:	41 5e                	pop    %r14
    5f57:	41 5f                	pop    %r15
    5f59:	c3                   	ret    

0000000000005f5a <efi_snp_hii_store>:
    5f5a:	f3 0f 1e fa          	endbr64 
    5f5e:	41 57                	push   %r15
    5f60:	41 56                	push   %r14
    5f62:	41 55                	push   %r13
    5f64:	41 54                	push   %r12
    5f66:	55                   	push   %rbp
    5f67:	48 89 f5             	mov    %rsi,%rbp
    5f6a:	48 8d 35 ba c8 01 00 	lea    0x1c8ba(%rip),%rsi        # 2282b <.LC4>
    5f71:	53                   	push   %rbx
    5f72:	48 89 d3             	mov    %rdx,%rbx
    5f75:	48 83 ec 48          	sub    $0x48,%rsp
    5f79:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    5f7d:	48 8b 05 ec 3f 02 00 	mov    0x23fec(%rip),%rax        # 29f70 <__stack_chk_guard>
    5f84:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    5f89:	31 c0                	xor    %eax,%eax
    5f8b:	48 81 c7 68 01 00 00 	add    $0x168,%rdi
    5f92:	e8 45 b9 00 00       	call   118dc <find_child_settings>
    5f97:	48 8d 35 91 c8 01 00 	lea    0x1c891(%rip),%rsi        # 2282f <.LC5>
    5f9e:	48 89 ef             	mov    %rbp,%rdi
    5fa1:	49 89 c4             	mov    %rax,%r12
    5fa4:	e8 44 d9 00 00       	call   138ed <strcasecmp>
    5fa9:	85 c0                	test   %eax,%eax
    5fab:	0f 84 fa 00 00 00    	je     60ab <efi_snp_hii_store+0x151>
    5fb1:	48 8d 35 7c c8 01 00 	lea    0x1c87c(%rip),%rsi        # 22834 <.LC6>
    5fb8:	48 89 ef             	mov    %rbp,%rdi
    5fbb:	e8 2d d9 00 00       	call   138ed <strcasecmp>
    5fc0:	85 c0                	test   %eax,%eax
    5fc2:	0f 84 e3 00 00 00    	je     60ab <efi_snp_hii_store+0x151>
    5fc8:	48 8d 35 6a c8 01 00 	lea    0x1c86a(%rip),%rsi        # 22839 <.LC7>
    5fcf:	48 89 ef             	mov    %rbp,%rdi
    5fd2:	e8 16 d9 00 00       	call   138ed <strcasecmp>
    5fd7:	85 c0                	test   %eax,%eax
    5fd9:	0f 84 cc 00 00 00    	je     60ab <efi_snp_hii_store+0x151>
    5fdf:	4d 85 e4             	test   %r12,%r12
    5fe2:	75 0a                	jne    5fee <efi_snp_hii_store+0x94>
    5fe4:	b8 7d 1f ce c3       	mov    $0xc3ce1f7d,%eax
    5fe9:	e9 bd 00 00 00       	jmp    60ab <efi_snp_hii_store+0x151>
    5fee:	48 89 ef             	mov    %rbp,%rdi
    5ff1:	e8 5c c6 00 00       	call   12652 <find_setting>
    5ff6:	48 89 c5             	mov    %rax,%rbp
    5ff9:	48 85 c0             	test   %rax,%rax
    5ffc:	75 0a                	jne    6008 <efi_snp_hii_store+0xae>
    5ffe:	b8 79 1f ce d3       	mov    $0xd3ce1f79,%eax
    6003:	e9 a3 00 00 00       	jmp    60ab <efi_snp_hii_store+0x151>
    6008:	48 89 df             	mov    %rbx,%rdi
    600b:	e8 2a d9 00 00       	call   1393a <strlen>
    6010:	48 c1 e8 02          	shr    $0x2,%rax
    6014:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    6018:	ff c0                	inc    %eax
    601a:	48 63 f8             	movslq %eax,%rdi
    601d:	e8 38 66 00 00       	call   c65a <zalloc>
    6022:	49 89 c6             	mov    %rax,%r14
    6025:	48 85 c0             	test   %rax,%rax
    6028:	75 07                	jne    6031 <efi_snp_hii_store+0xd7>
    602a:	b8 77 1f ce ce       	mov    $0xcece1f77,%eax
    602f:	eb 7a                	jmp    60ab <efi_snp_hii_store+0x151>
    6031:	c6 44 24 37 00       	movb   $0x0,0x37(%rsp)
    6036:	45 31 ff             	xor    %r15d,%r15d
    6039:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
    603e:	48 8d 7c 24 33       	lea    0x33(%rsp),%rdi
    6043:	4c 8d 44 24 37       	lea    0x37(%rsp),%r8
    6048:	44 39 7c 24 0c       	cmp    %r15d,0xc(%rsp)
    604d:	7e 3e                	jle    608d <efi_snp_hii_store+0x133>
    604f:	42 8b 04 bb          	mov    (%rbx,%r15,4),%eax
    6053:	ba 10 00 00 00       	mov    $0x10,%edx
    6058:	4c 89 ee             	mov    %r13,%rsi
    605b:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    6060:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    6065:	89 44 24 33          	mov    %eax,0x33(%rsp)
    6069:	e8 0d da 00 00       	call   13a7b <strtoul>
    606e:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6073:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6078:	43 88 04 3e          	mov    %al,(%r14,%r15,1)
    607c:	49 ff c7             	inc    %r15
    607f:	4c 39 44 24 28       	cmp    %r8,0x28(%rsp)
    6084:	74 c2                	je     6048 <efi_snp_hii_store+0xee>
    6086:	b8 7e 1f ce e3       	mov    $0xe3ce1f7e,%eax
    608b:	eb 0e                	jmp    609b <efi_snp_hii_store+0x141>
    608d:	4c 89 f2             	mov    %r14,%rdx
    6090:	48 89 ee             	mov    %rbp,%rsi
    6093:	4c 89 e7             	mov    %r12,%rdi
    6096:	e8 04 c4 00 00       	call   1249f <storef_setting>
    609b:	4c 89 f7             	mov    %r14,%rdi
    609e:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    60a2:	e8 a8 65 00 00       	call   c64f <free>
    60a7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    60ab:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    60b0:	48 2b 15 b9 3e 02 00 	sub    0x23eb9(%rip),%rdx        # 29f70 <__stack_chk_guard>
    60b7:	74 05                	je     60be <efi_snp_hii_store+0x164>
    60b9:	e8 a2 c9 ff ff       	call   2a60 <__stack_chk_fail>
    60be:	48 83 c4 48          	add    $0x48,%rsp
    60c2:	5b                   	pop    %rbx
    60c3:	5d                   	pop    %rbp
    60c4:	41 5c                	pop    %r12
    60c6:	41 5d                	pop    %r13
    60c8:	41 5e                	pop    %r14
    60ca:	41 5f                	pop    %r15
    60cc:	c3                   	ret    

00000000000060cd <efi_snp_hii_extract_config>:
    60cd:	f3 0f 1e fa          	endbr64 
    60d1:	41 57                	push   %r15
    60d3:	41 56                	push   %r14
    60d5:	41 55                	push   %r13
    60d7:	41 54                	push   %r12
    60d9:	55                   	push   %rbp
    60da:	57                   	push   %rdi
    60db:	56                   	push   %rsi
    60dc:	53                   	push   %rbx
    60dd:	48 83 ec 18          	sub    $0x18,%rsp
    60e1:	48 8b 05 88 3e 02 00 	mov    0x23e88(%rip),%rax        # 29f70 <__stack_chk_guard>
    60e8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    60ed:	31 c0                	xor    %eax,%eax
    60ef:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    60f6:	00 
    60f7:	48 b8 02 00 00 00 00 	movabs $0x8000000000000002,%rax
    60fe:	00 00 80 
    6101:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    6108:	48 85 d2             	test   %rdx,%rdx
    610b:	0f 84 e8 00 00 00    	je     61f9 <efi_snp_hii_extract_config+0x12c>
    6111:	66 83 3a 00          	cmpw   $0x0,(%rdx)
    6115:	48 89 d6             	mov    %rdx,%rsi
    6118:	0f 84 db 00 00 00    	je     61f9 <efi_snp_hii_extract_config+0x12c>
    611e:	49 89 10             	mov    %rdx,(%r8)
    6121:	49 89 cc             	mov    %rcx,%r12
    6124:	4c 89 c3             	mov    %r8,%rbx
    6127:	4c 89 cd             	mov    %r9,%rbp
    612a:	4c 8d a9 60 fb ff ff 	lea    -0x4a0(%rcx),%r13
    6131:	4c 8d 74 24 04       	lea    0x4(%rsp),%r14
    6136:	4c 8d 3d 35 fc ff ff 	lea    -0x3cb(%rip),%r15        # 5d72 <efi_snp_hii_fetch>
    613d:	48 8b 03             	mov    (%rbx),%rax
    6140:	48 85 c0             	test   %rax,%rax
    6143:	74 2d                	je     6172 <efi_snp_hii_extract_config+0xa5>
    6145:	66 83 38 00          	cmpw   $0x0,(%rax)
    6149:	74 27                	je     6172 <efi_snp_hii_extract_config+0xa5>
    614b:	4d 89 f9             	mov    %r15,%r9
    614e:	4d 89 f0             	mov    %r14,%r8
    6151:	48 89 e9             	mov    %rbp,%rcx
    6154:	48 89 da             	mov    %rbx,%rdx
    6157:	4c 89 ef             	mov    %r13,%rdi
    615a:	e8 84 f9 ff ff       	call   5ae3 <efi_snp_hii_process>
    615f:	85 c0                	test   %eax,%eax
    6161:	74 06                	je     6169 <efi_snp_hii_extract_config+0x9c>
    6163:	f7 d8                	neg    %eax
    6165:	89 c2                	mov    %eax,%edx
    6167:	eb 5e                	jmp    61c7 <efi_snp_hii_extract_config+0xfa>
    6169:	48 8b 03             	mov    (%rbx),%rax
    616c:	48 8d 70 02          	lea    0x2(%rax),%rsi
    6170:	eb cb                	jmp    613d <efi_snp_hii_extract_config+0x70>
    6172:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
    6177:	74 69                	je     61e2 <efi_snp_hii_extract_config+0x115>
    6179:	31 c0                	xor    %eax,%eax
    617b:	eb 7c                	jmp    61f9 <efi_snp_hii_extract_config+0x12c>
    617d:	48 83 c3 28          	add    $0x28,%rbx
    6181:	4c 39 f3             	cmp    %r14,%rbx
    6184:	73 f3                	jae    6179 <efi_snp_hii_extract_config+0xac>
    6186:	49 8b 84 24 70 fb ff 	mov    -0x490(%r12),%rax
    618d:	ff 
    618e:	4c 89 fe             	mov    %r15,%rsi
    6191:	48 8d b8 68 01 00 00 	lea    0x168(%rax),%rdi
    6198:	e8 3f b7 00 00       	call   118dc <find_child_settings>
    619d:	48 89 de             	mov    %rbx,%rsi
    61a0:	48 89 c7             	mov    %rax,%rdi
    61a3:	e8 a3 83 00 00       	call   e54b <nvo_applies>
    61a8:	85 c0                	test   %eax,%eax
    61aa:	74 d1                	je     617d <efi_snp_hii_extract_config+0xb0>
    61ac:	48 8b 33             	mov    (%rbx),%rsi
    61af:	31 d2                	xor    %edx,%edx
    61b1:	45 31 c0             	xor    %r8d,%r8d
    61b4:	48 89 e9             	mov    %rbp,%rcx
    61b7:	4c 89 ef             	mov    %r13,%rdi
    61ba:	e8 b3 fb ff ff       	call   5d72 <efi_snp_hii_fetch>
    61bf:	89 c2                	mov    %eax,%edx
    61c1:	85 c0                	test   %eax,%eax
    61c3:	74 b8                	je     617d <efi_snp_hii_extract_config+0xb0>
    61c5:	f7 da                	neg    %edx
    61c7:	48 89 d0             	mov    %rdx,%rax
    61ca:	b9 01 00 00 00       	mov    $0x1,%ecx
    61cf:	83 e2 7f             	and    $0x7f,%edx
    61d2:	48 c1 e0 38          	shl    $0x38,%rax
    61d6:	48 c1 e1 3f          	shl    $0x3f,%rcx
    61da:	48 21 c8             	and    %rcx,%rax
    61dd:	48 09 d0             	or     %rdx,%rax
    61e0:	eb 17                	jmp    61f9 <efi_snp_hii_extract_config+0x12c>
    61e2:	48 8d 1d df 2f 02 00 	lea    0x22fdf(%rip),%rbx        # 291c8 <busid_setting>
    61e9:	4c 8d 35 e0 36 02 00 	lea    0x236e0(%rip),%r14        # 298d0 <dns_applicator>
    61f0:	4c 8d 3d 34 c6 01 00 	lea    0x1c634(%rip),%r15        # 2282b <.LC4>
    61f7:	eb 88                	jmp    6181 <efi_snp_hii_extract_config+0xb4>
    61f9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    61fe:	48 2b 15 6b 3d 02 00 	sub    0x23d6b(%rip),%rdx        # 29f70 <__stack_chk_guard>
    6205:	74 05                	je     620c <efi_snp_hii_extract_config+0x13f>
    6207:	e8 54 c8 ff ff       	call   2a60 <__stack_chk_fail>
    620c:	48 83 c4 18          	add    $0x18,%rsp
    6210:	5b                   	pop    %rbx
    6211:	5e                   	pop    %rsi
    6212:	5f                   	pop    %rdi
    6213:	5d                   	pop    %rbp
    6214:	41 5c                	pop    %r12
    6216:	41 5d                	pop    %r13
    6218:	41 5e                	pop    %r14
    621a:	41 5f                	pop    %r15
    621c:	c3                   	ret    

000000000000621d <efi_snp_hii_install>:
    621d:	f3 0f 1e fa          	endbr64 
    6221:	41 57                	push   %r15
    6223:	41 56                	push   %r14
    6225:	41 55                	push   %r13
    6227:	41 54                	push   %r12
    6229:	55                   	push   %rbp
    622a:	53                   	push   %rbx
    622b:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    6232:	48 8b 05 37 3d 02 00 	mov    0x23d37(%rip),%rax        # 29f70 <__stack_chk_guard>
    6239:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    6240:	00 
    6241:	48 8b 05 50 3d 02 00 	mov    0x23d50(%rip),%rax        # 29f98 <efi_systab>
    6248:	48 83 3d 28 39 02 00 	cmpq   $0x0,0x23928(%rip)        # 29b78 <efihii>
    624f:	00 
    6250:	4c 8b 70 60          	mov    0x60(%rax),%r14
    6254:	75 0b                	jne    6261 <efi_snp_hii_install+0x44>
    6256:	41 bc 7d 1f ce c3    	mov    $0xc3ce1f7d,%r12d
    625c:	e9 74 05 00 00       	jmp    67d5 <efi_snp_hii_install+0x5b8>
    6261:	48 8d 87 a0 04 00 00 	lea    0x4a0(%rdi),%rax
    6268:	48 89 fb             	mov    %rdi,%rbx
    626b:	48 8d 35 9e ed 01 00 	lea    0x1ed9e(%rip),%rsi        # 25010 <efi_snp_device_hii>
    6272:	48 89 04 24          	mov    %rax,(%rsp)
    6276:	48 89 c7             	mov    %rax,%rdi
    6279:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    627a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    627b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    627c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    627d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    627e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    627f:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
    6283:	48 8d 6c 24 28       	lea    0x28(%rsp),%rbp
    6288:	b9 30 00 00 00       	mov    $0x30,%ecx
    628d:	31 c0                	xor    %eax,%eax
    628f:	48 89 ef             	mov    %rbp,%rdi
    6292:	4d 8b 7d 40          	mov    0x40(%r13),%r15
    6296:	f3 aa                	rep stos %al,%es:(%rdi)
    6298:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
    629d:	80 3d 71 c0 01 00 00 	cmpb   $0x0,0x1c071(%rip)        # 22315 <product_name>
    62a4:	4c 8d 05 65 c0 01 00 	lea    0x1c065(%rip),%r8        # 22310 <product_short_name>
    62ab:	48 89 c7             	mov    %rax,%rdi
    62ae:	4c 8d 25 60 c0 01 00 	lea    0x1c060(%rip),%r12        # 22315 <product_name>
    62b5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    62ba:	4d 0f 44 e0          	cmove  %r8,%r12
    62be:	e8 97 f9 ff ff       	call   5c5a <efi_snp_hii_random_guid>
    62c3:	4c 8d 5c 24 68       	lea    0x68(%rsp),%r11
    62c8:	4c 89 df             	mov    %r11,%rdi
    62cb:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
    62d0:	e8 85 f9 ff ff       	call   5c5a <efi_snp_hii_random_guid>
    62d5:	4c 8d 54 24 78       	lea    0x78(%rsp),%r10
    62da:	4c 89 d7             	mov    %r10,%rdi
    62dd:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    62e2:	e8 73 f9 ff ff       	call   5c5a <efi_snp_hii_random_guid>
    62e7:	49 8b 45 50          	mov    0x50(%r13),%rax
    62eb:	49 8d 7d 60          	lea    0x60(%r13),%rdi
    62ef:	ff 50 20             	call   *0x20(%rax)
    62f2:	4c 89 e2             	mov    %r12,%rdx
    62f5:	48 8d 35 47 c5 01 00 	lea    0x1c547(%rip),%rsi        # 22843 <.LC9>
    62fc:	48 89 ef             	mov    %rbp,%rdi
    62ff:	48 89 c1             	mov    %rax,%rcx
    6302:	31 c0                	xor    %eax,%eax
    6304:	e8 b2 66 01 00       	call   1c9bb <efi_ifr_string>
    6309:	4c 8d 05 00 c0 01 00 	lea    0x1c000(%rip),%r8        # 22310 <product_short_name>
    6310:	48 8d 35 34 c5 01 00 	lea    0x1c534(%rip),%rsi        # 2284b <.LC10>
    6317:	48 89 ef             	mov    %rbp,%rdi
    631a:	41 89 c5             	mov    %eax,%r13d
    631d:	4c 89 c2             	mov    %r8,%rdx
    6320:	31 c0                	xor    %eax,%eax
    6322:	e8 94 66 01 00       	call   1c9bb <efi_ifr_string>
    6327:	4c 8d 0d d2 e1 01 00 	lea    0x1e1d2(%rip),%r9        # 24500 <efi_hii_ibm_ucm_compliant_formset_guid>
    632e:	44 89 ea             	mov    %r13d,%edx
    6331:	48 89 ef             	mov    %rbp,%rdi
    6334:	89 c1                	mov    %eax,%ecx
    6336:	50                   	push   %rax
    6337:	4c 8d 05 d2 e1 01 00 	lea    0x1e1d2(%rip),%r8        # 24510 <efi_hii_platform_setup_formset_guid>
    633e:	31 c0                	xor    %eax,%eax
    6340:	6a 00                	push   $0x0
    6342:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6347:	e8 d9 67 01 00       	call   1cb25 <efi_ifr_form_set_op>
    634c:	be 04 00 00 00       	mov    $0x4,%esi
    6351:	48 89 ef             	mov    %rbp,%rdi
    6354:	e8 fc 68 01 00       	call   1cc55 <efi_ifr_guid_class_op>
    6359:	be 03 00 00 00       	mov    $0x3,%esi
    635e:	48 89 ef             	mov    %rbp,%rdi
    6361:	e8 23 69 01 00       	call   1cc89 <efi_ifr_guid_subclass_op>
    6366:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    636b:	48 89 ef             	mov    %rbp,%rdi
    636e:	e8 ea 69 01 00       	call   1cd5d <efi_ifr_varstore_name_value_op>
    6373:	44 89 ee             	mov    %r13d,%esi
    6376:	48 89 ef             	mov    %rbp,%rdi
    6379:	89 44 24 20          	mov    %eax,0x20(%rsp)
    637d:	e8 62 67 01 00       	call   1cae4 <efi_ifr_form_op>
    6382:	4c 89 e2             	mov    %r12,%rdx
    6385:	48 89 ef             	mov    %rbp,%rdi
    6388:	31 c0                	xor    %eax,%eax
    638a:	4c 8d 25 90 d2 01 00 	lea    0x1d290(%rip),%r12        # 23621 <.LC0>
    6391:	4c 89 e6             	mov    %r12,%rsi
    6394:	e8 22 66 01 00       	call   1c9bb <efi_ifr_string>
    6399:	48 8d 35 b8 c4 01 00 	lea    0x1c4b8(%rip),%rsi        # 22858 <.LC12>
    63a0:	48 89 ef             	mov    %rbp,%rdi
    63a3:	89 44 24 28          	mov    %eax,0x28(%rsp)
    63a7:	31 c0                	xor    %eax,%eax
    63a9:	e8 0d 66 01 00       	call   1c9bb <efi_ifr_string>
    63ae:	48 8d 35 b9 c4 01 00 	lea    0x1c4b9(%rip),%rsi        # 2286e <.LC13>
    63b5:	48 89 ef             	mov    %rbp,%rdi
    63b8:	41 89 c5             	mov    %eax,%r13d
    63bb:	31 c0                	xor    %eax,%eax
    63bd:	e8 f9 65 01 00       	call   1c9bb <efi_ifr_string>
    63c2:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    63c6:	44 89 ea             	mov    %r13d,%edx
    63c9:	48 89 ef             	mov    %rbp,%rdi
    63cc:	89 c6                	mov    %eax,%esi
    63ce:	e8 55 69 01 00       	call   1cd28 <efi_ifr_text_op>
    63d3:	4c 89 e6             	mov    %r12,%rsi
    63d6:	48 89 ef             	mov    %rbp,%rdi
    63d9:	31 c0                	xor    %eax,%eax
    63db:	48 8d 15 3e bf 01 00 	lea    0x1bf3e(%rip),%rdx        # 22320 <product_version>
    63e2:	e8 d4 65 01 00       	call   1c9bb <efi_ifr_string>
    63e7:	48 8d 35 85 c4 01 00 	lea    0x1c485(%rip),%rsi        # 22873 <.LC14>
    63ee:	48 89 ef             	mov    %rbp,%rdi
    63f1:	89 44 24 28          	mov    %eax,0x28(%rsp)
    63f5:	31 c0                	xor    %eax,%eax
    63f7:	e8 bf 65 01 00       	call   1c9bb <efi_ifr_string>
    63fc:	48 8d 35 81 c4 01 00 	lea    0x1c481(%rip),%rsi        # 22884 <.LC15>
    6403:	48 89 ef             	mov    %rbp,%rdi
    6406:	41 89 c5             	mov    %eax,%r13d
    6409:	31 c0                	xor    %eax,%eax
    640b:	e8 ab 65 01 00       	call   1c9bb <efi_ifr_string>
    6410:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    6414:	44 89 ea             	mov    %r13d,%edx
    6417:	48 89 ef             	mov    %rbp,%rdi
    641a:	89 c6                	mov    %eax,%esi
    641c:	e8 07 69 01 00       	call   1cd28 <efi_ifr_text_op>
    6421:	49 8b 57 28          	mov    0x28(%r15),%rdx
    6425:	4c 89 e6             	mov    %r12,%rsi
    6428:	48 89 ef             	mov    %rbp,%rdi
    642b:	31 c0                	xor    %eax,%eax
    642d:	e8 89 65 01 00       	call   1c9bb <efi_ifr_string>
    6432:	48 8d 35 53 c4 01 00 	lea    0x1c453(%rip),%rsi        # 2288c <.LC16>
    6439:	48 89 ef             	mov    %rbp,%rdi
    643c:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6440:	31 c0                	xor    %eax,%eax
    6442:	e8 74 65 01 00       	call   1c9bb <efi_ifr_string>
    6447:	48 8d 35 4e c4 01 00 	lea    0x1c44e(%rip),%rsi        # 2289c <.LC17>
    644e:	48 89 ef             	mov    %rbp,%rdi
    6451:	41 89 c5             	mov    %eax,%r13d
    6454:	31 c0                	xor    %eax,%eax
    6456:	e8 60 65 01 00       	call   1c9bb <efi_ifr_string>
    645b:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
    645f:	44 89 ea             	mov    %r13d,%edx
    6462:	48 89 ef             	mov    %rbp,%rdi
    6465:	89 c6                	mov    %eax,%esi
    6467:	e8 bc 68 01 00       	call   1cd28 <efi_ifr_text_op>
    646c:	4c 89 fa             	mov    %r15,%rdx
    646f:	4c 89 e6             	mov    %r12,%rsi
    6472:	48 89 ef             	mov    %rbp,%rdi
    6475:	31 c0                	xor    %eax,%eax
    6477:	e8 3f 65 01 00       	call   1c9bb <efi_ifr_string>
    647c:	48 8d 35 20 c4 01 00 	lea    0x1c420(%rip),%rsi        # 228a3 <.LC18>
    6483:	48 89 ef             	mov    %rbp,%rdi
    6486:	41 89 c7             	mov    %eax,%r15d
    6489:	31 c0                	xor    %eax,%eax
    648b:	e8 2b 65 01 00       	call   1c9bb <efi_ifr_string>
    6490:	48 8d 35 1c c4 01 00 	lea    0x1c41c(%rip),%rsi        # 228b3 <.LC19>
    6497:	48 89 ef             	mov    %rbp,%rdi
    649a:	41 89 c5             	mov    %eax,%r13d
    649d:	31 c0                	xor    %eax,%eax
    649f:	e8 17 65 01 00       	call   1c9bb <efi_ifr_string>
    64a4:	44 89 f9             	mov    %r15d,%ecx
    64a7:	44 89 ea             	mov    %r13d,%edx
    64aa:	48 89 ef             	mov    %rbp,%rdi
    64ad:	89 c6                	mov    %eax,%esi
    64af:	45 31 ff             	xor    %r15d,%r15d
    64b2:	4c 8d 2d 0f 2d 02 00 	lea    0x22d0f(%rip),%r13        # 291c8 <busid_setting>
    64b9:	e8 6a 68 01 00       	call   1cd28 <efi_ifr_text_op>
    64be:	5a                   	pop    %rdx
    64bf:	59                   	pop    %rcx
    64c0:	48 8d 05 09 34 02 00 	lea    0x23409(%rip),%rax        # 298d0 <dns_applicator>
    64c7:	49 39 c5             	cmp    %rax,%r13
    64ca:	0f 83 b4 00 00 00    	jae    6584 <efi_snp_hii_install+0x367>
    64d0:	48 8b 43 10          	mov    0x10(%rbx),%rax
    64d4:	48 8d 35 50 c3 01 00 	lea    0x1c350(%rip),%rsi        # 2282b <.LC4>
    64db:	48 8d b8 68 01 00 00 	lea    0x168(%rax),%rdi
    64e2:	e8 f5 b3 00 00       	call   118dc <find_child_settings>
    64e7:	4c 89 ee             	mov    %r13,%rsi
    64ea:	48 89 c7             	mov    %rax,%rdi
    64ed:	e8 59 80 00 00       	call   e54b <nvo_applies>
    64f2:	85 c0                	test   %eax,%eax
    64f4:	0f 84 81 00 00 00    	je     657b <efi_snp_hii_install+0x35e>
    64fa:	4d 85 ff             	test   %r15,%r15
    64fd:	75 6d                	jne    656c <efi_snp_hii_install+0x34f>
    64ff:	49 8b 55 00          	mov    0x0(%r13),%rdx
    6503:	4c 89 e6             	mov    %r12,%rsi
    6506:	48 89 ef             	mov    %rbp,%rdi
    6509:	31 c0                	xor    %eax,%eax
    650b:	e8 ab 64 01 00       	call   1c9bb <efi_ifr_string>
    6510:	49 8b 55 08          	mov    0x8(%r13),%rdx
    6514:	4c 89 e6             	mov    %r12,%rsi
    6517:	48 89 ef             	mov    %rbp,%rdi
    651a:	89 44 24 18          	mov    %eax,0x18(%rsp)
    651e:	31 c0                	xor    %eax,%eax
    6520:	e8 96 64 01 00       	call   1c9bb <efi_ifr_string>
    6525:	49 8b 55 00          	mov    0x0(%r13),%rdx
    6529:	48 8d 35 8a c3 01 00 	lea    0x1c38a(%rip),%rsi        # 228ba <.LC12>
    6530:	48 89 ef             	mov    %rbp,%rdi
    6533:	41 89 c7             	mov    %eax,%r15d
    6536:	31 c0                	xor    %eax,%eax
    6538:	e8 7e 64 01 00       	call   1c9bb <efi_ifr_string>
    653d:	6a 00                	push   $0x0
    653f:	41 8b 4d 18          	mov    0x18(%r13),%ecx
    6543:	44 89 fe             	mov    %r15d,%esi
    6546:	68 ff 00 00 00       	push   $0xff
    654b:	89 c2                	mov    %eax,%edx
    654d:	48 89 ef             	mov    %rbp,%rdi
    6550:	4d 89 ef             	mov    %r13,%r15
    6553:	6a 00                	push   $0x0
    6555:	6a 00                	push   $0x0
    6557:	44 8b 4c 24 38       	mov    0x38(%rsp),%r9d
    655c:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
    6561:	e8 57 67 01 00       	call   1ccbd <efi_ifr_string_op>
    6566:	48 83 c4 20          	add    $0x20,%rsp
    656a:	eb 0f                	jmp    657b <efi_snp_hii_install+0x35e>
    656c:	4c 89 fe             	mov    %r15,%rsi
    656f:	4c 89 ef             	mov    %r13,%rdi
    6572:	e8 a3 b4 00 00       	call   11a1a <setting_cmp>
    6577:	85 c0                	test   %eax,%eax
    6579:	75 84                	jne    64ff <efi_snp_hii_install+0x2e2>
    657b:	49 83 c5 28          	add    $0x28,%r13
    657f:	e9 3c ff ff ff       	jmp    64c0 <efi_snp_hii_install+0x2a3>
    6584:	48 89 ef             	mov    %rbp,%rdi
    6587:	e8 45 65 01 00       	call   1cad1 <efi_ifr_end_op>
    658c:	48 89 ef             	mov    %rbp,%rdi
    658f:	e8 3d 65 01 00       	call   1cad1 <efi_ifr_end_op>
    6594:	48 8d 35 36 c3 01 00 	lea    0x1c336(%rip),%rsi        # 228d1 <.LC21>
    659b:	48 89 ef             	mov    %rbp,%rdi
    659e:	31 c0                	xor    %eax,%eax
    65a0:	e8 16 64 01 00       	call   1c9bb <efi_ifr_string>
    65a5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    65aa:	48 89 ef             	mov    %rbp,%rdi
    65ad:	48 8d 15 25 c3 01 00 	lea    0x1c325(%rip),%rdx        # 228d9 <.LC22>
    65b4:	89 c1                	mov    %eax,%ecx
    65b6:	e8 11 68 01 00       	call   1cdcc <efi_ifr_package>
    65bb:	48 89 ef             	mov    %rbp,%rdi
    65be:	49 89 c4             	mov    %rax,%r12
    65c1:	48 85 c0             	test   %rax,%rax
    65c4:	75 1b                	jne    65e1 <efi_snp_hii_install+0x3c4>
    65c6:	e8 da 67 01 00       	call   1cda5 <efi_ifr_free>
    65cb:	48 c7 83 b8 04 00 00 	movq   $0x0,0x4b8(%rbx)
    65d2:	00 00 00 00 
    65d6:	41 bc 77 1f ce ce    	mov    $0xcece1f77,%r12d
    65dc:	e9 f4 01 00 00       	jmp    67d5 <efi_snp_hii_install+0x5b8>
    65e1:	e8 bf 67 01 00       	call   1cda5 <efi_ifr_free>
    65e6:	4c 89 a3 b8 04 00 00 	mov    %r12,0x4b8(%rbx)
    65ed:	48 8b bb 90 05 00 00 	mov    0x590(%rbx),%rdi
    65f4:	e8 c1 03 00 00       	call   69ba <efi_devpath_len>
    65f9:	48 8d 78 18          	lea    0x18(%rax),%rdi
    65fd:	48 89 c5             	mov    %rax,%rbp
    6600:	e8 55 60 00 00       	call   c65a <zalloc>
    6605:	48 89 83 c8 04 00 00 	mov    %rax,0x4c8(%rbx)
    660c:	48 89 c7             	mov    %rax,%rdi
    660f:	48 85 c0             	test   %rax,%rax
    6612:	75 0b                	jne    661f <efi_snp_hii_install+0x402>
    6614:	41 bc 77 1f ce ce    	mov    $0xcece1f77,%r12d
    661a:	e9 9f 01 00 00       	jmp    67be <efi_snp_hii_install+0x5a1>
    661f:	48 8b b3 90 05 00 00 	mov    0x590(%rbx),%rsi
    6626:	48 89 ea             	mov    %rbp,%rdx
    6629:	4c 8d a3 c0 04 00 00 	lea    0x4c0(%rbx),%r12
    6630:	4c 8d 2d 79 e3 01 00 	lea    0x1e379(%rip),%r13        # 249b0 <efi_device_path_protocol_guid>
    6637:	e8 d1 0c 01 00       	call   1730d <__memcpy>
    663c:	48 03 ab c8 04 00 00 	add    0x4c8(%rbx),%rbp
    6643:	66 c7 45 00 01 04    	movw   $0x401,0x0(%rbp)
    6649:	48 8d 7d 04          	lea    0x4(%rbp),%rdi
    664d:	c6 45 02 14          	movb   $0x14,0x2(%rbp)
    6651:	e8 04 f6 ff ff       	call   5c5a <efi_snp_hii_random_guid>
    6656:	c6 45 16 04          	movb   $0x4,0x16(%rbp)
    665a:	48 83 ec 20          	sub    $0x20,%rsp
    665e:	45 31 c9             	xor    %r9d,%r9d
    6661:	66 c7 45 14 7f ff    	movw   $0xff7f,0x14(%rbp)
    6667:	4c 89 ea             	mov    %r13,%rdx
    666a:	4c 89 e1             	mov    %r12,%rcx
    666d:	4c 8b 83 c8 04 00 00 	mov    0x4c8(%rbx),%r8
    6674:	41 ff 96 48 01 00 00 	call   *0x148(%r14)
    667b:	48 83 c4 20          	add    $0x20,%rsp
    667f:	85 c0                	test   %eax,%eax
    6681:	74 1d                	je     66a0 <efi_snp_hii_install+0x483>
    6683:	4c 63 e0             	movslq %eax,%r12
    6686:	49 c1 ec 38          	shr    $0x38,%r12
    668a:	41 09 c4             	or     %eax,%r12d
    668d:	45 0f b6 e4          	movzbl %r12b,%r12d
    6691:	41 81 cc 00 e0 31 7f 	or     $0x7f31e000,%r12d
    6698:	41 f7 dc             	neg    %r12d
    669b:	e9 07 01 00 00       	jmp    67a7 <efi_snp_hii_install+0x58a>
    66a0:	48 8b 05 d1 34 02 00 	mov    0x234d1(%rip),%rax        # 29b78 <efihii>
    66a7:	48 83 ec 20          	sub    $0x20,%rsp
    66ab:	48 8b 93 b8 04 00 00 	mov    0x4b8(%rbx),%rdx
    66b2:	4c 8d 8b d0 04 00 00 	lea    0x4d0(%rbx),%r9
    66b9:	4c 8b 83 c0 04 00 00 	mov    0x4c0(%rbx),%r8
    66c0:	48 89 c1             	mov    %rax,%rcx
    66c3:	ff 10                	call   *(%rax)
    66c5:	48 83 c4 20          	add    $0x20,%rsp
    66c9:	85 c0                	test   %eax,%eax
    66cb:	74 1d                	je     66ea <efi_snp_hii_install+0x4cd>
    66cd:	4c 63 e0             	movslq %eax,%r12
    66d0:	49 c1 ec 38          	shr    $0x38,%r12
    66d4:	41 09 c4             	or     %eax,%r12d
    66d7:	45 0f b6 e4          	movzbl %r12b,%r12d
    66db:	41 81 cc 00 e0 31 7f 	or     $0x7f31e000,%r12d
    66e2:	41 f7 dc             	neg    %r12d
    66e5:	e9 9a 00 00 00       	jmp    6784 <efi_snp_hii_install+0x567>
    66ea:	48 83 ec 20          	sub    $0x20,%rsp
    66ee:	4c 8d 3d 5b e2 01 00 	lea    0x1e25b(%rip),%r15        # 24950 <efi_hii_config_access_protocol_guid>
    66f5:	45 31 c9             	xor    %r9d,%r9d
    66f8:	4c 89 e1             	mov    %r12,%rcx
    66fb:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    6700:	4c 89 fa             	mov    %r15,%rdx
    6703:	41 ff 96 48 01 00 00 	call   *0x148(%r14)
    670a:	48 83 c4 20          	add    $0x20,%rsp
    670e:	85 c0                	test   %eax,%eax
    6710:	74 1a                	je     672c <efi_snp_hii_install+0x50f>
    6712:	4c 63 e0             	movslq %eax,%r12
    6715:	49 c1 ec 38          	shr    $0x38,%r12
    6719:	41 09 c4             	or     %eax,%r12d
    671c:	45 0f b6 e4          	movzbl %r12b,%r12d
    6720:	41 81 cc 00 e0 31 7f 	or     $0x7f31e000,%r12d
    6727:	41 f7 dc             	neg    %r12d
    672a:	eb 3c                	jmp    6768 <efi_snp_hii_install+0x54b>
    672c:	48 8b b3 c0 04 00 00 	mov    0x4c0(%rbx),%rsi
    6733:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    6737:	e8 8b 02 00 00       	call   69c7 <efi_child_add>
    673c:	41 89 c4             	mov    %eax,%r12d
    673f:	85 c0                	test   %eax,%eax
    6741:	0f 84 8e 00 00 00    	je     67d5 <efi_snp_hii_install+0x5b8>
    6747:	48 83 ec 20          	sub    $0x20,%rsp
    674b:	48 8b 8b c0 04 00 00 	mov    0x4c0(%rbx),%rcx
    6752:	45 31 c9             	xor    %r9d,%r9d
    6755:	4c 89 fa             	mov    %r15,%rdx
    6758:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    675d:	41 ff 96 50 01 00 00 	call   *0x150(%r14)
    6764:	48 83 c4 20          	add    $0x20,%rsp
    6768:	48 8b 05 09 34 02 00 	mov    0x23409(%rip),%rax        # 29b78 <efihii>
    676f:	48 83 ec 20          	sub    $0x20,%rsp
    6773:	48 8b 93 d0 04 00 00 	mov    0x4d0(%rbx),%rdx
    677a:	48 89 c1             	mov    %rax,%rcx
    677d:	ff 50 08             	call   *0x8(%rax)
    6780:	48 83 c4 20          	add    $0x20,%rsp
    6784:	48 83 ec 20          	sub    $0x20,%rsp
    6788:	48 8b 8b c0 04 00 00 	mov    0x4c0(%rbx),%rcx
    678f:	45 31 c9             	xor    %r9d,%r9d
    6792:	4c 89 ea             	mov    %r13,%rdx
    6795:	4c 8b 83 c8 04 00 00 	mov    0x4c8(%rbx),%r8
    679c:	41 ff 96 50 01 00 00 	call   *0x150(%r14)
    67a3:	48 83 c4 20          	add    $0x20,%rsp
    67a7:	48 8b bb c8 04 00 00 	mov    0x4c8(%rbx),%rdi
    67ae:	e8 9c 5e 00 00       	call   c64f <free>
    67b3:	48 c7 83 c8 04 00 00 	movq   $0x0,0x4c8(%rbx)
    67ba:	00 00 00 00 
    67be:	48 8b bb b8 04 00 00 	mov    0x4b8(%rbx),%rdi
    67c5:	e8 85 5e 00 00       	call   c64f <free>
    67ca:	48 c7 83 b8 04 00 00 	movq   $0x0,0x4b8(%rbx)
    67d1:	00 00 00 00 
    67d5:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    67dc:	00 
    67dd:	48 2b 05 8c 37 02 00 	sub    0x2378c(%rip),%rax        # 29f70 <__stack_chk_guard>
    67e4:	74 05                	je     67eb <efi_snp_hii_install+0x5ce>
    67e6:	e8 75 c2 ff ff       	call   2a60 <__stack_chk_fail>
    67eb:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    67f2:	44 89 e0             	mov    %r12d,%eax
    67f5:	5b                   	pop    %rbx
    67f6:	5d                   	pop    %rbp
    67f7:	41 5c                	pop    %r12
    67f9:	41 5d                	pop    %r13
    67fb:	41 5e                	pop    %r14
    67fd:	41 5f                	pop    %r15
    67ff:	c3                   	ret    

0000000000006800 <efi_snp_hii_uninstall>:
    6800:	f3 0f 1e fa          	endbr64 
    6804:	48 83 3d 6c 33 02 00 	cmpq   $0x0,0x2336c(%rip)        # 29b78 <efihii>
    680b:	00 
    680c:	0f 84 ab 00 00 00    	je     68bd <efi_snp_hii_uninstall+0xbd>
    6812:	55                   	push   %rbp
    6813:	53                   	push   %rbx
    6814:	48 89 fb             	mov    %rdi,%rbx
    6817:	50                   	push   %rax
    6818:	48 8b 05 79 37 02 00 	mov    0x23779(%rip),%rax        # 29f98 <efi_systab>
    681f:	48 8b b7 c0 04 00 00 	mov    0x4c0(%rdi),%rsi
    6826:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    682a:	48 8b 68 60          	mov    0x60(%rax),%rbp
    682e:	e8 0f 02 00 00       	call   6a42 <efi_child_del>
    6833:	48 83 ec 20          	sub    $0x20,%rsp
    6837:	4c 8d 83 a0 04 00 00 	lea    0x4a0(%rbx),%r8
    683e:	48 8b 8b c0 04 00 00 	mov    0x4c0(%rbx),%rcx
    6845:	45 31 c9             	xor    %r9d,%r9d
    6848:	48 8d 15 01 e1 01 00 	lea    0x1e101(%rip),%rdx        # 24950 <efi_hii_config_access_protocol_guid>
    684f:	ff 95 50 01 00 00    	call   *0x150(%rbp)
    6855:	48 8b 05 1c 33 02 00 	mov    0x2331c(%rip),%rax        # 29b78 <efihii>
    685c:	48 8b 93 d0 04 00 00 	mov    0x4d0(%rbx),%rdx
    6863:	48 89 c1             	mov    %rax,%rcx
    6866:	ff 50 08             	call   *0x8(%rax)
    6869:	48 8b 8b c0 04 00 00 	mov    0x4c0(%rbx),%rcx
    6870:	4c 8b 83 c8 04 00 00 	mov    0x4c8(%rbx),%r8
    6877:	45 31 c9             	xor    %r9d,%r9d
    687a:	48 8d 15 2f e1 01 00 	lea    0x1e12f(%rip),%rdx        # 249b0 <efi_device_path_protocol_guid>
    6881:	ff 95 50 01 00 00    	call   *0x150(%rbp)
    6887:	48 8b bb c8 04 00 00 	mov    0x4c8(%rbx),%rdi
    688e:	48 83 c4 20          	add    $0x20,%rsp
    6892:	e8 b8 5d 00 00       	call   c64f <free>
    6897:	48 8b bb b8 04 00 00 	mov    0x4b8(%rbx),%rdi
    689e:	48 c7 83 c8 04 00 00 	movq   $0x0,0x4c8(%rbx)
    68a5:	00 00 00 00 
    68a9:	e8 a1 5d 00 00       	call   c64f <free>
    68ae:	48 c7 83 b8 04 00 00 	movq   $0x0,0x4b8(%rbx)
    68b5:	00 00 00 00 
    68b9:	5a                   	pop    %rdx
    68ba:	5b                   	pop    %rbx
    68bb:	5d                   	pop    %rbp
    68bc:	c3                   	ret    
    68bd:	c3                   	ret    

00000000000068be <efi_printf_sputc>:
    68be:	f3 0f 1e fa          	endbr64 
    68c2:	48 8b 47 08          	mov    0x8(%rdi),%rax
    68c6:	48 3b 47 18          	cmp    0x18(%rdi),%rax
    68ca:	73 08                	jae    68d4 <efi_printf_sputc+0x16>
    68cc:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    68d0:	66 89 34 42          	mov    %si,(%rdx,%rax,2)
    68d4:	c3                   	ret    

00000000000068d5 <efi_vsnprintf>:
    68d5:	f3 0f 1e fa          	endbr64 
    68d9:	55                   	push   %rbp
    68da:	48 89 fd             	mov    %rdi,%rbp
    68dd:	53                   	push   %rbx
    68de:	48 89 f3             	mov    %rsi,%rbx
    68e1:	48 89 d6             	mov    %rdx,%rsi
    68e4:	48 89 ca             	mov    %rcx,%rdx
    68e7:	48 83 ec 38          	sub    $0x38,%rsp
    68eb:	48 8b 05 7e 36 02 00 	mov    0x2367e(%rip),%rax        # 29f70 <__stack_chk_guard>
    68f2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    68f7:	48 8d 05 c0 ff ff ff 	lea    -0x40(%rip),%rax        # 68be <efi_printf_sputc>
    68fe:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    6903:	48 89 e7             	mov    %rsp,%rdi
    6906:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    690b:	48 89 04 24          	mov    %rax,(%rsp)
    690f:	e8 e3 02 01 00       	call   16bf7 <vcprintf>
    6914:	48 85 db             	test   %rbx,%rbx
    6917:	74 11                	je     692a <efi_vsnprintf+0x55>
    6919:	48 ff cb             	dec    %rbx
    691c:	48 39 c3             	cmp    %rax,%rbx
    691f:	48 0f 47 d8          	cmova  %rax,%rbx
    6923:	66 c7 44 5d 00 00 00 	movw   $0x0,0x0(%rbp,%rbx,2)
    692a:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    692f:	48 2b 15 3a 36 02 00 	sub    0x2363a(%rip),%rdx        # 29f70 <__stack_chk_guard>
    6936:	74 05                	je     693d <efi_vsnprintf+0x68>
    6938:	e8 23 c1 ff ff       	call   2a60 <__stack_chk_fail>
    693d:	48 83 c4 38          	add    $0x38,%rsp
    6941:	5b                   	pop    %rbx
    6942:	5d                   	pop    %rbp
    6943:	c3                   	ret    

0000000000006944 <efi_snprintf>:
    6944:	f3 0f 1e fa          	endbr64 
    6948:	48 83 ec 58          	sub    $0x58,%rsp
    694c:	48 8b 05 1d 36 02 00 	mov    0x2361d(%rip),%rax        # 29f70 <__stack_chk_guard>
    6953:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6958:	31 c0                	xor    %eax,%eax
    695a:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    695f:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    6964:	48 89 e1             	mov    %rsp,%rcx
    6967:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    696c:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    6971:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    6976:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    697b:	c7 04 24 18 00 00 00 	movl   $0x18,(%rsp)
    6982:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6987:	e8 49 ff ff ff       	call   68d5 <efi_vsnprintf>
    698c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6991:	48 2b 15 d8 35 02 00 	sub    0x235d8(%rip),%rdx        # 29f70 <__stack_chk_guard>
    6998:	74 05                	je     699f <efi_snprintf+0x5b>
    699a:	e8 c1 c0 ff ff       	call   2a60 <__stack_chk_fail>
    699f:	48 83 c4 58          	add    $0x58,%rsp
    69a3:	c3                   	ret    

00000000000069a4 <efi_devpath_end>:
    69a4:	f3 0f 1e fa          	endbr64 
    69a8:	48 89 f8             	mov    %rdi,%rax
    69ab:	80 38 7f             	cmpb   $0x7f,(%rax)
    69ae:	74 09                	je     69b9 <efi_devpath_end+0x15>
    69b0:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    69b4:	48 01 d0             	add    %rdx,%rax
    69b7:	eb f2                	jmp    69ab <efi_devpath_end+0x7>
    69b9:	c3                   	ret    

00000000000069ba <efi_devpath_len>:
    69ba:	f3 0f 1e fa          	endbr64 
    69be:	e8 e1 ff ff ff       	call   69a4 <efi_devpath_end>
    69c3:	48 29 f8             	sub    %rdi,%rax
    69c6:	c3                   	ret    

00000000000069c7 <efi_child_add>:
    69c7:	f3 0f 1e fa          	endbr64 
    69cb:	48 83 ec 18          	sub    $0x18,%rsp
    69cf:	48 8d 15 da df 01 00 	lea    0x1dfda(%rip),%rdx        # 249b0 <efi_device_path_protocol_guid>
    69d6:	48 89 f9             	mov    %rdi,%rcx
    69d9:	4c 8b 0d a8 35 02 00 	mov    0x235a8(%rip),%r9        # 29f88 <efi_image_handle>
    69e0:	48 8b 05 89 35 02 00 	mov    0x23589(%rip),%rax        # 29f70 <__stack_chk_guard>
    69e7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    69ec:	48 8b 05 a5 35 02 00 	mov    0x235a5(%rip),%rax        # 29f98 <efi_systab>
    69f3:	48 8b 40 60          	mov    0x60(%rax),%rax
    69f7:	6a 08                	push   $0x8
    69f9:	56                   	push   %rsi
    69fa:	48 83 ec 20          	sub    $0x20,%rsp
    69fe:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
    6a03:	ff 90 18 01 00 00    	call   *0x118(%rax)
    6a09:	48 83 c4 30          	add    $0x30,%rsp
    6a0d:	48 89 c2             	mov    %rax,%rdx
    6a10:	31 c0                	xor    %eax,%eax
    6a12:	48 85 d2             	test   %rdx,%rdx
    6a15:	74 13                	je     6a2a <efi_child_add+0x63>
    6a17:	48 89 d0             	mov    %rdx,%rax
    6a1a:	48 c1 e8 38          	shr    $0x38,%rax
    6a1e:	09 d0                	or     %edx,%eax
    6a20:	0f b6 c0             	movzbl %al,%eax
    6a23:	0d 00 e0 45 7f       	or     $0x7f45e000,%eax
    6a28:	f7 d8                	neg    %eax
    6a2a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    6a2f:	48 2b 15 3a 35 02 00 	sub    0x2353a(%rip),%rdx        # 29f70 <__stack_chk_guard>
    6a36:	74 05                	je     6a3d <efi_child_add+0x76>
    6a38:	e8 23 c0 ff ff       	call   2a60 <__stack_chk_fail>
    6a3d:	48 83 c4 18          	add    $0x18,%rsp
    6a41:	c3                   	ret    

0000000000006a42 <efi_child_del>:
    6a42:	f3 0f 1e fa          	endbr64 
    6a46:	48 83 ec 28          	sub    $0x28,%rsp
    6a4a:	48 89 f9             	mov    %rdi,%rcx
    6a4d:	48 8b 05 44 35 02 00 	mov    0x23544(%rip),%rax        # 29f98 <efi_systab>
    6a54:	4c 8b 05 2d 35 02 00 	mov    0x2352d(%rip),%r8        # 29f88 <efi_image_handle>
    6a5b:	49 89 f1             	mov    %rsi,%r9
    6a5e:	48 8d 15 4b df 01 00 	lea    0x1df4b(%rip),%rdx        # 249b0 <efi_device_path_protocol_guid>
    6a65:	48 8b 40 60          	mov    0x60(%rax),%rax
    6a69:	ff 90 20 01 00 00    	call   *0x120(%rax)
    6a6f:	48 83 c4 28          	add    $0x28,%rsp
    6a73:	c3                   	ret    

0000000000006a74 <efi_watchdog_expired>:
    6a74:	f3 0f 1e fa          	endbr64 
    6a78:	48 8b 05 19 35 02 00 	mov    0x23519(%rip),%rax        # 29f98 <efi_systab>
    6a7f:	53                   	push   %rbx
    6a80:	be 00 28 00 00       	mov    $0x2800,%esi
    6a85:	48 8b 58 60          	mov    0x60(%rax),%rbx
    6a89:	e8 d4 97 00 00       	call   10262 <start_timer_fixed>
    6a8e:	48 83 ec 20          	sub    $0x20,%rsp
    6a92:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
    6a98:	4c 8d 0d 81 da 01 00 	lea    0x1da81(%rip),%r9        # 24520 <data.0>
    6a9f:	48 ba 44 41 45 44 45 	movabs $0x6950584544454144,%rdx
    6aa6:	58 50 69 
    6aa9:	b9 2c 01 00 00       	mov    $0x12c,%ecx
    6aae:	ff 93 00 01 00 00    	call   *0x100(%rbx)
    6ab4:	48 83 c4 20          	add    $0x20,%rsp
    6ab8:	48 85 c0             	test   %rax,%rax
    6abb:	74 00                	je     6abd <efi_watchdog_expired+0x49>
    6abd:	5b                   	pop    %rbx
    6abe:	c3                   	ret    

0000000000006abf <efi_wrap>:
    6abf:	f3 0f 1e fa          	endbr64 
    6ac3:	c3                   	ret    

0000000000006ac4 <efi_probe>:
    6ac4:	f3 0f 1e fa          	endbr64 
    6ac8:	31 c0                	xor    %eax,%eax
    6aca:	c3                   	ret    

0000000000006acb <efi_remove>:
    6acb:	f3 0f 1e fa          	endbr64 
    6acf:	e9 42 57 01 00       	jmp    1c216 <efi_driver_disconnect_all>

0000000000006ad4 <_efidrv_start>:
    6ad4:	f3 0f 1e fa          	endbr64 
    6ad8:	41 55                	push   %r13
    6ada:	49 89 d5             	mov    %rdx,%r13
    6add:	41 54                	push   %r12
    6adf:	49 89 cc             	mov    %rcx,%r12
    6ae2:	57                   	push   %rdi
    6ae3:	48 89 cf             	mov    %rcx,%rdi
    6ae6:	56                   	push   %rsi
    6ae7:	53                   	push   %rbx
    6ae8:	48 83 ec 20          	sub    $0x20,%rsp
    6aec:	e8 96 bc ff ff       	call   2787 <efi_stack_cookie>
    6af1:	4c 89 e7             	mov    %r12,%rdi
    6af4:	4c 89 ee             	mov    %r13,%rsi
    6af7:	48 89 05 72 34 02 00 	mov    %rax,0x23472(%rip)        # 29f70 <__stack_chk_guard>
    6afe:	e8 b6 bc ff ff       	call   27b9 <efi_init>
    6b03:	49 89 c4             	mov    %rax,%r12
    6b06:	48 85 c0             	test   %rax,%rax
    6b09:	75 26                	jne    6b31 <_efidrv_start+0x5d>
    6b0b:	48 8b 05 86 34 02 00 	mov    0x23486(%rip),%rax        # 29f98 <efi_systab>
    6b12:	b9 08 00 00 00       	mov    $0x8,%ecx
    6b17:	48 8b 58 60          	mov    0x60(%rax),%rbx
    6b1b:	ff 53 18             	call   *0x18(%rbx)
    6b1e:	49 89 c5             	mov    %rax,%r13
    6b21:	e8 49 22 00 00       	call   8d6f <initialise>
    6b26:	e8 6a 22 00 00       	call   8d95 <startup>
    6b2b:	4c 89 e9             	mov    %r13,%rcx
    6b2e:	ff 53 20             	call   *0x20(%rbx)
    6b31:	48 83 c4 20          	add    $0x20,%rsp
    6b35:	4c 89 e0             	mov    %r12,%rax
    6b38:	5b                   	pop    %rbx
    6b39:	5e                   	pop    %rsi
    6b3a:	5f                   	pop    %rdi
    6b3b:	41 5c                	pop    %r12
    6b3d:	41 5d                	pop    %r13
    6b3f:	c3                   	ret    

0000000000006b40 <embedded_init>:
    6b40:	f3 0f 1e fa          	endbr64 
    6b44:	c3                   	ret    

0000000000006b45 <copy_encap_settings>:
    6b45:	41 57                	push   %r15
    6b47:	b9 08 00 00 00       	mov    $0x8,%ecx
    6b4c:	c1 e2 08             	shl    $0x8,%edx
    6b4f:	41 56                	push   %r14
    6b51:	41 55                	push   %r13
    6b53:	41 89 d5             	mov    %edx,%r13d
    6b56:	41 54                	push   %r12
    6b58:	49 89 f4             	mov    %rsi,%r12
    6b5b:	55                   	push   %rbp
    6b5c:	bd 01 00 00 00       	mov    $0x1,%ebp
    6b61:	53                   	push   %rbx
    6b62:	48 89 fb             	mov    %rdi,%rbx
    6b65:	48 83 ec 58          	sub    $0x58,%rsp
    6b69:	48 8b 05 00 34 02 00 	mov    0x23400(%rip),%rax        # 29f70 <__stack_chk_guard>
    6b70:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    6b75:	31 c0                	xor    %eax,%eax
    6b77:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    6b7c:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
    6b81:	f3 ab                	rep stos %eax,%es:(%rdi)
    6b83:	48 8d 05 4a d8 01 00 	lea    0x1d84a(%rip),%rax        # 243d4 <.LC0>
    6b8a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    6b8f:	45 89 ef             	mov    %r13d,%r15d
    6b92:	41 09 ef             	or     %ebp,%r15d
    6b95:	41 83 ff 2b          	cmp    $0x2b,%r15d
    6b99:	74 09                	je     6ba4 <copy_encap_settings+0x5f>
    6b9b:	41 81 ff af 00 00 00 	cmp    $0xaf,%r15d
    6ba2:	75 20                	jne    6bc4 <copy_encap_settings+0x7f>
    6ba4:	44 89 fa             	mov    %r15d,%edx
    6ba7:	4c 89 e6             	mov    %r12,%rsi
    6baa:	48 89 df             	mov    %rbx,%rdi
    6bad:	e8 93 ff ff ff       	call   6b45 <copy_encap_settings>
    6bb2:	85 c0                	test   %eax,%eax
    6bb4:	75 51                	jne    6c07 <copy_encap_settings+0xc2>
    6bb6:	ff c5                	inc    %ebp
    6bb8:	81 fd ff 00 00 00    	cmp    $0xff,%ebp
    6bbe:	75 cf                	jne    6b8f <copy_encap_settings+0x4a>
    6bc0:	31 c0                	xor    %eax,%eax
    6bc2:	eb 43                	jmp    6c07 <copy_encap_settings+0xc2>
    6bc4:	44 89 f8             	mov    %r15d,%eax
    6bc7:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    6bcc:	4c 89 f2             	mov    %r14,%rdx
    6bcf:	4c 89 e7             	mov    %r12,%rdi
    6bd2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    6bd7:	e8 02 b2 00 00       	call   11dde <fetch_raw_setting_copy>
    6bdc:	85 c0                	test   %eax,%eax
    6bde:	78 d6                	js     6bb6 <copy_encap_settings+0x71>
    6be0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6be5:	48 63 c8             	movslq %eax,%rcx
    6be8:	44 89 fe             	mov    %r15d,%esi
    6beb:	48 89 df             	mov    %rbx,%rdi
    6bee:	e8 29 3d 01 00       	call   1a91c <dhcppkt_store>
    6bf3:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    6bf8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    6bfc:	e8 4e 5a 00 00       	call   c64f <free>
    6c01:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    6c05:	eb ab                	jmp    6bb2 <copy_encap_settings+0x6d>
    6c07:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    6c0c:	48 2b 15 5d 33 02 00 	sub    0x2335d(%rip),%rdx        # 29f70 <__stack_chk_guard>
    6c13:	74 05                	je     6c1a <copy_encap_settings+0xd5>
    6c15:	e8 46 be ff ff       	call   2a60 <__stack_chk_fail>
    6c1a:	48 83 c4 58          	add    $0x58,%rsp
    6c1e:	5b                   	pop    %rbx
    6c1f:	5d                   	pop    %rbp
    6c20:	41 5c                	pop    %r12
    6c22:	41 5d                	pop    %r13
    6c24:	41 5e                	pop    %r14
    6c26:	41 5f                	pop    %r15
    6c28:	c3                   	ret    

0000000000006c29 <create_fakedhcpdiscover>:
    6c29:	f3 0f 1e fa          	endbr64 
    6c2d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    6c34:	49 89 fa             	mov    %rdi,%r10
    6c37:	49 89 f1             	mov    %rsi,%r9
    6c3a:	45 31 c0             	xor    %r8d,%r8d
    6c3d:	48 8b 05 2c 33 02 00 	mov    0x2332c(%rip),%rax        # 29f70 <__stack_chk_guard>
    6c44:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    6c4b:	00 
    6c4c:	31 c0                	xor    %eax,%eax
    6c4e:	48 89 e7             	mov    %rsp,%rdi
    6c51:	8b 0d 69 33 02 00    	mov    0x23369(%rip),%ecx        # 29fc0 <dhcp_last_xid>
    6c57:	4c 89 d6             	mov    %r10,%rsi
    6c5a:	50                   	push   %rax
    6c5b:	52                   	push   %rdx
    6c5c:	ba 01 00 00 00       	mov    $0x1,%edx
    6c61:	e8 36 31 01 00       	call   19d9c <dhcp_create_request>
    6c66:	5a                   	pop    %rdx
    6c67:	59                   	pop    %rcx
    6c68:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    6c6f:	00 
    6c70:	48 2b 15 f9 32 02 00 	sub    0x232f9(%rip),%rdx        # 29f70 <__stack_chk_guard>
    6c77:	74 05                	je     6c7e <create_fakedhcpdiscover+0x55>
    6c79:	e8 e2 bd ff ff       	call   2a60 <__stack_chk_fail>
    6c7e:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    6c85:	c3                   	ret    

0000000000006c86 <create_fakedhcpack>:
    6c86:	f3 0f 1e fa          	endbr64 
    6c8a:	55                   	push   %rbp
    6c8b:	45 31 c9             	xor    %r9d,%r9d
    6c8e:	45 31 c0             	xor    %r8d,%r8d
    6c91:	53                   	push   %rbx
    6c92:	48 89 fb             	mov    %rdi,%rbx
    6c95:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    6c9c:	8b 0d 1e 33 02 00    	mov    0x2331e(%rip),%ecx        # 29fc0 <dhcp_last_xid>
    6ca2:	48 8b 05 c7 32 02 00 	mov    0x232c7(%rip),%rax        # 29f70 <__stack_chk_guard>
    6ca9:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    6cb0:	00 
    6cb1:	31 c0                	xor    %eax,%eax
    6cb3:	48 89 e5             	mov    %rsp,%rbp
    6cb6:	52                   	push   %rdx
    6cb7:	ba 05 00 00 00       	mov    $0x5,%edx
    6cbc:	56                   	push   %rsi
    6cbd:	48 89 fe             	mov    %rdi,%rsi
    6cc0:	48 89 ef             	mov    %rbp,%rdi
    6cc3:	e8 d2 2f 01 00       	call   19c9a <dhcp_create_packet>
    6cc8:	48 89 ec             	mov    %rbp,%rsp
    6ccb:	85 c0                	test   %eax,%eax
    6ccd:	75 21                	jne    6cf0 <create_fakedhcpack+0x6a>
    6ccf:	31 d2                	xor    %edx,%edx
    6cd1:	31 f6                	xor    %esi,%esi
    6cd3:	48 89 ef             	mov    %rbp,%rdi
    6cd6:	e8 6a fe ff ff       	call   6b45 <copy_encap_settings>
    6cdb:	85 c0                	test   %eax,%eax
    6cdd:	75 11                	jne    6cf0 <create_fakedhcpack+0x6a>
    6cdf:	48 8d b3 68 01 00 00 	lea    0x168(%rbx),%rsi
    6ce6:	31 d2                	xor    %edx,%edx
    6ce8:	48 89 ef             	mov    %rbp,%rdi
    6ceb:	e8 55 fe ff ff       	call   6b45 <copy_encap_settings>
    6cf0:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    6cf7:	00 
    6cf8:	48 2b 15 71 32 02 00 	sub    0x23271(%rip),%rdx        # 29f70 <__stack_chk_guard>
    6cff:	74 05                	je     6d06 <create_fakedhcpack+0x80>
    6d01:	e8 5a bd ff ff       	call   2a60 <__stack_chk_fail>
    6d06:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    6d0d:	5b                   	pop    %rbx
    6d0e:	5d                   	pop    %rbp
    6d0f:	c3                   	ret    

0000000000006d10 <create_fakepxebsack>:
    6d10:	f3 0f 1e fa          	endbr64 
    6d14:	41 57                	push   %r15
    6d16:	41 56                	push   %r14
    6d18:	41 55                	push   %r13
    6d1a:	41 54                	push   %r12
    6d1c:	55                   	push   %rbp
    6d1d:	48 89 fd             	mov    %rdi,%rbp
    6d20:	48 8d 3d b8 bb 01 00 	lea    0x1bbb8(%rip),%rdi        # 228df <.LC1>
    6d27:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    6d2e:	48 8b 05 3b 32 02 00 	mov    0x2323b(%rip),%rax        # 29f70 <__stack_chk_guard>
    6d35:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    6d3c:	00 
    6d3d:	31 c0                	xor    %eax,%eax
    6d3f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6d44:	48 89 14 24          	mov    %rdx,(%rsp)
    6d48:	e8 05 ab 00 00       	call   11852 <find_settings>
    6d4d:	48 8d 3d c5 b9 01 00 	lea    0x1b9c5(%rip),%rdi        # 22719 <.LC2>
    6d54:	49 89 c6             	mov    %rax,%r14
    6d57:	e8 f6 aa 00 00       	call   11852 <find_settings>
    6d5c:	48 8b 14 24          	mov    (%rsp),%rdx
    6d60:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6d65:	49 89 c5             	mov    %rax,%r13
    6d68:	4c 89 f0             	mov    %r14,%rax
    6d6b:	4c 09 e8             	or     %r13,%rax
    6d6e:	75 2d                	jne    6d9d <create_fakepxebsack+0x8d>
    6d70:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    6d77:	00 
    6d78:	48 2b 05 f1 31 02 00 	sub    0x231f1(%rip),%rax        # 29f70 <__stack_chk_guard>
    6d7f:	0f 85 9f 00 00 00    	jne    6e24 <create_fakepxebsack+0x114>
    6d85:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    6d8c:	48 89 ef             	mov    %rbp,%rdi
    6d8f:	5d                   	pop    %rbp
    6d90:	41 5c                	pop    %r12
    6d92:	41 5d                	pop    %r13
    6d94:	41 5e                	pop    %r14
    6d96:	41 5f                	pop    %r15
    6d98:	e9 e9 fe ff ff       	jmp    6c86 <create_fakedhcpack>
    6d9d:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    6da2:	52                   	push   %rdx
    6da3:	8b 0d 17 32 02 00    	mov    0x23217(%rip),%ecx        # 29fc0 <dhcp_last_xid>
    6da9:	ba 05 00 00 00       	mov    $0x5,%edx
    6dae:	56                   	push   %rsi
    6daf:	45 31 c9             	xor    %r9d,%r9d
    6db2:	45 31 c0             	xor    %r8d,%r8d
    6db5:	48 89 ee             	mov    %rbp,%rsi
    6db8:	4c 89 ff             	mov    %r15,%rdi
    6dbb:	e8 da 2e 01 00       	call   19c9a <dhcp_create_packet>
    6dc0:	41 89 c4             	mov    %eax,%r12d
    6dc3:	58                   	pop    %rax
    6dc4:	5a                   	pop    %rdx
    6dc5:	45 85 e4             	test   %r12d,%r12d
    6dc8:	75 49                	jne    6e13 <create_fakepxebsack+0x103>
    6dca:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    6dcf:	48 8d bd 68 01 00 00 	lea    0x168(%rbp),%rdi
    6dd6:	48 8d 35 53 25 02 00 	lea    0x22553(%rip),%rsi        # 29330 <ip_setting>
    6ddd:	48 8d 50 0c          	lea    0xc(%rax),%rdx
    6de1:	e8 76 b0 00 00       	call   11e5c <fetch_ipv4_setting>
    6de6:	4d 85 f6             	test   %r14,%r14
    6de9:	75 14                	jne    6dff <create_fakepxebsack+0xef>
    6deb:	4d 85 ed             	test   %r13,%r13
    6dee:	74 23                	je     6e13 <create_fakepxebsack+0x103>
    6df0:	31 d2                	xor    %edx,%edx
    6df2:	4c 89 ee             	mov    %r13,%rsi
    6df5:	4c 89 ff             	mov    %r15,%rdi
    6df8:	e8 48 fd ff ff       	call   6b45 <copy_encap_settings>
    6dfd:	eb 11                	jmp    6e10 <create_fakepxebsack+0x100>
    6dff:	31 d2                	xor    %edx,%edx
    6e01:	4c 89 f6             	mov    %r14,%rsi
    6e04:	4c 89 ff             	mov    %r15,%rdi
    6e07:	e8 39 fd ff ff       	call   6b45 <copy_encap_settings>
    6e0c:	85 c0                	test   %eax,%eax
    6e0e:	74 db                	je     6deb <create_fakepxebsack+0xdb>
    6e10:	41 89 c4             	mov    %eax,%r12d
    6e13:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    6e1a:	00 
    6e1b:	48 2b 05 4e 31 02 00 	sub    0x2314e(%rip),%rax        # 29f70 <__stack_chk_guard>
    6e22:	74 05                	je     6e29 <create_fakepxebsack+0x119>
    6e24:	e8 37 bc ff ff       	call   2a60 <__stack_chk_fail>
    6e29:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    6e30:	44 89 e0             	mov    %r12d,%eax
    6e33:	5d                   	pop    %rbp
    6e34:	41 5c                	pop    %r12
    6e36:	41 5d                	pop    %r13
    6e38:	41 5e                	pop    %r14
    6e3a:	41 5f                	pop    %r15
    6e3c:	c3                   	ret    

0000000000006e3d <getopt_long>:
    6e3d:	f3 0f 1e fa          	endbr64 
    6e41:	41 57                	push   %r15
    6e43:	49 89 f7             	mov    %rsi,%r15
    6e46:	48 89 d6             	mov    %rdx,%rsi
    6e49:	41 56                	push   %r14
    6e4b:	41 55                	push   %r13
    6e4d:	4d 89 c5             	mov    %r8,%r13
    6e50:	41 54                	push   %r12
    6e52:	55                   	push   %rbp
    6e53:	53                   	push   %rbx
    6e54:	48 83 ec 28          	sub    $0x28,%rsp
    6e58:	48 63 05 49 31 02 00 	movslq 0x23149(%rip),%rax        # 29fa8 <optind>
    6e5f:	48 89 0c 24          	mov    %rcx,(%rsp)
    6e63:	48 89 c3             	mov    %rax,%rbx
    6e66:	49 8b 14 c7          	mov    (%r15,%rax,8),%rdx
    6e6a:	4c 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%r8
    6e71:	00 
    6e72:	83 c8 ff             	or     $0xffffffff,%eax
    6e75:	39 fb                	cmp    %edi,%ebx
    6e77:	0f 8d 62 02 00 00    	jge    70df <getopt_long+0x2a2>
    6e7d:	80 3a 2d             	cmpb   $0x2d,(%rdx)
    6e80:	0f 85 59 02 00 00    	jne    70df <getopt_long+0x2a2>
    6e86:	80 7a 01 2d          	cmpb   $0x2d,0x1(%rdx)
    6e8a:	41 89 fe             	mov    %edi,%r14d
    6e8d:	0f 85 34 01 00 00    	jne    6fc7 <getopt_long+0x18a>
    6e93:	80 7a 02 00          	cmpb   $0x0,0x2(%rdx)
    6e97:	74 09                	je     6ea2 <getopt_long+0x65>
    6e99:	48 8d 6a 02          	lea    0x2(%rdx),%rbp
    6e9d:	49 89 cc             	mov    %rcx,%r12
    6ea0:	eb 44                	jmp    6ee6 <getopt_long+0xa9>
    6ea2:	ff c3                	inc    %ebx
    6ea4:	83 c8 ff             	or     $0xffffffff,%eax
    6ea7:	89 1d fb 30 02 00    	mov    %ebx,0x230fb(%rip)        # 29fa8 <optind>
    6ead:	e9 2d 02 00 00       	jmp    70df <getopt_long+0x2a2>
    6eb2:	48 89 f7             	mov    %rsi,%rdi
    6eb5:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    6eba:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6ebf:	e8 76 ca 00 00       	call   1393a <strlen>
    6ec4:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6ec9:	48 89 ef             	mov    %rbp,%rdi
    6ecc:	48 89 c2             	mov    %rax,%rdx
    6ecf:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6ed4:	e8 de c9 00 00       	call   138b7 <strncmp>
    6ed9:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    6ede:	85 c0                	test   %eax,%eax
    6ee0:	74 12                	je     6ef4 <getopt_long+0xb7>
    6ee2:	49 83 c4 20          	add    $0x20,%r12
    6ee6:	49 8b 34 24          	mov    (%r12),%rsi
    6eea:	48 85 f6             	test   %rsi,%rsi
    6eed:	75 c3                	jne    6eb2 <getopt_long+0x75>
    6eef:	e9 b3 00 00 00       	jmp    6fa7 <getopt_long+0x16a>
    6ef4:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    6ef9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6efe:	8a 44 15 00          	mov    0x0(%rbp,%rdx,1),%al
    6f02:	3c 3d                	cmp    $0x3d,%al
    6f04:	75 07                	jne    6f0d <getopt_long+0xd0>
    6f06:	48 8d 44 15 01       	lea    0x1(%rbp,%rdx,1),%rax
    6f0b:	eb 06                	jmp    6f13 <getopt_long+0xd6>
    6f0d:	84 c0                	test   %al,%al
    6f0f:	75 d1                	jne    6ee2 <getopt_long+0xa5>
    6f11:	31 c0                	xor    %eax,%eax
    6f13:	41 8b 54 24 08       	mov    0x8(%r12),%edx
    6f18:	8d 7b 01             	lea    0x1(%rbx),%edi
    6f1b:	89 3d 87 30 02 00    	mov    %edi,0x23087(%rip)        # 29fa8 <optind>
    6f21:	85 d2                	test   %edx,%edx
    6f23:	74 31                	je     6f56 <getopt_long+0x119>
    6f25:	48 85 c0             	test   %rax,%rax
    6f28:	75 23                	jne    6f4d <getopt_long+0x110>
    6f2a:	41 39 fe             	cmp    %edi,%r14d
    6f2d:	0f 8e 97 01 00 00    	jle    70ca <getopt_long+0x28d>
    6f33:	4b 8b 7c 07 08       	mov    0x8(%r15,%r8,1),%rdi
    6f38:	80 3f 2d             	cmpb   $0x2d,(%rdi)
    6f3b:	0f 84 89 01 00 00    	je     70ca <getopt_long+0x28d>
    6f41:	83 c3 02             	add    $0x2,%ebx
    6f44:	48 89 f8             	mov    %rdi,%rax
    6f47:	89 1d 5b 30 02 00    	mov    %ebx,0x2305b(%rip)        # 29fa8 <optind>
    6f4d:	83 fa 01             	cmp    $0x1,%edx
    6f50:	74 1e                	je     6f70 <getopt_long+0x133>
    6f52:	85 d2                	test   %edx,%edx
    6f54:	75 1a                	jne    6f70 <getopt_long+0x133>
    6f56:	48 85 c0             	test   %rax,%rax
    6f59:	74 15                	je     6f70 <getopt_long+0x133>
    6f5b:	48 8d 3d a9 b9 01 00 	lea    0x1b9a9(%rip),%rdi        # 2290b <.LC1>
    6f62:	31 c0                	xor    %eax,%eax
    6f64:	e8 35 02 01 00       	call   1719e <printf>
    6f69:	b8 3a 00 00 00       	mov    $0x3a,%eax
    6f6e:	eb 1a                	jmp    6f8a <getopt_long+0x14d>
    6f70:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
    6f75:	48 89 05 24 30 02 00 	mov    %rax,0x23024(%rip)        # 29fa0 <optarg>
    6f7c:	41 8b 44 24 18       	mov    0x18(%r12),%eax
    6f81:	48 85 d2             	test   %rdx,%rdx
    6f84:	74 04                	je     6f8a <getopt_long+0x14d>
    6f86:	89 02                	mov    %eax,(%rdx)
    6f88:	31 c0                	xor    %eax,%eax
    6f8a:	4d 85 ed             	test   %r13,%r13
    6f8d:	0f 84 4c 01 00 00    	je     70df <getopt_long+0x2a2>
    6f93:	4c 89 e1             	mov    %r12,%rcx
    6f96:	48 2b 0c 24          	sub    (%rsp),%rcx
    6f9a:	48 c1 f9 05          	sar    $0x5,%rcx
    6f9e:	41 89 4d 00          	mov    %ecx,0x0(%r13)
    6fa2:	e9 38 01 00 00       	jmp    70df <getopt_long+0x2a2>
    6fa7:	48 89 ee             	mov    %rbp,%rsi
    6faa:	31 c0                	xor    %eax,%eax
    6fac:	48 8d 3d 77 b9 01 00 	lea    0x1b977(%rip),%rdi        # 2292a <.LC2>
    6fb3:	c7 05 f3 2f 02 00 3f 	movl   $0x3f,0x22ff3(%rip)        # 29fb0 <optopt>
    6fba:	00 00 00 
    6fbd:	e8 dc 01 01 00       	call   1719e <printf>
    6fc2:	e9 fc 00 00 00       	jmp    70c3 <getopt_long+0x286>
    6fc7:	83 3d de 2f 02 00 00 	cmpl   $0x0,0x22fde(%rip)        # 29fac <nextchar>
    6fce:	7f 0a                	jg     6fda <getopt_long+0x19d>
    6fd0:	c7 05 d2 2f 02 00 01 	movl   $0x1,0x22fd2(%rip)        # 29fac <nextchar>
    6fd7:	00 00 00 
    6fda:	48 63 05 cb 2f 02 00 	movslq 0x22fcb(%rip),%rax        # 29fac <nextchar>
    6fe1:	48 89 c7             	mov    %rax,%rdi
    6fe4:	48 01 c2             	add    %rax,%rdx
    6fe7:	0f be 06             	movsbl (%rsi),%eax
    6fea:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    6fee:	85 c0                	test   %eax,%eax
    6ff0:	0f 84 b8 00 00 00    	je     70ae <getopt_long+0x271>
    6ff6:	31 f6                	xor    %esi,%esi
    6ff8:	80 39 3a             	cmpb   $0x3a,(%rcx)
    6ffb:	75 07                	jne    7004 <getopt_long+0x1c7>
    6ffd:	ff c6                	inc    %esi
    6fff:	48 ff c1             	inc    %rcx
    7002:	eb f4                	jmp    6ff8 <getopt_long+0x1bb>
    7004:	44 0f be 02          	movsbl (%rdx),%r8d
    7008:	44 39 c0             	cmp    %r8d,%eax
    700b:	0f 85 95 00 00 00    	jne    70a6 <getopt_long+0x269>
    7011:	ff c7                	inc    %edi
    7013:	89 3d 93 2f 02 00    	mov    %edi,0x22f93(%rip)        # 29fac <nextchar>
    7019:	80 7a 01 00          	cmpb   $0x0,0x1(%rdx)
    701d:	74 1e                	je     703d <getopt_long+0x200>
    701f:	31 c9                	xor    %ecx,%ecx
    7021:	85 f6                	test   %esi,%esi
    7023:	74 58                	je     707d <getopt_long+0x240>
    7025:	c7 05 7d 2f 02 00 00 	movl   $0x0,0x22f7d(%rip)        # 29fac <nextchar>
    702c:	00 00 00 
    702f:	ff c3                	inc    %ebx
    7031:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
    7035:	89 1d 6d 2f 02 00    	mov    %ebx,0x22f6d(%rip)        # 29fa8 <optind>
    703b:	eb 14                	jmp    7051 <getopt_long+0x214>
    703d:	c7 05 65 2f 02 00 00 	movl   $0x0,0x22f65(%rip)        # 29fac <nextchar>
    7044:	00 00 00 
    7047:	ff c3                	inc    %ebx
    7049:	31 c9                	xor    %ecx,%ecx
    704b:	89 1d 57 2f 02 00    	mov    %ebx,0x22f57(%rip)        # 29fa8 <optind>
    7051:	85 f6                	test   %esi,%esi
    7053:	74 28                	je     707d <getopt_long+0x240>
    7055:	48 85 c9             	test   %rcx,%rcx
    7058:	75 23                	jne    707d <getopt_long+0x240>
    705a:	8b 15 48 2f 02 00    	mov    0x22f48(%rip),%edx        # 29fa8 <optind>
    7060:	41 39 d6             	cmp    %edx,%r14d
    7063:	7e 18                	jle    707d <getopt_long+0x240>
    7065:	48 63 ca             	movslq %edx,%rcx
    7068:	49 8b 0c cf          	mov    (%r15,%rcx,8),%rcx
    706c:	80 39 2d             	cmpb   $0x2d,(%rcx)
    706f:	74 0a                	je     707b <getopt_long+0x23e>
    7071:	ff c2                	inc    %edx
    7073:	89 15 2f 2f 02 00    	mov    %edx,0x22f2f(%rip)        # 29fa8 <optind>
    7079:	eb 02                	jmp    707d <getopt_long+0x240>
    707b:	31 c9                	xor    %ecx,%ecx
    707d:	ff ce                	dec    %esi
    707f:	75 1c                	jne    709d <getopt_long+0x260>
    7081:	48 85 c9             	test   %rcx,%rcx
    7084:	75 17                	jne    709d <getopt_long+0x260>
    7086:	89 c6                	mov    %eax,%esi
    7088:	48 8d 3d b7 b8 01 00 	lea    0x1b8b7(%rip),%rdi        # 22946 <.LC3>
    708f:	31 c0                	xor    %eax,%eax
    7091:	e8 08 01 01 00       	call   1719e <printf>
    7096:	b8 3a 00 00 00       	mov    $0x3a,%eax
    709b:	eb 42                	jmp    70df <getopt_long+0x2a2>
    709d:	48 89 0d fc 2e 02 00 	mov    %rcx,0x22efc(%rip)        # 29fa0 <optarg>
    70a4:	eb 39                	jmp    70df <getopt_long+0x2a2>
    70a6:	48 89 ce             	mov    %rcx,%rsi
    70a9:	e9 39 ff ff ff       	jmp    6fe7 <getopt_long+0x1aa>
    70ae:	0f be 32             	movsbl (%rdx),%esi
    70b1:	48 8d 3d b0 b8 01 00 	lea    0x1b8b0(%rip),%rdi        # 22968 <.LC4>
    70b8:	89 35 f2 2e 02 00    	mov    %esi,0x22ef2(%rip)        # 29fb0 <optopt>
    70be:	e8 db 00 01 00       	call   1719e <printf>
    70c3:	b8 3f 00 00 00       	mov    $0x3f,%eax
    70c8:	eb 15                	jmp    70df <getopt_long+0x2a2>
    70ca:	48 8d 3d 18 b8 01 00 	lea    0x1b818(%rip),%rdi        # 228e9 <.LC0>
    70d1:	83 fa 01             	cmp    $0x1,%edx
    70d4:	0f 84 88 fe ff ff    	je     6f62 <getopt_long+0x125>
    70da:	e9 73 fe ff ff       	jmp    6f52 <getopt_long+0x115>
    70df:	48 83 c4 28          	add    $0x28,%rsp
    70e3:	5b                   	pop    %rbx
    70e4:	5d                   	pop    %rbp
    70e5:	41 5c                	pop    %r12
    70e7:	41 5d                	pop    %r13
    70e9:	41 5e                	pop    %r14
    70eb:	41 5f                	pop    %r15
    70ed:	c3                   	ret    

00000000000070ee <http_block_read>:
    70ee:	f3 0f 1e fa          	endbr64 
    70f2:	41 55                	push   %r13
    70f4:	48 c1 e2 09          	shl    $0x9,%rdx
    70f8:	4d 89 c5             	mov    %r8,%r13
    70fb:	45 31 c0             	xor    %r8d,%r8d
    70fe:	41 54                	push   %r12
    7100:	4d 89 cc             	mov    %r9,%r12
    7103:	55                   	push   %rbp
    7104:	48 89 f5             	mov    %rsi,%rbp
    7107:	48 8d 35 1a e1 01 00 	lea    0x1e11a(%rip),%rsi        # 25228 <http_get>
    710e:	48 83 ec 30          	sub    $0x30,%rsp
    7112:	48 8b 05 57 2e 02 00 	mov    0x22e57(%rip),%rax        # 29f70 <__stack_chk_guard>
    7119:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    711e:	31 c0                	xor    %eax,%eax
    7120:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    7125:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    712a:	48 8b 97 00 01 00 00 	mov    0x100(%rdi),%rdx
    7131:	48 89 ef             	mov    %rbp,%rdi
    7134:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    7139:	e8 f3 10 00 00       	call   8231 <http_open>
    713e:	85 c0                	test   %eax,%eax
    7140:	75 24                	jne    7166 <http_block_read+0x78>
    7142:	4c 89 e2             	mov    %r12,%rdx
    7145:	4c 89 ee             	mov    %r13,%rsi
    7148:	48 89 ef             	mov    %rbp,%rdi
    714b:	e8 13 1f 01 00       	call   19063 <block_translate>
    7150:	85 c0                	test   %eax,%eax
    7152:	74 12                	je     7166 <http_block_read+0x78>
    7154:	89 c6                	mov    %eax,%esi
    7156:	48 89 ef             	mov    %rbp,%rdi
    7159:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    715d:	e8 e6 26 00 00       	call   9848 <intf_restart>
    7162:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    7166:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    716b:	48 2b 15 fe 2d 02 00 	sub    0x22dfe(%rip),%rdx        # 29f70 <__stack_chk_guard>
    7172:	74 05                	je     7179 <http_block_read+0x8b>
    7174:	e8 e7 b8 ff ff       	call   2a60 <__stack_chk_fail>
    7179:	48 83 c4 30          	add    $0x30,%rsp
    717d:	5d                   	pop    %rbp
    717e:	41 5c                	pop    %r12
    7180:	41 5d                	pop    %r13
    7182:	c3                   	ret    

0000000000007183 <http_block_read_capacity>:
    7183:	f3 0f 1e fa          	endbr64 
    7187:	55                   	push   %rbp
    7188:	48 89 f5             	mov    %rsi,%rbp
    718b:	45 31 c0             	xor    %r8d,%r8d
    718e:	31 c9                	xor    %ecx,%ecx
    7190:	48 8d 35 99 e0 01 00 	lea    0x1e099(%rip),%rsi        # 25230 <http_head>
    7197:	48 83 ec 10          	sub    $0x10,%rsp
    719b:	48 8b 97 00 01 00 00 	mov    0x100(%rdi),%rdx
    71a2:	48 89 ef             	mov    %rbp,%rdi
    71a5:	e8 87 10 00 00       	call   8231 <http_open>
    71aa:	85 c0                	test   %eax,%eax
    71ac:	75 25                	jne    71d3 <http_block_read_capacity+0x50>
    71ae:	31 f6                	xor    %esi,%esi
    71b0:	ba 00 02 00 00       	mov    $0x200,%edx
    71b5:	48 89 ef             	mov    %rbp,%rdi
    71b8:	e8 a6 1e 01 00       	call   19063 <block_translate>
    71bd:	85 c0                	test   %eax,%eax
    71bf:	74 12                	je     71d3 <http_block_read_capacity+0x50>
    71c1:	89 c6                	mov    %eax,%esi
    71c3:	48 89 ef             	mov    %rbp,%rdi
    71c6:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    71ca:	e8 79 26 00 00       	call   9848 <intf_restart>
    71cf:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    71d3:	48 83 c4 10          	add    $0x10,%rsp
    71d7:	5d                   	pop    %rbp
    71d8:	c3                   	ret    

00000000000071d9 <http_parse_location>:
    71d9:	f3 0f 1e fa          	endbr64 
    71dd:	48 89 b7 c8 01 00 00 	mov    %rsi,0x1c8(%rdi)
    71e4:	31 c0                	xor    %eax,%eax
    71e6:	c3                   	ret    

00000000000071e7 <http_init_transfer_chunked>:
    71e7:	f3 0f 1e fa          	endbr64 
    71eb:	31 c0                	xor    %eax,%eax
    71ed:	c3                   	ret    

00000000000071ee <http_parse_retry_after>:
    71ee:	f3 0f 1e fa          	endbr64 
    71f2:	53                   	push   %rbx
    71f3:	ba 0a 00 00 00       	mov    $0xa,%edx
    71f8:	48 89 fb             	mov    %rdi,%rbx
    71fb:	48 89 f7             	mov    %rsi,%rdi
    71fe:	48 83 ec 10          	sub    $0x10,%rsp
    7202:	48 8b 05 67 2d 02 00 	mov    0x22d67(%rip),%rax        # 29f70 <__stack_chk_guard>
    7209:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    720e:	31 c0                	xor    %eax,%eax
    7210:	48 89 e6             	mov    %rsp,%rsi
    7213:	e8 63 c8 00 00       	call   13a7b <strtoul>
    7218:	48 8b 14 24          	mov    (%rsp),%rdx
    721c:	89 83 18 02 00 00    	mov    %eax,0x218(%rbx)
    7222:	80 3a 00             	cmpb   $0x0,(%rdx)
    7225:	ba 05 00 00 00       	mov    $0x5,%edx
    722a:	0f 45 c2             	cmovne %edx,%eax
    722d:	83 8b 1c 02 00 00 04 	orl    $0x4,0x21c(%rbx)
    7234:	89 83 18 02 00 00    	mov    %eax,0x218(%rbx)
    723a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    723f:	48 2b 05 2a 2d 02 00 	sub    0x22d2a(%rip),%rax        # 29f70 <__stack_chk_guard>
    7246:	74 05                	je     724d <http_parse_retry_after+0x5f>
    7248:	e8 13 b8 ff ff       	call   2a60 <__stack_chk_fail>
    724d:	48 83 c4 10          	add    $0x10,%rsp
    7251:	31 c0                	xor    %eax,%eax
    7253:	5b                   	pop    %rbx
    7254:	c3                   	ret    

0000000000007255 <http_parse_content_encoding>:
    7255:	f3 0f 1e fa          	endbr64 
    7259:	41 55                	push   %r13
    725b:	4c 8d 2d ce 17 02 00 	lea    0x217ce(%rip),%r13        # 28a30 <http_request_accept_encoding>
    7262:	41 54                	push   %r12
    7264:	49 89 f4             	mov    %rsi,%r12
    7267:	55                   	push   %rbp
    7268:	48 89 fd             	mov    %rdi,%rbp
    726b:	53                   	push   %rbx
    726c:	48 8d 1d bd 17 02 00 	lea    0x217bd(%rip),%rbx        # 28a30 <http_request_accept_encoding>
    7273:	51                   	push   %rcx
    7274:	4c 39 eb             	cmp    %r13,%rbx
    7277:	73 30                	jae    72a9 <http_parse_content_encoding+0x54>
    7279:	48 8b 43 08          	mov    0x8(%rbx),%rax
    727d:	48 85 c0             	test   %rax,%rax
    7280:	75 18                	jne    729a <http_parse_content_encoding+0x45>
    7282:	48 8b 33             	mov    (%rbx),%rsi
    7285:	4c 89 e7             	mov    %r12,%rdi
    7288:	e8 60 c6 00 00       	call   138ed <strcasecmp>
    728d:	85 c0                	test   %eax,%eax
    728f:	75 12                	jne    72a3 <http_parse_content_encoding+0x4e>
    7291:	48 89 9d e0 01 00 00 	mov    %rbx,0x1e0(%rbp)
    7298:	eb 0f                	jmp    72a9 <http_parse_content_encoding+0x54>
    729a:	48 89 ef             	mov    %rbp,%rdi
    729d:	ff d0                	call   *%rax
    729f:	85 c0                	test   %eax,%eax
    72a1:	75 df                	jne    7282 <http_parse_content_encoding+0x2d>
    72a3:	48 83 c3 18          	add    $0x18,%rbx
    72a7:	eb cb                	jmp    7274 <http_parse_content_encoding+0x1f>
    72a9:	5a                   	pop    %rdx
    72aa:	31 c0                	xor    %eax,%eax
    72ac:	5b                   	pop    %rbx
    72ad:	5d                   	pop    %rbp
    72ae:	41 5c                	pop    %r12
    72b0:	41 5d                	pop    %r13
    72b2:	c3                   	ret    

00000000000072b3 <http_conn_close>:
    72b3:	f3 0f 1e fa          	endbr64 
    72b7:	55                   	push   %rbp
    72b8:	48 89 fd             	mov    %rdi,%rbp
    72bb:	48 8d 7f 70          	lea    0x70(%rdi),%rdi
    72bf:	48 83 ec 10          	sub    $0x10,%rsp
    72c3:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    72c7:	e8 7c 25 00 00       	call   9848 <intf_restart>
    72cc:	48 8b 85 38 02 00 00 	mov    0x238(%rbp),%rax
    72d3:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    72d7:	48 89 ef             	mov    %rbp,%rdi
    72da:	48 8b 40 10          	mov    0x10(%rax),%rax
    72de:	48 83 c4 10          	add    $0x10,%rsp
    72e2:	5d                   	pop    %rbp
    72e3:	ff e0                	jmp    *%rax

00000000000072e5 <http_format_headers>:
    72e5:	41 57                	push   %r15
    72e7:	41 56                	push   %r14
    72e9:	4c 8d 35 ac b6 01 00 	lea    0x1b6ac(%rip),%r14        # 2299c <.LC1>
    72f0:	41 55                	push   %r13
    72f2:	49 89 fd             	mov    %rdi,%r13
    72f5:	41 54                	push   %r12
    72f7:	4c 8d 25 32 17 02 00 	lea    0x21732(%rip),%r12        # 28a30 <http_request_accept_encoding>
    72fe:	55                   	push   %rbp
    72ff:	48 89 f5             	mov    %rsi,%rbp
    7302:	53                   	push   %rbx
    7303:	48 89 d3             	mov    %rdx,%rbx
    7306:	48 8d 15 80 b6 01 00 	lea    0x1b680(%rip),%rdx        # 2298d <.LC0>
    730d:	51                   	push   %rcx
    730e:	48 8b 87 08 01 00 00 	mov    0x108(%rdi),%rax
    7315:	48 89 de             	mov    %rbx,%rsi
    7318:	4c 8b 87 10 01 00 00 	mov    0x110(%rdi),%r8
    731f:	48 89 ef             	mov    %rbp,%rdi
    7322:	48 8b 08             	mov    (%rax),%rcx
    7325:	31 c0                	xor    %eax,%eax
    7327:	e8 c7 fd 00 00       	call   170f3 <ssnprintf>
    732c:	48 89 de             	mov    %rbx,%rsi
    732f:	4c 89 f2             	mov    %r14,%rdx
    7332:	4c 63 f8             	movslq %eax,%r15
    7335:	31 c0                	xor    %eax,%eax
    7337:	4c 29 fe             	sub    %r15,%rsi
    733a:	4a 8d 7c 3d 00       	lea    0x0(%rbp,%r15,1),%rdi
    733f:	e8 af fd 00 00       	call   170f3 <ssnprintf>
    7344:	4c 63 c0             	movslq %eax,%r8
    7347:	4d 01 c7             	add    %r8,%r15
    734a:	48 8d 05 5f 17 02 00 	lea    0x2175f(%rip),%rax        # 28ab0 <http_response_retry_after>
    7351:	49 39 c4             	cmp    %rax,%r12
    7354:	73 7c                	jae    73d2 <http_format_headers+0xed>
    7356:	31 d2                	xor    %edx,%edx
    7358:	31 f6                	xor    %esi,%esi
    735a:	4c 89 ef             	mov    %r13,%rdi
    735d:	41 ff 54 24 08       	call   *0x8(%r12)
    7362:	85 c0                	test   %eax,%eax
    7364:	0f 88 80 00 00 00    	js     73ea <http_format_headers+0x105>
    736a:	74 5d                	je     73c9 <http_format_headers+0xe4>
    736c:	49 8b 0c 24          	mov    (%r12),%rcx
    7370:	48 89 de             	mov    %rbx,%rsi
    7373:	4a 8d 7c 3d 00       	lea    0x0(%rbp,%r15,1),%rdi
    7378:	31 c0                	xor    %eax,%eax
    737a:	4c 29 fe             	sub    %r15,%rsi
    737d:	48 8d 15 1b b6 01 00 	lea    0x1b61b(%rip),%rdx        # 2299f <.LC2>
    7384:	e8 6a fd 00 00       	call   170f3 <ssnprintf>
    7389:	31 d2                	xor    %edx,%edx
    738b:	48 63 c8             	movslq %eax,%rcx
    738e:	49 01 cf             	add    %rcx,%r15
    7391:	4c 39 fb             	cmp    %r15,%rbx
    7394:	76 06                	jbe    739c <http_format_headers+0xb7>
    7396:	48 89 da             	mov    %rbx,%rdx
    7399:	4c 29 fa             	sub    %r15,%rdx
    739c:	4a 8d 74 3d 00       	lea    0x0(%rbp,%r15,1),%rsi
    73a1:	4c 89 ef             	mov    %r13,%rdi
    73a4:	41 ff 54 24 08       	call   *0x8(%r12)
    73a9:	48 89 de             	mov    %rbx,%rsi
    73ac:	4c 89 f2             	mov    %r14,%rdx
    73af:	48 98                	cltq   
    73b1:	49 01 c7             	add    %rax,%r15
    73b4:	31 c0                	xor    %eax,%eax
    73b6:	4c 29 fe             	sub    %r15,%rsi
    73b9:	4a 8d 7c 3d 00       	lea    0x0(%rbp,%r15,1),%rdi
    73be:	e8 30 fd 00 00       	call   170f3 <ssnprintf>
    73c3:	4c 63 c0             	movslq %eax,%r8
    73c6:	4d 01 c7             	add    %r8,%r15
    73c9:	49 83 c4 10          	add    $0x10,%r12
    73cd:	e9 78 ff ff ff       	jmp    734a <http_format_headers+0x65>
    73d2:	4c 29 fb             	sub    %r15,%rbx
    73d5:	4a 8d 7c 3d 00       	lea    0x0(%rbp,%r15,1),%rdi
    73da:	4c 89 f2             	mov    %r14,%rdx
    73dd:	31 c0                	xor    %eax,%eax
    73df:	48 89 de             	mov    %rbx,%rsi
    73e2:	e8 0c fd 00 00       	call   170f3 <ssnprintf>
    73e7:	44 01 f8             	add    %r15d,%eax
    73ea:	5a                   	pop    %rdx
    73eb:	5b                   	pop    %rbx
    73ec:	5d                   	pop    %rbp
    73ed:	41 5c                	pop    %r12
    73ef:	41 5d                	pop    %r13
    73f1:	41 5e                	pop    %r14
    73f3:	41 5f                	pop    %r15
    73f5:	c3                   	ret    

00000000000073f6 <http_format_accept_encoding>:
    73f6:	f3 0f 1e fa          	endbr64 
    73fa:	41 57                	push   %r15
    73fc:	48 8d 0d d1 cf 01 00 	lea    0x1cfd1(%rip),%rcx        # 243d4 <.LC0>
    7403:	4c 8d 3d 26 16 02 00 	lea    0x21626(%rip),%r15        # 28a30 <http_request_accept_encoding>
    740a:	41 56                	push   %r14
    740c:	49 89 d6             	mov    %rdx,%r14
    740f:	41 55                	push   %r13
    7411:	49 89 f5             	mov    %rsi,%r13
    7414:	41 54                	push   %r12
    7416:	49 89 fc             	mov    %rdi,%r12
    7419:	55                   	push   %rbp
    741a:	48 8d 2d 0f 16 02 00 	lea    0x2160f(%rip),%rbp        # 28a30 <http_request_accept_encoding>
    7421:	53                   	push   %rbx
    7422:	31 db                	xor    %ebx,%ebx
    7424:	48 83 ec 18          	sub    $0x18,%rsp
    7428:	4c 39 fd             	cmp    %r15,%rbp
    742b:	73 4d                	jae    747a <http_format_accept_encoding+0x84>
    742d:	48 8b 45 08          	mov    0x8(%rbp),%rax
    7431:	48 85 c0             	test   %rax,%rax
    7434:	75 2b                	jne    7461 <http_format_accept_encoding+0x6b>
    7436:	4c 8b 45 00          	mov    0x0(%rbp),%r8
    743a:	4c 89 f6             	mov    %r14,%rsi
    743d:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
    7442:	31 c0                	xor    %eax,%eax
    7444:	48 29 de             	sub    %rbx,%rsi
    7447:	48 8d 15 78 b3 01 00 	lea    0x1b378(%rip),%rdx        # 227c6 <.LC4>
    744e:	e8 a0 fc 00 00       	call   170f3 <ssnprintf>
    7453:	48 8d 0d 4a b5 01 00 	lea    0x1b54a(%rip),%rcx        # 229a4 <.LC3>
    745a:	48 98                	cltq   
    745c:	48 01 c3             	add    %rax,%rbx
    745f:	eb 13                	jmp    7474 <http_format_accept_encoding+0x7e>
    7461:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    7466:	4c 89 e7             	mov    %r12,%rdi
    7469:	ff d0                	call   *%rax
    746b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    7470:	85 c0                	test   %eax,%eax
    7472:	75 c2                	jne    7436 <http_format_accept_encoding+0x40>
    7474:	48 83 c5 18          	add    $0x18,%rbp
    7478:	eb ae                	jmp    7428 <http_format_accept_encoding+0x32>
    747a:	48 83 c4 18          	add    $0x18,%rsp
    747e:	89 d8                	mov    %ebx,%eax
    7480:	5b                   	pop    %rbx
    7481:	5d                   	pop    %rbp
    7482:	41 5c                	pop    %r12
    7484:	41 5d                	pop    %r13
    7486:	41 5e                	pop    %r14
    7488:	41 5f                	pop    %r15
    748a:	c3                   	ret    

000000000000748b <http_content_buffer>:
    748b:	f3 0f 1e fa          	endbr64 
    748f:	83 bf c4 01 00 00 00 	cmpl   $0x0,0x1c4(%rdi)
    7496:	75 09                	jne    74a1 <http_content_buffer+0x16>
    7498:	48 83 c7 10          	add    $0x10,%rdi
    749c:	e9 c2 03 01 00       	jmp    17863 <xfer_buffer>
    74a1:	31 c0                	xor    %eax,%eax
    74a3:	c3                   	ret    

00000000000074a4 <http_free>:
    74a4:	f3 0f 1e fa          	endbr64 
    74a8:	55                   	push   %rbp
    74a9:	48 89 fd             	mov    %rdi,%rbp
    74ac:	48 8d bf a8 01 00 00 	lea    0x1a8(%rdi),%rdi
    74b3:	e8 15 4b 00 00       	call   bfcd <empty_line_buffer>
    74b8:	48 8d bd 20 02 00 00 	lea    0x220(%rbp),%rdi
    74bf:	e8 09 4b 00 00       	call   bfcd <empty_line_buffer>
    74c4:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
    74cb:	e8 6e 89 00 00       	call   fe3e <ref_decrement>
    74d0:	48 89 ef             	mov    %rbp,%rdi
    74d3:	5d                   	pop    %rbp
    74d4:	e9 76 51 00 00       	jmp    c64f <free>

00000000000074d9 <http_tx_request>:
    74d9:	f3 0f 1e fa          	endbr64 
    74dd:	41 55                	push   %r13
    74df:	31 d2                	xor    %edx,%edx
    74e1:	31 f6                	xor    %esi,%esi
    74e3:	41 54                	push   %r12
    74e5:	55                   	push   %rbp
    74e6:	53                   	push   %rbx
    74e7:	48 89 fb             	mov    %rdi,%rbx
    74ea:	51                   	push   %rcx
    74eb:	e8 f5 fd ff ff       	call   72e5 <http_format_headers>
    74f0:	4c 63 e0             	movslq %eax,%r12
    74f3:	45 85 e4             	test   %r12d,%r12d
    74f6:	0f 88 a2 00 00 00    	js     759e <http_tx_request+0xc5>
    74fc:	48 8b bb 40 01 00 00 	mov    0x140(%rbx),%rdi
    7503:	45 8d 6c 24 01       	lea    0x1(%r12),%r13d
    7508:	4d 63 ed             	movslq %r13d,%r13
    750b:	4c 01 ef             	add    %r13,%rdi
    750e:	e8 69 27 00 00       	call   9c7c <alloc_iob>
    7513:	48 89 c5             	mov    %rax,%rbp
    7516:	48 85 c0             	test   %rax,%rax
    7519:	75 08                	jne    7523 <http_tx_request+0x4a>
    751b:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    7521:	eb 7b                	jmp    759e <http_tx_request+0xc5>
    7523:	48 8b 70 20          	mov    0x20(%rax),%rsi
    7527:	4c 89 ea             	mov    %r13,%rdx
    752a:	48 89 df             	mov    %rbx,%rdi
    752d:	49 01 f4             	add    %rsi,%r12
    7530:	4c 89 60 20          	mov    %r12,0x20(%rax)
    7534:	e8 ac fd ff ff       	call   72e5 <http_format_headers>
    7539:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    753d:	48 8b 93 40 01 00 00 	mov    0x140(%rbx),%rdx
    7544:	48 8b b3 38 01 00 00 	mov    0x138(%rbx),%rsi
    754b:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    754f:	48 89 45 20          	mov    %rax,0x20(%rbp)
    7553:	e8 b5 fd 00 00       	call   1730d <__memcpy>
    7558:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    755c:	48 89 ee             	mov    %rbp,%rsi
    755f:	e8 a2 01 01 00       	call   17706 <xfer_deliver_iob>
    7564:	41 89 c4             	mov    %eax,%r12d
    7567:	85 c0                	test   %eax,%eax
    7569:	74 09                	je     7574 <http_tx_request+0x9b>
    756b:	31 ff                	xor    %edi,%edi
    756d:	e8 24 27 00 00       	call   9c96 <free_iob>
    7572:	eb 2a                	jmp    759e <http_tx_request+0xc5>
    7574:	48 8d ab a8 01 00 00 	lea    0x1a8(%rbx),%rbp
    757b:	48 89 ef             	mov    %rbp,%rdi
    757e:	e8 4a 4a 00 00       	call   bfcd <empty_line_buffer>
    7583:	48 89 ef             	mov    %rbp,%rdi
    7586:	b9 78 00 00 00       	mov    $0x78,%ecx
    758b:	44 89 e0             	mov    %r12d,%eax
    758e:	f3 aa                	rep stos %al,%es:(%rdi)
    7590:	48 8d 05 f9 dc 01 00 	lea    0x1dcf9(%rip),%rax        # 25290 <http_headers>
    7597:	48 89 83 38 02 00 00 	mov    %rax,0x238(%rbx)
    759e:	5a                   	pop    %rdx
    759f:	44 89 e0             	mov    %r12d,%eax
    75a2:	5b                   	pop    %rbx
    75a3:	5d                   	pop    %rbp
    75a4:	41 5c                	pop    %r12
    75a6:	41 5d                	pop    %r13
    75a8:	c3                   	ret    

00000000000075a9 <http_close>:
    75a9:	f3 0f 1e fa          	endbr64 
    75ad:	55                   	push   %rbp
    75ae:	89 f5                	mov    %esi,%ebp
    75b0:	53                   	push   %rbx
    75b1:	48 89 fb             	mov    %rdi,%rbx
    75b4:	48 8d bf 90 00 00 00 	lea    0x90(%rdi),%rdi
    75bb:	50                   	push   %rax
    75bc:	e8 c3 83 00 00       	call   f984 <process_del>
    75c1:	48 8d bb b0 00 00 00 	lea    0xb0(%rbx),%rdi
    75c8:	e8 03 8d 00 00       	call   102d0 <stop_timer>
    75cd:	41 5a                	pop    %r10
    75cf:	48 8d 4b 30          	lea    0x30(%rbx),%rcx
    75d3:	48 8d 53 50          	lea    0x50(%rbx),%rdx
    75d7:	48 8d 73 70          	lea    0x70(%rbx),%rsi
    75db:	4c 8d 43 10          	lea    0x10(%rbx),%r8
    75df:	89 ef                	mov    %ebp,%edi
    75e1:	5b                   	pop    %rbx
    75e2:	45 31 c9             	xor    %r9d,%r9d
    75e5:	31 c0                	xor    %eax,%eax
    75e7:	5d                   	pop    %rbp
    75e8:	e9 f3 23 00 00       	jmp    99e0 <intfs_shutdown>

00000000000075ed <http_close_error>:
    75ed:	f3 0f 1e fa          	endbr64 
    75f1:	85 f6                	test   %esi,%esi
    75f3:	75 05                	jne    75fa <http_close_error+0xd>
    75f5:	be 6b 9f f3 bd       	mov    $0xbdf39f6b,%esi
    75fa:	e9 aa ff ff ff       	jmp    75a9 <http_close>

00000000000075ff <http_reopen>:
    75ff:	f3 0f 1e fa          	endbr64 
    7603:	41 54                	push   %r12
    7605:	55                   	push   %rbp
    7606:	48 89 fd             	mov    %rdi,%rbp
    7609:	51                   	push   %rcx
    760a:	4c 8d 67 70          	lea    0x70(%rdi),%r12
    760e:	be 6b 9f f3 f4       	mov    $0xf4f39f6b,%esi
    7613:	4c 89 e7             	mov    %r12,%rdi
    7616:	e8 2d 22 00 00       	call   9848 <intf_restart>
    761b:	48 8b b5 00 01 00 00 	mov    0x100(%rbp),%rsi
    7622:	4c 89 e7             	mov    %r12,%rdi
    7625:	e8 ce 6f 01 00       	call   1e5f8 <http_connect>
    762a:	85 c0                	test   %eax,%eax
    762c:	74 0e                	je     763c <http_reopen+0x3d>
    762e:	5a                   	pop    %rdx
    762f:	48 89 ef             	mov    %rbp,%rdi
    7632:	89 c6                	mov    %eax,%esi
    7634:	5d                   	pop    %rbp
    7635:	41 5c                	pop    %r12
    7637:	e9 6d ff ff ff       	jmp    75a9 <http_close>
    763c:	48 8d 05 6d dc 01 00 	lea    0x1dc6d(%rip),%rax        # 252b0 <http_request>
    7643:	48 8d bd 90 00 00 00 	lea    0x90(%rbp),%rdi
    764a:	48 89 85 38 02 00 00 	mov    %rax,0x238(%rbp)
    7651:	58                   	pop    %rax
    7652:	5d                   	pop    %rbp
    7653:	41 5c                	pop    %r12
    7655:	e9 d7 82 00 00       	jmp    f931 <process_add>

000000000000765a <http_expired>:
    765a:	f3 0f 1e fa          	endbr64 
    765e:	48 81 ef b0 00 00 00 	sub    $0xb0,%rdi
    7665:	e9 95 ff ff ff       	jmp    75ff <http_reopen>

000000000000766a <http_conn_deliver>:
    766a:	f3 0f 1e fa          	endbr64 
    766e:	41 54                	push   %r12
    7670:	55                   	push   %rbp
    7671:	48 89 fd             	mov    %rdi,%rbp
    7674:	53                   	push   %rbx
    7675:	48 83 ec 10          	sub    $0x10,%rsp
    7679:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    767e:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
    7683:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7688:	48 85 ff             	test   %rdi,%rdi
    768b:	74 38                	je     76c5 <http_conn_deliver+0x5b>
    768d:	48 8b 47 20          	mov    0x20(%rdi),%rax
    7691:	48 39 47 18          	cmp    %rax,0x18(%rdi)
    7695:	74 2e                	je     76c5 <http_conn_deliver+0x5b>
    7697:	48 8b 85 38 02 00 00 	mov    0x238(%rbp),%rax
    769e:	48 85 c0             	test   %rax,%rax
    76a1:	74 09                	je     76ac <http_conn_deliver+0x42>
    76a3:	48 8b 40 08          	mov    0x8(%rax),%rax
    76a7:	48 85 c0             	test   %rax,%rax
    76aa:	75 08                	jne    76b4 <http_conn_deliver+0x4a>
    76ac:	41 bc 68 9e f3 bc    	mov    $0xbcf39e68,%r12d
    76b2:	eb 1b                	jmp    76cf <http_conn_deliver+0x65>
    76b4:	48 89 de             	mov    %rbx,%rsi
    76b7:	48 89 ef             	mov    %rbp,%rdi
    76ba:	ff d0                	call   *%rax
    76bc:	41 89 c4             	mov    %eax,%r12d
    76bf:	85 c0                	test   %eax,%eax
    76c1:	74 c0                	je     7683 <http_conn_deliver+0x19>
    76c3:	eb 0a                	jmp    76cf <http_conn_deliver+0x65>
    76c5:	e8 cc 25 00 00       	call   9c96 <free_iob>
    76ca:	45 31 e4             	xor    %r12d,%r12d
    76cd:	eb 15                	jmp    76e4 <http_conn_deliver+0x7a>
    76cf:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    76d4:	e8 bd 25 00 00       	call   9c96 <free_iob>
    76d9:	44 89 e6             	mov    %r12d,%esi
    76dc:	48 89 ef             	mov    %rbp,%rdi
    76df:	e8 c5 fe ff ff       	call   75a9 <http_close>
    76e4:	48 83 c4 10          	add    $0x10,%rsp
    76e8:	44 89 e0             	mov    %r12d,%eax
    76eb:	5b                   	pop    %rbx
    76ec:	5d                   	pop    %rbp
    76ed:	41 5c                	pop    %r12
    76ef:	c3                   	ret    

00000000000076f0 <http_format_host>:
    76f0:	f3 0f 1e fa          	endbr64 
    76f4:	49 89 f8             	mov    %rdi,%r8
    76f7:	31 c0                	xor    %eax,%eax
    76f9:	48 89 f7             	mov    %rsi,%rdi
    76fc:	48 89 d6             	mov    %rdx,%rsi
    76ff:	49 8b 88 18 01 00 00 	mov    0x118(%r8),%rcx
    7706:	48 8d 15 14 bf 01 00 	lea    0x1bf14(%rip),%rdx        # 23621 <.LC0>
    770d:	e9 6f f9 00 00       	jmp    17081 <snprintf>

0000000000007712 <http_format_user_agent>:
    7712:	f3 0f 1e fa          	endbr64 
    7716:	48 89 f7             	mov    %rsi,%rdi
    7719:	48 8d 0d 00 ac 01 00 	lea    0x1ac00(%rip),%rcx        # 22320 <product_version>
    7720:	48 89 d6             	mov    %rdx,%rsi
    7723:	31 c0                	xor    %eax,%eax
    7725:	48 8d 15 7b b2 01 00 	lea    0x1b27b(%rip),%rdx        # 229a7 <.LC7>
    772c:	e9 50 f9 00 00       	jmp    17081 <snprintf>

0000000000007731 <http_format_connection>:
    7731:	f3 0f 1e fa          	endbr64 
    7735:	48 89 f7             	mov    %rsi,%rdi
    7738:	31 c0                	xor    %eax,%eax
    773a:	48 89 d6             	mov    %rdx,%rsi
    773d:	48 8d 15 6b b2 01 00 	lea    0x1b26b(%rip),%rdx        # 229af <.LC8>
    7744:	e9 38 f9 00 00       	jmp    17081 <snprintf>

0000000000007749 <http_format_range>:
    7749:	f3 0f 1e fa          	endbr64 
    774d:	48 89 f8             	mov    %rdi,%rax
    7750:	48 89 f7             	mov    %rsi,%rdi
    7753:	48 89 d6             	mov    %rdx,%rsi
    7756:	48 8b 90 28 01 00 00 	mov    0x128(%rax),%rdx
    775d:	48 85 d2             	test   %rdx,%rdx
    7760:	74 1a                	je     777c <http_format_range+0x33>
    7762:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
    7769:	31 c0                	xor    %eax,%eax
    776b:	4c 8d 44 0a ff       	lea    -0x1(%rdx,%rcx,1),%r8
    7770:	48 8d 15 43 b2 01 00 	lea    0x1b243(%rip),%rdx        # 229ba <.LC9>
    7777:	e9 05 f9 00 00       	jmp    17081 <snprintf>
    777c:	31 c0                	xor    %eax,%eax
    777e:	c3                   	ret    

000000000000777f <http_format_content_type>:
    777f:	f3 0f 1e fa          	endbr64 
    7783:	49 89 f8             	mov    %rdi,%r8
    7786:	48 89 f7             	mov    %rsi,%rdi
    7789:	48 89 d6             	mov    %rdx,%rsi
    778c:	49 8b 88 30 01 00 00 	mov    0x130(%r8),%rcx
    7793:	48 85 c9             	test   %rcx,%rcx
    7796:	74 0e                	je     77a6 <http_format_content_type+0x27>
    7798:	48 8d 15 82 be 01 00 	lea    0x1be82(%rip),%rdx        # 23621 <.LC0>
    779f:	31 c0                	xor    %eax,%eax
    77a1:	e9 db f8 00 00       	jmp    17081 <snprintf>
    77a6:	31 c0                	xor    %eax,%eax
    77a8:	c3                   	ret    

00000000000077a9 <http_format_content_length>:
    77a9:	f3 0f 1e fa          	endbr64 
    77ad:	49 89 f8             	mov    %rdi,%r8
    77b0:	48 89 f7             	mov    %rsi,%rdi
    77b3:	48 89 d6             	mov    %rdx,%rsi
    77b6:	49 8b 88 40 01 00 00 	mov    0x140(%r8),%rcx
    77bd:	48 85 c9             	test   %rcx,%rcx
    77c0:	74 0e                	je     77d0 <http_format_content_length+0x27>
    77c2:	48 8d 15 fb b1 01 00 	lea    0x1b1fb(%rip),%rdx        # 229c4 <.LC10>
    77c9:	31 c0                	xor    %eax,%eax
    77cb:	e9 b1 f8 00 00       	jmp    17081 <snprintf>
    77d0:	31 c0                	xor    %eax,%eax
    77d2:	c3                   	ret    

00000000000077d3 <http_params>:
    77d3:	41 56                	push   %r14
    77d5:	41 55                	push   %r13
    77d7:	45 31 ed             	xor    %r13d,%r13d
    77da:	41 54                	push   %r12
    77dc:	4c 8d 67 28          	lea    0x28(%rdi),%r12
    77e0:	55                   	push   %rbp
    77e1:	48 89 d5             	mov    %rdx,%rbp
    77e4:	53                   	push   %rbx
    77e5:	4c 8b 77 28          	mov    0x28(%rdi),%r14
    77e9:	48 89 f3             	mov    %rsi,%rbx
    77ec:	4d 39 e6             	cmp    %r12,%r14
    77ef:	74 60                	je     7851 <http_params+0x7e>
    77f1:	4d 85 ed             	test   %r13,%r13
    77f4:	74 11                	je     7807 <http_params+0x34>
    77f6:	48 85 ed             	test   %rbp,%rbp
    77f9:	7e 03                	jle    77fe <http_params+0x2b>
    77fb:	c6 03 26             	movb   $0x26,(%rbx)
    77fe:	48 ff c3             	inc    %rbx
    7801:	49 ff c5             	inc    %r13
    7804:	48 ff cd             	dec    %rbp
    7807:	49 8b 76 10          	mov    0x10(%r14),%rsi
    780b:	48 89 e9             	mov    %rbp,%rcx
    780e:	48 89 da             	mov    %rbx,%rdx
    7811:	31 ff                	xor    %edi,%edi
    7813:	e8 f9 eb 00 00       	call   16411 <uri_encode_string>
    7818:	48 29 c5             	sub    %rax,%rbp
    781b:	48 01 c3             	add    %rax,%rbx
    781e:	49 01 c5             	add    %rax,%r13
    7821:	48 85 ed             	test   %rbp,%rbp
    7824:	7e 03                	jle    7829 <http_params+0x56>
    7826:	c6 03 3d             	movb   $0x3d,(%rbx)
    7829:	49 8b 76 18          	mov    0x18(%r14),%rsi
    782d:	48 ff c3             	inc    %rbx
    7830:	48 ff cd             	dec    %rbp
    7833:	31 ff                	xor    %edi,%edi
    7835:	48 89 e9             	mov    %rbp,%rcx
    7838:	48 89 da             	mov    %rbx,%rdx
    783b:	49 ff c5             	inc    %r13
    783e:	e8 ce eb 00 00       	call   16411 <uri_encode_string>
    7843:	4d 8b 36             	mov    (%r14),%r14
    7846:	48 01 c3             	add    %rax,%rbx
    7849:	49 01 c5             	add    %rax,%r13
    784c:	48 29 c5             	sub    %rax,%rbp
    784f:	eb 9b                	jmp    77ec <http_params+0x19>
    7851:	48 85 ed             	test   %rbp,%rbp
    7854:	7e 03                	jle    7859 <http_params+0x86>
    7856:	c6 03 00             	movb   $0x0,(%rbx)
    7859:	5b                   	pop    %rbx
    785a:	4c 89 e8             	mov    %r13,%rax
    785d:	5d                   	pop    %rbp
    785e:	41 5c                	pop    %r12
    7860:	41 5d                	pop    %r13
    7862:	41 5e                	pop    %r14
    7864:	c3                   	ret    

0000000000007865 <http_parse_content_length>:
    7865:	f3 0f 1e fa          	endbr64 
    7869:	53                   	push   %rbx
    786a:	ba 0a 00 00 00       	mov    $0xa,%edx
    786f:	48 89 fb             	mov    %rdi,%rbx
    7872:	48 89 f7             	mov    %rsi,%rdi
    7875:	48 83 ec 10          	sub    $0x10,%rsp
    7879:	48 8b 05 f0 26 02 00 	mov    0x226f0(%rip),%rax        # 29f70 <__stack_chk_guard>
    7880:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7885:	31 c0                	xor    %eax,%eax
    7887:	48 89 e6             	mov    %rsp,%rsi
    788a:	e8 ec c1 00 00       	call   13a7b <strtoul>
    788f:	48 89 83 d8 01 00 00 	mov    %rax,0x1d8(%rbx)
    7896:	48 8b 04 24          	mov    (%rsp),%rax
    789a:	80 38 00             	cmpb   $0x0,(%rax)
    789d:	74 07                	je     78a6 <http_parse_content_length+0x41>
    789f:	b8 7e 9c f3 e3       	mov    $0xe3f39c7e,%eax
    78a4:	eb 09                	jmp    78af <http_parse_content_length+0x4a>
    78a6:	83 8b 1c 02 00 00 02 	orl    $0x2,0x21c(%rbx)
    78ad:	31 c0                	xor    %eax,%eax
    78af:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    78b4:	48 2b 15 b5 26 02 00 	sub    0x226b5(%rip),%rdx        # 29f70 <__stack_chk_guard>
    78bb:	74 05                	je     78c2 <http_parse_content_length+0x5d>
    78bd:	e8 9e b1 ff ff       	call   2a60 <__stack_chk_fail>
    78c2:	48 83 c4 10          	add    $0x10,%rsp
    78c6:	5b                   	pop    %rbx
    78c7:	c3                   	ret    

00000000000078c8 <http_parse_transfer_encoding>:
    78c8:	f3 0f 1e fa          	endbr64 
    78cc:	41 55                	push   %r13
    78ce:	4c 8d 2d 8b 12 02 00 	lea    0x2128b(%rip),%r13        # 28b60 <icmpv4_echo_protocol>
    78d5:	41 54                	push   %r12
    78d7:	49 89 f4             	mov    %rsi,%r12
    78da:	55                   	push   %rbp
    78db:	48 89 fd             	mov    %rdi,%rbp
    78de:	53                   	push   %rbx
    78df:	48 8d 1d 52 12 02 00 	lea    0x21252(%rip),%rbx        # 28b38 <http_transfer_chunked>
    78e6:	51                   	push   %rcx
    78e7:	4c 39 eb             	cmp    %r13,%rbx
    78ea:	73 1e                	jae    790a <http_parse_transfer_encoding+0x42>
    78ec:	48 8b 33             	mov    (%rbx),%rsi
    78ef:	4c 89 e7             	mov    %r12,%rdi
    78f2:	e8 f6 bf 00 00       	call   138ed <strcasecmp>
    78f7:	85 c0                	test   %eax,%eax
    78f9:	75 09                	jne    7904 <http_parse_transfer_encoding+0x3c>
    78fb:	48 89 9d d0 01 00 00 	mov    %rbx,0x1d0(%rbp)
    7902:	eb 0b                	jmp    790f <http_parse_transfer_encoding+0x47>
    7904:	48 83 c3 28          	add    $0x28,%rbx
    7908:	eb dd                	jmp    78e7 <http_parse_transfer_encoding+0x1f>
    790a:	b8 7d 9d f3 c3       	mov    $0xc3f39d7d,%eax
    790f:	5a                   	pop    %rdx
    7910:	5b                   	pop    %rbx
    7911:	5d                   	pop    %rbp
    7912:	41 5c                	pop    %r12
    7914:	41 5d                	pop    %r13
    7916:	c3                   	ret    

0000000000007917 <http_content_deliver>:
    7917:	f3 0f 1e fa          	endbr64 
    791b:	83 bf c4 01 00 00 00 	cmpl   $0x0,0x1c4(%rdi)
    7922:	75 09                	jne    792d <http_content_deliver+0x16>
    7924:	48 83 c7 10          	add    $0x10,%rdi
    7928:	e9 ec fc 00 00       	jmp    17619 <xfer_deliver>
    792d:	50                   	push   %rax
    792e:	48 89 f7             	mov    %rsi,%rdi
    7931:	e8 60 23 00 00       	call   9c96 <free_iob>
    7936:	31 c0                	xor    %eax,%eax
    7938:	5a                   	pop    %rdx
    7939:	c3                   	ret    

000000000000793a <http_step>:
    793a:	f3 0f 1e fa          	endbr64 
    793e:	48 8b 87 38 02 00 00 	mov    0x238(%rdi),%rax
    7945:	48 83 38 00          	cmpq   $0x0,(%rax)
    7949:	74 51                	je     799c <http_step+0x62>
    794b:	41 54                	push   %r12
    794d:	55                   	push   %rbp
    794e:	48 89 fd             	mov    %rdi,%rbp
    7951:	48 8d 7f 70          	lea    0x70(%rdi),%rdi
    7955:	51                   	push   %rcx
    7956:	e8 dd fa 00 00       	call   17438 <xfer_window>
    795b:	48 85 c0             	test   %rax,%rax
    795e:	74 37                	je     7997 <http_step+0x5d>
    7960:	4c 8d 65 10          	lea    0x10(%rbp),%r12
    7964:	4c 89 e7             	mov    %r12,%rdi
    7967:	e8 38 fb 00 00       	call   174a4 <xfer_window_changed>
    796c:	4c 89 e7             	mov    %r12,%rdi
    796f:	e8 c4 fa 00 00       	call   17438 <xfer_window>
    7974:	48 85 c0             	test   %rax,%rax
    7977:	74 1e                	je     7997 <http_step+0x5d>
    7979:	48 8b 85 38 02 00 00 	mov    0x238(%rbp),%rax
    7980:	48 89 ef             	mov    %rbp,%rdi
    7983:	ff 10                	call   *(%rax)
    7985:	89 c6                	mov    %eax,%esi
    7987:	85 c0                	test   %eax,%eax
    7989:	74 0c                	je     7997 <http_step+0x5d>
    798b:	5a                   	pop    %rdx
    798c:	48 89 ef             	mov    %rbp,%rdi
    798f:	5d                   	pop    %rbp
    7990:	41 5c                	pop    %r12
    7992:	e9 12 fc ff ff       	jmp    75a9 <http_close>
    7997:	58                   	pop    %rax
    7998:	5d                   	pop    %rbp
    7999:	41 5c                	pop    %r12
    799b:	c3                   	ret    
    799c:	c3                   	ret    

000000000000799d <http_transfer_complete>:
    799d:	41 56                	push   %r14
    799f:	41 55                	push   %r13
    79a1:	41 54                	push   %r12
    79a3:	4c 8d 67 70          	lea    0x70(%rdi),%r12
    79a7:	55                   	push   %rbp
    79a8:	48 89 fd             	mov    %rdi,%rbp
    79ab:	51                   	push   %rcx
    79ac:	f6 87 1c 02 00 00 01 	testb  $0x1,0x21c(%rdi)
    79b3:	74 08                	je     79bd <http_transfer_complete+0x20>
    79b5:	4c 89 e7             	mov    %r12,%rdi
    79b8:	e8 fb 7d 00 00       	call   f7b8 <pool_recycle>
    79bd:	4c 89 e7             	mov    %r12,%rdi
    79c0:	31 f6                	xor    %esi,%esi
    79c2:	e8 81 1e 00 00       	call   9848 <intf_restart>
    79c7:	44 8b a5 c4 01 00 00 	mov    0x1c4(%rbp),%r12d
    79ce:	48 c7 85 38 02 00 00 	movq   $0x0,0x238(%rbp)
    79d5:	00 00 00 00 
    79d9:	45 85 e4             	test   %r12d,%r12d
    79dc:	75 10                	jne    79ee <http_transfer_complete+0x51>
    79de:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    79e2:	31 f6                	xor    %esi,%esi
    79e4:	e8 e6 1e 00 00       	call   98cf <intf_shutdown>
    79e9:	e9 05 01 00 00       	jmp    7af3 <http_transfer_complete+0x156>
    79ee:	48 8b bd c8 01 00 00 	mov    0x1c8(%rbp),%rdi
    79f5:	48 85 ff             	test   %rdi,%rdi
    79f8:	74 75                	je     7a6f <http_transfer_complete+0xd2>
    79fa:	e8 54 ea 00 00       	call   16453 <parse_uri>
    79ff:	49 89 c5             	mov    %rax,%r13
    7a02:	48 85 c0             	test   %rax,%rax
    7a05:	75 0b                	jne    7a12 <http_transfer_complete+0x75>
    7a07:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    7a0d:	e9 e1 00 00 00       	jmp    7af3 <http_transfer_complete+0x156>
    7a12:	48 8b bd 00 01 00 00 	mov    0x100(%rbp),%rdi
    7a19:	48 89 c6             	mov    %rax,%rsi
    7a1c:	e8 15 ef 00 00       	call   16936 <resolve_uri>
    7a21:	49 89 c6             	mov    %rax,%r14
    7a24:	48 85 c0             	test   %rax,%rax
    7a27:	75 08                	jne    7a31 <http_transfer_complete+0x94>
    7a29:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    7a2f:	eb 1e                	jmp    7a4f <http_transfer_complete+0xb2>
    7a31:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    7a35:	48 89 c2             	mov    %rax,%rdx
    7a38:	be 01 00 00 00       	mov    $0x1,%esi
    7a3d:	31 c0                	xor    %eax,%eax
    7a3f:	e8 5d fc 00 00       	call   176a1 <xfer_redirect>
    7a44:	4c 89 f7             	mov    %r14,%rdi
    7a47:	41 89 c4             	mov    %eax,%r12d
    7a4a:	e8 ef 83 00 00       	call   fe3e <ref_decrement>
    7a4f:	4c 89 ef             	mov    %r13,%rdi
    7a52:	e8 e7 83 00 00       	call   fe3e <ref_decrement>
    7a57:	45 85 e4             	test   %r12d,%r12d
    7a5a:	0f 85 93 00 00 00    	jne    7af3 <http_transfer_complete+0x156>
    7a60:	31 f6                	xor    %esi,%esi
    7a62:	48 89 ef             	mov    %rbp,%rdi
    7a65:	e8 3f fb ff ff       	call   75a9 <http_close>
    7a6a:	e9 84 00 00 00       	jmp    7af3 <http_transfer_complete+0x156>
    7a6f:	f6 85 1c 02 00 00 04 	testb  $0x4,0x21c(%rbp)
    7a76:	74 7b                	je     7af3 <http_transfer_complete+0x156>
    7a78:	48 8b 85 e8 01 00 00 	mov    0x1e8(%rbp),%rax
    7a7f:	48 85 c0             	test   %rax,%rax
    7a82:	75 47                	jne    7acb <http_transfer_complete+0x12e>
    7a84:	8b bd c4 01 00 00    	mov    0x1c4(%rbp),%edi
    7a8a:	4c 8d 65 50          	lea    0x50(%rbp),%r12
    7a8e:	4c 8d 6d 30          	lea    0x30(%rbp),%r13
    7a92:	31 c9                	xor    %ecx,%ecx
    7a94:	4c 89 e2             	mov    %r12,%rdx
    7a97:	4c 89 ee             	mov    %r13,%rsi
    7a9a:	31 c0                	xor    %eax,%eax
    7a9c:	e8 32 20 00 00       	call   9ad3 <intfs_restart>
    7aa1:	4c 89 ee             	mov    %r13,%rsi
    7aa4:	4c 89 e7             	mov    %r12,%rdi
    7aa7:	e8 c5 1c 00 00       	call   9771 <intf_plug_plug>
    7aac:	8b b5 18 02 00 00    	mov    0x218(%rbp),%esi
    7ab2:	48 c7 85 40 02 00 00 	movq   $0x0,0x240(%rbp)
    7ab9:	00 00 00 00 
    7abd:	85 f6                	test   %esi,%esi
    7abf:	75 20                	jne    7ae1 <http_transfer_complete+0x144>
    7ac1:	48 89 ef             	mov    %rbp,%rdi
    7ac4:	e8 36 fb ff ff       	call   75ff <http_reopen>
    7ac9:	eb 25                	jmp    7af0 <http_transfer_complete+0x153>
    7acb:	48 89 85 48 01 00 00 	mov    %rax,0x148(%rbp)
    7ad2:	48 89 ef             	mov    %rbp,%rdi
    7ad5:	ff 50 10             	call   *0x10(%rax)
    7ad8:	41 89 c4             	mov    %eax,%r12d
    7adb:	85 c0                	test   %eax,%eax
    7add:	74 a5                	je     7a84 <http_transfer_complete+0xe7>
    7adf:	eb 12                	jmp    7af3 <http_transfer_complete+0x156>
    7ae1:	c1 e6 0a             	shl    $0xa,%esi
    7ae4:	48 8d bd b0 00 00 00 	lea    0xb0(%rbp),%rdi
    7aeb:	e8 72 87 00 00       	call   10262 <start_timer_fixed>
    7af0:	45 31 e4             	xor    %r12d,%r12d
    7af3:	5a                   	pop    %rdx
    7af4:	44 89 e0             	mov    %r12d,%eax
    7af7:	5d                   	pop    %rbp
    7af8:	41 5c                	pop    %r12
    7afa:	41 5d                	pop    %r13
    7afc:	41 5e                	pop    %r14
    7afe:	c3                   	ret    

0000000000007aff <http_rx_transfer_identity>:
    7aff:	f3 0f 1e fa          	endbr64 
    7b03:	55                   	push   %rbp
    7b04:	4c 8b 06             	mov    (%rsi),%r8
    7b07:	48 89 fd             	mov    %rdi,%rbp
    7b0a:	49 8b 40 20          	mov    0x20(%r8),%rax
    7b0e:	49 2b 40 18          	sub    0x18(%r8),%rax
    7b12:	48 03 87 40 02 00 00 	add    0x240(%rdi),%rax
    7b19:	48 89 87 40 02 00 00 	mov    %rax,0x240(%rdi)
    7b20:	f6 87 1c 02 00 00 02 	testb  $0x2,0x21c(%rdi)
    7b27:	74 10                	je     7b39 <http_rx_transfer_identity+0x3a>
    7b29:	48 3b 87 d8 01 00 00 	cmp    0x1d8(%rdi),%rax
    7b30:	76 07                	jbe    7b39 <http_rx_transfer_identity+0x3a>
    7b32:	b8 68 9d f3 e2       	mov    $0xe2f39d68,%eax
    7b37:	eb 39                	jmp    7b72 <http_rx_transfer_identity+0x73>
    7b39:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    7b40:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    7b44:	4c 89 c6             	mov    %r8,%rsi
    7b47:	e8 ba fb 00 00       	call   17706 <xfer_deliver_iob>
    7b4c:	85 c0                	test   %eax,%eax
    7b4e:	75 22                	jne    7b72 <http_rx_transfer_identity+0x73>
    7b50:	f6 85 1c 02 00 00 02 	testb  $0x2,0x21c(%rbp)
    7b57:	74 19                	je     7b72 <http_rx_transfer_identity+0x73>
    7b59:	48 8b 95 d8 01 00 00 	mov    0x1d8(%rbp),%rdx
    7b60:	48 39 95 40 02 00 00 	cmp    %rdx,0x240(%rbp)
    7b67:	75 09                	jne    7b72 <http_rx_transfer_identity+0x73>
    7b69:	48 89 ef             	mov    %rbp,%rdi
    7b6c:	5d                   	pop    %rbp
    7b6d:	e9 2b fe ff ff       	jmp    799d <http_transfer_complete>
    7b72:	5d                   	pop    %rbp
    7b73:	c3                   	ret    

0000000000007b74 <http_init_transfer_identity>:
    7b74:	f3 0f 1e fa          	endbr64 
    7b78:	f6 87 1c 02 00 00 02 	testb  $0x2,0x21c(%rdi)
    7b7f:	74 0f                	je     7b90 <http_init_transfer_identity+0x1c>
    7b81:	48 83 bf d8 01 00 00 	cmpq   $0x0,0x1d8(%rdi)
    7b88:	00 
    7b89:	75 05                	jne    7b90 <http_init_transfer_identity+0x1c>
    7b8b:	e9 0d fe ff ff       	jmp    799d <http_transfer_complete>
    7b90:	31 c0                	xor    %eax,%eax
    7b92:	c3                   	ret    

0000000000007b93 <http_close_transfer_identity>:
    7b93:	f3 0f 1e fa          	endbr64 
    7b97:	85 f6                	test   %esi,%esi
    7b99:	75 34                	jne    7bcf <http_close_transfer_identity+0x3c>
    7b9b:	f6 87 1c 02 00 00 02 	testb  $0x2,0x21c(%rdi)
    7ba2:	74 07                	je     7bab <http_close_transfer_identity+0x18>
    7ba4:	be 98 62 0c 1d       	mov    $0x1d0c6298,%esi
    7ba9:	eb 24                	jmp    7bcf <http_close_transfer_identity+0x3c>
    7bab:	48 83 ec 18          	sub    $0x18,%rsp
    7baf:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    7bb4:	e8 e4 fd ff ff       	call   799d <http_transfer_complete>
    7bb9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7bbe:	85 c0                	test   %eax,%eax
    7bc0:	89 c6                	mov    %eax,%esi
    7bc2:	74 06                	je     7bca <http_close_transfer_identity+0x37>
    7bc4:	48 83 c4 18          	add    $0x18,%rsp
    7bc8:	eb 05                	jmp    7bcf <http_close_transfer_identity+0x3c>
    7bca:	48 83 c4 18          	add    $0x18,%rsp
    7bce:	c3                   	ret    
    7bcf:	e9 d5 f9 ff ff       	jmp    75a9 <http_close>

0000000000007bd4 <http_rx_linebuf.constprop.0>:
    7bd4:	53                   	push   %rbx
    7bd5:	48 89 fb             	mov    %rdi,%rbx
    7bd8:	48 89 f7             	mov    %rsi,%rdi
    7bdb:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    7bdf:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    7be3:	48 29 f2             	sub    %rsi,%rdx
    7be6:	e8 0b 44 00 00       	call   bff6 <line_buffer>
    7beb:	85 c0                	test   %eax,%eax
    7bed:	78 08                	js     7bf7 <http_rx_linebuf.constprop.0+0x23>
    7bef:	48 98                	cltq   
    7bf1:	48 01 43 18          	add    %rax,0x18(%rbx)
    7bf5:	31 c0                	xor    %eax,%eax
    7bf7:	5b                   	pop    %rbx
    7bf8:	c3                   	ret    

0000000000007bf9 <http_rx_trailers>:
    7bf9:	f3 0f 1e fa          	endbr64 
    7bfd:	41 55                	push   %r13
    7bff:	49 89 f0             	mov    %rsi,%r8
    7c02:	4c 8d af 20 02 00 00 	lea    0x220(%rdi),%r13
    7c09:	41 54                	push   %r12
    7c0b:	4c 89 ee             	mov    %r13,%rsi
    7c0e:	55                   	push   %rbp
    7c0f:	48 89 fd             	mov    %rdi,%rbp
    7c12:	49 8b 38             	mov    (%r8),%rdi
    7c15:	e8 ba ff ff ff       	call   7bd4 <http_rx_linebuf.constprop.0>
    7c1a:	41 89 c4             	mov    %eax,%r12d
    7c1d:	85 c0                	test   %eax,%eax
    7c1f:	75 27                	jne    7c48 <http_rx_trailers+0x4f>
    7c21:	4c 89 ef             	mov    %r13,%rdi
    7c24:	e8 6a 43 00 00       	call   bf93 <buffered_line>
    7c29:	48 85 c0             	test   %rax,%rax
    7c2c:	74 1a                	je     7c48 <http_rx_trailers+0x4f>
    7c2e:	80 38 00             	cmpb   $0x0,(%rax)
    7c31:	75 15                	jne    7c48 <http_rx_trailers+0x4f>
    7c33:	4c 89 ef             	mov    %r13,%rdi
    7c36:	e8 92 43 00 00       	call   bfcd <empty_line_buffer>
    7c3b:	48 89 ef             	mov    %rbp,%rdi
    7c3e:	5d                   	pop    %rbp
    7c3f:	41 5c                	pop    %r12
    7c41:	41 5d                	pop    %r13
    7c43:	e9 55 fd ff ff       	jmp    799d <http_transfer_complete>
    7c48:	44 89 e0             	mov    %r12d,%eax
    7c4b:	5d                   	pop    %rbp
    7c4c:	41 5c                	pop    %r12
    7c4e:	41 5d                	pop    %r13
    7c50:	c3                   	ret    

0000000000007c51 <http_rx_transfer_chunked>:
    7c51:	f3 0f 1e fa          	endbr64 
    7c55:	41 54                	push   %r12
    7c57:	55                   	push   %rbp
    7c58:	53                   	push   %rbx
    7c59:	48 89 fb             	mov    %rdi,%rbx
    7c5c:	48 83 ec 10          	sub    $0x10,%rsp
    7c60:	48 8b bf 48 02 00 00 	mov    0x248(%rdi),%rdi
    7c67:	4c 8b 06             	mov    (%rsi),%r8
    7c6a:	48 8b 05 ff 22 02 00 	mov    0x222ff(%rip),%rax        # 29f70 <__stack_chk_guard>
    7c71:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7c76:	31 c0                	xor    %eax,%eax
    7c78:	48 85 ff             	test   %rdi,%rdi
    7c7b:	0f 84 dc 00 00 00    	je     7d5d <http_rx_transfer_chunked+0x10c>
    7c81:	49 8b 50 20          	mov    0x20(%r8),%rdx
    7c85:	49 8b 40 18          	mov    0x18(%r8),%rax
    7c89:	49 89 f4             	mov    %rsi,%r12
    7c8c:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
    7c90:	48 89 d6             	mov    %rdx,%rsi
    7c93:	48 29 c6             	sub    %rax,%rsi
    7c96:	48 39 ce             	cmp    %rcx,%rsi
    7c99:	75 16                	jne    7cb1 <http_rx_transfer_chunked+0x60>
    7c9b:	48 01 f8             	add    %rdi,%rax
    7c9e:	80 38 0d             	cmpb   $0xd,(%rax)
    7ca1:	75 0e                	jne    7cb1 <http_rx_transfer_chunked+0x60>
    7ca3:	80 78 01 0a          	cmpb   $0xa,0x1(%rax)
    7ca7:	75 08                	jne    7cb1 <http_rx_transfer_chunked+0x60>
    7ca9:	48 83 ea 02          	sub    $0x2,%rdx
    7cad:	49 89 50 20          	mov    %rdx,0x20(%r8)
    7cb1:	49 8b 2c 24          	mov    (%r12),%rbp
    7cb5:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    7cb9:	48 2b 55 18          	sub    0x18(%rbp),%rdx
    7cbd:	48 39 d7             	cmp    %rdx,%rdi
    7cc0:	72 17                	jb     7cd9 <http_rx_transfer_chunked+0x88>
    7cc2:	48 8b 83 40 02 00 00 	mov    0x240(%rbx),%rax
    7cc9:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    7cd0:	00 
    7cd1:	48 29 d7             	sub    %rdx,%rdi
    7cd4:	48 01 d0             	add    %rdx,%rax
    7cd7:	eb 50                	jmp    7d29 <http_rx_transfer_chunked+0xd8>
    7cd9:	e8 9e 1f 00 00       	call   9c7c <alloc_iob>
    7cde:	48 89 c5             	mov    %rax,%rbp
    7ce1:	48 85 c0             	test   %rax,%rax
    7ce4:	75 0b                	jne    7cf1 <http_rx_transfer_chunked+0xa0>
    7ce6:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    7cec:	e9 0c 01 00 00       	jmp    7dfd <http_rx_transfer_chunked+0x1ac>
    7cf1:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    7cf5:	48 8b 93 48 02 00 00 	mov    0x248(%rbx),%rdx
    7cfc:	49 8b 04 24          	mov    (%r12),%rax
    7d00:	48 8b 70 18          	mov    0x18(%rax),%rsi
    7d04:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    7d08:	48 89 45 20          	mov    %rax,0x20(%rbp)
    7d0c:	e8 fc f5 00 00       	call   1730d <__memcpy>
    7d11:	49 8b 14 24          	mov    (%r12),%rdx
    7d15:	48 8b 83 48 02 00 00 	mov    0x248(%rbx),%rax
    7d1c:	31 ff                	xor    %edi,%edi
    7d1e:	48 01 42 18          	add    %rax,0x18(%rdx)
    7d22:	48 03 83 40 02 00 00 	add    0x240(%rbx),%rax
    7d29:	48 89 83 40 02 00 00 	mov    %rax,0x240(%rbx)
    7d30:	48 89 bb 48 02 00 00 	mov    %rdi,0x248(%rbx)
    7d37:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7d3c:	48 2b 05 2d 22 02 00 	sub    0x2222d(%rip),%rax        # 29f70 <__stack_chk_guard>
    7d43:	0f 85 c2 00 00 00    	jne    7e0b <http_rx_transfer_chunked+0x1ba>
    7d49:	48 83 c4 10          	add    $0x10,%rsp
    7d4d:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
    7d51:	48 89 ee             	mov    %rbp,%rsi
    7d54:	5b                   	pop    %rbx
    7d55:	5d                   	pop    %rbp
    7d56:	41 5c                	pop    %r12
    7d58:	e9 a9 f9 00 00       	jmp    17706 <xfer_deliver_iob>
    7d5d:	48 8d ab 20 02 00 00 	lea    0x220(%rbx),%rbp
    7d64:	4c 89 c7             	mov    %r8,%rdi
    7d67:	48 89 ee             	mov    %rbp,%rsi
    7d6a:	e8 65 fe ff ff       	call   7bd4 <http_rx_linebuf.constprop.0>
    7d6f:	41 89 c4             	mov    %eax,%r12d
    7d72:	85 c0                	test   %eax,%eax
    7d74:	0f 85 83 00 00 00    	jne    7dfd <http_rx_transfer_chunked+0x1ac>
    7d7a:	48 89 ef             	mov    %rbp,%rdi
    7d7d:	e8 11 42 00 00       	call   bf93 <buffered_line>
    7d82:	48 89 c7             	mov    %rax,%rdi
    7d85:	48 85 c0             	test   %rax,%rax
    7d88:	74 73                	je     7dfd <http_rx_transfer_chunked+0x1ac>
    7d8a:	80 38 00             	cmpb   $0x0,(%rax)
    7d8d:	74 6e                	je     7dfd <http_rx_transfer_chunked+0x1ac>
    7d8f:	48 89 e6             	mov    %rsp,%rsi
    7d92:	ba 10 00 00 00       	mov    $0x10,%edx
    7d97:	e8 df bc 00 00       	call   13a7b <strtoul>
    7d9c:	48 89 83 48 02 00 00 	mov    %rax,0x248(%rbx)
    7da3:	48 8b 04 24          	mov    (%rsp),%rax
    7da7:	80 38 00             	cmpb   $0x0,(%rax)
    7daa:	74 08                	je     7db4 <http_rx_transfer_chunked+0x163>
    7dac:	41 bc 7e 9b f3 e3    	mov    $0xe3f39b7e,%r12d
    7db2:	eb 49                	jmp    7dfd <http_rx_transfer_chunked+0x1ac>
    7db4:	48 89 ef             	mov    %rbp,%rdi
    7db7:	48 8d 6b 50          	lea    0x50(%rbx),%rbp
    7dbb:	e8 0d 42 00 00       	call   bfcd <empty_line_buffer>
    7dc0:	48 8b b3 48 02 00 00 	mov    0x248(%rbx),%rsi
    7dc7:	48 89 ef             	mov    %rbp,%rdi
    7dca:	48 03 b3 40 02 00 00 	add    0x240(%rbx),%rsi
    7dd1:	e8 c0 f9 00 00       	call   17796 <xfer_seek>
    7dd6:	48 8b b3 40 02 00 00 	mov    0x240(%rbx),%rsi
    7ddd:	48 89 ef             	mov    %rbp,%rdi
    7de0:	e8 b1 f9 00 00       	call   17796 <xfer_seek>
    7de5:	48 83 bb 48 02 00 00 	cmpq   $0x0,0x248(%rbx)
    7dec:	00 
    7ded:	75 0e                	jne    7dfd <http_rx_transfer_chunked+0x1ac>
    7def:	48 8d 05 7a d4 01 00 	lea    0x1d47a(%rip),%rax        # 25270 <http_trailers>
    7df6:	48 89 83 38 02 00 00 	mov    %rax,0x238(%rbx)
    7dfd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7e02:	48 2b 05 67 21 02 00 	sub    0x22167(%rip),%rax        # 29f70 <__stack_chk_guard>
    7e09:	74 05                	je     7e10 <http_rx_transfer_chunked+0x1bf>
    7e0b:	e8 50 ac ff ff       	call   2a60 <__stack_chk_fail>
    7e10:	48 83 c4 10          	add    $0x10,%rsp
    7e14:	44 89 e0             	mov    %r12d,%eax
    7e17:	5b                   	pop    %rbx
    7e18:	5d                   	pop    %rbp
    7e19:	41 5c                	pop    %r12
    7e1b:	c3                   	ret    

0000000000007e1c <http_token>:
    7e1c:	f3 0f 1e fa          	endbr64 
    7e20:	41 56                	push   %r14
    7e22:	41 55                	push   %r13
    7e24:	41 54                	push   %r12
    7e26:	55                   	push   %rbp
    7e27:	48 89 f5             	mov    %rsi,%rbp
    7e2a:	53                   	push   %rbx
    7e2b:	48 89 fb             	mov    %rdi,%rbx
    7e2e:	48 85 f6             	test   %rsi,%rsi
    7e31:	74 17                	je     7e4a <http_token+0x2e>
    7e33:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    7e3a:	eb 0e                	jmp    7e4a <http_token+0x2e>
    7e3c:	4c 8b 2b             	mov    (%rbx),%r13
    7e3f:	41 8a 45 00          	mov    0x0(%r13),%al
    7e43:	3c 2c                	cmp    $0x2c,%al
    7e45:	75 14                	jne    7e5b <http_token+0x3f>
    7e47:	48 ff 03             	incq   (%rbx)
    7e4a:	48 8b 03             	mov    (%rbx),%rax
    7e4d:	0f be 38             	movsbl (%rax),%edi
    7e50:	e8 5b 15 01 00       	call   193b0 <isspace>
    7e55:	85 c0                	test   %eax,%eax
    7e57:	75 ee                	jne    7e47 <http_token+0x2b>
    7e59:	eb e1                	jmp    7e3c <http_token+0x20>
    7e5b:	45 31 f6             	xor    %r14d,%r14d
    7e5e:	84 c0                	test   %al,%al
    7e60:	74 6d                	je     7ecf <http_token+0xb3>
    7e62:	48 8b 03             	mov    (%rbx),%rax
    7e65:	44 8a 20             	mov    (%rax),%r12b
    7e68:	45 84 e4             	test   %r12b,%r12b
    7e6b:	74 71                	je     7ede <http_token+0xc2>
    7e6d:	41 0f be fc          	movsbl %r12b,%edi
    7e71:	e8 3a 15 01 00       	call   193b0 <isspace>
    7e76:	85 c0                	test   %eax,%eax
    7e78:	48 8b 03             	mov    (%rbx),%rax
    7e7b:	75 06                	jne    7e83 <http_token+0x67>
    7e7d:	41 80 fc 2c          	cmp    $0x2c,%r12b
    7e81:	75 05                	jne    7e88 <http_token+0x6c>
    7e83:	45 84 f6             	test   %r14b,%r14b
    7e86:	74 4c                	je     7ed4 <http_token+0xb8>
    7e88:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7e8c:	45 38 e6             	cmp    %r12b,%r14b
    7e8f:	74 43                	je     7ed4 <http_token+0xb8>
    7e91:	48 85 ed             	test   %rbp,%rbp
    7e94:	74 34                	je     7eca <http_token+0xae>
    7e96:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
    7e9b:	75 2d                	jne    7eca <http_token+0xae>
    7e9d:	41 80 fc 3d          	cmp    $0x3d,%r12b
    7ea1:	75 27                	jne    7eca <http_token+0xae>
    7ea3:	48 89 13             	mov    %rdx,(%rbx)
    7ea6:	c6 00 00             	movb   $0x0,(%rax)
    7ea9:	48 8b 03             	mov    (%rbx),%rax
    7eac:	8a 10                	mov    (%rax),%dl
    7eae:	80 fa 22             	cmp    $0x22,%dl
    7eb1:	74 05                	je     7eb8 <http_token+0x9c>
    7eb3:	80 fa 27             	cmp    $0x27,%dl
    7eb6:	75 09                	jne    7ec1 <http_token+0xa5>
    7eb8:	48 ff c0             	inc    %rax
    7ebb:	41 89 d6             	mov    %edx,%r14d
    7ebe:	48 89 03             	mov    %rax,(%rbx)
    7ec1:	48 8b 03             	mov    (%rbx),%rax
    7ec4:	48 89 45 00          	mov    %rax,0x0(%rbp)
    7ec8:	eb 98                	jmp    7e62 <http_token+0x46>
    7eca:	48 89 13             	mov    %rdx,(%rbx)
    7ecd:	eb 93                	jmp    7e62 <http_token+0x46>
    7ecf:	45 31 ed             	xor    %r13d,%r13d
    7ed2:	eb 0a                	jmp    7ede <http_token+0xc2>
    7ed4:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7ed8:	48 89 13             	mov    %rdx,(%rbx)
    7edb:	c6 00 00             	movb   $0x0,(%rax)
    7ede:	5b                   	pop    %rbx
    7edf:	4c 89 e8             	mov    %r13,%rax
    7ee2:	5d                   	pop    %rbp
    7ee3:	41 5c                	pop    %r12
    7ee5:	41 5d                	pop    %r13
    7ee7:	41 5e                	pop    %r14
    7ee9:	c3                   	ret    

0000000000007eea <http_rx_headers>:
    7eea:	f3 0f 1e fa          	endbr64 
    7eee:	41 57                	push   %r15
    7ef0:	49 89 f0             	mov    %rsi,%r8
    7ef3:	41 56                	push   %r14
    7ef5:	41 55                	push   %r13
    7ef7:	4c 8d af a8 01 00 00 	lea    0x1a8(%rdi),%r13
    7efe:	41 54                	push   %r12
    7f00:	4c 89 ee             	mov    %r13,%rsi
    7f03:	55                   	push   %rbp
    7f04:	48 89 fd             	mov    %rdi,%rbp
    7f07:	53                   	push   %rbx
    7f08:	48 83 ec 28          	sub    $0x28,%rsp
    7f0c:	49 8b 38             	mov    (%r8),%rdi
    7f0f:	48 8b 05 5a 20 02 00 	mov    0x2205a(%rip),%rax        # 29f70 <__stack_chk_guard>
    7f16:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    7f1b:	31 c0                	xor    %eax,%eax
    7f1d:	e8 b2 fc ff ff       	call   7bd4 <http_rx_linebuf.constprop.0>
    7f22:	41 89 c4             	mov    %eax,%r12d
    7f25:	85 c0                	test   %eax,%eax
    7f27:	0f 85 73 02 00 00    	jne    81a0 <http_rx_headers+0x2b6>
    7f2d:	4c 89 ef             	mov    %r13,%rdi
    7f30:	e8 5e 40 00 00       	call   bf93 <buffered_line>
    7f35:	48 85 c0             	test   %rax,%rax
    7f38:	0f 84 62 02 00 00    	je     81a0 <http_rx_headers+0x2b6>
    7f3e:	80 38 00             	cmpb   $0x0,(%rax)
    7f41:	0f 85 59 02 00 00    	jne    81a0 <http_rx_headers+0x2b6>
    7f47:	48 8b 9d a8 01 00 00 	mov    0x1a8(%rbp),%rbx
    7f4e:	48 89 df             	mov    %rbx,%rdi
    7f51:	e8 e4 b9 00 00       	call   1393a <strlen>
    7f56:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    7f5b:	31 f6                	xor    %esi,%esi
    7f5d:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    7f62:	4c 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%r14
    7f67:	e8 b0 fe ff ff       	call   7e1c <http_token>
    7f6c:	48 89 c3             	mov    %rax,%rbx
    7f6f:	48 85 c0             	test   %rax,%rax
    7f72:	74 1b                	je     7f8f <http_rx_headers+0xa5>
    7f74:	ba 05 00 00 00       	mov    $0x5,%edx
    7f79:	48 8d 35 48 aa 01 00 	lea    0x1aa48(%rip),%rsi        # 229c8 <.LC11>
    7f80:	48 89 c7             	mov    %rax,%rdi
    7f83:	e8 2f b9 00 00       	call   138b7 <strncmp>
    7f88:	41 89 c4             	mov    %eax,%r12d
    7f8b:	85 c0                	test   %eax,%eax
    7f8d:	74 02                	je     7f91 <http_rx_headers+0xa7>
    7f8f:	eb 4d                	jmp    7fde <http_rx_headers+0xf4>
    7f91:	80 7b 05 30          	cmpb   $0x30,0x5(%rbx)
    7f95:	74 20                	je     7fb7 <http_rx_headers+0xcd>
    7f97:	48 8d 7b 05          	lea    0x5(%rbx),%rdi
    7f9b:	ba 03 00 00 00       	mov    $0x3,%edx
    7fa0:	48 8d 35 27 aa 01 00 	lea    0x1aa27(%rip),%rsi        # 229ce <.LC12>
    7fa7:	e8 0b b9 00 00       	call   138b7 <strncmp>
    7fac:	85 c0                	test   %eax,%eax
    7fae:	74 07                	je     7fb7 <http_rx_headers+0xcd>
    7fb0:	83 8d 1c 02 00 00 01 	orl    $0x1,0x21c(%rbp)
    7fb7:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    7fbc:	ba 0a 00 00 00       	mov    $0xa,%edx
    7fc1:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    7fc6:	48 89 df             	mov    %rbx,%rdi
    7fc9:	e8 ad ba 00 00       	call   13a7b <strtoul>
    7fce:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7fd3:	89 85 c0 01 00 00    	mov    %eax,0x1c0(%rbp)
    7fd9:	80 3a 20             	cmpb   $0x20,(%rdx)
    7fdc:	74 0b                	je     7fe9 <http_rx_headers+0xff>
    7fde:	41 bc 7e 9e f3 e3    	mov    $0xe3f39e7e,%r12d
    7fe4:	e9 b7 01 00 00       	jmp    81a0 <http_rx_headers+0x2b6>
    7fe9:	8a 13                	mov    (%rbx),%dl
    7feb:	80 fa 32             	cmp    $0x32,%dl
    7fee:	74 5a                	je     804a <http_rx_headers+0x160>
    7ff0:	80 fa 33             	cmp    $0x33,%dl
    7ff3:	75 08                	jne    7ffd <http_rx_headers+0x113>
    7ff5:	41 bc 76 9f f3 b0    	mov    $0xb0f39f76,%r12d
    7ffb:	eb 4d                	jmp    804a <http_rx_headers+0x160>
    7ffd:	3d 91 01 00 00       	cmp    $0x191,%eax
    8002:	75 08                	jne    800c <http_rx_headers+0x122>
    8004:	41 bc 71 9e f3 fd    	mov    $0xfdf39e71,%r12d
    800a:	eb 3e                	jmp    804a <http_rx_headers+0x160>
    800c:	3d 93 01 00 00       	cmp    $0x193,%eax
    8011:	75 08                	jne    801b <http_rx_headers+0x131>
    8013:	41 bc 71 9e f3 be    	mov    $0xbef39e71,%r12d
    8019:	eb 2f                	jmp    804a <http_rx_headers+0x160>
    801b:	3d 94 01 00 00       	cmp    $0x194,%eax
    8020:	75 08                	jne    802a <http_rx_headers+0x140>
    8022:	41 bc 72 9e f3 d2    	mov    $0xd2f39e72,%r12d
    8028:	eb 20                	jmp    804a <http_rx_headers+0x160>
    802a:	80 fa 34             	cmp    $0x34,%dl
    802d:	75 08                	jne    8037 <http_rx_headers+0x14d>
    802f:	41 bc 68 9b f3 e2    	mov    $0xe2f39b68,%r12d
    8035:	eb 13                	jmp    804a <http_rx_headers+0x160>
    8037:	80 fa 35             	cmp    $0x35,%dl
    803a:	75 08                	jne    8044 <http_rx_headers+0x15a>
    803c:	41 bc 68 9a f3 e2    	mov    $0xe2f39a68,%r12d
    8042:	eb 06                	jmp    804a <http_rx_headers+0x160>
    8044:	41 bc 68 9e f3 e2    	mov    $0xe2f39e68,%r12d
    804a:	44 89 a5 c4 01 00 00 	mov    %r12d,0x1c4(%rbp)
    8051:	4c 8d 2d c8 0a 02 00 	lea    0x20ac8(%rip),%r13        # 28b20 <http_scheme>
    8058:	4c 89 f7             	mov    %r14,%rdi
    805b:	e8 da b8 00 00       	call   1393a <strlen>
    8060:	41 80 3e 00          	cmpb   $0x0,(%r14)
    8064:	49 8d 5c 06 01       	lea    0x1(%r14,%rax,1),%rbx
    8069:	74 73                	je     80de <http_rx_headers+0x1f4>
    806b:	be 3a 00 00 00       	mov    $0x3a,%esi
    8070:	4c 89 f7             	mov    %r14,%rdi
    8073:	e8 cf b8 00 00       	call   13947 <strchr>
    8078:	48 85 c0             	test   %rax,%rax
    807b:	75 0b                	jne    8088 <http_rx_headers+0x19e>
    807d:	41 bc 7e 9d f3 e3    	mov    $0xe3f39d7e,%r12d
    8083:	e9 18 01 00 00       	jmp    81a0 <http_rx_headers+0x2b6>
    8088:	c6 00 00             	movb   $0x0,(%rax)
    808b:	4c 8d 60 01          	lea    0x1(%rax),%r12
    808f:	41 0f be 3c 24       	movsbl (%r12),%edi
    8094:	e8 17 13 01 00       	call   193b0 <isspace>
    8099:	85 c0                	test   %eax,%eax
    809b:	74 05                	je     80a2 <http_rx_headers+0x1b8>
    809d:	49 ff c4             	inc    %r12
    80a0:	eb ed                	jmp    808f <http_rx_headers+0x1a5>
    80a2:	4c 8d 3d 07 0a 02 00 	lea    0x20a07(%rip),%r15        # 28ab0 <http_response_retry_after>
    80a9:	4d 39 ef             	cmp    %r13,%r15
    80ac:	72 05                	jb     80b3 <http_rx_headers+0x1c9>
    80ae:	49 89 de             	mov    %rbx,%r14
    80b1:	eb a5                	jmp    8058 <http_rx_headers+0x16e>
    80b3:	49 8b 37             	mov    (%r15),%rsi
    80b6:	4c 89 f7             	mov    %r14,%rdi
    80b9:	e8 2f b8 00 00       	call   138ed <strcasecmp>
    80be:	85 c0                	test   %eax,%eax
    80c0:	75 16                	jne    80d8 <http_rx_headers+0x1ee>
    80c2:	4c 89 e6             	mov    %r12,%rsi
    80c5:	48 89 ef             	mov    %rbp,%rdi
    80c8:	41 ff 57 08          	call   *0x8(%r15)
    80cc:	41 89 c4             	mov    %eax,%r12d
    80cf:	85 c0                	test   %eax,%eax
    80d1:	74 db                	je     80ae <http_rx_headers+0x1c4>
    80d3:	e9 c8 00 00 00       	jmp    81a0 <http_rx_headers+0x2b6>
    80d8:	49 83 c7 10          	add    $0x10,%r15
    80dc:	eb cb                	jmp    80a9 <http_rx_headers+0x1bf>
    80de:	48 8b 85 e0 01 00 00 	mov    0x1e0(%rbp),%rax
    80e5:	48 85 c0             	test   %rax,%rax
    80e8:	74 11                	je     80fb <http_rx_headers+0x211>
    80ea:	48 89 ef             	mov    %rbp,%rdi
    80ed:	ff 50 10             	call   *0x10(%rax)
    80f0:	41 89 c4             	mov    %eax,%r12d
    80f3:	85 c0                	test   %eax,%eax
    80f5:	0f 85 a5 00 00 00    	jne    81a0 <http_rx_headers+0x2b6>
    80fb:	48 8b b5 d8 01 00 00 	mov    0x1d8(%rbp),%rsi
    8102:	48 85 f6             	test   %rsi,%rsi
    8105:	74 16                	je     811d <http_rx_headers+0x233>
    8107:	4c 8d 65 50          	lea    0x50(%rbp),%r12
    810b:	4c 89 e7             	mov    %r12,%rdi
    810e:	e8 83 f6 00 00       	call   17796 <xfer_seek>
    8113:	31 f6                	xor    %esi,%esi
    8115:	4c 89 e7             	mov    %r12,%rdi
    8118:	e8 79 f6 00 00       	call   17796 <xfer_seek>
    811d:	48 8d 05 0c d1 01 00 	lea    0x1d10c(%rip),%rax        # 25230 <http_head>
    8124:	48 39 85 08 01 00 00 	cmp    %rax,0x108(%rbp)
    812b:	75 24                	jne    8151 <http_rx_headers+0x267>
    812d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8132:	48 2b 05 37 1e 02 00 	sub    0x21e37(%rip),%rax        # 29f70 <__stack_chk_guard>
    8139:	75 73                	jne    81ae <http_rx_headers+0x2c4>
    813b:	48 83 c4 28          	add    $0x28,%rsp
    813f:	48 89 ef             	mov    %rbp,%rdi
    8142:	5b                   	pop    %rbx
    8143:	5d                   	pop    %rbp
    8144:	41 5c                	pop    %r12
    8146:	41 5d                	pop    %r13
    8148:	41 5e                	pop    %r14
    814a:	41 5f                	pop    %r15
    814c:	e9 4c f8 ff ff       	jmp    799d <http_transfer_complete>
    8151:	48 83 bd d0 01 00 00 	cmpq   $0x0,0x1d0(%rbp)
    8158:	00 
    8159:	75 0e                	jne    8169 <http_rx_headers+0x27f>
    815b:	48 8d 05 de d0 01 00 	lea    0x1d0de(%rip),%rax        # 25240 <http_transfer_identity>
    8162:	48 89 85 d0 01 00 00 	mov    %rax,0x1d0(%rbp)
    8169:	48 8b 85 d0 01 00 00 	mov    0x1d0(%rbp),%rax
    8170:	48 8d 50 10          	lea    0x10(%rax),%rdx
    8174:	48 89 95 38 02 00 00 	mov    %rdx,0x238(%rbp)
    817b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    8180:	48 2b 15 e9 1d 02 00 	sub    0x21de9(%rip),%rdx        # 29f70 <__stack_chk_guard>
    8187:	75 25                	jne    81ae <http_rx_headers+0x2c4>
    8189:	48 8b 40 08          	mov    0x8(%rax),%rax
    818d:	48 83 c4 28          	add    $0x28,%rsp
    8191:	48 89 ef             	mov    %rbp,%rdi
    8194:	5b                   	pop    %rbx
    8195:	5d                   	pop    %rbp
    8196:	41 5c                	pop    %r12
    8198:	41 5d                	pop    %r13
    819a:	41 5e                	pop    %r14
    819c:	41 5f                	pop    %r15
    819e:	ff e0                	jmp    *%rax
    81a0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    81a5:	48 2b 05 c4 1d 02 00 	sub    0x21dc4(%rip),%rax        # 29f70 <__stack_chk_guard>
    81ac:	74 05                	je     81b3 <http_rx_headers+0x2c9>
    81ae:	e8 ad a8 ff ff       	call   2a60 <__stack_chk_fail>
    81b3:	48 83 c4 28          	add    $0x28,%rsp
    81b7:	44 89 e0             	mov    %r12d,%eax
    81ba:	5b                   	pop    %rbx
    81bb:	5d                   	pop    %rbp
    81bc:	41 5c                	pop    %r12
    81be:	41 5d                	pop    %r13
    81c0:	41 5e                	pop    %r14
    81c2:	41 5f                	pop    %r15
    81c4:	c3                   	ret    

00000000000081c5 <http_parse_connection>:
    81c5:	f3 0f 1e fa          	endbr64 
    81c9:	41 54                	push   %r12
    81cb:	4c 8d 25 dd a7 01 00 	lea    0x1a7dd(%rip),%r12        # 229af <.LC8>
    81d2:	55                   	push   %rbp
    81d3:	53                   	push   %rbx
    81d4:	48 89 fb             	mov    %rdi,%rbx
    81d7:	48 83 ec 10          	sub    $0x10,%rsp
    81db:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    81e0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    81e5:	31 f6                	xor    %esi,%esi
    81e7:	e8 30 fc ff ff       	call   7e1c <http_token>
    81ec:	48 89 c5             	mov    %rax,%rbp
    81ef:	48 85 c0             	test   %rax,%rax
    81f2:	74 32                	je     8226 <http_parse_connection+0x61>
    81f4:	4c 89 e6             	mov    %r12,%rsi
    81f7:	48 89 ef             	mov    %rbp,%rdi
    81fa:	e8 ee b6 00 00       	call   138ed <strcasecmp>
    81ff:	85 c0                	test   %eax,%eax
    8201:	75 07                	jne    820a <http_parse_connection+0x45>
    8203:	83 8b 1c 02 00 00 01 	orl    $0x1,0x21c(%rbx)
    820a:	48 8d 35 ec a5 01 00 	lea    0x1a5ec(%rip),%rsi        # 227fd <.LC13>
    8211:	48 89 ef             	mov    %rbp,%rdi
    8214:	e8 d4 b6 00 00       	call   138ed <strcasecmp>
    8219:	85 c0                	test   %eax,%eax
    821b:	75 c3                	jne    81e0 <http_parse_connection+0x1b>
    821d:	83 a3 1c 02 00 00 fe 	andl   $0xfffffffe,0x21c(%rbx)
    8224:	eb ba                	jmp    81e0 <http_parse_connection+0x1b>
    8226:	48 83 c4 10          	add    $0x10,%rsp
    822a:	31 c0                	xor    %eax,%eax
    822c:	5b                   	pop    %rbx
    822d:	5d                   	pop    %rbp
    822e:	41 5c                	pop    %r12
    8230:	c3                   	ret    

0000000000008231 <http_open>:
    8231:	f3 0f 1e fa          	endbr64 
    8235:	41 57                	push   %r15
    8237:	41 56                	push   %r14
    8239:	41 55                	push   %r13
    823b:	41 54                	push   %r12
    823d:	55                   	push   %rbp
    823e:	48 89 d5             	mov    %rdx,%rbp
    8241:	53                   	push   %rbx
    8242:	4c 89 c3             	mov    %r8,%rbx
    8245:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    824c:	48 8b 05 1d 1d 02 00 	mov    0x21d1d(%rip),%rax        # 29f70 <__stack_chk_guard>
    8253:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    825a:	00 
    825b:	31 c0                	xor    %eax,%eax
    825d:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
    8262:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    8267:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    826c:	4c 89 ff             	mov    %r15,%rdi
    826f:	b9 60 00 00 00       	mov    $0x60,%ecx
    8274:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    8279:	f3 aa                	rep stos %al,%es:(%rdi)
    827b:	48 8b 42 40          	mov    0x40(%rdx),%rax
    827f:	48 85 c0             	test   %rax,%rax
    8282:	75 07                	jne    828b <http_open+0x5a>
    8284:	48 8d 05 75 b6 01 00 	lea    0x1b675(%rip),%rax        # 23900 <.LC0>
    828b:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    8292:	00 
    8293:	48 8b 45 48          	mov    0x48(%rbp),%rax
    8297:	31 d2                	xor    %edx,%edx
    8299:	31 f6                	xor    %esi,%esi
    829b:	4c 89 ff             	mov    %r15,%rdi
    829e:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    82a5:	00 
    82a6:	e8 e0 e3 00 00       	call   1668b <format_uri>
    82ab:	b9 60 00 00 00       	mov    $0x60,%ecx
    82b0:	4c 8d 68 01          	lea    0x1(%rax),%r13
    82b4:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    82bb:	00 
    82bc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    82c1:	48 89 c7             	mov    %rax,%rdi
    82c4:	31 c0                	xor    %eax,%eax
    82c6:	f3 aa                	rep stos %al,%es:(%rdi)
    82c8:	48 8b 45 30          	mov    0x30(%rbp),%rax
    82cc:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    82d1:	31 d2                	xor    %edx,%edx
    82d3:	31 f6                	xor    %esi,%esi
    82d5:	45 31 e4             	xor    %r12d,%r12d
    82d8:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    82df:	00 
    82e0:	48 8b 45 38          	mov    0x38(%rbp),%rax
    82e4:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
    82eb:	00 
    82ec:	e8 9a e3 00 00       	call   1668b <format_uri>
    82f1:	48 ff c0             	inc    %rax
    82f4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    82f9:	48 85 db             	test   %rbx,%rbx
    82fc:	74 04                	je     8302 <http_open+0xd1>
    82fe:	4c 8b 63 10          	mov    0x10(%rbx),%r12
    8302:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8307:	49 8d bc 05 50 02 00 	lea    0x250(%r13,%rax,1),%rdi
    830e:	00 
    830f:	4c 01 e7             	add    %r12,%rdi
    8312:	e8 43 43 00 00       	call   c65a <zalloc>
    8317:	49 89 c6             	mov    %rax,%r14
    831a:	48 85 c0             	test   %rax,%rax
    831d:	75 0b                	jne    832a <http_open+0xf9>
    831f:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    8325:	e9 c0 01 00 00       	jmp    84ea <http_open+0x2b9>
    832a:	48 8d 88 50 02 00 00 	lea    0x250(%rax),%rcx
    8331:	4c 89 ea             	mov    %r13,%rdx
    8334:	4c 89 ff             	mov    %r15,%rdi
    8337:	4a 8d 04 29          	lea    (%rcx,%r13,1),%rax
    833b:	48 89 ce             	mov    %rcx,%rsi
    833e:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    8343:	4d 8d 6e 70          	lea    0x70(%r14),%r13
    8347:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    834c:	e8 3a e3 00 00       	call   1668b <format_uri>
    8351:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8356:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    835b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    8360:	e8 26 e3 00 00       	call   1668b <format_uri>
    8365:	48 8d 15 54 ce 01 00 	lea    0x1ce54(%rip),%rdx        # 251c0 <http_xfer_desc>
    836c:	48 8d 05 31 f1 ff ff 	lea    -0xecf(%rip),%rax        # 74a4 <http_free>
    8373:	4d 89 76 18          	mov    %r14,0x18(%r14)
    8377:	49 89 46 08          	mov    %rax,0x8(%r14)
    837b:	48 8d 05 5e e0 01 00 	lea    0x1e05e(%rip),%rax        # 263e0 <null_intf>
    8382:	49 8d 76 30          	lea    0x30(%r14),%rsi
    8386:	49 89 56 20          	mov    %rdx,0x20(%r14)
    838a:	49 8d 7e 50          	lea    0x50(%r14),%rdi
    838e:	49 89 56 28          	mov    %rdx,0x28(%r14)
    8392:	48 8d 15 c7 cd 01 00 	lea    0x1cdc7(%rip),%rdx        # 25160 <http_content_desc>
    8399:	49 89 46 10          	mov    %rax,0x10(%r14)
    839d:	49 89 46 30          	mov    %rax,0x30(%r14)
    83a1:	49 89 56 40          	mov    %rdx,0x40(%r14)
    83a5:	49 89 56 48          	mov    %rdx,0x48(%r14)
    83a9:	48 8d 15 70 cd 01 00 	lea    0x1cd70(%rip),%rdx        # 25120 <http_transfer_desc>
    83b0:	49 89 46 50          	mov    %rax,0x50(%r14)
    83b4:	49 89 46 70          	mov    %rax,0x70(%r14)
    83b8:	48 8d 05 01 cd 01 00 	lea    0x1cd01(%rip),%rax        # 250c0 <http_conn_desc>
    83bf:	49 89 56 60          	mov    %rdx,0x60(%r14)
    83c3:	49 89 56 68          	mov    %rdx,0x68(%r14)
    83c7:	49 89 86 80 00 00 00 	mov    %rax,0x80(%r14)
    83ce:	49 89 86 88 00 00 00 	mov    %rax,0x88(%r14)
    83d5:	4d 89 76 38          	mov    %r14,0x38(%r14)
    83d9:	4d 89 76 58          	mov    %r14,0x58(%r14)
    83dd:	4d 89 76 78          	mov    %r14,0x78(%r14)
    83e1:	e8 8b 13 00 00       	call   9771 <intf_plug_plug>
    83e6:	49 8d be 90 00 00 00 	lea    0x90(%r14),%rdi
    83ed:	48 8d 05 ac cc 01 00 	lea    0x1ccac(%rip),%rax        # 250a0 <http_process_desc>
    83f4:	4d 89 b6 a8 00 00 00 	mov    %r14,0xa8(%r14)
    83fb:	49 89 be 90 00 00 00 	mov    %rdi,0x90(%r14)
    8402:	49 89 be 98 00 00 00 	mov    %rdi,0x98(%r14)
    8409:	49 89 86 a0 00 00 00 	mov    %rax,0xa0(%r14)
    8410:	e8 1c 75 00 00       	call   f931 <process_add>
    8415:	48 8d 05 3e f2 ff ff 	lea    -0xdc2(%rip),%rax        # 765a <http_expired>
    841c:	48 89 ef             	mov    %rbp,%rdi
    841f:	4d 89 b6 f8 00 00 00 	mov    %r14,0xf8(%r14)
    8426:	49 89 86 f0 00 00 00 	mov    %rax,0xf0(%r14)
    842d:	e8 00 7a 00 00       	call   fe32 <ref_increment>
    8432:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    8437:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    843c:	49 89 ae 00 01 00 00 	mov    %rbp,0x100(%r14)
    8443:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
    8449:	49 89 86 08 01 00 00 	mov    %rax,0x108(%r14)
    8450:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8455:	49 89 8e 10 01 00 00 	mov    %rcx,0x110(%r14)
    845c:	49 89 86 18 01 00 00 	mov    %rax,0x118(%r14)
    8463:	74 10                	je     8475 <http_open+0x244>
    8465:	49 8d be 20 01 00 00 	lea    0x120(%r14),%rdi
    846c:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    8471:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8472:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8473:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8474:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    8475:	48 85 db             	test   %rbx,%rbx
    8478:	74 2e                	je     84a8 <http_open+0x277>
    847a:	48 8b 03             	mov    (%rbx),%rax
    847d:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    8481:	4c 89 e2             	mov    %r12,%rdx
    8484:	4d 89 a6 40 01 00 00 	mov    %r12,0x140(%r14)
    848b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    8490:	48 03 7c 24 08       	add    0x8(%rsp),%rdi
    8495:	49 89 86 30 01 00 00 	mov    %rax,0x130(%r14)
    849c:	49 89 be 38 01 00 00 	mov    %rdi,0x138(%r14)
    84a3:	e8 65 ee 00 00       	call   1730d <__memcpy>
    84a8:	48 8d 05 01 ce 01 00 	lea    0x1ce01(%rip),%rax        # 252b0 <http_request>
    84af:	48 89 ee             	mov    %rbp,%rsi
    84b2:	4c 89 ef             	mov    %r13,%rdi
    84b5:	49 89 86 38 02 00 00 	mov    %rax,0x238(%r14)
    84bc:	e8 37 61 01 00       	call   1e5f8 <http_connect>
    84c1:	41 89 c4             	mov    %eax,%r12d
    84c4:	85 c0                	test   %eax,%eax
    84c6:	74 0c                	je     84d4 <http_open+0x2a3>
    84c8:	89 c6                	mov    %eax,%esi
    84ca:	4c 89 f7             	mov    %r14,%rdi
    84cd:	e8 d7 f0 ff ff       	call   75a9 <http_close>
    84d2:	eb 0e                	jmp    84e2 <http_open+0x2b1>
    84d4:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    84d9:	49 8d 7e 10          	lea    0x10(%r14),%rdi
    84dd:	e8 8f 12 00 00       	call   9771 <intf_plug_plug>
    84e2:	4c 89 f7             	mov    %r14,%rdi
    84e5:	e8 54 79 00 00       	call   fe3e <ref_decrement>
    84ea:	48 8b 84 24 08 01 00 	mov    0x108(%rsp),%rax
    84f1:	00 
    84f2:	48 2b 05 77 1a 02 00 	sub    0x21a77(%rip),%rax        # 29f70 <__stack_chk_guard>
    84f9:	74 05                	je     8500 <http_open+0x2cf>
    84fb:	e8 60 a5 ff ff       	call   2a60 <__stack_chk_fail>
    8500:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    8507:	44 89 e0             	mov    %r12d,%eax
    850a:	5b                   	pop    %rbx
    850b:	5d                   	pop    %rbp
    850c:	41 5c                	pop    %r12
    850e:	41 5d                	pop    %r13
    8510:	41 5e                	pop    %r14
    8512:	41 5f                	pop    %r15
    8514:	c3                   	ret    

0000000000008515 <http_open_uri>:
    8515:	f3 0f 1e fa          	endbr64 
    8519:	41 57                	push   %r15
    851b:	41 56                	push   %r14
    851d:	41 55                	push   %r13
    851f:	49 89 fd             	mov    %rdi,%r13
    8522:	41 54                	push   %r12
    8524:	49 89 f4             	mov    %rsi,%r12
    8527:	55                   	push   %rbp
    8528:	53                   	push   %rbx
    8529:	48 83 ec 28          	sub    $0x28,%rsp
    852d:	4c 8b 76 58          	mov    0x58(%rsi),%r14
    8531:	48 8b 05 38 1a 02 00 	mov    0x21a38(%rip),%rax        # 29f70 <__stack_chk_guard>
    8538:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    853d:	31 c0                	xor    %eax,%eax
    853f:	4d 85 f6             	test   %r14,%r14
    8542:	74 72                	je     85b6 <http_open_uri+0xa1>
    8544:	31 d2                	xor    %edx,%edx
    8546:	31 f6                	xor    %esi,%esi
    8548:	4c 89 f7             	mov    %r14,%rdi
    854b:	e8 83 f2 ff ff       	call   77d3 <http_params>
    8550:	4c 8d 78 01          	lea    0x1(%rax),%r15
    8554:	48 89 c3             	mov    %rax,%rbx
    8557:	4c 89 ff             	mov    %r15,%rdi
    855a:	e8 fb 40 00 00       	call   c65a <zalloc>
    855f:	48 89 c5             	mov    %rax,%rbp
    8562:	48 85 c0             	test   %rax,%rax
    8565:	75 08                	jne    856f <http_open_uri+0x5a>
    8567:	41 bc 77 9f f3 ce    	mov    $0xcef39f77,%r12d
    856d:	eb 77                	jmp    85e6 <http_open_uri+0xd1>
    856f:	4c 89 fa             	mov    %r15,%rdx
    8572:	4c 89 f7             	mov    %r14,%rdi
    8575:	48 89 c6             	mov    %rax,%rsi
    8578:	e8 56 f2 ff ff       	call   77d3 <http_params>
    857d:	4c 89 e2             	mov    %r12,%rdx
    8580:	4c 89 ef             	mov    %r13,%rdi
    8583:	49 89 e0             	mov    %rsp,%r8
    8586:	48 8d 05 45 a4 01 00 	lea    0x1a445(%rip),%rax        # 229d2 <.LC15>
    858d:	31 c9                	xor    %ecx,%ecx
    858f:	48 89 6c 24 08       	mov    %rbp,0x8(%rsp)
    8594:	48 8d 35 85 cc 01 00 	lea    0x1cc85(%rip),%rsi        # 25220 <http_post>
    859b:	48 89 04 24          	mov    %rax,(%rsp)
    859f:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    85a4:	e8 88 fc ff ff       	call   8231 <http_open>
    85a9:	48 89 ef             	mov    %rbp,%rdi
    85ac:	41 89 c4             	mov    %eax,%r12d
    85af:	e8 9b 40 00 00       	call   c64f <free>
    85b4:	eb 30                	jmp    85e6 <http_open_uri+0xd1>
    85b6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    85bb:	48 2b 05 ae 19 02 00 	sub    0x219ae(%rip),%rax        # 29f70 <__stack_chk_guard>
    85c2:	75 30                	jne    85f4 <http_open_uri+0xdf>
    85c4:	48 83 c4 28          	add    $0x28,%rsp
    85c8:	48 89 f2             	mov    %rsi,%rdx
    85cb:	45 31 c0             	xor    %r8d,%r8d
    85ce:	31 c9                	xor    %ecx,%ecx
    85d0:	5b                   	pop    %rbx
    85d1:	48 8d 35 50 cc 01 00 	lea    0x1cc50(%rip),%rsi        # 25228 <http_get>
    85d8:	5d                   	pop    %rbp
    85d9:	41 5c                	pop    %r12
    85db:	41 5d                	pop    %r13
    85dd:	41 5e                	pop    %r14
    85df:	41 5f                	pop    %r15
    85e1:	e9 4b fc ff ff       	jmp    8231 <http_open>
    85e6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    85eb:	48 2b 05 7e 19 02 00 	sub    0x2197e(%rip),%rax        # 29f70 <__stack_chk_guard>
    85f2:	74 05                	je     85f9 <http_open_uri+0xe4>
    85f4:	e8 67 a4 ff ff       	call   2a60 <__stack_chk_fail>
    85f9:	48 83 c4 28          	add    $0x28,%rsp
    85fd:	44 89 e0             	mov    %r12d,%eax
    8600:	5b                   	pop    %rbx
    8601:	5d                   	pop    %rbp
    8602:	41 5c                	pop    %r12
    8604:	41 5d                	pop    %r13
    8606:	41 5e                	pop    %r14
    8608:	41 5f                	pop    %r15
    860a:	c3                   	ret    

000000000000860b <ifconf_payload>:
    860b:	f3 0f 1e fa          	endbr64 
    860f:	48 83 ec 18          	sub    $0x18,%rsp
    8613:	4c 8b 46 08          	mov    0x8(%rsi),%r8
    8617:	48 8b 16             	mov    (%rsi),%rdx
    861a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    861f:	4c 89 c6             	mov    %r8,%rsi
    8622:	e8 5c 71 01 00       	call   1f783 <ifconf>
    8627:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    862c:	85 c0                	test   %eax,%eax
    862e:	74 0d                	je     863d <ifconf_payload+0x32>
    8630:	89 44 24 08          	mov    %eax,0x8(%rsp)
    8634:	e8 40 58 00 00       	call   de79 <netdev_close>
    8639:	8b 44 24 08          	mov    0x8(%rsp),%eax
    863d:	48 83 c4 18          	add    $0x18,%rsp
    8641:	c3                   	ret    

0000000000008642 <ifstat_payload>:
    8642:	f3 0f 1e fa          	endbr64 
    8646:	50                   	push   %rax
    8647:	e8 85 6f 01 00       	call   1f5d1 <ifstat>
    864c:	31 c0                	xor    %eax,%eax
    864e:	5a                   	pop    %rdx
    864f:	c3                   	ret    

0000000000008650 <ifclose_payload>:
    8650:	f3 0f 1e fa          	endbr64 
    8654:	50                   	push   %rax
    8655:	e8 6e 6f 01 00       	call   1f5c8 <ifclose>
    865a:	31 c0                	xor    %eax,%eax
    865c:	5a                   	pop    %rdx
    865d:	c3                   	ret    

000000000000865e <ifopen_payload>:
    865e:	f3 0f 1e fa          	endbr64 
    8662:	e9 26 6f 01 00       	jmp    1f58d <ifopen>

0000000000008667 <ifcommon_exec>:
    8667:	f3 0f 1e fa          	endbr64 
    866b:	55                   	push   %rbp
    866c:	48 89 e5             	mov    %rsp,%rbp
    866f:	41 57                	push   %r15
    8671:	41 56                	push   %r14
    8673:	49 89 f6             	mov    %rsi,%r14
    8676:	41 55                	push   %r13
    8678:	41 54                	push   %r12
    867a:	53                   	push   %rbx
    867b:	48 89 d3             	mov    %rdx,%rbx
    867e:	48 83 ec 28          	sub    $0x28,%rsp
    8682:	89 7d bc             	mov    %edi,-0x44(%rbp)
    8685:	48 8b 05 e4 18 02 00 	mov    0x218e4(%rip),%rax        # 29f70 <__stack_chk_guard>
    868c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8690:	31 c0                	xor    %eax,%eax
    8692:	0f b6 42 09          	movzbl 0x9(%rdx),%eax
    8696:	48 89 e2             	mov    %rsp,%rdx
    8699:	48 83 c0 0f          	add    $0xf,%rax
    869d:	25 f0 01 00 00       	and    $0x1f0,%eax
    86a2:	48 39 d4             	cmp    %rdx,%rsp
    86a5:	74 12                	je     86b9 <ifcommon_exec+0x52>
    86a7:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    86ae:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    86b5:	00 00 
    86b7:	eb e9                	jmp    86a2 <ifcommon_exec+0x3b>
    86b9:	48 29 c4             	sub    %rax,%rsp
    86bc:	25 ff 0f 00 00       	and    $0xfff,%eax
    86c1:	74 06                	je     86c9 <ifcommon_exec+0x62>
    86c3:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    86c9:	8b 7d bc             	mov    -0x44(%rbp),%edi
    86cc:	48 89 e1             	mov    %rsp,%rcx
    86cf:	48 89 da             	mov    %rbx,%rdx
    86d2:	4c 89 f6             	mov    %r14,%rsi
    86d5:	49 89 e7             	mov    %rsp,%r15
    86d8:	e8 d2 6a 00 00       	call   f1af <parse_options>
    86dd:	41 89 c4             	mov    %eax,%r12d
    86e0:	85 c0                	test   %eax,%eax
    86e2:	0f 85 8e 00 00 00    	jne    8776 <ifcommon_exec+0x10f>
    86e8:	8b 15 ba 18 02 00    	mov    0x218ba(%rip),%edx        # 29fa8 <optind>
    86ee:	3b 55 bc             	cmp    -0x44(%rbp),%edx
    86f1:	74 3e                	je     8731 <ifcommon_exec+0xca>
    86f3:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
    86f7:	4c 63 ea             	movslq %edx,%r13
    86fa:	31 c0                	xor    %eax,%eax
    86fc:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    8700:	44 39 6d bc          	cmp    %r13d,-0x44(%rbp)
    8704:	7e 6d                	jle    8773 <ifcommon_exec+0x10c>
    8706:	4b 8b 3c ee          	mov    (%r14,%r13,8),%rdi
    870a:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    870e:	e8 12 66 00 00       	call   ed25 <parse_netdev>
    8713:	85 c0                	test   %eax,%eax
    8715:	75 15                	jne    872c <ifcommon_exec+0xc5>
    8717:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    871b:	4c 89 fe             	mov    %r15,%rsi
    871e:	ff 53 18             	call   *0x18(%rbx)
    8721:	85 c0                	test   %eax,%eax
    8723:	75 07                	jne    872c <ifcommon_exec+0xc5>
    8725:	8b 43 20             	mov    0x20(%rbx),%eax
    8728:	85 c0                	test   %eax,%eax
    872a:	75 4a                	jne    8776 <ifcommon_exec+0x10f>
    872c:	49 ff c5             	inc    %r13
    872f:	eb cf                	jmp    8700 <ifcommon_exec+0x99>
    8731:	48 8b 05 e8 e1 01 00 	mov    0x1e1e8(%rip),%rax        # 26920 <net_devices>
    8738:	4c 8d 2d e1 e1 01 00 	lea    0x1e1e1(%rip),%r13        # 26920 <net_devices>
    873f:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
    8743:	b8 79 1f e2 d3       	mov    $0xd3e21f79,%eax
    8748:	48 8d 57 10          	lea    0x10(%rdi),%rdx
    874c:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
    8750:	4c 39 ea             	cmp    %r13,%rdx
    8753:	74 1e                	je     8773 <ifcommon_exec+0x10c>
    8755:	4c 89 fe             	mov    %r15,%rsi
    8758:	ff 53 18             	call   *0x18(%rbx)
    875b:	85 c0                	test   %eax,%eax
    875d:	75 06                	jne    8765 <ifcommon_exec+0xfe>
    875f:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
    8763:	75 11                	jne    8776 <ifcommon_exec+0x10f>
    8765:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    8769:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
    876d:	48 83 ef 10          	sub    $0x10,%rdi
    8771:	eb d5                	jmp    8748 <ifcommon_exec+0xe1>
    8773:	41 89 c4             	mov    %eax,%r12d
    8776:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    877a:	48 2b 05 ef 17 02 00 	sub    0x217ef(%rip),%rax        # 29f70 <__stack_chk_guard>
    8781:	74 05                	je     8788 <ifcommon_exec+0x121>
    8783:	e8 d8 a2 ff ff       	call   2a60 <__stack_chk_fail>
    8788:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    878c:	44 89 e0             	mov    %r12d,%eax
    878f:	5b                   	pop    %rbx
    8790:	41 5c                	pop    %r12
    8792:	41 5d                	pop    %r13
    8794:	41 5e                	pop    %r14
    8796:	41 5f                	pop    %r15
    8798:	5d                   	pop    %rbp
    8799:	c3                   	ret    

000000000000879a <ifconf_exec>:
    879a:	f3 0f 1e fa          	endbr64 
    879e:	48 8d 15 3b cb 01 00 	lea    0x1cb3b(%rip),%rdx        # 252e0 <ifconf_cmd>
    87a5:	e9 bd fe ff ff       	jmp    8667 <ifcommon_exec>

00000000000087aa <ifstat_exec>:
    87aa:	f3 0f 1e fa          	endbr64 
    87ae:	48 8d 15 ab cb 01 00 	lea    0x1cbab(%rip),%rdx        # 25360 <ifstat_cmd>
    87b5:	e9 ad fe ff ff       	jmp    8667 <ifcommon_exec>

00000000000087ba <ifclose_exec>:
    87ba:	f3 0f 1e fa          	endbr64 
    87be:	48 8d 15 db cb 01 00 	lea    0x1cbdb(%rip),%rdx        # 253a0 <ifclose_cmd>
    87c5:	e9 9d fe ff ff       	jmp    8667 <ifcommon_exec>

00000000000087ca <ifopen_exec>:
    87ca:	f3 0f 1e fa          	endbr64 
    87ce:	48 8d 15 0b cc 01 00 	lea    0x1cc0b(%rip),%rdx        # 253e0 <ifopen_cmd>
    87d5:	e9 8d fe ff ff       	jmp    8667 <ifcommon_exec>

00000000000087da <imgselect>:
    87da:	f3 0f 1e fa          	endbr64 
    87de:	e9 ad 73 01 00       	jmp    1fb90 <image_select>

00000000000087e3 <image_clear_cmdline>:
    87e3:	f3 0f 1e fa          	endbr64 
    87e7:	31 f6                	xor    %esi,%esi
    87e9:	e9 dc 71 01 00       	jmp    1f9ca <image_set_cmdline>

00000000000087ee <imgsingle_exec>:
    87ee:	41 56                	push   %r14
    87f0:	41 55                	push   %r13
    87f2:	41 89 fd             	mov    %edi,%r13d
    87f5:	41 54                	push   %r12
    87f7:	55                   	push   %rbp
    87f8:	48 89 f5             	mov    %rsi,%rbp
    87fb:	53                   	push   %rbx
    87fc:	48 89 d3             	mov    %rdx,%rbx
    87ff:	48 83 ec 30          	sub    $0x30,%rsp
    8803:	48 8b 12             	mov    (%rdx),%rdx
    8806:	48 8b 05 63 17 02 00 	mov    0x21763(%rip),%rax        # 29f70 <__stack_chk_guard>
    880d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    8812:	31 c0                	xor    %eax,%eax
    8814:	4c 8d 74 24 10       	lea    0x10(%rsp),%r14
    8819:	4c 89 f1             	mov    %r14,%rcx
    881c:	e8 8e 69 00 00       	call   f1af <parse_options>
    8821:	41 89 c4             	mov    %eax,%r12d
    8824:	85 c0                	test   %eax,%eax
    8826:	0f 85 3d 01 00 00    	jne    8969 <imgsingle_exec+0x17b>
    882c:	48 63 05 75 17 02 00 	movslq 0x21775(%rip),%rax        # 29fa8 <optind>
    8833:	44 39 e8             	cmp    %r13d,%eax
    8836:	7d 48                	jge    8880 <imgsingle_exec+0x92>
    8838:	48 8d 7c c5 08       	lea    0x8(%rbp,%rax,8),%rdi
    883d:	4c 8b 6c c5 00       	mov    0x0(%rbp,%rax,8),%r13
    8842:	48 8b 2f             	mov    (%rdi),%rbp
    8845:	48 85 ed             	test   %rbp,%rbp
    8848:	74 18                	je     8862 <imgsingle_exec+0x74>
    884a:	e8 a1 57 01 00       	call   1dff0 <concat_args>
    884f:	48 89 c5             	mov    %rax,%rbp
    8852:	48 85 c0             	test   %rax,%rax
    8855:	75 0b                	jne    8862 <imgsingle_exec+0x74>
    8857:	41 bc 77 1f f5 ce    	mov    $0xcef51f77,%r12d
    885d:	e9 07 01 00 00       	jmp    8969 <imgsingle_exec+0x17b>
    8862:	4d 85 ed             	test   %r13,%r13
    8865:	74 1b                	je     8882 <imgsingle_exec+0x94>
    8867:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    886c:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    8871:	4c 89 ef             	mov    %r13,%rdi
    8874:	ff 53 08             	call   *0x8(%rbx)
    8877:	85 c0                	test   %eax,%eax
    8879:	74 27                	je     88a2 <imgsingle_exec+0xb4>
    887b:	e9 de 00 00 00       	jmp    895e <imgsingle_exec+0x170>
    8880:	31 ed                	xor    %ebp,%ebp
    8882:	e8 53 73 01 00       	call   1fbda <image_find_selected>
    8887:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    888c:	48 85 c0             	test   %rax,%rax
    888f:	75 11                	jne    88a2 <imgsingle_exec+0xb4>
    8891:	48 8d 3d 79 a2 01 00 	lea    0x1a279(%rip),%rdi        # 22b11 <.LC0>
    8898:	e8 01 e9 00 00       	call   1719e <printf>
    889d:	e9 bf 00 00 00       	jmp    8961 <imgsingle_exec+0x173>
    88a2:	48 8b 43 10          	mov    0x10(%rbx),%rax
    88a6:	48 85 c0             	test   %rax,%rax
    88a9:	74 07                	je     88b2 <imgsingle_exec+0xc4>
    88ab:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    88b0:	ff d0                	call   *%rax
    88b2:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    88b7:	48 85 f6             	test   %rsi,%rsi
    88ba:	74 24                	je     88e0 <imgsingle_exec+0xf2>
    88bc:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    88c1:	e8 2b 70 01 00       	call   1f8f1 <image_set_name>
    88c6:	41 89 c5             	mov    %eax,%r13d
    88c9:	85 c0                	test   %eax,%eax
    88cb:	74 13                	je     88e0 <imgsingle_exec+0xf2>
    88cd:	89 c7                	mov    %eax,%edi
    88cf:	e8 c8 ae 00 00       	call   1379c <strerror>
    88d4:	48 8d 3d 49 a2 01 00 	lea    0x1a249(%rip),%rdi        # 22b24 <.LC1>
    88db:	48 89 c6             	mov    %rax,%rsi
    88de:	eb 2a                	jmp    890a <imgsingle_exec+0x11c>
    88e0:	48 85 ed             	test   %rbp,%rbp
    88e3:	74 31                	je     8916 <imgsingle_exec+0x128>
    88e5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    88ea:	48 89 ee             	mov    %rbp,%rsi
    88ed:	e8 d8 70 01 00       	call   1f9ca <image_set_cmdline>
    88f2:	41 89 c5             	mov    %eax,%r13d
    88f5:	85 c0                	test   %eax,%eax
    88f7:	74 1d                	je     8916 <imgsingle_exec+0x128>
    88f9:	89 c7                	mov    %eax,%edi
    88fb:	e8 9c ae 00 00       	call   1379c <strerror>
    8900:	48 8d 3d 37 a2 01 00 	lea    0x1a237(%rip),%rdi        # 22b3e <.LC2>
    8907:	48 89 c6             	mov    %rax,%rsi
    890a:	31 c0                	xor    %eax,%eax
    890c:	45 89 ec             	mov    %r13d,%r12d
    890f:	e8 8a e8 00 00       	call   1719e <printf>
    8914:	eb 4b                	jmp    8961 <imgsingle_exec+0x173>
    8916:	83 7c 24 24 00       	cmpl   $0x0,0x24(%rsp)
    891b:	74 09                	je     8926 <imgsingle_exec+0x138>
    891d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8922:	83 48 30 08          	orl    $0x8,0x30(%rax)
    8926:	48 8b 43 18          	mov    0x18(%rbx),%rax
    892a:	48 85 c0             	test   %rax,%rax
    892d:	74 32                	je     8961 <imgsingle_exec+0x173>
    892f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8934:	4c 89 f6             	mov    %r14,%rsi
    8937:	ff d0                	call   *%rax
    8939:	41 89 c4             	mov    %eax,%r12d
    893c:	85 c0                	test   %eax,%eax
    893e:	74 21                	je     8961 <imgsingle_exec+0x173>
    8940:	89 c7                	mov    %eax,%edi
    8942:	e8 55 ae 00 00       	call   1379c <strerror>
    8947:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    894b:	48 8d 3d 09 a2 01 00 	lea    0x1a209(%rip),%rdi        # 22b5b <.LC3>
    8952:	48 89 c2             	mov    %rax,%rdx
    8955:	31 c0                	xor    %eax,%eax
    8957:	e8 42 e8 00 00       	call   1719e <printf>
    895c:	eb 03                	jmp    8961 <imgsingle_exec+0x173>
    895e:	41 89 c4             	mov    %eax,%r12d
    8961:	48 89 ef             	mov    %rbp,%rdi
    8964:	e8 e6 3c 00 00       	call   c64f <free>
    8969:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    896e:	48 2b 05 fb 15 02 00 	sub    0x215fb(%rip),%rax        # 29f70 <__stack_chk_guard>
    8975:	74 05                	je     897c <imgsingle_exec+0x18e>
    8977:	e8 e4 a0 ff ff       	call   2a60 <__stack_chk_fail>
    897c:	48 83 c4 30          	add    $0x30,%rsp
    8980:	44 89 e0             	mov    %r12d,%eax
    8983:	5b                   	pop    %rbx
    8984:	5d                   	pop    %rbp
    8985:	41 5c                	pop    %r12
    8987:	41 5d                	pop    %r13
    8989:	41 5e                	pop    %r14
    898b:	c3                   	ret    

000000000000898c <imgargs_exec>:
    898c:	f3 0f 1e fa          	endbr64 
    8990:	48 8d 15 a9 ca 01 00 	lea    0x1caa9(%rip),%rdx        # 25440 <imgargs_desc>
    8997:	e9 52 fe ff ff       	jmp    87ee <imgsingle_exec>

000000000000899c <imgexec_exec>:
    899c:	f3 0f 1e fa          	endbr64 
    89a0:	48 8d 15 f9 ca 01 00 	lea    0x1caf9(%rip),%rdx        # 254a0 <imgexec_desc>
    89a7:	e9 42 fe ff ff       	jmp    87ee <imgsingle_exec>

00000000000089ac <imgselect_exec>:
    89ac:	f3 0f 1e fa          	endbr64 
    89b0:	48 8d 15 49 cb 01 00 	lea    0x1cb49(%rip),%rdx        # 25500 <imgselect_desc>
    89b7:	e9 32 fe ff ff       	jmp    87ee <imgsingle_exec>

00000000000089bc <imgfetch_exec>:
    89bc:	f3 0f 1e fa          	endbr64 
    89c0:	48 8d 15 99 cb 01 00 	lea    0x1cb99(%rip),%rdx        # 25560 <imgfetch_desc>
    89c7:	e9 22 fe ff ff       	jmp    87ee <imgsingle_exec>

00000000000089cc <imgexec>:
    89cc:	f3 0f 1e fa          	endbr64 
    89d0:	83 7e 10 00          	cmpl   $0x0,0x10(%rsi)
    89d4:	74 21                	je     89f7 <imgexec+0x2b>
    89d6:	48 83 ec 18          	sub    $0x18,%rsp
    89da:	e8 62 71 01 00       	call   1fb41 <image_replace>
    89df:	85 c0                	test   %eax,%eax
    89e1:	75 19                	jne    89fc <imgexec+0x30>
    89e3:	bf 02 00 00 00       	mov    $0x2,%edi
    89e8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    89ec:	e8 5a 53 01 00       	call   1dd4b <shell_stop>
    89f1:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    89f5:	eb 05                	jmp    89fc <imgexec+0x30>
    89f7:	e9 83 70 01 00       	jmp    1fa7f <image_exec>
    89fc:	48 83 c4 18          	add    $0x18,%rsp
    8a00:	c3                   	ret    

0000000000008a01 <imgmulti_exec>:
    8a01:	41 57                	push   %r15
    8a03:	41 56                	push   %r14
    8a05:	49 89 d6             	mov    %rdx,%r14
    8a08:	48 8d 15 11 ca 01 00 	lea    0x1ca11(%rip),%rdx        # 25420 <imgmulti_cmd>
    8a0f:	41 55                	push   %r13
    8a11:	49 89 f5             	mov    %rsi,%r13
    8a14:	41 54                	push   %r12
    8a16:	55                   	push   %rbp
    8a17:	89 fd                	mov    %edi,%ebp
    8a19:	53                   	push   %rbx
    8a1a:	48 83 ec 18          	sub    $0x18,%rsp
    8a1e:	48 8b 05 4b 15 02 00 	mov    0x2154b(%rip),%rax        # 29f70 <__stack_chk_guard>
    8a25:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8a2a:	31 c0                	xor    %eax,%eax
    8a2c:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
    8a31:	e8 79 67 00 00       	call   f1af <parse_options>
    8a36:	41 89 c4             	mov    %eax,%r12d
    8a39:	85 c0                	test   %eax,%eax
    8a3b:	75 75                	jne    8ab2 <imgmulti_exec+0xb1>
    8a3d:	48 63 1d 64 15 02 00 	movslq 0x21564(%rip),%rbx        # 29fa8 <optind>
    8a44:	39 dd                	cmp    %ebx,%ebp
    8a46:	75 35                	jne    8a7d <imgmulti_exec+0x7c>
    8a48:	48 8b 05 a1 f2 01 00 	mov    0x1f2a1(%rip),%rax        # 27cf0 <images>
    8a4f:	48 8d 2d 9a f2 01 00 	lea    0x1f29a(%rip),%rbp        # 27cf0 <images>
    8a56:	48 8b 18             	mov    (%rax),%rbx
    8a59:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
    8a5d:	48 83 eb 10          	sub    $0x10,%rbx
    8a61:	48 8d 47 10          	lea    0x10(%rdi),%rax
    8a65:	48 39 e8             	cmp    %rbp,%rax
    8a68:	74 48                	je     8ab2 <imgmulti_exec+0xb1>
    8a6a:	41 ff d6             	call   *%r14
    8a6d:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8a71:	48 89 df             	mov    %rbx,%rdi
    8a74:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    8a78:	eb e7                	jmp    8a61 <imgmulti_exec+0x60>
    8a7a:	41 ff d6             	call   *%r14
    8a7d:	39 dd                	cmp    %ebx,%ebp
    8a7f:	7e 31                	jle    8ab2 <imgmulti_exec+0xb1>
    8a81:	49 8b 7c dd 00       	mov    0x0(%r13,%rbx,8),%rdi
    8a86:	4d 8d 7c dd 00       	lea    0x0(%r13,%rbx,8),%r15
    8a8b:	48 ff c3             	inc    %rbx
    8a8e:	e8 9e 6f 01 00       	call   1fa31 <find_image>
    8a93:	48 89 c7             	mov    %rax,%rdi
    8a96:	48 85 c0             	test   %rax,%rax
    8a99:	75 df                	jne    8a7a <imgmulti_exec+0x79>
    8a9b:	49 8b 37             	mov    (%r15),%rsi
    8a9e:	48 8d 3d c8 a0 01 00 	lea    0x1a0c8(%rip),%rdi        # 22b6d <.LC4>
    8aa5:	31 c0                	xor    %eax,%eax
    8aa7:	e8 f2 e6 00 00       	call   1719e <printf>
    8aac:	41 bc 72 1f f5 d2    	mov    $0xd2f51f72,%r12d
    8ab2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8ab7:	48 2b 05 b2 14 02 00 	sub    0x214b2(%rip),%rax        # 29f70 <__stack_chk_guard>
    8abe:	74 05                	je     8ac5 <imgmulti_exec+0xc4>
    8ac0:	e8 9b 9f ff ff       	call   2a60 <__stack_chk_fail>
    8ac5:	48 83 c4 18          	add    $0x18,%rsp
    8ac9:	44 89 e0             	mov    %r12d,%eax
    8acc:	5b                   	pop    %rbx
    8acd:	5d                   	pop    %rbp
    8ace:	41 5c                	pop    %r12
    8ad0:	41 5d                	pop    %r13
    8ad2:	41 5e                	pop    %r14
    8ad4:	41 5f                	pop    %r15
    8ad6:	c3                   	ret    

0000000000008ad7 <imgfree_exec>:
    8ad7:	f3 0f 1e fa          	endbr64 
    8adb:	48 8d 15 29 6f 01 00 	lea    0x16f29(%rip),%rdx        # 1fa0b <unregister_image>
    8ae2:	e9 1a ff ff ff       	jmp    8a01 <imgmulti_exec>

0000000000008ae7 <imgstat_exec>:
    8ae7:	f3 0f 1e fa          	endbr64 
    8aeb:	48 8d 15 e3 01 00 00 	lea    0x1e3(%rip),%rdx        # 8cd5 <imgstat>
    8af2:	e9 0a ff ff ff       	jmp    8a01 <imgmulti_exec>

0000000000008af7 <imgdownload>:
    8af7:	f3 0f 1e fa          	endbr64 
    8afb:	41 56                	push   %r14
    8afd:	49 89 f6             	mov    %rsi,%r14
    8b00:	48 89 fe             	mov    %rdi,%rsi
    8b03:	41 55                	push   %r13
    8b05:	41 54                	push   %r12
    8b07:	49 89 fc             	mov    %rdi,%r12
    8b0a:	55                   	push   %rbp
    8b0b:	53                   	push   %rbx
    8b0c:	48 89 d3             	mov    %rdx,%rbx
    8b0f:	ba 60 00 00 00       	mov    $0x60,%edx
    8b14:	48 83 ec 70          	sub    $0x70,%rsp
    8b18:	48 8b 05 51 14 02 00 	mov    0x21451(%rip),%rax        # 29f70 <__stack_chk_guard>
    8b1f:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    8b24:	31 c0                	xor    %eax,%eax
    8b26:	48 89 e5             	mov    %rsp,%rbp
    8b29:	48 89 ef             	mov    %rbp,%rdi
    8b2c:	e8 dc e7 00 00       	call   1730d <__memcpy>
    8b31:	48 89 ef             	mov    %rbp,%rdi
    8b34:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    8b3b:	00 00 
    8b3d:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
    8b44:	00 00 
    8b46:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    8b4d:	00 00 
    8b4f:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    8b56:	00 00 
    8b58:	e8 2c dc 00 00       	call   16789 <format_uri_alloc>
    8b5d:	48 85 c0             	test   %rax,%rax
    8b60:	75 0b                	jne    8b6d <imgdownload+0x76>
    8b62:	41 bc 77 1f fa ce    	mov    $0xcefa1f77,%r12d
    8b68:	e9 b7 00 00 00       	jmp    8c24 <imgdownload+0x12d>
    8b6d:	48 8b 3d 1c 13 02 00 	mov    0x2131c(%rip),%rdi        # 29e90 <cwuri>
    8b74:	4c 89 e6             	mov    %r12,%rsi
    8b77:	48 89 c5             	mov    %rax,%rbp
    8b7a:	e8 b7 dd 00 00       	call   16936 <resolve_uri>
    8b7f:	49 89 c5             	mov    %rax,%r13
    8b82:	48 85 c0             	test   %rax,%rax
    8b85:	75 0b                	jne    8b92 <imgdownload+0x9b>
    8b87:	41 bc 77 1f fa ce    	mov    $0xcefa1f77,%r12d
    8b8d:	e9 8a 00 00 00       	jmp    8c1c <imgdownload+0x125>
    8b92:	48 89 c7             	mov    %rax,%rdi
    8b95:	e8 e0 6d 01 00       	call   1f97a <alloc_image>
    8b9a:	48 89 03             	mov    %rax,(%rbx)
    8b9d:	48 89 c6             	mov    %rax,%rsi
    8ba0:	48 85 c0             	test   %rax,%rax
    8ba3:	75 08                	jne    8bad <imgdownload+0xb6>
    8ba5:	41 bc 77 1f fa ce    	mov    $0xcefa1f77,%r12d
    8bab:	eb 67                	jmp    8c14 <imgdownload+0x11d>
    8bad:	48 8d 3d 6c dc 01 00 	lea    0x1dc6c(%rip),%rdi        # 26820 <monojob>
    8bb4:	e8 78 20 01 00       	call   1ac31 <create_downloader>
    8bb9:	41 89 c4             	mov    %eax,%r12d
    8bbc:	85 c0                	test   %eax,%eax
    8bbe:	74 13                	je     8bd3 <imgdownload+0xdc>
    8bc0:	89 c7                	mov    %eax,%edi
    8bc2:	e8 d5 ab 00 00       	call   1379c <strerror>
    8bc7:	48 8d 3d 7b a0 01 00 	lea    0x1a07b(%rip),%rdi        # 22c49 <.LC0>
    8bce:	48 89 c6             	mov    %rax,%rsi
    8bd1:	eb 32                	jmp    8c05 <imgdownload+0x10e>
    8bd3:	4c 89 f6             	mov    %r14,%rsi
    8bd6:	48 89 ef             	mov    %rbp,%rdi
    8bd9:	e8 4d 46 00 00       	call   d22b <monojob_wait>
    8bde:	41 89 c4             	mov    %eax,%r12d
    8be1:	85 c0                	test   %eax,%eax
    8be3:	75 27                	jne    8c0c <imgdownload+0x115>
    8be5:	48 8b 3b             	mov    (%rbx),%rdi
    8be8:	e8 1f 70 01 00       	call   1fc0c <register_image>
    8bed:	41 89 c4             	mov    %eax,%r12d
    8bf0:	85 c0                	test   %eax,%eax
    8bf2:	74 18                	je     8c0c <imgdownload+0x115>
    8bf4:	89 c7                	mov    %eax,%edi
    8bf6:	e8 a1 ab 00 00       	call   1379c <strerror>
    8bfb:	48 8d 3d 65 a0 01 00 	lea    0x1a065(%rip),%rdi        # 22c67 <.LC1>
    8c02:	48 89 c6             	mov    %rax,%rsi
    8c05:	31 c0                	xor    %eax,%eax
    8c07:	e8 92 e5 00 00       	call   1719e <printf>
    8c0c:	48 8b 3b             	mov    (%rbx),%rdi
    8c0f:	e8 2a 72 00 00       	call   fe3e <ref_decrement>
    8c14:	4c 89 ef             	mov    %r13,%rdi
    8c17:	e8 22 72 00 00       	call   fe3e <ref_decrement>
    8c1c:	48 89 ef             	mov    %rbp,%rdi
    8c1f:	e8 2b 3a 00 00       	call   c64f <free>
    8c24:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    8c29:	48 2b 05 40 13 02 00 	sub    0x21340(%rip),%rax        # 29f70 <__stack_chk_guard>
    8c30:	74 05                	je     8c37 <imgdownload+0x140>
    8c32:	e8 29 9e ff ff       	call   2a60 <__stack_chk_fail>
    8c37:	48 83 c4 70          	add    $0x70,%rsp
    8c3b:	44 89 e0             	mov    %r12d,%eax
    8c3e:	5b                   	pop    %rbx
    8c3f:	5d                   	pop    %rbp
    8c40:	41 5c                	pop    %r12
    8c42:	41 5d                	pop    %r13
    8c44:	41 5e                	pop    %r14
    8c46:	c3                   	ret    

0000000000008c47 <imgdownload_string>:
    8c47:	f3 0f 1e fa          	endbr64 
    8c4b:	55                   	push   %rbp
    8c4c:	48 83 ec 10          	sub    $0x10,%rsp
    8c50:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    8c55:	48 89 14 24          	mov    %rdx,(%rsp)
    8c59:	e8 f5 d7 00 00       	call   16453 <parse_uri>
    8c5e:	48 8b 14 24          	mov    (%rsp),%rdx
    8c62:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    8c67:	48 85 c0             	test   %rax,%rax
    8c6a:	75 07                	jne    8c73 <imgdownload_string+0x2c>
    8c6c:	b8 77 1f fa ce       	mov    $0xcefa1f77,%eax
    8c71:	eb 19                	jmp    8c8c <imgdownload_string+0x45>
    8c73:	48 89 c5             	mov    %rax,%rbp
    8c76:	48 89 c7             	mov    %rax,%rdi
    8c79:	e8 79 fe ff ff       	call   8af7 <imgdownload>
    8c7e:	48 89 ef             	mov    %rbp,%rdi
    8c81:	89 04 24             	mov    %eax,(%rsp)
    8c84:	e8 b5 71 00 00       	call   fe3e <ref_decrement>
    8c89:	8b 04 24             	mov    (%rsp),%eax
    8c8c:	48 83 c4 10          	add    $0x10,%rsp
    8c90:	5d                   	pop    %rbp
    8c91:	c3                   	ret    

0000000000008c92 <imgacquire>:
    8c92:	f3 0f 1e fa          	endbr64 
    8c96:	48 83 ec 28          	sub    $0x28,%rsp
    8c9a:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    8c9f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    8ca4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    8ca9:	e8 83 6d 01 00       	call   1fa31 <find_image>
    8cae:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    8cb3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    8cb8:	48 85 c0             	test   %rax,%rax
    8cbb:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    8cc0:	48 89 02             	mov    %rax,(%rdx)
    8cc3:	75 09                	jne    8cce <imgacquire+0x3c>
    8cc5:	48 83 c4 28          	add    $0x28,%rsp
    8cc9:	e9 79 ff ff ff       	jmp    8c47 <imgdownload_string>
    8cce:	31 c0                	xor    %eax,%eax
    8cd0:	48 83 c4 28          	add    $0x28,%rsp
    8cd4:	c3                   	ret    

0000000000008cd5 <imgstat>:
    8cd5:	f3 0f 1e fa          	endbr64 
    8cd9:	53                   	push   %rbx
    8cda:	48 8b 57 48          	mov    0x48(%rdi),%rdx
    8cde:	48 89 fb             	mov    %rdi,%rbx
    8ce1:	31 c0                	xor    %eax,%eax
    8ce3:	48 8b 77 28          	mov    0x28(%rdi),%rsi
    8ce7:	48 8d 3d 97 9f 01 00 	lea    0x19f97(%rip),%rdi        # 22c85 <.LC2>
    8cee:	e8 ab e4 00 00       	call   1719e <printf>
    8cf3:	48 8b 43 50          	mov    0x50(%rbx),%rax
    8cf7:	48 85 c0             	test   %rax,%rax
    8cfa:	74 11                	je     8d0d <imgstat+0x38>
    8cfc:	48 8b 30             	mov    (%rax),%rsi
    8cff:	48 8d 3d 8e 9f 01 00 	lea    0x19f8e(%rip),%rdi        # 22c94 <.LC3>
    8d06:	31 c0                	xor    %eax,%eax
    8d08:	e8 91 e4 00 00       	call   1719e <printf>
    8d0d:	f6 43 30 04          	testb  $0x4,0x30(%rbx)
    8d11:	74 0e                	je     8d21 <imgstat+0x4c>
    8d13:	48 8d 3d 80 9f 01 00 	lea    0x19f80(%rip),%rdi        # 22c9a <.LC4>
    8d1a:	31 c0                	xor    %eax,%eax
    8d1c:	e8 7d e4 00 00       	call   1719e <printf>
    8d21:	f6 43 30 02          	testb  $0x2,0x30(%rbx)
    8d25:	74 0e                	je     8d35 <imgstat+0x60>
    8d27:	48 8d 3d 77 9f 01 00 	lea    0x19f77(%rip),%rdi        # 22ca5 <.LC5>
    8d2e:	31 c0                	xor    %eax,%eax
    8d30:	e8 69 e4 00 00       	call   1719e <printf>
    8d35:	f6 43 30 08          	testb  $0x8,0x30(%rbx)
    8d39:	74 0e                	je     8d49 <imgstat+0x74>
    8d3b:	48 8d 3d 6f 9f 01 00 	lea    0x19f6f(%rip),%rdi        # 22cb1 <.LC6>
    8d42:	31 c0                	xor    %eax,%eax
    8d44:	e8 55 e4 00 00       	call   1719e <printf>
    8d49:	48 8b 73 38          	mov    0x38(%rbx),%rsi
    8d4d:	48 85 f6             	test   %rsi,%rsi
    8d50:	74 0e                	je     8d60 <imgstat+0x8b>
    8d52:	48 8d 3d 64 9f 01 00 	lea    0x19f64(%rip),%rdi        # 22cbd <.LC7>
    8d59:	31 c0                	xor    %eax,%eax
    8d5b:	e8 3e e4 00 00       	call   1719e <printf>
    8d60:	48 8d 3d 68 ac 01 00 	lea    0x1ac68(%rip),%rdi        # 239cf <.LC0>
    8d67:	31 c0                	xor    %eax,%eax
    8d69:	5b                   	pop    %rbx
    8d6a:	e9 2f e4 00 00       	jmp    1719e <printf>

0000000000008d6f <initialise>:
    8d6f:	f3 0f 1e fa          	endbr64 
    8d73:	55                   	push   %rbp
    8d74:	48 8d 2d 95 fe 01 00 	lea    0x1fe95(%rip),%rbp        # 28c10 <ipv4_stats_family>
    8d7b:	53                   	push   %rbx
    8d7c:	48 8d 1d 45 fe 01 00 	lea    0x1fe45(%rip),%rbx        # 28bc8 <efi_console_init_fn>
    8d83:	52                   	push   %rdx
    8d84:	48 39 eb             	cmp    %rbp,%rbx
    8d87:	73 08                	jae    8d91 <initialise+0x22>
    8d89:	ff 13                	call   *(%rbx)
    8d8b:	48 83 c3 08          	add    $0x8,%rbx
    8d8f:	eb f3                	jmp    8d84 <initialise+0x15>
    8d91:	58                   	pop    %rax
    8d92:	5b                   	pop    %rbx
    8d93:	5d                   	pop    %rbp
    8d94:	c3                   	ret    

0000000000008d95 <startup>:
    8d95:	f3 0f 1e fa          	endbr64 
    8d99:	83 3d f4 0d 02 00 00 	cmpl   $0x0,0x20df4(%rip)        # 29b94 <started>
    8da0:	75 35                	jne    8dd7 <startup+0x42>
    8da2:	55                   	push   %rbp
    8da3:	48 8d 2d e6 0b 02 00 	lea    0x20be6(%rip),%rbp        # 29990 <ipv4_tcpip_protocol>
    8daa:	53                   	push   %rbx
    8dab:	48 8d 1d 7e 0b 02 00 	lea    0x20b7e(%rip),%rbx        # 29930 <heap_startup_fn>
    8db2:	52                   	push   %rdx
    8db3:	48 39 eb             	cmp    %rbp,%rbx
    8db6:	73 11                	jae    8dc9 <startup+0x34>
    8db8:	48 8b 43 08          	mov    0x8(%rbx),%rax
    8dbc:	48 85 c0             	test   %rax,%rax
    8dbf:	74 02                	je     8dc3 <startup+0x2e>
    8dc1:	ff d0                	call   *%rax
    8dc3:	48 83 c3 18          	add    $0x18,%rbx
    8dc7:	eb ea                	jmp    8db3 <startup+0x1e>
    8dc9:	c7 05 c1 0d 02 00 01 	movl   $0x1,0x20dc1(%rip)        # 29b94 <started>
    8dd0:	00 00 00 
    8dd3:	58                   	pop    %rax
    8dd4:	5b                   	pop    %rbx
    8dd5:	5d                   	pop    %rbp
    8dd6:	c3                   	ret    
    8dd7:	c3                   	ret    

0000000000008dd8 <shutdown>:
    8dd8:	f3 0f 1e fa          	endbr64 
    8ddc:	83 3d b1 0d 02 00 00 	cmpl   $0x0,0x20db1(%rip)        # 29b94 <started>
    8de3:	74 42                	je     8e27 <shutdown+0x4f>
    8de5:	41 54                	push   %r12
    8de7:	4c 8d 25 42 0b 02 00 	lea    0x20b42(%rip),%r12        # 29930 <heap_startup_fn>
    8dee:	55                   	push   %rbp
    8def:	89 fd                	mov    %edi,%ebp
    8df1:	53                   	push   %rbx
    8df2:	48 8d 1d 7f 0b 02 00 	lea    0x20b7f(%rip),%rbx        # 29978 <tcp_startup_fn>
    8df9:	4c 39 e3             	cmp    %r12,%rbx
    8dfc:	72 13                	jb     8e11 <shutdown+0x39>
    8dfe:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8e02:	48 85 c0             	test   %rax,%rax
    8e05:	74 04                	je     8e0b <shutdown+0x33>
    8e07:	89 ef                	mov    %ebp,%edi
    8e09:	ff d0                	call   *%rax
    8e0b:	48 83 eb 18          	sub    $0x18,%rbx
    8e0f:	eb e8                	jmp    8df9 <shutdown+0x21>
    8e11:	31 ff                	xor    %edi,%edi
    8e13:	e8 8c 04 01 00       	call   192a4 <console_configure>
    8e18:	5b                   	pop    %rbx
    8e19:	5d                   	pop    %rbp
    8e1a:	c7 05 70 0d 02 00 00 	movl   $0x0,0x20d70(%rip)        # 29b94 <started>
    8e21:	00 00 00 
    8e24:	41 5c                	pop    %r12
    8e26:	c3                   	ret    
    8e27:	c3                   	ret    

0000000000008e28 <intel_write_eeprom>:
    8e28:	f3 0f 1e fa          	endbr64 
    8e2c:	b8 7d bf 9a c3       	mov    $0xc39abf7d,%eax
    8e31:	c3                   	ret    

0000000000008e32 <intel_describe_tx>:
    8e32:	f3 0f 1e fa          	endbr64 
    8e36:	48 89 37             	mov    %rsi,(%rdi)
    8e39:	66 89 57 08          	mov    %dx,0x8(%rdi)
    8e3d:	c7 47 0a 00 0b 00 00 	movl   $0xb00,0xa(%rdi)
    8e44:	66 c7 47 0e 00 00    	movw   $0x0,0xe(%rdi)
    8e4a:	c3                   	ret    

0000000000008e4b <intel_describe_rx>:
    8e4b:	f3 0f 1e fa          	endbr64 
    8e4f:	48 89 37             	mov    %rsi,(%rdi)
    8e52:	66 c7 47 08 00 00    	movw   $0x0,0x8(%rdi)
    8e58:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%rdi)
    8e5f:	c3                   	ret    

0000000000008e60 <intel_transmit>:
    8e60:	f3 0f 1e fa          	endbr64 
    8e64:	55                   	push   %rbp
    8e65:	53                   	push   %rbx
    8e66:	51                   	push   %rcx
    8e67:	48 8b 9f c8 01 00 00 	mov    0x1c8(%rdi),%rbx
    8e6e:	8b 7b 50             	mov    0x50(%rbx),%edi
    8e71:	89 f8                	mov    %edi,%eax
    8e73:	2b 43 54             	sub    0x54(%rbx),%eax
    8e76:	83 f8 0e             	cmp    $0xe,%eax
    8e79:	76 07                	jbe    8e82 <intel_transmit+0x22>
    8e7b:	b8 77 bf 9a d5       	mov    $0xd59abf77,%eax
    8e80:	eb 3a                	jmp    8ebc <intel_transmit+0x5c>
    8e82:	4c 8b 46 18          	mov    0x18(%rsi),%r8
    8e86:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    8e8a:	8d 6f 01             	lea    0x1(%rdi),%ebp
    8e8d:	83 e7 0f             	and    $0xf,%edi
    8e90:	89 6b 50             	mov    %ebp,0x50(%rbx)
    8e93:	48 c1 e7 04          	shl    $0x4,%rdi
    8e97:	83 e5 0f             	and    $0xf,%ebp
    8e9a:	48 03 7b 48          	add    0x48(%rbx),%rdi
    8e9e:	4c 29 c2             	sub    %r8,%rdx
    8ea1:	4c 89 c6             	mov    %r8,%rsi
    8ea4:	ff 53 68             	call   *0x68(%rbx)
    8ea7:	f0 67 83 04 24 00    	lock addl $0x0,(%esp)
    8ead:	8b 43 58             	mov    0x58(%rbx),%eax
    8eb0:	48 8b 13             	mov    (%rbx),%rdx
    8eb3:	48 8d 44 02 18       	lea    0x18(%rdx,%rax,1),%rax
    8eb8:	89 28                	mov    %ebp,(%rax)
    8eba:	31 c0                	xor    %eax,%eax
    8ebc:	5a                   	pop    %rdx
    8ebd:	5b                   	pop    %rbx
    8ebe:	5d                   	pop    %rbp
    8ebf:	c3                   	ret    

0000000000008ec0 <intel_irq>:
    8ec0:	f3 0f 1e fa          	endbr64 
    8ec4:	48 8b 87 c8 01 00 00 	mov    0x1c8(%rdi),%rax
    8ecb:	48 8b 00             	mov    (%rax),%rax
    8ece:	85 f6                	test   %esi,%esi
    8ed0:	74 0b                	je     8edd <intel_irq+0x1d>
    8ed2:	c7 80 d0 00 00 00 85 	movl   $0x85,0xd0(%rax)
    8ed9:	00 00 00 
    8edc:	c3                   	ret    
    8edd:	c7 80 d8 00 00 00 85 	movl   $0x85,0xd8(%rax)
    8ee4:	00 00 00 
    8ee7:	c3                   	ret    

0000000000008ee8 <intel_reset>:
    8ee8:	41 54                	push   %r12
    8eea:	55                   	push   %rbp
    8eeb:	53                   	push   %rbx
    8eec:	48 8b 07             	mov    (%rdi),%rax
    8eef:	48 89 fb             	mov    %rdi,%rbx
    8ef2:	8b 28                	mov    (%rax),%ebp
    8ef4:	8b 50 08             	mov    0x8(%rax),%edx
    8ef7:	f6 47 0c 01          	testb  $0x1,0xc(%rdi)
    8efb:	74 20                	je     8f1d <intel_reset+0x35>
    8efd:	8b 90 08 10 00 00    	mov    0x1008(%rax),%edx
    8f03:	8b 90 00 10 00 00    	mov    0x1000(%rax),%edx
    8f09:	c7 80 00 10 00 00 08 	movl   $0x8,0x1000(%rax)
    8f10:	00 00 00 
    8f13:	c7 80 08 10 00 00 10 	movl   $0x10,0x1008(%rax)
    8f1a:	00 00 00 
    8f1d:	89 ea                	mov    %ebp,%edx
    8f1f:	bf 14 00 00 00       	mov    $0x14,%edi
    8f24:	81 ca 00 00 00 04    	or     $0x4000000,%edx
    8f2a:	89 10                	mov    %edx,(%rax)
    8f2c:	e8 ca cd 00 00       	call   15cfb <mdelay>
    8f31:	f6 43 0c 08          	testb  $0x8,0xc(%rbx)
    8f35:	75 03                	jne    8f3a <intel_reset+0x52>
    8f37:	83 cd 20             	or     $0x20,%ebp
    8f3a:	81 e5 f7 e7 ff ff    	and    $0xffffe7f7,%ebp
    8f40:	48 8b 03             	mov    (%rbx),%rax
    8f43:	bf 14 00 00 00       	mov    $0x14,%edi
    8f48:	41 89 ec             	mov    %ebp,%r12d
    8f4b:	41 83 cc 40          	or     $0x40,%r12d
    8f4f:	44 89 20             	mov    %r12d,(%rax)
    8f52:	e8 a4 cd 00 00       	call   15cfb <mdelay>
    8f57:	48 8b 0b             	mov    (%rbx),%rcx
    8f5a:	8b 53 0c             	mov    0xc(%rbx),%edx
    8f5d:	8b 41 08             	mov    0x8(%rcx),%eax
    8f60:	83 e2 04             	and    $0x4,%edx
    8f63:	83 e0 02             	and    $0x2,%eax
    8f66:	09 c2                	or     %eax,%edx
    8f68:	75 29                	jne    8f93 <intel_reset+0xab>
    8f6a:	89 e8                	mov    %ebp,%eax
    8f6c:	bf 14 00 00 00       	mov    $0x14,%edi
    8f71:	0d 40 00 00 84       	or     $0x84000040,%eax
    8f76:	89 01                	mov    %eax,(%rcx)
    8f78:	e8 7e cd 00 00       	call   15cfb <mdelay>
    8f7d:	48 8b 03             	mov    (%rbx),%rax
    8f80:	bf 14 00 00 00       	mov    $0x14,%edi
    8f85:	44 89 20             	mov    %r12d,(%rax)
    8f88:	e8 6e cd 00 00       	call   15cfb <mdelay>
    8f8d:	48 8b 03             	mov    (%rbx),%rax
    8f90:	8b 40 08             	mov    0x8(%rax),%eax
    8f93:	5b                   	pop    %rbx
    8f94:	31 c0                	xor    %eax,%eax
    8f96:	5d                   	pop    %rbp
    8f97:	41 5c                	pop    %r12
    8f99:	c3                   	ret    

0000000000008f9a <intel_remove>:
    8f9a:	f3 0f 1e fa          	endbr64 
    8f9e:	41 54                	push   %r12
    8fa0:	55                   	push   %rbp
    8fa1:	50                   	push   %rax
    8fa2:	48 8b af a8 00 00 00 	mov    0xa8(%rdi),%rbp
    8fa9:	4c 8b a5 c8 01 00 00 	mov    0x1c8(%rbp),%r12
    8fb0:	48 89 ef             	mov    %rbp,%rdi
    8fb3:	e8 56 4f 00 00       	call   df0e <unregister_netdev>
    8fb8:	4c 89 e7             	mov    %r12,%rdi
    8fbb:	e8 28 ff ff ff       	call   8ee8 <intel_reset>
    8fc0:	48 8d 05 79 d9 01 00 	lea    0x1d979(%rip),%rax        # 26940 <null_netdev_operations>
    8fc7:	48 89 ef             	mov    %rbp,%rdi
    8fca:	48 89 45 48          	mov    %rax,0x48(%rbp)
    8fce:	5a                   	pop    %rdx
    8fcf:	5d                   	pop    %rbp
    8fd0:	41 5c                	pop    %r12
    8fd2:	e9 67 6e 00 00       	jmp    fe3e <ref_decrement>

0000000000008fd7 <intel_check_link>:
    8fd7:	48 8b 87 c8 01 00 00 	mov    0x1c8(%rdi),%rax
    8fde:	48 8b 00             	mov    (%rax),%rax
    8fe1:	8b 40 08             	mov    0x8(%rax),%eax
    8fe4:	a8 02                	test   $0x2,%al
    8fe6:	74 07                	je     8fef <intel_check_link+0x18>
    8fe8:	31 f6                	xor    %esi,%esi
    8fea:	e9 39 4a 00 00       	jmp    da28 <netdev_link_err>
    8fef:	e9 5d 4a 00 00       	jmp    da51 <netdev_link_down>

0000000000008ff4 <intel_probe>:
    8ff4:	f3 0f 1e fa          	endbr64 
    8ff8:	41 55                	push   %r13
    8ffa:	49 89 fd             	mov    %rdi,%r13
    8ffd:	bf 18 01 00 00       	mov    $0x118,%edi
    9002:	41 54                	push   %r12
    9004:	55                   	push   %rbp
    9005:	53                   	push   %rbx
    9006:	51                   	push   %rcx
    9007:	e8 07 4a 01 00       	call   1da13 <alloc_etherdev>
    900c:	48 85 c0             	test   %rax,%rax
    900f:	75 0b                	jne    901c <intel_probe+0x28>
    9011:	41 bd 77 bf 9a ce    	mov    $0xce9abf77,%r13d
    9017:	e9 cf 01 00 00       	jmp    91eb <intel_probe+0x1f7>
    901c:	49 89 c4             	mov    %rax,%r12
    901f:	48 8d 05 7a d3 01 00 	lea    0x1d37a(%rip),%rax        # 263a0 <intel_operations>
    9026:	b9 18 01 00 00       	mov    $0x118,%ecx
    902b:	49 8b ac 24 c8 01 00 	mov    0x1c8(%r12),%rbp
    9032:	00 
    9033:	49 89 44 24 48       	mov    %rax,0x48(%r12)
    9038:	31 c0                	xor    %eax,%eax
    903a:	4d 89 a5 a8 00 00 00 	mov    %r12,0xa8(%r13)
    9041:	48 89 ef             	mov    %rbp,%rdi
    9044:	4d 89 6c 24 40       	mov    %r13,0x40(%r12)
    9049:	f3 aa                	rep stos %al,%es:(%rdi)
    904b:	41 8b 85 9c 00 00 00 	mov    0x9c(%r13),%eax
    9052:	4c 89 ef             	mov    %r13,%rdi
    9055:	83 e0 07             	and    $0x7,%eax
    9058:	89 45 08             	mov    %eax,0x8(%rbp)
    905b:	49 8b 85 b0 00 00 00 	mov    0xb0(%r13),%rax
    9062:	48 8b 40 10          	mov    0x10(%rax),%rax
    9066:	48 c7 45 60 00 01 00 	movq   $0x100,0x60(%rbp)
    906d:	00 
    906e:	c7 45 58 00 38 00 00 	movl   $0x3800,0x58(%rbp)
    9075:	89 45 0c             	mov    %eax,0xc(%rbp)
    9078:	48 8d 05 b3 fd ff ff 	lea    -0x24d(%rip),%rax        # 8e32 <intel_describe_tx>
    907f:	48 89 45 68          	mov    %rax,0x68(%rbp)
    9083:	48 8d 05 c1 fd ff ff 	lea    -0x23f(%rip),%rax        # 8e4b <intel_describe_rx>
    908a:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
    9091:	48 c7 85 88 00 00 00 	movq   $0x100,0x88(%rbp)
    9098:	00 01 00 00 
    909c:	c7 85 80 00 00 00 00 	movl   $0x2800,0x80(%rbp)
    90a3:	28 00 00 
    90a6:	e8 b4 61 00 00       	call   f25f <adjust_pci_device>
    90ab:	49 8b 85 80 00 00 00 	mov    0x80(%r13),%rax
    90b2:	48 89 45 00          	mov    %rax,0x0(%rbp)
    90b6:	48 85 c0             	test   %rax,%rax
    90b9:	75 0b                	jne    90c6 <intel_probe+0xd2>
    90bb:	41 bd 79 bf 9a d3    	mov    $0xd39abf79,%r13d
    90c1:	e9 11 01 00 00       	jmp    91d7 <intel_probe+0x1e3>
    90c6:	48 89 ef             	mov    %rbp,%rdi
    90c9:	e8 1a fe ff ff       	call   8ee8 <intel_reset>
    90ce:	41 89 c5             	mov    %eax,%r13d
    90d1:	85 c0                	test   %eax,%eax
    90d3:	0f 85 fe 00 00 00    	jne    91d7 <intel_probe+0x1e3>
    90d9:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
    90dd:	8b 91 00 54 00 00    	mov    0x5400(%rcx),%edx
    90e3:	8b 99 04 54 00 00    	mov    0x5404(%rcx),%ebx
    90e9:	f6 c2 01             	test   $0x1,%dl
    90ec:	75 2d                	jne    911b <intel_probe+0x127>
    90ee:	0f b6 c6             	movzbl %dh,%eax
    90f1:	89 d6                	mov    %edx,%esi
    90f3:	c1 ee 10             	shr    $0x10,%esi
    90f6:	09 d0                	or     %edx,%eax
    90f8:	09 f0                	or     %esi,%eax
    90fa:	89 d6                	mov    %edx,%esi
    90fc:	c1 ee 18             	shr    $0x18,%esi
    90ff:	09 f0                	or     %esi,%eax
    9101:	0f b6 f7             	movzbl %bh,%esi
    9104:	09 d8                	or     %ebx,%eax
    9106:	40 08 f0             	or     %sil,%al
    9109:	74 10                	je     911b <intel_probe+0x127>
    910b:	41 89 54 24 58       	mov    %edx,0x58(%r12)
    9110:	66 41 89 5c 24 5c    	mov    %bx,0x5c(%r12)
    9116:	e9 95 00 00 00       	jmp    91b0 <intel_probe+0x1bc>
    911b:	48 b8 01 00 00 00 40 	movabs $0x4000000001,%rax
    9122:	00 00 00 
    9125:	c7 45 20 01 00 00 00 	movl   $0x1,0x20(%rbp)
    912c:	41 bd 64 00 00 00    	mov    $0x64,%r13d
    9132:	48 89 45 18          	mov    %rax,0x18(%rbp)
    9136:	48 8d 05 b9 00 00 00 	lea    0xb9(%rip),%rax        # 91f6 <intel_read_eeprom>
    913d:	48 89 45 28          	mov    %rax,0x28(%rbp)
    9141:	48 8d 05 e0 fc ff ff 	lea    -0x320(%rip),%rax        # 8e28 <intel_write_eeprom>
    9148:	48 89 45 30          	mov    %rax,0x30(%rbp)
    914c:	c7 41 14 01 00 00 00 	movl   $0x1,0x14(%rcx)
    9153:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9157:	8b 40 14             	mov    0x14(%rax),%eax
    915a:	a8 02                	test   $0x2,%al
    915c:	75 15                	jne    9173 <intel_probe+0x17f>
    915e:	a8 10                	test   $0x10,%al
    9160:	75 1d                	jne    917f <intel_probe+0x18b>
    9162:	bf 01 00 00 00       	mov    $0x1,%edi
    9167:	e8 8f cb 00 00       	call   15cfb <mdelay>
    916c:	41 ff cd             	dec    %r13d
    916f:	75 e2                	jne    9153 <intel_probe+0x15f>
    9171:	eb 56                	jmp    91c9 <intel_probe+0x1d5>
    9173:	ba 02 00 00 00       	mov    $0x2,%edx
    9178:	b8 02 00 00 00       	mov    $0x2,%eax
    917d:	eb 0a                	jmp    9189 <intel_probe+0x195>
    917f:	ba 10 00 00 00       	mov    $0x10,%edx
    9184:	b8 08 00 00 00       	mov    $0x8,%eax
    9189:	89 55 38             	mov    %edx,0x38(%rbp)
    918c:	31 f6                	xor    %esi,%esi
    918e:	49 8d 54 24 58       	lea    0x58(%r12),%rdx
    9193:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    9197:	89 45 3c             	mov    %eax,0x3c(%rbp)
    919a:	b9 06 00 00 00       	mov    $0x6,%ecx
    919f:	e8 c0 57 00 00       	call   e964 <nvs_read>
    91a4:	85 c0                	test   %eax,%eax
    91a6:	75 21                	jne    91c9 <intel_probe+0x1d5>
    91a8:	8b 45 08             	mov    0x8(%rbp),%eax
    91ab:	41 30 44 24 5d       	xor    %al,0x5d(%r12)
    91b0:	4c 89 e7             	mov    %r12,%rdi
    91b3:	e8 b7 4e 00 00       	call   e06f <register_netdev>
    91b8:	41 89 c5             	mov    %eax,%r13d
    91bb:	85 c0                	test   %eax,%eax
    91bd:	75 10                	jne    91cf <intel_probe+0x1db>
    91bf:	4c 89 e7             	mov    %r12,%rdi
    91c2:	e8 10 fe ff ff       	call   8fd7 <intel_check_link>
    91c7:	eb 22                	jmp    91eb <intel_probe+0x1f7>
    91c9:	41 bd 72 bf 9a d2    	mov    $0xd29abf72,%r13d
    91cf:	48 89 ef             	mov    %rbp,%rdi
    91d2:	e8 11 fd ff ff       	call   8ee8 <intel_reset>
    91d7:	48 8d 05 62 d7 01 00 	lea    0x1d762(%rip),%rax        # 26940 <null_netdev_operations>
    91de:	4c 89 e7             	mov    %r12,%rdi
    91e1:	49 89 44 24 48       	mov    %rax,0x48(%r12)
    91e6:	e8 53 6c 00 00       	call   fe3e <ref_decrement>
    91eb:	5a                   	pop    %rdx
    91ec:	44 89 e8             	mov    %r13d,%eax
    91ef:	5b                   	pop    %rbx
    91f0:	5d                   	pop    %rbp
    91f1:	41 5c                	pop    %r12
    91f3:	41 5d                	pop    %r13
    91f5:	c3                   	ret    

00000000000091f6 <intel_read_eeprom>:
    91f6:	f3 0f 1e fa          	endbr64 
    91fa:	41 54                	push   %r12
    91fc:	41 bc 64 00 00 00    	mov    $0x64,%r12d
    9202:	55                   	push   %rbp
    9203:	48 89 d5             	mov    %rdx,%rbp
    9206:	53                   	push   %rbx
    9207:	8b 4f 24             	mov    0x24(%rdi),%ecx
    920a:	48 89 fb             	mov    %rdi,%rbx
    920d:	48 8b 47 e8          	mov    -0x18(%rdi),%rax
    9211:	d3 e6                	shl    %cl,%esi
    9213:	83 ce 01             	or     $0x1,%esi
    9216:	89 70 14             	mov    %esi,0x14(%rax)
    9219:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    921d:	8b 40 14             	mov    0x14(%rax),%eax
    9220:	89 c2                	mov    %eax,%edx
    9222:	23 53 20             	and    0x20(%rbx),%edx
    9225:	75 16                	jne    923d <intel_read_eeprom+0x47>
    9227:	bf 01 00 00 00       	mov    $0x1,%edi
    922c:	e8 ca ca 00 00       	call   15cfb <mdelay>
    9231:	41 ff cc             	dec    %r12d
    9234:	75 e3                	jne    9219 <intel_read_eeprom+0x23>
    9236:	b8 6e bf 9a b3       	mov    $0xb39abf6e,%eax
    923b:	eb 09                	jmp    9246 <intel_read_eeprom+0x50>
    923d:	c1 e8 10             	shr    $0x10,%eax
    9240:	66 89 45 00          	mov    %ax,0x0(%rbp)
    9244:	31 c0                	xor    %eax,%eax
    9246:	5b                   	pop    %rbx
    9247:	5d                   	pop    %rbp
    9248:	41 5c                	pop    %r12
    924a:	c3                   	ret    

000000000000924b <intel_reset_ring>:
    924b:	f3 0f 1e fa          	endbr64 
    924f:	41 55                	push   %r13
    9251:	41 54                	push   %r12
    9253:	41 bc 64 00 00 00    	mov    $0x64,%r12d
    9259:	55                   	push   %rbp
    925a:	48 89 fd             	mov    %rdi,%rbp
    925d:	53                   	push   %rbx
    925e:	89 f3                	mov    %esi,%ebx
    9260:	52                   	push   %rdx
    9261:	48 8b 07             	mov    (%rdi),%rax
    9264:	4c 8d 6b 28          	lea    0x28(%rbx),%r13
    9268:	4c 01 e8             	add    %r13,%rax
    926b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    9271:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9275:	4c 01 e8             	add    %r13,%rax
    9278:	8b 00                	mov    (%rax),%eax
    927a:	0f ba e0 19          	bt     $0x19,%eax
    927e:	73 0f                	jae    928f <intel_reset_ring+0x44>
    9280:	bf 01 00 00 00       	mov    $0x1,%edi
    9285:	e8 71 ca 00 00       	call   15cfb <mdelay>
    928a:	41 ff cc             	dec    %r12d
    928d:	75 e2                	jne    9271 <intel_reset_ring+0x26>
    928f:	48 8b 45 00          	mov    0x0(%rbp),%rax
    9293:	48 8d 54 18 08       	lea    0x8(%rax,%rbx,1),%rdx
    9298:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    929e:	48 8d 54 18 04       	lea    0x4(%rax,%rbx,1),%rdx
    92a3:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    92a9:	48 8d 14 18          	lea    (%rax,%rbx,1),%rdx
    92ad:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    92b3:	48 8d 54 18 10       	lea    0x10(%rax,%rbx,1),%rdx
    92b8:	48 8d 44 18 18       	lea    0x18(%rax,%rbx,1),%rax
    92bd:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    92c3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    92c9:	58                   	pop    %rax
    92ca:	5b                   	pop    %rbx
    92cb:	5d                   	pop    %rbp
    92cc:	41 5c                	pop    %r12
    92ce:	41 5d                	pop    %r13
    92d0:	c3                   	ret    

00000000000092d1 <intel_create_ring>:
    92d1:	f3 0f 1e fa          	endbr64 
    92d5:	41 54                	push   %r12
    92d7:	31 d2                	xor    %edx,%edx
    92d9:	49 89 fc             	mov    %rdi,%r12
    92dc:	55                   	push   %rbp
    92dd:	53                   	push   %rbx
    92de:	48 8b 6e 18          	mov    0x18(%rsi),%rbp
    92e2:	48 89 f3             	mov    %rsi,%rbx
    92e5:	48 89 ef             	mov    %rbp,%rdi
    92e8:	48 89 ee             	mov    %rbp,%rsi
    92eb:	e8 3d 31 00 00       	call   c42d <alloc_memblock>
    92f0:	48 89 c2             	mov    %rax,%rdx
    92f3:	48 85 c0             	test   %rax,%rax
    92f6:	74 0f                	je     9307 <intel_create_ring+0x36>
    92f8:	48 85 ed             	test   %rbp,%rbp
    92fb:	74 0a                	je     9307 <intel_create_ring+0x36>
    92fd:	48 89 c7             	mov    %rax,%rdi
    9300:	48 89 e9             	mov    %rbp,%rcx
    9303:	31 c0                	xor    %eax,%eax
    9305:	f3 aa                	rep stos %al,%es:(%rdi)
    9307:	48 89 13             	mov    %rdx,(%rbx)
    930a:	48 85 d2             	test   %rdx,%rdx
    930d:	75 07                	jne    9316 <intel_create_ring+0x45>
    930f:	b8 77 bf 9a ce       	mov    $0xce9abf77,%eax
    9314:	eb 65                	jmp    937b <intel_create_ring+0xaa>
    9316:	48 89 d7             	mov    %rdx,%rdi
    9319:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    931d:	31 c0                	xor    %eax,%eax
    931f:	f3 aa                	rep stos %al,%es:(%rdi)
    9321:	49 8b 04 24          	mov    (%r12),%rax
    9325:	8b 4b 10             	mov    0x10(%rbx),%ecx
    9328:	48 8b 13             	mov    (%rbx),%rdx
    932b:	48 01 c1             	add    %rax,%rcx
    932e:	89 11                	mov    %edx,(%rcx)
    9330:	8b 4b 10             	mov    0x10(%rbx),%ecx
    9333:	48 c1 ea 20          	shr    $0x20,%rdx
    9337:	48 8d 4c 08 04       	lea    0x4(%rax,%rcx,1),%rcx
    933c:	89 11                	mov    %edx,(%rcx)
    933e:	8b 53 10             	mov    0x10(%rbx),%edx
    9341:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    9345:	48 8d 54 10 08       	lea    0x8(%rax,%rdx,1),%rdx
    934a:	89 0a                	mov    %ecx,(%rdx)
    934c:	8b 53 10             	mov    0x10(%rbx),%edx
    934f:	48 8d 54 10 10       	lea    0x10(%rax,%rdx,1),%rdx
    9354:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    935a:	8b 53 10             	mov    0x10(%rbx),%edx
    935d:	48 8d 54 10 18       	lea    0x18(%rax,%rdx,1),%rdx
    9362:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    9368:	8b 53 10             	mov    0x10(%rbx),%edx
    936b:	48 8d 54 10 28       	lea    0x28(%rax,%rdx,1),%rdx
    9370:	8b 02                	mov    (%rdx),%eax
    9372:	0d 00 00 00 02       	or     $0x2000000,%eax
    9377:	89 02                	mov    %eax,(%rdx)
    9379:	31 c0                	xor    %eax,%eax
    937b:	5b                   	pop    %rbx
    937c:	5d                   	pop    %rbp
    937d:	41 5c                	pop    %r12
    937f:	c3                   	ret    

0000000000009380 <intel_destroy_ring>:
    9380:	f3 0f 1e fa          	endbr64 
    9384:	53                   	push   %rbx
    9385:	48 89 f3             	mov    %rsi,%rbx
    9388:	8b 76 10             	mov    0x10(%rsi),%esi
    938b:	e8 bb fe ff ff       	call   924b <intel_reset_ring>
    9390:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    9394:	48 8b 3b             	mov    (%rbx),%rdi
    9397:	e8 6a 31 00 00       	call   c506 <free_memblock>
    939c:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    93a3:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    93aa:	00 
    93ab:	5b                   	pop    %rbx
    93ac:	c3                   	ret    

00000000000093ad <intel_refill_rx>:
    93ad:	f3 0f 1e fa          	endbr64 
    93b1:	41 55                	push   %r13
    93b3:	45 31 ed             	xor    %r13d,%r13d
    93b6:	41 54                	push   %r12
    93b8:	55                   	push   %rbp
    93b9:	53                   	push   %rbx
    93ba:	48 89 fb             	mov    %rdi,%rbx
    93bd:	52                   	push   %rdx
    93be:	8b 43 78             	mov    0x78(%rbx),%eax
    93c1:	2b 43 7c             	sub    0x7c(%rbx),%eax
    93c4:	83 f8 07             	cmp    $0x7,%eax
    93c7:	77 12                	ja     93db <intel_refill_rx+0x2e>
    93c9:	bf 00 08 00 00       	mov    $0x800,%edi
    93ce:	e8 a9 08 00 00       	call   9c7c <alloc_iob>
    93d3:	49 89 c4             	mov    %rax,%r12
    93d6:	48 85 c0             	test   %rax,%rax
    93d9:	75 23                	jne    93fe <intel_refill_rx+0x51>
    93db:	45 85 ed             	test   %r13d,%r13d
    93de:	74 4f                	je     942f <intel_refill_rx+0x82>
    93e0:	f0 67 83 04 24 00    	lock addl $0x0,(%esp)
    93e6:	8b 43 78             	mov    0x78(%rbx),%eax
    93e9:	8b 93 80 00 00 00    	mov    0x80(%rbx),%edx
    93ef:	48 8b 0b             	mov    (%rbx),%rcx
    93f2:	83 e0 0f             	and    $0xf,%eax
    93f5:	48 8d 54 11 18       	lea    0x18(%rcx,%rdx,1),%rdx
    93fa:	89 02                	mov    %eax,(%rdx)
    93fc:	eb 31                	jmp    942f <intel_refill_rx+0x82>
    93fe:	8b 6b 78             	mov    0x78(%rbx),%ebp
    9401:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    9406:	31 d2                	xor    %edx,%edx
    9408:	41 ff c5             	inc    %r13d
    940b:	8d 45 01             	lea    0x1(%rbp),%eax
    940e:	83 e5 0f             	and    $0xf,%ebp
    9411:	48 89 ef             	mov    %rbp,%rdi
    9414:	89 43 78             	mov    %eax,0x78(%rbx)
    9417:	48 c1 e7 04          	shl    $0x4,%rdi
    941b:	48 03 7b 70          	add    0x70(%rbx),%rdi
    941f:	ff 93 90 00 00 00    	call   *0x90(%rbx)
    9425:	4c 89 a4 eb 98 00 00 	mov    %r12,0x98(%rbx,%rbp,8)
    942c:	00 
    942d:	eb 8f                	jmp    93be <intel_refill_rx+0x11>
    942f:	58                   	pop    %rax
    9430:	5b                   	pop    %rbx
    9431:	5d                   	pop    %rbp
    9432:	41 5c                	pop    %r12
    9434:	41 5d                	pop    %r13
    9436:	c3                   	ret    

0000000000009437 <intel_open>:
    9437:	f3 0f 1e fa          	endbr64 
    943b:	41 56                	push   %r14
    943d:	41 55                	push   %r13
    943f:	49 89 fd             	mov    %rdi,%r13
    9442:	41 54                	push   %r12
    9444:	55                   	push   %rbp
    9445:	48 83 ec 18          	sub    $0x18,%rsp
    9449:	48 8b af c8 01 00 00 	mov    0x1c8(%rdi),%rbp
    9450:	48 8b 05 19 0b 02 00 	mov    0x20b19(%rip),%rax        # 29f70 <__stack_chk_guard>
    9457:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    945c:	31 c0                	xor    %eax,%eax
    945e:	f6 45 0c 10          	testb  $0x10,0xc(%rbp)
    9462:	74 13                	je     9477 <intel_open+0x40>
    9464:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    9468:	8b 82 bc 5b 00 00    	mov    0x5bbc(%rdx),%eax
    946e:	80 cc 20             	or     $0x20,%ah
    9471:	89 82 bc 5b 00 00    	mov    %eax,0x5bbc(%rdx)
    9477:	4c 8d 75 48          	lea    0x48(%rbp),%r14
    947b:	48 89 ef             	mov    %rbp,%rdi
    947e:	4c 89 f6             	mov    %r14,%rsi
    9481:	e8 4b fe ff ff       	call   92d1 <intel_create_ring>
    9486:	41 89 c4             	mov    %eax,%r12d
    9489:	85 c0                	test   %eax,%eax
    948b:	0f 85 9c 00 00 00    	jne    952d <intel_open+0xf6>
    9491:	48 8d 75 70          	lea    0x70(%rbp),%rsi
    9495:	48 89 ef             	mov    %rbp,%rdi
    9498:	e8 34 fe ff ff       	call   92d1 <intel_create_ring>
    949d:	41 89 c4             	mov    %eax,%r12d
    94a0:	85 c0                	test   %eax,%eax
    94a2:	74 0d                	je     94b1 <intel_open+0x7a>
    94a4:	4c 89 f6             	mov    %r14,%rsi
    94a7:	48 89 ef             	mov    %rbp,%rdi
    94aa:	e8 d1 fe ff ff       	call   9380 <intel_destroy_ring>
    94af:	eb 7c                	jmp    952d <intel_open+0xf6>
    94b1:	41 8b 45 64          	mov    0x64(%r13),%eax
    94b5:	41 8b 55 60          	mov    0x60(%r13),%edx
    94b9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    94c0:	00 
    94c1:	48 89 ef             	mov    %rbp,%rdi
    94c4:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
    94c9:	48 8b 45 00          	mov    0x0(%rbp),%rax
    94cd:	89 90 00 54 00 00    	mov    %edx,0x5400(%rax)
    94d3:	8b 54 24 04          	mov    0x4(%rsp),%edx
    94d7:	81 ca 00 00 00 80    	or     $0x80000000,%edx
    94dd:	89 90 04 54 00 00    	mov    %edx,0x5404(%rax)
    94e3:	8b 90 00 04 00 00    	mov    0x400(%rax),%edx
    94e9:	81 e2 0f 00 c0 ff    	and    $0xffc0000f,%edx
    94ef:	81 ca fa 00 04 00    	or     $0x400fa,%edx
    94f5:	89 90 00 04 00 00    	mov    %edx,0x400(%rax)
    94fb:	8b 90 00 01 00 00    	mov    0x100(%rax),%edx
    9501:	81 e2 ff ff fc fd    	and    $0xfdfcffff,%edx
    9507:	81 ca 1a 80 00 04    	or     $0x400801a,%edx
    950d:	89 90 00 01 00 00    	mov    %edx,0x100(%rax)
    9513:	e8 95 fe ff ff       	call   93ad <intel_refill_rx>
    9518:	4c 89 ef             	mov    %r13,%rdi
    951b:	e8 b7 fa ff ff       	call   8fd7 <intel_check_link>
    9520:	f6 45 0c 02          	testb  $0x2,0xc(%rbp)
    9524:	74 07                	je     952d <intel_open+0xf6>
    9526:	c7 45 10 80 00 00 00 	movl   $0x80,0x10(%rbp)
    952d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9532:	48 2b 05 37 0a 02 00 	sub    0x20a37(%rip),%rax        # 29f70 <__stack_chk_guard>
    9539:	74 05                	je     9540 <intel_open+0x109>
    953b:	e8 20 95 ff ff       	call   2a60 <__stack_chk_fail>
    9540:	48 83 c4 18          	add    $0x18,%rsp
    9544:	44 89 e0             	mov    %r12d,%eax
    9547:	5d                   	pop    %rbp
    9548:	41 5c                	pop    %r12
    954a:	41 5d                	pop    %r13
    954c:	41 5e                	pop    %r14
    954e:	c3                   	ret    

000000000000954f <intel_empty_rx>:
    954f:	f3 0f 1e fa          	endbr64 
    9553:	55                   	push   %rbp
    9554:	48 89 fd             	mov    %rdi,%rbp
    9557:	53                   	push   %rbx
    9558:	31 db                	xor    %ebx,%ebx
    955a:	52                   	push   %rdx
    955b:	48 8b bc 1d 98 00 00 	mov    0x98(%rbp,%rbx,1),%rdi
    9562:	00 
    9563:	48 85 ff             	test   %rdi,%rdi
    9566:	74 05                	je     956d <intel_empty_rx+0x1e>
    9568:	e8 29 07 00 00       	call   9c96 <free_iob>
    956d:	48 c7 84 1d 98 00 00 	movq   $0x0,0x98(%rbp,%rbx,1)
    9574:	00 00 00 00 00 
    9579:	48 83 c3 08          	add    $0x8,%rbx
    957d:	48 81 fb 80 00 00 00 	cmp    $0x80,%rbx
    9584:	75 d5                	jne    955b <intel_empty_rx+0xc>
    9586:	58                   	pop    %rax
    9587:	5b                   	pop    %rbx
    9588:	5d                   	pop    %rbp
    9589:	c3                   	ret    

000000000000958a <intel_close>:
    958a:	f3 0f 1e fa          	endbr64 
    958e:	55                   	push   %rbp
    958f:	48 8b af c8 01 00 00 	mov    0x1c8(%rdi),%rbp
    9596:	48 8b 45 00          	mov    0x0(%rbp),%rax
    959a:	48 8d 75 70          	lea    0x70(%rbp),%rsi
    959e:	48 89 ef             	mov    %rbp,%rdi
    95a1:	c7 80 00 01 00 00 00 	movl   $0x0,0x100(%rax)
    95a8:	00 00 00 
    95ab:	c7 80 00 04 00 00 00 	movl   $0x0,0x400(%rax)
    95b2:	00 00 00 
    95b5:	e8 c6 fd ff ff       	call   9380 <intel_destroy_ring>
    95ba:	48 89 ef             	mov    %rbp,%rdi
    95bd:	e8 8d ff ff ff       	call   954f <intel_empty_rx>
    95c2:	48 89 ef             	mov    %rbp,%rdi
    95c5:	48 8d 75 48          	lea    0x48(%rbp),%rsi
    95c9:	e8 b2 fd ff ff       	call   9380 <intel_destroy_ring>
    95ce:	48 89 ef             	mov    %rbp,%rdi
    95d1:	5d                   	pop    %rbp
    95d2:	e9 11 f9 ff ff       	jmp    8ee8 <intel_reset>

00000000000095d7 <intel_poll_tx>:
    95d7:	f3 0f 1e fa          	endbr64 
    95db:	55                   	push   %rbp
    95dc:	48 89 fd             	mov    %rdi,%rbp
    95df:	53                   	push   %rbx
    95e0:	52                   	push   %rdx
    95e1:	48 8b 9f c8 01 00 00 	mov    0x1c8(%rdi),%rbx
    95e8:	8b 43 54             	mov    0x54(%rbx),%eax
    95eb:	3b 43 50             	cmp    0x50(%rbx),%eax
    95ee:	74 20                	je     9610 <intel_poll_tx+0x39>
    95f0:	83 e0 0f             	and    $0xf,%eax
    95f3:	48 c1 e0 04          	shl    $0x4,%rax
    95f7:	48 03 43 48          	add    0x48(%rbx),%rax
    95fb:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
    95ff:	74 0f                	je     9610 <intel_poll_tx+0x39>
    9601:	31 f6                	xor    %esi,%esi
    9603:	48 89 ef             	mov    %rbp,%rdi
    9606:	e8 75 45 00 00       	call   db80 <netdev_tx_complete_next_err>
    960b:	ff 43 54             	incl   0x54(%rbx)
    960e:	eb d8                	jmp    95e8 <intel_poll_tx+0x11>
    9610:	58                   	pop    %rax
    9611:	5b                   	pop    %rbx
    9612:	5d                   	pop    %rbp
    9613:	c3                   	ret    

0000000000009614 <intel_poll_rx>:
    9614:	f3 0f 1e fa          	endbr64 
    9618:	55                   	push   %rbp
    9619:	48 89 fd             	mov    %rdi,%rbp
    961c:	53                   	push   %rbx
    961d:	52                   	push   %rdx
    961e:	48 8b 9f c8 01 00 00 	mov    0x1c8(%rdi),%rbx
    9625:	8b 43 7c             	mov    0x7c(%rbx),%eax
    9628:	3b 43 78             	cmp    0x78(%rbx),%eax
    962b:	74 52                	je     967f <intel_poll_rx+0x6b>
    962d:	83 e0 0f             	and    $0xf,%eax
    9630:	48 89 c2             	mov    %rax,%rdx
    9633:	48 c1 e2 04          	shl    $0x4,%rdx
    9637:	48 03 53 70          	add    0x70(%rbx),%rdx
    963b:	8b 4a 0c             	mov    0xc(%rdx),%ecx
    963e:	f6 c1 01             	test   $0x1,%cl
    9641:	74 3c                	je     967f <intel_poll_rx+0x6b>
    9643:	48 83 c0 12          	add    $0x12,%rax
    9647:	48 8b 74 c3 08       	mov    0x8(%rbx,%rax,8),%rsi
    964c:	48 c7 44 c3 08 00 00 	movq   $0x0,0x8(%rbx,%rax,8)
    9653:	00 00 
    9655:	0f b7 42 08          	movzwl 0x8(%rdx),%eax
    9659:	48 01 46 20          	add    %rax,0x20(%rsi)
    965d:	0f ba e1 08          	bt     $0x8,%ecx
    9661:	73 0f                	jae    9672 <intel_poll_rx+0x5e>
    9663:	ba 68 bf 9a e2       	mov    $0xe29abf68,%edx
    9668:	48 89 ef             	mov    %rbp,%rdi
    966b:	e8 7c 45 00 00       	call   dbec <netdev_rx_err>
    9670:	eb 08                	jmp    967a <intel_poll_rx+0x66>
    9672:	48 89 ef             	mov    %rbp,%rdi
    9675:	e8 53 45 00 00       	call   dbcd <netdev_rx>
    967a:	ff 43 7c             	incl   0x7c(%rbx)
    967d:	eb a6                	jmp    9625 <intel_poll_rx+0x11>
    967f:	58                   	pop    %rax
    9680:	5b                   	pop    %rbx
    9681:	5d                   	pop    %rbp
    9682:	c3                   	ret    

0000000000009683 <intel_poll>:
    9683:	f3 0f 1e fa          	endbr64 
    9687:	41 55                	push   %r13
    9689:	41 54                	push   %r12
    968b:	55                   	push   %rbp
    968c:	53                   	push   %rbx
    968d:	51                   	push   %rcx
    968e:	4c 8b a7 c8 01 00 00 	mov    0x1c8(%rdi),%r12
    9695:	49 8b 04 24          	mov    (%r12),%rax
    9699:	8b 98 c0 00 00 00    	mov    0xc0(%rax),%ebx
    969f:	41 0b 5c 24 10       	or     0x10(%r12),%ebx
    96a4:	74 65                	je     970b <intel_poll+0x88>
    96a6:	48 89 fd             	mov    %rdi,%rbp
    96a9:	41 89 dd             	mov    %ebx,%r13d
    96ac:	f6 c3 01             	test   $0x1,%bl
    96af:	74 05                	je     96b6 <intel_poll+0x33>
    96b1:	e8 21 ff ff ff       	call   95d7 <intel_poll_tx>
    96b6:	f6 c3 c0             	test   $0xc0,%bl
    96b9:	74 08                	je     96c3 <intel_poll+0x40>
    96bb:	48 89 ef             	mov    %rbp,%rdi
    96be:	e8 51 ff ff ff       	call   9614 <intel_poll_rx>
    96c3:	f6 c3 40             	test   $0x40,%bl
    96c6:	74 0f                	je     96d7 <intel_poll+0x54>
    96c8:	ba 77 bf 9a d5       	mov    $0xd59abf77,%edx
    96cd:	31 f6                	xor    %esi,%esi
    96cf:	48 89 ef             	mov    %rbp,%rdi
    96d2:	e8 15 45 00 00       	call   dbec <netdev_rx_err>
    96d7:	80 e3 04             	and    $0x4,%bl
    96da:	74 08                	je     96e4 <intel_poll+0x61>
    96dc:	48 89 ef             	mov    %rbp,%rdi
    96df:	e8 f3 f8 ff ff       	call   8fd7 <intel_check_link>
    96e4:	41 f7 c5 28 ff ff ff 	test   $0xffffff28,%r13d
    96eb:	74 0f                	je     96fc <intel_poll+0x79>
    96ed:	ba 7d bf 9a c3       	mov    $0xc39abf7d,%edx
    96f2:	31 f6                	xor    %esi,%esi
    96f4:	48 89 ef             	mov    %rbp,%rdi
    96f7:	e8 95 43 00 00       	call   da91 <netdev_tx_err>
    96fc:	5a                   	pop    %rdx
    96fd:	4c 89 e7             	mov    %r12,%rdi
    9700:	5b                   	pop    %rbx
    9701:	5d                   	pop    %rbp
    9702:	41 5c                	pop    %r12
    9704:	41 5d                	pop    %r13
    9706:	e9 a2 fc ff ff       	jmp    93ad <intel_refill_rx>
    970b:	58                   	pop    %rax
    970c:	5b                   	pop    %rbx
    970d:	5d                   	pop    %rbp
    970e:	41 5c                	pop    %r12
    9710:	41 5d                	pop    %r13
    9712:	c3                   	ret    

0000000000009713 <null_intf_close>:
    9713:	f3 0f 1e fa          	endbr64 
    9717:	c3                   	ret    

0000000000009718 <intf_nullify>:
    9718:	f3 0f 1e fa          	endbr64 
    971c:	48 8d 05 dd cc 01 00 	lea    0x1ccdd(%rip),%rax        # 26400 <null_intf_desc>
    9723:	48 89 47 10          	mov    %rax,0x10(%rdi)
    9727:	c3                   	ret    

0000000000009728 <intf_get>:
    9728:	f3 0f 1e fa          	endbr64 
    972c:	41 54                	push   %r12
    972e:	49 89 fc             	mov    %rdi,%r12
    9731:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9735:	e8 f8 66 00 00       	call   fe32 <ref_increment>
    973a:	4c 89 e0             	mov    %r12,%rax
    973d:	41 5c                	pop    %r12
    973f:	c3                   	ret    

0000000000009740 <intf_put>:
    9740:	f3 0f 1e fa          	endbr64 
    9744:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    9748:	e9 f1 66 00 00       	jmp    fe3e <ref_decrement>

000000000000974d <intf_plug>:
    974d:	f3 0f 1e fa          	endbr64 
    9751:	55                   	push   %rbp
    9752:	48 89 f5             	mov    %rsi,%rbp
    9755:	53                   	push   %rbx
    9756:	48 89 fb             	mov    %rdi,%rbx
    9759:	48 89 f7             	mov    %rsi,%rdi
    975c:	50                   	push   %rax
    975d:	e8 c6 ff ff ff       	call   9728 <intf_get>
    9762:	48 8b 3b             	mov    (%rbx),%rdi
    9765:	e8 d6 ff ff ff       	call   9740 <intf_put>
    976a:	48 89 2b             	mov    %rbp,(%rbx)
    976d:	5a                   	pop    %rdx
    976e:	5b                   	pop    %rbx
    976f:	5d                   	pop    %rbp
    9770:	c3                   	ret    

0000000000009771 <intf_plug_plug>:
    9771:	f3 0f 1e fa          	endbr64 
    9775:	41 54                	push   %r12
    9777:	49 89 fc             	mov    %rdi,%r12
    977a:	55                   	push   %rbp
    977b:	48 89 f5             	mov    %rsi,%rbp
    977e:	50                   	push   %rax
    977f:	e8 c9 ff ff ff       	call   974d <intf_plug>
    9784:	5a                   	pop    %rdx
    9785:	4c 89 e6             	mov    %r12,%rsi
    9788:	48 89 ef             	mov    %rbp,%rdi
    978b:	5d                   	pop    %rbp
    978c:	41 5c                	pop    %r12
    978e:	e9 ba ff ff ff       	jmp    974d <intf_plug>

0000000000009793 <intf_unplug>:
    9793:	f3 0f 1e fa          	endbr64 
    9797:	53                   	push   %rbx
    9798:	48 89 fb             	mov    %rdi,%rbx
    979b:	48 8b 3f             	mov    (%rdi),%rdi
    979e:	e8 9d ff ff ff       	call   9740 <intf_put>
    97a3:	48 8d 05 36 cc 01 00 	lea    0x1cc36(%rip),%rax        # 263e0 <null_intf>
    97aa:	48 89 03             	mov    %rax,(%rbx)
    97ad:	5b                   	pop    %rbx
    97ae:	c3                   	ret    

00000000000097af <intf_object>:
    97af:	f3 0f 1e fa          	endbr64 
    97b3:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    97b7:	48 89 f8             	mov    %rdi,%rax
    97ba:	48 2b 02             	sub    (%rdx),%rax
    97bd:	c3                   	ret    

00000000000097be <intf_get_dest_op_no_passthru_untyped>:
    97be:	f3 0f 1e fa          	endbr64 
    97c2:	41 54                	push   %r12
    97c4:	49 89 d4             	mov    %rdx,%r12
    97c7:	55                   	push   %rbp
    97c8:	53                   	push   %rbx
    97c9:	48 8b 2f             	mov    (%rdi),%rbp
    97cc:	48 89 f3             	mov    %rsi,%rbx
    97cf:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    97d3:	e8 5a 66 00 00       	call   fe32 <ref_increment>
    97d8:	48 8b 45 10          	mov    0x10(%rbp),%rax
    97dc:	49 89 2c 24          	mov    %rbp,(%r12)
    97e0:	8b 50 08             	mov    0x8(%rax),%edx
    97e3:	48 8b 40 10          	mov    0x10(%rax),%rax
    97e7:	85 d2                	test   %edx,%edx
    97e9:	74 13                	je     97fe <intf_get_dest_op_no_passthru_untyped+0x40>
    97eb:	48 39 18             	cmp    %rbx,(%rax)
    97ee:	75 06                	jne    97f6 <intf_get_dest_op_no_passthru_untyped+0x38>
    97f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    97f4:	eb 0a                	jmp    9800 <intf_get_dest_op_no_passthru_untyped+0x42>
    97f6:	ff ca                	dec    %edx
    97f8:	48 83 c0 10          	add    $0x10,%rax
    97fc:	eb e9                	jmp    97e7 <intf_get_dest_op_no_passthru_untyped+0x29>
    97fe:	31 c0                	xor    %eax,%eax
    9800:	5b                   	pop    %rbx
    9801:	5d                   	pop    %rbp
    9802:	41 5c                	pop    %r12
    9804:	c3                   	ret    

0000000000009805 <intf_get_dest_op_untyped>:
    9805:	f3 0f 1e fa          	endbr64 
    9809:	41 54                	push   %r12
    980b:	49 89 f4             	mov    %rsi,%r12
    980e:	55                   	push   %rbp
    980f:	48 89 fd             	mov    %rdi,%rbp
    9812:	53                   	push   %rbx
    9813:	48 89 d3             	mov    %rdx,%rbx
    9816:	48 89 da             	mov    %rbx,%rdx
    9819:	4c 89 e6             	mov    %r12,%rsi
    981c:	48 89 ef             	mov    %rbp,%rdi
    981f:	e8 9a ff ff ff       	call   97be <intf_get_dest_op_no_passthru_untyped>
    9824:	48 85 c0             	test   %rax,%rax
    9827:	75 1a                	jne    9843 <intf_get_dest_op_untyped+0x3e>
    9829:	48 8b 3b             	mov    (%rbx),%rdi
    982c:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9830:	48 8b 6a 18          	mov    0x18(%rdx),%rbp
    9834:	48 85 ed             	test   %rbp,%rbp
    9837:	74 0a                	je     9843 <intf_get_dest_op_untyped+0x3e>
    9839:	48 01 fd             	add    %rdi,%rbp
    983c:	e8 ff fe ff ff       	call   9740 <intf_put>
    9841:	eb d3                	jmp    9816 <intf_get_dest_op_untyped+0x11>
    9843:	5b                   	pop    %rbx
    9844:	5d                   	pop    %rbp
    9845:	41 5c                	pop    %r12
    9847:	c3                   	ret    

0000000000009848 <intf_restart>:
    9848:	f3 0f 1e fa          	endbr64 
    984c:	53                   	push   %rbx
    984d:	48 89 fb             	mov    %rdi,%rbx
    9850:	e8 7a 00 00 00       	call   98cf <intf_shutdown>
    9855:	48 8b 43 18          	mov    0x18(%rbx),%rax
    9859:	48 89 43 10          	mov    %rax,0x10(%rbx)
    985d:	5b                   	pop    %rbx
    985e:	c3                   	ret    

000000000000985f <intf_close>:
    985f:	f3 0f 1e fa          	endbr64 
    9863:	41 54                	push   %r12
    9865:	55                   	push   %rbp
    9866:	89 f5                	mov    %esi,%ebp
    9868:	48 8d 35 f0 ff ff ff 	lea    -0x10(%rip),%rsi        # 985f <intf_close>
    986f:	48 83 ec 18          	sub    $0x18,%rsp
    9873:	48 8b 05 f6 06 02 00 	mov    0x206f6(%rip),%rax        # 29f70 <__stack_chk_guard>
    987a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    987f:	31 c0                	xor    %eax,%eax
    9881:	48 89 e2             	mov    %rsp,%rdx
    9884:	e8 7c ff ff ff       	call   9805 <intf_get_dest_op_untyped>
    9889:	4c 8b 24 24          	mov    (%rsp),%r12
    988d:	48 89 c1             	mov    %rax,%rcx
    9890:	4c 89 e7             	mov    %r12,%rdi
    9893:	e8 17 ff ff ff       	call   97af <intf_object>
    9898:	48 85 c9             	test   %rcx,%rcx
    989b:	74 09                	je     98a6 <intf_close+0x47>
    989d:	48 89 c7             	mov    %rax,%rdi
    98a0:	89 ee                	mov    %ebp,%esi
    98a2:	ff d1                	call   *%rcx
    98a4:	eb 07                	jmp    98ad <intf_close+0x4e>
    98a6:	89 ee                	mov    %ebp,%esi
    98a8:	e8 9b ff ff ff       	call   9848 <intf_restart>
    98ad:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    98b2:	48 2b 05 b7 06 02 00 	sub    0x206b7(%rip),%rax        # 29f70 <__stack_chk_guard>
    98b9:	74 05                	je     98c0 <intf_close+0x61>
    98bb:	e8 a0 91 ff ff       	call   2a60 <__stack_chk_fail>
    98c0:	48 83 c4 18          	add    $0x18,%rsp
    98c4:	4c 89 e7             	mov    %r12,%rdi
    98c7:	5d                   	pop    %rbp
    98c8:	41 5c                	pop    %r12
    98ca:	e9 71 fe ff ff       	jmp    9740 <intf_put>

00000000000098cf <intf_shutdown>:
    98cf:	f3 0f 1e fa          	endbr64 
    98d3:	55                   	push   %rbp
    98d4:	48 83 ec 30          	sub    $0x30,%rsp
    98d8:	48 8b 05 91 06 02 00 	mov    0x20691(%rip),%rax        # 29f70 <__stack_chk_guard>
    98df:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    98e4:	48 8d 05 15 cb 01 00 	lea    0x1cb15(%rip),%rax        # 26400 <null_intf_desc>
    98eb:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    98f0:	48 89 47 10          	mov    %rax,0x10(%rdi)
    98f4:	48 8b 07             	mov    (%rdi),%rax
    98f7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    98fc:	48 8d 05 dd ca 01 00 	lea    0x1cadd(%rip),%rax        # 263e0 <null_intf>
    9903:	48 89 07             	mov    %rax,(%rdi)
    9906:	48 89 ef             	mov    %rbp,%rdi
    9909:	e8 51 ff ff ff       	call   985f <intf_close>
    990e:	48 89 ef             	mov    %rbp,%rdi
    9911:	e8 7d fe ff ff       	call   9793 <intf_unplug>
    9916:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    991b:	48 2b 05 4e 06 02 00 	sub    0x2064e(%rip),%rax        # 29f70 <__stack_chk_guard>
    9922:	74 05                	je     9929 <intf_shutdown+0x5a>
    9924:	e8 37 91 ff ff       	call   2a60 <__stack_chk_fail>
    9929:	48 83 c4 30          	add    $0x30,%rsp
    992d:	5d                   	pop    %rbp
    992e:	c3                   	ret    

000000000000992f <intfs_vshutdown>:
    992f:	f3 0f 1e fa          	endbr64 
    9933:	55                   	push   %rbp
    9934:	b9 06 00 00 00       	mov    $0x6,%ecx
    9939:	89 f5                	mov    %esi,%ebp
    993b:	53                   	push   %rbx
    993c:	48 89 fb             	mov    %rdi,%rbx
    993f:	48 89 de             	mov    %rbx,%rsi
    9942:	48 83 ec 28          	sub    $0x28,%rsp
    9946:	48 8b 05 23 06 02 00 	mov    0x20623(%rip),%rax        # 29f70 <__stack_chk_guard>
    994d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9952:	48 89 e0             	mov    %rsp,%rax
    9955:	48 89 c7             	mov    %rax,%rdi
    9958:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    995a:	48 8d 35 9f ca 01 00 	lea    0x1ca9f(%rip),%rsi        # 26400 <null_intf_desc>
    9961:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    9966:	8b 14 24             	mov    (%rsp),%edx
    9969:	83 fa 2f             	cmp    $0x2f,%edx
    996c:	77 0d                	ja     997b <intfs_vshutdown+0x4c>
    996e:	89 d0                	mov    %edx,%eax
    9970:	83 c2 08             	add    $0x8,%edx
    9973:	89 14 24             	mov    %edx,(%rsp)
    9976:	48 01 c8             	add    %rcx,%rax
    9979:	eb 0e                	jmp    9989 <intfs_vshutdown+0x5a>
    997b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9980:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9984:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9989:	48 8b 00             	mov    (%rax),%rax
    998c:	48 85 c0             	test   %rax,%rax
    998f:	74 21                	je     99b2 <intfs_vshutdown+0x83>
    9991:	48 89 70 10          	mov    %rsi,0x10(%rax)
    9995:	eb cf                	jmp    9966 <intfs_vshutdown+0x37>
    9997:	48 8b 43 08          	mov    0x8(%rbx),%rax
    999b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    999f:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    99a3:	48 8b 38             	mov    (%rax),%rdi
    99a6:	48 85 ff             	test   %rdi,%rdi
    99a9:	74 1b                	je     99c6 <intfs_vshutdown+0x97>
    99ab:	89 ee                	mov    %ebp,%esi
    99ad:	e8 1d ff ff ff       	call   98cf <intf_shutdown>
    99b2:	8b 13                	mov    (%rbx),%edx
    99b4:	83 fa 2f             	cmp    $0x2f,%edx
    99b7:	77 de                	ja     9997 <intfs_vshutdown+0x68>
    99b9:	89 d0                	mov    %edx,%eax
    99bb:	83 c2 08             	add    $0x8,%edx
    99be:	48 03 43 10          	add    0x10(%rbx),%rax
    99c2:	89 13                	mov    %edx,(%rbx)
    99c4:	eb dd                	jmp    99a3 <intfs_vshutdown+0x74>
    99c6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    99cb:	48 2b 05 9e 05 02 00 	sub    0x2059e(%rip),%rax        # 29f70 <__stack_chk_guard>
    99d2:	74 05                	je     99d9 <intfs_vshutdown+0xaa>
    99d4:	e8 87 90 ff ff       	call   2a60 <__stack_chk_fail>
    99d9:	48 83 c4 28          	add    $0x28,%rsp
    99dd:	5b                   	pop    %rbx
    99de:	5d                   	pop    %rbp
    99df:	c3                   	ret    

00000000000099e0 <intfs_shutdown>:
    99e0:	f3 0f 1e fa          	endbr64 
    99e4:	48 83 ec 58          	sub    $0x58,%rsp
    99e8:	41 89 fa             	mov    %edi,%r10d
    99eb:	48 8b 05 7e 05 02 00 	mov    0x2057e(%rip),%rax        # 29f70 <__stack_chk_guard>
    99f2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    99f7:	31 c0                	xor    %eax,%eax
    99f9:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    99fe:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    9a03:	48 89 e7             	mov    %rsp,%rdi
    9a06:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9a0b:	44 89 d6             	mov    %r10d,%esi
    9a0e:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    9a13:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9a18:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    9a1d:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    9a22:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    9a27:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    9a2c:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
    9a33:	e8 f7 fe ff ff       	call   992f <intfs_vshutdown>
    9a38:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9a3d:	48 2b 05 2c 05 02 00 	sub    0x2052c(%rip),%rax        # 29f70 <__stack_chk_guard>
    9a44:	74 05                	je     9a4b <intfs_shutdown+0x6b>
    9a46:	e8 15 90 ff ff       	call   2a60 <__stack_chk_fail>
    9a4b:	48 83 c4 58          	add    $0x58,%rsp
    9a4f:	c3                   	ret    

0000000000009a50 <intfs_vrestart>:
    9a50:	f3 0f 1e fa          	endbr64 
    9a54:	53                   	push   %rbx
    9a55:	48 89 fb             	mov    %rdi,%rbx
    9a58:	41 89 f1             	mov    %esi,%r9d
    9a5b:	b9 06 00 00 00       	mov    $0x6,%ecx
    9a60:	48 89 de             	mov    %rbx,%rsi
    9a63:	48 83 ec 20          	sub    $0x20,%rsp
    9a67:	48 8b 05 02 05 02 00 	mov    0x20502(%rip),%rax        # 29f70 <__stack_chk_guard>
    9a6e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9a73:	31 c0                	xor    %eax,%eax
    9a75:	49 89 e0             	mov    %rsp,%r8
    9a78:	4c 89 c7             	mov    %r8,%rdi
    9a7b:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    9a7d:	44 89 ce             	mov    %r9d,%esi
    9a80:	4c 89 c7             	mov    %r8,%rdi
    9a83:	e8 a7 fe ff ff       	call   992f <intfs_vshutdown>
    9a88:	8b 13                	mov    (%rbx),%edx
    9a8a:	83 fa 2f             	cmp    $0x2f,%edx
    9a8d:	77 0d                	ja     9a9c <intfs_vrestart+0x4c>
    9a8f:	89 d0                	mov    %edx,%eax
    9a91:	83 c2 08             	add    $0x8,%edx
    9a94:	48 03 43 10          	add    0x10(%rbx),%rax
    9a98:	89 13                	mov    %edx,(%rbx)
    9a9a:	eb 0c                	jmp    9aa8 <intfs_vrestart+0x58>
    9a9c:	48 8b 43 08          	mov    0x8(%rbx),%rax
    9aa0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9aa4:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    9aa8:	48 8b 00             	mov    (%rax),%rax
    9aab:	48 85 c0             	test   %rax,%rax
    9aae:	74 0a                	je     9aba <intfs_vrestart+0x6a>
    9ab0:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9ab4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9ab8:	eb ce                	jmp    9a88 <intfs_vrestart+0x38>
    9aba:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9abf:	48 2b 05 aa 04 02 00 	sub    0x204aa(%rip),%rax        # 29f70 <__stack_chk_guard>
    9ac6:	74 05                	je     9acd <intfs_vrestart+0x7d>
    9ac8:	e8 93 8f ff ff       	call   2a60 <__stack_chk_fail>
    9acd:	48 83 c4 20          	add    $0x20,%rsp
    9ad1:	5b                   	pop    %rbx
    9ad2:	c3                   	ret    

0000000000009ad3 <intfs_restart>:
    9ad3:	f3 0f 1e fa          	endbr64 
    9ad7:	48 83 ec 58          	sub    $0x58,%rsp
    9adb:	41 89 fa             	mov    %edi,%r10d
    9ade:	48 8b 05 8b 04 02 00 	mov    0x2048b(%rip),%rax        # 29f70 <__stack_chk_guard>
    9ae5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9aea:	31 c0                	xor    %eax,%eax
    9aec:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    9af1:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    9af6:	48 89 e7             	mov    %rsp,%rdi
    9af9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9afe:	44 89 d6             	mov    %r10d,%esi
    9b01:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    9b06:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9b0b:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    9b10:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    9b15:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    9b1a:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    9b1f:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
    9b26:	e8 25 ff ff ff       	call   9a50 <intfs_vrestart>
    9b2b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9b30:	48 2b 05 39 04 02 00 	sub    0x20439(%rip),%rax        # 29f70 <__stack_chk_guard>
    9b37:	74 05                	je     9b3e <intfs_restart+0x6b>
    9b39:	e8 22 8f ff ff       	call   2a60 <__stack_chk_fail>
    9b3e:	48 83 c4 58          	add    $0x58,%rsp
    9b42:	c3                   	ret    

0000000000009b43 <intf_poke>:
    9b43:	f3 0f 1e fa          	endbr64 
    9b47:	55                   	push   %rbp
    9b48:	48 83 ec 10          	sub    $0x10,%rsp
    9b4c:	48 8b 05 1d 04 02 00 	mov    0x2041d(%rip),%rax        # 29f70 <__stack_chk_guard>
    9b53:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9b58:	31 c0                	xor    %eax,%eax
    9b5a:	48 89 e2             	mov    %rsp,%rdx
    9b5d:	e8 a3 fc ff ff       	call   9805 <intf_get_dest_op_untyped>
    9b62:	48 8b 2c 24          	mov    (%rsp),%rbp
    9b66:	48 85 c0             	test   %rax,%rax
    9b69:	74 10                	je     9b7b <intf_poke+0x38>
    9b6b:	48 89 ef             	mov    %rbp,%rdi
    9b6e:	48 89 c1             	mov    %rax,%rcx
    9b71:	e8 39 fc ff ff       	call   97af <intf_object>
    9b76:	48 89 c7             	mov    %rax,%rdi
    9b79:	ff d1                	call   *%rcx
    9b7b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9b80:	48 2b 05 e9 03 02 00 	sub    0x203e9(%rip),%rax        # 29f70 <__stack_chk_guard>
    9b87:	74 05                	je     9b8e <intf_poke+0x4b>
    9b89:	e8 d2 8e ff ff       	call   2a60 <__stack_chk_fail>
    9b8e:	48 83 c4 10          	add    $0x10,%rsp
    9b92:	48 89 ef             	mov    %rbp,%rdi
    9b95:	5d                   	pop    %rbp
    9b96:	e9 a5 fb ff ff       	jmp    9740 <intf_put>

0000000000009b9b <malloc_dma_offset>:
    9b9b:	53                   	push   %rbx
    9b9c:	48 89 fb             	mov    %rdi,%rbx
    9b9f:	e8 89 28 00 00       	call   c42d <alloc_memblock>
    9ba4:	49 89 c0             	mov    %rax,%r8
    9ba7:	48 85 c0             	test   %rax,%rax
    9baa:	74 0f                	je     9bbb <malloc_dma_offset+0x20>
    9bac:	48 85 db             	test   %rbx,%rbx
    9baf:	74 0a                	je     9bbb <malloc_dma_offset+0x20>
    9bb1:	48 89 c7             	mov    %rax,%rdi
    9bb4:	48 89 d9             	mov    %rbx,%rcx
    9bb7:	31 c0                	xor    %eax,%eax
    9bb9:	f3 aa                	rep stos %al,%es:(%rdi)
    9bbb:	4c 89 c0             	mov    %r8,%rax
    9bbe:	5b                   	pop    %rbx
    9bbf:	c3                   	ret    

0000000000009bc0 <alloc_iob_raw>:
    9bc0:	f3 0f 1e fa          	endbr64 
    9bc4:	b8 37 00 00 00       	mov    $0x37,%eax
    9bc9:	48 39 c6             	cmp    %rax,%rsi
    9bcc:	48 0f 43 c6          	cmovae %rsi,%rax
    9bd0:	48 89 c1             	mov    %rax,%rcx
    9bd3:	48 ff c9             	dec    %rcx
    9bd6:	48 0f bd c9          	bsr    %rcx,%rcx
    9bda:	ff c1                	inc    %ecx
    9bdc:	83 f9 3f             	cmp    $0x3f,%ecx
    9bdf:	0f 87 94 00 00 00    	ja     9c79 <alloc_iob_raw+0xb9>
    9be5:	41 55                	push   %r13
    9be7:	be 01 00 00 00       	mov    $0x1,%esi
    9bec:	55                   	push   %rbp
    9bed:	48 d3 e6             	shl    %cl,%rsi
    9bf0:	48 89 fd             	mov    %rdi,%rbp
    9bf3:	53                   	push   %rbx
    9bf4:	48 8d 46 c9          	lea    -0x37(%rsi),%rax
    9bf8:	48 83 ec 10          	sub    $0x10,%rsp
    9bfc:	48 39 f8             	cmp    %rdi,%rax
    9bff:	72 26                	jb     9c27 <alloc_iob_raw+0x67>
    9c01:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    9c05:	48 f7 d8             	neg    %rax
    9c08:	83 e0 07             	and    $0x7,%eax
    9c0b:	48 01 c5             	add    %rax,%rbp
    9c0e:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    9c12:	e8 84 ff ff ff       	call   9b9b <malloc_dma_offset>
    9c17:	48 89 c3             	mov    %rax,%rbx
    9c1a:	48 8d 04 28          	lea    (%rax,%rbp,1),%rax
    9c1e:	48 85 db             	test   %rbx,%rbx
    9c21:	75 3a                	jne    9c5d <alloc_iob_raw+0x9d>
    9c23:	31 c0                	xor    %eax,%eax
    9c25:	eb 49                	jmp    9c70 <alloc_iob_raw+0xb0>
    9c27:	e8 6f ff ff ff       	call   9b9b <malloc_dma_offset>
    9c2c:	49 89 c5             	mov    %rax,%r13
    9c2f:	48 89 c3             	mov    %rax,%rbx
    9c32:	48 85 c0             	test   %rax,%rax
    9c35:	74 ec                	je     9c23 <alloc_iob_raw+0x63>
    9c37:	bf 30 00 00 00       	mov    $0x30,%edi
    9c3c:	e8 00 2a 00 00       	call   c641 <malloc>
    9c41:	48 85 c0             	test   %rax,%rax
    9c44:	75 17                	jne    9c5d <alloc_iob_raw+0x9d>
    9c46:	48 89 ee             	mov    %rbp,%rsi
    9c49:	4c 89 ef             	mov    %r13,%rdi
    9c4c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9c51:	e8 b0 28 00 00       	call   c506 <free_memblock>
    9c56:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9c5b:	eb 13                	jmp    9c70 <alloc_iob_raw+0xb0>
    9c5d:	48 89 58 20          	mov    %rbx,0x20(%rax)
    9c61:	48 89 58 18          	mov    %rbx,0x18(%rax)
    9c65:	48 89 58 10          	mov    %rbx,0x10(%rax)
    9c69:	48 01 eb             	add    %rbp,%rbx
    9c6c:	48 89 58 28          	mov    %rbx,0x28(%rax)
    9c70:	48 83 c4 10          	add    $0x10,%rsp
    9c74:	5b                   	pop    %rbx
    9c75:	5d                   	pop    %rbp
    9c76:	41 5d                	pop    %r13
    9c78:	c3                   	ret    
    9c79:	31 c0                	xor    %eax,%eax
    9c7b:	c3                   	ret    

0000000000009c7c <alloc_iob>:
    9c7c:	f3 0f 1e fa          	endbr64 
    9c80:	b8 80 00 00 00       	mov    $0x80,%eax
    9c85:	48 39 c7             	cmp    %rax,%rdi
    9c88:	48 0f 42 f8          	cmovb  %rax,%rdi
    9c8c:	31 d2                	xor    %edx,%edx
    9c8e:	48 89 fe             	mov    %rdi,%rsi
    9c91:	e9 2a ff ff ff       	jmp    9bc0 <alloc_iob_raw>

0000000000009c96 <free_iob>:
    9c96:	f3 0f 1e fa          	endbr64 
    9c9a:	48 85 ff             	test   %rdi,%rdi
    9c9d:	74 2f                	je     9cce <free_iob+0x38>
    9c9f:	55                   	push   %rbp
    9ca0:	48 8b 47 28          	mov    0x28(%rdi),%rax
    9ca4:	48 89 fd             	mov    %rdi,%rbp
    9ca7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9cab:	48 89 c6             	mov    %rax,%rsi
    9cae:	48 29 fe             	sub    %rdi,%rsi
    9cb1:	48 39 c5             	cmp    %rax,%rbp
    9cb4:	75 0a                	jne    9cc0 <free_iob+0x2a>
    9cb6:	48 83 c6 30          	add    $0x30,%rsi
    9cba:	5d                   	pop    %rbp
    9cbb:	e9 46 28 00 00       	jmp    c506 <free_memblock>
    9cc0:	e8 41 28 00 00       	call   c506 <free_memblock>
    9cc5:	48 89 ef             	mov    %rbp,%rdi
    9cc8:	5d                   	pop    %rbp
    9cc9:	e9 81 29 00 00       	jmp    c64f <free>
    9cce:	c3                   	ret    

0000000000009ccf <iob_ensure_headroom>:
    9ccf:	f3 0f 1e fa          	endbr64 
    9cd3:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9cd7:	48 2b 47 10          	sub    0x10(%rdi),%rax
    9cdb:	45 31 c0             	xor    %r8d,%r8d
    9cde:	48 39 c6             	cmp    %rax,%rsi
    9ce1:	76 06                	jbe    9ce9 <iob_ensure_headroom+0x1a>
    9ce3:	41 b8 77 df fb d5    	mov    $0xd5fbdf77,%r8d
    9ce9:	44 89 c0             	mov    %r8d,%eax
    9cec:	c3                   	ret    

0000000000009ced <ipv4_route>:
    9ced:	48 8b 05 7c c7 01 00 	mov    0x1c77c(%rip),%rax        # 26470 <ipv4_miniroutes>
    9cf4:	4c 8d 05 75 c7 01 00 	lea    0x1c775(%rip),%r8        # 26470 <ipv4_miniroutes>
    9cfb:	4c 39 c0             	cmp    %r8,%rax
    9cfe:	74 41                	je     9d41 <ipv4_route+0x54>
    9d00:	48 8b 48 10          	mov    0x10(%rax),%rcx
    9d04:	f6 81 80 00 00 00 01 	testb  $0x1,0x80(%rcx)
    9d0b:	74 2f                	je     9d3c <ipv4_route+0x4f>
    9d0d:	8b 16                	mov    (%rsi),%edx
    9d0f:	41 89 d1             	mov    %edx,%r9d
    9d12:	41 81 e1 f0 00 00 00 	and    $0xf0,%r9d
    9d19:	41 81 f9 e0 00 00 00 	cmp    $0xe0,%r9d
    9d20:	75 06                	jne    9d28 <ipv4_route+0x3b>
    9d22:	3b 79 30             	cmp    0x30(%rcx),%edi
    9d25:	75 15                	jne    9d3c <ipv4_route+0x4f>
    9d27:	c3                   	ret    
    9d28:	33 50 18             	xor    0x18(%rax),%edx
    9d2b:	23 50 1c             	and    0x1c(%rax),%edx
    9d2e:	74 13                	je     9d43 <ipv4_route+0x56>
    9d30:	83 78 20 00          	cmpl   $0x0,0x20(%rax)
    9d34:	74 06                	je     9d3c <ipv4_route+0x4f>
    9d36:	8b 50 20             	mov    0x20(%rax),%edx
    9d39:	89 16                	mov    %edx,(%rsi)
    9d3b:	c3                   	ret    
    9d3c:	48 8b 00             	mov    (%rax),%rax
    9d3f:	eb ba                	jmp    9cfb <ipv4_route+0xe>
    9d41:	31 c0                	xor    %eax,%eax
    9d43:	c3                   	ret    

0000000000009d44 <ipv4_netdev>:
    9d44:	f3 0f 1e fa          	endbr64 
    9d48:	48 83 ec 18          	sub    $0x18,%rsp
    9d4c:	48 8b 05 1d 02 02 00 	mov    0x2021d(%rip),%rax        # 29f70 <__stack_chk_guard>
    9d53:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9d58:	8b 47 08             	mov    0x8(%rdi),%eax
    9d5b:	0f b7 7f 06          	movzwl 0x6(%rdi),%edi
    9d5f:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    9d64:	89 44 24 04          	mov    %eax,0x4(%rsp)
    9d68:	e8 80 ff ff ff       	call   9ced <ipv4_route>
    9d6d:	48 85 c0             	test   %rax,%rax
    9d70:	74 04                	je     9d76 <ipv4_netdev+0x32>
    9d72:	48 8b 40 10          	mov    0x10(%rax),%rax
    9d76:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9d7b:	48 2b 15 ee 01 02 00 	sub    0x201ee(%rip),%rdx        # 29f70 <__stack_chk_guard>
    9d82:	74 05                	je     9d89 <ipv4_netdev+0x45>
    9d84:	e8 d7 8c ff ff       	call   2a60 <__stack_chk_fail>
    9d89:	48 83 c4 18          	add    $0x18,%rsp
    9d8d:	c3                   	ret    

0000000000009d8e <ipv4_is_fragment>:
    9d8e:	f3 0f 1e fa          	endbr64 
    9d92:	48 8b 47 10          	mov    0x10(%rdi),%rax
    9d96:	48 8b 4e 18          	mov    0x18(%rsi),%rcx
    9d9a:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9d9e:	31 c0                	xor    %eax,%eax
    9da0:	8b 72 0c             	mov    0xc(%rdx),%esi
    9da3:	39 71 0c             	cmp    %esi,0xc(%rcx)
    9da6:	75 0e                	jne    9db6 <ipv4_is_fragment+0x28>
    9da8:	66 8b 42 04          	mov    0x4(%rdx),%ax
    9dac:	66 39 41 04          	cmp    %ax,0x4(%rcx)
    9db0:	0f 94 c0             	sete   %al
    9db3:	0f b6 c0             	movzbl %al,%eax
    9db6:	c3                   	ret    

0000000000009db7 <ipv4_more_fragments>:
    9db7:	f3 0f 1e fa          	endbr64 
    9dbb:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9dbf:	66 8b 40 06          	mov    0x6(%rax),%ax
    9dc3:	83 e0 20             	and    $0x20,%eax
    9dc6:	c3                   	ret    

0000000000009dc7 <ipv4_has_addr>:
    9dc7:	48 8b 05 a2 c6 01 00 	mov    0x1c6a2(%rip),%rax        # 26470 <ipv4_miniroutes>
    9dce:	48 8d 15 9b c6 01 00 	lea    0x1c69b(%rip),%rdx        # 26470 <ipv4_miniroutes>
    9dd5:	48 39 d0             	cmp    %rdx,%rax
    9dd8:	74 10                	je     9dea <ipv4_has_addr+0x23>
    9dda:	48 39 78 10          	cmp    %rdi,0x10(%rax)
    9dde:	75 05                	jne    9de5 <ipv4_has_addr+0x1e>
    9de0:	39 70 18             	cmp    %esi,0x18(%rax)
    9de3:	74 08                	je     9ded <ipv4_has_addr+0x26>
    9de5:	48 8b 00             	mov    (%rax),%rax
    9de8:	eb eb                	jmp    9dd5 <ipv4_has_addr+0xe>
    9dea:	31 c0                	xor    %eax,%eax
    9dec:	c3                   	ret    
    9ded:	b8 01 00 00 00       	mov    $0x1,%eax
    9df2:	c3                   	ret    

0000000000009df3 <ipv4_fragment_offset>:
    9df3:	f3 0f 1e fa          	endbr64 
    9df7:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9dfb:	66 8b 40 06          	mov    0x6(%rax),%ax
    9dff:	86 c4                	xchg   %al,%ah
    9e01:	c1 e0 03             	shl    $0x3,%eax
    9e04:	25 f8 ff 00 00       	and    $0xfff8,%eax
    9e09:	c3                   	ret    

0000000000009e0a <ipv4_pshdr_chksum>:
    9e0a:	48 83 ec 28          	sub    $0x28,%rsp
    9e0e:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    9e12:	48 8b 05 57 01 02 00 	mov    0x20157(%rip),%rax        # 29f70 <__stack_chk_guard>
    9e19:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9e1e:	31 c0                	xor    %eax,%eax
    9e20:	4c 8d 44 24 0c       	lea    0xc(%rsp),%r8
    9e25:	8b 41 0c             	mov    0xc(%rcx),%eax
    9e28:	8a 11                	mov    (%rcx),%dl
    9e2a:	c6 44 24 14 00       	movb   $0x0,0x14(%rsp)
    9e2f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9e33:	8b 41 10             	mov    0x10(%rcx),%eax
    9e36:	83 e2 0f             	and    $0xf,%edx
    9e39:	c1 e2 02             	shl    $0x2,%edx
    9e3c:	89 44 24 10          	mov    %eax,0x10(%rsp)
    9e40:	8a 41 09             	mov    0x9(%rcx),%al
    9e43:	88 44 24 15          	mov    %al,0x15(%rsp)
    9e47:	48 8b 47 20          	mov    0x20(%rdi),%rax
    9e4b:	0f b7 fe             	movzwl %si,%edi
    9e4e:	4c 89 c6             	mov    %r8,%rsi
    9e51:	48 29 c8             	sub    %rcx,%rax
    9e54:	29 d0                	sub    %edx,%eax
    9e56:	ba 0c 00 00 00       	mov    $0xc,%edx
    9e5b:	86 c4                	xchg   %al,%ah
    9e5d:	66 89 44 24 16       	mov    %ax,0x16(%rsp)
    9e62:	e8 db d4 00 00       	call   17342 <tcpip_continue_chksum>
    9e67:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    9e6c:	48 2b 15 fd 00 02 00 	sub    0x200fd(%rip),%rdx        # 29f70 <__stack_chk_guard>
    9e73:	74 05                	je     9e7a <ipv4_pshdr_chksum+0x70>
    9e75:	e8 e6 8b ff ff       	call   2a60 <__stack_chk_fail>
    9e7a:	48 83 c4 28          	add    $0x28,%rsp
    9e7e:	c3                   	ret    

0000000000009e7f <add_ipv4_miniroute>:
    9e7f:	f3 0f 1e fa          	endbr64 
    9e83:	41 56                	push   %r14
    9e85:	41 89 f6             	mov    %esi,%r14d
    9e88:	41 55                	push   %r13
    9e8a:	41 89 d5             	mov    %edx,%r13d
    9e8d:	41 54                	push   %r12
    9e8f:	49 89 fc             	mov    %rdi,%r12
    9e92:	bf 28 00 00 00       	mov    $0x28,%edi
    9e97:	55                   	push   %rbp
    9e98:	53                   	push   %rbx
    9e99:	89 cb                	mov    %ecx,%ebx
    9e9b:	e8 a1 27 00 00       	call   c641 <malloc>
    9ea0:	48 85 c0             	test   %rax,%rax
    9ea3:	75 07                	jne    9eac <add_ipv4_miniroute+0x2d>
    9ea5:	b8 77 9f fa ce       	mov    $0xcefa9f77,%eax
    9eaa:	eb 36                	jmp    9ee2 <add_ipv4_miniroute+0x63>
    9eac:	4c 89 e7             	mov    %r12,%rdi
    9eaf:	48 89 c5             	mov    %rax,%rbp
    9eb2:	e8 7b 5f 00 00       	call   fe32 <ref_increment>
    9eb7:	85 db                	test   %ebx,%ebx
    9eb9:	4c 89 65 10          	mov    %r12,0x10(%rbp)
    9ebd:	48 89 ef             	mov    %rbp,%rdi
    9ec0:	44 89 75 18          	mov    %r14d,0x18(%rbp)
    9ec4:	48 8d 35 a5 c5 01 00 	lea    0x1c5a5(%rip),%rsi        # 26470 <ipv4_miniroutes>
    9ecb:	44 89 6d 1c          	mov    %r13d,0x1c(%rbp)
    9ecf:	89 5d 20             	mov    %ebx,0x20(%rbp)
    9ed2:	74 07                	je     9edb <add_ipv4_miniroute+0x5c>
    9ed4:	e8 fe 21 00 00       	call   c0d7 <extern_list_add_tail>
    9ed9:	eb 05                	jmp    9ee0 <add_ipv4_miniroute+0x61>
    9edb:	e8 e1 21 00 00       	call   c0c1 <extern_list_add>
    9ee0:	31 c0                	xor    %eax,%eax
    9ee2:	5b                   	pop    %rbx
    9ee3:	5d                   	pop    %rbp
    9ee4:	41 5c                	pop    %r12
    9ee6:	41 5d                	pop    %r13
    9ee8:	41 5e                	pop    %r14
    9eea:	c3                   	ret    

0000000000009eeb <ipv4_gratuitous_arp>:
    9eeb:	f3 0f 1e fa          	endbr64 
    9eef:	48 83 ec 18          	sub    $0x18,%rsp
    9ef3:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    9ef7:	e8 cb fe ff ff       	call   9dc7 <ipv4_has_addr>
    9efc:	85 c0                	test   %eax,%eax
    9efe:	75 14                	jne    9f14 <ipv4_gratuitous_arp+0x29>
    9f00:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    9f05:	48 8d 35 bc ed 01 00 	lea    0x1edbc(%rip),%rsi        # 28cc8 <ipv4_protocol>
    9f0c:	48 89 d1             	mov    %rdx,%rcx
    9f0f:	e8 9d de 00 00       	call   17db1 <arp_tx_request>
    9f14:	31 c0                	xor    %eax,%eax
    9f16:	48 83 c4 18          	add    $0x18,%rsp
    9f1a:	c3                   	ret    

0000000000009f1b <ipv4_settings>:
    9f1b:	41 55                	push   %r13
    9f1d:	41 54                	push   %r12
    9f1f:	4c 8d 25 fa c9 01 00 	lea    0x1c9fa(%rip),%r12        # 26920 <net_devices>
    9f26:	55                   	push   %rbp
    9f27:	48 89 fd             	mov    %rdi,%rbp
    9f2a:	53                   	push   %rbx
    9f2b:	48 83 ec 28          	sub    $0x28,%rsp
    9f2f:	48 8b 05 3a 00 02 00 	mov    0x2003a(%rip),%rax        # 29f70 <__stack_chk_guard>
    9f36:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    9f3b:	31 c0                	xor    %eax,%eax
    9f3d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
    9f44:	00 
    9f45:	48 8b 05 d4 c9 01 00 	mov    0x1c9d4(%rip),%rax        # 26920 <net_devices>
    9f4c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
    9f53:	00 
    9f54:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    9f58:	48 8d 43 10          	lea    0x10(%rbx),%rax
    9f5c:	4c 39 e0             	cmp    %r12,%rax
    9f5f:	0f 84 be 00 00 00    	je     a023 <ipv4_settings+0x108>
    9f65:	4c 8d ab 68 01 00 00 	lea    0x168(%rbx),%r13
    9f6c:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    9f71:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    9f78:	00 
    9f79:	48 8d 35 b0 f3 01 00 	lea    0x1f3b0(%rip),%rsi        # 29330 <ip_setting>
    9f80:	4c 89 ef             	mov    %r13,%rdi
    9f83:	e8 d4 7e 00 00       	call   11e5c <fetch_ipv4_setting>
    9f88:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%rsp)
    9f8d:	75 0a                	jne    9f99 <ipv4_settings+0x7e>
    9f8f:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    9f93:	48 83 eb 10          	sub    $0x10,%rbx
    9f97:	eb bf                	jmp    9f58 <ipv4_settings+0x3d>
    9f99:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    9f9e:	48 8d 35 b3 f3 01 00 	lea    0x1f3b3(%rip),%rsi        # 29358 <netmask_setting>
    9fa5:	4c 89 ef             	mov    %r13,%rdi
    9fa8:	e8 af 7e 00 00       	call   11e5c <fetch_ipv4_setting>
    9fad:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
    9fb2:	75 40                	jne    9ff4 <ipv4_settings+0xd9>
    9fb4:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9fb8:	a8 80                	test   $0x80,%al
    9fba:	75 0a                	jne    9fc6 <ipv4_settings+0xab>
    9fbc:	c7 44 24 10 ff 00 00 	movl   $0xff,0x10(%rsp)
    9fc3:	00 
    9fc4:	eb 2e                	jmp    9ff4 <ipv4_settings+0xd9>
    9fc6:	89 c2                	mov    %eax,%edx
    9fc8:	81 e2 c0 00 00 00    	and    $0xc0,%edx
    9fce:	81 fa 80 00 00 00    	cmp    $0x80,%edx
    9fd4:	75 0a                	jne    9fe0 <ipv4_settings+0xc5>
    9fd6:	c7 44 24 10 ff ff 00 	movl   $0xffff,0x10(%rsp)
    9fdd:	00 
    9fde:	eb 14                	jmp    9ff4 <ipv4_settings+0xd9>
    9fe0:	25 e0 00 00 00       	and    $0xe0,%eax
    9fe5:	3d c0 00 00 00       	cmp    $0xc0,%eax
    9fea:	75 08                	jne    9ff4 <ipv4_settings+0xd9>
    9fec:	c7 44 24 10 ff ff ff 	movl   $0xffffff,0x10(%rsp)
    9ff3:	00 
    9ff4:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
    9ff9:	48 8d 35 08 f3 01 00 	lea    0x1f308(%rip),%rsi        # 29308 <gateway_setting>
    a000:	4c 89 ef             	mov    %r13,%rdi
    a003:	e8 54 7e 00 00       	call   11e5c <fetch_ipv4_setting>
    a008:	8b 4c 24 14          	mov    0x14(%rsp),%ecx
    a00c:	8b 54 24 10          	mov    0x10(%rsp),%edx
    a010:	48 89 df             	mov    %rbx,%rdi
    a013:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    a017:	ff d5                	call   *%rbp
    a019:	85 c0                	test   %eax,%eax
    a01b:	0f 84 6e ff ff ff    	je     9f8f <ipv4_settings+0x74>
    a021:	eb 02                	jmp    a025 <ipv4_settings+0x10a>
    a023:	31 c0                	xor    %eax,%eax
    a025:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a02a:	48 2b 15 3f ff 01 00 	sub    0x1ff3f(%rip),%rdx        # 29f70 <__stack_chk_guard>
    a031:	74 05                	je     a038 <ipv4_settings+0x11d>
    a033:	e8 28 8a ff ff       	call   2a60 <__stack_chk_fail>
    a038:	48 83 c4 28          	add    $0x28,%rsp
    a03c:	5b                   	pop    %rbx
    a03d:	5d                   	pop    %rbp
    a03e:	41 5c                	pop    %r12
    a040:	41 5d                	pop    %r13
    a042:	c3                   	ret    

000000000000a043 <ipv4_create_routes>:
    a043:	f3 0f 1e fa          	endbr64 
    a047:	41 54                	push   %r12
    a049:	48 8d 3d 9b fe ff ff 	lea    -0x165(%rip),%rdi        # 9eeb <ipv4_gratuitous_arp>
    a050:	4c 8d 25 19 c4 01 00 	lea    0x1c419(%rip),%r12        # 26470 <ipv4_miniroutes>
    a057:	55                   	push   %rbp
    a058:	53                   	push   %rbx
    a059:	e8 bd fe ff ff       	call   9f1b <ipv4_settings>
    a05e:	48 8b 2d 0b c4 01 00 	mov    0x1c40b(%rip),%rbp        # 26470 <ipv4_miniroutes>
    a065:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
    a069:	4c 39 e5             	cmp    %r12,%rbp
    a06c:	74 28                	je     a096 <ipv4_create_routes+0x53>
    a06e:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    a072:	e8 c7 5d 00 00       	call   fe3e <ref_decrement>
    a077:	48 8b 55 00          	mov    0x0(%rbp),%rdx
    a07b:	48 8b 45 08          	mov    0x8(%rbp),%rax
    a07f:	48 89 ef             	mov    %rbp,%rdi
    a082:	48 89 dd             	mov    %rbx,%rbp
    a085:	48 89 42 08          	mov    %rax,0x8(%rdx)
    a089:	48 89 10             	mov    %rdx,(%rax)
    a08c:	e8 be 25 00 00       	call   c64f <free>
    a091:	48 8b 1b             	mov    (%rbx),%rbx
    a094:	eb d3                	jmp    a069 <ipv4_create_routes+0x26>
    a096:	5b                   	pop    %rbx
    a097:	48 8d 3d e1 fd ff ff 	lea    -0x21f(%rip),%rdi        # 9e7f <add_ipv4_miniroute>
    a09e:	5d                   	pop    %rbp
    a09f:	41 5c                	pop    %r12
    a0a1:	e9 75 fe ff ff       	jmp    9f1b <ipv4_settings>

000000000000a0a6 <ipv4_arp_check>:
    a0a6:	f3 0f 1e fa          	endbr64 
    a0aa:	8b 36                	mov    (%rsi),%esi
    a0ac:	e8 16 fd ff ff       	call   9dc7 <ipv4_has_addr>
    a0b1:	41 89 c0             	mov    %eax,%r8d
    a0b4:	31 c0                	xor    %eax,%eax
    a0b6:	45 85 c0             	test   %r8d,%r8d
    a0b9:	75 05                	jne    a0c0 <ipv4_arp_check+0x1a>
    a0bb:	b8 72 9f fa d2       	mov    $0xd2fa9f72,%eax
    a0c0:	c3                   	ret    

000000000000a0c1 <ipv4_tx>:
    a0c1:	f3 0f 1e fa          	endbr64 
    a0c5:	41 57                	push   %r15
    a0c7:	41 56                	push   %r14
    a0c9:	49 89 f6             	mov    %rsi,%r14
    a0cc:	41 55                	push   %r13
    a0ce:	4d 89 c5             	mov    %r8,%r13
    a0d1:	41 54                	push   %r12
    a0d3:	55                   	push   %rbp
    a0d4:	48 89 fd             	mov    %rdi,%rbp
    a0d7:	53                   	push   %rbx
    a0d8:	48 83 ec 38          	sub    $0x38,%rsp
    a0dc:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
    a0e0:	48 8b 05 89 fe 01 00 	mov    0x1fe89(%rip),%rax        # 29f70 <__stack_chk_guard>
    a0e7:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    a0ec:	31 c0                	xor    %eax,%eax
    a0ee:	4c 8d 63 ec          	lea    -0x14(%rbx),%r12
    a0f2:	4c 89 67 18          	mov    %r12,0x18(%rdi)
    a0f6:	4c 89 e7             	mov    %r12,%rdi
    a0f9:	48 ff 05 10 fb 01 00 	incq   0x1fb10(%rip)        # 29c10 <ipv4_stats+0x50>
    a100:	ab                   	stos   %eax,%es:(%rdi)
    a101:	ab                   	stos   %eax,%es:(%rdi)
    a102:	ab                   	stos   %eax,%es:(%rdi)
    a103:	ab                   	stos   %eax,%es:(%rdi)
    a104:	ab                   	stos   %eax,%es:(%rdi)
    a105:	c6 43 ec 45          	movb   $0x45,-0x14(%rbx)
    a109:	c6 43 ed 00          	movb   $0x0,-0x13(%rbx)
    a10d:	48 8b 45 20          	mov    0x20(%rbp),%rax
    a111:	48 2b 45 18          	sub    0x18(%rbp),%rax
    a115:	c6 43 f4 40          	movb   $0x40,-0xc(%rbx)
    a119:	86 c4                	xchg   %al,%ah
    a11b:	66 89 43 ee          	mov    %ax,-0x12(%rbx)
    a11f:	8a 46 12             	mov    0x12(%rsi),%al
    a122:	88 43 f5             	mov    %al,-0xb(%rbx)
    a125:	8b 41 08             	mov    0x8(%rcx),%eax
    a128:	89 43 fc             	mov    %eax,-0x4(%rbx)
    a12b:	89 44 24 10          	mov    %eax,0x10(%rsp)
    a12f:	48 85 d2             	test   %rdx,%rdx
    a132:	74 06                	je     a13a <ipv4_tx+0x79>
    a134:	8b 42 08             	mov    0x8(%rdx),%eax
    a137:	89 43 f8             	mov    %eax,-0x8(%rbx)
    a13a:	83 7c 24 10 ff       	cmpl   $0xffffffff,0x10(%rsp)
    a13f:	75 05                	jne    a146 <ipv4_tx+0x85>
    a141:	45 31 ff             	xor    %r15d,%r15d
    a144:	eb 2b                	jmp    a171 <ipv4_tx+0xb0>
    a146:	0f b7 79 06          	movzwl 0x6(%rcx),%edi
    a14a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    a14f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    a154:	e8 94 fb ff ff       	call   9ced <ipv4_route>
    a159:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    a15e:	48 85 c0             	test   %rax,%rax
    a161:	74 de                	je     a141 <ipv4_tx+0x80>
    a163:	8b 50 18             	mov    0x18(%rax),%edx
    a166:	44 8b 78 1c          	mov    0x1c(%rax),%r15d
    a16a:	4c 8b 68 10          	mov    0x10(%rax),%r13
    a16e:	89 53 f8             	mov    %edx,-0x8(%rbx)
    a171:	4d 85 ed             	test   %r13,%r13
    a174:	75 11                	jne    a187 <ipv4_tx+0xc6>
    a176:	48 ff 05 9b fa 01 00 	incq   0x1fa9b(%rip)        # 29c18 <ipv4_stats+0x58>
    a17d:	b8 70 9f fa d7       	mov    $0xd7fa9f70,%eax
    a182:	e9 13 01 00 00       	jmp    a29a <ipv4_tx+0x1d9>
    a187:	8a 05 c3 fa 01 00    	mov    0x1fac3(%rip),%al        # 29c50 <next_ident_high>
    a18d:	8d 50 01             	lea    0x1(%rax),%edx
    a190:	41 8b 85 40 01 00 00 	mov    0x140(%r13),%eax
    a197:	88 15 b3 fa 01 00    	mov    %dl,0x1fab3(%rip)        # 29c50 <next_ident_high>
    a19d:	c1 e2 08             	shl    $0x8,%edx
    a1a0:	83 e0 0f             	and    $0xf,%eax
    a1a3:	09 d0                	or     %edx,%eax
    a1a5:	41 8b 95 44 01 00 00 	mov    0x144(%r13),%edx
    a1ac:	c1 e2 04             	shl    $0x4,%edx
    a1af:	0f b6 d2             	movzbl %dl,%edx
    a1b2:	09 d0                	or     %edx,%eax
    a1b4:	86 c4                	xchg   %al,%ah
    a1b6:	66 89 43 f0          	mov    %ax,-0x10(%rbx)
    a1ba:	4d 85 c9             	test   %r9,%r9
    a1bd:	74 27                	je     a1e6 <ipv4_tx+0x125>
    a1bf:	41 0f b7 31          	movzwl (%r9),%esi
    a1c3:	48 89 ef             	mov    %rbp,%rdi
    a1c6:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    a1cb:	e8 3a fc ff ff       	call   9e0a <ipv4_pshdr_chksum>
    a1d0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    a1d5:	66 41 89 01          	mov    %ax,(%r9)
    a1d9:	66 85 c0             	test   %ax,%ax
    a1dc:	75 08                	jne    a1e6 <ipv4_tx+0x125>
    a1de:	41 8b 46 10          	mov    0x10(%r14),%eax
    a1e2:	66 41 89 01          	mov    %ax,(%r9)
    a1e6:	be 14 00 00 00       	mov    $0x14,%esi
    a1eb:	4c 89 e7             	mov    %r12,%rdi
    a1ee:	e8 f6 ac 00 00       	call   14ee9 <tcpip_chksum>
    a1f3:	66 89 43 f6          	mov    %ax,-0xa(%rbx)
    a1f7:	8b 44 24 10          	mov    0x10(%rsp),%eax
    a1fb:	41 09 c7             	or     %eax,%r15d
    a1fe:	41 ff c7             	inc    %r15d
    a201:	75 0d                	jne    a210 <ipv4_tx+0x14f>
    a203:	48 ff 05 3e fa 01 00 	incq   0x1fa3e(%rip)        # 29c48 <ipv4_stats+0x88>
    a20a:	49 8b 4d 78          	mov    0x78(%r13),%rcx
    a20e:	eb 35                	jmp    a245 <ipv4_tx+0x184>
    a210:	25 f0 00 00 00       	and    $0xf0,%eax
    a215:	31 c9                	xor    %ecx,%ecx
    a217:	3d e0 00 00 00       	cmp    $0xe0,%eax
    a21c:	75 27                	jne    a245 <ipv4_tx+0x184>
    a21e:	49 8b 45 50          	mov    0x50(%r13),%rax
    a222:	4c 8d 64 24 14       	lea    0x14(%rsp),%r12
    a227:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    a22c:	48 ff 05 05 fa 01 00 	incq   0x1fa05(%rip)        # 29c38 <ipv4_stats+0x78>
    a233:	4c 89 e2             	mov    %r12,%rdx
    a236:	bf 01 00 00 00       	mov    $0x1,%edi
    a23b:	ff 50 28             	call   *0x28(%rax)
    a23e:	85 c0                	test   %eax,%eax
    a240:	75 58                	jne    a29a <ipv4_tx+0x1d9>
    a242:	4c 89 e1             	mov    %r12,%rcx
    a245:	48 8b 45 20          	mov    0x20(%rbp),%rax
    a249:	48 2b 45 18          	sub    0x18(%rbp),%rax
    a24d:	4d 8d 45 60          	lea    0x60(%r13),%r8
    a251:	48 8d 15 70 ea 01 00 	lea    0x1ea70(%rip),%rdx        # 28cc8 <ipv4_protocol>
    a258:	48 ff 05 c1 f9 01 00 	incq   0x1f9c1(%rip)        # 29c20 <ipv4_stats+0x60>
    a25f:	48 01 05 c2 f9 01 00 	add    %rax,0x1f9c2(%rip)        # 29c28 <ipv4_stats+0x68>
    a266:	48 85 c9             	test   %rcx,%rcx
    a269:	74 0d                	je     a278 <ipv4_tx+0x1b7>
    a26b:	4c 89 ee             	mov    %r13,%rsi
    a26e:	48 89 ef             	mov    %rbp,%rdi
    a271:	e8 8a 3f 00 00       	call   e200 <net_tx>
    a276:	eb 32                	jmp    a2aa <ipv4_tx+0x1e9>
    a278:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    a27d:	50                   	push   %rax
    a27e:	4c 8d 4b f8          	lea    -0x8(%rbx),%r9
    a282:	4c 89 ee             	mov    %r13,%rsi
    a285:	41 50                	push   %r8
    a287:	48 89 ef             	mov    %rbp,%rdi
    a28a:	4c 8d 05 7f d2 01 00 	lea    0x1d27f(%rip),%r8        # 27510 <arp_discovery>
    a291:	e8 9b 35 00 00       	call   d831 <neighbour_tx>
    a296:	5a                   	pop    %rdx
    a297:	59                   	pop    %rcx
    a298:	eb 10                	jmp    a2aa <ipv4_tx+0x1e9>
    a29a:	48 89 ef             	mov    %rbp,%rdi
    a29d:	89 44 24 08          	mov    %eax,0x8(%rsp)
    a2a1:	e8 f0 f9 ff ff       	call   9c96 <free_iob>
    a2a6:	8b 44 24 08          	mov    0x8(%rsp),%eax
    a2aa:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    a2af:	48 2b 15 ba fc 01 00 	sub    0x1fcba(%rip),%rdx        # 29f70 <__stack_chk_guard>
    a2b6:	74 05                	je     a2bd <ipv4_tx+0x1fc>
    a2b8:	e8 a3 87 ff ff       	call   2a60 <__stack_chk_fail>
    a2bd:	48 83 c4 38          	add    $0x38,%rsp
    a2c1:	5b                   	pop    %rbx
    a2c2:	5d                   	pop    %rbp
    a2c3:	41 5c                	pop    %r12
    a2c5:	41 5d                	pop    %r13
    a2c7:	41 5e                	pop    %r14
    a2c9:	41 5f                	pop    %r15
    a2cb:	c3                   	ret    

000000000000a2cc <ipv4_has_any_addr>:
    a2cc:	f3 0f 1e fa          	endbr64 
    a2d0:	48 8b 05 99 c1 01 00 	mov    0x1c199(%rip),%rax        # 26470 <ipv4_miniroutes>
    a2d7:	48 8d 15 92 c1 01 00 	lea    0x1c192(%rip),%rdx        # 26470 <ipv4_miniroutes>
    a2de:	48 39 d0             	cmp    %rdx,%rax
    a2e1:	74 0b                	je     a2ee <ipv4_has_any_addr+0x22>
    a2e3:	48 39 78 10          	cmp    %rdi,0x10(%rax)
    a2e7:	74 08                	je     a2f1 <ipv4_has_any_addr+0x25>
    a2e9:	48 8b 00             	mov    (%rax),%rax
    a2ec:	eb f0                	jmp    a2de <ipv4_has_any_addr+0x12>
    a2ee:	31 c0                	xor    %eax,%eax
    a2f0:	c3                   	ret    
    a2f1:	b8 01 00 00 00       	mov    $0x1,%eax
    a2f6:	c3                   	ret    

000000000000a2f7 <ipv4_rx>:
    a2f7:	f3 0f 1e fa          	endbr64 
    a2fb:	41 55                	push   %r13
    a2fd:	45 89 c5             	mov    %r8d,%r13d
    a300:	41 54                	push   %r12
    a302:	49 89 f4             	mov    %rsi,%r12
    a305:	55                   	push   %rbp
    a306:	48 89 fd             	mov    %rdi,%rbp
    a309:	53                   	push   %rbx
    a30a:	48 83 ec 68          	sub    $0x68,%rsp
    a30e:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
    a312:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    a316:	48 8b 05 53 fc 01 00 	mov    0x1fc53(%rip),%rax        # 29f70 <__stack_chk_guard>
    a31d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    a322:	31 c0                	xor    %eax,%eax
    a324:	48 ff 05 95 f8 01 00 	incq   0x1f895(%rip)        # 29bc0 <ipv4_stats>
    a32b:	48 29 da             	sub    %rbx,%rdx
    a32e:	48 01 15 93 f8 01 00 	add    %rdx,0x1f893(%rip)        # 29bc8 <ipv4_stats+0x8>
    a335:	41 80 e0 02          	and    $0x2,%r8b
    a339:	74 09                	je     a344 <ipv4_rx+0x4d>
    a33b:	48 ff 05 fe f8 01 00 	incq   0x1f8fe(%rip)        # 29c40 <ipv4_stats+0x80>
    a342:	eb 0d                	jmp    a351 <ipv4_rx+0x5a>
    a344:	41 f6 c5 01          	test   $0x1,%r13b
    a348:	74 07                	je     a351 <ipv4_rx+0x5a>
    a34a:	48 ff 05 df f8 01 00 	incq   0x1f8df(%rip)        # 29c30 <ipv4_stats+0x70>
    a351:	48 83 fa 13          	cmp    $0x13,%rdx
    a355:	0f 86 57 01 00 00    	jbe    a4b2 <ipv4_rx+0x1bb>
    a35b:	8a 03                	mov    (%rbx),%al
    a35d:	89 c1                	mov    %eax,%ecx
    a35f:	83 e1 f0             	and    $0xfffffff0,%ecx
    a362:	80 f9 40             	cmp    $0x40,%cl
    a365:	0f 85 47 01 00 00    	jne    a4b2 <ipv4_rx+0x1bb>
    a36b:	83 e0 0f             	and    $0xf,%eax
    a36e:	8d 34 85 00 00 00 00 	lea    0x0(,%rax,4),%esi
    a375:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a37a:	48 39 d6             	cmp    %rdx,%rsi
    a37d:	0f 87 2f 01 00 00    	ja     a4b2 <ipv4_rx+0x1bb>
    a383:	83 fe 13             	cmp    $0x13,%esi
    a386:	0f 86 26 01 00 00    	jbe    a4b2 <ipv4_rx+0x1bb>
    a38c:	48 89 df             	mov    %rbx,%rdi
    a38f:	e8 55 ab 00 00       	call   14ee9 <tcpip_chksum>
    a394:	66 85 c0             	test   %ax,%ax
    a397:	0f 85 15 01 00 00    	jne    a4b2 <ipv4_rx+0x1bb>
    a39d:	66 8b 43 02          	mov    0x2(%rbx),%ax
    a3a1:	86 c4                	xchg   %al,%ah
    a3a3:	0f b7 c0             	movzwl %ax,%eax
    a3a6:	48 39 44 24 10       	cmp    %rax,0x10(%rsp)
    a3ab:	0f 87 01 01 00 00    	ja     a4b2 <ipv4_rx+0x1bb>
    a3b1:	48 8b 55 20          	mov    0x20(%rbp),%rdx
    a3b5:	48 89 d1             	mov    %rdx,%rcx
    a3b8:	48 2b 4d 18          	sub    0x18(%rbp),%rcx
    a3bc:	48 39 c8             	cmp    %rcx,%rax
    a3bf:	76 0c                	jbe    a3cd <ipv4_rx+0xd6>
    a3c1:	48 ff 05 20 f8 01 00 	incq   0x1f820(%rip)        # 29be8 <ipv4_stats+0x28>
    a3c8:	e9 ec 00 00 00       	jmp    a4b9 <ipv4_rx+0x1c2>
    a3cd:	48 29 c8             	sub    %rcx,%rax
    a3d0:	48 01 c2             	add    %rax,%rdx
    a3d3:	41 80 e5 01          	and    $0x1,%r13b
    a3d7:	48 89 55 20          	mov    %rdx,0x20(%rbp)
    a3db:	75 2a                	jne    a407 <ipv4_rx+0x110>
    a3dd:	83 7b 10 ff          	cmpl   $0xffffffff,0x10(%rbx)
    a3e1:	74 24                	je     a407 <ipv4_rx+0x110>
    a3e3:	4c 89 e7             	mov    %r12,%rdi
    a3e6:	e8 e1 fe ff ff       	call   a2cc <ipv4_has_any_addr>
    a3eb:	85 c0                	test   %eax,%eax
    a3ed:	74 18                	je     a407 <ipv4_rx+0x110>
    a3ef:	8b 73 10             	mov    0x10(%rbx),%esi
    a3f2:	e8 d0 f9 ff ff       	call   9dc7 <ipv4_has_addr>
    a3f7:	85 c0                	test   %eax,%eax
    a3f9:	75 0c                	jne    a407 <ipv4_rx+0x110>
    a3fb:	48 ff 05 d6 f7 01 00 	incq   0x1f7d6(%rip)        # 29bd8 <ipv4_stats+0x18>
    a402:	e9 b2 00 00 00       	jmp    a4b9 <ipv4_rx+0x1c2>
    a407:	66 f7 43 06 3f ff    	testw  $0xff3f,0x6(%rbx)
    a40d:	74 26                	je     a435 <ipv4_rx+0x13e>
    a40f:	48 89 ee             	mov    %rbp,%rsi
    a412:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    a417:	48 8d 3d 22 c0 01 00 	lea    0x1c022(%rip),%rdi        # 26440 <ipv4_reassembler>
    a41e:	e8 36 3d 01 00       	call   1e159 <fragment_reassemble>
    a423:	48 89 c5             	mov    %rax,%rbp
    a426:	31 c0                	xor    %eax,%eax
    a428:	48 85 ed             	test   %rbp,%rbp
    a42b:	0f 84 95 00 00 00    	je     a4c6 <ipv4_rx+0x1cf>
    a431:	48 8b 5d 18          	mov    0x18(%rbp),%rbx
    a435:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    a43a:	ba 20 00 00 00       	mov    $0x20,%edx
    a43f:	31 c0                	xor    %eax,%eax
    a441:	4c 89 ef             	mov    %r13,%rdi
    a444:	48 89 d1             	mov    %rdx,%rcx
    a447:	f3 aa                	rep stos %al,%es:(%rdi)
    a449:	8b 4b 0c             	mov    0xc(%rbx),%ecx
    a44c:	4c 8d 44 24 38       	lea    0x38(%rsp),%r8
    a451:	66 c7 44 24 18 01 00 	movw   $0x1,0x18(%rsp)
    a458:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    a45d:	4c 89 c7             	mov    %r8,%rdi
    a460:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a464:	48 89 d1             	mov    %rdx,%rcx
    a467:	f3 aa                	rep stos %al,%es:(%rdi)
    a469:	8b 43 10             	mov    0x10(%rbx),%eax
    a46c:	31 f6                	xor    %esi,%esi
    a46e:	48 89 ef             	mov    %rbp,%rdi
    a471:	66 c7 44 24 38 01 00 	movw   $0x1,0x38(%rsp)
    a478:	89 44 24 40          	mov    %eax,0x40(%rsp)
    a47c:	e8 89 f9 ff ff       	call   9e0a <ipv4_pshdr_chksum>
    a481:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    a486:	4c 89 e6             	mov    %r12,%rsi
    a489:	48 89 ef             	mov    %rbp,%rdi
    a48c:	48 01 55 18          	add    %rdx,0x18(%rbp)
    a490:	0f b6 53 09          	movzbl 0x9(%rbx),%edx
    a494:	48 8d 1d 25 f7 01 00 	lea    0x1f725(%rip),%rbx        # 29bc0 <ipv4_stats>
    a49b:	44 0f b7 c8          	movzwl %ax,%r9d
    a49f:	51                   	push   %rcx
    a4a0:	4c 89 e9             	mov    %r13,%rcx
    a4a3:	53                   	push   %rbx
    a4a4:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    a4a9:	e8 25 a9 00 00       	call   14dd3 <tcpip_rx>
    a4ae:	5e                   	pop    %rsi
    a4af:	5f                   	pop    %rdi
    a4b0:	eb 14                	jmp    a4c6 <ipv4_rx+0x1cf>
    a4b2:	48 ff 05 17 f7 01 00 	incq   0x1f717(%rip)        # 29bd0 <ipv4_stats+0x10>
    a4b9:	48 89 ef             	mov    %rbp,%rdi
    a4bc:	e8 d5 f7 ff ff       	call   9c96 <free_iob>
    a4c1:	b8 7e 9f fa e3       	mov    $0xe3fa9f7e,%eax
    a4c6:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    a4cb:	48 2b 15 9e fa 01 00 	sub    0x1fa9e(%rip),%rdx        # 29f70 <__stack_chk_guard>
    a4d2:	74 05                	je     a4d9 <ipv4_rx+0x1e2>
    a4d4:	e8 87 85 ff ff       	call   2a60 <__stack_chk_fail>
    a4d9:	48 83 c4 68          	add    $0x68,%rsp
    a4dd:	5b                   	pop    %rbx
    a4de:	5d                   	pop    %rbp
    a4df:	41 5c                	pop    %r12
    a4e1:	41 5d                	pop    %r13
    a4e3:	c3                   	ret    

000000000000a4e4 <inet_aton>:
    a4e4:	f3 0f 1e fa          	endbr64 
    a4e8:	41 55                	push   %r13
    a4ea:	4c 8d 2d b2 98 01 00 	lea    0x198b2(%rip),%r13        # 23da3 <.LC0>
    a4f1:	41 54                	push   %r12
    a4f3:	49 89 f4             	mov    %rsi,%r12
    a4f6:	55                   	push   %rbp
    a4f7:	31 ed                	xor    %ebp,%ebp
    a4f9:	53                   	push   %rbx
    a4fa:	48 89 fb             	mov    %rdi,%rbx
    a4fd:	48 83 ec 18          	sub    $0x18,%rsp
    a501:	48 8b 05 68 fa 01 00 	mov    0x1fa68(%rip),%rax        # 29f70 <__stack_chk_guard>
    a508:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a50d:	31 c0                	xor    %eax,%eax
    a50f:	31 d2                	xor    %edx,%edx
    a511:	48 89 e6             	mov    %rsp,%rsi
    a514:	48 89 df             	mov    %rbx,%rdi
    a517:	e8 5f 95 00 00       	call   13a7b <strtoul>
    a51c:	48 8b 14 24          	mov    (%rsp),%rdx
    a520:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    a526:	77 1f                	ja     a547 <inet_aton+0x63>
    a528:	48 39 da             	cmp    %rbx,%rdx
    a52b:	74 1a                	je     a547 <inet_aton+0x63>
    a52d:	41 88 04 2c          	mov    %al,(%r12,%rbp,1)
    a531:	41 8a 44 2d 00       	mov    0x0(%r13,%rbp,1),%al
    a536:	38 02                	cmp    %al,(%rdx)
    a538:	75 0d                	jne    a547 <inet_aton+0x63>
    a53a:	48 ff c5             	inc    %rbp
    a53d:	84 c0                	test   %al,%al
    a53f:	74 0a                	je     a54b <inet_aton+0x67>
    a541:	48 8d 5a 01          	lea    0x1(%rdx),%rbx
    a545:	eb c8                	jmp    a50f <inet_aton+0x2b>
    a547:	31 c0                	xor    %eax,%eax
    a549:	eb 05                	jmp    a550 <inet_aton+0x6c>
    a54b:	b8 01 00 00 00       	mov    $0x1,%eax
    a550:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a555:	48 2b 15 14 fa 01 00 	sub    0x1fa14(%rip),%rdx        # 29f70 <__stack_chk_guard>
    a55c:	74 05                	je     a563 <inet_aton+0x7f>
    a55e:	e8 fd 84 ff ff       	call   2a60 <__stack_chk_fail>
    a563:	48 83 c4 18          	add    $0x18,%rsp
    a567:	5b                   	pop    %rbx
    a568:	5d                   	pop    %rbp
    a569:	41 5c                	pop    %r12
    a56b:	41 5d                	pop    %r13
    a56d:	c3                   	ret    

000000000000a56e <ipv4_sock_aton>:
    a56e:	f3 0f 1e fa          	endbr64 
    a572:	53                   	push   %rbx
    a573:	48 89 f3             	mov    %rsi,%rbx
    a576:	48 83 ec 10          	sub    $0x10,%rsp
    a57a:	48 8b 05 ef f9 01 00 	mov    0x1f9ef(%rip),%rax        # 29f70 <__stack_chk_guard>
    a581:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a586:	31 c0                	xor    %eax,%eax
    a588:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    a58d:	e8 52 ff ff ff       	call   a4e4 <inet_aton>
    a592:	85 c0                	test   %eax,%eax
    a594:	74 0b                	je     a5a1 <ipv4_sock_aton+0x33>
    a596:	8b 44 24 04          	mov    0x4(%rsp),%eax
    a59a:	89 43 08             	mov    %eax,0x8(%rbx)
    a59d:	31 c0                	xor    %eax,%eax
    a59f:	eb 05                	jmp    a5a6 <ipv4_sock_aton+0x38>
    a5a1:	b8 7e 9f fa e3       	mov    $0xe3fa9f7e,%eax
    a5a6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a5ab:	48 2b 15 be f9 01 00 	sub    0x1f9be(%rip),%rdx        # 29f70 <__stack_chk_guard>
    a5b2:	74 05                	je     a5b9 <ipv4_sock_aton+0x4b>
    a5b4:	e8 a7 84 ff ff       	call   2a60 <__stack_chk_fail>
    a5b9:	48 83 c4 10          	add    $0x10,%rsp
    a5bd:	5b                   	pop    %rbx
    a5be:	c3                   	ret    

000000000000a5bf <inet_ntoa>:
    a5bf:	f3 0f 1e fa          	endbr64 
    a5c3:	89 f8                	mov    %edi,%eax
    a5c5:	41 54                	push   %r12
    a5c7:	41 89 f9             	mov    %edi,%r9d
    a5ca:	4c 8d 25 df f5 01 00 	lea    0x1f5df(%rip),%r12        # 29bb0 <buf.0>
    a5d1:	0f b6 f4             	movzbl %ah,%esi
    a5d4:	c1 e8 18             	shr    $0x18,%eax
    a5d7:	52                   	push   %rdx
    a5d8:	40 0f b6 cf          	movzbl %dil,%ecx
    a5dc:	50                   	push   %rax
    a5dd:	41 c1 e9 10          	shr    $0x10,%r9d
    a5e1:	41 89 f0             	mov    %esi,%r8d
    a5e4:	4c 89 e7             	mov    %r12,%rdi
    a5e7:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
    a5eb:	45 0f b6 c9          	movzbl %r9b,%r9d
    a5ef:	48 8d 15 fb 8a 01 00 	lea    0x18afb(%rip),%rdx        # 230f1 <.LC1>
    a5f6:	31 c0                	xor    %eax,%eax
    a5f8:	e8 84 ca 00 00       	call   17081 <snprintf>
    a5fd:	59                   	pop    %rcx
    a5fe:	4c 89 e0             	mov    %r12,%rax
    a601:	5e                   	pop    %rsi
    a602:	41 5c                	pop    %r12
    a604:	c3                   	ret    

000000000000a605 <ipv4_ntoa>:
    a605:	f3 0f 1e fa          	endbr64 
    a609:	8b 3f                	mov    (%rdi),%edi
    a60b:	e9 af ff ff ff       	jmp    a5bf <inet_ntoa>

000000000000a610 <ipv4_sock_ntoa>:
    a610:	f3 0f 1e fa          	endbr64 
    a614:	8b 7f 08             	mov    0x8(%rdi),%edi
    a617:	e9 a3 ff ff ff       	jmp    a5bf <inet_ntoa>

000000000000a61c <parse_ipv4_setting>:
    a61c:	f3 0f 1e fa          	endbr64 
    a620:	41 54                	push   %r12
    a622:	48 89 f7             	mov    %rsi,%rdi
    a625:	55                   	push   %rbp
    a626:	48 89 d5             	mov    %rdx,%rbp
    a629:	53                   	push   %rbx
    a62a:	48 89 cb             	mov    %rcx,%rbx
    a62d:	48 83 ec 10          	sub    $0x10,%rsp
    a631:	48 8b 05 38 f9 01 00 	mov    0x1f938(%rip),%rax        # 29f70 <__stack_chk_guard>
    a638:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a63d:	31 c0                	xor    %eax,%eax
    a63f:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    a644:	4c 89 e6             	mov    %r12,%rsi
    a647:	e8 98 fe ff ff       	call   a4e4 <inet_aton>
    a64c:	85 c0                	test   %eax,%eax
    a64e:	75 07                	jne    a657 <parse_ipv4_setting+0x3b>
    a650:	b8 7e 9f fa e3       	mov    $0xe3fa9f7e,%eax
    a655:	eb 1f                	jmp    a676 <parse_ipv4_setting+0x5a>
    a657:	b8 04 00 00 00       	mov    $0x4,%eax
    a65c:	4c 89 e6             	mov    %r12,%rsi
    a65f:	48 89 ef             	mov    %rbp,%rdi
    a662:	48 39 c3             	cmp    %rax,%rbx
    a665:	48 0f 46 c3          	cmovbe %rbx,%rax
    a669:	48 89 c2             	mov    %rax,%rdx
    a66c:	e8 9c cc 00 00       	call   1730d <__memcpy>
    a671:	b8 04 00 00 00       	mov    $0x4,%eax
    a676:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a67b:	48 2b 15 ee f8 01 00 	sub    0x1f8ee(%rip),%rdx        # 29f70 <__stack_chk_guard>
    a682:	74 05                	je     a689 <parse_ipv4_setting+0x6d>
    a684:	e8 d7 83 ff ff       	call   2a60 <__stack_chk_fail>
    a689:	48 83 c4 10          	add    $0x10,%rsp
    a68d:	5b                   	pop    %rbx
    a68e:	5d                   	pop    %rbp
    a68f:	41 5c                	pop    %r12
    a691:	c3                   	ret    

000000000000a692 <format_ipv4_setting>:
    a692:	f3 0f 1e fa          	endbr64 
    a696:	48 83 fa 03          	cmp    $0x3,%rdx
    a69a:	76 2d                	jbe    a6c9 <format_ipv4_setting+0x37>
    a69c:	41 54                	push   %r12
    a69e:	4d 89 c4             	mov    %r8,%r12
    a6a1:	55                   	push   %rbp
    a6a2:	48 89 cd             	mov    %rcx,%rbp
    a6a5:	50                   	push   %rax
    a6a6:	8b 3e                	mov    (%rsi),%edi
    a6a8:	e8 12 ff ff ff       	call   a5bf <inet_ntoa>
    a6ad:	41 58                	pop    %r8
    a6af:	4c 89 e6             	mov    %r12,%rsi
    a6b2:	48 89 ef             	mov    %rbp,%rdi
    a6b5:	48 89 c1             	mov    %rax,%rcx
    a6b8:	5d                   	pop    %rbp
    a6b9:	48 8d 15 61 8f 01 00 	lea    0x18f61(%rip),%rdx        # 23621 <.LC0>
    a6c0:	31 c0                	xor    %eax,%eax
    a6c2:	41 5c                	pop    %r12
    a6c4:	e9 b8 c9 00 00       	jmp    17081 <snprintf>
    a6c9:	b8 7e 9f fa e3       	mov    $0xe3fa9f7e,%eax
    a6ce:	c3                   	ret    

000000000000a6cf <iscsi_tx_nothing>:
    a6cf:	f3 0f 1e fa          	endbr64 
    a6d3:	31 c0                	xor    %eax,%eax
    a6d5:	c3                   	ret    

000000000000a6d6 <iscsi_rx_discard>:
    a6d6:	f3 0f 1e fa          	endbr64 
    a6da:	31 c0                	xor    %eax,%eax
    a6dc:	c3                   	ret    

000000000000a6dd <iscsi_scsi_window>:
    a6dd:	f3 0f 1e fa          	endbr64 
    a6e1:	8b 97 90 00 00 00    	mov    0x90(%rdi),%edx
    a6e7:	31 c0                	xor    %eax,%eax
    a6e9:	83 e2 0f             	and    $0xf,%edx
    a6ec:	83 fa 0c             	cmp    $0xc,%edx
    a6ef:	75 0d                	jne    a6fe <iscsi_scsi_window+0x21>
    a6f1:	31 c0                	xor    %eax,%eax
    a6f3:	48 83 bf b0 01 00 00 	cmpq   $0x0,0x1b0(%rdi)
    a6fa:	00 
    a6fb:	0f 94 c0             	sete   %al
    a6fe:	c3                   	ret    

000000000000a6ff <iscsi_describe>:
    a6ff:	f3 0f 1e fa          	endbr64 
    a703:	48 8d 87 e0 01 00 00 	lea    0x1e0(%rdi),%rax
    a70a:	c3                   	ret    

000000000000a70b <iscsi_rx_bhs>:
    a70b:	f3 0f 1e fa          	endbr64 
    a70f:	50                   	push   %rax
    a710:	48 03 bf 98 01 00 00 	add    0x198(%rdi),%rdi
    a717:	48 81 c7 60 01 00 00 	add    $0x160,%rdi
    a71e:	e8 ea cb 00 00       	call   1730d <__memcpy>
    a723:	31 c0                	xor    %eax,%eax
    a725:	5a                   	pop    %rdx
    a726:	c3                   	ret    

000000000000a727 <iscsi_build_login_request_strings>:
    a727:	55                   	push   %rbp
    a728:	48 89 e5             	mov    %rsp,%rbp
    a72b:	41 57                	push   %r15
    a72d:	41 56                	push   %r14
    a72f:	49 89 d6             	mov    %rdx,%r14
    a732:	41 55                	push   %r13
    a734:	49 89 f5             	mov    %rsi,%r13
    a737:	41 54                	push   %r12
    a739:	45 31 e4             	xor    %r12d,%r12d
    a73c:	53                   	push   %rbx
    a73d:	48 89 fb             	mov    %rdi,%rbx
    a740:	48 83 ec 28          	sub    $0x28,%rsp
    a744:	48 8b 05 25 f8 01 00 	mov    0x1f825(%rip),%rax        # 29f70 <__stack_chk_guard>
    a74b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    a74f:	31 c0                	xor    %eax,%eax
    a751:	f6 87 91 00 00 00 01 	testb  $0x1,0x91(%rdi)
    a758:	74 5d                	je     a7b7 <iscsi_build_login_request_strings+0x90>
    a75a:	48 83 bf 98 00 00 00 	cmpq   $0x0,0x98(%rdi)
    a761:	00 
    a762:	48 8b 4f 70          	mov    0x70(%rdi),%rcx
    a766:	4c 89 f6             	mov    %r14,%rsi
    a769:	48 8d 15 c4 89 01 00 	lea    0x189c4(%rip),%rdx        # 23134 <.LC1>
    a770:	48 8d 05 c2 89 01 00 	lea    0x189c2(%rip),%rax        # 23139 <.LC0>
    a777:	4c 8b 8f 88 00 00 00 	mov    0x88(%rdi),%r9
    a77e:	48 0f 45 c2          	cmovne %rdx,%rax
    a782:	48 83 bf a8 00 00 00 	cmpq   $0x0,0xa8(%rdi)
    a789:	00 
    a78a:	6a 00                	push   $0x0
    a78c:	4c 89 ef             	mov    %r13,%rdi
    a78f:	48 8d 15 a8 89 01 00 	lea    0x189a8(%rip),%rdx        # 2313e <.LC2>
    a796:	48 0f 45 c2          	cmovne %rdx,%rax
    a79a:	45 31 c0             	xor    %r8d,%r8d
    a79d:	48 8d 15 9f 89 01 00 	lea    0x1899f(%rip),%rdx        # 23143 <.LC3>
    a7a4:	50                   	push   %rax
    a7a5:	31 c0                	xor    %eax,%eax
    a7a7:	6a 00                	push   $0x0
    a7a9:	6a 00                	push   $0x0
    a7ab:	e8 43 c9 00 00       	call   170f3 <ssnprintf>
    a7b0:	48 83 c4 20          	add    $0x20,%rsp
    a7b4:	41 89 c4             	mov    %eax,%r12d
    a7b7:	f6 83 91 00 00 00 02 	testb  $0x2,0x91(%rbx)
    a7be:	74 1f                	je     a7df <iscsi_build_login_request_strings+0xb8>
    a7c0:	44 89 e7             	mov    %r12d,%edi
    a7c3:	4c 89 f6             	mov    %r14,%rsi
    a7c6:	31 c9                	xor    %ecx,%ecx
    a7c8:	31 c0                	xor    %eax,%eax
    a7ca:	48 29 fe             	sub    %rdi,%rsi
    a7cd:	48 8d 15 b4 89 01 00 	lea    0x189b4(%rip),%rdx        # 23188 <.LC4>
    a7d4:	4c 01 ef             	add    %r13,%rdi
    a7d7:	e8 17 c9 00 00       	call   170f3 <ssnprintf>
    a7dc:	41 01 c4             	add    %eax,%r12d
    a7df:	f6 83 91 00 00 00 04 	testb  $0x4,0x91(%rbx)
    a7e6:	0f 84 a2 00 00 00    	je     a88e <iscsi_build_login_request_strings+0x167>
    a7ec:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    a7f3:	48 89 e1             	mov    %rsp,%rcx
    a7f6:	49 89 e7             	mov    %rsp,%r15
    a7f9:	48 8d 04 12          	lea    (%rdx,%rdx,1),%rax
    a7fd:	4c 8d 40 01          	lea    0x1(%rax),%r8
    a801:	48 83 c0 10          	add    $0x10,%rax
    a805:	48 89 c6             	mov    %rax,%rsi
    a808:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    a80e:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
    a812:	48 29 c1             	sub    %rax,%rcx
    a815:	48 39 cc             	cmp    %rcx,%rsp
    a818:	74 12                	je     a82c <iscsi_build_login_request_strings+0x105>
    a81a:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    a821:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    a828:	00 00 
    a82a:	eb e9                	jmp    a815 <iscsi_build_login_request_strings+0xee>
    a82c:	48 89 f0             	mov    %rsi,%rax
    a82f:	25 ff 0f 00 00       	and    $0xfff,%eax
    a834:	48 29 c4             	sub    %rax,%rsp
    a837:	48 85 c0             	test   %rax,%rax
    a83a:	74 06                	je     a842 <iscsi_build_login_request_strings+0x11b>
    a83c:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    a842:	48 8b b3 e0 00 00 00 	mov    0xe0(%rbx),%rsi
    a849:	49 89 e1             	mov    %rsp,%r9
    a84c:	48 89 e1             	mov    %rsp,%rcx
    a84f:	31 ff                	xor    %edi,%edi
    a851:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    a855:	e8 ca e0 00 00       	call   18924 <hex_encode>
    a85a:	48 8b 8b 98 00 00 00 	mov    0x98(%rbx),%rcx
    a861:	44 89 e0             	mov    %r12d,%eax
    a864:	4c 89 f6             	mov    %r14,%rsi
    a867:	41 50                	push   %r8
    a869:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    a86d:	48 29 c6             	sub    %rax,%rsi
    a870:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    a875:	6a 00                	push   $0x0
    a877:	45 31 c0             	xor    %r8d,%r8d
    a87a:	48 8d 15 12 89 01 00 	lea    0x18912(%rip),%rdx        # 23193 <.LC5>
    a881:	31 c0                	xor    %eax,%eax
    a883:	e8 6b c8 00 00       	call   170f3 <ssnprintf>
    a888:	4c 89 fc             	mov    %r15,%rsp
    a88b:	41 01 c4             	add    %eax,%r12d
    a88e:	f6 83 91 00 00 00 08 	testb  $0x8,0x91(%rbx)
    a895:	74 7a                	je     a911 <iscsi_build_login_request_strings+0x1ea>
    a897:	49 89 e7             	mov    %rsp,%r15
    a89a:	4c 39 fc             	cmp    %r15,%rsp
    a89d:	74 12                	je     a8b1 <iscsi_build_login_request_strings+0x18a>
    a89f:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    a8a6:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    a8ad:	00 00 
    a8af:	eb e9                	jmp    a89a <iscsi_build_login_request_strings+0x173>
    a8b1:	48 83 ec 30          	sub    $0x30,%rsp
    a8b5:	48 83 4c 24 28 00    	orq    $0x0,0x28(%rsp)
    a8bb:	ba 10 00 00 00       	mov    $0x10,%edx
    a8c0:	41 b8 21 00 00 00    	mov    $0x21,%r8d
    a8c6:	31 ff                	xor    %edi,%edi
    a8c8:	49 89 e1             	mov    %rsp,%r9
    a8cb:	48 89 e1             	mov    %rsp,%rcx
    a8ce:	48 8d b3 b9 00 00 00 	lea    0xb9(%rbx),%rsi
    a8d5:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
    a8d9:	e8 46 e0 00 00       	call   18924 <hex_encode>
    a8de:	44 89 e0             	mov    %r12d,%eax
    a8e1:	4c 89 f6             	mov    %r14,%rsi
    a8e4:	45 31 c0             	xor    %r8d,%r8d
    a8e7:	0f b6 8b b8 00 00 00 	movzbl 0xb8(%rbx),%ecx
    a8ee:	52                   	push   %rdx
    a8ef:	48 29 c6             	sub    %rax,%rsi
    a8f2:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    a8f7:	6a 00                	push   $0x0
    a8f9:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    a8fd:	48 8d 15 a8 88 01 00 	lea    0x188a8(%rip),%rdx        # 231ac <.LC6>
    a904:	31 c0                	xor    %eax,%eax
    a906:	e8 e8 c7 00 00       	call   170f3 <ssnprintf>
    a90b:	4c 89 fc             	mov    %r15,%rsp
    a90e:	41 01 c4             	add    %eax,%r12d
    a911:	f6 83 91 00 00 00 10 	testb  $0x10,0x91(%rbx)
    a918:	74 42                	je     a95c <iscsi_build_login_request_strings+0x235>
    a91a:	44 89 e0             	mov    %r12d,%eax
    a91d:	4c 89 f6             	mov    %r14,%rsi
    a920:	45 31 c9             	xor    %r9d,%r9d
    a923:	45 31 c0             	xor    %r8d,%r8d
    a926:	48 29 c6             	sub    %rax,%rsi
    a929:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    a92e:	50                   	push   %rax
    a92f:	31 c9                	xor    %ecx,%ecx
    a931:	6a 00                	push   $0x0
    a933:	48 8d 15 8b 88 01 00 	lea    0x1888b(%rip),%rdx        # 231c5 <.LC7>
    a93a:	31 c0                	xor    %eax,%eax
    a93c:	6a 00                	push   $0x0
    a93e:	6a 00                	push   $0x0
    a940:	6a 00                	push   $0x0
    a942:	6a 00                	push   $0x0
    a944:	6a 00                	push   $0x0
    a946:	6a 00                	push   $0x0
    a948:	6a 00                	push   $0x0
    a94a:	6a 00                	push   $0x0
    a94c:	6a 00                	push   $0x0
    a94e:	6a 00                	push   $0x0
    a950:	e8 9e c7 00 00       	call   170f3 <ssnprintf>
    a955:	48 83 c4 60          	add    $0x60,%rsp
    a959:	41 01 c4             	add    %eax,%r12d
    a95c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a960:	48 2b 05 09 f6 01 00 	sub    0x1f609(%rip),%rax        # 29f70 <__stack_chk_guard>
    a967:	74 05                	je     a96e <iscsi_build_login_request_strings+0x247>
    a969:	e8 f2 80 ff ff       	call   2a60 <__stack_chk_fail>
    a96e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a972:	44 89 e0             	mov    %r12d,%eax
    a975:	5b                   	pop    %rbx
    a976:	41 5c                	pop    %r12
    a978:	41 5d                	pop    %r13
    a97a:	41 5e                	pop    %r14
    a97c:	41 5f                	pop    %r15
    a97e:	5d                   	pop    %rbp
    a97f:	c3                   	ret    

000000000000a980 <iscsi_tx_data>:
    a980:	f3 0f 1e fa          	endbr64 
    a984:	41 57                	push   %r15
    a986:	41 56                	push   %r14
    a988:	41 55                	push   %r13
    a98a:	41 54                	push   %r12
    a98c:	55                   	push   %rbp
    a98d:	48 89 fd             	mov    %rdi,%rbp
    a990:	53                   	push   %rbx
    a991:	56                   	push   %rsi
    a992:	8a 87 0c 01 00 00    	mov    0x10c(%rdi),%al
    a998:	83 e0 3f             	and    $0x3f,%eax
    a99b:	3c 03                	cmp    $0x3,%al
    a99d:	0f 84 88 00 00 00    	je     aa2b <iscsi_tx_data+0xab>
    a9a3:	3c 05                	cmp    $0x5,%al
    a9a5:	0f 85 fb 00 00 00    	jne    aaa6 <iscsi_tx_data+0x126>
    a9ab:	0f b6 9f 13 01 00 00 	movzbl 0x113(%rdi),%ebx
    a9b2:	44 8b af 10 01 00 00 	mov    0x110(%rdi),%r13d
    a9b9:	4c 8d 77 50          	lea    0x50(%rdi),%r14
    a9bd:	41 0f cd             	bswap  %r13d
    a9c0:	f7 db                	neg    %ebx
    a9c2:	41 81 e5 ff ff ff 00 	and    $0xffffff,%r13d
    a9c9:	44 8b a7 34 01 00 00 	mov    0x134(%rdi),%r12d
    a9d0:	4c 89 f7             	mov    %r14,%rdi
    a9d3:	83 e3 03             	and    $0x3,%ebx
    a9d6:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    a9db:	e8 bb cb 00 00       	call   1759b <xfer_alloc_iob>
    a9e0:	41 0f cc             	bswap  %r12d
    a9e3:	49 89 c7             	mov    %rax,%r15
    a9e6:	45 89 e4             	mov    %r12d,%r12d
    a9e9:	48 85 c0             	test   %rax,%rax
    a9ec:	75 02                	jne    a9f0 <iscsi_tx_data+0x70>
    a9ee:	eb 71                	jmp    aa61 <iscsi_tx_data+0xe1>
    a9f0:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    a9f4:	48 8b 85 b0 01 00 00 	mov    0x1b0(%rbp),%rax
    a9fb:	4a 8d 14 2f          	lea    (%rdi,%r13,1),%rdx
    a9ff:	48 8b 40 18          	mov    0x18(%rax),%rax
    aa03:	49 89 57 20          	mov    %rdx,0x20(%r15)
    aa07:	4c 89 ea             	mov    %r13,%rdx
    aa0a:	49 8d 34 04          	lea    (%r12,%rax,1),%rsi
    aa0e:	e8 fa c8 00 00       	call   1730d <__memcpy>
    aa13:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    aa17:	48 89 d9             	mov    %rbx,%rcx
    aa1a:	48 8d 04 1f          	lea    (%rdi,%rbx,1),%rax
    aa1e:	49 89 47 20          	mov    %rax,0x20(%r15)
    aa22:	31 c0                	xor    %eax,%eax
    aa24:	f3 aa                	rep stos %al,%es:(%rdi)
    aa26:	4c 89 fe             	mov    %r15,%rsi
    aa29:	eb 68                	jmp    aa93 <iscsi_tx_data+0x113>
    aa2b:	0f b6 9f 13 01 00 00 	movzbl 0x113(%rdi),%ebx
    aa32:	44 8b af 10 01 00 00 	mov    0x110(%rdi),%r13d
    aa39:	4c 8d 77 50          	lea    0x50(%rdi),%r14
    aa3d:	41 0f cd             	bswap  %r13d
    aa40:	f7 db                	neg    %ebx
    aa42:	41 81 e5 ff ff ff 00 	and    $0xffffff,%r13d
    aa49:	4c 89 f7             	mov    %r14,%rdi
    aa4c:	83 e3 03             	and    $0x3,%ebx
    aa4f:	49 8d 74 1d 00       	lea    0x0(%r13,%rbx,1),%rsi
    aa54:	e8 42 cb 00 00       	call   1759b <xfer_alloc_iob>
    aa59:	49 89 c4             	mov    %rax,%r12
    aa5c:	48 85 c0             	test   %rax,%rax
    aa5f:	75 07                	jne    aa68 <iscsi_tx_data+0xe8>
    aa61:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    aa66:	eb 40                	jmp    aaa8 <iscsi_tx_data+0x128>
    aa68:	4c 01 68 20          	add    %r13,0x20(%rax)
    aa6c:	48 8b 70 18          	mov    0x18(%rax),%rsi
    aa70:	48 89 ef             	mov    %rbp,%rdi
    aa73:	4c 89 ea             	mov    %r13,%rdx
    aa76:	e8 ac fc ff ff       	call   a727 <iscsi_build_login_request_strings>
    aa7b:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    aa80:	48 89 d9             	mov    %rbx,%rcx
    aa83:	48 8d 04 1f          	lea    (%rdi,%rbx,1),%rax
    aa87:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    aa8c:	31 c0                	xor    %eax,%eax
    aa8e:	f3 aa                	rep stos %al,%es:(%rdi)
    aa90:	4c 89 e6             	mov    %r12,%rsi
    aa93:	59                   	pop    %rcx
    aa94:	4c 89 f7             	mov    %r14,%rdi
    aa97:	5b                   	pop    %rbx
    aa98:	5d                   	pop    %rbp
    aa99:	41 5c                	pop    %r12
    aa9b:	41 5d                	pop    %r13
    aa9d:	41 5e                	pop    %r14
    aa9f:	41 5f                	pop    %r15
    aaa1:	e9 60 cc 00 00       	jmp    17706 <xfer_deliver_iob>
    aaa6:	31 c0                	xor    %eax,%eax
    aaa8:	5a                   	pop    %rdx
    aaa9:	5b                   	pop    %rbx
    aaaa:	5d                   	pop    %rbp
    aaab:	41 5c                	pop    %r12
    aaad:	41 5d                	pop    %r13
    aaaf:	41 5e                	pop    %r14
    aab1:	41 5f                	pop    %r15
    aab3:	c3                   	ret    

000000000000aab4 <iscsi_tx_bhs>:
    aab4:	f3 0f 1e fa          	endbr64 
    aab8:	48 8d b7 0c 01 00 00 	lea    0x10c(%rdi),%rsi
    aabf:	ba 30 00 00 00       	mov    $0x30,%edx
    aac4:	48 83 c7 50          	add    $0x50,%rdi
    aac8:	e9 b9 cc 00 00       	jmp    17786 <xfer_deliver_raw>

000000000000aacd <iscsi_tx_resume>:
    aacd:	f3 0f 1e fa          	endbr64 
    aad1:	48 81 c7 40 01 00 00 	add    $0x140,%rdi
    aad8:	e9 54 4e 00 00       	jmp    f931 <process_add>

000000000000aadd <iscsi_start_data_out>:
    aadd:	41 56                	push   %r14
    aadf:	b9 30 00 00 00       	mov    $0x30,%ecx
    aae4:	41 55                	push   %r13
    aae6:	41 54                	push   %r12
    aae8:	41 89 f4             	mov    %esi,%r12d
    aaeb:	55                   	push   %rbp
    aaec:	89 f5                	mov    %esi,%ebp
    aaee:	53                   	push   %rbx
    aaef:	c1 e5 09             	shl    $0x9,%ebp
    aaf2:	44 8b b7 00 01 00 00 	mov    0x100(%rdi),%r14d
    aaf9:	48 89 fb             	mov    %rdi,%rbx
    aafc:	89 e8                	mov    %ebp,%eax
    aafe:	49 29 c6             	sub    %rax,%r14
    ab01:	b8 00 02 00 00       	mov    $0x200,%eax
    ab06:	49 39 c6             	cmp    %rax,%r14
    ab09:	49 0f 46 c6          	cmovbe %r14,%rax
    ab0d:	48 81 c7 0c 01 00 00 	add    $0x10c,%rdi
    ab14:	49 89 c5             	mov    %rax,%r13
    ab17:	31 c0                	xor    %eax,%eax
    ab19:	f3 aa                	rep stos %al,%es:(%rdi)
    ab1b:	c7 83 3c 01 00 00 01 	movl   $0x1,0x13c(%rbx)
    ab22:	00 00 00 
    ab25:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    ab2c:	e8 00 4e 00 00       	call   f931 <process_add>
    ab31:	c6 83 0c 01 00 00 05 	movb   $0x5,0x10c(%rbx)
    ab38:	49 81 fe 00 02 00 00 	cmp    $0x200,%r14
    ab3f:	77 07                	ja     ab48 <iscsi_start_data_out+0x6b>
    ab41:	c6 83 0d 01 00 00 80 	movb   $0x80,0x10d(%rbx)
    ab48:	44 89 e8             	mov    %r13d,%eax
    ab4b:	0f c8                	bswap  %eax
    ab4d:	89 83 10 01 00 00    	mov    %eax,0x110(%rbx)
    ab53:	48 8b 83 b0 01 00 00 	mov    0x1b0(%rbx),%rax
    ab5a:	48 8b 00             	mov    (%rax),%rax
    ab5d:	48 89 83 14 01 00 00 	mov    %rax,0x114(%rbx)
    ab64:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    ab6a:	0f c8                	bswap  %eax
    ab6c:	89 83 1c 01 00 00    	mov    %eax,0x11c(%rbx)
    ab72:	8b 83 f8 00 00 00    	mov    0xf8(%rbx),%eax
    ab78:	0f c8                	bswap  %eax
    ab7a:	89 83 20 01 00 00    	mov    %eax,0x120(%rbx)
    ab80:	8b 83 08 01 00 00    	mov    0x108(%rbx),%eax
    ab86:	ff c0                	inc    %eax
    ab88:	0f c8                	bswap  %eax
    ab8a:	89 83 28 01 00 00    	mov    %eax,0x128(%rbx)
    ab90:	44 89 e0             	mov    %r12d,%eax
    ab93:	0f c8                	bswap  %eax
    ab95:	89 83 30 01 00 00    	mov    %eax,0x130(%rbx)
    ab9b:	8b 83 fc 00 00 00    	mov    0xfc(%rbx),%eax
    aba1:	01 e8                	add    %ebp,%eax
    aba3:	0f c8                	bswap  %eax
    aba5:	89 83 34 01 00 00    	mov    %eax,0x134(%rbx)
    abab:	5b                   	pop    %rbx
    abac:	5d                   	pop    %rbp
    abad:	41 5c                	pop    %r12
    abaf:	41 5d                	pop    %r13
    abb1:	41 5e                	pop    %r14
    abb3:	c3                   	ret    

000000000000abb4 <iscsi_rx_buffered_data>:
    abb4:	53                   	push   %rbx
    abb5:	48 89 fb             	mov    %rdi,%rbx
    abb8:	48 83 ec 10          	sub    $0x10,%rsp
    abbc:	48 83 bf a8 01 00 00 	cmpq   $0x0,0x1a8(%rdi)
    abc3:	00 
    abc4:	75 31                	jne    abf7 <iscsi_rx_buffered_data+0x43>
    abc6:	48 8b bf a0 01 00 00 	mov    0x1a0(%rdi),%rdi
    abcd:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    abd2:	48 89 34 24          	mov    %rsi,(%rsp)
    abd6:	e8 66 1a 00 00       	call   c641 <malloc>
    abdb:	48 8b 34 24          	mov    (%rsp),%rsi
    abdf:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    abe4:	48 85 c0             	test   %rax,%rax
    abe7:	48 89 83 a8 01 00 00 	mov    %rax,0x1a8(%rbx)
    abee:	75 07                	jne    abf7 <iscsi_rx_buffered_data+0x43>
    abf0:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    abf5:	eb 15                	jmp    ac0c <iscsi_rx_buffered_data+0x58>
    abf7:	48 8b bb 98 01 00 00 	mov    0x198(%rbx),%rdi
    abfe:	48 03 bb a8 01 00 00 	add    0x1a8(%rbx),%rdi
    ac05:	e8 03 c7 00 00       	call   1730d <__memcpy>
    ac0a:	31 c0                	xor    %eax,%eax
    ac0c:	48 83 c4 10          	add    $0x10,%rsp
    ac10:	5b                   	pop    %rbx
    ac11:	c3                   	ret    

000000000000ac12 <iscsi_handle_authmethod_value>:
    ac12:	f3 0f 1e fa          	endbr64 
    ac16:	53                   	push   %rbx
    ac17:	48 89 fb             	mov    %rdi,%rbx
    ac1a:	48 89 f7             	mov    %rsi,%rdi
    ac1d:	48 8d 35 1a 85 01 00 	lea    0x1851a(%rip),%rsi        # 2313e <.LC2>
    ac24:	e8 b7 8c 00 00       	call   138e0 <strcmp>
    ac29:	85 c0                	test   %eax,%eax
    ac2b:	75 0a                	jne    ac37 <iscsi_handle_authmethod_value+0x25>
    ac2d:	81 8b 90 00 00 00 00 	orl    $0x10200,0x90(%rbx)
    ac34:	02 01 00 
    ac37:	31 c0                	xor    %eax,%eax
    ac39:	5b                   	pop    %rbx
    ac3a:	c3                   	ret    

000000000000ac3b <iscsi_free>:
    ac3b:	f3 0f 1e fa          	endbr64 
    ac3f:	55                   	push   %rbp
    ac40:	48 89 fd             	mov    %rdi,%rbp
    ac43:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
    ac47:	e8 03 1a 00 00       	call   c64f <free>
    ac4c:	48 8b 7d 78          	mov    0x78(%rbp),%rdi
    ac50:	e8 fa 19 00 00       	call   c64f <free>
    ac55:	48 8b bd 88 00 00 00 	mov    0x88(%rbp),%rdi
    ac5c:	e8 ee 19 00 00       	call   c64f <free>
    ac61:	48 8b bd 98 00 00 00 	mov    0x98(%rbp),%rdi
    ac68:	e8 e2 19 00 00       	call   c64f <free>
    ac6d:	48 8b bd a0 00 00 00 	mov    0xa0(%rbp),%rdi
    ac74:	e8 d6 19 00 00       	call   c64f <free>
    ac79:	48 8b bd a8 00 00 00 	mov    0xa8(%rbp),%rdi
    ac80:	e8 ca 19 00 00       	call   c64f <free>
    ac85:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    ac8c:	e8 be 19 00 00       	call   c64f <free>
    ac91:	48 8d bd d0 00 00 00 	lea    0xd0(%rbp),%rdi
    ac98:	e8 ef e4 00 00       	call   1918c <chap_finish>
    ac9d:	48 8b bd a8 01 00 00 	mov    0x1a8(%rbp),%rdi
    aca4:	e8 a6 19 00 00       	call   c64f <free>
    aca9:	48 8b bd b0 01 00 00 	mov    0x1b0(%rbp),%rdi
    acb0:	48 c7 85 a8 01 00 00 	movq   $0x0,0x1a8(%rbp)
    acb7:	00 00 00 00 
    acbb:	e8 8f 19 00 00       	call   c64f <free>
    acc0:	48 89 ef             	mov    %rbp,%rdi
    acc3:	5d                   	pop    %rbp
    acc4:	e9 86 19 00 00       	jmp    c64f <free>

000000000000acc9 <iscsi_large_binary_decode>:
    acc9:	80 3f 30             	cmpb   $0x30,(%rdi)
    accc:	75 35                	jne    ad03 <iscsi_large_binary_decode+0x3a>
    acce:	0f be 47 01          	movsbl 0x1(%rdi),%eax
    acd2:	4c 8d 47 02          	lea    0x2(%rdi),%r8
    acd6:	8d 48 bf             	lea    -0x41(%rax),%ecx
    acd9:	83 f9 19             	cmp    $0x19,%ecx
    acdc:	77 03                	ja     ace1 <iscsi_large_binary_decode+0x18>
    acde:	83 c0 20             	add    $0x20,%eax
    ace1:	83 f8 62             	cmp    $0x62,%eax
    ace4:	74 15                	je     acfb <iscsi_large_binary_decode+0x32>
    ace6:	83 f8 78             	cmp    $0x78,%eax
    ace9:	75 18                	jne    ad03 <iscsi_large_binary_decode+0x3a>
    aceb:	48 89 d1             	mov    %rdx,%rcx
    acee:	31 ff                	xor    %edi,%edi
    acf0:	48 89 f2             	mov    %rsi,%rdx
    acf3:	4c 89 c6             	mov    %r8,%rsi
    acf6:	e9 d9 dc 00 00       	jmp    189d4 <hex_decode>
    acfb:	4c 89 c7             	mov    %r8,%rdi
    acfe:	e9 0f de 00 00       	jmp    18b12 <base64_decode>
    ad03:	b8 68 9c f2 bc       	mov    $0xbcf29c68,%eax
    ad08:	c3                   	ret    

000000000000ad09 <iscsi_handle_chap_r_value>:
    ad09:	f3 0f 1e fa          	endbr64 
    ad0d:	41 55                	push   %r13
    ad0f:	41 54                	push   %r12
    ad11:	49 89 f4             	mov    %rsi,%r12
    ad14:	55                   	push   %rbp
    ad15:	48 8d af d0 00 00 00 	lea    0xd0(%rdi),%rbp
    ad1c:	53                   	push   %rbx
    ad1d:	48 89 fb             	mov    %rdi,%rbx
    ad20:	48 89 ef             	mov    %rbp,%rdi
    ad23:	48 83 ec 28          	sub    $0x28,%rsp
    ad27:	48 8b 05 42 f2 01 00 	mov    0x1f242(%rip),%rax        # 29f70 <__stack_chk_guard>
    ad2e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    ad33:	31 c0                	xor    %eax,%eax
    ad35:	e8 52 e4 00 00       	call   1918c <chap_finish>
    ad3a:	48 8d 35 ff b8 01 00 	lea    0x1b8ff(%rip),%rsi        # 26640 <md5_algorithm>
    ad41:	48 89 ef             	mov    %rbp,%rdi
    ad44:	e8 ca e3 00 00       	call   19113 <chap_init>
    ad49:	85 c0                	test   %eax,%eax
    ad4b:	0f 85 d4 00 00 00    	jne    ae25 <iscsi_handle_chap_r_value+0x11c>
    ad51:	8a 83 b8 00 00 00    	mov    0xb8(%rbx),%al
    ad57:	48 8d 74 24 17       	lea    0x17(%rsp),%rsi
    ad5c:	ba 01 00 00 00       	mov    $0x1,%edx
    ad61:	48 89 ef             	mov    %rbp,%rdi
    ad64:	88 44 24 17          	mov    %al,0x17(%rsp)
    ad68:	e8 f3 e3 00 00       	call   19160 <chap_update>
    ad6d:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    ad74:	4d 85 ed             	test   %r13,%r13
    ad77:	74 16                	je     ad8f <iscsi_handle_chap_r_value+0x86>
    ad79:	4c 89 ef             	mov    %r13,%rdi
    ad7c:	e8 b9 8b 00 00       	call   1393a <strlen>
    ad81:	4c 89 ee             	mov    %r13,%rsi
    ad84:	48 89 ef             	mov    %rbp,%rdi
    ad87:	48 89 c2             	mov    %rax,%rdx
    ad8a:	e8 d1 e3 00 00       	call   19160 <chap_update>
    ad8f:	48 8d b3 b9 00 00 00 	lea    0xb9(%rbx),%rsi
    ad96:	ba 10 00 00 00       	mov    $0x10,%edx
    ad9b:	48 89 ef             	mov    %rbp,%rdi
    ad9e:	e8 bd e3 00 00       	call   19160 <chap_update>
    ada3:	48 89 ef             	mov    %rbp,%rdi
    ada6:	e8 c9 e3 00 00       	call   19174 <chap_respond>
    adab:	4c 89 e7             	mov    %r12,%rdi
    adae:	e8 87 8b 00 00       	call   1393a <strlen>
    adb3:	4c 63 e8             	movslq %eax,%r13
    adb6:	4c 89 ef             	mov    %r13,%rdi
    adb9:	e8 83 18 00 00       	call   c641 <malloc>
    adbe:	48 89 c5             	mov    %rax,%rbp
    adc1:	48 85 c0             	test   %rax,%rax
    adc4:	75 07                	jne    adcd <iscsi_handle_chap_r_value+0xc4>
    adc6:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    adcb:	eb 58                	jmp    ae25 <iscsi_handle_chap_r_value+0x11c>
    adcd:	4c 89 ea             	mov    %r13,%rdx
    add0:	48 89 c6             	mov    %rax,%rsi
    add3:	4c 89 e7             	mov    %r12,%rdi
    add6:	e8 ee fe ff ff       	call   acc9 <iscsi_large_binary_decode>
    addb:	85 c0                	test   %eax,%eax
    addd:	78 36                	js     ae15 <iscsi_handle_chap_r_value+0x10c>
    addf:	3b 83 e8 00 00 00    	cmp    0xe8(%rbx),%eax
    ade5:	74 07                	je     adee <iscsi_handle_chap_r_value+0xe5>
    ade7:	b8 68 9b f2 bc       	mov    $0xbcf29b68,%eax
    adec:	eb 27                	jmp    ae15 <iscsi_handle_chap_r_value+0x10c>
    adee:	48 8b b3 e0 00 00 00 	mov    0xe0(%rbx),%rsi
    adf5:	48 63 d0             	movslq %eax,%rdx
    adf8:	48 89 ef             	mov    %rbp,%rdi
    adfb:	e8 54 8a 00 00       	call   13854 <memcmp>
    ae00:	85 c0                	test   %eax,%eax
    ae02:	74 07                	je     ae0b <iscsi_handle_chap_r_value+0x102>
    ae04:	b8 71 9d f2 fd       	mov    $0xfdf29d71,%eax
    ae09:	eb 0a                	jmp    ae15 <iscsi_handle_chap_r_value+0x10c>
    ae0b:	81 8b 90 00 00 00 00 	orl    $0x40000,0x90(%rbx)
    ae12:	00 04 00 
    ae15:	48 89 ef             	mov    %rbp,%rdi
    ae18:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    ae1c:	e8 2e 18 00 00       	call   c64f <free>
    ae21:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    ae25:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    ae2a:	48 2b 15 3f f1 01 00 	sub    0x1f13f(%rip),%rdx        # 29f70 <__stack_chk_guard>
    ae31:	74 05                	je     ae38 <iscsi_handle_chap_r_value+0x12f>
    ae33:	e8 28 7c ff ff       	call   2a60 <__stack_chk_fail>
    ae38:	48 83 c4 28          	add    $0x28,%rsp
    ae3c:	5b                   	pop    %rbx
    ae3d:	5d                   	pop    %rbp
    ae3e:	41 5c                	pop    %r12
    ae40:	41 5d                	pop    %r13
    ae42:	c3                   	ret    

000000000000ae43 <iscsi_handle_chap_c_value>:
    ae43:	f3 0f 1e fa          	endbr64 
    ae47:	41 55                	push   %r13
    ae49:	41 54                	push   %r12
    ae4b:	49 89 f4             	mov    %rsi,%r12
    ae4e:	55                   	push   %rbp
    ae4f:	53                   	push   %rbx
    ae50:	48 89 fb             	mov    %rdi,%rbx
    ae53:	48 89 f7             	mov    %rsi,%rdi
    ae56:	48 83 ec 18          	sub    $0x18,%rsp
    ae5a:	e8 db 8a 00 00       	call   1393a <strlen>
    ae5f:	4c 63 e8             	movslq %eax,%r13
    ae62:	4c 89 ef             	mov    %r13,%rdi
    ae65:	e8 d7 17 00 00       	call   c641 <malloc>
    ae6a:	48 85 c0             	test   %rax,%rax
    ae6d:	75 0a                	jne    ae79 <iscsi_handle_chap_c_value+0x36>
    ae6f:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    ae74:	e9 85 00 00 00       	jmp    aefe <iscsi_handle_chap_c_value+0xbb>
    ae79:	4c 89 ea             	mov    %r13,%rdx
    ae7c:	48 89 c6             	mov    %rax,%rsi
    ae7f:	4c 89 e7             	mov    %r12,%rdi
    ae82:	48 89 c5             	mov    %rax,%rbp
    ae85:	e8 3f fe ff ff       	call   acc9 <iscsi_large_binary_decode>
    ae8a:	85 c0                	test   %eax,%eax
    ae8c:	78 60                	js     aeee <iscsi_handle_chap_c_value+0xab>
    ae8e:	4c 8d ab d0 00 00 00 	lea    0xd0(%rbx),%r13
    ae95:	48 63 d0             	movslq %eax,%rdx
    ae98:	48 89 ee             	mov    %rbp,%rsi
    ae9b:	4c 89 ef             	mov    %r13,%rdi
    ae9e:	e8 bd e2 00 00       	call   19160 <chap_update>
    aea3:	4c 89 ef             	mov    %r13,%rdi
    aea6:	e8 c9 e2 00 00       	call   19174 <chap_respond>
    aeab:	8b 83 90 00 00 00    	mov    0x90(%rbx),%eax
    aeb1:	89 c2                	mov    %eax,%edx
    aeb3:	80 ce 04             	or     $0x4,%dh
    aeb6:	48 83 bb a8 00 00 00 	cmpq   $0x0,0xa8(%rbx)
    aebd:	00 
    aebe:	89 93 90 00 00 00    	mov    %edx,0x90(%rbx)
    aec4:	75 04                	jne    aeca <iscsi_handle_chap_c_value+0x87>
    aec6:	31 c0                	xor    %eax,%eax
    aec8:	eb 24                	jmp    aeee <iscsi_handle_chap_c_value+0xab>
    aeca:	80 cc 0c             	or     $0xc,%ah
    aecd:	45 31 e4             	xor    %r12d,%r12d
    aed0:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    aed6:	e8 66 4b 00 00       	call   fa41 <random>
    aedb:	42 88 84 23 b8 00 00 	mov    %al,0xb8(%rbx,%r12,1)
    aee2:	00 
    aee3:	49 ff c4             	inc    %r12
    aee6:	49 83 fc 11          	cmp    $0x11,%r12
    aeea:	75 ea                	jne    aed6 <iscsi_handle_chap_c_value+0x93>
    aeec:	eb d8                	jmp    aec6 <iscsi_handle_chap_c_value+0x83>
    aeee:	48 89 ef             	mov    %rbp,%rdi
    aef1:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    aef5:	e8 55 17 00 00       	call   c64f <free>
    aefa:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    aefe:	48 83 c4 18          	add    $0x18,%rsp
    af02:	5b                   	pop    %rbx
    af03:	5d                   	pop    %rbp
    af04:	41 5c                	pop    %r12
    af06:	41 5d                	pop    %r13
    af08:	c3                   	ret    

000000000000af09 <iscsi_handle_targetaddress_value>:
    af09:	f3 0f 1e fa          	endbr64 
    af0d:	41 54                	push   %r12
    af0f:	55                   	push   %rbp
    af10:	48 89 f5             	mov    %rsi,%rbp
    af13:	53                   	push   %rbx
    af14:	48 89 fb             	mov    %rdi,%rbx
    af17:	48 8b 7f 78          	mov    0x78(%rdi),%rdi
    af1b:	e8 2f 17 00 00       	call   c64f <free>
    af20:	48 89 ef             	mov    %rbp,%rdi
    af23:	e8 25 8b 00 00       	call   13a4d <strdup>
    af28:	48 89 43 78          	mov    %rax,0x78(%rbx)
    af2c:	48 85 c0             	test   %rax,%rax
    af2f:	75 08                	jne    af39 <iscsi_handle_targetaddress_value+0x30>
    af31:	41 bc 77 9f f2 ce    	mov    $0xcef29f77,%r12d
    af37:	eb 35                	jmp    af6e <iscsi_handle_targetaddress_value+0x65>
    af39:	c7 83 80 00 00 00 0c 	movl   $0xbc0c,0x80(%rbx)
    af40:	bc 00 00 
    af43:	48 89 c7             	mov    %rax,%rdi
    af46:	be 3a 00 00 00       	mov    $0x3a,%esi
    af4b:	45 31 e4             	xor    %r12d,%r12d
    af4e:	e8 f4 89 00 00       	call   13947 <strchr>
    af53:	48 85 c0             	test   %rax,%rax
    af56:	74 16                	je     af6e <iscsi_handle_targetaddress_value+0x65>
    af58:	c6 00 00             	movb   $0x0,(%rax)
    af5b:	48 8d 78 01          	lea    0x1(%rax),%rdi
    af5f:	31 d2                	xor    %edx,%edx
    af61:	31 f6                	xor    %esi,%esi
    af63:	e8 13 8b 00 00       	call   13a7b <strtoul>
    af68:	89 83 80 00 00 00    	mov    %eax,0x80(%rbx)
    af6e:	44 89 e0             	mov    %r12d,%eax
    af71:	5b                   	pop    %rbx
    af72:	5d                   	pop    %rbp
    af73:	41 5c                	pop    %r12
    af75:	c3                   	ret    

000000000000af76 <iscsi_close>:
    af76:	f3 0f 1e fa          	endbr64 
    af7a:	55                   	push   %rbp
    af7b:	89 f5                	mov    %esi,%ebp
    af7d:	53                   	push   %rbx
    af7e:	48 89 fb             	mov    %rdi,%rbx
    af81:	41 52                	push   %r10
    af83:	85 f6                	test   %esi,%esi
    af85:	75 05                	jne    af8c <iscsi_close+0x16>
    af87:	bd 6b 9f f2 f0       	mov    $0xf0f29f6b,%ebp
    af8c:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    af93:	e8 ec 49 00 00       	call   f984 <process_del>
    af98:	41 59                	pop    %r9
    af9a:	48 8d 4b 30          	lea    0x30(%rbx),%rcx
    af9e:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    afa2:	48 8d 73 50          	lea    0x50(%rbx),%rsi
    afa6:	89 ef                	mov    %ebp,%edi
    afa8:	5b                   	pop    %rbx
    afa9:	45 31 c0             	xor    %r8d,%r8d
    afac:	31 c0                	xor    %eax,%eax
    afae:	5d                   	pop    %rbp
    afaf:	e9 2c ea ff ff       	jmp    99e0 <intfs_shutdown>

000000000000afb4 <iscsi_tx_step>:
    afb4:	f3 0f 1e fa          	endbr64 
    afb8:	41 55                	push   %r13
    afba:	41 54                	push   %r12
    afbc:	4c 8d 25 0c f7 ff ff 	lea    -0x8f4(%rip),%r12        # a6cf <iscsi_tx_nothing>
    afc3:	55                   	push   %rbp
    afc4:	48 89 fd             	mov    %rdi,%rbp
    afc7:	53                   	push   %rbx
    afc8:	56                   	push   %rsi
    afc9:	8b 85 3c 01 00 00    	mov    0x13c(%rbp),%eax
    afcf:	83 f8 02             	cmp    $0x2,%eax
    afd2:	74 57                	je     b02b <iscsi_tx_step+0x77>
    afd4:	77 12                	ja     afe8 <iscsi_tx_step+0x34>
    afd6:	85 c0                	test   %eax,%eax
    afd8:	74 3e                	je     b018 <iscsi_tx_step+0x64>
    afda:	4c 8d 2d d3 fa ff ff 	lea    -0x52d(%rip),%r13        # aab4 <iscsi_tx_bhs>
    afe1:	bb 02 00 00 00       	mov    $0x2,%ebx
    afe6:	eb 22                	jmp    b00a <iscsi_tx_step+0x56>
    afe8:	83 f8 03             	cmp    $0x3,%eax
    afeb:	0f 85 cb 00 00 00    	jne    b0bc <iscsi_tx_step+0x108>
    aff1:	8b 9d 10 01 00 00    	mov    0x110(%rbp),%ebx
    aff7:	4c 8d 2d 82 f9 ff ff 	lea    -0x67e(%rip),%r13        # a980 <iscsi_tx_data>
    affe:	0f cb                	bswap  %ebx
    b000:	81 e3 ff ff ff 00    	and    $0xffffff,%ebx
    b006:	74 2b                	je     b033 <iscsi_tx_step+0x7f>
    b008:	31 db                	xor    %ebx,%ebx
    b00a:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    b00e:	e8 25 c4 00 00       	call   17438 <xfer_window>
    b013:	48 85 c0             	test   %rax,%rax
    b016:	75 1b                	jne    b033 <iscsi_tx_step+0x7f>
    b018:	59                   	pop    %rcx
    b019:	48 8d bd 40 01 00 00 	lea    0x140(%rbp),%rdi
    b020:	5b                   	pop    %rbx
    b021:	5d                   	pop    %rbp
    b022:	41 5c                	pop    %r12
    b024:	41 5d                	pop    %r13
    b026:	e9 59 49 00 00       	jmp    f984 <process_del>
    b02b:	4d 89 e5             	mov    %r12,%r13
    b02e:	bb 03 00 00 00       	mov    $0x3,%ebx
    b033:	48 89 ef             	mov    %rbp,%rdi
    b036:	41 ff d5             	call   *%r13
    b039:	89 c6                	mov    %eax,%esi
    b03b:	85 c0                	test   %eax,%eax
    b03d:	74 0f                	je     b04e <iscsi_tx_step+0x9a>
    b03f:	5a                   	pop    %rdx
    b040:	48 89 ef             	mov    %rbp,%rdi
    b043:	5b                   	pop    %rbx
    b044:	5d                   	pop    %rbp
    b045:	41 5c                	pop    %r12
    b047:	41 5d                	pop    %r13
    b049:	e9 28 ff ff ff       	jmp    af76 <iscsi_close>
    b04e:	89 9d 3c 01 00 00    	mov    %ebx,0x13c(%rbp)
    b054:	85 db                	test   %ebx,%ebx
    b056:	0f 85 6d ff ff ff    	jne    afc9 <iscsi_tx_step+0x15>
    b05c:	48 8d bd 40 01 00 00 	lea    0x140(%rbp),%rdi
    b063:	e8 1c 49 00 00       	call   f984 <process_del>
    b068:	8a 85 0c 01 00 00    	mov    0x10c(%rbp),%al
    b06e:	83 e0 3f             	and    $0x3f,%eax
    b071:	3c 03                	cmp    $0x3,%al
    b073:	74 2c                	je     b0a1 <iscsi_tx_step+0xed>
    b075:	3c 05                	cmp    $0x5,%al
    b077:	0f 85 4c ff ff ff    	jne    afc9 <iscsi_tx_step+0x15>
    b07d:	80 bd 0d 01 00 00 00 	cmpb   $0x0,0x10d(%rbp)
    b084:	0f 88 3f ff ff ff    	js     afc9 <iscsi_tx_step+0x15>
    b08a:	8b b5 30 01 00 00    	mov    0x130(%rbp),%esi
    b090:	48 89 ef             	mov    %rbp,%rdi
    b093:	0f ce                	bswap  %esi
    b095:	ff c6                	inc    %esi
    b097:	e8 41 fa ff ff       	call   aadd <iscsi_start_data_out>
    b09c:	e9 28 ff ff ff       	jmp    afc9 <iscsi_tx_step+0x15>
    b0a1:	81 a5 90 00 00 00 ff 	andl   $0xffff00ff,0x90(%rbp)
    b0a8:	00 ff ff 
    b0ab:	48 8d bd d0 00 00 00 	lea    0xd0(%rbp),%rdi
    b0b2:	e8 d5 e0 00 00       	call   1918c <chap_finish>
    b0b7:	e9 0d ff ff ff       	jmp    afc9 <iscsi_tx_step+0x15>
    b0bc:	58                   	pop    %rax
    b0bd:	5b                   	pop    %rbx
    b0be:	5d                   	pop    %rbp
    b0bf:	41 5c                	pop    %r12
    b0c1:	41 5d                	pop    %r13
    b0c3:	c3                   	ret    

000000000000b0c4 <iscsi_vredirect>:
    b0c4:	f3 0f 1e fa          	endbr64 
    b0c8:	41 55                	push   %r13
    b0ca:	41 89 f5             	mov    %esi,%r13d
    b0cd:	41 54                	push   %r12
    b0cf:	49 89 d4             	mov    %rdx,%r12
    b0d2:	55                   	push   %rbp
    b0d3:	48 89 fd             	mov    %rdi,%rbp
    b0d6:	48 83 ec 20          	sub    $0x20,%rsp
    b0da:	48 8b 05 8f ee 01 00 	mov    0x1ee8f(%rip),%rax        # 29f70 <__stack_chk_guard>
    b0e1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b0e6:	31 c0                	xor    %eax,%eax
    b0e8:	83 fe 03             	cmp    $0x3,%esi
    b0eb:	75 5f                	jne    b14c <iscsi_vredirect+0x88>
    b0ed:	48 89 e0             	mov    %rsp,%rax
    b0f0:	b9 06 00 00 00       	mov    $0x6,%ecx
    b0f5:	48 89 d6             	mov    %rdx,%rsi
    b0f8:	48 89 c7             	mov    %rax,%rdi
    b0fb:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
    b0fd:	8b 04 24             	mov    (%rsp),%eax
    b100:	83 f8 2f             	cmp    $0x2f,%eax
    b103:	77 08                	ja     b10d <iscsi_vredirect+0x49>
    b105:	83 c0 08             	add    $0x8,%eax
    b108:	89 04 24             	mov    %eax,(%rsp)
    b10b:	eb 06                	jmp    b113 <iscsi_vredirect+0x4f>
    b10d:	48 83 44 24 08 08    	addq   $0x8,0x8(%rsp)
    b113:	8b 14 24             	mov    (%rsp),%edx
    b116:	83 fa 2f             	cmp    $0x2f,%edx
    b119:	77 0f                	ja     b12a <iscsi_vredirect+0x66>
    b11b:	89 d0                	mov    %edx,%eax
    b11d:	83 c2 08             	add    $0x8,%edx
    b120:	48 03 44 24 10       	add    0x10(%rsp),%rax
    b125:	89 14 24             	mov    %edx,(%rsp)
    b128:	eb 0e                	jmp    b138 <iscsi_vredirect+0x74>
    b12a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b12f:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b133:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    b138:	48 8b 30             	mov    (%rax),%rsi
    b13b:	48 8d bd b8 01 00 00 	lea    0x1b8(%rbp),%rdi
    b142:	ba 20 00 00 00       	mov    $0x20,%edx
    b147:	e8 c1 c1 00 00       	call   1730d <__memcpy>
    b14c:	4c 89 e2             	mov    %r12,%rdx
    b14f:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    b153:	44 89 ee             	mov    %r13d,%esi
    b156:	e8 d9 3a 00 00       	call   ec34 <xfer_vreopen>
    b15b:	41 89 c4             	mov    %eax,%r12d
    b15e:	85 c0                	test   %eax,%eax
    b160:	74 0a                	je     b16c <iscsi_vredirect+0xa8>
    b162:	89 c6                	mov    %eax,%esi
    b164:	48 89 ef             	mov    %rbp,%rdi
    b167:	e8 0a fe ff ff       	call   af76 <iscsi_close>
    b16c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b171:	48 2b 05 f8 ed 01 00 	sub    0x1edf8(%rip),%rax        # 29f70 <__stack_chk_guard>
    b178:	74 05                	je     b17f <iscsi_vredirect+0xbb>
    b17a:	e8 e1 78 ff ff       	call   2a60 <__stack_chk_fail>
    b17f:	48 83 c4 20          	add    $0x20,%rsp
    b183:	44 89 e0             	mov    %r12d,%eax
    b186:	5d                   	pop    %rbp
    b187:	41 5c                	pop    %r12
    b189:	41 5d                	pop    %r13
    b18b:	c3                   	ret    

000000000000b18c <iscsi_socket_deliver>:
    b18c:	f3 0f 1e fa          	endbr64 
    b190:	41 57                	push   %r15
    b192:	41 56                	push   %r14
    b194:	41 55                	push   %r13
    b196:	41 54                	push   %r12
    b198:	49 89 f4             	mov    %rsi,%r12
    b19b:	55                   	push   %rbp
    b19c:	48 89 fd             	mov    %rdi,%rbp
    b19f:	53                   	push   %rbx
    b1a0:	48 8d 1d 9c 08 00 00 	lea    0x89c(%rip),%rbx        # ba43 <iscsi_rx_data>
    b1a7:	51                   	push   %rcx
    b1a8:	8b 85 90 01 00 00    	mov    0x190(%rbp),%eax
    b1ae:	83 f8 02             	cmp    $0x2,%eax
    b1b1:	74 31                	je     b1e4 <iscsi_socket_deliver+0x58>
    b1b3:	77 19                	ja     b1ce <iscsi_socket_deliver+0x42>
    b1b5:	85 c0                	test   %eax,%eax
    b1b7:	74 55                	je     b20e <iscsi_socket_deliver+0x82>
    b1b9:	0f b6 8d 64 01 00 00 	movzbl 0x164(%rbp),%ecx
    b1c0:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    b1c6:	c1 e1 02             	shl    $0x2,%ecx
    b1c9:	48 63 c9             	movslq %ecx,%rcx
    b1cc:	eb 2f                	jmp    b1fd <iscsi_socket_deliver+0x71>
    b1ce:	83 f8 03             	cmp    $0x3,%eax
    b1d1:	75 33                	jne    b206 <iscsi_socket_deliver+0x7a>
    b1d3:	0f b6 8d 67 01 00 00 	movzbl 0x167(%rbp),%ecx
    b1da:	45 31 ff             	xor    %r15d,%r15d
    b1dd:	f7 d9                	neg    %ecx
    b1df:	83 e1 03             	and    $0x3,%ecx
    b1e2:	eb 19                	jmp    b1fd <iscsi_socket_deliver+0x71>
    b1e4:	8b 8d 64 01 00 00    	mov    0x164(%rbp),%ecx
    b1ea:	41 bf 03 00 00 00    	mov    $0x3,%r15d
    b1f0:	48 89 d8             	mov    %rbx,%rax
    b1f3:	0f c9                	bswap  %ecx
    b1f5:	81 e1 ff ff ff 00    	and    $0xffffff,%ecx
    b1fb:	eb 23                	jmp    b220 <iscsi_socket_deliver+0x94>
    b1fd:	48 8d 05 d2 f4 ff ff 	lea    -0xb2e(%rip),%rax        # a6d6 <iscsi_rx_discard>
    b204:	eb 1a                	jmp    b220 <iscsi_socket_deliver+0x94>
    b206:	41 be 7e 9f f2 e3    	mov    $0xe3f29f7e,%r14d
    b20c:	eb 7c                	jmp    b28a <iscsi_socket_deliver+0xfe>
    b20e:	b9 30 00 00 00       	mov    $0x30,%ecx
    b213:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    b219:	48 8d 05 eb f4 ff ff 	lea    -0xb15(%rip),%rax        # a70b <iscsi_rx_bhs>
    b220:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
    b225:	4d 8b 6c 24 20       	mov    0x20(%r12),%r13
    b22a:	48 89 8d a0 01 00 00 	mov    %rcx,0x1a0(%rbp)
    b231:	48 89 ef             	mov    %rbp,%rdi
    b234:	48 2b 8d 98 01 00 00 	sub    0x198(%rbp),%rcx
    b23b:	49 29 f5             	sub    %rsi,%r13
    b23e:	49 39 cd             	cmp    %rcx,%r13
    b241:	4c 0f 47 e9          	cmova  %rcx,%r13
    b245:	4c 29 e9             	sub    %r13,%rcx
    b248:	4c 89 ea             	mov    %r13,%rdx
    b24b:	ff d0                	call   *%rax
    b24d:	41 89 c6             	mov    %eax,%r14d
    b250:	85 c0                	test   %eax,%eax
    b252:	75 36                	jne    b28a <iscsi_socket_deliver+0xfe>
    b254:	48 8b 85 98 01 00 00 	mov    0x198(%rbp),%rax
    b25b:	4c 01 e8             	add    %r13,%rax
    b25e:	48 89 85 98 01 00 00 	mov    %rax,0x198(%rbp)
    b265:	4d 01 6c 24 18       	add    %r13,0x18(%r12)
    b26a:	48 3b 85 a0 01 00 00 	cmp    0x1a0(%rbp),%rax
    b271:	75 17                	jne    b28a <iscsi_socket_deliver+0xfe>
    b273:	44 89 bd 90 01 00 00 	mov    %r15d,0x190(%rbp)
    b27a:	48 c7 85 98 01 00 00 	movq   $0x0,0x198(%rbp)
    b281:	00 00 00 00 
    b285:	e9 1e ff ff ff       	jmp    b1a8 <iscsi_socket_deliver+0x1c>
    b28a:	4c 89 e7             	mov    %r12,%rdi
    b28d:	e8 04 ea ff ff       	call   9c96 <free_iob>
    b292:	45 85 f6             	test   %r14d,%r14d
    b295:	74 0b                	je     b2a2 <iscsi_socket_deliver+0x116>
    b297:	44 89 f6             	mov    %r14d,%esi
    b29a:	48 89 ef             	mov    %rbp,%rdi
    b29d:	e8 d4 fc ff ff       	call   af76 <iscsi_close>
    b2a2:	5a                   	pop    %rdx
    b2a3:	44 89 f0             	mov    %r14d,%eax
    b2a6:	5b                   	pop    %rbx
    b2a7:	5d                   	pop    %rbp
    b2a8:	41 5c                	pop    %r12
    b2aa:	41 5d                	pop    %r13
    b2ac:	41 5e                	pop    %r14
    b2ae:	41 5f                	pop    %r15
    b2b0:	c3                   	ret    

000000000000b2b1 <iscsi_command_close>:
    b2b1:	f3 0f 1e fa          	endbr64 
    b2b5:	41 54                	push   %r12
    b2b7:	49 89 fc             	mov    %rdi,%r12
    b2ba:	48 83 c7 30          	add    $0x30,%rdi
    b2be:	48 83 ec 10          	sub    $0x10,%rsp
    b2c2:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    b2c6:	e8 7d e5 ff ff       	call   9848 <intf_restart>
    b2cb:	49 83 bc 24 b0 01 00 	cmpq   $0x0,0x1b0(%r12)
    b2d2:	00 00 
    b2d4:	74 1b                	je     b2f1 <iscsi_command_close+0x40>
    b2d6:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    b2da:	85 f6                	test   %esi,%esi
    b2dc:	75 05                	jne    b2e3 <iscsi_command_close+0x32>
    b2de:	be 6b 9f f2 f4       	mov    $0xf4f29f6b,%esi
    b2e3:	48 83 c4 10          	add    $0x10,%rsp
    b2e7:	4c 89 e7             	mov    %r12,%rdi
    b2ea:	41 5c                	pop    %r12
    b2ec:	e9 85 fc ff ff       	jmp    af76 <iscsi_close>
    b2f1:	48 83 c4 10          	add    $0x10,%rsp
    b2f5:	41 5c                	pop    %r12
    b2f7:	c3                   	ret    

000000000000b2f8 <iscsi_handle_chap_n_value>:
    b2f8:	f3 0f 1e fa          	endbr64 
    b2fc:	48 8b bf a8 00 00 00 	mov    0xa8(%rdi),%rdi
    b303:	31 c0                	xor    %eax,%eax
    b305:	48 85 ff             	test   %rdi,%rdi
    b308:	74 11                	je     b31b <iscsi_handle_chap_n_value+0x23>
    b30a:	51                   	push   %rcx
    b30b:	e8 d0 85 00 00       	call   138e0 <strcmp>
    b310:	85 c0                	test   %eax,%eax
    b312:	74 05                	je     b319 <iscsi_handle_chap_n_value+0x21>
    b314:	b8 71 9e f2 fd       	mov    $0xfdf29e71,%eax
    b319:	5a                   	pop    %rdx
    b31a:	c3                   	ret    
    b31b:	c3                   	ret    

000000000000b31c <iscsi_handle_chap_a_value>:
    b31c:	f3 0f 1e fa          	endbr64 
    b320:	51                   	push   %rcx
    b321:	48 89 f7             	mov    %rsi,%rdi
    b324:	48 8d 35 ca 7c 01 00 	lea    0x17cca(%rip),%rsi        # 22ff5 <.LC8>
    b32b:	e8 b0 85 00 00       	call   138e0 <strcmp>
    b330:	85 c0                	test   %eax,%eax
    b332:	74 05                	je     b339 <iscsi_handle_chap_a_value+0x1d>
    b334:	b8 68 9e f2 bc       	mov    $0xbcf29e68,%eax
    b339:	5a                   	pop    %rdx
    b33a:	c3                   	ret    

000000000000b33b <iscsi_handle_chap_i_value>:
    b33b:	f3 0f 1e fa          	endbr64 
    b33f:	41 55                	push   %r13
    b341:	31 d2                	xor    %edx,%edx
    b343:	41 54                	push   %r12
    b345:	55                   	push   %rbp
    b346:	53                   	push   %rbx
    b347:	48 89 fb             	mov    %rdi,%rbx
    b34a:	48 89 f7             	mov    %rsi,%rdi
    b34d:	48 83 ec 28          	sub    $0x28,%rsp
    b351:	48 8b 05 18 ec 01 00 	mov    0x1ec18(%rip),%rax        # 29f70 <__stack_chk_guard>
    b358:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b35d:	31 c0                	xor    %eax,%eax
    b35f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    b364:	e8 12 87 00 00       	call   13a7b <strtoul>
    b369:	49 89 c5             	mov    %rax,%r13
    b36c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    b371:	80 38 00             	cmpb   $0x0,(%rax)
    b374:	74 08                	je     b37e <iscsi_handle_chap_i_value+0x43>
    b376:	41 bc 68 9d f2 bc    	mov    $0xbcf29d68,%r12d
    b37c:	eb 5e                	jmp    b3dc <iscsi_handle_chap_i_value+0xa1>
    b37e:	48 8d ab d0 00 00 00 	lea    0xd0(%rbx),%rbp
    b385:	48 89 ef             	mov    %rbp,%rdi
    b388:	e8 ff dd 00 00       	call   1918c <chap_finish>
    b38d:	48 8d 35 ac b2 01 00 	lea    0x1b2ac(%rip),%rsi        # 26640 <md5_algorithm>
    b394:	48 89 ef             	mov    %rbp,%rdi
    b397:	e8 77 dd 00 00       	call   19113 <chap_init>
    b39c:	41 89 c4             	mov    %eax,%r12d
    b39f:	85 c0                	test   %eax,%eax
    b3a1:	75 39                	jne    b3dc <iscsi_handle_chap_i_value+0xa1>
    b3a3:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
    b3a8:	ba 01 00 00 00       	mov    $0x1,%edx
    b3ad:	48 89 ef             	mov    %rbp,%rdi
    b3b0:	44 88 6c 24 0f       	mov    %r13b,0xf(%rsp)
    b3b5:	e8 a6 dd 00 00       	call   19160 <chap_update>
    b3ba:	4c 8b ab a0 00 00 00 	mov    0xa0(%rbx),%r13
    b3c1:	4d 85 ed             	test   %r13,%r13
    b3c4:	74 16                	je     b3dc <iscsi_handle_chap_i_value+0xa1>
    b3c6:	4c 89 ef             	mov    %r13,%rdi
    b3c9:	e8 6c 85 00 00       	call   1393a <strlen>
    b3ce:	4c 89 ee             	mov    %r13,%rsi
    b3d1:	48 89 ef             	mov    %rbp,%rdi
    b3d4:	48 89 c2             	mov    %rax,%rdx
    b3d7:	e8 84 dd 00 00       	call   19160 <chap_update>
    b3dc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    b3e1:	48 2b 05 88 eb 01 00 	sub    0x1eb88(%rip),%rax        # 29f70 <__stack_chk_guard>
    b3e8:	74 05                	je     b3ef <iscsi_handle_chap_i_value+0xb4>
    b3ea:	e8 71 76 ff ff       	call   2a60 <__stack_chk_fail>
    b3ef:	48 83 c4 28          	add    $0x28,%rsp
    b3f3:	44 89 e0             	mov    %r12d,%eax
    b3f6:	5b                   	pop    %rbx
    b3f7:	5d                   	pop    %rbp
    b3f8:	41 5c                	pop    %r12
    b3fa:	41 5d                	pop    %r13
    b3fc:	c3                   	ret    

000000000000b3fd <iscsi_scsi_command>:
    b3fd:	f3 0f 1e fa          	endbr64 
    b401:	41 54                	push   %r12
    b403:	49 89 d4             	mov    %rdx,%r12
    b406:	55                   	push   %rbp
    b407:	53                   	push   %rbx
    b408:	48 89 fb             	mov    %rdi,%rbx
    b40b:	e8 cd f2 ff ff       	call   a6dd <iscsi_scsi_window>
    b410:	48 85 c0             	test   %rax,%rax
    b413:	75 0a                	jne    b41f <iscsi_scsi_command+0x22>
    b415:	b8 7d 9f f2 c0       	mov    $0xc0f29f7d,%eax
    b41a:	e9 15 01 00 00       	jmp    b534 <iscsi_scsi_command+0x137>
    b41f:	bf 38 00 00 00       	mov    $0x38,%edi
    b424:	48 89 f5             	mov    %rsi,%rbp
    b427:	e8 15 12 00 00       	call   c641 <malloc>
    b42c:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
    b433:	48 89 c7             	mov    %rax,%rdi
    b436:	48 85 c0             	test   %rax,%rax
    b439:	75 0a                	jne    b445 <iscsi_scsi_command+0x48>
    b43b:	b8 77 9f f2 ce       	mov    $0xcef29f77,%eax
    b440:	e9 ef 00 00 00       	jmp    b534 <iscsi_scsi_command+0x137>
    b445:	ba 38 00 00 00       	mov    $0x38,%edx
    b44a:	4c 89 e6             	mov    %r12,%rsi
    b44d:	e8 bb be 00 00       	call   1730d <__memcpy>
    b452:	66 8b 05 fb e7 01 00 	mov    0x1e7fb(%rip),%ax        # 29c54 <itt_idx.0>
    b459:	b9 30 00 00 00       	mov    $0x30,%ecx
    b45e:	48 8d bb 0c 01 00 00 	lea    0x10c(%rbx),%rdi
    b465:	ff c0                	inc    %eax
    b467:	66 89 05 e6 e7 01 00 	mov    %ax,0x1e7e6(%rip)        # 29c54 <itt_idx.0>
    b46e:	0f b7 c0             	movzwl %ax,%eax
    b471:	0d 00 00 ae 18       	or     $0x18ae0000,%eax
    b476:	89 83 f4 00 00 00    	mov    %eax,0xf4(%rbx)
    b47c:	31 c0                	xor    %eax,%eax
    b47e:	f3 aa                	rep stos %al,%es:(%rdi)
    b480:	c7 83 3c 01 00 00 01 	movl   $0x1,0x13c(%rbx)
    b487:	00 00 00 
    b48a:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    b491:	e8 9b 44 00 00       	call   f931 <process_add>
    b496:	48 8b b3 b0 01 00 00 	mov    0x1b0(%rbx),%rsi
    b49d:	c6 83 0c 01 00 00 01 	movb   $0x1,0x10c(%rbx)
    b4a4:	48 83 7e 28 01       	cmpq   $0x1,0x28(%rsi)
    b4a9:	19 c0                	sbb    %eax,%eax
    b4ab:	83 e0 c0             	and    $0xffffffc0,%eax
    b4ae:	83 e8 3f             	sub    $0x3f,%eax
    b4b1:	88 83 0d 01 00 00    	mov    %al,0x10d(%rbx)
    b4b7:	48 83 7e 18 00       	cmpq   $0x0,0x18(%rsi)
    b4bc:	74 09                	je     b4c7 <iscsi_scsi_command+0xca>
    b4be:	83 c8 20             	or     $0x20,%eax
    b4c1:	88 83 0d 01 00 00    	mov    %al,0x10d(%rbx)
    b4c7:	8b 06                	mov    (%rsi),%eax
    b4c9:	48 8d bb 2c 01 00 00 	lea    0x12c(%rbx),%rdi
    b4d0:	48 83 c6 08          	add    $0x8,%rsi
    b4d4:	89 83 14 01 00 00    	mov    %eax,0x114(%rbx)
    b4da:	8b 46 fc             	mov    -0x4(%rsi),%eax
    b4dd:	89 83 18 01 00 00    	mov    %eax,0x118(%rbx)
    b4e3:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    b4e9:	0f c8                	bswap  %eax
    b4eb:	89 83 1c 01 00 00    	mov    %eax,0x11c(%rbx)
    b4f1:	48 8b 46 18          	mov    0x18(%rsi),%rax
    b4f5:	0b 46 28             	or     0x28(%rsi),%eax
    b4f8:	0f c8                	bswap  %eax
    b4fa:	89 83 20 01 00 00    	mov    %eax,0x120(%rbx)
    b500:	8b 83 04 01 00 00    	mov    0x104(%rbx),%eax
    b506:	0f c8                	bswap  %eax
    b508:	89 83 24 01 00 00    	mov    %eax,0x124(%rbx)
    b50e:	8b 83 08 01 00 00    	mov    0x108(%rbx),%eax
    b514:	ff c0                	inc    %eax
    b516:	0f c8                	bswap  %eax
    b518:	89 83 28 01 00 00    	mov    %eax,0x128(%rbx)
    b51e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    b51f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    b520:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    b521:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    b522:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    b526:	48 89 ee             	mov    %rbp,%rsi
    b529:	e8 43 e2 ff ff       	call   9771 <intf_plug_plug>
    b52e:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    b534:	5b                   	pop    %rbx
    b535:	5d                   	pop    %rbp
    b536:	41 5c                	pop    %r12
    b538:	c3                   	ret    

000000000000b539 <iscsi_start_login>:
    b539:	53                   	push   %rbx
    b53a:	b9 30 00 00 00       	mov    $0x30,%ecx
    b53f:	48 89 fb             	mov    %rdi,%rbx
    b542:	31 c0                	xor    %eax,%eax
    b544:	48 8d bf 0c 01 00 00 	lea    0x10c(%rdi),%rdi
    b54b:	f3 aa                	rep stos %al,%es:(%rdi)
    b54d:	c7 83 3c 01 00 00 01 	movl   $0x1,0x13c(%rbx)
    b554:	00 00 00 
    b557:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    b55e:	e8 ce 43 00 00       	call   f931 <process_add>
    b563:	8a 83 90 00 00 00    	mov    0x90(%rbx),%al
    b569:	48 89 df             	mov    %rbx,%rdi
    b56c:	31 d2                	xor    %edx,%edx
    b56e:	c6 83 0c 01 00 00 43 	movb   $0x43,0x10c(%rbx)
    b575:	31 f6                	xor    %esi,%esi
    b577:	83 e0 0f             	and    $0xf,%eax
    b57a:	83 c8 80             	or     $0xffffff80,%eax
    b57d:	88 83 0d 01 00 00    	mov    %al,0x10d(%rbx)
    b583:	e8 9f f1 ff ff       	call   a727 <iscsi_build_login_request_strings>
    b588:	c7 83 14 01 00 00 40 	movl   $0x23270040,0x114(%rbx)
    b58f:	00 27 23 
    b592:	0f c8                	bswap  %eax
    b594:	89 83 10 01 00 00    	mov    %eax,0x110(%rbx)
    b59a:	8b 83 f0 00 00 00    	mov    0xf0(%rbx),%eax
    b5a0:	86 c4                	xchg   %al,%ah
    b5a2:	66 89 83 18 01 00 00 	mov    %ax,0x118(%rbx)
    b5a9:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    b5af:	0f c8                	bswap  %eax
    b5b1:	89 83 1c 01 00 00    	mov    %eax,0x11c(%rbx)
    b5b7:	8b 83 04 01 00 00    	mov    0x104(%rbx),%eax
    b5bd:	0f c8                	bswap  %eax
    b5bf:	89 83 24 01 00 00    	mov    %eax,0x124(%rbx)
    b5c5:	8b 83 08 01 00 00    	mov    0x108(%rbx),%eax
    b5cb:	ff c0                	inc    %eax
    b5cd:	0f c8                	bswap  %eax
    b5cf:	89 83 28 01 00 00    	mov    %eax,0x128(%rbx)
    b5d5:	5b                   	pop    %rbx
    b5d6:	c3                   	ret    

000000000000b5d7 <iscsi_open_connection>:
    b5d7:	41 54                	push   %r12
    b5d9:	b9 20 00 00 00       	mov    $0x20,%ecx
    b5de:	55                   	push   %rbp
    b5df:	48 89 fd             	mov    %rdi,%rbp
    b5e2:	48 83 ec 38          	sub    $0x38,%rsp
    b5e6:	48 8b 05 83 e9 01 00 	mov    0x1e983(%rip),%rax        # 29f70 <__stack_chk_guard>
    b5ed:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    b5f2:	31 c0                	xor    %eax,%eax
    b5f4:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    b5f9:	48 89 d7             	mov    %rdx,%rdi
    b5fc:	f3 aa                	rep stos %al,%es:(%rdi)
    b5fe:	8b 35 28 8f 01 00    	mov    0x18f28(%rip),%esi        # 2452c <tcp_sock_stream>
    b604:	48 8b 4d 78          	mov    0x78(%rbp),%rcx
    b608:	48 8d 7d 50          	lea    0x50(%rbp),%rdi
    b60c:	45 31 c0             	xor    %r8d,%r8d
    b60f:	8b 85 80 00 00 00    	mov    0x80(%rbp),%eax
    b615:	86 c4                	xchg   %al,%ah
    b617:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
    b61c:	e8 66 4b 00 00       	call   10187 <xfer_open_named_socket>
    b621:	41 89 c4             	mov    %eax,%r12d
    b624:	85 c0                	test   %eax,%eax
    b626:	75 50                	jne    b678 <iscsi_open_connection+0xa1>
    b628:	48 83 bd a8 00 00 00 	cmpq   $0x1,0xa8(%rbp)
    b62f:	01 
    b630:	19 d2                	sbb    %edx,%edx
    b632:	81 e2 00 00 fe ff    	and    $0xfffe0000,%edx
    b638:	81 c2 01 01 02 00    	add    $0x20101,%edx
    b63e:	89 95 90 00 00 00    	mov    %edx,0x90(%rbp)
    b644:	e8 f8 43 00 00       	call   fa41 <random>
    b649:	48 89 ef             	mov    %rbp,%rdi
    b64c:	66 89 85 f0 00 00 00 	mov    %ax,0xf0(%rbp)
    b653:	66 8b 05 fa e5 01 00 	mov    0x1e5fa(%rip),%ax        # 29c54 <itt_idx.0>
    b65a:	8d 50 01             	lea    0x1(%rax),%edx
    b65d:	66 89 15 f0 e5 01 00 	mov    %dx,0x1e5f0(%rip)        # 29c54 <itt_idx.0>
    b664:	0f b7 d2             	movzwl %dx,%edx
    b667:	81 ca 00 00 ae 18    	or     $0x18ae0000,%edx
    b66d:	89 95 f4 00 00 00    	mov    %edx,0xf4(%rbp)
    b673:	e8 c1 fe ff ff       	call   b539 <iscsi_start_login>
    b678:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    b67d:	48 2b 05 ec e8 01 00 	sub    0x1e8ec(%rip),%rax        # 29f70 <__stack_chk_guard>
    b684:	74 05                	je     b68b <iscsi_open_connection+0xb4>
    b686:	e8 d5 73 ff ff       	call   2a60 <__stack_chk_fail>
    b68b:	48 83 c4 38          	add    $0x38,%rsp
    b68f:	44 89 e0             	mov    %r12d,%eax
    b692:	5d                   	pop    %rbp
    b693:	41 5c                	pop    %r12
    b695:	c3                   	ret    

000000000000b696 <iscsi_open>:
    b696:	f3 0f 1e fa          	endbr64 
    b69a:	41 57                	push   %r15
    b69c:	41 56                	push   %r14
    b69e:	41 55                	push   %r13
    b6a0:	41 54                	push   %r12
    b6a2:	55                   	push   %rbp
    b6a3:	48 83 ec 40          	sub    $0x40,%rsp
    b6a7:	48 8b 05 c2 e8 01 00 	mov    0x1e8c2(%rip),%rax        # 29f70 <__stack_chk_guard>
    b6ae:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    b6b3:	31 c0                	xor    %eax,%eax
    b6b5:	48 83 7e 18 00       	cmpq   $0x0,0x18(%rsi)
    b6ba:	75 0b                	jne    b6c7 <iscsi_open+0x31>
    b6bc:	41 bc 7e 9c f2 e3    	mov    $0xe3f29c7e,%r12d
    b6c2:	e9 58 03 00 00       	jmp    ba1f <iscsi_open+0x389>
    b6c7:	49 89 fe             	mov    %rdi,%r14
    b6ca:	bf 00 02 00 00       	mov    $0x200,%edi
    b6cf:	49 89 f4             	mov    %rsi,%r12
    b6d2:	e8 83 0f 00 00       	call   c65a <zalloc>
    b6d7:	48 89 c5             	mov    %rax,%rbp
    b6da:	48 85 c0             	test   %rax,%rax
    b6dd:	75 0b                	jne    b6ea <iscsi_open+0x54>
    b6df:	41 bc 77 9f f2 ce    	mov    $0xcef29f77,%r12d
    b6e5:	e9 35 03 00 00       	jmp    ba1f <iscsi_open+0x389>
    b6ea:	48 8d 05 4a f5 ff ff 	lea    -0xab6(%rip),%rax        # ac3b <iscsi_free>
    b6f1:	48 8d 15 c8 ad 01 00 	lea    0x1adc8(%rip),%rdx        # 264c0 <iscsi_control_desc>
    b6f8:	49 8b 7c 24 18       	mov    0x18(%r12),%rdi
    b6fd:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
    b701:	48 89 45 08          	mov    %rax,0x8(%rbp)
    b705:	48 8d 05 d4 ac 01 00 	lea    0x1acd4(%rip),%rax        # 263e0 <null_intf>
    b70c:	48 89 45 10          	mov    %rax,0x10(%rbp)
    b710:	48 89 45 30          	mov    %rax,0x30(%rbp)
    b714:	48 89 45 50          	mov    %rax,0x50(%rbp)
    b718:	48 8d 05 01 ae 01 00 	lea    0x1ae01(%rip),%rax        # 26520 <iscsi_socket_desc>
    b71f:	48 89 45 60          	mov    %rax,0x60(%rbp)
    b723:	48 89 45 68          	mov    %rax,0x68(%rbp)
    b727:	48 8d 85 40 01 00 00 	lea    0x140(%rbp),%rax
    b72e:	48 89 85 40 01 00 00 	mov    %rax,0x140(%rbp)
    b735:	48 89 85 48 01 00 00 	mov    %rax,0x148(%rbp)
    b73c:	48 8d 05 3d ae 01 00 	lea    0x1ae3d(%rip),%rax        # 26580 <iscsi_process_desc>
    b743:	48 89 85 50 01 00 00 	mov    %rax,0x150(%rbp)
    b74a:	48 8d 05 4f cc 01 00 	lea    0x1cc4f(%rip),%rax        # 283a0 <ibft_model>
    b751:	48 89 55 20          	mov    %rdx,0x20(%rbp)
    b755:	48 89 55 28          	mov    %rdx,0x28(%rbp)
    b759:	48 8d 15 20 ad 01 00 	lea    0x1ad20(%rip),%rdx        # 26480 <iscsi_data_desc>
    b760:	48 89 85 e8 01 00 00 	mov    %rax,0x1e8(%rbp)
    b767:	48 8d 85 f0 01 00 00 	lea    0x1f0(%rbp),%rax
    b76e:	48 89 55 40          	mov    %rdx,0x40(%rbp)
    b772:	48 89 55 48          	mov    %rdx,0x48(%rbp)
    b776:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
    b77a:	48 89 6d 58          	mov    %rbp,0x58(%rbp)
    b77e:	48 89 ad 58 01 00 00 	mov    %rbp,0x158(%rbp)
    b785:	48 89 ad e0 01 00 00 	mov    %rbp,0x1e0(%rbp)
    b78c:	48 89 85 f0 01 00 00 	mov    %rax,0x1f0(%rbp)
    b793:	48 89 85 f8 01 00 00 	mov    %rax,0x1f8(%rbp)
    b79a:	e8 ae 82 00 00       	call   13a4d <strdup>
    b79f:	31 d2                	xor    %edx,%edx
    b7a1:	49 89 c5             	mov    %rax,%r13
    b7a4:	48 85 c0             	test   %rax,%rax
    b7a7:	74 09                	je     b7b2 <iscsi_open+0x11c>
    b7a9:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    b7ae:	31 ff                	xor    %edi,%edi
    b7b0:	eb 2b                	jmp    b7dd <iscsi_open+0x147>
    b7b2:	e9 77 01 00 00       	jmp    b92e <iscsi_open+0x298>
    b7b7:	40 80 fe 5b          	cmp    $0x5b,%sil
    b7bb:	74 3b                	je     b7f8 <iscsi_open+0x162>
    b7bd:	40 80 fe 5d          	cmp    $0x5d,%sil
    b7c1:	0f 44 cf             	cmove  %edi,%ecx
    b7c4:	48 ff c0             	inc    %rax
    b7c7:	40 8a 30             	mov    (%rax),%sil
    b7ca:	40 80 fe 3a          	cmp    $0x3a,%sil
    b7ce:	75 1b                	jne    b7eb <iscsi_open+0x155>
    b7d0:	85 c9                	test   %ecx,%ecx
    b7d2:	75 f0                	jne    b7c4 <iscsi_open+0x12e>
    b7d4:	c6 00 00             	movb   $0x0,(%rax)
    b7d7:	48 ff c2             	inc    %rdx
    b7da:	48 ff c0             	inc    %rax
    b7dd:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    b7e1:	48 83 fa 04          	cmp    $0x4,%rdx
    b7e5:	74 18                	je     b7ff <iscsi_open+0x169>
    b7e7:	31 c9                	xor    %ecx,%ecx
    b7e9:	eb dc                	jmp    b7c7 <iscsi_open+0x131>
    b7eb:	40 84 f6             	test   %sil,%sil
    b7ee:	75 c7                	jne    b7b7 <iscsi_open+0x121>
    b7f0:	41 bc 7e 9e f2 e3    	mov    $0xe3f29e7e,%r12d
    b7f6:	eb 71                	jmp    b869 <iscsi_open+0x1d3>
    b7f8:	b9 01 00 00 00       	mov    $0x1,%ecx
    b7fd:	eb c5                	jmp    b7c4 <iscsi_open+0x12e>
    b7ff:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    b804:	e8 44 82 00 00       	call   13a4d <strdup>
    b809:	48 89 45 78          	mov    %rax,0x78(%rbp)
    b80d:	48 85 c0             	test   %rax,%rax
    b810:	75 02                	jne    b814 <iscsi_open+0x17e>
    b812:	eb 4f                	jmp    b863 <iscsi_open+0x1cd>
    b814:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    b819:	31 f6                	xor    %esi,%esi
    b81b:	ba 0a 00 00 00       	mov    $0xa,%edx
    b820:	e8 56 82 00 00       	call   13a7b <strtoul>
    b825:	ba bc 0c 00 00       	mov    $0xcbc,%edx
    b82a:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    b82f:	48 8d b5 d8 01 00 00 	lea    0x1d8(%rbp),%rsi
    b836:	85 c0                	test   %eax,%eax
    b838:	0f 44 c2             	cmove  %edx,%eax
    b83b:	89 85 80 00 00 00    	mov    %eax,0x80(%rbp)
    b841:	e8 39 58 00 00       	call   1107f <scsi_parse_lun>
    b846:	41 89 c4             	mov    %eax,%r12d
    b849:	85 c0                	test   %eax,%eax
    b84b:	75 1c                	jne    b869 <iscsi_open+0x1d3>
    b84d:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    b852:	e8 f6 81 00 00       	call   13a4d <strdup>
    b857:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
    b85e:	48 85 c0             	test   %rax,%rax
    b861:	75 06                	jne    b869 <iscsi_open+0x1d3>
    b863:	41 bc 77 9f f2 ce    	mov    $0xcef29f77,%r12d
    b869:	4c 89 ef             	mov    %r13,%rdi
    b86c:	e8 de 0d 00 00       	call   c64f <free>
    b871:	45 85 e4             	test   %r12d,%r12d
    b874:	0f 85 92 01 00 00    	jne    ba0c <iscsi_open+0x376>
    b87a:	31 ff                	xor    %edi,%edi
    b87c:	48 8d 95 98 00 00 00 	lea    0x98(%rbp),%rdx
    b883:	48 8d 35 8e de 01 00 	lea    0x1de8e(%rip),%rsi        # 29718 <username_setting>
    b88a:	e8 5f 65 00 00       	call   11dee <fetch_string_setting_copy>
    b88f:	31 ff                	xor    %edi,%edi
    b891:	48 8d 95 a0 00 00 00 	lea    0xa0(%rbp),%rdx
    b898:	48 8d 35 51 de 01 00 	lea    0x1de51(%rip),%rsi        # 296f0 <password_setting>
    b89f:	e8 4a 65 00 00       	call   11dee <fetch_string_setting_copy>
    b8a4:	31 ff                	xor    %edi,%edi
    b8a6:	48 8d 95 a8 00 00 00 	lea    0xa8(%rbp),%rdx
    b8ad:	48 8d 35 b4 de 01 00 	lea    0x1deb4(%rip),%rsi        # 29768 <reverse_username_setting>
    b8b4:	e8 35 65 00 00       	call   11dee <fetch_string_setting_copy>
    b8b9:	4c 8d 65 70          	lea    0x70(%rbp),%r12
    b8bd:	31 ff                	xor    %edi,%edi
    b8bf:	48 8d 95 b0 00 00 00 	lea    0xb0(%rbp),%rdx
    b8c6:	48 8d 35 73 de 01 00 	lea    0x1de73(%rip),%rsi        # 29740 <reverse_password_setting>
    b8cd:	e8 1c 65 00 00       	call   11dee <fetch_string_setting_copy>
    b8d2:	31 ff                	xor    %edi,%edi
    b8d4:	4c 89 e2             	mov    %r12,%rdx
    b8d7:	48 8d 35 e2 db 01 00 	lea    0x1dbe2(%rip),%rsi        # 294c0 <initiator_iqn_setting>
    b8de:	e8 0b 65 00 00       	call   11dee <fetch_string_setting_copy>
    b8e3:	48 83 7d 70 00       	cmpq   $0x0,0x70(%rbp)
    b8e8:	0f 85 8d 00 00 00    	jne    b97b <iscsi_open+0x2e5>
    b8ee:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    b8f3:	48 8d 35 8e dc 01 00 	lea    0x1dc8e(%rip),%rsi        # 29588 <hostname_setting>
    b8fa:	31 ff                	xor    %edi,%edi
    b8fc:	e8 ed 64 00 00       	call   11dee <fetch_string_setting_copy>
    b901:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    b906:	48 85 d2             	test   %rdx,%rdx
    b909:	74 2e                	je     b939 <iscsi_open+0x2a3>
    b90b:	4c 89 e7             	mov    %r12,%rdi
    b90e:	31 c0                	xor    %eax,%eax
    b910:	48 8d 35 d7 79 01 00 	lea    0x179d7(%rip),%rsi        # 232ee <.LC9>
    b917:	e8 87 c7 00 00       	call   180a3 <asprintf>
    b91c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    b921:	41 89 c4             	mov    %eax,%r12d
    b924:	e8 26 0d 00 00       	call   c64f <free>
    b929:	45 85 e4             	test   %r12d,%r12d
    b92c:	79 4d                	jns    b97b <iscsi_open+0x2e5>
    b92e:	41 bc 77 9f f2 ce    	mov    $0xcef29f77,%r12d
    b934:	e9 d3 00 00 00       	jmp    ba0c <iscsi_open+0x376>
    b939:	31 ff                	xor    %edi,%edi
    b93b:	4c 89 fa             	mov    %r15,%rdx
    b93e:	48 8d 35 6b dc 01 00 	lea    0x1dc6b(%rip),%rsi        # 295b0 <uuid_setting>
    b945:	e8 1e 68 00 00       	call   12168 <fetch_uuid_setting>
    b94a:	85 c0                	test   %eax,%eax
    b94c:	79 0b                	jns    b959 <iscsi_open+0x2c3>
    b94e:	41 bc 7e 9a f2 e3    	mov    $0xe3f29a7e,%r12d
    b954:	e9 b3 00 00 00       	jmp    ba0c <iscsi_open+0x376>
    b959:	4c 89 ff             	mov    %r15,%rdi
    b95c:	e8 f4 b1 00 00       	call   16b55 <uuid_ntoa>
    b961:	48 8d 35 86 79 01 00 	lea    0x17986(%rip),%rsi        # 232ee <.LC9>
    b968:	4c 89 e7             	mov    %r12,%rdi
    b96b:	48 89 c2             	mov    %rax,%rdx
    b96e:	31 c0                	xor    %eax,%eax
    b970:	e8 2e c7 00 00       	call   180a3 <asprintf>
    b975:	85 c0                	test   %eax,%eax
    b977:	79 02                	jns    b97b <iscsi_open+0x2e5>
    b979:	eb b3                	jmp    b92e <iscsi_open+0x298>
    b97b:	48 8b 95 98 00 00 00 	mov    0x98(%rbp),%rdx
    b982:	48 85 d2             	test   %rdx,%rdx
    b985:	0f 95 c1             	setne  %cl
    b988:	48 83 bd a0 00 00 00 	cmpq   $0x0,0xa0(%rbp)
    b98f:	00 
    b990:	0f 95 c0             	setne  %al
    b993:	38 c1                	cmp    %al,%cl
    b995:	75 23                	jne    b9ba <iscsi_open+0x324>
    b997:	48 83 bd a8 00 00 00 	cmpq   $0x0,0xa8(%rbp)
    b99e:	00 
    b99f:	0f 95 c0             	setne  %al
    b9a2:	48 83 bd b0 00 00 00 	cmpq   $0x0,0xb0(%rbp)
    b9a9:	00 
    b9aa:	0f 95 c1             	setne  %cl
    b9ad:	38 c8                	cmp    %cl,%al
    b9af:	75 09                	jne    b9ba <iscsi_open+0x324>
    b9b1:	48 85 d2             	test   %rdx,%rdx
    b9b4:	75 0c                	jne    b9c2 <iscsi_open+0x32c>
    b9b6:	84 c0                	test   %al,%al
    b9b8:	74 08                	je     b9c2 <iscsi_open+0x32c>
    b9ba:	41 bc 7e 9d f2 e3    	mov    $0xe3f29d7e,%r12d
    b9c0:	eb 4a                	jmp    ba0c <iscsi_open+0x376>
    b9c2:	48 83 7d 78 00       	cmpq   $0x0,0x78(%rbp)
    b9c7:	75 08                	jne    b9d1 <iscsi_open+0x33b>
    b9c9:	41 bc 7d 9c f2 c3    	mov    $0xc3f29c7d,%r12d
    b9cf:	eb 3b                	jmp    ba0c <iscsi_open+0x376>
    b9d1:	48 83 bd 88 00 00 00 	cmpq   $0x0,0x88(%rbp)
    b9d8:	00 
    b9d9:	75 08                	jne    b9e3 <iscsi_open+0x34d>
    b9db:	41 bc 7e 9b f2 e3    	mov    $0xe3f29b7e,%r12d
    b9e1:	eb 29                	jmp    ba0c <iscsi_open+0x376>
    b9e3:	48 89 ef             	mov    %rbp,%rdi
    b9e6:	e8 ec fb ff ff       	call   b5d7 <iscsi_open_connection>
    b9eb:	41 89 c4             	mov    %eax,%r12d
    b9ee:	85 c0                	test   %eax,%eax
    b9f0:	75 1a                	jne    ba0c <iscsi_open+0x376>
    b9f2:	48 8d 95 d8 01 00 00 	lea    0x1d8(%rbp),%rdx
    b9f9:	48 8d 75 10          	lea    0x10(%rbp),%rsi
    b9fd:	4c 89 f7             	mov    %r14,%rdi
    ba00:	e8 3d 57 00 00       	call   11142 <scsi_open>
    ba05:	41 89 c4             	mov    %eax,%r12d
    ba08:	85 c0                	test   %eax,%eax
    ba0a:	74 0b                	je     ba17 <iscsi_open+0x381>
    ba0c:	44 89 e6             	mov    %r12d,%esi
    ba0f:	48 89 ef             	mov    %rbp,%rdi
    ba12:	e8 5f f5 ff ff       	call   af76 <iscsi_close>
    ba17:	48 89 ef             	mov    %rbp,%rdi
    ba1a:	e8 1f 44 00 00       	call   fe3e <ref_decrement>
    ba1f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    ba24:	48 2b 05 45 e5 01 00 	sub    0x1e545(%rip),%rax        # 29f70 <__stack_chk_guard>
    ba2b:	74 05                	je     ba32 <iscsi_open+0x39c>
    ba2d:	e8 2e 70 ff ff       	call   2a60 <__stack_chk_fail>
    ba32:	48 83 c4 40          	add    $0x40,%rsp
    ba36:	44 89 e0             	mov    %r12d,%eax
    ba39:	5d                   	pop    %rbp
    ba3a:	41 5c                	pop    %r12
    ba3c:	41 5d                	pop    %r13
    ba3e:	41 5e                	pop    %r14
    ba40:	41 5f                	pop    %r15
    ba42:	c3                   	ret    

000000000000ba43 <iscsi_rx_data>:
    ba43:	f3 0f 1e fa          	endbr64 
    ba47:	41 57                	push   %r15
    ba49:	41 56                	push   %r14
    ba4b:	49 89 fe             	mov    %rdi,%r14
    ba4e:	41 55                	push   %r13
    ba50:	41 54                	push   %r12
    ba52:	55                   	push   %rbp
    ba53:	53                   	push   %rbx
    ba54:	48 89 cb             	mov    %rcx,%rbx
    ba57:	48 83 ec 38          	sub    $0x38,%rsp
    ba5b:	48 8b 05 0e e5 01 00 	mov    0x1e50e(%rip),%rax        # 29f70 <__stack_chk_guard>
    ba62:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    ba67:	8b 87 7c 01 00 00    	mov    0x17c(%rdi),%eax
    ba6d:	0f c8                	bswap  %eax
    ba6f:	89 87 04 01 00 00    	mov    %eax,0x104(%rdi)
    ba75:	8b 87 78 01 00 00    	mov    0x178(%rdi),%eax
    ba7b:	0f c8                	bswap  %eax
    ba7d:	89 87 08 01 00 00    	mov    %eax,0x108(%rdi)
    ba83:	8a 87 60 01 00 00    	mov    0x160(%rdi),%al
    ba89:	83 e0 3f             	and    $0x3f,%eax
    ba8c:	3c 23                	cmp    $0x23,%al
    ba8e:	74 60                	je     baf0 <iscsi_rx_data+0xad>
    ba90:	77 18                	ja     baaa <iscsi_rx_data+0x67>
    ba92:	45 31 ff             	xor    %r15d,%r15d
    ba95:	3c 20                	cmp    $0x20,%al
    ba97:	0f 84 4f 04 00 00    	je     beec <iscsi_rx_data+0x4a9>
    ba9d:	3c 21                	cmp    $0x21,%al
    ba9f:	0f 84 1e 01 00 00    	je     bbc3 <iscsi_rx_data+0x180>
    baa5:	e9 7d 02 00 00       	jmp    bd27 <iscsi_rx_data+0x2e4>
    baaa:	3c 25                	cmp    $0x25,%al
    baac:	0f 84 08 02 00 00    	je     bcba <iscsi_rx_data+0x277>
    bab2:	3c 31                	cmp    $0x31,%al
    bab4:	0f 85 6d 02 00 00    	jne    bd27 <iscsi_rx_data+0x2e4>
    baba:	8b 87 74 01 00 00    	mov    0x174(%rdi),%eax
    bac0:	31 f6                	xor    %esi,%esi
    bac2:	0f c8                	bswap  %eax
    bac4:	89 87 f8 00 00 00    	mov    %eax,0xf8(%rdi)
    baca:	8b 87 88 01 00 00    	mov    0x188(%rdi),%eax
    bad0:	0f c8                	bswap  %eax
    bad2:	89 87 fc 00 00 00    	mov    %eax,0xfc(%rdi)
    bad8:	8b 87 8c 01 00 00    	mov    0x18c(%rdi),%eax
    bade:	0f c8                	bswap  %eax
    bae0:	89 87 00 01 00 00    	mov    %eax,0x100(%rdi)
    bae6:	e8 f2 ef ff ff       	call   aadd <iscsi_start_data_out>
    baeb:	e9 2f 02 00 00       	jmp    bd1f <iscsi_rx_data+0x2dc>
    baf0:	e8 bf f0 ff ff       	call   abb4 <iscsi_rx_buffered_data>
    baf5:	41 89 c7             	mov    %eax,%r15d
    baf8:	85 c0                	test   %eax,%eax
    bafa:	0f 85 ec 03 00 00    	jne    beec <iscsi_rx_data+0x4a9>
    bb00:	48 85 db             	test   %rbx,%rbx
    bb03:	0f 85 16 02 00 00    	jne    bd1f <iscsi_rx_data+0x2dc>
    bb09:	4d 8b ae a0 01 00 00 	mov    0x1a0(%r14),%r13
    bb10:	49 8b 9e a8 01 00 00 	mov    0x1a8(%r14),%rbx
    bb17:	4c 89 ee             	mov    %r13,%rsi
    bb1a:	48 89 df             	mov    %rbx,%rdi
    bb1d:	e8 01 7e 00 00       	call   13923 <strnlen>
    bb22:	4c 8d 60 01          	lea    0x1(%rax),%r12
    bb26:	4d 39 e5             	cmp    %r12,%r13
    bb29:	0f 82 10 02 00 00    	jb     bd3f <iscsi_rx_data+0x2fc>
    bb2f:	be 3d 00 00 00       	mov    $0x3d,%esi
    bb34:	48 89 df             	mov    %rbx,%rdi
    bb37:	e8 0b 7e 00 00       	call   13947 <strchr>
    bb3c:	48 85 c0             	test   %rax,%rax
    bb3f:	75 0b                	jne    bb4c <iscsi_rx_data+0x109>
    bb41:	41 bf 68 9a f2 bc    	mov    $0xbcf29a68,%r15d
    bb47:	e9 a0 03 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    bb4c:	48 89 c1             	mov    %rax,%rcx
    bb4f:	48 8d 68 01          	lea    0x1(%rax),%rbp
    bb53:	48 8d 35 ac 77 01 00 	lea    0x177ac(%rip),%rsi        # 23306 <.LC10>
    bb5a:	48 29 d9             	sub    %rbx,%rcx
    bb5d:	48 89 ef             	mov    %rbp,%rdi
    bb60:	48 89 0c 24          	mov    %rcx,(%rsp)
    bb64:	e8 77 7d 00 00       	call   138e0 <strcmp>
    bb69:	85 c0                	test   %eax,%eax
    bb6b:	75 0b                	jne    bb78 <iscsi_rx_data+0x135>
    bb6d:	41 bf 68 99 f2 bc    	mov    $0xbcf29968,%r15d
    bb73:	e9 74 03 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    bb78:	48 8d 0d 21 aa 01 00 	lea    0x1aa21(%rip),%rcx        # 265a0 <iscsi_string_types>
    bb7f:	48 8b 31             	mov    (%rcx),%rsi
    bb82:	48 85 f6             	test   %rsi,%rsi
    bb85:	74 31                	je     bbb8 <iscsi_rx_data+0x175>
    bb87:	48 8b 14 24          	mov    (%rsp),%rdx
    bb8b:	48 89 df             	mov    %rbx,%rdi
    bb8e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    bb93:	e8 1f 7d 00 00       	call   138b7 <strncmp>
    bb98:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    bb9d:	85 c0                	test   %eax,%eax
    bb9f:	74 06                	je     bba7 <iscsi_rx_data+0x164>
    bba1:	48 83 c1 10          	add    $0x10,%rcx
    bba5:	eb d8                	jmp    bb7f <iscsi_rx_data+0x13c>
    bba7:	48 89 ee             	mov    %rbp,%rsi
    bbaa:	4c 89 f7             	mov    %r14,%rdi
    bbad:	ff 51 08             	call   *0x8(%rcx)
    bbb0:	85 c0                	test   %eax,%eax
    bbb2:	0f 85 7f 01 00 00    	jne    bd37 <iscsi_rx_data+0x2f4>
    bbb8:	4c 01 e3             	add    %r12,%rbx
    bbbb:	4d 29 e5             	sub    %r12,%r13
    bbbe:	e9 54 ff ff ff       	jmp    bb17 <iscsi_rx_data+0xd4>
    bbc3:	e8 ec ef ff ff       	call   abb4 <iscsi_rx_buffered_data>
    bbc8:	41 89 c7             	mov    %eax,%r15d
    bbcb:	85 c0                	test   %eax,%eax
    bbcd:	0f 85 19 03 00 00    	jne    beec <iscsi_rx_data+0x4a9>
    bbd3:	48 85 db             	test   %rbx,%rbx
    bbd6:	0f 85 10 03 00 00    	jne    beec <iscsi_rx_data+0x4a9>
    bbdc:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    bbe1:	48 89 ef             	mov    %rbp,%rdi
    bbe4:	ab                   	stos   %eax,%es:(%rdi)
    bbe5:	ab                   	stos   %eax,%es:(%rdi)
    bbe6:	ab                   	stos   %eax,%es:(%rdi)
    bbe7:	ab                   	stos   %eax,%es:(%rdi)
    bbe8:	ab                   	stos   %eax,%es:(%rdi)
    bbe9:	ab                   	stos   %eax,%es:(%rdi)
    bbea:	41 8a 86 63 01 00 00 	mov    0x163(%r14),%al
    bbf1:	41 8a 96 61 01 00 00 	mov    0x161(%r14),%dl
    bbf8:	88 44 24 10          	mov    %al,0x10(%rsp)
    bbfc:	41 8b 86 8c 01 00 00 	mov    0x18c(%r14),%eax
    bc03:	0f c8                	bswap  %eax
    bc05:	f6 c2 04             	test   $0x4,%dl
    bc08:	74 04                	je     bc0e <iscsi_rx_data+0x1cb>
    bc0a:	89 c0                	mov    %eax,%eax
    bc0c:	eb 07                	jmp    bc15 <iscsi_rx_data+0x1d2>
    bc0e:	80 e2 02             	and    $0x2,%dl
    bc11:	74 07                	je     bc1a <iscsi_rx_data+0x1d7>
    bc13:	f7 d8                	neg    %eax
    bc15:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bc1a:	41 8b 86 64 01 00 00 	mov    0x164(%r14),%eax
    bc21:	0f c8                	bswap  %eax
    bc23:	25 ff ff ff 00       	and    $0xffffff,%eax
    bc28:	89 c6                	mov    %eax,%esi
    bc2a:	74 19                	je     bc45 <iscsi_rx_data+0x202>
    bc2c:	49 8b 86 a8 01 00 00 	mov    0x1a8(%r14),%rax
    bc33:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    bc38:	48 83 ee 02          	sub    $0x2,%rsi
    bc3c:	48 8d 78 02          	lea    0x2(%rax),%rdi
    bc40:	e8 d1 54 00 00       	call   11116 <scsi_parse_sense>
    bc45:	49 8b be a8 01 00 00 	mov    0x1a8(%r14),%rdi
    bc4c:	e8 fe 09 00 00       	call   c64f <free>
    bc51:	41 80 be 62 01 00 00 	cmpb   $0x0,0x162(%r14)
    bc58:	00 
    bc59:	49 c7 86 a8 01 00 00 	movq   $0x0,0x1a8(%r14)
    bc60:	00 00 00 00 
    bc64:	74 0b                	je     bc71 <iscsi_rx_data+0x22e>
    bc66:	41 bf 68 9f f2 e2    	mov    $0xe2f29f68,%r15d
    bc6c:	e9 7b 02 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    bc71:	49 8b be b0 01 00 00 	mov    0x1b0(%r14),%rdi
    bc78:	41 8b 9e f4 00 00 00 	mov    0xf4(%r14),%ebx
    bc7f:	4d 8d 66 30          	lea    0x30(%r14),%r12
    bc83:	e8 c7 09 00 00       	call   c64f <free>
    bc88:	48 89 ee             	mov    %rbp,%rsi
    bc8b:	4c 89 e7             	mov    %r12,%rdi
    bc8e:	49 c7 86 b0 01 00 00 	movq   $0x0,0x1b0(%r14)
    bc95:	00 00 00 00 
    bc99:	e8 58 4f 00 00       	call   10bf6 <scsi_response>
    bc9e:	41 3b 9e f4 00 00 00 	cmp    0xf4(%r14),%ebx
    bca5:	0f 85 41 02 00 00    	jne    beec <iscsi_rx_data+0x4a9>
    bcab:	31 f6                	xor    %esi,%esi
    bcad:	4c 89 e7             	mov    %r12,%rdi
    bcb0:	e8 93 db ff ff       	call   9848 <intf_restart>
    bcb5:	e9 32 02 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    bcba:	48 8b 8f b0 01 00 00 	mov    0x1b0(%rdi),%rcx
    bcc1:	8b 87 88 01 00 00    	mov    0x188(%rdi),%eax
    bcc7:	48 8b bf 98 01 00 00 	mov    0x198(%rdi),%rdi
    bcce:	0f c8                	bswap  %eax
    bcd0:	48 03 79 28          	add    0x28(%rcx),%rdi
    bcd4:	89 c0                	mov    %eax,%eax
    bcd6:	48 01 c7             	add    %rax,%rdi
    bcd9:	e8 2f b6 00 00       	call   1730d <__memcpy>
    bcde:	48 85 db             	test   %rbx,%rbx
    bce1:	75 3c                	jne    bd1f <iscsi_rx_data+0x2dc>
    bce3:	41 f6 86 61 01 00 00 	testb  $0x1,0x161(%r14)
    bcea:	01 
    bceb:	74 32                	je     bd1f <iscsi_rx_data+0x2dc>
    bced:	49 8b be b0 01 00 00 	mov    0x1b0(%r14),%rdi
    bcf4:	41 8b 9e f4 00 00 00 	mov    0xf4(%r14),%ebx
    bcfb:	e8 4f 09 00 00       	call   c64f <free>
    bd00:	49 c7 86 b0 01 00 00 	movq   $0x0,0x1b0(%r14)
    bd07:	00 00 00 00 
    bd0b:	41 3b 9e f4 00 00 00 	cmp    0xf4(%r14),%ebx
    bd12:	75 0b                	jne    bd1f <iscsi_rx_data+0x2dc>
    bd14:	49 8d 7e 30          	lea    0x30(%r14),%rdi
    bd18:	31 f6                	xor    %esi,%esi
    bd1a:	e8 29 db ff ff       	call   9848 <intf_restart>
    bd1f:	45 31 ff             	xor    %r15d,%r15d
    bd22:	e9 c5 01 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    bd27:	48 85 db             	test   %rbx,%rbx
    bd2a:	75 f3                	jne    bd1f <iscsi_rx_data+0x2dc>
    bd2c:	41 bf 7d 9d f2 c3    	mov    $0xc3f29d7d,%r15d
    bd32:	e9 b5 01 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    bd37:	41 89 c7             	mov    %eax,%r15d
    bd3a:	e9 ad 01 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    bd3f:	49 8b be a8 01 00 00 	mov    0x1a8(%r14),%rdi
    bd46:	e8 04 09 00 00       	call   c64f <free>
    bd4b:	41 8a 96 84 01 00 00 	mov    0x184(%r14),%dl
    bd52:	49 c7 86 a8 01 00 00 	movq   $0x0,0x1a8(%r14)
    bd59:	00 00 00 00 
    bd5d:	80 fa 01             	cmp    $0x1,%dl
    bd60:	0f 85 82 00 00 00    	jne    bde8 <iscsi_rx_data+0x3a5>
    bd66:	31 f6                	xor    %esi,%esi
    bd68:	49 8d 7e 50          	lea    0x50(%r14),%rdi
    bd6c:	e8 d7 da ff ff       	call   9848 <intf_restart>
    bd71:	49 8d be d0 00 00 00 	lea    0xd0(%r14),%rdi
    bd78:	41 c7 86 90 00 00 00 	movl   $0x0,0x90(%r14)
    bd7f:	00 00 00 00 
    bd83:	41 c7 86 3c 01 00 00 	movl   $0x0,0x13c(%r14)
    bd8a:	00 00 00 00 
    bd8e:	41 c7 86 90 01 00 00 	movl   $0x0,0x190(%r14)
    bd95:	00 00 00 00 
    bd99:	49 c7 86 98 01 00 00 	movq   $0x0,0x198(%r14)
    bda0:	00 00 00 00 
    bda4:	e8 e3 d3 00 00       	call   1918c <chap_finish>
    bda9:	49 8b be a8 01 00 00 	mov    0x1a8(%r14),%rdi
    bdb0:	e8 9a 08 00 00       	call   c64f <free>
    bdb5:	49 c7 86 a8 01 00 00 	movq   $0x0,0x1a8(%r14)
    bdbc:	00 00 00 00 
    bdc0:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    bdc5:	48 2b 05 a4 e1 01 00 	sub    0x1e1a4(%rip),%rax        # 29f70 <__stack_chk_guard>
    bdcc:	0f 85 28 01 00 00    	jne    befa <iscsi_rx_data+0x4b7>
    bdd2:	48 83 c4 38          	add    $0x38,%rsp
    bdd6:	4c 89 f7             	mov    %r14,%rdi
    bdd9:	5b                   	pop    %rbx
    bdda:	5d                   	pop    %rbp
    bddb:	41 5c                	pop    %r12
    bddd:	41 5d                	pop    %r13
    bddf:	41 5e                	pop    %r14
    bde1:	41 5f                	pop    %r15
    bde3:	e9 ef f7 ff ff       	jmp    b5d7 <iscsi_open_connection>
    bde8:	84 d2                	test   %dl,%dl
    bdea:	0f 84 81 00 00 00    	je     be71 <iscsi_rx_data+0x42e>
    bdf0:	41 8a 86 85 01 00 00 	mov    0x185(%r14),%al
    bdf7:	80 fa 02             	cmp    $0x2,%dl
    bdfa:	74 07                	je     be03 <iscsi_rx_data+0x3c0>
    bdfc:	80 fa 03             	cmp    $0x3,%dl
    bdff:	74 3f                	je     be40 <iscsi_rx_data+0x3fd>
    be01:	eb 66                	jmp    be69 <iscsi_rx_data+0x426>
    be03:	3c 02                	cmp    $0x2,%al
    be05:	74 23                	je     be2a <iscsi_rx_data+0x3e7>
    be07:	77 0f                	ja     be18 <iscsi_rx_data+0x3d5>
    be09:	fe c8                	dec    %al
    be0b:	75 28                	jne    be35 <iscsi_rx_data+0x3f2>
    be0d:	41 bf 71 9e f2 be    	mov    $0xbef29e71,%r15d
    be13:	e9 d4 00 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    be18:	83 e8 03             	sub    $0x3,%eax
    be1b:	3c 01                	cmp    $0x1,%al
    be1d:	77 16                	ja     be35 <iscsi_rx_data+0x3f2>
    be1f:	41 bf 79 9f f2 d3    	mov    $0xd3f29f79,%r15d
    be25:	e9 c2 00 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    be2a:	41 bf 71 9d f2 be    	mov    $0xbef29d71,%r15d
    be30:	e9 b7 00 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    be35:	41 bf 7d 9e f2 c3    	mov    $0xc3f29e7d,%r15d
    be3b:	e9 ac 00 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    be40:	3c 01                	cmp    $0x1,%al
    be42:	74 0f                	je     be53 <iscsi_rx_data+0x410>
    be44:	3c 02                	cmp    $0x2,%al
    be46:	75 16                	jne    be5e <iscsi_rx_data+0x41b>
    be48:	41 bf 68 9d f2 e2    	mov    $0xe2f29d68,%r15d
    be4e:	e9 99 00 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    be53:	41 bf 68 9e f2 e2    	mov    $0xe2f29e68,%r15d
    be59:	e9 8e 00 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    be5e:	41 bf 7d 9b f2 c3    	mov    $0xc3f29b7d,%r15d
    be64:	e9 83 00 00 00       	jmp    beec <iscsi_rx_data+0x4a9>
    be69:	41 bf 7e 9f f2 e3    	mov    $0xe3f29f7e,%r15d
    be6f:	eb 7b                	jmp    beec <iscsi_rx_data+0x4a9>
    be71:	41 8a 96 61 01 00 00 	mov    0x161(%r14),%dl
    be78:	41 8b 86 90 00 00 00 	mov    0x90(%r14),%eax
    be7f:	84 d2                	test   %dl,%dl
    be81:	79 31                	jns    beb4 <iscsi_rx_data+0x471>
    be83:	83 e2 03             	and    $0x3,%edx
    be86:	25 f0 00 ff ff       	and    $0xffff00f0,%eax
    be8b:	80 fa 01             	cmp    $0x1,%dl
    be8e:	74 0a                	je     be9a <iscsi_rx_data+0x457>
    be90:	80 fa 03             	cmp    $0x3,%dl
    be93:	75 13                	jne    bea8 <iscsi_rx_data+0x465>
    be95:	83 c8 0c             	or     $0xc,%eax
    be98:	eb 05                	jmp    be9f <iscsi_rx_data+0x45c>
    be9a:	0d 07 10 00 00       	or     $0x1007,%eax
    be9f:	41 89 86 90 00 00 00 	mov    %eax,0x90(%r14)
    bea6:	eb 0c                	jmp    beb4 <iscsi_rx_data+0x471>
    bea8:	41 89 86 90 00 00 00 	mov    %eax,0x90(%r14)
    beaf:	e9 b2 fd ff ff       	jmp    bc66 <iscsi_rx_data+0x223>
    beb4:	41 8b 86 90 00 00 00 	mov    0x90(%r14),%eax
    bebb:	89 c2                	mov    %eax,%edx
    bebd:	83 e2 0f             	and    $0xf,%edx
    bec0:	83 fa 0c             	cmp    $0xc,%edx
    bec3:	74 0a                	je     becf <iscsi_rx_data+0x48c>
    bec5:	4c 89 f7             	mov    %r14,%rdi
    bec8:	e8 6c f6 ff ff       	call   b539 <iscsi_start_login>
    becd:	eb 1d                	jmp    beec <iscsi_rx_data+0x4a9>
    becf:	25 00 00 06 00       	and    $0x60000,%eax
    bed4:	3d 00 00 02 00       	cmp    $0x20000,%eax
    bed9:	75 08                	jne    bee3 <iscsi_rx_data+0x4a0>
    bedb:	41 bf 68 9f f2 bc    	mov    $0xbcf29f68,%r15d
    bee1:	eb 09                	jmp    beec <iscsi_rx_data+0x4a9>
    bee3:	49 8d 7e 10          	lea    0x10(%r14),%rdi
    bee7:	e8 b8 b5 00 00       	call   174a4 <xfer_window_changed>
    beec:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    bef1:	48 2b 05 78 e0 01 00 	sub    0x1e078(%rip),%rax        # 29f70 <__stack_chk_guard>
    bef8:	74 05                	je     beff <iscsi_rx_data+0x4bc>
    befa:	e8 61 6b ff ff       	call   2a60 <__stack_chk_fail>
    beff:	48 83 c4 38          	add    $0x38,%rsp
    bf03:	44 89 f8             	mov    %r15d,%eax
    bf06:	5b                   	pop    %rbx
    bf07:	5d                   	pop    %rbp
    bf08:	41 5c                	pop    %r12
    bf0a:	41 5d                	pop    %r13
    bf0c:	41 5e                	pop    %r14
    bf0e:	41 5f                	pop    %r15
    bf10:	c3                   	ret    

000000000000bf11 <job_progress>:
    bf11:	f3 0f 1e fa          	endbr64 
    bf15:	41 54                	push   %r12
    bf17:	55                   	push   %rbp
    bf18:	48 89 f5             	mov    %rsi,%rbp
    bf1b:	48 8d 35 ef ff ff ff 	lea    -0x11(%rip),%rsi        # bf11 <job_progress>
    bf22:	53                   	push   %rbx
    bf23:	48 83 ec 10          	sub    $0x10,%rsp
    bf27:	48 8b 05 42 e0 01 00 	mov    0x1e042(%rip),%rax        # 29f70 <__stack_chk_guard>
    bf2e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bf33:	31 c0                	xor    %eax,%eax
    bf35:	48 89 e2             	mov    %rsp,%rdx
    bf38:	e8 c8 d8 ff ff       	call   9805 <intf_get_dest_op_untyped>
    bf3d:	48 8b 3c 24          	mov    (%rsp),%rdi
    bf41:	48 89 c3             	mov    %rax,%rbx
    bf44:	e8 66 d8 ff ff       	call   97af <intf_object>
    bf49:	48 89 ef             	mov    %rbp,%rdi
    bf4c:	b9 30 00 00 00       	mov    $0x30,%ecx
    bf51:	49 89 c0             	mov    %rax,%r8
    bf54:	31 c0                	xor    %eax,%eax
    bf56:	f3 aa                	rep stos %al,%es:(%rdi)
    bf58:	45 31 e4             	xor    %r12d,%r12d
    bf5b:	48 85 db             	test   %rbx,%rbx
    bf5e:	74 0b                	je     bf6b <job_progress+0x5a>
    bf60:	48 89 ee             	mov    %rbp,%rsi
    bf63:	4c 89 c7             	mov    %r8,%rdi
    bf66:	ff d3                	call   *%rbx
    bf68:	41 89 c4             	mov    %eax,%r12d
    bf6b:	48 8b 3c 24          	mov    (%rsp),%rdi
    bf6f:	e8 cc d7 ff ff       	call   9740 <intf_put>
    bf74:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    bf79:	48 2b 05 f0 df 01 00 	sub    0x1dff0(%rip),%rax        # 29f70 <__stack_chk_guard>
    bf80:	74 05                	je     bf87 <job_progress+0x76>
    bf82:	e8 d9 6a ff ff       	call   2a60 <__stack_chk_fail>
    bf87:	48 83 c4 10          	add    $0x10,%rsp
    bf8b:	44 89 e0             	mov    %r12d,%eax
    bf8e:	5b                   	pop    %rbx
    bf8f:	5d                   	pop    %rbp
    bf90:	41 5c                	pop    %r12
    bf92:	c3                   	ret    

000000000000bf93 <buffered_line>:
    bf93:	f3 0f 1e fa          	endbr64 
    bf97:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    bf9b:	31 c0                	xor    %eax,%eax
    bf9d:	48 85 d2             	test   %rdx,%rdx
    bfa0:	74 2a                	je     bfcc <buffered_line+0x39>
    bfa2:	48 83 7f 10 00       	cmpq   $0x0,0x10(%rdi)
    bfa7:	74 23                	je     bfcc <buffered_line+0x39>
    bfa9:	48 8b 0f             	mov    (%rdi),%rcx
    bfac:	48 01 ca             	add    %rcx,%rdx
    bfaf:	80 7a ff 00          	cmpb   $0x0,-0x1(%rdx)
    bfb3:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    bfb7:	75 11                	jne    bfca <buffered_line+0x37>
    bfb9:	48 39 c1             	cmp    %rax,%rcx
    bfbc:	73 0e                	jae    bfcc <buffered_line+0x39>
    bfbe:	80 78 ff 00          	cmpb   $0x0,-0x1(%rax)
    bfc2:	74 05                	je     bfc9 <buffered_line+0x36>
    bfc4:	48 ff c8             	dec    %rax
    bfc7:	eb f0                	jmp    bfb9 <buffered_line+0x26>
    bfc9:	c3                   	ret    
    bfca:	31 c0                	xor    %eax,%eax
    bfcc:	c3                   	ret    

000000000000bfcd <empty_line_buffer>:
    bfcd:	f3 0f 1e fa          	endbr64 
    bfd1:	53                   	push   %rbx
    bfd2:	48 89 fb             	mov    %rdi,%rbx
    bfd5:	48 8b 3f             	mov    (%rdi),%rdi
    bfd8:	e8 72 06 00 00       	call   c64f <free>
    bfdd:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    bfe4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    bfeb:	00 
    bfec:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    bff3:	00 
    bff4:	5b                   	pop    %rbx
    bff5:	c3                   	ret    

000000000000bff6 <line_buffer>:
    bff6:	f3 0f 1e fa          	endbr64 
    bffa:	41 57                	push   %r15
    bffc:	41 56                	push   %r14
    bffe:	41 55                	push   %r13
    c000:	49 89 f5             	mov    %rsi,%r13
    c003:	be 0a 00 00 00       	mov    $0xa,%esi
    c008:	41 54                	push   %r12
    c00a:	55                   	push   %rbp
    c00b:	48 89 fd             	mov    %rdi,%rbp
    c00e:	4c 89 ef             	mov    %r13,%rdi
    c011:	53                   	push   %rbx
    c012:	48 89 d3             	mov    %rdx,%rbx
    c015:	51                   	push   %rcx
    c016:	e8 5a 78 00 00       	call   13875 <memchr>
    c01b:	49 89 c6             	mov    %rax,%r14
    c01e:	48 85 c0             	test   %rax,%rax
    c021:	74 09                	je     c02c <line_buffer+0x36>
    c023:	48 89 c3             	mov    %rax,%rbx
    c026:	4c 29 eb             	sub    %r13,%rbx
    c029:	48 ff c3             	inc    %rbx
    c02c:	31 f6                	xor    %esi,%esi
    c02e:	48 89 da             	mov    %rbx,%rdx
    c031:	4c 89 ef             	mov    %r13,%rdi
    c034:	e8 3c 78 00 00       	call   13875 <memchr>
    c039:	48 85 c0             	test   %rax,%rax
    c03c:	74 07                	je     c045 <line_buffer+0x4f>
    c03e:	b8 7e df f9 e3       	mov    $0xe3f9df7e,%eax
    c043:	eb 70                	jmp    c0b5 <line_buffer+0xbf>
    c045:	4c 8b 7d 08          	mov    0x8(%rbp),%r15
    c049:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    c04d:	49 01 df             	add    %rbx,%r15
    c050:	49 8d 77 01          	lea    0x1(%r15),%rsi
    c054:	e8 f1 04 00 00       	call   c54a <realloc>
    c059:	49 89 c4             	mov    %rax,%r12
    c05c:	48 85 c0             	test   %rax,%rax
    c05f:	75 07                	jne    c068 <line_buffer+0x72>
    c061:	b8 77 df f9 ce       	mov    $0xcef9df77,%eax
    c066:	eb 4d                	jmp    c0b5 <line_buffer+0xbf>
    c068:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    c06c:	48 89 da             	mov    %rbx,%rdx
    c06f:	4c 89 ee             	mov    %r13,%rsi
    c072:	48 01 c7             	add    %rax,%rdi
    c075:	e8 93 b2 00 00       	call   1730d <__memcpy>
    c07a:	43 c6 04 3c 00       	movb   $0x0,(%r12,%r15,1)
    c07f:	4c 89 65 00          	mov    %r12,0x0(%rbp)
    c083:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
    c087:	4d 85 f6             	test   %r14,%r14
    c08a:	74 23                	je     c0af <line_buffer+0xb9>
    c08c:	4b 8d 54 3c ff       	lea    -0x1(%r12,%r15,1),%rdx
    c091:	c6 02 00             	movb   $0x0,(%rdx)
    c094:	48 8b 45 08          	mov    0x8(%rbp),%rax
    c098:	48 83 f8 01          	cmp    $0x1,%rax
    c09c:	76 11                	jbe    c0af <line_buffer+0xb9>
    c09e:	80 7a ff 0d          	cmpb   $0xd,-0x1(%rdx)
    c0a2:	75 0b                	jne    c0af <line_buffer+0xb9>
    c0a4:	48 ff c8             	dec    %rax
    c0a7:	48 89 45 08          	mov    %rax,0x8(%rbp)
    c0ab:	c6 42 ff 00          	movb   $0x0,-0x1(%rdx)
    c0af:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
    c0b3:	89 d8                	mov    %ebx,%eax
    c0b5:	5a                   	pop    %rdx
    c0b6:	5b                   	pop    %rbx
    c0b7:	5d                   	pop    %rbp
    c0b8:	41 5c                	pop    %r12
    c0ba:	41 5d                	pop    %r13
    c0bc:	41 5e                	pop    %r14
    c0be:	41 5f                	pop    %r15
    c0c0:	c3                   	ret    

000000000000c0c1 <extern_list_add>:
    c0c1:	f3 0f 1e fa          	endbr64 
    c0c5:	48 8b 06             	mov    (%rsi),%rax
    c0c8:	48 89 78 08          	mov    %rdi,0x8(%rax)
    c0cc:	48 89 07             	mov    %rax,(%rdi)
    c0cf:	48 89 77 08          	mov    %rsi,0x8(%rdi)
    c0d3:	48 89 3e             	mov    %rdi,(%rsi)
    c0d6:	c3                   	ret    

000000000000c0d7 <extern_list_add_tail>:
    c0d7:	f3 0f 1e fa          	endbr64 
    c0db:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c0df:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
    c0e3:	48 89 37             	mov    %rsi,(%rdi)
    c0e6:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c0ea:	48 89 38             	mov    %rdi,(%rax)
    c0ed:	c3                   	ret    

000000000000c0ee <login_exec>:
    c0ee:	f3 0f 1e fa          	endbr64 
    c0f2:	41 54                	push   %r12
    c0f4:	48 8d 15 25 a5 01 00 	lea    0x1a525(%rip),%rdx        # 26620 <login_cmd>
    c0fb:	48 83 ec 10          	sub    $0x10,%rsp
    c0ff:	48 8b 05 6a de 01 00 	mov    0x1de6a(%rip),%rax        # 29f70 <__stack_chk_guard>
    c106:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c10b:	31 c0                	xor    %eax,%eax
    c10d:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
    c112:	e8 98 30 00 00       	call   f1af <parse_options>
    c117:	41 89 c4             	mov    %eax,%r12d
    c11a:	85 c0                	test   %eax,%eax
    c11c:	75 24                	jne    c142 <login_exec+0x54>
    c11e:	e8 3c 00 00 00       	call   c15f <login_ui>
    c123:	41 89 c4             	mov    %eax,%r12d
    c126:	85 c0                	test   %eax,%eax
    c128:	74 18                	je     c142 <login_exec+0x54>
    c12a:	89 c7                	mov    %eax,%edi
    c12c:	e8 6b 76 00 00       	call   1379c <strerror>
    c131:	48 8d 3d 93 72 01 00 	lea    0x17293(%rip),%rdi        # 233cb <.LC0>
    c138:	48 89 c6             	mov    %rax,%rsi
    c13b:	31 c0                	xor    %eax,%eax
    c13d:	e8 5c b0 00 00       	call   1719e <printf>
    c142:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c147:	48 2b 05 22 de 01 00 	sub    0x1de22(%rip),%rax        # 29f70 <__stack_chk_guard>
    c14e:	74 05                	je     c155 <login_exec+0x67>
    c150:	e8 0b 69 ff ff       	call   2a60 <__stack_chk_fail>
    c155:	48 83 c4 10          	add    $0x10,%rsp
    c159:	44 89 e0             	mov    %r12d,%eax
    c15c:	41 5c                	pop    %r12
    c15e:	c3                   	ret    

000000000000c15f <login_ui>:
    c15f:	f3 0f 1e fa          	endbr64 
    c163:	41 57                	push   %r15
    c165:	41 56                	push   %r14
    c167:	41 55                	push   %r13
    c169:	41 54                	push   %r12
    c16b:	55                   	push   %rbp
    c16c:	53                   	push   %rbx
    c16d:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    c174:	48 8b 05 f5 dd 01 00 	mov    0x1ddf5(%rip),%rax        # 29f70 <__stack_chk_guard>
    c17b:	48 89 84 24 18 01 00 	mov    %rax,0x118(%rsp)
    c182:	00 
    c183:	31 c0                	xor    %eax,%eax
    c185:	4c 8d b4 24 98 00 00 	lea    0x98(%rsp),%r14
    c18c:	00 
    c18d:	31 ff                	xor    %edi,%edi
    c18f:	4c 8d ac 24 d8 00 00 	lea    0xd8(%rsp),%r13
    c196:	00 
    c197:	b9 40 00 00 00       	mov    $0x40,%ecx
    c19c:	4c 89 f2             	mov    %r14,%rdx
    c19f:	48 8d 35 72 d5 01 00 	lea    0x1d572(%rip),%rsi        # 29718 <username_setting>
    c1a6:	48 8d 5c 24 18       	lea    0x18(%rsp),%rbx
    c1ab:	e8 68 5c 00 00       	call   11e18 <fetch_string_setting>
    c1b0:	31 ff                	xor    %edi,%edi
    c1b2:	b9 40 00 00 00       	mov    $0x40,%ecx
    c1b7:	4c 89 ea             	mov    %r13,%rdx
    c1ba:	48 8d 35 2f d5 01 00 	lea    0x1d52f(%rip),%rsi        # 296f0 <password_setting>
    c1c1:	48 8d 2d b8 a6 01 00 	lea    0x1a6b8(%rip),%rbp        # 26880 <_stdscr>
    c1c8:	e8 4b 5c 00 00       	call   11e18 <fetch_string_setting>
    c1cd:	e8 94 b0 00 00       	call   17266 <initscr>
    c1d2:	8b 15 dc 83 01 00    	mov    0x183dc(%rip),%edx        # 245b4 <console_width>
    c1d8:	6a 00                	push   $0x0
    c1da:	31 c9                	xor    %ecx,%ecx
    c1dc:	8b 05 ce 83 01 00    	mov    0x183ce(%rip),%eax        # 245b0 <console_height>
    c1e2:	6a 14                	push   $0x14
    c1e4:	4c 89 f6             	mov    %r14,%rsi
    c1e7:	48 89 df             	mov    %rbx,%rdi
    c1ea:	d1 ea                	shr    %edx
    c1ec:	d1 e8                	shr    %eax
    c1ee:	44 8d 4a f6          	lea    -0xa(%rdx),%r9d
    c1f2:	ba 40 00 00 00       	mov    $0x40,%edx
    c1f7:	44 8d 40 fe          	lea    -0x2(%rax),%r8d
    c1fb:	4c 8d 64 24 68       	lea    0x68(%rsp),%r12
    c200:	e8 f6 ea 00 00       	call   1acfb <init_editbox>
    c205:	8b 15 a9 83 01 00    	mov    0x183a9(%rip),%edx        # 245b4 <console_width>
    c20b:	6a 01                	push   $0x1
    c20d:	31 c9                	xor    %ecx,%ecx
    c20f:	8b 05 9b 83 01 00    	mov    0x1839b(%rip),%eax        # 245b0 <console_height>
    c215:	6a 14                	push   $0x14
    c217:	4c 89 ee             	mov    %r13,%rsi
    c21a:	4c 89 e7             	mov    %r12,%rdi
    c21d:	d1 ea                	shr    %edx
    c21f:	d1 e8                	shr    %eax
    c221:	44 8d 4a f6          	lea    -0xa(%rdx),%r9d
    c225:	ba 40 00 00 00       	mov    $0x40,%edx
    c22a:	44 8d 40 04          	lea    0x4(%rax),%r8d
    c22e:	e8 c8 ea 00 00       	call   1acfb <init_editbox>
    c233:	31 d2                	xor    %edx,%edx
    c235:	48 83 c4 20          	add    $0x20,%rsp
    c239:	be 01 00 00 00       	mov    $0x1,%esi
    c23e:	48 89 ef             	mov    %rbp,%rdi
    c241:	e8 ff af 00 00       	call   17245 <wcolour_set>
    c246:	e8 a6 cf 00 00       	call   191f1 <erase>
    c24b:	be 00 00 04 00       	mov    $0x40000,%esi
    c250:	48 89 ef             	mov    %rbp,%rdi
    c253:	e8 cf af 00 00       	call   17227 <wattron>
    c258:	8b 15 56 83 01 00    	mov    0x18356(%rip),%edx        # 245b4 <console_width>
    c25e:	8b 35 4c 83 01 00    	mov    0x1834c(%rip),%esi        # 245b0 <console_height>
    c264:	48 89 ef             	mov    %rbp,%rdi
    c267:	d1 ea                	shr    %edx
    c269:	d1 ee                	shr    %esi
    c26b:	83 ea 04             	sub    $0x4,%edx
    c26e:	83 ee 04             	sub    $0x4,%esi
    c271:	e8 69 12 00 00       	call   d4df <wmove>
    c276:	85 c0                	test   %eax,%eax
    c278:	75 0f                	jne    c289 <login_ui+0x12a>
    c27a:	48 8d 35 6f 71 01 00 	lea    0x1716f(%rip),%rsi        # 233f0 <.LC0>
    c281:	48 89 ef             	mov    %rbp,%rdi
    c284:	e8 33 36 00 00       	call   f8bc <wprintw>
    c289:	8b 15 25 83 01 00    	mov    0x18325(%rip),%edx        # 245b4 <console_width>
    c28f:	8b 35 1b 83 01 00    	mov    0x1831b(%rip),%esi        # 245b0 <console_height>
    c295:	48 89 ef             	mov    %rbp,%rdi
    c298:	d1 ea                	shr    %edx
    c29a:	d1 ee                	shr    %esi
    c29c:	83 ea 04             	sub    $0x4,%edx
    c29f:	83 c6 02             	add    $0x2,%esi
    c2a2:	e8 38 12 00 00       	call   d4df <wmove>
    c2a7:	85 c0                	test   %eax,%eax
    c2a9:	75 0f                	jne    c2ba <login_ui+0x15b>
    c2ab:	48 8d 35 48 71 01 00 	lea    0x17148(%rip),%rsi        # 233fa <.LC1>
    c2b2:	48 89 ef             	mov    %rbp,%rdi
    c2b5:	e8 02 36 00 00       	call   f8bc <wprintw>
    c2ba:	be 00 00 04 00       	mov    $0x40000,%esi
    c2bf:	48 89 ef             	mov    %rbp,%rdi
    c2c2:	41 bf 6c 1f e8 e5    	mov    $0xe5e81f6c,%r15d
    c2c8:	e8 4e af 00 00       	call   1721b <wattroff>
    c2cd:	31 d2                	xor    %edx,%edx
    c2cf:	be 04 00 00 00       	mov    $0x4,%esi
    c2d4:	48 89 ef             	mov    %rbp,%rdi
    c2d7:	e8 69 af 00 00       	call   17245 <wcolour_set>
    c2dc:	48 89 df             	mov    %rbx,%rdi
    c2df:	e8 78 ea 00 00       	call   1ad5c <draw_editbox>
    c2e4:	4c 89 e7             	mov    %r12,%rdi
    c2e7:	e8 70 ea 00 00       	call   1ad5c <draw_editbox>
    c2ec:	48 89 da             	mov    %rbx,%rdx
    c2ef:	41 81 ff 6c 1f e8 e5 	cmp    $0xe5e81f6c,%r15d
    c2f6:	75 7f                	jne    c377 <login_ui+0x218>
    c2f8:	48 89 d7             	mov    %rdx,%rdi
    c2fb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    c300:	e8 57 ea 00 00       	call   1ad5c <draw_editbox>
    c305:	31 ff                	xor    %edi,%edi
    c307:	e8 53 20 01 00       	call   1e35f <getkey>
    c30c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c311:	83 f8 1b             	cmp    $0x1b,%eax
    c314:	89 c6                	mov    %eax,%esi
    c316:	74 36                	je     c34e <login_ui+0x1ef>
    c318:	7f 11                	jg     c32b <login_ui+0x1cc>
    c31a:	83 f8 09             	cmp    $0x9,%eax
    c31d:	74 1c                	je     c33b <login_ui+0x1dc>
    c31f:	83 f8 0a             	cmp    $0xa,%eax
    c322:	74 23                	je     c347 <login_ui+0x1e8>
    c324:	83 f8 03             	cmp    $0x3,%eax
    c327:	74 25                	je     c34e <login_ui+0x1ef>
    c329:	eb 2b                	jmp    c356 <login_ui+0x1f7>
    c32b:	3d 41 01 00 00       	cmp    $0x141,%eax
    c330:	74 ba                	je     c2ec <login_ui+0x18d>
    c332:	3d 42 01 00 00       	cmp    $0x142,%eax
    c337:	74 31                	je     c36a <login_ui+0x20b>
    c339:	eb 1b                	jmp    c356 <login_ui+0x1f7>
    c33b:	48 39 da             	cmp    %rbx,%rdx
    c33e:	4c 89 e2             	mov    %r12,%rdx
    c341:	48 0f 45 d3          	cmovne %rbx,%rdx
    c345:	eb a8                	jmp    c2ef <login_ui+0x190>
    c347:	48 39 da             	cmp    %rbx,%rdx
    c34a:	75 23                	jne    c36f <login_ui+0x210>
    c34c:	eb 1c                	jmp    c36a <login_ui+0x20b>
    c34e:	41 bf 6b 1f e8 f4    	mov    $0xf4e81f6b,%r15d
    c354:	eb 99                	jmp    c2ef <login_ui+0x190>
    c356:	48 89 d7             	mov    %rdx,%rdi
    c359:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    c35e:	e8 4d ec 00 00       	call   1afb0 <edit_string>
    c363:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c368:	eb 85                	jmp    c2ef <login_ui+0x190>
    c36a:	4c 89 e2             	mov    %r12,%rdx
    c36d:	eb 80                	jmp    c2ef <login_ui+0x190>
    c36f:	45 31 ff             	xor    %r15d,%r15d
    c372:	e9 78 ff ff ff       	jmp    c2ef <login_ui+0x190>
    c377:	31 d2                	xor    %edx,%edx
    c379:	be 01 00 00 00       	mov    $0x1,%esi
    c37e:	48 89 ef             	mov    %rbp,%rdi
    c381:	e8 bf ae 00 00       	call   17245 <wcolour_set>
    c386:	e8 66 ce 00 00       	call   191f1 <erase>
    c38b:	e8 1a af 00 00       	call   172aa <endwin>
    c390:	b8 6b 1f e8 f4       	mov    $0xf4e81f6b,%eax
    c395:	45 85 ff             	test   %r15d,%r15d
    c398:	75 3c                	jne    c3d6 <login_ui+0x277>
    c39a:	4c 89 f7             	mov    %r14,%rdi
    c39d:	e8 98 75 00 00       	call   1393a <strlen>
    c3a2:	31 ff                	xor    %edi,%edi
    c3a4:	4c 89 f2             	mov    %r14,%rdx
    c3a7:	48 8d 35 6a d3 01 00 	lea    0x1d36a(%rip),%rsi        # 29718 <username_setting>
    c3ae:	48 89 c1             	mov    %rax,%rcx
    c3b1:	e8 d1 5d 00 00       	call   12187 <store_setting>
    c3b6:	85 c0                	test   %eax,%eax
    c3b8:	75 1c                	jne    c3d6 <login_ui+0x277>
    c3ba:	4c 89 ef             	mov    %r13,%rdi
    c3bd:	e8 78 75 00 00       	call   1393a <strlen>
    c3c2:	4c 89 ea             	mov    %r13,%rdx
    c3c5:	48 8d 35 24 d3 01 00 	lea    0x1d324(%rip),%rsi        # 296f0 <password_setting>
    c3cc:	31 ff                	xor    %edi,%edi
    c3ce:	48 89 c1             	mov    %rax,%rcx
    c3d1:	e8 b1 5d 00 00       	call   12187 <store_setting>
    c3d6:	48 8b 94 24 18 01 00 	mov    0x118(%rsp),%rdx
    c3dd:	00 
    c3de:	48 2b 15 8b db 01 00 	sub    0x1db8b(%rip),%rdx        # 29f70 <__stack_chk_guard>
    c3e5:	74 05                	je     c3ec <login_ui+0x28d>
    c3e7:	e8 74 66 ff ff       	call   2a60 <__stack_chk_fail>
    c3ec:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    c3f3:	5b                   	pop    %rbx
    c3f4:	5d                   	pop    %rbp
    c3f5:	41 5c                	pop    %r12
    c3f7:	41 5d                	pop    %r13
    c3f9:	41 5e                	pop    %r14
    c3fb:	41 5f                	pop    %r15
    c3fd:	c3                   	ret    

000000000000c3fe <init_heap>:
    c3fe:	f3 0f 1e fa          	endbr64 
    c402:	c3                   	ret    

000000000000c403 <shutdown_cache>:
    c403:	f3 0f 1e fa          	endbr64 
    c407:	55                   	push   %rbp
    c408:	48 8d 2d 49 c0 01 00 	lea    0x1c049(%rip),%rbp        # 28458 <config_command>
    c40f:	53                   	push   %rbx
    c410:	52                   	push   %rdx
    c411:	48 8d 1d 28 c0 01 00 	lea    0x1c028(%rip),%rbx        # 28440 <net_discarder>
    c418:	48 39 eb             	cmp    %rbp,%rbx
    c41b:	73 0c                	jae    c429 <shutdown_cache+0x26>
    c41d:	ff 13                	call   *(%rbx)
    c41f:	85 c0                	test   %eax,%eax
    c421:	75 ee                	jne    c411 <shutdown_cache+0xe>
    c423:	48 83 c3 08          	add    $0x8,%rbx
    c427:	eb ef                	jmp    c418 <shutdown_cache+0x15>
    c429:	58                   	pop    %rax
    c42a:	5b                   	pop    %rbx
    c42b:	5d                   	pop    %rbp
    c42c:	c3                   	ret    

000000000000c42d <alloc_memblock>:
    c42d:	f3 0f 1e fa          	endbr64 
    c431:	41 54                	push   %r12
    c433:	4c 8d 24 37          	lea    (%rdi,%rsi,1),%r12
    c437:	b9 04 00 00 00       	mov    $0x4,%ecx
    c43c:	55                   	push   %rbp
    c43d:	48 89 d5             	mov    %rdx,%rbp
    c440:	49 8d 54 24 04       	lea    0x4(%r12),%rdx
    c445:	53                   	push   %rbx
    c446:	48 89 f3             	mov    %rsi,%rbx
    c449:	48 83 ec 30          	sub    $0x30,%rsp
    c44d:	48 8b 05 1c db 01 00 	mov    0x1db1c(%rip),%rax        # 29f70 <__stack_chk_guard>
    c454:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    c459:	31 c0                	xor    %eax,%eax
    c45b:	48 8b 05 36 db 01 00 	mov    0x1db36(%rip),%rax        # 29f98 <efi_systab>
    c462:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
    c467:	48 8b 40 60          	mov    0x60(%rax),%rax
    c46b:	ff 50 40             	call   *0x40(%rax)
    c46e:	48 83 c4 20          	add    $0x20,%rsp
    c472:	48 85 c0             	test   %rax,%rax
    c475:	74 0e                	je     c485 <alloc_memblock+0x58>
    c477:	8a 05 ad 80 01 00    	mov    0x180ad(%rip),%al        # 2452a <loop>
    c47d:	84 c0                	test   %al,%al
    c47f:	75 f6                	jne    c477 <alloc_memblock+0x4a>
    c481:	31 c0                	xor    %eax,%eax
    c483:	eb 65                	jmp    c4ea <alloc_memblock+0xbd>
    c485:	48 85 db             	test   %rbx,%rbx
    c488:	74 25                	je     c4af <alloc_memblock+0x82>
    c48a:	48 8b 14 24          	mov    (%rsp),%rdx
    c48e:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    c492:	48 85 d0             	test   %rdx,%rax
    c495:	74 18                	je     c4af <alloc_memblock+0x82>
    c497:	48 8d 44 1a 03       	lea    0x3(%rdx,%rbx,1),%rax
    c49c:	48 f7 db             	neg    %rbx
    c49f:	48 21 d8             	and    %rbx,%rax
    c4a2:	48 89 c1             	mov    %rax,%rcx
    c4a5:	48 29 d1             	sub    %rdx,%rcx
    c4a8:	89 48 fc             	mov    %ecx,-0x4(%rax)
    c4ab:	48 89 04 24          	mov    %rax,(%rsp)
    c4af:	49 81 fc 00 10 00 00 	cmp    $0x1000,%r12
    c4b6:	76 0a                	jbe    c4c2 <alloc_memblock+0x95>
    c4b8:	8a 05 6c 80 01 00    	mov    0x1806c(%rip),%al        # 2452a <loop>
    c4be:	84 c0                	test   %al,%al
    c4c0:	75 f6                	jne    c4b8 <alloc_memblock+0x8b>
    c4c2:	48 85 ed             	test   %rbp,%rbp
    c4c5:	74 0e                	je     c4d5 <alloc_memblock+0xa8>
    c4c7:	8a 05 5d 80 01 00    	mov    0x1805d(%rip),%al        # 2452a <loop>
    c4cd:	84 c0                	test   %al,%al
    c4cf:	75 f6                	jne    c4c7 <alloc_memblock+0x9a>
    c4d1:	48 01 2c 24          	add    %rbp,(%rsp)
    c4d5:	48 8b 04 24          	mov    (%rsp),%rax
    c4d9:	48 85 c0             	test   %rax,%rax
    c4dc:	75 0c                	jne    c4ea <alloc_memblock+0xbd>
    c4de:	8a 05 46 80 01 00    	mov    0x18046(%rip),%al        # 2452a <loop>
    c4e4:	84 c0                	test   %al,%al
    c4e6:	75 f6                	jne    c4de <alloc_memblock+0xb1>
    c4e8:	eb 97                	jmp    c481 <alloc_memblock+0x54>
    c4ea:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c4ef:	48 2b 15 7a da 01 00 	sub    0x1da7a(%rip),%rdx        # 29f70 <__stack_chk_guard>
    c4f6:	74 05                	je     c4fd <alloc_memblock+0xd0>
    c4f8:	e8 63 65 ff ff       	call   2a60 <__stack_chk_fail>
    c4fd:	48 83 c4 10          	add    $0x10,%rsp
    c501:	5b                   	pop    %rbx
    c502:	5d                   	pop    %rbp
    c503:	41 5c                	pop    %r12
    c505:	c3                   	ret    

000000000000c506 <free_memblock>:
    c506:	f3 0f 1e fa          	endbr64 
    c50a:	52                   	push   %rdx
    c50b:	48 8b 05 86 da 01 00 	mov    0x1da86(%rip),%rax        # 29f98 <efi_systab>
    c512:	48 89 f9             	mov    %rdi,%rcx
    c515:	48 8b 40 60          	mov    0x60(%rax),%rax
    c519:	48 85 f6             	test   %rsi,%rsi
    c51c:	75 0a                	jne    c528 <free_memblock+0x22>
    c51e:	8a 15 06 80 01 00    	mov    0x18006(%rip),%dl        # 2452a <loop>
    c524:	84 d2                	test   %dl,%dl
    c526:	75 f6                	jne    c51e <free_memblock+0x18>
    c528:	8b 51 fc             	mov    -0x4(%rcx),%edx
    c52b:	48 83 ec 20          	sub    $0x20,%rsp
    c52f:	48 29 d1             	sub    %rdx,%rcx
    c532:	ff 50 48             	call   *0x48(%rax)
    c535:	48 83 c4 20          	add    $0x20,%rsp
    c539:	48 85 c0             	test   %rax,%rax
    c53c:	74 0a                	je     c548 <free_memblock+0x42>
    c53e:	8a 05 e6 7f 01 00    	mov    0x17fe6(%rip),%al        # 2452a <loop>
    c544:	84 c0                	test   %al,%al
    c546:	eb f4                	jmp    c53c <free_memblock+0x36>
    c548:	58                   	pop    %rax
    c549:	c3                   	ret    

000000000000c54a <realloc>:
    c54a:	f3 0f 1e fa          	endbr64 
    c54e:	41 55                	push   %r13
    c550:	41 54                	push   %r12
    c552:	53                   	push   %rbx
    c553:	48 83 ec 10          	sub    $0x10,%rsp
    c557:	48 8b 05 12 da 01 00 	mov    0x1da12(%rip),%rax        # 29f70 <__stack_chk_guard>
    c55e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c563:	48 8b 05 2e da 01 00 	mov    0x1da2e(%rip),%rax        # 29f98 <efi_systab>
    c56a:	48 8b 58 60          	mov    0x60(%rax),%rbx
    c56e:	48 89 f8             	mov    %rdi,%rax
    c571:	48 09 f0             	or     %rsi,%rax
    c574:	74 19                	je     c58f <realloc+0x45>
    c576:	49 89 fd             	mov    %rdi,%r13
    c579:	49 89 f4             	mov    %rsi,%r12
    c57c:	48 85 f6             	test   %rsi,%rsi
    c57f:	75 15                	jne    c596 <realloc+0x4c>
    c581:	48 83 ec 20          	sub    $0x20,%rsp
    c585:	48 89 f9             	mov    %rdi,%rcx
    c588:	ff 53 48             	call   *0x48(%rbx)
    c58b:	48 83 c4 20          	add    $0x20,%rsp
    c58f:	31 c0                	xor    %eax,%eax
    c591:	e9 8e 00 00 00       	jmp    c624 <realloc+0xda>
    c596:	48 83 ec 20          	sub    $0x20,%rsp
    c59a:	48 89 f2             	mov    %rsi,%rdx
    c59d:	b9 04 00 00 00       	mov    $0x4,%ecx
    c5a2:	4c 8d 44 24 20       	lea    0x20(%rsp),%r8
    c5a7:	ff 53 40             	call   *0x40(%rbx)
    c5aa:	48 83 c4 20          	add    $0x20,%rsp
    c5ae:	48 85 c0             	test   %rax,%rax
    c5b1:	74 0c                	je     c5bf <realloc+0x75>
    c5b3:	8a 05 71 7f 01 00    	mov    0x17f71(%rip),%al        # 2452a <loop>
    c5b9:	84 c0                	test   %al,%al
    c5bb:	75 f6                	jne    c5b3 <realloc+0x69>
    c5bd:	eb d0                	jmp    c58f <realloc+0x45>
    c5bf:	48 8b 3c 24          	mov    (%rsp),%rdi
    c5c3:	4d 85 ed             	test   %r13,%r13
    c5c6:	75 09                	jne    c5d1 <realloc+0x87>
    c5c8:	4c 89 e1             	mov    %r12,%rcx
    c5cb:	31 c0                	xor    %eax,%eax
    c5cd:	f3 aa                	rep stos %al,%es:(%rdi)
    c5cf:	eb 4f                	jmp    c620 <realloc+0xd6>
    c5d1:	41 8b 45 e8          	mov    -0x18(%r13),%eax
    c5d5:	25 ff ff ff fe       	and    $0xfeffffff,%eax
    c5da:	3d 70 68 64 30       	cmp    $0x30646870,%eax
    c5df:	74 0a                	je     c5eb <realloc+0xa1>
    c5e1:	8a 05 43 7f 01 00    	mov    0x17f43(%rip),%al        # 2452a <loop>
    c5e7:	84 c0                	test   %al,%al
    c5e9:	eb f4                	jmp    c5df <realloc+0x95>
    c5eb:	49 8b 45 f8          	mov    -0x8(%r13),%rax
    c5ef:	48 8d 50 d8          	lea    -0x28(%rax),%rdx
    c5f3:	4c 39 e2             	cmp    %r12,%rdx
    c5f6:	72 03                	jb     c5fb <realloc+0xb1>
    c5f8:	4c 89 e2             	mov    %r12,%rdx
    c5fb:	4c 89 ee             	mov    %r13,%rsi
    c5fe:	e8 0a ad 00 00       	call   1730d <__memcpy>
    c603:	48 83 ec 20          	sub    $0x20,%rsp
    c607:	4c 89 e9             	mov    %r13,%rcx
    c60a:	ff 53 48             	call   *0x48(%rbx)
    c60d:	48 83 c4 20          	add    $0x20,%rsp
    c611:	48 85 c0             	test   %rax,%rax
    c614:	74 0a                	je     c620 <realloc+0xd6>
    c616:	8a 05 0e 7f 01 00    	mov    0x17f0e(%rip),%al        # 2452a <loop>
    c61c:	84 c0                	test   %al,%al
    c61e:	eb f4                	jmp    c614 <realloc+0xca>
    c620:	48 8b 04 24          	mov    (%rsp),%rax
    c624:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    c629:	48 2b 15 40 d9 01 00 	sub    0x1d940(%rip),%rdx        # 29f70 <__stack_chk_guard>
    c630:	74 05                	je     c637 <realloc+0xed>
    c632:	e8 29 64 ff ff       	call   2a60 <__stack_chk_fail>
    c637:	48 83 c4 10          	add    $0x10,%rsp
    c63b:	5b                   	pop    %rbx
    c63c:	41 5c                	pop    %r12
    c63e:	41 5d                	pop    %r13
    c640:	c3                   	ret    

000000000000c641 <malloc>:
    c641:	f3 0f 1e fa          	endbr64 
    c645:	48 89 fe             	mov    %rdi,%rsi
    c648:	31 ff                	xor    %edi,%edi
    c64a:	e9 fb fe ff ff       	jmp    c54a <realloc>

000000000000c64f <free>:
    c64f:	f3 0f 1e fa          	endbr64 
    c653:	31 f6                	xor    %esi,%esi
    c655:	e9 f0 fe ff ff       	jmp    c54a <realloc>

000000000000c65a <zalloc>:
    c65a:	f3 0f 1e fa          	endbr64 
    c65e:	53                   	push   %rbx
    c65f:	48 89 fb             	mov    %rdi,%rbx
    c662:	e8 da ff ff ff       	call   c641 <malloc>
    c667:	49 89 c0             	mov    %rax,%r8
    c66a:	48 85 c0             	test   %rax,%rax
    c66d:	74 0a                	je     c679 <zalloc+0x1f>
    c66f:	48 89 c7             	mov    %rax,%rdi
    c672:	48 89 d9             	mov    %rbx,%rcx
    c675:	31 c0                	xor    %eax,%eax
    c677:	f3 aa                	rep stos %al,%es:(%rdi)
    c679:	4c 89 c0             	mov    %r8,%rax
    c67c:	5b                   	pop    %rbx
    c67d:	c3                   	ret    

000000000000c67e <md5_f_0_15>:
    c67e:	f3 0f 1e fa          	endbr64 
    c682:	8b 57 0c             	mov    0xc(%rdi),%edx
    c685:	8b 47 08             	mov    0x8(%rdi),%eax
    c688:	31 d0                	xor    %edx,%eax
    c68a:	23 47 04             	and    0x4(%rdi),%eax
    c68d:	31 d0                	xor    %edx,%eax
    c68f:	c3                   	ret    

000000000000c690 <md5_f_16_31>:
    c690:	f3 0f 1e fa          	endbr64 
    c694:	8b 57 08             	mov    0x8(%rdi),%edx
    c697:	8b 47 04             	mov    0x4(%rdi),%eax
    c69a:	31 d0                	xor    %edx,%eax
    c69c:	23 47 0c             	and    0xc(%rdi),%eax
    c69f:	31 d0                	xor    %edx,%eax
    c6a1:	c3                   	ret    

000000000000c6a2 <md5_f_32_47>:
    c6a2:	f3 0f 1e fa          	endbr64 
    c6a6:	8b 47 04             	mov    0x4(%rdi),%eax
    c6a9:	33 47 08             	xor    0x8(%rdi),%eax
    c6ac:	33 47 0c             	xor    0xc(%rdi),%eax
    c6af:	c3                   	ret    

000000000000c6b0 <md5_f_48_63>:
    c6b0:	f3 0f 1e fa          	endbr64 
    c6b4:	8b 47 0c             	mov    0xc(%rdi),%eax
    c6b7:	f7 d0                	not    %eax
    c6b9:	0b 47 04             	or     0x4(%rdi),%eax
    c6bc:	33 47 08             	xor    0x8(%rdi),%eax
    c6bf:	c3                   	ret    

000000000000c6c0 <md5_init>:
    c6c0:	f3 0f 1e fa          	endbr64 
    c6c4:	48 b8 01 23 45 67 89 	movabs $0xefcdab8967452301,%rax
    c6cb:	ab cd ef 
    c6ce:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    c6d5:	48 89 47 08          	mov    %rax,0x8(%rdi)
    c6d9:	48 b8 fe dc ba 98 76 	movabs $0x1032547698badcfe,%rax
    c6e0:	54 32 10 
    c6e3:	48 89 47 10          	mov    %rax,0x10(%rdi)
    c6e7:	c3                   	ret    

000000000000c6e8 <md5_update>:
    c6e8:	f3 0f 1e fa          	endbr64 
    c6ec:	41 57                	push   %r15
    c6ee:	41 56                	push   %r14
    c6f0:	4c 8d 35 89 9f 01 00 	lea    0x19f89(%rip),%r14        # 26680 <md5_steps>
    c6f7:	41 55                	push   %r13
    c6f9:	49 89 f5             	mov    %rsi,%r13
    c6fc:	41 54                	push   %r12
    c6fe:	49 89 fc             	mov    %rdi,%r12
    c701:	55                   	push   %rbp
    c702:	53                   	push   %rbx
    c703:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    c70a:	48 8b 05 5f d8 01 00 	mov    0x1d85f(%rip),%rax        # 29f70 <__stack_chk_guard>
    c711:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    c716:	31 c0                	xor    %eax,%eax
    c718:	48 8d 04 16          	lea    (%rsi,%rdx,1),%rax
    c71c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c721:	4c 3b 6c 24 08       	cmp    0x8(%rsp),%r13
    c726:	0f 84 ee 00 00 00    	je     c81a <md5_update+0x132>
    c72c:	49 8b 1c 24          	mov    (%r12),%rbx
    c730:	41 8a 55 00          	mov    0x0(%r13),%dl
    c734:	49 ff c5             	inc    %r13
    c737:	48 89 d8             	mov    %rbx,%rax
    c73a:	48 ff c3             	inc    %rbx
    c73d:	83 e0 3f             	and    $0x3f,%eax
    c740:	41 88 54 04 18       	mov    %dl,0x18(%r12,%rax,1)
    c745:	49 89 1c 24          	mov    %rbx,(%r12)
    c749:	83 e3 3f             	and    $0x3f,%ebx
    c74c:	75 d3                	jne    c721 <md5_update+0x39>
    c74e:	31 c0                	xor    %eax,%eax
    c750:	48 8d 6c 24 28       	lea    0x28(%rsp),%rbp
    c755:	41 8b 54 04 08       	mov    0x8(%r12,%rax,1),%edx
    c75a:	48 83 c0 04          	add    $0x4,%rax
    c75e:	89 54 28 fc          	mov    %edx,-0x4(%rax,%rbp,1)
    c762:	48 83 f8 50          	cmp    $0x50,%rax
    c766:	75 ed                	jne    c755 <md5_update+0x6d>
    c768:	45 31 ff             	xor    %r15d,%r15d
    c76b:	44 89 f9             	mov    %r15d,%ecx
    c76e:	48 89 ef             	mov    %rbp,%rdi
    c771:	c1 e9 04             	shr    $0x4,%ecx
    c774:	49 89 c8             	mov    %rcx,%r8
    c777:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    c77c:	49 c1 e0 04          	shl    $0x4,%r8
    c780:	4d 01 f0             	add    %r14,%r8
    c783:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    c788:	41 ff 10             	call   *(%r8)
    c78b:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    c790:	4c 8d 0d 69 5c 01 00 	lea    0x15c69(%rip),%r9        # 22400 <k>
    c797:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    c79c:	03 44 24 28          	add    0x28(%rsp),%eax
    c7a0:	43 03 04 b9          	add    (%r9,%r15,4),%eax
    c7a4:	4c 8d 0d 35 5c 01 00 	lea    0x15c35(%rip),%r9        # 223e0 <r>
    c7ab:	41 0f b6 50 08       	movzbl 0x8(%r8),%edx
    c7b0:	41 0f b6 78 09       	movzbl 0x9(%r8),%edi
    c7b5:	49 8d 0c 89          	lea    (%r9,%rcx,4),%rcx
    c7b9:	44 8b 44 24 30       	mov    0x30(%rsp),%r8d
    c7be:	41 0f af d7          	imul   %r15d,%edx
    c7c2:	01 fa                	add    %edi,%edx
    c7c4:	8b 7c 24 34          	mov    0x34(%rsp),%edi
    c7c8:	44 89 44 24 34       	mov    %r8d,0x34(%rsp)
    c7cd:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
    c7d2:	83 e2 0f             	and    $0xf,%edx
    c7d5:	44 89 44 24 30       	mov    %r8d,0x30(%rsp)
    c7da:	03 44 94 38          	add    0x38(%rsp,%rdx,4),%eax
    c7de:	4c 89 fa             	mov    %r15,%rdx
    c7e1:	49 ff c7             	inc    %r15
    c7e4:	83 e2 03             	and    $0x3,%edx
    c7e7:	89 7c 24 28          	mov    %edi,0x28(%rsp)
    c7eb:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
    c7ef:	d3 c0                	rol    %cl,%eax
    c7f1:	44 01 c0             	add    %r8d,%eax
    c7f4:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    c7f8:	49 83 ff 40          	cmp    $0x40,%r15
    c7fc:	0f 85 69 ff ff ff    	jne    c76b <md5_update+0x83>
    c802:	8b 44 1d 00          	mov    0x0(%rbp,%rbx,1),%eax
    c806:	41 01 44 1c 08       	add    %eax,0x8(%r12,%rbx,1)
    c80b:	48 83 c3 04          	add    $0x4,%rbx
    c80f:	48 83 fb 10          	cmp    $0x10,%rbx
    c813:	75 ed                	jne    c802 <md5_update+0x11a>
    c815:	e9 07 ff ff ff       	jmp    c721 <md5_update+0x39>
    c81a:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    c81f:	48 2b 05 4a d7 01 00 	sub    0x1d74a(%rip),%rax        # 29f70 <__stack_chk_guard>
    c826:	74 05                	je     c82d <md5_update+0x145>
    c828:	e8 33 62 ff ff       	call   2a60 <__stack_chk_fail>
    c82d:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    c834:	5b                   	pop    %rbx
    c835:	5d                   	pop    %rbp
    c836:	41 5c                	pop    %r12
    c838:	41 5d                	pop    %r13
    c83a:	41 5e                	pop    %r14
    c83c:	41 5f                	pop    %r15
    c83e:	c3                   	ret    

000000000000c83f <md5_final>:
    c83f:	f3 0f 1e fa          	endbr64 
    c843:	41 54                	push   %r12
    c845:	55                   	push   %rbp
    c846:	48 89 f5             	mov    %rsi,%rbp
    c849:	53                   	push   %rbx
    c84a:	48 89 fb             	mov    %rdi,%rbx
    c84d:	48 83 ec 20          	sub    $0x20,%rsp
    c851:	48 8b 05 18 d7 01 00 	mov    0x1d718(%rip),%rax        # 29f70 <__stack_chk_guard>
    c858:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c85d:	48 8b 07             	mov    (%rdi),%rax
    c860:	c6 44 24 0f 80       	movb   $0x80,0xf(%rsp)
    c865:	4c 8d 64 24 0f       	lea    0xf(%rsp),%r12
    c86a:	48 c1 e0 03          	shl    $0x3,%rax
    c86e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    c873:	ba 01 00 00 00       	mov    $0x1,%edx
    c878:	4c 89 e6             	mov    %r12,%rsi
    c87b:	48 89 df             	mov    %rbx,%rdi
    c87e:	e8 65 fe ff ff       	call   c6e8 <md5_update>
    c883:	48 8b 03             	mov    (%rbx),%rax
    c886:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
    c88b:	83 e0 3f             	and    $0x3f,%eax
    c88e:	48 83 f8 38          	cmp    $0x38,%rax
    c892:	75 df                	jne    c873 <md5_final+0x34>
    c894:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    c899:	48 89 df             	mov    %rbx,%rdi
    c89c:	ba 08 00 00 00       	mov    $0x8,%edx
    c8a1:	e8 42 fe ff ff       	call   c6e8 <md5_update>
    c8a6:	48 8d 73 08          	lea    0x8(%rbx),%rsi
    c8aa:	48 89 ef             	mov    %rbp,%rdi
    c8ad:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c8ae:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c8af:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c8b0:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    c8b1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c8b6:	48 2b 05 b3 d6 01 00 	sub    0x1d6b3(%rip),%rax        # 29f70 <__stack_chk_guard>
    c8bd:	74 05                	je     c8c4 <md5_final+0x85>
    c8bf:	e8 9c 61 ff ff       	call   2a60 <__stack_chk_fail>
    c8c4:	48 83 c4 20          	add    $0x20,%rsp
    c8c8:	5b                   	pop    %rbx
    c8c9:	5d                   	pop    %rbp
    c8ca:	41 5c                	pop    %r12
    c8cc:	c3                   	ret    

000000000000c8cd <choose_exec>:
    c8cd:	f3 0f 1e fa          	endbr64 
    c8d1:	41 54                	push   %r12
    c8d3:	48 8d 15 e6 9d 01 00 	lea    0x19de6(%rip),%rdx        # 266c0 <choose_cmd>
    c8da:	53                   	push   %rbx
    c8db:	48 89 f3             	mov    %rsi,%rbx
    c8de:	48 83 ec 78          	sub    $0x78,%rsp
    c8e2:	48 8b 05 87 d6 01 00 	mov    0x1d687(%rip),%rax        # 29f70 <__stack_chk_guard>
    c8e9:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    c8ee:	31 c0                	xor    %eax,%eax
    c8f0:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    c8f5:	e8 b5 28 00 00       	call   f1af <parse_options>
    c8fa:	41 89 c4             	mov    %eax,%r12d
    c8fd:	85 c0                	test   %eax,%eax
    c8ff:	0f 85 bb 00 00 00    	jne    c9c0 <choose_exec+0xf3>
    c905:	48 63 05 9c d6 01 00 	movslq 0x1d69c(%rip),%rax        # 29fa8 <optind>
    c90c:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
    c911:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    c915:	e8 79 25 00 00       	call   ee93 <parse_autovivified_setting>
    c91a:	41 89 c4             	mov    %eax,%r12d
    c91d:	85 c0                	test   %eax,%eax
    c91f:	0f 85 9b 00 00 00    	jne    c9c0 <choose_exec+0xf3>
    c925:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    c92a:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    c92f:	e8 63 24 00 00       	call   ed97 <parse_menu>
    c934:	41 89 c4             	mov    %eax,%r12d
    c937:	85 c0                	test   %eax,%eax
    c939:	0f 85 81 00 00 00    	jne    c9c0 <choose_exec+0xf3>
    c93f:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    c944:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    c949:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    c94e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c953:	e8 e7 04 00 00       	call   ce3f <show_menu>
    c958:	41 89 c4             	mov    %eax,%r12d
    c95b:	85 c0                	test   %eax,%eax
    c95d:	75 50                	jne    c9af <choose_exec+0xe2>
    c95f:	48 83 7c 24 50 00    	cmpq   $0x0,0x50(%rsp)
    c965:	75 0c                	jne    c973 <choose_exec+0xa6>
    c967:	48 8d 05 32 c8 01 00 	lea    0x1c832(%rip),%rax        # 291a0 <setting_type_string>
    c96e:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    c973:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    c978:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    c97d:	48 8d 74 24 40       	lea    0x40(%rsp),%rsi
    c982:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c986:	e8 14 5b 00 00       	call   1249f <storef_setting>
    c98b:	41 89 c4             	mov    %eax,%r12d
    c98e:	85 c0                	test   %eax,%eax
    c990:	74 1d                	je     c9af <choose_exec+0xe2>
    c992:	89 c7                	mov    %eax,%edi
    c994:	e8 03 6e 00 00       	call   1379c <strerror>
    c999:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    c99e:	48 8d 3d 68 6a 01 00 	lea    0x16a68(%rip),%rdi        # 2340d <.LC0>
    c9a5:	48 89 c2             	mov    %rax,%rdx
    c9a8:	31 c0                	xor    %eax,%eax
    c9aa:	e8 ef a7 00 00       	call   1719e <printf>
    c9af:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    c9b4:	75 0a                	jne    c9c0 <choose_exec+0xf3>
    c9b6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c9bb:	e8 b1 34 01 00       	call   1fe71 <destroy_menu>
    c9c0:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    c9c5:	48 2b 05 a4 d5 01 00 	sub    0x1d5a4(%rip),%rax        # 29f70 <__stack_chk_guard>
    c9cc:	74 05                	je     c9d3 <choose_exec+0x106>
    c9ce:	e8 8d 60 ff ff       	call   2a60 <__stack_chk_fail>
    c9d3:	48 83 c4 78          	add    $0x78,%rsp
    c9d7:	44 89 e0             	mov    %r12d,%eax
    c9da:	5b                   	pop    %rbx
    c9db:	41 5c                	pop    %r12
    c9dd:	c3                   	ret    

000000000000c9de <item_exec>:
    c9de:	f3 0f 1e fa          	endbr64 
    c9e2:	41 55                	push   %r13
    c9e4:	48 8d 15 55 9d 01 00 	lea    0x19d55(%rip),%rdx        # 26740 <item_cmd>
    c9eb:	41 54                	push   %r12
    c9ed:	55                   	push   %rbp
    c9ee:	48 89 f5             	mov    %rsi,%rbp
    c9f1:	53                   	push   %rbx
    c9f2:	89 fb                	mov    %edi,%ebx
    c9f4:	48 83 ec 38          	sub    $0x38,%rsp
    c9f8:	48 8b 05 71 d5 01 00 	mov    0x1d571(%rip),%rax        # 29f70 <__stack_chk_guard>
    c9ff:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    ca04:	31 c0                	xor    %eax,%eax
    ca06:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    ca0b:	e8 9f 27 00 00       	call   f1af <parse_options>
    ca10:	41 89 c4             	mov    %eax,%r12d
    ca13:	85 c0                	test   %eax,%eax
    ca15:	0f 85 93 00 00 00    	jne    caae <item_exec+0xd0>
    ca1b:	45 31 ed             	xor    %r13d,%r13d
    ca1e:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
    ca23:	75 15                	jne    ca3a <item_exec+0x5c>
    ca25:	48 63 05 7c d5 01 00 	movslq 0x1d57c(%rip),%rax        # 29fa8 <optind>
    ca2c:	8d 50 01             	lea    0x1(%rax),%edx
    ca2f:	4c 8b 6c c5 00       	mov    0x0(%rbp,%rax,8),%r13
    ca34:	89 15 6e d5 01 00    	mov    %edx,0x1d56e(%rip)        # 29fa8 <optind>
    ca3a:	48 63 05 67 d5 01 00 	movslq 0x1d567(%rip),%rax        # 29fa8 <optind>
    ca41:	39 d8                	cmp    %ebx,%eax
    ca43:	7d 1a                	jge    ca5f <item_exec+0x81>
    ca45:	48 8d 7c c5 00       	lea    0x0(%rbp,%rax,8),%rdi
    ca4a:	e8 a1 15 01 00       	call   1dff0 <concat_args>
    ca4f:	48 89 c5             	mov    %rax,%rbp
    ca52:	48 85 c0             	test   %rax,%rax
    ca55:	75 0a                	jne    ca61 <item_exec+0x83>
    ca57:	41 bc 77 1f d2 ce    	mov    $0xced21f77,%r12d
    ca5d:	eb 4f                	jmp    caae <item_exec+0xd0>
    ca5f:	31 ed                	xor    %ebp,%ebp
    ca61:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    ca66:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    ca6b:	e8 27 23 00 00       	call   ed97 <parse_menu>
    ca70:	41 89 c4             	mov    %eax,%r12d
    ca73:	85 c0                	test   %eax,%eax
    ca75:	75 2f                	jne    caa6 <item_exec+0xc8>
    ca77:	48 85 ed             	test   %rbp,%rbp
    ca7a:	44 8b 44 24 1c       	mov    0x1c(%rsp),%r8d
    ca7f:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    ca83:	4c 89 ee             	mov    %r13,%rsi
    ca86:	48 8d 15 47 79 01 00 	lea    0x17947(%rip),%rdx        # 243d4 <.LC0>
    ca8d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    ca92:	48 0f 45 d5          	cmovne %rbp,%rdx
    ca96:	e8 15 33 01 00       	call   1fdb0 <add_menu_item>
    ca9b:	48 85 c0             	test   %rax,%rax
    ca9e:	75 06                	jne    caa6 <item_exec+0xc8>
    caa0:	41 bc 77 1f d2 ce    	mov    $0xced21f77,%r12d
    caa6:	48 89 ef             	mov    %rbp,%rdi
    caa9:	e8 a1 fb ff ff       	call   c64f <free>
    caae:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    cab3:	48 2b 05 b6 d4 01 00 	sub    0x1d4b6(%rip),%rax        # 29f70 <__stack_chk_guard>
    caba:	74 05                	je     cac1 <item_exec+0xe3>
    cabc:	e8 9f 5f ff ff       	call   2a60 <__stack_chk_fail>
    cac1:	48 83 c4 38          	add    $0x38,%rsp
    cac5:	44 89 e0             	mov    %r12d,%eax
    cac8:	5b                   	pop    %rbx
    cac9:	5d                   	pop    %rbp
    caca:	41 5c                	pop    %r12
    cacc:	41 5d                	pop    %r13
    cace:	c3                   	ret    

000000000000cacf <menu_exec>:
    cacf:	f3 0f 1e fa          	endbr64 
    cad3:	55                   	push   %rbp
    cad4:	48 8d 15 e5 9c 01 00 	lea    0x19ce5(%rip),%rdx        # 267c0 <menu_cmd>
    cadb:	53                   	push   %rbx
    cadc:	48 89 f3             	mov    %rsi,%rbx
    cadf:	48 83 ec 28          	sub    $0x28,%rsp
    cae3:	48 8b 05 86 d4 01 00 	mov    0x1d486(%rip),%rax        # 29f70 <__stack_chk_guard>
    caea:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    caef:	31 c0                	xor    %eax,%eax
    caf1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    caf6:	e8 b4 26 00 00       	call   f1af <parse_options>
    cafb:	85 c0                	test   %eax,%eax
    cafd:	75 54                	jne    cb53 <menu_exec+0x84>
    caff:	48 63 05 a2 d4 01 00 	movslq 0x1d4a2(%rip),%rax        # 29fa8 <optind>
    cb06:	48 8d 3c c3          	lea    (%rbx,%rax,8),%rdi
    cb0a:	e8 e1 14 01 00       	call   1dff0 <concat_args>
    cb0f:	48 89 c5             	mov    %rax,%rbp
    cb12:	48 85 c0             	test   %rax,%rax
    cb15:	75 07                	jne    cb1e <menu_exec+0x4f>
    cb17:	b8 77 1f d2 ce       	mov    $0xced21f77,%eax
    cb1c:	eb 35                	jmp    cb53 <menu_exec+0x84>
    cb1e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    cb23:	48 89 c6             	mov    %rax,%rsi
    cb26:	e8 db 33 01 00       	call   1ff06 <create_menu>
    cb2b:	48 89 c7             	mov    %rax,%rdi
    cb2e:	48 85 c0             	test   %rax,%rax
    cb31:	75 07                	jne    cb3a <menu_exec+0x6b>
    cb33:	bb 77 1f d2 ce       	mov    $0xced21f77,%ebx
    cb38:	eb 0f                	jmp    cb49 <menu_exec+0x7a>
    cb3a:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
    cb3e:	85 db                	test   %ebx,%ebx
    cb40:	74 07                	je     cb49 <menu_exec+0x7a>
    cb42:	e8 2a 33 01 00       	call   1fe71 <destroy_menu>
    cb47:	31 db                	xor    %ebx,%ebx
    cb49:	48 89 ef             	mov    %rbp,%rdi
    cb4c:	e8 fe fa ff ff       	call   c64f <free>
    cb51:	89 d8                	mov    %ebx,%eax
    cb53:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    cb58:	48 2b 15 11 d4 01 00 	sub    0x1d411(%rip),%rdx        # 29f70 <__stack_chk_guard>
    cb5f:	74 05                	je     cb66 <menu_exec+0x97>
    cb61:	e8 fa 5e ff ff       	call   2a60 <__stack_chk_fail>
    cb66:	48 83 c4 28          	add    $0x28,%rsp
    cb6a:	5b                   	pop    %rbx
    cb6b:	5d                   	pop    %rbp
    cb6c:	c3                   	ret    

000000000000cb6d <colour_set.constprop.0.isra.0>:
    cb6d:	0f bf f7             	movswl %di,%esi
    cb70:	31 d2                	xor    %edx,%edx
    cb72:	48 8d 3d 07 9d 01 00 	lea    0x19d07(%rip),%rdi        # 26880 <_stdscr>
    cb79:	e9 c7 a6 00 00       	jmp    17245 <wcolour_set>

000000000000cb7e <mvaddstr.constprop.0.isra.0>:
    cb7e:	41 54                	push   %r12
    cb80:	4c 8d 25 f9 9c 01 00 	lea    0x19cf9(%rip),%r12        # 26880 <_stdscr>
    cb87:	ba 03 00 00 00       	mov    $0x3,%edx
    cb8c:	55                   	push   %rbp
    cb8d:	48 89 f5             	mov    %rsi,%rbp
    cb90:	89 fe                	mov    %edi,%esi
    cb92:	4c 89 e7             	mov    %r12,%rdi
    cb95:	41 50                	push   %r8
    cb97:	e8 43 09 00 00       	call   d4df <wmove>
    cb9c:	85 c0                	test   %eax,%eax
    cb9e:	75 12                	jne    cbb2 <mvaddstr.constprop.0.isra.0+0x34>
    cba0:	59                   	pop    %rcx
    cba1:	48 89 ee             	mov    %rbp,%rsi
    cba4:	4c 89 e7             	mov    %r12,%rdi
    cba7:	5d                   	pop    %rbp
    cba8:	83 ca ff             	or     $0xffffffff,%edx
    cbab:	41 5c                	pop    %r12
    cbad:	e9 b0 2c 00 00       	jmp    f862 <waddnstr>
    cbb2:	58                   	pop    %rax
    cbb3:	5d                   	pop    %rbp
    cbb4:	41 5c                	pop    %r12
    cbb6:	c3                   	ret    

000000000000cbb7 <draw_menu_item>:
    cbb7:	55                   	push   %rbp
    cbb8:	48 89 e5             	mov    %rsp,%rbp
    cbbb:	41 57                	push   %r15
    cbbd:	41 56                	push   %r14
    cbbf:	41 89 f6             	mov    %esi,%r14d
    cbc2:	41 55                	push   %r13
    cbc4:	41 54                	push   %r12
    cbc6:	49 89 fc             	mov    %rdi,%r12
    cbc9:	53                   	push   %rbx
    cbca:	48 83 ec 28          	sub    $0x28,%rsp
    cbce:	48 8b 05 9b d3 01 00 	mov    0x1d39b(%rip),%rax        # 29f70 <__stack_chk_guard>
    cbd5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    cbd9:	8b 05 d5 79 01 00    	mov    0x179d5(%rip),%eax        # 245b4 <console_width>
    cbdf:	48 89 e2             	mov    %rsp,%rdx
    cbe2:	8d 58 ff             	lea    -0x1(%rax),%ebx
    cbe5:	48 8d 43 0f          	lea    0xf(%rbx),%rax
    cbe9:	48 c1 e8 04          	shr    $0x4,%rax
    cbed:	48 c1 e0 04          	shl    $0x4,%rax
    cbf1:	48 89 c1             	mov    %rax,%rcx
    cbf4:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    cbfb:	48 29 ca             	sub    %rcx,%rdx
    cbfe:	48 39 d4             	cmp    %rdx,%rsp
    cc01:	74 12                	je     cc15 <draw_menu_item+0x5e>
    cc03:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    cc0a:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    cc11:	00 00 
    cc13:	eb e9                	jmp    cbfe <draw_menu_item+0x47>
    cc15:	25 ff 0f 00 00       	and    $0xfff,%eax
    cc1a:	48 29 c4             	sub    %rax,%rsp
    cc1d:	48 85 c0             	test   %rax,%rax
    cc20:	74 06                	je     cc28 <draw_menu_item+0x71>
    cc22:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    cc28:	41 8d 46 03          	lea    0x3(%r14),%eax
    cc2c:	41 2b 44 24 14       	sub    0x14(%r12),%eax
    cc31:	ba 01 00 00 00       	mov    $0x1,%edx
    cc36:	49 89 e7             	mov    %rsp,%r15
    cc39:	4c 8d 2d 40 9c 01 00 	lea    0x19c40(%rip),%r13        # 26880 <_stdscr>
    cc40:	89 c6                	mov    %eax,%esi
    cc42:	89 45 bc             	mov    %eax,-0x44(%rbp)
    cc45:	4c 89 ef             	mov    %r13,%rdi
    cc48:	e8 92 08 00 00       	call   d4df <wmove>
    cc4d:	49 8b 04 24          	mov    (%r12),%rax
    cc51:	44 89 f1             	mov    %r14d,%ecx
    cc54:	48 8b 50 20          	mov    0x20(%rax),%rdx
    cc58:	48 83 c0 20          	add    $0x20,%rax
    cc5c:	48 39 c2             	cmp    %rax,%rdx
    cc5f:	0f 84 20 01 00 00    	je     cd85 <draw_menu_item+0x1ce>
    cc65:	85 c9                	test   %ecx,%ecx
    cc67:	75 0a                	jne    cc73 <draw_menu_item+0xbc>
    cc69:	48 85 d2             	test   %rdx,%rdx
    cc6c:	75 0c                	jne    cc7a <draw_menu_item+0xc3>
    cc6e:	e9 12 01 00 00       	jmp    cd85 <draw_menu_item+0x1ce>
    cc73:	48 8b 12             	mov    (%rdx),%rdx
    cc76:	ff c9                	dec    %ecx
    cc78:	eb e2                	jmp    cc5c <draw_menu_item+0xa5>
    cc7a:	48 83 7a 10 00       	cmpq   $0x0,0x10(%rdx)
    cc7f:	75 12                	jne    cc93 <draw_menu_item+0xdc>
    cc81:	bf 03 00 00 00       	mov    $0x3,%edi
    cc86:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    cc8a:	e8 de fe ff ff       	call   cb6d <colour_set.constprop.0.isra.0>
    cc8f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    cc93:	45 39 74 24 10       	cmp    %r14d,0x10(%r12)
    cc98:	75 1f                	jne    ccb9 <draw_menu_item+0x102>
    cc9a:	bf 02 00 00 00       	mov    $0x2,%edi
    cc9f:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    cca3:	e8 c5 fe ff ff       	call   cb6d <colour_set.constprop.0.isra.0>
    cca8:	be 00 00 04 00       	mov    $0x40000,%esi
    ccad:	4c 89 ef             	mov    %r13,%rdi
    ccb0:	e8 72 a5 00 00       	call   17227 <wattron>
    ccb5:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    ccb9:	48 8d 4b ff          	lea    -0x1(%rbx),%rcx
    ccbd:	4c 89 ff             	mov    %r15,%rdi
    ccc0:	b8 20 00 00 00       	mov    $0x20,%eax
    ccc5:	f3 aa                	rep stos %al,%es:(%rdi)
    ccc7:	41 c6 44 1f ff 00    	movb   $0x0,-0x1(%r15,%rbx,1)
    cccd:	48 8b 72 18          	mov    0x18(%rdx),%rsi
    ccd1:	48 83 eb 05          	sub    $0x5,%rbx
    ccd5:	48 89 f7             	mov    %rsi,%rdi
    ccd8:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    ccdc:	e8 59 6c 00 00       	call   1393a <strlen>
    cce1:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    cce5:	49 8d 7f 02          	lea    0x2(%r15),%rdi
    cce9:	48 39 c3             	cmp    %rax,%rbx
    ccec:	48 0f 46 c3          	cmovbe %rbx,%rax
    ccf0:	48 89 c2             	mov    %rax,%rdx
    ccf3:	e8 15 a6 00 00       	call   1730d <__memcpy>
    ccf8:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    ccfd:	4c 8d 45 c2          	lea    -0x3e(%rbp),%r8
    cd01:	48 8d 15 78 67 01 00 	lea    0x16778(%rip),%rdx        # 23480 <.LC0>
    cd08:	4c 89 c7             	mov    %r8,%rdi
    cd0b:	be 06 00 00 00       	mov    $0x6,%esi
    cd10:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    cd14:	48 8d 88 ff 03 00 00 	lea    0x3ff(%rax),%rcx
    cd1b:	31 c0                	xor    %eax,%eax
    cd1d:	48 c1 e9 0a          	shr    $0xa,%rcx
    cd21:	e8 5b a3 00 00       	call   17081 <snprintf>
    cd26:	45 39 74 24 10       	cmp    %r14d,0x10(%r12)
    cd2b:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    cd2f:	75 27                	jne    cd58 <draw_menu_item+0x1a1>
    cd31:	49 83 7c 24 18 00    	cmpq   $0x0,0x18(%r12)
    cd37:	74 1f                	je     cd58 <draw_menu_item+0x1a1>
    cd39:	48 63 d0             	movslq %eax,%rdx
    cd3c:	8b 05 72 78 01 00    	mov    0x17872(%rip),%eax        # 245b4 <console_width>
    cd42:	4c 89 f9             	mov    %r15,%rcx
    cd45:	4c 89 c6             	mov    %r8,%rsi
    cd48:	48 29 d1             	sub    %rdx,%rcx
    cd4b:	83 e8 02             	sub    $0x2,%eax
    cd4e:	48 8d 7c 01 fe       	lea    -0x2(%rcx,%rax,1),%rdi
    cd53:	e8 b5 a5 00 00       	call   1730d <__memcpy>
    cd58:	4c 89 fa             	mov    %r15,%rdx
    cd5b:	48 8d 35 bf 68 01 00 	lea    0x168bf(%rip),%rsi        # 23621 <.LC0>
    cd62:	4c 89 ef             	mov    %r13,%rdi
    cd65:	31 c0                	xor    %eax,%eax
    cd67:	e8 50 2b 00 00       	call   f8bc <wprintw>
    cd6c:	bf 01 00 00 00       	mov    $0x1,%edi
    cd71:	e8 f7 fd ff ff       	call   cb6d <colour_set.constprop.0.isra.0>
    cd76:	be 00 00 04 00       	mov    $0x40000,%esi
    cd7b:	4c 89 ef             	mov    %r13,%rdi
    cd7e:	e8 98 a4 00 00       	call   1721b <wattroff>
    cd83:	eb 08                	jmp    cd8d <draw_menu_item+0x1d6>
    cd85:	4c 89 ef             	mov    %r13,%rdi
    cd88:	e8 1e c4 00 00       	call   191ab <wclrtoeol>
    cd8d:	8b 75 bc             	mov    -0x44(%rbp),%esi
    cd90:	ba 01 00 00 00       	mov    $0x1,%edx
    cd95:	4c 89 ef             	mov    %r13,%rdi
    cd98:	e8 42 07 00 00       	call   d4df <wmove>
    cd9d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cda1:	48 2b 05 c8 d1 01 00 	sub    0x1d1c8(%rip),%rax        # 29f70 <__stack_chk_guard>
    cda8:	74 05                	je     cdaf <draw_menu_item+0x1f8>
    cdaa:	e8 b1 5c ff ff       	call   2a60 <__stack_chk_fail>
    cdaf:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    cdb3:	5b                   	pop    %rbx
    cdb4:	41 5c                	pop    %r12
    cdb6:	41 5d                	pop    %r13
    cdb8:	41 5e                	pop    %r14
    cdba:	41 5f                	pop    %r15
    cdbc:	5d                   	pop    %rbp
    cdbd:	c3                   	ret    

000000000000cdbe <draw_menu_items>:
    cdbe:	41 54                	push   %r12
    cdc0:	4c 8d 25 dc 6f 01 00 	lea    0x16fdc(%rip),%r12        # 23da3 <.LC0>
    cdc7:	55                   	push   %rbp
    cdc8:	48 8d 2d 85 6b 01 00 	lea    0x16b85(%rip),%rbp        # 23954 <.LC2>
    cdcf:	53                   	push   %rbx
    cdd0:	48 89 fb             	mov    %rdi,%rbx
    cdd3:	bf 03 00 00 00       	mov    $0x3,%edi
    cdd8:	e8 90 fd ff ff       	call   cb6d <colour_set.constprop.0.isra.0>
    cddd:	83 7b 14 00          	cmpl   $0x0,0x14(%rbx)
    cde1:	4c 89 e6             	mov    %r12,%rsi
    cde4:	bf 02 00 00 00       	mov    $0x2,%edi
    cde9:	48 0f 44 f5          	cmove  %rbp,%rsi
    cded:	e8 8c fd ff ff       	call   cb7e <mvaddstr.constprop.0.isra.0>
    cdf2:	8b 43 08             	mov    0x8(%rbx),%eax
    cdf5:	4c 89 e6             	mov    %r12,%rsi
    cdf8:	03 43 14             	add    0x14(%rbx),%eax
    cdfb:	3b 43 0c             	cmp    0xc(%rbx),%eax
    cdfe:	8b 05 ac 77 01 00    	mov    0x177ac(%rip),%eax        # 245b0 <console_height>
    ce04:	48 0f 43 f5          	cmovae %rbp,%rsi
    ce08:	31 ed                	xor    %ebp,%ebp
    ce0a:	8d 78 fe             	lea    -0x2(%rax),%edi
    ce0d:	e8 6c fd ff ff       	call   cb7e <mvaddstr.constprop.0.isra.0>
    ce12:	bf 01 00 00 00       	mov    $0x1,%edi
    ce17:	e8 51 fd ff ff       	call   cb6d <colour_set.constprop.0.isra.0>
    ce1c:	8b 05 8e 77 01 00    	mov    0x1778e(%rip),%eax        # 245b0 <console_height>
    ce22:	83 e8 05             	sub    $0x5,%eax
    ce25:	39 e8                	cmp    %ebp,%eax
    ce27:	76 11                	jbe    ce3a <draw_menu_items+0x7c>
    ce29:	8b 73 14             	mov    0x14(%rbx),%esi
    ce2c:	48 89 df             	mov    %rbx,%rdi
    ce2f:	01 ee                	add    %ebp,%esi
    ce31:	ff c5                	inc    %ebp
    ce33:	e8 7f fd ff ff       	call   cbb7 <draw_menu_item>
    ce38:	eb e2                	jmp    ce1c <draw_menu_items+0x5e>
    ce3a:	5b                   	pop    %rbx
    ce3b:	5d                   	pop    %rbp
    ce3c:	41 5c                	pop    %r12
    ce3e:	c3                   	ret    

000000000000ce3f <show_menu>:
    ce3f:	f3 0f 1e fa          	endbr64 
    ce43:	55                   	push   %rbp
    ce44:	49 89 f8             	mov    %rdi,%r8
    ce47:	48 89 e5             	mov    %rsp,%rbp
    ce4a:	41 57                	push   %r15
    ce4c:	49 89 d7             	mov    %rdx,%r15
    ce4f:	41 56                	push   %r14
    ce51:	41 55                	push   %r13
    ce53:	41 54                	push   %r12
    ce55:	53                   	push   %rbx
    ce56:	48 83 ec 58          	sub    $0x58,%rsp
    ce5a:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
    ce5e:	48 8b 05 0b d1 01 00 	mov    0x1d10b(%rip),%rax        # 29f70 <__stack_chk_guard>
    ce65:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ce69:	8b 05 45 77 01 00    	mov    0x17745(%rip),%eax        # 245b4 <console_width>
    ce6f:	48 89 e2             	mov    %rsp,%rdx
    ce72:	44 8d 70 ff          	lea    -0x1(%rax),%r14d
    ce76:	49 8d 46 0f          	lea    0xf(%r14),%rax
    ce7a:	48 c1 e8 04          	shr    $0x4,%rax
    ce7e:	48 c1 e0 04          	shl    $0x4,%rax
    ce82:	48 89 c1             	mov    %rax,%rcx
    ce85:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    ce8c:	48 29 ca             	sub    %rcx,%rdx
    ce8f:	48 39 d4             	cmp    %rdx,%rsp
    ce92:	74 12                	je     cea6 <show_menu+0x67>
    ce94:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    ce9b:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    cea2:	00 00 
    cea4:	eb e9                	jmp    ce8f <show_menu+0x50>
    cea6:	25 ff 0f 00 00       	and    $0xfff,%eax
    ceab:	48 29 c4             	sub    %rax,%rsp
    ceae:	48 85 c0             	test   %rax,%rax
    ceb1:	74 06                	je     ceb9 <show_menu+0x7a>
    ceb3:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    ceb9:	48 8d 5d a8          	lea    -0x58(%rbp),%rbx
    cebd:	49 89 e5             	mov    %rsp,%r13
    cec0:	b9 20 00 00 00       	mov    $0x20,%ecx
    cec5:	31 c0                	xor    %eax,%eax
    cec7:	48 89 df             	mov    %rbx,%rdi
    ceca:	f3 aa                	rep stos %al,%es:(%rdi)
    cecc:	8b 05 de 76 01 00    	mov    0x176de(%rip),%eax        # 245b0 <console_height>
    ced2:	49 8b 48 20          	mov    0x20(%r8),%rcx
    ced6:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    ceda:	45 31 e4             	xor    %r12d,%r12d
    cedd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    cee1:	83 e8 05             	sub    $0x5,%eax
    cee4:	89 45 b0             	mov    %eax,-0x50(%rbp)
    cee7:	49 8d 40 20          	lea    0x20(%r8),%rax
    ceeb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    ceef:	48 3b 4d 98          	cmp    -0x68(%rbp),%rcx
    cef3:	74 4b                	je     cf40 <show_menu+0x101>
    cef5:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    cef9:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    cefc:	48 85 f6             	test   %rsi,%rsi
    ceff:	74 35                	je     cf36 <show_menu+0xf7>
    cf01:	45 85 e4             	test   %r12d,%r12d
    cf04:	75 03                	jne    cf09 <show_menu+0xca>
    cf06:	89 55 b8             	mov    %edx,-0x48(%rbp)
    cf09:	41 ff c4             	inc    %r12d
    cf0c:	4d 85 ff             	test   %r15,%r15
    cf0f:	74 1c                	je     cf2d <show_menu+0xee>
    cf11:	4c 89 ff             	mov    %r15,%rdi
    cf14:	89 55 90             	mov    %edx,-0x70(%rbp)
    cf17:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    cf1b:	e8 c0 69 00 00       	call   138e0 <strcmp>
    cf20:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    cf24:	8b 55 90             	mov    -0x70(%rbp),%edx
    cf27:	85 c0                	test   %eax,%eax
    cf29:	75 0b                	jne    cf36 <show_menu+0xf7>
    cf2b:	eb 06                	jmp    cf33 <show_menu+0xf4>
    cf2d:	83 79 24 00          	cmpl   $0x0,0x24(%rcx)
    cf31:	74 03                	je     cf36 <show_menu+0xf7>
    cf33:	89 55 b8             	mov    %edx,-0x48(%rbp)
    cf36:	ff c2                	inc    %edx
    cf38:	48 8b 09             	mov    (%rcx),%rcx
    cf3b:	89 55 b4             	mov    %edx,-0x4c(%rbp)
    cf3e:	eb af                	jmp    ceef <show_menu+0xb0>
    cf40:	45 85 e4             	test   %r12d,%r12d
    cf43:	75 0b                	jne    cf50 <show_menu+0x111>
    cf45:	41 bc 72 1f d3 d2    	mov    $0xd2d31f72,%r12d
    cf4b:	e9 59 02 00 00       	jmp    d1a9 <show_menu+0x36a>
    cf50:	e8 11 a3 00 00       	call   17266 <initscr>
    cf55:	bf 01 00 00 00       	mov    $0x1,%edi
    cf5a:	4c 8d 25 1f 99 01 00 	lea    0x1991f(%rip),%r12        # 26880 <_stdscr>
    cf61:	4c 8d 3d b9 66 01 00 	lea    0x166b9(%rip),%r15        # 23621 <.LC0>
    cf68:	e8 00 fc ff ff       	call   cb6d <colour_set.constprop.0.isra.0>
    cf6d:	31 ff                	xor    %edi,%edi
    cf6f:	e8 8d 05 00 00       	call   d501 <curs_set>
    cf74:	e8 78 c2 00 00       	call   191f1 <erase>
    cf79:	be 00 00 04 00       	mov    $0x40000,%esi
    cf7e:	4c 89 e7             	mov    %r12,%rdi
    cf81:	e8 a1 a2 00 00       	call   17227 <wattron>
    cf86:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cf8a:	4c 89 fa             	mov    %r15,%rdx
    cf8d:	4c 89 f6             	mov    %r14,%rsi
    cf90:	4c 89 ef             	mov    %r13,%rdi
    cf93:	48 8b 48 18          	mov    0x18(%rax),%rcx
    cf97:	31 c0                	xor    %eax,%eax
    cf99:	e8 e3 a0 00 00       	call   17081 <snprintf>
    cf9e:	4c 89 ef             	mov    %r13,%rdi
    cfa1:	e8 94 69 00 00       	call   1393a <strlen>
    cfa6:	8b 15 08 76 01 00    	mov    0x17608(%rip),%edx        # 245b4 <console_width>
    cfac:	be 01 00 00 00       	mov    $0x1,%esi
    cfb1:	4c 89 e7             	mov    %r12,%rdi
    cfb4:	48 29 c2             	sub    %rax,%rdx
    cfb7:	48 d1 ea             	shr    %rdx
    cfba:	e8 20 05 00 00       	call   d4df <wmove>
    cfbf:	85 c0                	test   %eax,%eax
    cfc1:	75 0e                	jne    cfd1 <show_menu+0x192>
    cfc3:	4c 89 ea             	mov    %r13,%rdx
    cfc6:	4c 89 fe             	mov    %r15,%rsi
    cfc9:	4c 89 e7             	mov    %r12,%rdi
    cfcc:	e8 eb 28 00 00       	call   f8bc <wprintw>
    cfd1:	be 00 00 04 00       	mov    $0x40000,%esi
    cfd6:	4c 89 e7             	mov    %r12,%rdi
    cfd9:	4c 8d 75 b0          	lea    -0x50(%rbp),%r14
    cfdd:	e8 39 a2 00 00       	call   1721b <wattroff>
    cfe2:	4c 89 f7             	mov    %r14,%rdi
    cfe5:	e8 8f 2d 01 00       	call   1fd79 <jump_scroll>
    cfea:	48 89 df             	mov    %rbx,%rdi
    cfed:	e8 cc fd ff ff       	call   cdbe <draw_menu_items>
    cff2:	8b 75 b8             	mov    -0x48(%rbp),%esi
    cff5:	48 89 df             	mov    %rbx,%rdi
    cff8:	e8 ba fb ff ff       	call   cbb7 <draw_menu_item>
    cffd:	8b 45 b8             	mov    -0x48(%rbp),%eax
    d000:	89 45 98             	mov    %eax,-0x68(%rbp)
    d003:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d007:	49 89 c5             	mov    %rax,%r13
    d00a:	41 81 e5 ff 03 00 00 	and    $0x3ff,%r13d
    d011:	75 0e                	jne    d021 <show_menu+0x1e2>
    d013:	45 31 ed             	xor    %r13d,%r13d
    d016:	48 85 c0             	test   %rax,%rax
    d019:	41 0f 95 c5          	setne  %r13b
    d01d:	49 c1 e5 0a          	shl    $0xa,%r13
    d021:	4c 29 e8             	sub    %r13,%rax
    d024:	4c 89 ef             	mov    %r13,%rdi
    d027:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d02b:	e8 2f 13 01 00       	call   1e35f <getkey>
    d030:	85 c0                	test   %eax,%eax
    d032:	79 16                	jns    d04a <show_menu+0x20b>
    d034:	45 31 ff             	xor    %r15d,%r15d
    d037:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    d03c:	41 0f 94 c7          	sete   %r15b
    d040:	45 31 e4             	xor    %r12d,%r12d
    d043:	31 f6                	xor    %esi,%esi
    d045:	e9 af 00 00 00       	jmp    d0f9 <show_menu+0x2ba>
    d04a:	89 c6                	mov    %eax,%esi
    d04c:	4c 89 f7             	mov    %r14,%rdi
    d04f:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    d056:	00 
    d057:	89 45 80             	mov    %eax,-0x80(%rbp)
    d05a:	e8 84 2c 01 00       	call   1fce3 <jump_scroll_key>
    d05f:	8b 55 80             	mov    -0x80(%rbp),%edx
    d062:	89 c6                	mov    %eax,%esi
    d064:	83 fa 0d             	cmp    $0xd,%edx
    d067:	0f 84 83 00 00 00    	je     d0f0 <show_menu+0x2b1>
    d06d:	7f 15                	jg     d084 <show_menu+0x245>
    d06f:	83 fa 03             	cmp    $0x3,%edx
    d072:	74 15                	je     d089 <show_menu+0x24a>
    d074:	45 31 e4             	xor    %r12d,%r12d
    d077:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    d07d:	83 fa 0a             	cmp    $0xa,%edx
    d080:	74 77                	je     d0f9 <show_menu+0x2ba>
    d082:	eb 10                	jmp    d094 <show_menu+0x255>
    d084:	83 fa 1b             	cmp    $0x1b,%edx
    d087:	75 0b                	jne    d094 <show_menu+0x255>
    d089:	41 bc 6b 1f d3 f4    	mov    $0xf4d31f6b,%r12d
    d08f:	45 31 ff             	xor    %r15d,%r15d
    d092:	eb 65                	jmp    d0f9 <show_menu+0x2ba>
    d094:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    d098:	45 31 c9             	xor    %r9d,%r9d
    d09b:	45 31 ff             	xor    %r15d,%r15d
    d09e:	45 31 c0             	xor    %r8d,%r8d
    d0a1:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    d0a7:	48 8b 47 20          	mov    0x20(%rdi),%rax
    d0ab:	48 83 c7 20          	add    $0x20,%rdi
    d0af:	48 39 f8             	cmp    %rdi,%rax
    d0b2:	74 2c                	je     d0e0 <show_menu+0x2a1>
    d0b4:	44 8b 58 20          	mov    0x20(%rax),%r11d
    d0b8:	44 39 da             	cmp    %r11d,%edx
    d0bb:	75 05                	jne    d0c2 <show_menu+0x283>
    d0bd:	45 85 db             	test   %r11d,%r11d
    d0c0:	75 05                	jne    d0c7 <show_menu+0x288>
    d0c2:	41 ff c0             	inc    %r8d
    d0c5:	eb 14                	jmp    d0db <show_menu+0x29c>
    d0c7:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    d0cc:	44 89 45 94          	mov    %r8d,-0x6c(%rbp)
    d0d0:	41 b1 01             	mov    $0x1,%r9b
    d0d3:	41 0f 44 f2          	cmove  %r10d,%esi
    d0d7:	45 0f 45 fa          	cmovne %r10d,%r15d
    d0db:	48 8b 00             	mov    (%rax),%rax
    d0de:	eb cf                	jmp    d0af <show_menu+0x270>
    d0e0:	45 84 c9             	test   %r9b,%r9b
    d0e3:	74 06                	je     d0eb <show_menu+0x2ac>
    d0e5:	8b 45 94             	mov    -0x6c(%rbp),%eax
    d0e8:	89 45 b8             	mov    %eax,-0x48(%rbp)
    d0eb:	45 31 e4             	xor    %r12d,%r12d
    d0ee:	eb 09                	jmp    d0f9 <show_menu+0x2ba>
    d0f0:	45 31 e4             	xor    %r12d,%r12d
    d0f3:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    d0f9:	85 f6                	test   %esi,%esi
    d0fb:	74 33                	je     d130 <show_menu+0x2f1>
    d0fd:	4c 89 f7             	mov    %r14,%rdi
    d100:	e8 3b 2c 01 00       	call   1fd40 <jump_scroll_move>
    d105:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d109:	8b 7d b8             	mov    -0x48(%rbp),%edi
    d10c:	89 c6                	mov    %eax,%esi
    d10e:	48 83 c2 20          	add    $0x20,%rdx
    d112:	48 8b 02             	mov    (%rdx),%rax
    d115:	48 39 d0             	cmp    %rdx,%rax
    d118:	0f 84 81 00 00 00    	je     d19f <show_menu+0x360>
    d11e:	85 ff                	test   %edi,%edi
    d120:	74 07                	je     d129 <show_menu+0x2ea>
    d122:	48 8b 00             	mov    (%rax),%rax
    d125:	ff cf                	dec    %edi
    d127:	eb ec                	jmp    d115 <show_menu+0x2d6>
    d129:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    d12e:	74 c9                	je     d0f9 <show_menu+0x2ba>
    d130:	8b 45 98             	mov    -0x68(%rbp),%eax
    d133:	39 45 b8             	cmp    %eax,-0x48(%rbp)
    d136:	75 05                	jne    d13d <show_menu+0x2fe>
    d138:	4d 85 ed             	test   %r13,%r13
    d13b:	74 2a                	je     d167 <show_menu+0x328>
    d13d:	8b 75 98             	mov    -0x68(%rbp),%esi
    d140:	48 89 df             	mov    %rbx,%rdi
    d143:	e8 6f fa ff ff       	call   cbb7 <draw_menu_item>
    d148:	4c 89 f7             	mov    %r14,%rdi
    d14b:	e8 29 2c 01 00       	call   1fd79 <jump_scroll>
    d150:	85 c0                	test   %eax,%eax
    d152:	74 08                	je     d15c <show_menu+0x31d>
    d154:	48 89 df             	mov    %rbx,%rdi
    d157:	e8 62 fc ff ff       	call   cdbe <draw_menu_items>
    d15c:	8b 75 b8             	mov    -0x48(%rbp),%esi
    d15f:	48 89 df             	mov    %rbx,%rdi
    d162:	e8 50 fa ff ff       	call   cbb7 <draw_menu_item>
    d167:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d16b:	8b 75 b8             	mov    -0x48(%rbp),%esi
    d16e:	48 8b 42 20          	mov    0x20(%rdx),%rax
    d172:	48 83 c2 20          	add    $0x20,%rdx
    d176:	48 39 d0             	cmp    %rdx,%rax
    d179:	74 0b                	je     d186 <show_menu+0x347>
    d17b:	85 f6                	test   %esi,%esi
    d17d:	74 09                	je     d188 <show_menu+0x349>
    d17f:	48 8b 00             	mov    (%rax),%rax
    d182:	ff ce                	dec    %esi
    d184:	eb f0                	jmp    d176 <show_menu+0x337>
    d186:	31 c0                	xor    %eax,%eax
    d188:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    d18c:	45 09 e7             	or     %r12d,%r15d
    d18f:	48 89 01             	mov    %rax,(%rcx)
    d192:	0f 84 65 fe ff ff    	je     cffd <show_menu+0x1be>
    d198:	e8 0d a1 00 00       	call   172aa <endwin>
    d19d:	eb 0a                	jmp    d1a9 <show_menu+0x36a>
    d19f:	48 8b 04 25 10 00 00 	mov    0x10,%rax
    d1a6:	00 
    d1a7:	0f 0b                	ud2    
    d1a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d1ad:	48 2b 05 bc cd 01 00 	sub    0x1cdbc(%rip),%rax        # 29f70 <__stack_chk_guard>
    d1b4:	74 05                	je     d1bb <show_menu+0x37c>
    d1b6:	e8 a5 58 ff ff       	call   2a60 <__stack_chk_fail>
    d1bb:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    d1bf:	44 89 e0             	mov    %r12d,%eax
    d1c2:	5b                   	pop    %rbx
    d1c3:	41 5c                	pop    %r12
    d1c5:	41 5d                	pop    %r13
    d1c7:	41 5e                	pop    %r14
    d1c9:	41 5f                	pop    %r15
    d1cb:	5d                   	pop    %rbp
    d1cc:	c3                   	ret    

000000000000d1cd <monojob_close>:
    d1cd:	f3 0f 1e fa          	endbr64 
    d1d1:	89 35 8d ca 01 00    	mov    %esi,0x1ca8d(%rip)        # 29c64 <monojob_rc>
    d1d7:	e9 6c c6 ff ff       	jmp    9848 <intf_restart>

000000000000d1dc <monojob_clear>:
    d1dc:	55                   	push   %rbp
    d1dd:	31 ed                	xor    %ebp,%ebp
    d1df:	53                   	push   %rbx
    d1e0:	48 89 fb             	mov    %rdi,%rbx
    d1e3:	52                   	push   %rdx
    d1e4:	89 e8                	mov    %ebp,%eax
    d1e6:	48 39 d8             	cmp    %rbx,%rax
    d1e9:	73 0e                	jae    d1f9 <monojob_clear+0x1d>
    d1eb:	bf 08 00 00 00       	mov    $0x8,%edi
    d1f0:	ff c5                	inc    %ebp
    d1f2:	e8 57 c0 00 00       	call   1924e <putchar>
    d1f7:	eb eb                	jmp    d1e4 <monojob_clear+0x8>
    d1f9:	31 ed                	xor    %ebp,%ebp
    d1fb:	89 e8                	mov    %ebp,%eax
    d1fd:	48 39 d8             	cmp    %rbx,%rax
    d200:	73 0e                	jae    d210 <monojob_clear+0x34>
    d202:	bf 20 00 00 00       	mov    $0x20,%edi
    d207:	ff c5                	inc    %ebp
    d209:	e8 40 c0 00 00       	call   1924e <putchar>
    d20e:	eb eb                	jmp    d1fb <monojob_clear+0x1f>
    d210:	31 ed                	xor    %ebp,%ebp
    d212:	89 e8                	mov    %ebp,%eax
    d214:	48 39 d8             	cmp    %rbx,%rax
    d217:	73 0e                	jae    d227 <monojob_clear+0x4b>
    d219:	bf 08 00 00 00       	mov    $0x8,%edi
    d21e:	ff c5                	inc    %ebp
    d220:	e8 29 c0 00 00       	call   1924e <putchar>
    d225:	eb eb                	jmp    d212 <monojob_clear+0x36>
    d227:	58                   	pop    %rax
    d228:	5b                   	pop    %rbx
    d229:	5d                   	pop    %rbp
    d22a:	c3                   	ret    

000000000000d22b <monojob_wait>:
    d22b:	f3 0f 1e fa          	endbr64 
    d22f:	41 57                	push   %r15
    d231:	41 56                	push   %r14
    d233:	41 55                	push   %r13
    d235:	41 54                	push   %r12
    d237:	49 89 fc             	mov    %rdi,%r12
    d23a:	55                   	push   %rbp
    d23b:	53                   	push   %rbx
    d23c:	48 83 ec 58          	sub    $0x58,%rsp
    d240:	48 8b 05 29 cd 01 00 	mov    0x1cd29(%rip),%rax        # 29f70 <__stack_chk_guard>
    d247:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    d24c:	31 c0                	xor    %eax,%eax
    d24e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    d253:	48 85 ff             	test   %rdi,%rdi
    d256:	74 0f                	je     d267 <monojob_wait+0x3c>
    d258:	48 89 fe             	mov    %rdi,%rsi
    d25b:	48 8d 3d 24 62 01 00 	lea    0x16224(%rip),%rdi        # 23486 <.LC0>
    d262:	e8 37 9f 00 00       	call   1719e <printf>
    d267:	c7 05 f3 c9 01 00 6c 	movl   $0xe5f8df6c,0x1c9f3(%rip)        # 29c64 <monojob_rc>
    d26e:	df f8 e5 
    d271:	31 ed                	xor    %ebp,%ebp
    d273:	45 31 ff             	xor    %r15d,%r15d
    d276:	e8 56 8a 00 00       	call   15cd1 <currticks>
    d27b:	48 89 c3             	mov    %rax,%rbx
    d27e:	49 89 c5             	mov    %rax,%r13
    d281:	49 89 c6             	mov    %rax,%r14
    d284:	48 89 1c 24          	mov    %rbx,(%rsp)
    d288:	81 3d d2 c9 01 00 6c 	cmpl   $0xe5f8df6c,0x1c9d2(%rip)        # 29c64 <monojob_rc>
    d28f:	df f8 e5 
    d292:	0f 85 0c 01 00 00    	jne    d3a4 <monojob_wait+0x179>
    d298:	e8 0f 27 00 00       	call   f9ac <step>
    d29d:	e8 2f 8a 00 00       	call   15cd1 <currticks>
    d2a2:	48 89 c3             	mov    %rax,%rbx
    d2a5:	48 39 04 24          	cmp    %rax,(%rsp)
    d2a9:	74 dd                	je     d288 <monojob_wait+0x5d>
    d2ab:	e8 df bf 00 00       	call   1928f <iskey>
    d2b0:	85 c0                	test   %eax,%eax
    d2b2:	74 19                	je     d2cd <monojob_wait+0xa2>
    d2b4:	e8 a2 bf 00 00       	call   1925b <getchar>
    d2b9:	83 f8 03             	cmp    $0x3,%eax
    d2bc:	75 0f                	jne    d2cd <monojob_wait+0xa2>
    d2be:	c7 05 9c c9 01 00 6b 	movl   $0xf4f8df6b,0x1c99c(%rip)        # 29c64 <monojob_rc>
    d2c5:	df f8 f4 
    d2c8:	e9 d7 00 00 00       	jmp    d3a4 <monojob_wait+0x179>
    d2cd:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    d2d2:	48 8d 3d 47 95 01 00 	lea    0x19547(%rip),%rdi        # 26820 <monojob>
    d2d9:	e8 33 ec ff ff       	call   bf11 <job_progress>
    d2de:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    d2e3:	48 89 14 24          	mov    %rdx,(%rsp)
    d2e7:	4c 39 fa             	cmp    %r15,%rdx
    d2ea:	75 28                	jne    d314 <monojob_wait+0xe9>
    d2ec:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    d2f1:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    d2f5:	48 89 da             	mov    %rbx,%rdx
    d2f8:	4c 29 f2             	sub    %r14,%rdx
    d2fb:	48 39 d1             	cmp    %rdx,%rcx
    d2fe:	73 17                	jae    d317 <monojob_wait+0xec>
    d300:	85 c0                	test   %eax,%eax
    d302:	75 05                	jne    d309 <monojob_wait+0xde>
    d304:	b8 6e df f8 b3       	mov    $0xb3f8df6e,%eax
    d309:	89 05 55 c9 01 00    	mov    %eax,0x1c955(%rip)        # 29c64 <monojob_rc>
    d30f:	e9 90 00 00 00       	jmp    d3a4 <monojob_wait+0x179>
    d314:	49 89 de             	mov    %rbx,%r14
    d317:	48 89 d8             	mov    %rbx,%rax
    d31a:	4c 29 e8             	sub    %r13,%rax
    d31d:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    d323:	76 76                	jbe    d39b <monojob_wait+0x170>
    d325:	4d 85 e4             	test   %r12,%r12
    d328:	74 71                	je     d39b <monojob_wait+0x170>
    d32a:	48 89 ef             	mov    %rbp,%rdi
    d32d:	e8 aa fe ff ff       	call   d1dc <monojob_clear>
    d332:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    d337:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    d33c:	48 83 f9 7f          	cmp    $0x7f,%rcx
    d340:	76 27                	jbe    d369 <monojob_wait+0x13e>
    d342:	48 c1 e8 07          	shr    $0x7,%rax
    d346:	48 c1 e9 07          	shr    $0x7,%rcx
    d34a:	31 d2                	xor    %edx,%edx
    d34c:	48 8d 3d 39 61 01 00 	lea    0x16139(%rip),%rdi        # 2348c <.LC1>
    d353:	48 6b c0 64          	imul   $0x64,%rax,%rax
    d357:	48 f7 f1             	div    %rcx
    d35a:	48 89 c6             	mov    %rax,%rsi
    d35d:	31 c0                	xor    %eax,%eax
    d35f:	e8 3a 9e 00 00       	call   1719e <printf>
    d364:	48 63 e8             	movslq %eax,%rbp
    d367:	eb 10                	jmp    d379 <monojob_wait+0x14e>
    d369:	48 8d 3d 35 6a 01 00 	lea    0x16a35(%rip),%rdi        # 23da5 <.LC1>
    d370:	31 c0                	xor    %eax,%eax
    d372:	31 ed                	xor    %ebp,%ebp
    d374:	e8 25 9e 00 00       	call   1719e <printf>
    d379:	80 7c 24 28 00       	cmpb   $0x0,0x28(%rsp)
    d37e:	49 89 dd             	mov    %rbx,%r13
    d381:	74 18                	je     d39b <monojob_wait+0x170>
    d383:	48 8d 74 24 28       	lea    0x28(%rsp),%rsi
    d388:	48 8d 3d 05 59 01 00 	lea    0x15905(%rip),%rdi        # 22c94 <.LC3>
    d38f:	31 c0                	xor    %eax,%eax
    d391:	e8 08 9e 00 00       	call   1719e <printf>
    d396:	48 98                	cltq   
    d398:	48 01 c5             	add    %rax,%rbp
    d39b:	4c 8b 3c 24          	mov    (%rsp),%r15
    d39f:	e9 e0 fe ff ff       	jmp    d284 <monojob_wait+0x59>
    d3a4:	44 8b 2d b9 c8 01 00 	mov    0x1c8b9(%rip),%r13d        # 29c64 <monojob_rc>
    d3ab:	48 8d 3d 6e 94 01 00 	lea    0x1946e(%rip),%rdi        # 26820 <monojob>
    d3b2:	44 89 ee             	mov    %r13d,%esi
    d3b5:	e8 13 fe ff ff       	call   d1cd <monojob_close>
    d3ba:	48 89 ef             	mov    %rbp,%rdi
    d3bd:	e8 1a fe ff ff       	call   d1dc <monojob_clear>
    d3c2:	4d 85 e4             	test   %r12,%r12
    d3c5:	74 2e                	je     d3f5 <monojob_wait+0x1ca>
    d3c7:	45 85 ed             	test   %r13d,%r13d
    d3ca:	74 1b                	je     d3e7 <monojob_wait+0x1bc>
    d3cc:	44 89 ef             	mov    %r13d,%edi
    d3cf:	e8 c8 63 00 00       	call   1379c <strerror>
    d3d4:	48 8d 3d 0d 61 01 00 	lea    0x1610d(%rip),%rdi        # 234e8 <.LC4>
    d3db:	48 89 c6             	mov    %rax,%rsi
    d3de:	31 c0                	xor    %eax,%eax
    d3e0:	e8 b9 9d 00 00       	call   1719e <printf>
    d3e5:	eb 0e                	jmp    d3f5 <monojob_wait+0x1ca>
    d3e7:	48 8d 3d a4 60 01 00 	lea    0x160a4(%rip),%rdi        # 23492 <.LC5>
    d3ee:	31 c0                	xor    %eax,%eax
    d3f0:	e8 a9 9d 00 00       	call   1719e <printf>
    d3f5:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    d3fa:	48 2b 05 6f cb 01 00 	sub    0x1cb6f(%rip),%rax        # 29f70 <__stack_chk_guard>
    d401:	74 05                	je     d408 <monojob_wait+0x1dd>
    d403:	e8 58 56 ff ff       	call   2a60 <__stack_chk_fail>
    d408:	48 83 c4 58          	add    $0x58,%rsp
    d40c:	44 89 e8             	mov    %r13d,%eax
    d40f:	5b                   	pop    %rbx
    d410:	5d                   	pop    %rbp
    d411:	41 5c                	pop    %r12
    d413:	41 5d                	pop    %r13
    d415:	41 5e                	pop    %r14
    d417:	41 5f                	pop    %r15
    d419:	c3                   	ret    

000000000000d41a <_wupdcurs>:
    d41a:	4c 8b 07             	mov    (%rdi),%r8
    d41d:	8b 57 14             	mov    0x14(%rdi),%edx
    d420:	8b 77 18             	mov    0x18(%rdi),%esi
    d423:	03 57 0c             	add    0xc(%rdi),%edx
    d426:	03 77 10             	add    0x10(%rdi),%esi
    d429:	49 8b 40 28          	mov    0x28(%r8),%rax
    d42d:	4c 89 c7             	mov    %r8,%rdi
    d430:	ff e0                	jmp    *%rax

000000000000d432 <_wputch>:
    d432:	f3 0f 1e fa          	endbr64 
    d436:	55                   	push   %rbp
    d437:	89 d5                	mov    %edx,%ebp
    d439:	53                   	push   %rbx
    d43a:	48 89 fb             	mov    %rdi,%rbx
    d43d:	48 83 ec 18          	sub    $0x18,%rsp
    d441:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    d445:	e8 d0 ff ff ff       	call   d41a <_wupdcurs>
    d44a:	48 8b 03             	mov    (%rbx),%rax
    d44d:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    d451:	48 89 c7             	mov    %rax,%rdi
    d454:	ff 50 30             	call   *0x30(%rax)
    d457:	8b 43 14             	mov    0x14(%rbx),%eax
    d45a:	8d 50 01             	lea    0x1(%rax),%edx
    d45d:	89 53 14             	mov    %edx,0x14(%rbx)
    d460:	3b 53 1c             	cmp    0x1c(%rbx),%edx
    d463:	75 24                	jne    d489 <_wputch+0x57>
    d465:	85 ed                	test   %ebp,%ebp
    d467:	75 1d                	jne    d486 <_wputch+0x54>
    d469:	8b 43 18             	mov    0x18(%rbx),%eax
    d46c:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%rbx)
    d473:	ff c0                	inc    %eax
    d475:	89 43 18             	mov    %eax,0x18(%rbx)
    d478:	3b 43 20             	cmp    0x20(%rbx),%eax
    d47b:	75 0c                	jne    d489 <_wputch+0x57>
    d47d:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
    d484:	eb 03                	jmp    d489 <_wputch+0x57>
    d486:	89 43 14             	mov    %eax,0x14(%rbx)
    d489:	48 83 c4 18          	add    $0x18,%rsp
    d48d:	5b                   	pop    %rbx
    d48e:	5d                   	pop    %rbp
    d48f:	c3                   	ret    

000000000000d490 <_wputc>:
    d490:	f3 0f 1e fa          	endbr64 
    d494:	40 0f b6 f6          	movzbl %sil,%esi
    d498:	0b 77 08             	or     0x8(%rdi),%esi
    d49b:	e9 92 ff ff ff       	jmp    d432 <_wputch>

000000000000d4a0 <_wputstr>:
    d4a0:	f3 0f 1e fa          	endbr64 
    d4a4:	41 55                	push   %r13
    d4a6:	41 89 d5             	mov    %edx,%r13d
    d4a9:	41 54                	push   %r12
    d4ab:	49 89 fc             	mov    %rdi,%r12
    d4ae:	55                   	push   %rbp
    d4af:	89 cd                	mov    %ecx,%ebp
    d4b1:	53                   	push   %rbx
    d4b2:	48 01 f5             	add    %rsi,%rbp
    d4b5:	48 89 f3             	mov    %rsi,%rbx
    d4b8:	41 50                	push   %r8
    d4ba:	0f be 33             	movsbl (%rbx),%esi
    d4bd:	40 84 f6             	test   %sil,%sil
    d4c0:	74 15                	je     d4d7 <_wputstr+0x37>
    d4c2:	48 39 eb             	cmp    %rbp,%rbx
    d4c5:	74 10                	je     d4d7 <_wputstr+0x37>
    d4c7:	44 89 ea             	mov    %r13d,%edx
    d4ca:	4c 89 e7             	mov    %r12,%rdi
    d4cd:	48 ff c3             	inc    %rbx
    d4d0:	e8 bb ff ff ff       	call   d490 <_wputc>
    d4d5:	eb e3                	jmp    d4ba <_wputstr+0x1a>
    d4d7:	58                   	pop    %rax
    d4d8:	5b                   	pop    %rbx
    d4d9:	5d                   	pop    %rbp
    d4da:	41 5c                	pop    %r12
    d4dc:	41 5d                	pop    %r13
    d4de:	c3                   	ret    

000000000000d4df <wmove>:
    d4df:	f3 0f 1e fa          	endbr64 
    d4e3:	83 c8 ff             	or     $0xffffffff,%eax
    d4e6:	39 77 20             	cmp    %esi,0x20(%rdi)
    d4e9:	76 15                	jbe    d500 <wmove+0x21>
    d4eb:	39 57 1c             	cmp    %edx,0x1c(%rdi)
    d4ee:	76 10                	jbe    d500 <wmove+0x21>
    d4f0:	50                   	push   %rax
    d4f1:	89 57 14             	mov    %edx,0x14(%rdi)
    d4f4:	89 77 18             	mov    %esi,0x18(%rdi)
    d4f7:	e8 1e ff ff ff       	call   d41a <_wupdcurs>
    d4fc:	31 c0                	xor    %eax,%eax
    d4fe:	5a                   	pop    %rdx
    d4ff:	c3                   	ret    
    d500:	c3                   	ret    

000000000000d501 <curs_set>:
    d501:	f3 0f 1e fa          	endbr64 
    d505:	50                   	push   %rax
    d506:	48 8b 05 73 93 01 00 	mov    0x19373(%rip),%rax        # 26880 <_stdscr>
    d50d:	89 fe                	mov    %edi,%esi
    d50f:	48 89 c7             	mov    %rax,%rdi
    d512:	ff 50 48             	call   *0x48(%rax)
    d515:	31 c0                	xor    %eax,%eax
    d517:	5a                   	pop    %rdx
    d518:	c3                   	ret    

000000000000d519 <neighbour_find>:
    d519:	41 57                	push   %r15
    d51b:	41 56                	push   %r14
    d51d:	4c 8d 35 8c 93 01 00 	lea    0x1938c(%rip),%r14        # 268b0 <neighbours>
    d524:	41 55                	push   %r13
    d526:	49 89 d5             	mov    %rdx,%r13
    d529:	41 54                	push   %r12
    d52b:	55                   	push   %rbp
    d52c:	48 89 fd             	mov    %rdi,%rbp
    d52f:	53                   	push   %rbx
    d530:	48 89 f3             	mov    %rsi,%rbx
    d533:	51                   	push   %rcx
    d534:	48 8b 05 75 93 01 00 	mov    0x19375(%rip),%rax        # 268b0 <neighbours>
    d53b:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
    d53f:	4d 8d 7c 24 10       	lea    0x10(%r12),%r15
    d544:	4d 39 f7             	cmp    %r14,%r15
    d547:	74 4c                	je     d595 <neighbour_find+0x7c>
    d549:	49 39 6c 24 20       	cmp    %rbp,0x20(%r12)
    d54e:	75 3a                	jne    d58a <neighbour_find+0x71>
    d550:	49 39 5c 24 28       	cmp    %rbx,0x28(%r12)
    d555:	75 33                	jne    d58a <neighbour_find+0x71>
    d557:	0f b6 53 1a          	movzbl 0x1a(%rbx),%edx
    d55b:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    d560:	4c 89 ee             	mov    %r13,%rsi
    d563:	e8 ec 62 00 00       	call   13854 <memcmp>
    d568:	85 c0                	test   %eax,%eax
    d56a:	75 1e                	jne    d58a <neighbour_find+0x71>
    d56c:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
    d571:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    d576:	4c 89 f6             	mov    %r14,%rsi
    d579:	4c 89 ff             	mov    %r15,%rdi
    d57c:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d580:	48 89 10             	mov    %rdx,(%rax)
    d583:	e8 39 eb ff ff       	call   c0c1 <extern_list_add>
    d588:	eb 0e                	jmp    d598 <neighbour_find+0x7f>
    d58a:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
    d58f:	49 83 ec 10          	sub    $0x10,%r12
    d593:	eb aa                	jmp    d53f <neighbour_find+0x26>
    d595:	45 31 e4             	xor    %r12d,%r12d
    d598:	5a                   	pop    %rdx
    d599:	4c 89 e0             	mov    %r12,%rax
    d59c:	5b                   	pop    %rbx
    d59d:	5d                   	pop    %rbp
    d59e:	41 5c                	pop    %r12
    d5a0:	41 5d                	pop    %r13
    d5a2:	41 5e                	pop    %r14
    d5a4:	41 5f                	pop    %r15
    d5a6:	c3                   	ret    

000000000000d5a7 <neighbour_free>:
    d5a7:	f3 0f 1e fa          	endbr64 
    d5ab:	55                   	push   %rbp
    d5ac:	48 89 fd             	mov    %rdi,%rbp
    d5af:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    d5b3:	e8 86 28 00 00       	call   fe3e <ref_decrement>
    d5b8:	48 89 ef             	mov    %rbp,%rdi
    d5bb:	5d                   	pop    %rbp
    d5bc:	e9 8e f0 ff ff       	jmp    c64f <free>

000000000000d5c1 <neighbour_create>:
    d5c1:	41 55                	push   %r13
    d5c3:	49 89 d5             	mov    %rdx,%r13
    d5c6:	41 54                	push   %r12
    d5c8:	55                   	push   %rbp
    d5c9:	48 89 fd             	mov    %rdi,%rbp
    d5cc:	bf d0 00 00 00       	mov    $0xd0,%edi
    d5d1:	53                   	push   %rbx
    d5d2:	48 89 f3             	mov    %rsi,%rbx
    d5d5:	51                   	push   %rcx
    d5d6:	e8 7f f0 ff ff       	call   c65a <zalloc>
    d5db:	49 89 c4             	mov    %rax,%r12
    d5de:	48 85 c0             	test   %rax,%rax
    d5e1:	0f 84 87 00 00 00    	je     d66e <neighbour_create+0xad>
    d5e7:	48 8d 05 b9 ff ff ff 	lea    -0x47(%rip),%rax        # d5a7 <neighbour_free>
    d5ee:	48 89 ef             	mov    %rbp,%rdi
    d5f1:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    d5f6:	e8 37 28 00 00       	call   fe32 <ref_increment>
    d5fb:	0f b6 53 1a          	movzbl 0x1a(%rbx),%edx
    d5ff:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
    d604:	4c 89 ee             	mov    %r13,%rsi
    d607:	49 89 6c 24 20       	mov    %rbp,0x20(%r12)
    d60c:	49 89 5c 24 28       	mov    %rbx,0x28(%r12)
    d611:	e8 f7 9c 00 00       	call   1730d <__memcpy>
    d616:	48 8d 05 40 01 00 00 	lea    0x140(%rip),%rax        # d75d <neighbour_expired>
    d61d:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
    d622:	4d 89 a4 24 b8 00 00 	mov    %r12,0xb8(%r12)
    d629:	00 
    d62a:	49 89 84 24 b0 00 00 	mov    %rax,0xb0(%r12)
    d631:	00 
    d632:	48 8d 35 77 92 01 00 	lea    0x19277(%rip),%rsi        # 268b0 <neighbours>
    d639:	49 8d 84 24 c0 00 00 	lea    0xc0(%r12),%rax
    d640:	00 
    d641:	49 c7 84 24 90 00 00 	movq   $0x80,0x90(%r12)
    d648:	00 80 00 00 00 
    d64d:	49 c7 84 24 98 00 00 	movq   $0xc00,0x98(%r12)
    d654:	00 00 0c 00 00 
    d659:	49 89 84 24 c0 00 00 	mov    %rax,0xc0(%r12)
    d660:	00 
    d661:	49 89 84 24 c8 00 00 	mov    %rax,0xc8(%r12)
    d668:	00 
    d669:	e8 53 ea ff ff       	call   c0c1 <extern_list_add>
    d66e:	5a                   	pop    %rdx
    d66f:	4c 89 e0             	mov    %r12,%rax
    d672:	5b                   	pop    %rbx
    d673:	5d                   	pop    %rbp
    d674:	41 5c                	pop    %r12
    d676:	41 5d                	pop    %r13
    d678:	c3                   	ret    

000000000000d679 <neighbour_discovered>:
    d679:	41 56                	push   %r14
    d67b:	41 55                	push   %r13
    d67d:	41 54                	push   %r12
    d67f:	55                   	push   %rbp
    d680:	48 89 fd             	mov    %rdi,%rbp
    d683:	48 83 c7 40          	add    $0x40,%rdi
    d687:	53                   	push   %rbx
    d688:	4c 8b 67 e0          	mov    -0x20(%rdi),%r12
    d68c:	48 89 f3             	mov    %rsi,%rbx
    d68f:	4c 8d b5 c0 00 00 00 	lea    0xc0(%rbp),%r14
    d696:	4c 8b 6f e8          	mov    -0x18(%rdi),%r13
    d69a:	49 8b 44 24 50       	mov    0x50(%r12),%rax
    d69f:	0f b6 50 43          	movzbl 0x43(%rax),%edx
    d6a3:	e8 65 9c 00 00       	call   1730d <__memcpy>
    d6a8:	48 8d 7d 70          	lea    0x70(%rbp),%rdi
    d6ac:	e8 1f 2c 00 00       	call   102d0 <stop_timer>
    d6b1:	48 89 ef             	mov    %rbp,%rdi
    d6b4:	e8 79 27 00 00       	call   fe32 <ref_increment>
    d6b9:	48 8b bd c0 00 00 00 	mov    0xc0(%rbp),%rdi
    d6c0:	4c 39 f7             	cmp    %r14,%rdi
    d6c3:	74 28                	je     d6ed <neighbour_discovered+0x74>
    d6c5:	48 85 ff             	test   %rdi,%rdi
    d6c8:	74 23                	je     d6ed <neighbour_discovered+0x74>
    d6ca:	48 8b 17             	mov    (%rdi),%rdx
    d6cd:	48 8b 47 08          	mov    0x8(%rdi),%rax
    d6d1:	4d 8d 44 24 60       	lea    0x60(%r12),%r8
    d6d6:	48 89 d9             	mov    %rbx,%rcx
    d6d9:	4c 89 e6             	mov    %r12,%rsi
    d6dc:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d6e0:	48 89 10             	mov    %rdx,(%rax)
    d6e3:	4c 89 ea             	mov    %r13,%rdx
    d6e6:	e8 15 0b 00 00       	call   e200 <net_tx>
    d6eb:	eb cc                	jmp    d6b9 <neighbour_discovered+0x40>
    d6ed:	5b                   	pop    %rbx
    d6ee:	48 89 ef             	mov    %rbp,%rdi
    d6f1:	5d                   	pop    %rbp
    d6f2:	41 5c                	pop    %r12
    d6f4:	41 5d                	pop    %r13
    d6f6:	41 5e                	pop    %r14
    d6f8:	e9 41 27 00 00       	jmp    fe3e <ref_decrement>

000000000000d6fd <neighbour_destroy>:
    d6fd:	41 54                	push   %r12
    d6ff:	55                   	push   %rbp
    d700:	48 89 fd             	mov    %rdi,%rbp
    d703:	48 83 c7 70          	add    $0x70,%rdi
    d707:	53                   	push   %rbx
    d708:	48 8b 57 a0          	mov    -0x60(%rdi),%rdx
    d70c:	89 f3                	mov    %esi,%ebx
    d70e:	4c 8d a5 c0 00 00 00 	lea    0xc0(%rbp),%r12
    d715:	48 8b 47 a8          	mov    -0x58(%rdi),%rax
    d719:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d71d:	48 89 10             	mov    %rdx,(%rax)
    d720:	e8 ab 2b 00 00       	call   102d0 <stop_timer>
    d725:	48 8b b5 c0 00 00 00 	mov    0xc0(%rbp),%rsi
    d72c:	48 85 f6             	test   %rsi,%rsi
    d72f:	74 20                	je     d751 <neighbour_destroy+0x54>
    d731:	4c 39 e6             	cmp    %r12,%rsi
    d734:	74 1b                	je     d751 <neighbour_destroy+0x54>
    d736:	48 8b 16             	mov    (%rsi),%rdx
    d739:	48 8b 46 08          	mov    0x8(%rsi),%rax
    d73d:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    d741:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d745:	48 89 10             	mov    %rdx,(%rax)
    d748:	89 da                	mov    %ebx,%edx
    d74a:	e8 42 03 00 00       	call   da91 <netdev_tx_err>
    d74f:	eb d4                	jmp    d725 <neighbour_destroy+0x28>
    d751:	5b                   	pop    %rbx
    d752:	48 89 ef             	mov    %rbp,%rdi
    d755:	5d                   	pop    %rbp
    d756:	41 5c                	pop    %r12
    d758:	e9 e1 26 00 00       	jmp    fe3e <ref_decrement>

000000000000d75d <neighbour_expired>:
    d75d:	f3 0f 1e fa          	endbr64 
    d761:	41 55                	push   %r13
    d763:	41 54                	push   %r12
    d765:	55                   	push   %rbp
    d766:	53                   	push   %rbx
    d767:	48 89 fb             	mov    %rdi,%rbx
    d76a:	41 52                	push   %r10
    d76c:	48 8b 6f b0          	mov    -0x50(%rdi),%rbp
    d770:	4c 8b 67 b8          	mov    -0x48(%rdi),%r12
    d774:	4c 8b 6f e8          	mov    -0x18(%rdi),%r13
    d778:	85 f6                	test   %esi,%esi
    d77a:	74 16                	je     d792 <neighbour_expired+0x35>
    d77c:	be 6e 9f c8 b3       	mov    $0xb3c89f6e,%esi
    d781:	41 59                	pop    %r9
    d783:	48 8d 7f 90          	lea    -0x70(%rdi),%rdi
    d787:	5b                   	pop    %rbx
    d788:	5d                   	pop    %rbp
    d789:	41 5c                	pop    %r12
    d78b:	41 5d                	pop    %r13
    d78d:	e9 6b ff ff ff       	jmp    d6fd <neighbour_destroy>
    d792:	e8 0b 2b 00 00       	call   102a2 <start_timer>
    d797:	49 8b 45 08          	mov    0x8(%r13),%rax
    d79b:	48 8d 4b f0          	lea    -0x10(%rbx),%rcx
    d79f:	41 58                	pop    %r8
    d7a1:	48 8d 53 c0          	lea    -0x40(%rbx),%rdx
    d7a5:	4c 89 e6             	mov    %r12,%rsi
    d7a8:	5b                   	pop    %rbx
    d7a9:	48 89 ef             	mov    %rbp,%rdi
    d7ac:	5d                   	pop    %rbp
    d7ad:	41 5c                	pop    %r12
    d7af:	41 5d                	pop    %r13
    d7b1:	ff e0                	jmp    *%rax

000000000000d7b3 <neighbour_flush>:
    d7b3:	f3 0f 1e fa          	endbr64 
    d7b7:	f6 87 80 00 00 00 01 	testb  $0x1,0x80(%rdi)
    d7be:	75 40                	jne    d800 <neighbour_flush+0x4d>
    d7c0:	55                   	push   %rbp
    d7c1:	48 8d 2d e8 90 01 00 	lea    0x190e8(%rip),%rbp        # 268b0 <neighbours>
    d7c8:	53                   	push   %rbx
    d7c9:	52                   	push   %rdx
    d7ca:	48 8b 05 df 90 01 00 	mov    0x190df(%rip),%rax        # 268b0 <neighbours>
    d7d1:	48 8b 18             	mov    (%rax),%rbx
    d7d4:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
    d7d8:	48 83 eb 10          	sub    $0x10,%rbx
    d7dc:	48 8d 47 10          	lea    0x10(%rdi),%rax
    d7e0:	48 39 e8             	cmp    %rbp,%rax
    d7e3:	74 17                	je     d7fc <neighbour_flush+0x49>
    d7e5:	be 79 9f c8 d3       	mov    $0xd3c89f79,%esi
    d7ea:	e8 0e ff ff ff       	call   d6fd <neighbour_destroy>
    d7ef:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d7f3:	48 89 df             	mov    %rbx,%rdi
    d7f6:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    d7fa:	eb e0                	jmp    d7dc <neighbour_flush+0x29>
    d7fc:	58                   	pop    %rax
    d7fd:	5b                   	pop    %rbx
    d7fe:	5d                   	pop    %rbp
    d7ff:	c3                   	ret    
    d800:	c3                   	ret    

000000000000d801 <neighbour_discard>:
    d801:	f3 0f 1e fa          	endbr64 
    d805:	48 8d 15 a4 90 01 00 	lea    0x190a4(%rip),%rdx        # 268b0 <neighbours>
    d80c:	48 39 12             	cmp    %rdx,(%rdx)
    d80f:	74 1d                	je     d82e <neighbour_discard+0x2d>
    d811:	50                   	push   %rax
    d812:	48 8b 05 9f 90 01 00 	mov    0x1909f(%rip),%rax        # 268b8 <neighbours+0x8>
    d819:	be 77 9f c8 d5       	mov    $0xd5c89f77,%esi
    d81e:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
    d822:	e8 d6 fe ff ff       	call   d6fd <neighbour_destroy>
    d827:	b8 01 00 00 00       	mov    $0x1,%eax
    d82c:	5a                   	pop    %rdx
    d82d:	c3                   	ret    
    d82e:	31 c0                	xor    %eax,%eax
    d830:	c3                   	ret    

000000000000d831 <neighbour_tx>:
    d831:	f3 0f 1e fa          	endbr64 
    d835:	41 57                	push   %r15
    d837:	41 56                	push   %r14
    d839:	4d 89 ce             	mov    %r9,%r14
    d83c:	41 55                	push   %r13
    d83e:	49 89 fd             	mov    %rdi,%r13
    d841:	41 54                	push   %r12
    d843:	49 89 d4             	mov    %rdx,%r12
    d846:	48 89 ca             	mov    %rcx,%rdx
    d849:	55                   	push   %rbp
    d84a:	48 89 f5             	mov    %rsi,%rbp
    d84d:	4c 89 e6             	mov    %r12,%rsi
    d850:	53                   	push   %rbx
    d851:	48 89 ef             	mov    %rbp,%rdi
    d854:	48 83 ec 18          	sub    $0x18,%rsp
    d858:	4c 89 04 24          	mov    %r8,(%rsp)
    d85c:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    d861:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    d866:	e8 ae fc ff ff       	call   d519 <neighbour_find>
    d86b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    d870:	48 85 c0             	test   %rax,%rax
    d873:	48 89 c3             	mov    %rax,%rbx
    d876:	75 41                	jne    d8b9 <neighbour_tx+0x88>
    d878:	4c 89 e6             	mov    %r12,%rsi
    d87b:	48 89 ef             	mov    %rbp,%rdi
    d87e:	e8 3e fd ff ff       	call   d5c1 <neighbour_create>
    d883:	48 89 c3             	mov    %rax,%rbx
    d886:	48 85 c0             	test   %rax,%rax
    d889:	75 07                	jne    d892 <neighbour_tx+0x61>
    d88b:	b8 77 9f c8 ce       	mov    $0xcec89f77,%eax
    d890:	eb 64                	jmp    d8f6 <neighbour_tx+0xc5>
    d892:	48 8b 0c 24          	mov    (%rsp),%rcx
    d896:	48 8b 40 28          	mov    0x28(%rax),%rax
    d89a:	48 8d 7b 60          	lea    0x60(%rbx),%rdi
    d89e:	4c 89 f6             	mov    %r14,%rsi
    d8a1:	48 89 4b 58          	mov    %rcx,0x58(%rbx)
    d8a5:	0f b6 50 1a          	movzbl 0x1a(%rax),%edx
    d8a9:	e8 5f 9a 00 00       	call   1730d <__memcpy>
    d8ae:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
    d8b2:	31 f6                	xor    %esi,%esi
    d8b4:	e8 a9 29 00 00       	call   10262 <start_timer_fixed>
    d8b9:	83 bb 80 00 00 00 00 	cmpl   $0x0,0x80(%rbx)
    d8c0:	75 23                	jne    d8e5 <neighbour_tx+0xb4>
    d8c2:	48 83 c4 18          	add    $0x18,%rsp
    d8c6:	48 8d 4b 40          	lea    0x40(%rbx),%rcx
    d8ca:	4d 89 f8             	mov    %r15,%r8
    d8cd:	4c 89 e2             	mov    %r12,%rdx
    d8d0:	5b                   	pop    %rbx
    d8d1:	48 89 ee             	mov    %rbp,%rsi
    d8d4:	4c 89 ef             	mov    %r13,%rdi
    d8d7:	5d                   	pop    %rbp
    d8d8:	41 5c                	pop    %r12
    d8da:	41 5d                	pop    %r13
    d8dc:	41 5e                	pop    %r14
    d8de:	41 5f                	pop    %r15
    d8e0:	e9 1b 09 00 00       	jmp    e200 <net_tx>
    d8e5:	48 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%rsi
    d8ec:	4c 89 ef             	mov    %r13,%rdi
    d8ef:	e8 e3 e7 ff ff       	call   c0d7 <extern_list_add_tail>
    d8f4:	31 c0                	xor    %eax,%eax
    d8f6:	48 83 c4 18          	add    $0x18,%rsp
    d8fa:	5b                   	pop    %rbx
    d8fb:	5d                   	pop    %rbp
    d8fc:	41 5c                	pop    %r12
    d8fe:	41 5d                	pop    %r13
    d900:	41 5e                	pop    %r14
    d902:	41 5f                	pop    %r15
    d904:	c3                   	ret    

000000000000d905 <neighbour_update>:
    d905:	f3 0f 1e fa          	endbr64 
    d909:	55                   	push   %rbp
    d90a:	48 89 cd             	mov    %rcx,%rbp
    d90d:	e8 07 fc ff ff       	call   d519 <neighbour_find>
    d912:	48 85 c0             	test   %rax,%rax
    d915:	75 07                	jne    d91e <neighbour_update+0x19>
    d917:	b8 72 9f c8 d2       	mov    $0xd2c89f72,%eax
    d91c:	eb 0d                	jmp    d92b <neighbour_update+0x26>
    d91e:	48 89 c7             	mov    %rax,%rdi
    d921:	48 89 ee             	mov    %rbp,%rsi
    d924:	e8 50 fd ff ff       	call   d679 <neighbour_discovered>
    d929:	31 c0                	xor    %eax,%eax
    d92b:	5d                   	pop    %rbp
    d92c:	c3                   	ret    

000000000000d92d <inline_list_del>:
    d92d:	48 8b 17             	mov    (%rdi),%rdx
    d930:	48 8b 47 08          	mov    0x8(%rdi),%rax
    d934:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d938:	48 89 10             	mov    %rdx,(%rax)
    d93b:	c3                   	ret    

000000000000d93c <netdev_notify>:
    d93c:	41 54                	push   %r12
    d93e:	4c 8d 25 83 b3 01 00 	lea    0x1b383(%rip),%r12        # 28cc8 <ipv4_protocol>
    d945:	55                   	push   %rbp
    d946:	48 89 fd             	mov    %rdi,%rbp
    d949:	53                   	push   %rbx
    d94a:	48 8d 1d 37 b3 01 00 	lea    0x1b337(%rip),%rbx        # 28c88 <efi_snp_driver>
    d951:	4c 39 e3             	cmp    %r12,%rbx
    d954:	73 14                	jae    d96a <netdev_notify+0x2e>
    d956:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d95a:	48 85 c0             	test   %rax,%rax
    d95d:	74 05                	je     d964 <netdev_notify+0x28>
    d95f:	48 89 ef             	mov    %rbp,%rdi
    d962:	ff d0                	call   *%rax
    d964:	48 83 c3 20          	add    $0x20,%rbx
    d968:	eb e7                	jmp    d951 <netdev_notify+0x15>
    d96a:	5b                   	pop    %rbx
    d96b:	5d                   	pop    %rbp
    d96c:	41 5c                	pop    %r12
    d96e:	c3                   	ret    

000000000000d96f <netdev_link_block_expired>:
    d96f:	f3 0f 1e fa          	endbr64 
    d973:	c3                   	ret    

000000000000d974 <net_discard>:
    d974:	f3 0f 1e fa          	endbr64 
    d978:	48 8b 05 a1 8f 01 00 	mov    0x18fa1(%rip),%rax        # 26920 <net_devices>
    d97f:	41 54                	push   %r12
    d981:	45 31 e4             	xor    %r12d,%r12d
    d984:	55                   	push   %rbp
    d985:	48 8d 2d 94 8f 01 00 	lea    0x18f94(%rip),%rbp        # 26920 <net_devices>
    d98c:	53                   	push   %rbx
    d98d:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    d991:	48 8d 43 10          	lea    0x10(%rbx),%rax
    d995:	48 39 e8             	cmp    %rbp,%rax
    d998:	74 2f                	je     d9c9 <net_discard+0x55>
    d99a:	48 8b bb f8 00 00 00 	mov    0xf8(%rbx),%rdi
    d9a1:	48 8d 83 f8 00 00 00 	lea    0xf8(%rbx),%rax
    d9a8:	48 39 c7             	cmp    %rax,%rdi
    d9ab:	74 12                	je     d9bf <net_discard+0x4b>
    d9ad:	48 85 ff             	test   %rdi,%rdi
    d9b0:	74 0d                	je     d9bf <net_discard+0x4b>
    d9b2:	e8 76 ff ff ff       	call   d92d <inline_list_del>
    d9b7:	41 ff c4             	inc    %r12d
    d9ba:	e8 d7 c2 ff ff       	call   9c96 <free_iob>
    d9bf:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    d9c3:	48 83 eb 10          	sub    $0x10,%rbx
    d9c7:	eb c8                	jmp    d991 <net_discard+0x1d>
    d9c9:	44 89 e0             	mov    %r12d,%eax
    d9cc:	5b                   	pop    %rbx
    d9cd:	5d                   	pop    %rbp
    d9ce:	41 5c                	pop    %r12
    d9d0:	c3                   	ret    

000000000000d9d1 <netdev_config_close>:
    d9d1:	f3 0f 1e fa          	endbr64 
    d9d5:	55                   	push   %rbp
    d9d6:	89 f5                	mov    %esi,%ebp
    d9d8:	53                   	push   %rbx
    d9d9:	48 89 fb             	mov    %rdi,%rbx
    d9dc:	48 8d 7f 18          	lea    0x18(%rdi),%rdi
    d9e0:	50                   	push   %rax
    d9e1:	e8 62 be ff ff       	call   9848 <intf_restart>
    d9e6:	89 6b 10             	mov    %ebp,0x10(%rbx)
    d9e9:	5a                   	pop    %rdx
    d9ea:	5b                   	pop    %rbx
    d9eb:	5d                   	pop    %rbp
    d9ec:	c3                   	ret    

000000000000d9ed <netdev_record_stat.part.0>:
    d9ed:	ff 47 04             	incl   0x4(%rdi)
    d9f0:	48 8d 57 08          	lea    0x8(%rdi),%rdx
    d9f4:	31 c0                	xor    %eax,%eax
    d9f6:	48 89 d1             	mov    %rdx,%rcx
    d9f9:	44 8b 41 04          	mov    0x4(%rcx),%r8d
    d9fd:	39 31                	cmp    %esi,(%rcx)
    d9ff:	75 09                	jne    da0a <netdev_record_stat.part.0+0x1d>
    da01:	41 ff c0             	inc    %r8d
    da04:	44 89 44 c7 0c       	mov    %r8d,0xc(%rdi,%rax,8)
    da09:	c3                   	ret    
    da0a:	44 39 42 04          	cmp    %r8d,0x4(%rdx)
    da0e:	76 03                	jbe    da13 <netdev_record_stat.part.0+0x26>
    da10:	48 89 ca             	mov    %rcx,%rdx
    da13:	ff c0                	inc    %eax
    da15:	48 83 c1 08          	add    $0x8,%rcx
    da19:	83 f8 04             	cmp    $0x4,%eax
    da1c:	75 db                	jne    d9f9 <netdev_record_stat.part.0+0xc>
    da1e:	89 32                	mov    %esi,(%rdx)
    da20:	c7 42 04 01 00 00 00 	movl   $0x1,0x4(%rdx)
    da27:	c3                   	ret    

000000000000da28 <netdev_link_err>:
    da28:	f3 0f 1e fa          	endbr64 
    da2c:	55                   	push   %rbp
    da2d:	48 89 fd             	mov    %rdi,%rbp
    da30:	48 8d bf 88 00 00 00 	lea    0x88(%rdi),%rdi
    da37:	53                   	push   %rbx
    da38:	89 f3                	mov    %esi,%ebx
    da3a:	50                   	push   %rax
    da3b:	e8 90 28 00 00       	call   102d0 <stop_timer>
    da40:	89 9d 84 00 00 00    	mov    %ebx,0x84(%rbp)
    da46:	48 89 ef             	mov    %rbp,%rdi
    da49:	5a                   	pop    %rdx
    da4a:	5b                   	pop    %rbx
    da4b:	5d                   	pop    %rbp
    da4c:	e9 eb fe ff ff       	jmp    d93c <netdev_notify>

000000000000da51 <netdev_link_down>:
    da51:	f3 0f 1e fa          	endbr64 
    da55:	8b 87 84 00 00 00    	mov    0x84(%rdi),%eax
    da5b:	85 c0                	test   %eax,%eax
    da5d:	74 07                	je     da66 <netdev_link_down+0x15>
    da5f:	3d 6c 9e f7 e5       	cmp    $0xe5f79e6c,%eax
    da64:	75 0a                	jne    da70 <netdev_link_down+0x1f>
    da66:	be 6d 9e f7 c7       	mov    $0xc7f79e6d,%esi
    da6b:	e9 b8 ff ff ff       	jmp    da28 <netdev_link_err>
    da70:	c3                   	ret    

000000000000da71 <netdev_link_block>:
    da71:	f3 0f 1e fa          	endbr64 
    da75:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
    da7c:	e9 e1 27 00 00       	jmp    10262 <start_timer_fixed>

000000000000da81 <netdev_link_unblock>:
    da81:	f3 0f 1e fa          	endbr64 
    da85:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
    da8c:	e9 3f 28 00 00       	jmp    102d0 <stop_timer>

000000000000da91 <netdev_tx_err>:
    da91:	f3 0f 1e fa          	endbr64 
    da95:	49 89 f1             	mov    %rsi,%r9
    da98:	85 d2                	test   %edx,%edx
    da9a:	75 0b                	jne    daa7 <netdev_tx_err+0x16>
    da9c:	ff 87 18 01 00 00    	incl   0x118(%rdi)
    daa2:	48 89 f7             	mov    %rsi,%rdi
    daa5:	eb 13                	jmp    daba <netdev_tx_err+0x29>
    daa7:	50                   	push   %rax
    daa8:	89 d6                	mov    %edx,%esi
    daaa:	48 81 c7 18 01 00 00 	add    $0x118,%rdi
    dab1:	e8 37 ff ff ff       	call   d9ed <netdev_record_stat.part.0>
    dab6:	4c 89 cf             	mov    %r9,%rdi
    dab9:	5a                   	pop    %rdx
    daba:	e9 d7 c1 ff ff       	jmp    9c96 <free_iob>

000000000000dabf <netdev_tx_complete_err>:
    dabf:	f3 0f 1e fa          	endbr64 
    dac3:	41 54                	push   %r12
    dac5:	55                   	push   %rbp
    dac6:	48 89 fd             	mov    %rdi,%rbp
    dac9:	48 89 f7             	mov    %rsi,%rdi
    dacc:	53                   	push   %rbx
    dacd:	89 d3                	mov    %edx,%ebx
    dacf:	4c 8d a5 f8 00 00 00 	lea    0xf8(%rbp),%r12
    dad6:	e8 52 fe ff ff       	call   d92d <inline_list_del>
    dadb:	89 da                	mov    %ebx,%edx
    dadd:	48 89 ef             	mov    %rbp,%rdi
    dae0:	e8 ac ff ff ff       	call   da91 <netdev_tx_err>
    dae5:	48 8b b5 f8 00 00 00 	mov    0xf8(%rbp),%rsi
    daec:	48 85 f6             	test   %rsi,%rsi
    daef:	74 2c                	je     db1d <netdev_tx_complete_err+0x5e>
    daf1:	4c 39 e6             	cmp    %r12,%rsi
    daf4:	74 27                	je     db1d <netdev_tx_complete_err+0x5e>
    daf6:	48 89 f7             	mov    %rsi,%rdi
    daf9:	e8 2f fe ff ff       	call   d92d <inline_list_del>
    dafe:	85 db                	test   %ebx,%ebx
    db00:	74 0f                	je     db11 <netdev_tx_complete_err+0x52>
    db02:	ba 6b 9f f7 f4       	mov    $0xf4f79f6b,%edx
    db07:	48 89 ef             	mov    %rbp,%rdi
    db0a:	e8 82 ff ff ff       	call   da91 <netdev_tx_err>
    db0f:	eb d4                	jmp    dae5 <netdev_tx_complete_err+0x26>
    db11:	5b                   	pop    %rbx
    db12:	48 89 ef             	mov    %rbp,%rdi
    db15:	5d                   	pop    %rbp
    db16:	41 5c                	pop    %r12
    db18:	e9 05 00 00 00       	jmp    db22 <netdev_tx>
    db1d:	5b                   	pop    %rbx
    db1e:	5d                   	pop    %rbp
    db1f:	41 5c                	pop    %r12
    db21:	c3                   	ret    

000000000000db22 <netdev_tx>:
    db22:	f3 0f 1e fa          	endbr64 
    db26:	41 55                	push   %r13
    db28:	49 89 f5             	mov    %rsi,%r13
    db2b:	48 8d b7 e8 00 00 00 	lea    0xe8(%rdi),%rsi
    db32:	55                   	push   %rbp
    db33:	48 89 fd             	mov    %rdi,%rbp
    db36:	4c 89 ef             	mov    %r13,%rdi
    db39:	48 83 ec 18          	sub    $0x18,%rsp
    db3d:	e8 95 e5 ff ff       	call   c0d7 <extern_list_add_tail>
    db42:	f6 85 80 00 00 00 01 	testb  $0x1,0x80(%rbp)
    db49:	75 07                	jne    db52 <netdev_tx+0x30>
    db4b:	b8 70 9f f7 d7       	mov    $0xd7f79f70,%eax
    db50:	eb 11                	jmp    db63 <netdev_tx+0x41>
    db52:	48 8b 45 48          	mov    0x48(%rbp),%rax
    db56:	4c 89 ee             	mov    %r13,%rsi
    db59:	48 89 ef             	mov    %rbp,%rdi
    db5c:	ff 50 10             	call   *0x10(%rax)
    db5f:	85 c0                	test   %eax,%eax
    db61:	74 15                	je     db78 <netdev_tx+0x56>
    db63:	89 c2                	mov    %eax,%edx
    db65:	4c 89 ee             	mov    %r13,%rsi
    db68:	48 89 ef             	mov    %rbp,%rdi
    db6b:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    db6f:	e8 4b ff ff ff       	call   dabf <netdev_tx_complete_err>
    db74:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    db78:	48 83 c4 18          	add    $0x18,%rsp
    db7c:	5d                   	pop    %rbp
    db7d:	41 5d                	pop    %r13
    db7f:	c3                   	ret    

000000000000db80 <netdev_tx_complete_next_err>:
    db80:	f3 0f 1e fa          	endbr64 
    db84:	89 f2                	mov    %esi,%edx
    db86:	48 8b b7 e8 00 00 00 	mov    0xe8(%rdi),%rsi
    db8d:	48 8d 87 e8 00 00 00 	lea    0xe8(%rdi),%rax
    db94:	48 39 c6             	cmp    %rax,%rsi
    db97:	74 0a                	je     dba3 <netdev_tx_complete_next_err+0x23>
    db99:	48 85 f6             	test   %rsi,%rsi
    db9c:	74 05                	je     dba3 <netdev_tx_complete_next_err+0x23>
    db9e:	e9 1c ff ff ff       	jmp    dabf <netdev_tx_complete_err>
    dba3:	c3                   	ret    

000000000000dba4 <netdev_tx_flush>:
    dba4:	55                   	push   %rbp
    dba5:	48 8d af e8 00 00 00 	lea    0xe8(%rdi),%rbp
    dbac:	53                   	push   %rbx
    dbad:	48 89 fb             	mov    %rdi,%rbx
    dbb0:	52                   	push   %rdx
    dbb1:	48 39 ab e8 00 00 00 	cmp    %rbp,0xe8(%rbx)
    dbb8:	74 0f                	je     dbc9 <netdev_tx_flush+0x25>
    dbba:	be 6b 9f f7 f4       	mov    $0xf4f79f6b,%esi
    dbbf:	48 89 df             	mov    %rbx,%rdi
    dbc2:	e8 b9 ff ff ff       	call   db80 <netdev_tx_complete_next_err>
    dbc7:	eb e8                	jmp    dbb1 <netdev_tx_flush+0xd>
    dbc9:	58                   	pop    %rax
    dbca:	5b                   	pop    %rbx
    dbcb:	5d                   	pop    %rbp
    dbcc:	c3                   	ret    

000000000000dbcd <netdev_rx>:
    dbcd:	f3 0f 1e fa          	endbr64 
    dbd1:	53                   	push   %rbx
    dbd2:	48 89 fb             	mov    %rdi,%rbx
    dbd5:	48 89 f7             	mov    %rsi,%rdi
    dbd8:	48 8d b3 08 01 00 00 	lea    0x108(%rbx),%rsi
    dbdf:	e8 f3 e4 ff ff       	call   c0d7 <extern_list_add_tail>
    dbe4:	ff 83 40 01 00 00    	incl   0x140(%rbx)
    dbea:	5b                   	pop    %rbx
    dbeb:	c3                   	ret    

000000000000dbec <netdev_rx_err>:
    dbec:	f3 0f 1e fa          	endbr64 
    dbf0:	55                   	push   %rbp
    dbf1:	89 d5                	mov    %edx,%ebp
    dbf3:	53                   	push   %rbx
    dbf4:	48 89 fb             	mov    %rdi,%rbx
    dbf7:	48 89 f7             	mov    %rsi,%rdi
    dbfa:	51                   	push   %rcx
    dbfb:	e8 96 c0 ff ff       	call   9c96 <free_iob>
    dc00:	85 ed                	test   %ebp,%ebp
    dc02:	75 0a                	jne    dc0e <netdev_rx_err+0x22>
    dc04:	ff 83 40 01 00 00    	incl   0x140(%rbx)
    dc0a:	5a                   	pop    %rdx
    dc0b:	5b                   	pop    %rbx
    dc0c:	5d                   	pop    %rbp
    dc0d:	c3                   	ret    
    dc0e:	58                   	pop    %rax
    dc0f:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
    dc16:	89 ee                	mov    %ebp,%esi
    dc18:	5b                   	pop    %rbx
    dc19:	5d                   	pop    %rbp
    dc1a:	e9 ce fd ff ff       	jmp    d9ed <netdev_record_stat.part.0>

000000000000dc1f <netdev_poll>:
    dc1f:	f3 0f 1e fa          	endbr64 
    dc23:	f6 87 80 00 00 00 01 	testb  $0x1,0x80(%rdi)
    dc2a:	74 07                	je     dc33 <netdev_poll+0x14>
    dc2c:	48 8b 47 48          	mov    0x48(%rdi),%rax
    dc30:	ff 60 18             	jmp    *0x18(%rax)
    dc33:	c3                   	ret    

000000000000dc34 <netdev_rx_dequeue>:
    dc34:	f3 0f 1e fa          	endbr64 
    dc38:	4c 8b 87 08 01 00 00 	mov    0x108(%rdi),%r8
    dc3f:	4d 85 c0             	test   %r8,%r8
    dc42:	74 16                	je     dc5a <netdev_rx_dequeue+0x26>
    dc44:	48 81 c7 08 01 00 00 	add    $0x108,%rdi
    dc4b:	49 39 f8             	cmp    %rdi,%r8
    dc4e:	74 0a                	je     dc5a <netdev_rx_dequeue+0x26>
    dc50:	4c 89 c7             	mov    %r8,%rdi
    dc53:	e8 d5 fc ff ff       	call   d92d <inline_list_del>
    dc58:	eb 03                	jmp    dc5d <netdev_rx_dequeue+0x29>
    dc5a:	45 31 c0             	xor    %r8d,%r8d
    dc5d:	4c 89 c0             	mov    %r8,%rax
    dc60:	c3                   	ret    

000000000000dc61 <netdev_rx_flush>:
    dc61:	53                   	push   %rbx
    dc62:	48 89 fb             	mov    %rdi,%rbx
    dc65:	48 89 df             	mov    %rbx,%rdi
    dc68:	e8 c7 ff ff ff       	call   dc34 <netdev_rx_dequeue>
    dc6d:	48 89 c6             	mov    %rax,%rsi
    dc70:	48 85 c0             	test   %rax,%rax
    dc73:	74 0f                	je     dc84 <netdev_rx_flush+0x23>
    dc75:	ba 6b 9f f7 f4       	mov    $0xf4f79f6b,%edx
    dc7a:	48 89 df             	mov    %rbx,%rdi
    dc7d:	e8 6a ff ff ff       	call   dbec <netdev_rx_err>
    dc82:	eb e1                	jmp    dc65 <netdev_rx_flush+0x4>
    dc84:	5b                   	pop    %rbx
    dc85:	c3                   	ret    

000000000000dc86 <free_netdev>:
    dc86:	f3 0f 1e fa          	endbr64 
    dc8a:	55                   	push   %rbp
    dc8b:	48 89 fd             	mov    %rdi,%rbp
    dc8e:	48 8d bf 88 00 00 00 	lea    0x88(%rdi),%rdi
    dc95:	e8 36 26 00 00       	call   102d0 <stop_timer>
    dc9a:	48 89 ef             	mov    %rbp,%rdi
    dc9d:	e8 02 ff ff ff       	call   dba4 <netdev_tx_flush>
    dca2:	48 89 ef             	mov    %rbp,%rdi
    dca5:	e8 b7 ff ff ff       	call   dc61 <netdev_rx_flush>
    dcaa:	48 8d bd 68 01 00 00 	lea    0x168(%rbp),%rdi
    dcb1:	e8 45 3d 00 00       	call   119fb <clear_settings>
    dcb6:	48 89 ef             	mov    %rbp,%rdi
    dcb9:	5d                   	pop    %rbp
    dcba:	e9 90 e9 ff ff       	jmp    c64f <free>

000000000000dcbf <alloc_netdev>:
    dcbf:	f3 0f 1e fa          	endbr64 
    dcc3:	53                   	push   %rbx
    dcc4:	48 8d 05 a5 af 01 00 	lea    0x1afa5(%rip),%rax        # 28c70 <dhcp_configurator>
    dccb:	48 8d 1d b6 af 01 00 	lea    0x1afb6(%rip),%rbx        # 28c88 <efi_snp_driver>
    dcd2:	48 29 c3             	sub    %rax,%rbx
    dcd5:	48 c1 fb 03          	sar    $0x3,%rbx
    dcd9:	69 db ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%ebx
    dcdf:	48 6b db 38          	imul   $0x38,%rbx,%rbx
    dce3:	48 8d bc 3b d0 01 00 	lea    0x1d0(%rbx,%rdi,1),%rdi
    dcea:	00 
    dceb:	e8 6a e9 ff ff       	call   c65a <zalloc>
    dcf0:	48 85 c0             	test   %rax,%rax
    dcf3:	0f 84 27 01 00 00    	je     de20 <alloc_netdev+0x161>
    dcf9:	48 8d 35 86 ff ff ff 	lea    -0x7a(%rip),%rsi        # dc86 <free_netdev>
    dd00:	48 89 70 08          	mov    %rsi,0x8(%rax)
    dd04:	48 8d 90 e8 00 00 00 	lea    0xe8(%rax),%rdx
    dd0b:	48 89 80 d0 00 00 00 	mov    %rax,0xd0(%rax)
    dd12:	48 8d 0d 56 fc ff ff 	lea    -0x3aa(%rip),%rcx        # d96f <netdev_link_block_expired>
    dd19:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
    dd20:	48 8d 35 b9 a1 01 00 	lea    0x1a1b9(%rip),%rsi        # 27ee0 <netdev_settings_operations>
    dd27:	48 8d 3d 5a af 01 00 	lea    0x1af5a(%rip),%rdi        # 28c88 <efi_snp_driver>
    dd2e:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)
    dd35:	48 8d 90 f8 00 00 00 	lea    0xf8(%rax),%rdx
    dd3c:	4c 8d 05 9d 86 01 00 	lea    0x1869d(%rip),%r8        # 263e0 <null_intf>
    dd43:	48 89 90 f8 00 00 00 	mov    %rdx,0xf8(%rax)
    dd4a:	48 89 90 00 01 00 00 	mov    %rdx,0x100(%rax)
    dd51:	48 8d 90 08 01 00 00 	lea    0x108(%rax),%rdx
    dd58:	48 89 90 08 01 00 00 	mov    %rdx,0x108(%rax)
    dd5f:	48 89 90 10 01 00 00 	mov    %rdx,0x110(%rax)
    dd66:	48 8d 90 80 01 00 00 	lea    0x180(%rax),%rdx
    dd6d:	48 89 90 80 01 00 00 	mov    %rdx,0x180(%rax)
    dd74:	48 89 90 88 01 00 00 	mov    %rdx,0x188(%rax)
    dd7b:	48 8d 90 90 01 00 00 	lea    0x190(%rax),%rdx
    dd82:	c7 80 84 00 00 00 6c 	movl   $0xe5f79e6c,0x84(%rax)
    dd89:	9e f7 e5 
    dd8c:	48 89 80 68 01 00 00 	mov    %rax,0x168(%rax)
    dd93:	48 c7 80 a8 01 00 00 	movq   $0x0,0x1a8(%rax)
    dd9a:	00 00 00 00 
    dd9e:	48 89 90 90 01 00 00 	mov    %rdx,0x190(%rax)
    dda5:	48 89 90 98 01 00 00 	mov    %rdx,0x198(%rax)
    ddac:	48 8d 90 b8 01 00 00 	lea    0x1b8(%rax),%rdx
    ddb3:	48 89 88 c8 00 00 00 	mov    %rcx,0xc8(%rax)
    ddba:	48 8d 0d af ae 01 00 	lea    0x1aeaf(%rip),%rcx        # 28c70 <dhcp_configurator>
    ddc1:	48 89 90 b8 01 00 00 	mov    %rdx,0x1b8(%rax)
    ddc8:	48 89 90 c0 01 00 00 	mov    %rdx,0x1c0(%rax)
    ddcf:	48 8d 90 d0 01 00 00 	lea    0x1d0(%rax),%rdx
    ddd6:	48 89 b0 a0 01 00 00 	mov    %rsi,0x1a0(%rax)
    dddd:	48 8d 35 fc 8a 01 00 	lea    0x18afc(%rip),%rsi        # 268e0 <netdev_config_desc>
    dde4:	48 39 f9             	cmp    %rdi,%rcx
    dde7:	73 28                	jae    de11 <alloc_netdev+0x152>
    dde9:	48 89 02             	mov    %rax,(%rdx)
    ddec:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    ddf0:	c7 42 10 6c 9d f7 e5 	movl   $0xe5f79d6c,0x10(%rdx)
    ddf7:	48 83 c1 18          	add    $0x18,%rcx
    ddfb:	48 83 c2 38          	add    $0x38,%rdx
    ddff:	4c 89 42 e0          	mov    %r8,-0x20(%rdx)
    de03:	48 89 42 e8          	mov    %rax,-0x18(%rdx)
    de07:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    de0b:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    de0f:	eb d3                	jmp    dde4 <alloc_netdev+0x125>
    de11:	48 8d 94 18 d0 01 00 	lea    0x1d0(%rax,%rbx,1),%rdx
    de18:	00 
    de19:	48 89 90 c8 01 00 00 	mov    %rdx,0x1c8(%rax)
    de20:	5b                   	pop    %rbx
    de21:	c3                   	ret    

000000000000de22 <netdev_open>:
    de22:	f3 0f 1e fa          	endbr64 
    de26:	41 54                	push   %r12
    de28:	45 31 e4             	xor    %r12d,%r12d
    de2b:	55                   	push   %rbp
    de2c:	51                   	push   %rcx
    de2d:	8b 87 80 00 00 00    	mov    0x80(%rdi),%eax
    de33:	a8 01                	test   $0x1,%al
    de35:	75 3a                	jne    de71 <netdev_open+0x4f>
    de37:	83 c8 01             	or     $0x1,%eax
    de3a:	48 89 fd             	mov    %rdi,%rbp
    de3d:	89 87 80 00 00 00    	mov    %eax,0x80(%rdi)
    de43:	48 8b 47 48          	mov    0x48(%rdi),%rax
    de47:	ff 10                	call   *(%rax)
    de49:	41 89 c4             	mov    %eax,%r12d
    de4c:	85 c0                	test   %eax,%eax
    de4e:	74 09                	je     de59 <netdev_open+0x37>
    de50:	83 a5 80 00 00 00 fe 	andl   $0xfffffffe,0x80(%rbp)
    de57:	eb 18                	jmp    de71 <netdev_open+0x4f>
    de59:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    de5d:	48 8d 35 ac 8a 01 00 	lea    0x18aac(%rip),%rsi        # 26910 <open_net_devices>
    de64:	e8 58 e2 ff ff       	call   c0c1 <extern_list_add>
    de69:	48 89 ef             	mov    %rbp,%rdi
    de6c:	e8 cb fa ff ff       	call   d93c <netdev_notify>
    de71:	44 89 e0             	mov    %r12d,%eax
    de74:	5a                   	pop    %rdx
    de75:	5d                   	pop    %rbp
    de76:	41 5c                	pop    %r12
    de78:	c3                   	ret    

000000000000de79 <netdev_close>:
    de79:	f3 0f 1e fa          	endbr64 
    de7d:	f6 87 80 00 00 00 01 	testb  $0x1,0x80(%rdi)
    de84:	0f 84 83 00 00 00    	je     df0d <netdev_close+0x94>
    de8a:	48 8d 05 f7 ad 01 00 	lea    0x1adf7(%rip),%rax        # 28c88 <efi_snp_driver>
    de91:	48 8d 15 d8 ad 01 00 	lea    0x1add8(%rip),%rdx        # 28c70 <dhcp_configurator>
    de98:	41 54                	push   %r12
    de9a:	48 29 d0             	sub    %rdx,%rax
    de9d:	55                   	push   %rbp
    de9e:	48 89 fd             	mov    %rdi,%rbp
    dea1:	48 c1 f8 03          	sar    $0x3,%rax
    dea5:	53                   	push   %rbx
    dea6:	48 8d 9f e8 01 00 00 	lea    0x1e8(%rdi),%rbx
    dead:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax
    deb3:	48 6b c0 38          	imul   $0x38,%rax,%rax
    deb7:	4c 8d a4 07 e8 01 00 	lea    0x1e8(%rdi,%rax,1),%r12
    debe:	00 
    debf:	4c 39 e3             	cmp    %r12,%rbx
    dec2:	74 13                	je     ded7 <netdev_close+0x5e>
    dec4:	be 6b 9f f7 f4       	mov    $0xf4f79f6b,%esi
    dec9:	48 89 df             	mov    %rbx,%rdi
    decc:	48 83 c3 38          	add    $0x38,%rbx
    ded0:	e8 8a b9 ff ff       	call   985f <intf_close>
    ded5:	eb e8                	jmp    debf <netdev_close+0x46>
    ded7:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
    dedb:	e8 4d fa ff ff       	call   d92d <inline_list_del>
    dee0:	83 a5 80 00 00 00 fe 	andl   $0xfffffffe,0x80(%rbp)
    dee7:	48 89 ef             	mov    %rbp,%rdi
    deea:	e8 4d fa ff ff       	call   d93c <netdev_notify>
    deef:	48 8b 45 48          	mov    0x48(%rbp),%rax
    def3:	48 89 ef             	mov    %rbp,%rdi
    def6:	ff 50 08             	call   *0x8(%rax)
    def9:	48 89 ef             	mov    %rbp,%rdi
    defc:	e8 a3 fc ff ff       	call   dba4 <netdev_tx_flush>
    df01:	5b                   	pop    %rbx
    df02:	48 89 ef             	mov    %rbp,%rdi
    df05:	5d                   	pop    %rbp
    df06:	41 5c                	pop    %r12
    df08:	e9 54 fd ff ff       	jmp    dc61 <netdev_rx_flush>
    df0d:	c3                   	ret    

000000000000df0e <unregister_netdev>:
    df0e:	f3 0f 1e fa          	endbr64 
    df12:	41 54                	push   %r12
    df14:	4c 8d 25 6d ad 01 00 	lea    0x1ad6d(%rip),%r12        # 28c88 <efi_snp_driver>
    df1b:	55                   	push   %rbp
    df1c:	48 89 fd             	mov    %rdi,%rbp
    df1f:	53                   	push   %rbx
    df20:	48 8d 1d 81 ad 01 00 	lea    0x1ad81(%rip),%rbx        # 28ca8 <neighbour_net_driver>
    df27:	e8 4d ff ff ff       	call   de79 <netdev_close>
    df2c:	4c 39 e3             	cmp    %r12,%rbx
    df2f:	72 14                	jb     df45 <unregister_netdev+0x37>
    df31:	48 8b 43 18          	mov    0x18(%rbx),%rax
    df35:	48 85 c0             	test   %rax,%rax
    df38:	74 05                	je     df3f <unregister_netdev+0x31>
    df3a:	48 89 ef             	mov    %rbp,%rdi
    df3d:	ff d0                	call   *%rax
    df3f:	48 83 eb 20          	sub    $0x20,%rbx
    df43:	eb e7                	jmp    df2c <unregister_netdev+0x1e>
    df45:	4c 8d a5 68 01 00 00 	lea    0x168(%rbp),%r12
    df4c:	4c 89 e7             	mov    %r12,%rdi
    df4f:	e8 a7 3a 00 00       	call   119fb <clear_settings>
    df54:	4c 89 e7             	mov    %r12,%rdi
    df57:	e8 06 39 00 00       	call   11862 <unregister_settings>
    df5c:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    df60:	e8 c8 f9 ff ff       	call   d92d <inline_list_del>
    df65:	48 89 ef             	mov    %rbp,%rdi
    df68:	e8 d1 1e 00 00       	call   fe3e <ref_decrement>
    df6d:	48 8d 05 ac 89 01 00 	lea    0x189ac(%rip),%rax        # 26920 <net_devices>
    df74:	48 39 00             	cmp    %rax,(%rax)
    df77:	75 0a                	jne    df83 <unregister_netdev+0x75>
    df79:	c7 05 e9 bc 01 00 00 	movl   $0x0,0x1bce9(%rip)        # 29c6c <netdev_index>
    df80:	00 00 00 
    df83:	5b                   	pop    %rbx
    df84:	5d                   	pop    %rbp
    df85:	41 5c                	pop    %r12
    df87:	c3                   	ret    

000000000000df88 <find_netdev_by_ll_addr>:
    df88:	f3 0f 1e fa          	endbr64 
    df8c:	41 55                	push   %r13
    df8e:	4c 8d 2d 8b 89 01 00 	lea    0x1898b(%rip),%r13        # 26920 <net_devices>
    df95:	41 54                	push   %r12
    df97:	55                   	push   %rbp
    df98:	48 89 f5             	mov    %rsi,%rbp
    df9b:	53                   	push   %rbx
    df9c:	48 89 fb             	mov    %rdi,%rbx
    df9f:	51                   	push   %rcx
    dfa0:	48 8b 05 79 89 01 00 	mov    0x18979(%rip),%rax        # 26920 <net_devices>
    dfa7:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
    dfab:	49 8d 44 24 10       	lea    0x10(%r12),%rax
    dfb0:	4c 39 e8             	cmp    %r13,%rax
    dfb3:	74 27                	je     dfdc <find_netdev_by_ll_addr+0x54>
    dfb5:	49 39 5c 24 50       	cmp    %rbx,0x50(%r12)
    dfba:	75 15                	jne    dfd1 <find_netdev_by_ll_addr+0x49>
    dfbc:	0f b6 53 43          	movzbl 0x43(%rbx),%edx
    dfc0:	49 8d 7c 24 60       	lea    0x60(%r12),%rdi
    dfc5:	48 89 ee             	mov    %rbp,%rsi
    dfc8:	e8 87 58 00 00       	call   13854 <memcmp>
    dfcd:	85 c0                	test   %eax,%eax
    dfcf:	74 0e                	je     dfdf <find_netdev_by_ll_addr+0x57>
    dfd1:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
    dfd6:	49 83 ec 10          	sub    $0x10,%r12
    dfda:	eb cf                	jmp    dfab <find_netdev_by_ll_addr+0x23>
    dfdc:	45 31 e4             	xor    %r12d,%r12d
    dfdf:	5a                   	pop    %rdx
    dfe0:	4c 89 e0             	mov    %r12,%rax
    dfe3:	5b                   	pop    %rbx
    dfe4:	5d                   	pop    %rbp
    dfe5:	41 5c                	pop    %r12
    dfe7:	41 5d                	pop    %r13
    dfe9:	c3                   	ret    

000000000000dfea <last_opened_netdev>:
    dfea:	f3 0f 1e fa          	endbr64 
    dfee:	48 8b 15 1b 89 01 00 	mov    0x1891b(%rip),%rdx        # 26910 <open_net_devices>
    dff5:	48 8d 0d 14 89 01 00 	lea    0x18914(%rip),%rcx        # 26910 <open_net_devices>
    dffc:	31 c0                	xor    %eax,%eax
    dffe:	48 39 ca             	cmp    %rcx,%rdx
    e001:	74 04                	je     e007 <last_opened_netdev+0x1d>
    e003:	48 8d 42 e0          	lea    -0x20(%rdx),%rax
    e007:	c3                   	ret    

000000000000e008 <find_netdev>:
    e008:	f3 0f 1e fa          	endbr64 
    e00c:	41 54                	push   %r12
    e00e:	48 8d 35 8c 54 01 00 	lea    0x1548c(%rip),%rsi        # 234a1 <.LC0>
    e015:	55                   	push   %rbp
    e016:	53                   	push   %rbx
    e017:	48 89 fb             	mov    %rdi,%rbx
    e01a:	e8 c1 58 00 00       	call   138e0 <strcmp>
    e01f:	85 c0                	test   %eax,%eax
    e021:	75 09                	jne    e02c <find_netdev+0x24>
    e023:	5b                   	pop    %rbx
    e024:	5d                   	pop    %rbp
    e025:	41 5c                	pop    %r12
    e027:	e9 be ff ff ff       	jmp    dfea <last_opened_netdev>
    e02c:	48 8b 05 ed 88 01 00 	mov    0x188ed(%rip),%rax        # 26920 <net_devices>
    e033:	48 8d 2d e6 88 01 00 	lea    0x188e6(%rip),%rbp        # 26920 <net_devices>
    e03a:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
    e03e:	49 8d 44 24 10       	lea    0x10(%r12),%rax
    e043:	48 39 e8             	cmp    %rbp,%rax
    e046:	74 1c                	je     e064 <find_netdev+0x5c>
    e048:	49 8d 7c 24 34       	lea    0x34(%r12),%rdi
    e04d:	48 89 de             	mov    %rbx,%rsi
    e050:	e8 8b 58 00 00       	call   138e0 <strcmp>
    e055:	85 c0                	test   %eax,%eax
    e057:	74 0e                	je     e067 <find_netdev+0x5f>
    e059:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
    e05e:	49 83 ec 10          	sub    $0x10,%r12
    e062:	eb da                	jmp    e03e <find_netdev+0x36>
    e064:	45 31 e4             	xor    %r12d,%r12d
    e067:	4c 89 e0             	mov    %r12,%rax
    e06a:	5b                   	pop    %rbx
    e06b:	5d                   	pop    %rbp
    e06c:	41 5c                	pop    %r12
    e06e:	c3                   	ret    

000000000000e06f <register_netdev>:
    e06f:	f3 0f 1e fa          	endbr64 
    e073:	41 57                	push   %r15
    e075:	31 c0                	xor    %eax,%eax
    e077:	41 56                	push   %r14
    e079:	41 55                	push   %r13
    e07b:	4c 8d 6f 60          	lea    0x60(%rdi),%r13
    e07f:	41 54                	push   %r12
    e081:	55                   	push   %rbp
    e082:	48 89 fd             	mov    %rdi,%rbp
    e085:	53                   	push   %rbx
    e086:	51                   	push   %rcx
    e087:	48 8b 5f 50          	mov    0x50(%rdi),%rbx
    e08b:	48 ff c0             	inc    %rax
    e08e:	80 7c 05 5f 00       	cmpb   $0x0,0x5f(%rbp,%rax,1)
    e093:	75 10                	jne    e0a5 <register_netdev+0x36>
    e095:	48 83 f8 14          	cmp    $0x14,%rax
    e099:	75 f0                	jne    e08b <register_netdev+0x1c>
    e09b:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
    e09f:	4c 89 ee             	mov    %r13,%rsi
    e0a2:	ff 53 18             	call   *0x18(%rbx)
    e0a5:	48 83 bd e0 00 00 00 	cmpq   $0x0,0xe0(%rbp)
    e0ac:	00 
    e0ad:	75 15                	jne    e0c4 <register_netdev+0x55>
    e0af:	0f b6 53 44          	movzbl 0x44(%rbx),%edx
    e0b3:	48 8b 85 d8 00 00 00 	mov    0xd8(%rbp),%rax
    e0ba:	48 29 d0             	sub    %rdx,%rax
    e0bd:	48 89 85 e0 00 00 00 	mov    %rax,0xe0(%rbp)
    e0c4:	4c 89 ee             	mov    %r13,%rsi
    e0c7:	48 89 df             	mov    %rbx,%rdi
    e0ca:	e8 b9 fe ff ff       	call   df88 <find_netdev_by_ll_addr>
    e0cf:	48 85 c0             	test   %rax,%rax
    e0d2:	74 0c                	je     e0e0 <register_netdev+0x71>
    e0d4:	48 8b 4d 40          	mov    0x40(%rbp),%rcx
    e0d8:	48 39 48 40          	cmp    %rcx,0x40(%rax)
    e0dc:	74 02                	je     e0e0 <register_netdev+0x71>
    e0de:	eb 17                	jmp    e0f7 <register_netdev+0x88>
    e0e0:	80 7d 34 00          	cmpb   $0x0,0x34(%rbp)
    e0e4:	4c 8d 65 34          	lea    0x34(%rbp),%r12
    e0e8:	74 18                	je     e102 <register_netdev+0x93>
    e0ea:	4c 89 e7             	mov    %r12,%rdi
    e0ed:	e8 16 ff ff ff       	call   e008 <find_netdev>
    e0f2:	48 85 c0             	test   %rax,%rax
    e0f5:	74 27                	je     e11e <register_netdev+0xaf>
    e0f7:	41 bf 78 9f f7 eb    	mov    $0xebf79f78,%r15d
    e0fd:	e9 ef 00 00 00       	jmp    e1f1 <register_netdev+0x182>
    e102:	8b 0d 64 bb 01 00    	mov    0x1bb64(%rip),%ecx        # 29c6c <netdev_index>
    e108:	be 0c 00 00 00       	mov    $0xc,%esi
    e10d:	4c 89 e7             	mov    %r12,%rdi
    e110:	31 c0                	xor    %eax,%eax
    e112:	48 8d 15 8d 53 01 00 	lea    0x1538d(%rip),%rdx        # 234a6 <.LC1>
    e119:	e8 63 8f 00 00       	call   17081 <snprintf>
    e11e:	8b 05 48 bb 01 00    	mov    0x1bb48(%rip),%eax        # 29c6c <netdev_index>
    e124:	4c 8d 75 10          	lea    0x10(%rbp),%r14
    e128:	ff c0                	inc    %eax
    e12a:	89 45 30             	mov    %eax,0x30(%rbp)
    e12d:	89 05 39 bb 01 00    	mov    %eax,0x1bb39(%rip)        # 29c6c <netdev_index>
    e133:	0f b6 43 43          	movzbl 0x43(%rbx),%eax
    e137:	41 8b 5c 05 fc       	mov    -0x4(%r13,%rax,1),%ebx
    e13c:	4c 8d ad 68 01 00 00 	lea    0x168(%rbp),%r13
    e143:	e8 f9 18 00 00       	call   fa41 <random>
    e148:	31 c3                	xor    %eax,%ebx
    e14a:	89 df                	mov    %ebx,%edi
    e14c:	48 8d 1d 35 ab 01 00 	lea    0x1ab35(%rip),%rbx        # 28c88 <efi_snp_driver>
    e153:	e8 d4 18 00 00       	call   fa2c <srandom>
    e158:	48 89 ef             	mov    %rbp,%rdi
    e15b:	e8 d2 1c 00 00       	call   fe32 <ref_increment>
    e160:	48 8d 35 b9 87 01 00 	lea    0x187b9(%rip),%rsi        # 26920 <net_devices>
    e167:	4c 89 f7             	mov    %r14,%rdi
    e16a:	e8 68 df ff ff       	call   c0d7 <extern_list_add_tail>
    e16f:	4c 89 e2             	mov    %r12,%rdx
    e172:	31 f6                	xor    %esi,%esi
    e174:	4c 89 ef             	mov    %r13,%rdi
    e177:	e8 42 3e 00 00       	call   11fbe <register_settings>
    e17c:	41 89 c7             	mov    %eax,%r15d
    e17f:	85 c0                	test   %eax,%eax
    e181:	75 5e                	jne    e1e1 <register_netdev+0x172>
    e183:	48 8d 05 3e ab 01 00 	lea    0x1ab3e(%rip),%rax        # 28cc8 <ipv4_protocol>
    e18a:	48 39 c3             	cmp    %rax,%rbx
    e18d:	73 62                	jae    e1f1 <register_netdev+0x182>
    e18f:	48 8b 43 08          	mov    0x8(%rbx),%rax
    e193:	48 85 c0             	test   %rax,%rax
    e196:	74 19                	je     e1b1 <register_netdev+0x142>
    e198:	48 89 ef             	mov    %rbp,%rdi
    e19b:	ff d0                	call   *%rax
    e19d:	41 89 c4             	mov    %eax,%r12d
    e1a0:	85 c0                	test   %eax,%eax
    e1a2:	74 0d                	je     e1b1 <register_netdev+0x142>
    e1a4:	48 83 eb 20          	sub    $0x20,%rbx
    e1a8:	4c 8d 3d d9 aa 01 00 	lea    0x1aad9(%rip),%r15        # 28c88 <efi_snp_driver>
    e1af:	eb 18                	jmp    e1c9 <register_netdev+0x15a>
    e1b1:	48 83 c3 20          	add    $0x20,%rbx
    e1b5:	eb cc                	jmp    e183 <register_netdev+0x114>
    e1b7:	48 8b 43 18          	mov    0x18(%rbx),%rax
    e1bb:	48 85 c0             	test   %rax,%rax
    e1be:	74 05                	je     e1c5 <register_netdev+0x156>
    e1c0:	48 89 ef             	mov    %rbp,%rdi
    e1c3:	ff d0                	call   *%rax
    e1c5:	48 83 eb 20          	sub    $0x20,%rbx
    e1c9:	4c 39 fb             	cmp    %r15,%rbx
    e1cc:	73 e9                	jae    e1b7 <register_netdev+0x148>
    e1ce:	4c 89 ef             	mov    %r13,%rdi
    e1d1:	45 89 e7             	mov    %r12d,%r15d
    e1d4:	e8 22 38 00 00       	call   119fb <clear_settings>
    e1d9:	4c 89 ef             	mov    %r13,%rdi
    e1dc:	e8 81 36 00 00       	call   11862 <unregister_settings>
    e1e1:	4c 89 f7             	mov    %r14,%rdi
    e1e4:	e8 44 f7 ff ff       	call   d92d <inline_list_del>
    e1e9:	48 89 ef             	mov    %rbp,%rdi
    e1ec:	e8 4d 1c 00 00       	call   fe3e <ref_decrement>
    e1f1:	5a                   	pop    %rdx
    e1f2:	44 89 f8             	mov    %r15d,%eax
    e1f5:	5b                   	pop    %rbx
    e1f6:	5d                   	pop    %rbp
    e1f7:	41 5c                	pop    %r12
    e1f9:	41 5d                	pop    %r13
    e1fb:	41 5e                	pop    %r14
    e1fd:	41 5f                	pop    %r15
    e1ff:	c3                   	ret    

000000000000e200 <net_tx>:
    e200:	f3 0f 1e fa          	endbr64 
    e204:	55                   	push   %rbp
    e205:	49 89 d1             	mov    %rdx,%r9
    e208:	48 89 fd             	mov    %rdi,%rbp
    e20b:	48 89 f7             	mov    %rsi,%rdi
    e20e:	48 89 ca             	mov    %rcx,%rdx
    e211:	4c 89 c1             	mov    %r8,%rcx
    e214:	48 83 ec 10          	sub    $0x10,%rsp
    e218:	48 8b 46 50          	mov    0x50(%rsi),%rax
    e21c:	45 0f b7 41 18       	movzwl 0x18(%r9),%r8d
    e221:	48 89 ee             	mov    %rbp,%rsi
    e224:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    e229:	ff 50 08             	call   *0x8(%rax)
    e22c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    e231:	85 c0                	test   %eax,%eax
    e233:	75 0d                	jne    e242 <net_tx+0x42>
    e235:	48 83 c4 10          	add    $0x10,%rsp
    e239:	48 89 ee             	mov    %rbp,%rsi
    e23c:	5d                   	pop    %rbp
    e23d:	e9 e0 f8 ff ff       	jmp    db22 <netdev_tx>
    e242:	89 c2                	mov    %eax,%edx
    e244:	48 89 ee             	mov    %rbp,%rsi
    e247:	89 44 24 08          	mov    %eax,0x8(%rsp)
    e24b:	e8 41 f8 ff ff       	call   da91 <netdev_tx_err>
    e250:	8b 44 24 08          	mov    0x8(%rsp),%eax
    e254:	48 83 c4 10          	add    $0x10,%rsp
    e258:	5d                   	pop    %rbp
    e259:	c3                   	ret    

000000000000e25a <net_rx>:
    e25a:	f3 0f 1e fa          	endbr64 
    e25e:	49 89 ca             	mov    %rcx,%r10
    e261:	48 8d 05 60 aa 01 00 	lea    0x1aa60(%rip),%rax        # 28cc8 <ipv4_protocol>
    e268:	4c 89 c1             	mov    %r8,%rcx
    e26b:	45 89 c8             	mov    %r9d,%r8d
    e26e:	4c 8d 0d f3 aa 01 00 	lea    0x1aaf3(%rip),%r9        # 28d68 <intel_driver>
    e275:	4c 39 c8             	cmp    %r9,%rax
    e278:	73 15                	jae    e28f <net_rx+0x35>
    e27a:	66 39 50 18          	cmp    %dx,0x18(%rax)
    e27e:	75 09                	jne    e289 <net_rx+0x2f>
    e280:	48 8b 40 08          	mov    0x8(%rax),%rax
    e284:	4c 89 d2             	mov    %r10,%rdx
    e287:	ff e0                	jmp    *%rax
    e289:	48 83 c0 20          	add    $0x20,%rax
    e28d:	eb e6                	jmp    e275 <net_rx+0x1b>
    e28f:	50                   	push   %rax
    e290:	e8 01 ba ff ff       	call   9c96 <free_iob>
    e295:	b8 7d 9f f7 c3       	mov    $0xc3f79f7d,%eax
    e29a:	5a                   	pop    %rdx
    e29b:	c3                   	ret    

000000000000e29c <net_poll>:
    e29c:	f3 0f 1e fa          	endbr64 
    e2a0:	41 55                	push   %r13
    e2a2:	41 54                	push   %r12
    e2a4:	4c 8d 25 75 86 01 00 	lea    0x18675(%rip),%r12        # 26920 <net_devices>
    e2ab:	55                   	push   %rbp
    e2ac:	53                   	push   %rbx
    e2ad:	48 83 ec 28          	sub    $0x28,%rsp
    e2b1:	48 8b 05 b8 bc 01 00 	mov    0x1bcb8(%rip),%rax        # 29f70 <__stack_chk_guard>
    e2b8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    e2bd:	48 8b 05 5c 86 01 00 	mov    0x1865c(%rip),%rax        # 26920 <net_devices>
    e2c4:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
    e2c8:	48 8d 43 10          	lea    0x10(%rbx),%rax
    e2cc:	4c 39 e0             	cmp    %r12,%rax
    e2cf:	0f 84 8e 00 00 00    	je     e363 <net_poll+0xc7>
    e2d5:	48 89 df             	mov    %rbx,%rdi
    e2d8:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    e2dd:	e8 3d f9 ff ff       	call   dc1f <netdev_poll>
    e2e2:	f6 83 80 00 00 00 04 	testb  $0x4,0x80(%rbx)
    e2e9:	74 35                	je     e320 <net_poll+0x84>
    e2eb:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    e2ef:	48 83 eb 10          	sub    $0x10,%rbx
    e2f3:	eb d3                	jmp    e2c8 <net_poll+0x2c>
    e2f5:	48 8b 43 50          	mov    0x50(%rbx),%rax
    e2f9:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    e2fe:	4d 89 e9             	mov    %r13,%r9
    e301:	48 89 ee             	mov    %rbp,%rsi
    e304:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    e309:	4c 8d 44 24 02       	lea    0x2(%rsp),%r8
    e30e:	48 89 df             	mov    %rbx,%rdi
    e311:	ff 50 10             	call   *0x10(%rax)
    e314:	85 c0                	test   %eax,%eax
    e316:	74 1a                	je     e332 <net_poll+0x96>
    e318:	48 89 ef             	mov    %rbp,%rdi
    e31b:	e8 76 b9 ff ff       	call   9c96 <free_iob>
    e320:	48 89 df             	mov    %rbx,%rdi
    e323:	e8 0c f9 ff ff       	call   dc34 <netdev_rx_dequeue>
    e328:	48 89 c5             	mov    %rax,%rbp
    e32b:	48 85 c0             	test   %rax,%rax
    e32e:	75 c5                	jne    e2f5 <net_poll+0x59>
    e330:	eb b9                	jmp    e2eb <net_poll+0x4f>
    e332:	0f b7 54 24 02       	movzwl 0x2(%rsp),%edx
    e337:	44 8b 4c 24 04       	mov    0x4(%rsp),%r9d
    e33c:	48 89 de             	mov    %rbx,%rsi
    e33f:	48 89 ef             	mov    %rbp,%rdi
    e342:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    e347:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e34c:	e8 09 ff ff ff       	call   e25a <net_rx>
    e351:	89 c2                	mov    %eax,%edx
    e353:	85 c0                	test   %eax,%eax
    e355:	74 c9                	je     e320 <net_poll+0x84>
    e357:	31 f6                	xor    %esi,%esi
    e359:	48 89 df             	mov    %rbx,%rdi
    e35c:	e8 8b f8 ff ff       	call   dbec <netdev_rx_err>
    e361:	eb bd                	jmp    e320 <net_poll+0x84>
    e363:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    e368:	48 2b 05 01 bc 01 00 	sub    0x1bc01(%rip),%rax        # 29f70 <__stack_chk_guard>
    e36f:	74 05                	je     e376 <net_poll+0xda>
    e371:	e8 ea 46 ff ff       	call   2a60 <__stack_chk_fail>
    e376:	48 83 c4 28          	add    $0x28,%rsp
    e37a:	5b                   	pop    %rbx
    e37b:	5d                   	pop    %rbp
    e37c:	41 5c                	pop    %r12
    e37e:	41 5d                	pop    %r13
    e380:	c3                   	ret    

000000000000e381 <net_step>:
    e381:	f3 0f 1e fa          	endbr64 
    e385:	e9 12 ff ff ff       	jmp    e29c <net_poll>

000000000000e38a <vlan_tag>:
    e38a:	f3 0f 1e fa          	endbr64 
    e38e:	31 c0                	xor    %eax,%eax
    e390:	c3                   	ret    

000000000000e391 <find_netdev_configurator>:
    e391:	f3 0f 1e fa          	endbr64 
    e395:	41 54                	push   %r12
    e397:	4c 8d 25 d2 a8 01 00 	lea    0x1a8d2(%rip),%r12        # 28c70 <dhcp_configurator>
    e39e:	55                   	push   %rbp
    e39f:	48 8d 2d e2 a8 01 00 	lea    0x1a8e2(%rip),%rbp        # 28c88 <efi_snp_driver>
    e3a6:	53                   	push   %rbx
    e3a7:	48 89 fb             	mov    %rdi,%rbx
    e3aa:	49 39 ec             	cmp    %rbp,%r12
    e3ad:	73 16                	jae    e3c5 <find_netdev_configurator+0x34>
    e3af:	49 8b 3c 24          	mov    (%r12),%rdi
    e3b3:	48 89 de             	mov    %rbx,%rsi
    e3b6:	e8 25 55 00 00       	call   138e0 <strcmp>
    e3bb:	85 c0                	test   %eax,%eax
    e3bd:	74 09                	je     e3c8 <find_netdev_configurator+0x37>
    e3bf:	49 83 c4 18          	add    $0x18,%r12
    e3c3:	eb e5                	jmp    e3aa <find_netdev_configurator+0x19>
    e3c5:	45 31 e4             	xor    %r12d,%r12d
    e3c8:	4c 89 e0             	mov    %r12,%rax
    e3cb:	5b                   	pop    %rbx
    e3cc:	5d                   	pop    %rbp
    e3cd:	41 5c                	pop    %r12
    e3cf:	c3                   	ret    

000000000000e3d0 <netdev_configure>:
    e3d0:	f3 0f 1e fa          	endbr64 
    e3d4:	41 55                	push   %r13
    e3d6:	48 8d 05 93 a8 01 00 	lea    0x1a893(%rip),%rax        # 28c70 <dhcp_configurator>
    e3dd:	41 54                	push   %r12
    e3df:	49 89 fc             	mov    %rdi,%r12
    e3e2:	55                   	push   %rbp
    e3e3:	48 89 f5             	mov    %rsi,%rbp
    e3e6:	53                   	push   %rbx
    e3e7:	48 89 f3             	mov    %rsi,%rbx
    e3ea:	48 29 c3             	sub    %rax,%rbx
    e3ed:	51                   	push   %rcx
    e3ee:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    e3f5:	aa aa aa 
    e3f8:	48 c1 fb 03          	sar    $0x3,%rbx
    e3fc:	48 0f af d8          	imul   %rax,%rbx
    e400:	48 8b 46 08          	mov    0x8(%rsi),%rax
    e404:	48 85 c0             	test   %rax,%rax
    e407:	74 0d                	je     e416 <netdev_configure+0x46>
    e409:	ff d0                	call   *%rax
    e40b:	85 c0                	test   %eax,%eax
    e40d:	75 07                	jne    e416 <netdev_configure+0x46>
    e40f:	b8 7d 9f f7 c3       	mov    $0xc3f79f7d,%eax
    e414:	eb 3b                	jmp    e451 <netdev_configure+0x81>
    e416:	89 db                	mov    %ebx,%ebx
    e418:	be 6b 9f f7 f4       	mov    $0xf4f79f6b,%esi
    e41d:	48 6b db 38          	imul   $0x38,%rbx,%rbx
    e421:	4d 8d ac 1c e8 01 00 	lea    0x1e8(%r12,%rbx,1),%r13
    e428:	00 
    e429:	4c 89 ef             	mov    %r13,%rdi
    e42c:	e8 17 b4 ff ff       	call   9848 <intf_restart>
    e431:	4c 01 e3             	add    %r12,%rbx
    e434:	4c 89 e6             	mov    %r12,%rsi
    e437:	4c 89 ef             	mov    %r13,%rdi
    e43a:	c7 83 e0 01 00 00 6c 	movl   $0xe5f79c6c,0x1e0(%rbx)
    e441:	9c f7 e5 
    e444:	ff 55 10             	call   *0x10(%rbp)
    e447:	85 c0                	test   %eax,%eax
    e449:	74 06                	je     e451 <netdev_configure+0x81>
    e44b:	89 83 e0 01 00 00    	mov    %eax,0x1e0(%rbx)
    e451:	5a                   	pop    %rdx
    e452:	5b                   	pop    %rbx
    e453:	5d                   	pop    %rbp
    e454:	41 5c                	pop    %r12
    e456:	41 5d                	pop    %r13
    e458:	c3                   	ret    

000000000000e459 <netdev_configure_all>:
    e459:	f3 0f 1e fa          	endbr64 
    e45d:	41 54                	push   %r12
    e45f:	4c 8d 25 22 a8 01 00 	lea    0x1a822(%rip),%r12        # 28c88 <efi_snp_driver>
    e466:	55                   	push   %rbp
    e467:	48 89 fd             	mov    %rdi,%rbp
    e46a:	53                   	push   %rbx
    e46b:	48 8d 1d fe a7 01 00 	lea    0x1a7fe(%rip),%rbx        # 28c70 <dhcp_configurator>
    e472:	4c 39 e3             	cmp    %r12,%rbx
    e475:	73 29                	jae    e4a0 <netdev_configure_all+0x47>
    e477:	48 8b 43 08          	mov    0x8(%rbx),%rax
    e47b:	48 85 c0             	test   %rax,%rax
    e47e:	75 11                	jne    e491 <netdev_configure_all+0x38>
    e480:	48 89 de             	mov    %rbx,%rsi
    e483:	48 89 ef             	mov    %rbp,%rdi
    e486:	e8 45 ff ff ff       	call   e3d0 <netdev_configure>
    e48b:	85 c0                	test   %eax,%eax
    e48d:	74 0b                	je     e49a <netdev_configure_all+0x41>
    e48f:	eb 11                	jmp    e4a2 <netdev_configure_all+0x49>
    e491:	48 89 ef             	mov    %rbp,%rdi
    e494:	ff d0                	call   *%rax
    e496:	85 c0                	test   %eax,%eax
    e498:	75 e6                	jne    e480 <netdev_configure_all+0x27>
    e49a:	48 83 c3 18          	add    $0x18,%rbx
    e49e:	eb d2                	jmp    e472 <netdev_configure_all+0x19>
    e4a0:	31 c0                	xor    %eax,%eax
    e4a2:	5b                   	pop    %rbx
    e4a3:	5d                   	pop    %rbp
    e4a4:	41 5c                	pop    %r12
    e4a6:	c3                   	ret    

000000000000e4a7 <netdev_configuration_in_progress>:
    e4a7:	f3 0f 1e fa          	endbr64 
    e4ab:	48 8d 15 be a7 01 00 	lea    0x1a7be(%rip),%rdx        # 28c70 <dhcp_configurator>
    e4b2:	48 8d 05 cf a7 01 00 	lea    0x1a7cf(%rip),%rax        # 28c88 <efi_snp_driver>
    e4b9:	48 29 d0             	sub    %rdx,%rax
    e4bc:	31 d2                	xor    %edx,%edx
    e4be:	48 c1 f8 03          	sar    $0x3,%rax
    e4c2:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax
    e4c8:	39 d0                	cmp    %edx,%eax
    e4ca:	76 1a                	jbe    e4e6 <netdev_configuration_in_progress+0x3f>
    e4cc:	48 ff c2             	inc    %rdx
    e4cf:	48 6b ca 38          	imul   $0x38,%rdx,%rcx
    e4d3:	81 bc 0f a8 01 00 00 	cmpl   $0xe5f79c6c,0x1a8(%rdi,%rcx,1)
    e4da:	6c 9c f7 e5 
    e4de:	75 e8                	jne    e4c8 <netdev_configuration_in_progress+0x21>
    e4e0:	b8 01 00 00 00       	mov    $0x1,%eax
    e4e5:	c3                   	ret    
    e4e6:	31 c0                	xor    %eax,%eax
    e4e8:	c3                   	ret    

000000000000e4e9 <netdev_configuration_ok>:
    e4e9:	f3 0f 1e fa          	endbr64 
    e4ed:	48 8d 15 7c a7 01 00 	lea    0x1a77c(%rip),%rdx        # 28c70 <dhcp_configurator>
    e4f4:	48 8d 05 8d a7 01 00 	lea    0x1a78d(%rip),%rax        # 28c88 <efi_snp_driver>
    e4fb:	48 29 d0             	sub    %rdx,%rax
    e4fe:	31 d2                	xor    %edx,%edx
    e500:	48 c1 f8 03          	sar    $0x3,%rax
    e504:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax
    e50a:	39 d0                	cmp    %edx,%eax
    e50c:	76 17                	jbe    e525 <netdev_configuration_ok+0x3c>
    e50e:	48 ff c2             	inc    %rdx
    e511:	48 6b ca 38          	imul   $0x38,%rdx,%rcx
    e515:	83 bc 0f a8 01 00 00 	cmpl   $0x0,0x1a8(%rdi,%rcx,1)
    e51c:	00 
    e51d:	75 eb                	jne    e50a <netdev_configuration_ok+0x21>
    e51f:	b8 01 00 00 00       	mov    $0x1,%eax
    e524:	c3                   	ret    
    e525:	31 c0                	xor    %eax,%eax
    e527:	c3                   	ret    

000000000000e528 <null_open>:
    e528:	f3 0f 1e fa          	endbr64 
    e52c:	b8 79 9f f6 d3       	mov    $0xd3f69f79,%eax
    e531:	c3                   	ret    

000000000000e532 <null_close>:
    e532:	f3 0f 1e fa          	endbr64 
    e536:	c3                   	ret    

000000000000e537 <null_transmit>:
    e537:	f3 0f 1e fa          	endbr64 
    e53b:	b8 79 9f f6 d3       	mov    $0xd3f69f79,%eax
    e540:	c3                   	ret    

000000000000e541 <null_irq>:
    e541:	f3 0f 1e fa          	endbr64 
    e545:	c3                   	ret    

000000000000e546 <null_poll>:
    e546:	f3 0f 1e fa          	endbr64 
    e54a:	c3                   	ret    

000000000000e54b <nvo_applies>:
    e54b:	f3 0f 1e fa          	endbr64 
    e54f:	48 83 7e 20 00       	cmpq   $0x0,0x20(%rsi)
    e554:	75 13                	jne    e569 <nvo_applies+0x1e>
    e556:	50                   	push   %rax
    e557:	8b 7e 18             	mov    0x18(%rsi),%edi
    e55a:	e8 b7 c2 00 00       	call   1a816 <dhcpopt_applies>
    e55f:	5a                   	pop    %rdx
    e560:	85 c0                	test   %eax,%eax
    e562:	0f 95 c0             	setne  %al
    e565:	0f b6 c0             	movzbl %al,%eax
    e568:	c3                   	ret    
    e569:	31 c0                	xor    %eax,%eax
    e56b:	c3                   	ret    

000000000000e56c <clear_value>:
    e56c:	f3 0f 1e fa          	endbr64 
    e570:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    e577:	31 c0                	xor    %eax,%eax
    e579:	c3                   	ret    

000000000000e57a <inc_exec>:
    e57a:	f3 0f 1e fa          	endbr64 
    e57e:	41 54                	push   %r12
    e580:	48 8d 15 e9 83 01 00 	lea    0x183e9(%rip),%rdx        # 26970 <inc_cmd>
    e587:	55                   	push   %rbp
    e588:	89 fd                	mov    %edi,%ebp
    e58a:	53                   	push   %rbx
    e58b:	48 89 f3             	mov    %rsi,%rbx
    e58e:	48 83 ec 50          	sub    $0x50,%rsp
    e592:	48 8d 4c 24 0b       	lea    0xb(%rsp),%rcx
    e597:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
    e59e:	00 
    e59f:	48 8b 05 ca b9 01 00 	mov    0x1b9ca(%rip),%rax        # 29f70 <__stack_chk_guard>
    e5a6:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    e5ab:	31 c0                	xor    %eax,%eax
    e5ad:	e8 fd 0b 00 00       	call   f1af <parse_options>
    e5b2:	41 89 c4             	mov    %eax,%r12d
    e5b5:	85 c0                	test   %eax,%eax
    e5b7:	0f 85 c4 00 00 00    	jne    e681 <inc_exec+0x107>
    e5bd:	48 63 05 e4 b9 01 00 	movslq 0x1b9e4(%rip),%rax        # 29fa8 <optind>
    e5c4:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    e5c9:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    e5cd:	e8 b1 08 00 00       	call   ee83 <parse_existing_setting>
    e5d2:	41 89 c4             	mov    %eax,%r12d
    e5d5:	85 c0                	test   %eax,%eax
    e5d7:	0f 85 a4 00 00 00    	jne    e681 <inc_exec+0x107>
    e5dd:	48 63 05 c4 b9 01 00 	movslq 0x1b9c4(%rip),%rax        # 29fa8 <optind>
    e5e4:	8d 50 01             	lea    0x1(%rax),%edx
    e5e7:	39 ea                	cmp    %ebp,%edx
    e5e9:	7c 22                	jl     e60d <inc_exec+0x93>
    e5eb:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
    e5f0:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e5f5:	31 d2                	xor    %edx,%edx
    e5f7:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    e5fc:	48 89 e9             	mov    %rbp,%rcx
    e5ff:	48 89 ee             	mov    %rbp,%rsi
    e602:	e8 47 3f 00 00       	call   1254e <fetchn_setting>
    e607:	85 c0                	test   %eax,%eax
    e609:	75 1a                	jne    e625 <inc_exec+0xab>
    e60b:	eb 35                	jmp    e642 <inc_exec+0xc8>
    e60d:	48 8b 7c c3 08       	mov    0x8(%rbx,%rax,8),%rdi
    e612:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    e617:	e8 56 06 00 00       	call   ec72 <parse_integer>
    e61c:	41 89 c4             	mov    %eax,%r12d
    e61f:	85 c0                	test   %eax,%eax
    e621:	74 c8                	je     e5eb <inc_exec+0x71>
    e623:	eb 5c                	jmp    e681 <inc_exec+0x107>
    e625:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    e62c:	00 00 
    e62e:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
    e634:	75 0c                	jne    e642 <inc_exec+0xc8>
    e636:	48 8d 05 73 aa 01 00 	lea    0x1aa73(%rip),%rax        # 290b0 <setting_type_int32>
    e63d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    e642:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e647:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    e64b:	48 89 ee             	mov    %rbp,%rsi
    e64e:	48 03 54 24 10       	add    0x10(%rsp),%rdx
    e653:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    e658:	e8 6c 3f 00 00       	call   125c9 <storen_setting>
    e65d:	41 89 c4             	mov    %eax,%r12d
    e660:	85 c0                	test   %eax,%eax
    e662:	74 1d                	je     e681 <inc_exec+0x107>
    e664:	89 c7                	mov    %eax,%edi
    e666:	e8 31 51 00 00       	call   1379c <strerror>
    e66b:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    e670:	48 8d 3d 96 4d 01 00 	lea    0x14d96(%rip),%rdi        # 2340d <.LC0>
    e677:	48 89 c2             	mov    %rax,%rdx
    e67a:	31 c0                	xor    %eax,%eax
    e67c:	e8 1d 8b 00 00       	call   1719e <printf>
    e681:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    e686:	48 2b 05 e3 b8 01 00 	sub    0x1b8e3(%rip),%rax        # 29f70 <__stack_chk_guard>
    e68d:	74 05                	je     e694 <inc_exec+0x11a>
    e68f:	e8 cc 43 ff ff       	call   2a60 <__stack_chk_fail>
    e694:	48 83 c4 50          	add    $0x50,%rsp
    e698:	44 89 e0             	mov    %r12d,%eax
    e69b:	5b                   	pop    %rbx
    e69c:	5d                   	pop    %rbp
    e69d:	41 5c                	pop    %r12
    e69f:	c3                   	ret    

000000000000e6a0 <read_value>:
    e6a0:	f3 0f 1e fa          	endbr64 
    e6a4:	41 54                	push   %r12
    e6a6:	48 8d 77 08          	lea    0x8(%rdi),%rsi
    e6aa:	49 89 d4             	mov    %rdx,%r12
    e6ad:	31 d2                	xor    %edx,%edx
    e6af:	48 89 f1             	mov    %rsi,%rcx
    e6b2:	48 83 ec 10          	sub    $0x10,%rsp
    e6b6:	48 8b 3f             	mov    (%rdi),%rdi
    e6b9:	48 8b 05 b0 b8 01 00 	mov    0x1b8b0(%rip),%rax        # 29f70 <__stack_chk_guard>
    e6c0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    e6c5:	31 c0                	xor    %eax,%eax
    e6c7:	49 89 e0             	mov    %rsp,%r8
    e6ca:	e8 1a 3d 00 00       	call   123e9 <fetchf_setting_copy>
    e6cf:	48 8b 34 24          	mov    (%rsp),%rsi
    e6d3:	31 ff                	xor    %edi,%edi
    e6d5:	4c 89 e1             	mov    %r12,%rcx
    e6d8:	31 d2                	xor    %edx,%edx
    e6da:	e8 8d 14 00 00       	call   fb6c <readline_history>
    e6df:	48 8b 3c 24          	mov    (%rsp),%rdi
    e6e3:	41 89 c4             	mov    %eax,%r12d
    e6e6:	e8 64 df ff ff       	call   c64f <free>
    e6eb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    e6f0:	48 2b 05 79 b8 01 00 	sub    0x1b879(%rip),%rax        # 29f70 <__stack_chk_guard>
    e6f7:	74 05                	je     e6fe <read_value+0x5e>
    e6f9:	e8 62 43 ff ff       	call   2a60 <__stack_chk_fail>
    e6fe:	48 83 c4 10          	add    $0x10,%rsp
    e702:	44 89 e0             	mov    %r12d,%eax
    e705:	41 5c                	pop    %r12
    e707:	c3                   	ret    

000000000000e708 <set_core_exec>:
    e708:	41 55                	push   %r13
    e70a:	41 54                	push   %r12
    e70c:	55                   	push   %rbp
    e70d:	48 89 cd             	mov    %rcx,%rbp
    e710:	53                   	push   %rbx
    e711:	48 89 f3             	mov    %rsi,%rbx
    e714:	48 83 ec 58          	sub    $0x58,%rsp
    e718:	48 8b 05 51 b8 01 00 	mov    0x1b851(%rip),%rax        # 29f70 <__stack_chk_guard>
    e71f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    e724:	31 c0                	xor    %eax,%eax
    e726:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
    e72b:	e8 7f 0a 00 00       	call   f1af <parse_options>
    e730:	41 89 c4             	mov    %eax,%r12d
    e733:	85 c0                	test   %eax,%eax
    e735:	0f 85 92 00 00 00    	jne    e7cd <set_core_exec+0xc5>
    e73b:	48 63 05 66 b8 01 00 	movslq 0x1b866(%rip),%rax        # 29fa8 <optind>
    e742:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
    e747:	4c 89 ee             	mov    %r13,%rsi
    e74a:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    e74e:	e8 40 07 00 00       	call   ee93 <parse_autovivified_setting>
    e753:	41 89 c4             	mov    %eax,%r12d
    e756:	85 c0                	test   %eax,%eax
    e758:	75 73                	jne    e7cd <set_core_exec+0xc5>
    e75a:	48 63 05 47 b8 01 00 	movslq 0x1b847(%rip),%rax        # 29fa8 <optind>
    e761:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    e766:	4c 89 ef             	mov    %r13,%rdi
    e769:	48 8d 74 c3 08       	lea    0x8(%rbx,%rax,8),%rsi
    e76e:	ff d5                	call   *%rbp
    e770:	41 89 c4             	mov    %eax,%r12d
    e773:	85 c0                	test   %eax,%eax
    e775:	75 56                	jne    e7cd <set_core_exec+0xc5>
    e777:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
    e77d:	75 0c                	jne    e78b <set_core_exec+0x83>
    e77f:	48 8d 05 1a aa 01 00 	lea    0x1aa1a(%rip),%rax        # 291a0 <setting_type_string>
    e786:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    e78b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    e790:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e795:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    e79a:	e8 00 3d 00 00       	call   1249f <storef_setting>
    e79f:	41 89 c4             	mov    %eax,%r12d
    e7a2:	85 c0                	test   %eax,%eax
    e7a4:	74 1d                	je     e7c3 <set_core_exec+0xbb>
    e7a6:	89 c7                	mov    %eax,%edi
    e7a8:	e8 ef 4f 00 00       	call   1379c <strerror>
    e7ad:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    e7b2:	48 8d 3d 54 4c 01 00 	lea    0x14c54(%rip),%rdi        # 2340d <.LC0>
    e7b9:	48 89 c2             	mov    %rax,%rdx
    e7bc:	31 c0                	xor    %eax,%eax
    e7be:	e8 db 89 00 00       	call   1719e <printf>
    e7c3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    e7c8:	e8 82 de ff ff       	call   c64f <free>
    e7cd:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    e7d2:	48 2b 05 97 b7 01 00 	sub    0x1b797(%rip),%rax        # 29f70 <__stack_chk_guard>
    e7d9:	74 05                	je     e7e0 <set_core_exec+0xd8>
    e7db:	e8 80 42 ff ff       	call   2a60 <__stack_chk_fail>
    e7e0:	48 83 c4 58          	add    $0x58,%rsp
    e7e4:	44 89 e0             	mov    %r12d,%eax
    e7e7:	5b                   	pop    %rbx
    e7e8:	5d                   	pop    %rbp
    e7e9:	41 5c                	pop    %r12
    e7eb:	41 5d                	pop    %r13
    e7ed:	c3                   	ret    

000000000000e7ee <read_exec>:
    e7ee:	f3 0f 1e fa          	endbr64 
    e7f2:	48 8d 0d a7 fe ff ff 	lea    -0x159(%rip),%rcx        # e6a0 <read_value>
    e7f9:	48 8d 15 90 81 01 00 	lea    0x18190(%rip),%rdx        # 26990 <clear_read_cmd>
    e800:	e9 03 ff ff ff       	jmp    e708 <set_core_exec>

000000000000e805 <clear_exec>:
    e805:	f3 0f 1e fa          	endbr64 
    e809:	48 8d 0d 5c fd ff ff 	lea    -0x2a4(%rip),%rcx        # e56c <clear_value>
    e810:	48 8d 15 79 81 01 00 	lea    0x18179(%rip),%rdx        # 26990 <clear_read_cmd>
    e817:	e9 ec fe ff ff       	jmp    e708 <set_core_exec>

000000000000e81c <set_exec>:
    e81c:	f3 0f 1e fa          	endbr64 
    e820:	48 8d 0d 0c 00 00 00 	lea    0xc(%rip),%rcx        # e833 <set_value>
    e827:	48 8d 15 82 81 01 00 	lea    0x18182(%rip),%rdx        # 269b0 <set_cmd>
    e82e:	e9 d5 fe ff ff       	jmp    e708 <set_core_exec>

000000000000e833 <set_value>:
    e833:	f3 0f 1e fa          	endbr64 
    e837:	53                   	push   %rbx
    e838:	48 89 f7             	mov    %rsi,%rdi
    e83b:	48 89 d3             	mov    %rdx,%rbx
    e83e:	e8 ad f7 00 00       	call   1dff0 <concat_args>
    e843:	45 31 c0             	xor    %r8d,%r8d
    e846:	48 89 03             	mov    %rax,(%rbx)
    e849:	48 85 c0             	test   %rax,%rax
    e84c:	75 06                	jne    e854 <set_value+0x21>
    e84e:	41 b8 77 1f dc ce    	mov    $0xcedc1f77,%r8d
    e854:	44 89 c0             	mov    %r8d,%eax
    e857:	5b                   	pop    %rbx
    e858:	c3                   	ret    

000000000000e859 <show_exec>:
    e859:	f3 0f 1e fa          	endbr64 
    e85d:	41 55                	push   %r13
    e85f:	48 8d 15 6a 81 01 00 	lea    0x1816a(%rip),%rdx        # 269d0 <show_cmd>
    e866:	41 54                	push   %r12
    e868:	55                   	push   %rbp
    e869:	53                   	push   %rbx
    e86a:	48 89 f3             	mov    %rsi,%rbx
    e86d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    e874:	48 8b 05 f5 b6 01 00 	mov    0x1b6f5(%rip),%rax        # 29f70 <__stack_chk_guard>
    e87b:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    e882:	00 
    e883:	31 c0                	xor    %eax,%eax
    e885:	48 8d 4c 24 0f       	lea    0xf(%rsp),%rcx
    e88a:	e8 20 09 00 00       	call   f1af <parse_options>
    e88f:	41 89 c4             	mov    %eax,%r12d
    e892:	85 c0                	test   %eax,%eax
    e894:	0f 85 a3 00 00 00    	jne    e93d <show_exec+0xe4>
    e89a:	48 63 05 07 b7 01 00 	movslq 0x1b707(%rip),%rax        # 29fa8 <optind>
    e8a1:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
    e8a6:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
    e8aa:	e8 d4 05 00 00       	call   ee83 <parse_existing_setting>
    e8af:	41 89 c4             	mov    %eax,%r12d
    e8b2:	85 c0                	test   %eax,%eax
    e8b4:	0f 85 83 00 00 00    	jne    e93d <show_exec+0xe4>
    e8ba:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    e8bf:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
    e8c4:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    e8c9:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
    e8ce:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
    e8d3:	4c 89 e9             	mov    %r13,%rcx
    e8d6:	e8 0e 3b 00 00       	call   123e9 <fetchf_setting_copy>
    e8db:	89 c3                	mov    %eax,%ebx
    e8dd:	85 c0                	test   %eax,%eax
    e8df:	79 22                	jns    e903 <show_exec+0xaa>
    e8e1:	89 c7                	mov    %eax,%edi
    e8e3:	41 89 dc             	mov    %ebx,%r12d
    e8e6:	e8 b1 4e 00 00       	call   1379c <strerror>
    e8eb:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    e8f0:	48 8d 3d dd 4b 01 00 	lea    0x14bdd(%rip),%rdi        # 234d4 <.LC1>
    e8f7:	48 89 c2             	mov    %rax,%rdx
    e8fa:	31 c0                	xor    %eax,%eax
    e8fc:	e8 9d 88 00 00       	call   1719e <printf>
    e901:	eb 3a                	jmp    e93d <show_exec+0xe4>
    e903:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    e908:	48 8d 6c 24 78       	lea    0x78(%rsp),%rbp
    e90d:	b9 20 00 00 00       	mov    $0x20,%ecx
    e912:	4c 89 ee             	mov    %r13,%rsi
    e915:	48 89 ea             	mov    %rbp,%rdx
    e918:	e8 21 3f 00 00       	call   1283e <setting_name>
    e91d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    e922:	48 89 ee             	mov    %rbp,%rsi
    e925:	31 c0                	xor    %eax,%eax
    e927:	48 8d 3d bf 4b 01 00 	lea    0x14bbf(%rip),%rdi        # 234ed <.LC2>
    e92e:	e8 6b 88 00 00       	call   1719e <printf>
    e933:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e938:	e8 12 dd ff ff       	call   c64f <free>
    e93d:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    e944:	00 
    e945:	48 2b 05 24 b6 01 00 	sub    0x1b624(%rip),%rax        # 29f70 <__stack_chk_guard>
    e94c:	74 05                	je     e953 <show_exec+0xfa>
    e94e:	e8 0d 41 ff ff       	call   2a60 <__stack_chk_fail>
    e953:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    e95a:	44 89 e0             	mov    %r12d,%eax
    e95d:	5b                   	pop    %rbx
    e95e:	5d                   	pop    %rbp
    e95f:	41 5c                	pop    %r12
    e961:	41 5d                	pop    %r13
    e963:	c3                   	ret    

000000000000e964 <nvs_read>:
    e964:	f3 0f 1e fa          	endbr64 
    e968:	41 56                	push   %r14
    e96a:	41 55                	push   %r13
    e96c:	49 89 d5             	mov    %rdx,%r13
    e96f:	41 54                	push   %r12
    e971:	41 89 f4             	mov    %esi,%r12d
    e974:	55                   	push   %rbp
    e975:	48 89 fd             	mov    %rdi,%rbp
    e978:	53                   	push   %rbx
    e979:	48 89 cb             	mov    %rcx,%rbx
    e97c:	48 85 db             	test   %rbx,%rbx
    e97f:	74 48                	je     e9c9 <nvs_read+0x65>
    e981:	8b 45 08             	mov    0x8(%rbp),%eax
    e984:	8b 4d 00             	mov    0x0(%rbp),%ecx
    e987:	49 89 de             	mov    %rbx,%r14
    e98a:	85 c0                	test   %eax,%eax
    e98c:	74 14                	je     e9a2 <nvs_read+0x3e>
    e98e:	8d 50 ff             	lea    -0x1(%rax),%edx
    e991:	44 21 e2             	and    %r12d,%edx
    e994:	29 d0                	sub    %edx,%eax
    e996:	d3 e0                	shl    %cl,%eax
    e998:	48 39 d8             	cmp    %rbx,%rax
    e99b:	48 0f 47 c3          	cmova  %rbx,%rax
    e99f:	49 89 c6             	mov    %rax,%r14
    e9a2:	4c 89 f1             	mov    %r14,%rcx
    e9a5:	4c 89 ea             	mov    %r13,%rdx
    e9a8:	44 89 e6             	mov    %r12d,%esi
    e9ab:	48 89 ef             	mov    %rbp,%rdi
    e9ae:	ff 55 10             	call   *0x10(%rbp)
    e9b1:	85 c0                	test   %eax,%eax
    e9b3:	75 16                	jne    e9cb <nvs_read+0x67>
    e9b5:	8b 4d 00             	mov    0x0(%rbp),%ecx
    e9b8:	4c 89 f0             	mov    %r14,%rax
    e9bb:	4d 01 f5             	add    %r14,%r13
    e9be:	4c 29 f3             	sub    %r14,%rbx
    e9c1:	48 d3 e8             	shr    %cl,%rax
    e9c4:	41 01 c4             	add    %eax,%r12d
    e9c7:	eb b3                	jmp    e97c <nvs_read+0x18>
    e9c9:	31 c0                	xor    %eax,%eax
    e9cb:	5b                   	pop    %rbx
    e9cc:	5d                   	pop    %rbp
    e9cd:	41 5c                	pop    %r12
    e9cf:	41 5d                	pop    %r13
    e9d1:	41 5e                	pop    %r14
    e9d3:	c3                   	ret    

000000000000e9d4 <xfer_uri_opener>:
    e9d4:	f3 0f 1e fa          	endbr64 
    e9d8:	41 54                	push   %r12
    e9da:	4c 8d 25 47 b0 01 00 	lea    0x1b047(%rip),%r12        # 29a28 <efi_local_uri_opener>
    e9e1:	55                   	push   %rbp
    e9e2:	48 8d 2d cf b0 01 00 	lea    0x1b0cf(%rip),%rbp        # 29ab8 <__licence__bsd2__ibft>
    e9e9:	53                   	push   %rbx
    e9ea:	48 89 fb             	mov    %rdi,%rbx
    e9ed:	49 39 ec             	cmp    %rbp,%r12
    e9f0:	73 16                	jae    ea08 <xfer_uri_opener+0x34>
    e9f2:	49 8b 34 24          	mov    (%r12),%rsi
    e9f6:	48 89 df             	mov    %rbx,%rdi
    e9f9:	e8 e2 4e 00 00       	call   138e0 <strcmp>
    e9fe:	85 c0                	test   %eax,%eax
    ea00:	74 09                	je     ea0b <xfer_uri_opener+0x37>
    ea02:	49 83 c4 10          	add    $0x10,%r12
    ea06:	eb e5                	jmp    e9ed <xfer_uri_opener+0x19>
    ea08:	45 31 e4             	xor    %r12d,%r12d
    ea0b:	4c 89 e0             	mov    %r12,%rax
    ea0e:	5b                   	pop    %rbx
    ea0f:	5d                   	pop    %rbp
    ea10:	41 5c                	pop    %r12
    ea12:	c3                   	ret    

000000000000ea13 <xfer_open_uri>:
    ea13:	f3 0f 1e fa          	endbr64 
    ea17:	41 54                	push   %r12
    ea19:	49 89 fc             	mov    %rdi,%r12
    ea1c:	55                   	push   %rbp
    ea1d:	48 83 ec 18          	sub    $0x18,%rsp
    ea21:	48 8b 3d 68 b4 01 00 	mov    0x1b468(%rip),%rdi        # 29e90 <cwuri>
    ea28:	e8 09 7f 00 00       	call   16936 <resolve_uri>
    ea2d:	48 85 c0             	test   %rax,%rax
    ea30:	75 07                	jne    ea39 <xfer_open_uri+0x26>
    ea32:	b8 77 df f6 ce       	mov    $0xcef6df77,%eax
    ea37:	eb 31                	jmp    ea6a <xfer_open_uri+0x57>
    ea39:	48 8b 78 10          	mov    0x10(%rax),%rdi
    ea3d:	48 89 c5             	mov    %rax,%rbp
    ea40:	e8 8f ff ff ff       	call   e9d4 <xfer_uri_opener>
    ea45:	48 85 c0             	test   %rax,%rax
    ea48:	75 07                	jne    ea51 <xfer_open_uri+0x3e>
    ea4a:	b8 7d df f6 c3       	mov    $0xc3f6df7d,%eax
    ea4f:	eb 09                	jmp    ea5a <xfer_open_uri+0x47>
    ea51:	48 89 ee             	mov    %rbp,%rsi
    ea54:	4c 89 e7             	mov    %r12,%rdi
    ea57:	ff 50 08             	call   *0x8(%rax)
    ea5a:	48 89 ef             	mov    %rbp,%rdi
    ea5d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    ea61:	e8 d8 13 00 00       	call   fe3e <ref_decrement>
    ea66:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    ea6a:	48 83 c4 18          	add    $0x18,%rsp
    ea6e:	5d                   	pop    %rbp
    ea6f:	41 5c                	pop    %r12
    ea71:	c3                   	ret    

000000000000ea72 <xfer_open_uri_string>:
    ea72:	f3 0f 1e fa          	endbr64 
    ea76:	41 54                	push   %r12
    ea78:	49 89 fc             	mov    %rdi,%r12
    ea7b:	48 89 f7             	mov    %rsi,%rdi
    ea7e:	55                   	push   %rbp
    ea7f:	48 83 ec 18          	sub    $0x18,%rsp
    ea83:	e8 cb 79 00 00       	call   16453 <parse_uri>
    ea88:	48 85 c0             	test   %rax,%rax
    ea8b:	75 07                	jne    ea94 <xfer_open_uri_string+0x22>
    ea8d:	b8 77 df f6 ce       	mov    $0xcef6df77,%eax
    ea92:	eb 1e                	jmp    eab2 <xfer_open_uri_string+0x40>
    ea94:	48 89 c5             	mov    %rax,%rbp
    ea97:	48 89 c6             	mov    %rax,%rsi
    ea9a:	4c 89 e7             	mov    %r12,%rdi
    ea9d:	e8 71 ff ff ff       	call   ea13 <xfer_open_uri>
    eaa2:	48 89 ef             	mov    %rbp,%rdi
    eaa5:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    eaa9:	e8 90 13 00 00       	call   fe3e <ref_decrement>
    eaae:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    eab2:	48 83 c4 18          	add    $0x18,%rsp
    eab6:	5d                   	pop    %rbp
    eab7:	41 5c                	pop    %r12
    eab9:	c3                   	ret    

000000000000eaba <xfer_open_socket>:
    eaba:	f3 0f 1e fa          	endbr64 
    eabe:	41 89 f0             	mov    %esi,%r8d
    eac1:	48 8d 05 48 ae 01 00 	lea    0x1ae48(%rip),%rax        # 29910 <tcp_socket_opener>
    eac8:	48 89 d6             	mov    %rdx,%rsi
    eacb:	48 89 ca             	mov    %rcx,%rdx
    eace:	48 8d 0d 5b ae 01 00 	lea    0x1ae5b(%rip),%rcx        # 29930 <heap_startup_fn>
    ead5:	48 39 c8             	cmp    %rcx,%rax
    ead8:	73 0e                	jae    eae8 <xfer_open_socket+0x2e>
    eada:	44 3b 00             	cmp    (%rax),%r8d
    eadd:	75 03                	jne    eae2 <xfer_open_socket+0x28>
    eadf:	ff 60 08             	jmp    *0x8(%rax)
    eae2:	48 83 c0 10          	add    $0x10,%rax
    eae6:	eb ed                	jmp    ead5 <xfer_open_socket+0x1b>
    eae8:	b8 7d df f6 c3       	mov    $0xc3f6df7d,%eax
    eaed:	c3                   	ret    

000000000000eaee <xfer_vopen>:
    eaee:	f3 0f 1e fa          	endbr64 
    eaf2:	48 89 d0             	mov    %rdx,%rax
    eaf5:	83 fe 02             	cmp    $0x2,%esi
    eaf8:	74 0f                	je     eb09 <xfer_vopen+0x1b>
    eafa:	83 fe 03             	cmp    $0x3,%esi
    eafd:	74 5a                	je     eb59 <xfer_vopen+0x6b>
    eaff:	ff ce                	dec    %esi
    eb01:	0f 85 c2 00 00 00    	jne    ebc9 <xfer_vopen+0xdb>
    eb07:	eb 28                	jmp    eb31 <xfer_vopen+0x43>
    eb09:	8b 0a                	mov    (%rdx),%ecx
    eb0b:	83 f9 2f             	cmp    $0x2f,%ecx
    eb0e:	77 0d                	ja     eb1d <xfer_vopen+0x2f>
    eb10:	89 ca                	mov    %ecx,%edx
    eb12:	83 c1 08             	add    $0x8,%ecx
    eb15:	48 03 50 10          	add    0x10(%rax),%rdx
    eb19:	89 08                	mov    %ecx,(%rax)
    eb1b:	eb 0c                	jmp    eb29 <xfer_vopen+0x3b>
    eb1d:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    eb21:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    eb25:	48 89 48 08          	mov    %rcx,0x8(%rax)
    eb29:	48 8b 32             	mov    (%rdx),%rsi
    eb2c:	e9 41 ff ff ff       	jmp    ea72 <xfer_open_uri_string>
    eb31:	8b 0a                	mov    (%rdx),%ecx
    eb33:	83 f9 2f             	cmp    $0x2f,%ecx
    eb36:	77 0d                	ja     eb45 <xfer_vopen+0x57>
    eb38:	89 ca                	mov    %ecx,%edx
    eb3a:	83 c1 08             	add    $0x8,%ecx
    eb3d:	48 03 50 10          	add    0x10(%rax),%rdx
    eb41:	89 08                	mov    %ecx,(%rax)
    eb43:	eb 0c                	jmp    eb51 <xfer_vopen+0x63>
    eb45:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    eb49:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    eb4d:	48 89 48 08          	mov    %rcx,0x8(%rax)
    eb51:	48 8b 32             	mov    (%rdx),%rsi
    eb54:	e9 ba fe ff ff       	jmp    ea13 <xfer_open_uri>
    eb59:	8b 0a                	mov    (%rdx),%ecx
    eb5b:	83 f9 2f             	cmp    $0x2f,%ecx
    eb5e:	77 0d                	ja     eb6d <xfer_vopen+0x7f>
    eb60:	89 ca                	mov    %ecx,%edx
    eb62:	83 c1 08             	add    $0x8,%ecx
    eb65:	48 03 50 10          	add    0x10(%rax),%rdx
    eb69:	89 08                	mov    %ecx,(%rax)
    eb6b:	eb 0c                	jmp    eb79 <xfer_vopen+0x8b>
    eb6d:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    eb71:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    eb75:	48 89 48 08          	mov    %rcx,0x8(%rax)
    eb79:	8b 08                	mov    (%rax),%ecx
    eb7b:	8b 32                	mov    (%rdx),%esi
    eb7d:	83 f9 2f             	cmp    $0x2f,%ecx
    eb80:	77 0d                	ja     eb8f <xfer_vopen+0xa1>
    eb82:	89 ca                	mov    %ecx,%edx
    eb84:	83 c1 08             	add    $0x8,%ecx
    eb87:	48 03 50 10          	add    0x10(%rax),%rdx
    eb8b:	89 08                	mov    %ecx,(%rax)
    eb8d:	eb 0c                	jmp    eb9b <xfer_vopen+0xad>
    eb8f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    eb93:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    eb97:	48 89 48 08          	mov    %rcx,0x8(%rax)
    eb9b:	8b 08                	mov    (%rax),%ecx
    eb9d:	4c 8b 02             	mov    (%rdx),%r8
    eba0:	83 f9 2f             	cmp    $0x2f,%ecx
    eba3:	77 0d                	ja     ebb2 <xfer_vopen+0xc4>
    eba5:	89 ca                	mov    %ecx,%edx
    eba7:	83 c1 08             	add    $0x8,%ecx
    ebaa:	48 03 50 10          	add    0x10(%rax),%rdx
    ebae:	89 08                	mov    %ecx,(%rax)
    ebb0:	eb 0c                	jmp    ebbe <xfer_vopen+0xd0>
    ebb2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ebb6:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    ebba:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ebbe:	48 8b 0a             	mov    (%rdx),%rcx
    ebc1:	4c 89 c2             	mov    %r8,%rdx
    ebc4:	e9 f1 fe ff ff       	jmp    eaba <xfer_open_socket>
    ebc9:	b8 7d df f6 c3       	mov    $0xc3f6df7d,%eax
    ebce:	c3                   	ret    

000000000000ebcf <xfer_open>:
    ebcf:	f3 0f 1e fa          	endbr64 
    ebd3:	48 83 ec 58          	sub    $0x58,%rsp
    ebd7:	48 8b 05 92 b3 01 00 	mov    0x1b392(%rip),%rax        # 29f70 <__stack_chk_guard>
    ebde:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    ebe3:	31 c0                	xor    %eax,%eax
    ebe5:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    ebea:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    ebef:	48 89 e2             	mov    %rsp,%rdx
    ebf2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ebf7:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    ebfc:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    ec01:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    ec06:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    ec0b:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
    ec12:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    ec17:	e8 d2 fe ff ff       	call   eaee <xfer_vopen>
    ec1c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    ec21:	48 2b 15 48 b3 01 00 	sub    0x1b348(%rip),%rdx        # 29f70 <__stack_chk_guard>
    ec28:	74 05                	je     ec2f <xfer_open+0x60>
    ec2a:	e8 31 3e ff ff       	call   2a60 <__stack_chk_fail>
    ec2f:	48 83 c4 58          	add    $0x58,%rsp
    ec33:	c3                   	ret    

000000000000ec34 <xfer_vreopen>:
    ec34:	f3 0f 1e fa          	endbr64 
    ec38:	41 54                	push   %r12
    ec3a:	41 89 f4             	mov    %esi,%r12d
    ec3d:	31 f6                	xor    %esi,%esi
    ec3f:	48 83 ec 10          	sub    $0x10,%rsp
    ec43:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    ec48:	48 89 3c 24          	mov    %rdi,(%rsp)
    ec4c:	e8 f7 ab ff ff       	call   9848 <intf_restart>
    ec51:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    ec56:	48 8b 3c 24          	mov    (%rsp),%rdi
    ec5a:	48 83 c4 10          	add    $0x10,%rsp
    ec5e:	44 89 e6             	mov    %r12d,%esi
    ec61:	41 5c                	pop    %r12
    ec63:	e9 86 fe ff ff       	jmp    eaee <xfer_vopen>

000000000000ec68 <parse_string>:
    ec68:	f3 0f 1e fa          	endbr64 
    ec6c:	48 89 3e             	mov    %rdi,(%rsi)
    ec6f:	31 c0                	xor    %eax,%eax
    ec71:	c3                   	ret    

000000000000ec72 <parse_integer>:
    ec72:	f3 0f 1e fa          	endbr64 
    ec76:	55                   	push   %rbp
    ec77:	31 d2                	xor    %edx,%edx
    ec79:	48 89 fd             	mov    %rdi,%rbp
    ec7c:	53                   	push   %rbx
    ec7d:	48 89 f3             	mov    %rsi,%rbx
    ec80:	48 83 ec 18          	sub    $0x18,%rsp
    ec84:	48 8b 05 e5 b2 01 00 	mov    0x1b2e5(%rip),%rax        # 29f70 <__stack_chk_guard>
    ec8b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ec90:	31 c0                	xor    %eax,%eax
    ec92:	48 89 e6             	mov    %rsp,%rsi
    ec95:	e8 e1 4d 00 00       	call   13a7b <strtoul>
    ec9a:	89 03                	mov    %eax,(%rbx)
    ec9c:	48 8b 04 24          	mov    (%rsp),%rax
    eca0:	80 38 00             	cmpb   $0x0,(%rax)
    eca3:	75 08                	jne    ecad <parse_integer+0x3b>
    eca5:	31 c0                	xor    %eax,%eax
    eca7:	80 7d 00 00          	cmpb   $0x0,0x0(%rbp)
    ecab:	75 16                	jne    ecc3 <parse_integer+0x51>
    ecad:	48 89 ee             	mov    %rbp,%rsi
    ecb0:	48 8d 3d 7d 48 01 00 	lea    0x1487d(%rip),%rdi        # 23534 <.LC0>
    ecb7:	31 c0                	xor    %eax,%eax
    ecb9:	e8 e0 84 00 00       	call   1719e <printf>
    ecbe:	b8 7e de e9 e3       	mov    $0xe3e9de7e,%eax
    ecc3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    ecc8:	48 2b 15 a1 b2 01 00 	sub    0x1b2a1(%rip),%rdx        # 29f70 <__stack_chk_guard>
    eccf:	74 05                	je     ecd6 <parse_integer+0x64>
    ecd1:	e8 8a 3d ff ff       	call   2a60 <__stack_chk_fail>
    ecd6:	48 83 c4 18          	add    $0x18,%rsp
    ecda:	5b                   	pop    %rbx
    ecdb:	5d                   	pop    %rbp
    ecdc:	c3                   	ret    

000000000000ecdd <parse_timeout>:
    ecdd:	f3 0f 1e fa          	endbr64 
    ece1:	53                   	push   %rbx
    ece2:	48 89 f3             	mov    %rsi,%rbx
    ece5:	48 83 ec 10          	sub    $0x10,%rsp
    ece9:	48 8b 05 80 b2 01 00 	mov    0x1b280(%rip),%rax        # 29f70 <__stack_chk_guard>
    ecf0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ecf5:	31 c0                	xor    %eax,%eax
    ecf7:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    ecfc:	e8 71 ff ff ff       	call   ec72 <parse_integer>
    ed01:	85 c0                	test   %eax,%eax
    ed03:	75 07                	jne    ed0c <parse_timeout+0x2f>
    ed05:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    ed09:	48 89 0b             	mov    %rcx,(%rbx)
    ed0c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    ed11:	48 2b 15 58 b2 01 00 	sub    0x1b258(%rip),%rdx        # 29f70 <__stack_chk_guard>
    ed18:	74 05                	je     ed1f <parse_timeout+0x42>
    ed1a:	e8 41 3d ff ff       	call   2a60 <__stack_chk_fail>
    ed1f:	48 83 c4 10          	add    $0x10,%rsp
    ed23:	5b                   	pop    %rbx
    ed24:	c3                   	ret    

000000000000ed25 <parse_netdev>:
    ed25:	f3 0f 1e fa          	endbr64 
    ed29:	55                   	push   %rbp
    ed2a:	48 89 fd             	mov    %rdi,%rbp
    ed2d:	53                   	push   %rbx
    ed2e:	48 89 f3             	mov    %rsi,%rbx
    ed31:	51                   	push   %rcx
    ed32:	e8 d1 f2 ff ff       	call   e008 <find_netdev>
    ed37:	45 31 c0             	xor    %r8d,%r8d
    ed3a:	48 89 03             	mov    %rax,(%rbx)
    ed3d:	48 85 c0             	test   %rax,%rax
    ed40:	75 15                	jne    ed57 <parse_netdev+0x32>
    ed42:	48 89 ee             	mov    %rbp,%rsi
    ed45:	48 8d 3d 05 48 01 00 	lea    0x14805(%rip),%rdi        # 23551 <.LC1>
    ed4c:	e8 4d 84 00 00       	call   1719e <printf>
    ed51:	41 b8 79 df e9 d3    	mov    $0xd3e9df79,%r8d
    ed57:	5a                   	pop    %rdx
    ed58:	44 89 c0             	mov    %r8d,%eax
    ed5b:	5b                   	pop    %rbx
    ed5c:	5d                   	pop    %rbp
    ed5d:	c3                   	ret    

000000000000ed5e <parse_netdev_configurator>:
    ed5e:	f3 0f 1e fa          	endbr64 
    ed62:	55                   	push   %rbp
    ed63:	48 89 fd             	mov    %rdi,%rbp
    ed66:	53                   	push   %rbx
    ed67:	48 89 f3             	mov    %rsi,%rbx
    ed6a:	51                   	push   %rcx
    ed6b:	e8 21 f6 ff ff       	call   e391 <find_netdev_configurator>
    ed70:	45 31 c0             	xor    %r8d,%r8d
    ed73:	48 89 03             	mov    %rax,(%rbx)
    ed76:	48 85 c0             	test   %rax,%rax
    ed79:	75 15                	jne    ed90 <parse_netdev_configurator+0x32>
    ed7b:	48 89 ee             	mov    %rbp,%rsi
    ed7e:	48 8d 3d ea 47 01 00 	lea    0x147ea(%rip),%rdi        # 2356f <.LC2>
    ed85:	e8 14 84 00 00       	call   1719e <printf>
    ed8a:	41 b8 7d df e9 c3    	mov    $0xc3e9df7d,%r8d
    ed90:	5a                   	pop    %rdx
    ed91:	44 89 c0             	mov    %r8d,%eax
    ed94:	5b                   	pop    %rbx
    ed95:	5d                   	pop    %rbp
    ed96:	c3                   	ret    

000000000000ed97 <parse_menu>:
    ed97:	f3 0f 1e fa          	endbr64 
    ed9b:	55                   	push   %rbp
    ed9c:	48 89 fd             	mov    %rdi,%rbp
    ed9f:	53                   	push   %rbx
    eda0:	48 89 f3             	mov    %rsi,%rbx
    eda3:	51                   	push   %rcx
    eda4:	e8 18 11 01 00       	call   1fec1 <find_menu>
    eda9:	45 31 c0             	xor    %r8d,%r8d
    edac:	48 89 03             	mov    %rax,(%rbx)
    edaf:	48 85 c0             	test   %rax,%rax
    edb2:	75 2a                	jne    edde <parse_menu+0x47>
    edb4:	48 85 ed             	test   %rbp,%rbp
    edb7:	74 11                	je     edca <parse_menu+0x33>
    edb9:	48 89 ee             	mov    %rbp,%rsi
    edbc:	48 8d 3d c8 47 01 00 	lea    0x147c8(%rip),%rdi        # 2358b <.LC3>
    edc3:	e8 d6 83 00 00       	call   1719e <printf>
    edc8:	eb 0e                	jmp    edd8 <parse_menu+0x41>
    edca:	48 8d 3d ce 47 01 00 	lea    0x147ce(%rip),%rdi        # 2359f <.LC4>
    edd1:	31 c0                	xor    %eax,%eax
    edd3:	e8 c6 83 00 00       	call   1719e <printf>
    edd8:	41 b8 72 df e9 d2    	mov    $0xd2e9df72,%r8d
    edde:	5a                   	pop    %rdx
    eddf:	44 89 c0             	mov    %r8d,%eax
    ede2:	5b                   	pop    %rbx
    ede3:	5d                   	pop    %rbp
    ede4:	c3                   	ret    

000000000000ede5 <parse_flag>:
    ede5:	f3 0f 1e fa          	endbr64 
    ede9:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
    edef:	31 c0                	xor    %eax,%eax
    edf1:	c3                   	ret    

000000000000edf2 <parse_key>:
    edf2:	f3 0f 1e fa          	endbr64 
    edf6:	0f be 07             	movsbl (%rdi),%eax
    edf9:	84 c0                	test   %al,%al
    edfb:	74 06                	je     ee03 <parse_key+0x11>
    edfd:	80 7f 01 00          	cmpb   $0x0,0x1(%rdi)
    ee01:	74 05                	je     ee08 <parse_key+0x16>
    ee03:	e9 6a fe ff ff       	jmp    ec72 <parse_integer>
    ee08:	89 06                	mov    %eax,(%rsi)
    ee0a:	31 c0                	xor    %eax,%eax
    ee0c:	c3                   	ret    

000000000000ee0d <parse_settings>:
    ee0d:	f3 0f 1e fa          	endbr64 
    ee11:	55                   	push   %rbp
    ee12:	48 89 fd             	mov    %rdi,%rbp
    ee15:	53                   	push   %rbx
    ee16:	48 89 f3             	mov    %rsi,%rbx
    ee19:	51                   	push   %rcx
    ee1a:	e8 33 2a 00 00       	call   11852 <find_settings>
    ee1f:	45 31 c0             	xor    %r8d,%r8d
    ee22:	48 89 03             	mov    %rax,(%rbx)
    ee25:	48 85 c0             	test   %rax,%rax
    ee28:	75 15                	jne    ee3f <parse_settings+0x32>
    ee2a:	48 89 ee             	mov    %rbp,%rsi
    ee2d:	48 8d 3d 7c 47 01 00 	lea    0x1477c(%rip),%rdi        # 235b0 <.LC5>
    ee34:	e8 65 83 00 00       	call   1719e <printf>
    ee39:	41 b8 7e df e9 e3    	mov    $0xe3e9df7e,%r8d
    ee3f:	5a                   	pop    %rdx
    ee40:	44 89 c0             	mov    %r8d,%eax
    ee43:	5b                   	pop    %rbx
    ee44:	5d                   	pop    %rbp
    ee45:	c3                   	ret    

000000000000ee46 <parse_setting>:
    ee46:	f3 0f 1e fa          	endbr64 
    ee4a:	41 54                	push   %r12
    ee4c:	49 89 f0             	mov    %rsi,%r8
    ee4f:	48 89 d6             	mov    %rdx,%rsi
    ee52:	55                   	push   %rbp
    ee53:	4c 89 c2             	mov    %r8,%rdx
    ee56:	48 89 fd             	mov    %rdi,%rbp
    ee59:	51                   	push   %rcx
    ee5a:	49 8d 48 08          	lea    0x8(%r8),%rcx
    ee5e:	e8 2e 38 00 00       	call   12691 <parse_setting_name>
    ee63:	41 89 c4             	mov    %eax,%r12d
    ee66:	85 c0                	test   %eax,%eax
    ee68:	74 11                	je     ee7b <parse_setting+0x35>
    ee6a:	48 89 ee             	mov    %rbp,%rsi
    ee6d:	48 8d 3d 51 47 01 00 	lea    0x14751(%rip),%rdi        # 235c5 <.LC6>
    ee74:	31 c0                	xor    %eax,%eax
    ee76:	e8 23 83 00 00       	call   1719e <printf>
    ee7b:	44 89 e0             	mov    %r12d,%eax
    ee7e:	5a                   	pop    %rdx
    ee7f:	5d                   	pop    %rbp
    ee80:	41 5c                	pop    %r12
    ee82:	c3                   	ret    

000000000000ee83 <parse_existing_setting>:
    ee83:	f3 0f 1e fa          	endbr64 
    ee87:	48 8d 15 4e 2a 00 00 	lea    0x2a4e(%rip),%rdx        # 118dc <find_child_settings>
    ee8e:	e9 b3 ff ff ff       	jmp    ee46 <parse_setting>

000000000000ee93 <parse_autovivified_setting>:
    ee93:	f3 0f 1e fa          	endbr64 
    ee97:	48 8d 15 8b 31 00 00 	lea    0x318b(%rip),%rdx        # 12029 <autovivify_child_settings>
    ee9e:	e9 a3 ff ff ff       	jmp    ee46 <parse_setting>

000000000000eea3 <print_usage>:
    eea3:	f3 0f 1e fa          	endbr64 
    eea7:	41 57                	push   %r15
    eea9:	31 c0                	xor    %eax,%eax
    eeab:	41 56                	push   %r14
    eead:	4c 8d 35 70 47 01 00 	lea    0x14770(%rip),%r14        # 23624 <.LC13>
    eeb4:	41 55                	push   %r13
    eeb6:	45 31 ed             	xor    %r13d,%r13d
    eeb9:	41 54                	push   %r12
    eebb:	49 89 f4             	mov    %rsi,%r12
    eebe:	55                   	push   %rbp
    eebf:	48 89 fd             	mov    %rdi,%rbp
    eec2:	48 8d 3d 4e 47 01 00 	lea    0x1474e(%rip),%rdi        # 23617 <.LC12>
    eec9:	53                   	push   %rbx
    eeca:	51                   	push   %rcx
    eecb:	48 8b 36             	mov    (%rsi),%rsi
    eece:	e8 cb 82 00 00       	call   1719e <printf>
    eed3:	0f b6 45 08          	movzbl 0x8(%rbp),%eax
    eed7:	44 39 e8             	cmp    %r13d,%eax
    eeda:	76 63                	jbe    ef3f <print_usage+0x9c>
    eedc:	49 6b dd 18          	imul   $0x18,%r13,%rbx
    eee0:	48 03 5d 00          	add    0x0(%rbp),%rbx
    eee4:	31 c0                	xor    %eax,%eax
    eee6:	4c 89 f7             	mov    %r14,%rdi
    eee9:	48 8b 13             	mov    (%rbx),%rdx
    eeec:	0f be 73 08          	movsbl 0x8(%rbx),%esi
    eef0:	4c 8d 3d 03 3c 01 00 	lea    0x13c03(%rip),%r15        # 22afa <.LC9>
    eef7:	e8 a2 82 00 00       	call   1719e <printf>
    eefc:	8a 53 09             	mov    0x9(%rbx),%dl
    eeff:	84 d2                	test   %dl,%dl
    ef01:	74 2d                	je     ef30 <print_usage+0x8d>
    ef03:	48 8d 05 ca 54 01 00 	lea    0x154ca(%rip),%rax        # 243d4 <.LC0>
    ef0a:	80 fa 02             	cmp    $0x2,%dl
    ef0d:	48 8d 35 01 47 01 00 	lea    0x14701(%rip),%rsi        # 23615 <.LC11>
    ef14:	48 8b 13             	mov    (%rbx),%rdx
    ef17:	48 89 c1             	mov    %rax,%rcx
    ef1a:	48 0f 45 f0          	cmovne %rax,%rsi
    ef1e:	48 8d 3d 0a 47 01 00 	lea    0x1470a(%rip),%rdi        # 2362f <.LC14>
    ef25:	49 0f 44 cf          	cmove  %r15,%rcx
    ef29:	31 c0                	xor    %eax,%eax
    ef2b:	e8 6e 82 00 00       	call   1719e <printf>
    ef30:	4c 89 ff             	mov    %r15,%rdi
    ef33:	31 c0                	xor    %eax,%eax
    ef35:	49 ff c5             	inc    %r13
    ef38:	e8 61 82 00 00       	call   1719e <printf>
    ef3d:	eb 94                	jmp    eed3 <print_usage+0x30>
    ef3f:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    ef43:	48 85 f6             	test   %rsi,%rsi
    ef46:	74 0e                	je     ef56 <print_usage+0xb3>
    ef48:	48 8d 3d d1 46 01 00 	lea    0x146d1(%rip),%rdi        # 23620 <.LC15>
    ef4f:	31 c0                	xor    %eax,%eax
    ef51:	e8 48 82 00 00       	call   1719e <printf>
    ef56:	49 8b 34 24          	mov    (%r12),%rsi
    ef5a:	48 8d 3d d8 46 01 00 	lea    0x146d8(%rip),%rdi        # 23639 <.LC16>
    ef61:	5a                   	pop    %rdx
    ef62:	31 c0                	xor    %eax,%eax
    ef64:	5b                   	pop    %rbx
    ef65:	5d                   	pop    %rbp
    ef66:	41 5c                	pop    %r12
    ef68:	41 5d                	pop    %r13
    ef6a:	41 5e                	pop    %r14
    ef6c:	41 5f                	pop    %r15
    ef6e:	e9 2b 82 00 00       	jmp    1719e <printf>

000000000000ef73 <reparse_options>:
    ef73:	f3 0f 1e fa          	endbr64 
    ef77:	55                   	push   %rbp
    ef78:	48 89 e5             	mov    %rsp,%rbp
    ef7b:	41 57                	push   %r15
    ef7d:	41 56                	push   %r14
    ef7f:	49 89 f6             	mov    %rsi,%r14
    ef82:	41 55                	push   %r13
    ef84:	41 54                	push   %r12
    ef86:	49 89 d4             	mov    %rdx,%r12
    ef89:	53                   	push   %rbx
    ef8a:	89 fb                	mov    %edi,%ebx
    ef8c:	48 83 ec 28          	sub    $0x28,%rsp
    ef90:	0f b6 52 08          	movzbl 0x8(%rdx),%edx
    ef94:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    ef98:	48 8b 05 d1 af 01 00 	mov    0x1afd1(%rip),%rax        # 29f70 <__stack_chk_guard>
    ef9f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    efa3:	31 c0                	xor    %eax,%eax
    efa5:	48 89 e6             	mov    %rsp,%rsi
    efa8:	8d 42 02             	lea    0x2(%rdx),%eax
    efab:	48 98                	cltq   
    efad:	48 89 c1             	mov    %rax,%rcx
    efb0:	48 c1 e1 05          	shl    $0x5,%rcx
    efb4:	48 89 cf             	mov    %rcx,%rdi
    efb7:	48 89 c8             	mov    %rcx,%rax
    efba:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    efc1:	48 29 fe             	sub    %rdi,%rsi
    efc4:	48 39 f4             	cmp    %rsi,%rsp
    efc7:	74 12                	je     efdb <reparse_options+0x68>
    efc9:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    efd0:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    efd7:	00 00 
    efd9:	eb e9                	jmp    efc4 <reparse_options+0x51>
    efdb:	25 ff 0f 00 00       	and    $0xfff,%eax
    efe0:	48 29 c4             	sub    %rax,%rsp
    efe3:	48 85 c0             	test   %rax,%rax
    efe6:	74 06                	je     efee <reparse_options+0x7b>
    efe8:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    efee:	8d 14 52             	lea    (%rdx,%rdx,2),%edx
    eff1:	49 89 e7             	mov    %rsp,%r15
    eff4:	48 8d 42 11          	lea    0x11(%rdx),%rax
    eff8:	48 89 e2             	mov    %rsp,%rdx
    effb:	25 f0 0f 00 00       	and    $0xff0,%eax
    f000:	48 39 d4             	cmp    %rdx,%rsp
    f003:	74 12                	je     f017 <reparse_options+0xa4>
    f005:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    f00c:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    f013:	00 00 
    f015:	eb e9                	jmp    f000 <reparse_options+0x8d>
    f017:	48 29 c4             	sub    %rax,%rsp
    f01a:	25 ff 0f 00 00       	and    $0xfff,%eax
    f01f:	74 06                	je     f027 <reparse_options+0xb4>
    f021:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
    f027:	49 89 e5             	mov    %rsp,%r13
    f02a:	4c 89 ff             	mov    %r15,%rdi
    f02d:	31 c0                	xor    %eax,%eax
    f02f:	f3 aa                	rep stos %al,%es:(%rdi)
    f031:	41 0f b6 44 24 08    	movzbl 0x8(%r12),%eax
    f037:	4d 89 f8             	mov    %r15,%r8
    f03a:	45 31 c9             	xor    %r9d,%r9d
    f03d:	31 c9                	xor    %ecx,%ecx
    f03f:	8d 71 01             	lea    0x1(%rcx),%esi
    f042:	44 39 c8             	cmp    %r9d,%eax
    f045:	76 50                	jbe    f097 <reparse_options+0x124>
    f047:	49 6b f9 18          	imul   $0x18,%r9,%rdi
    f04b:	49 03 3c 24          	add    (%r12),%rdi
    f04f:	4c 8b 17             	mov    (%rdi),%r10
    f052:	4d 89 10             	mov    %r10,(%r8)
    f055:	44 0f b6 57 09       	movzbl 0x9(%rdi),%r10d
    f05a:	45 89 50 08          	mov    %r10d,0x8(%r8)
    f05e:	44 0f be 5f 08       	movsbl 0x8(%rdi),%r11d
    f063:	45 89 58 18          	mov    %r11d,0x18(%r8)
    f067:	45 88 5c 0d 00       	mov    %r11b,0x0(%r13,%rcx,1)
    f06c:	0f b6 4f 09          	movzbl 0x9(%rdi),%ecx
    f070:	89 f7                	mov    %esi,%edi
    f072:	41 89 ca             	mov    %ecx,%r10d
    f075:	44 8d 5f 01          	lea    0x1(%rdi),%r11d
    f079:	45 85 d2             	test   %r10d,%r10d
    f07c:	74 0e                	je     f08c <reparse_options+0x119>
    f07e:	41 c6 44 3d 00 3a    	movb   $0x3a,0x0(%r13,%rdi,1)
    f084:	41 ff ca             	dec    %r10d
    f087:	44 89 df             	mov    %r11d,%edi
    f08a:	eb e9                	jmp    f075 <reparse_options+0x102>
    f08c:	01 f1                	add    %esi,%ecx
    f08e:	49 ff c1             	inc    %r9
    f091:	49 83 c0 20          	add    $0x20,%r8
    f095:	eb a8                	jmp    f03f <reparse_options+0xcc>
    f097:	48 c1 e0 05          	shl    $0x5,%rax
    f09b:	48 8d 15 cd 45 01 00 	lea    0x145cd(%rip),%rdx        # 2366f <.LC17>
    f0a2:	41 c6 44 0d 00 68    	movb   $0x68,0x0(%r13,%rcx,1)
    f0a8:	4c 01 f8             	add    %r15,%rax
    f0ab:	41 c6 44 35 00 00    	movb   $0x0,0x0(%r13,%rsi,1)
    f0b1:	48 89 10             	mov    %rdx,(%rax)
    f0b4:	c7 40 18 68 00 00 00 	movl   $0x68,0x18(%rax)
    f0bb:	45 31 c0             	xor    %r8d,%r8d
    f0be:	4c 89 f9             	mov    %r15,%rcx
    f0c1:	4c 89 ea             	mov    %r13,%rdx
    f0c4:	4c 89 f6             	mov    %r14,%rsi
    f0c7:	89 df                	mov    %ebx,%edi
    f0c9:	e8 6f 7d ff ff       	call   6e3d <getopt_long>
    f0ce:	85 c0                	test   %eax,%eax
    f0d0:	0f 88 8c 00 00 00    	js     f162 <reparse_options+0x1ef>
    f0d6:	83 f8 3f             	cmp    $0x3f,%eax
    f0d9:	74 29                	je     f104 <reparse_options+0x191>
    f0db:	83 f8 68             	cmp    $0x68,%eax
    f0de:	74 0f                	je     f0ef <reparse_options+0x17c>
    f0e0:	83 f8 3a             	cmp    $0x3a,%eax
    f0e3:	74 31                	je     f116 <reparse_options+0x1a3>
    f0e5:	41 0f b6 7c 24 08    	movzbl 0x8(%r12),%edi
    f0eb:	31 f6                	xor    %esi,%esi
    f0ed:	eb 4e                	jmp    f13d <reparse_options+0x1ca>
    f0ef:	4c 89 f6             	mov    %r14,%rsi
    f0f2:	4c 89 e7             	mov    %r12,%rdi
    f0f5:	e8 a9 fd ff ff       	call   eea3 <print_usage>
    f0fa:	b8 6b de e9 f4       	mov    $0xf4e9de6b,%eax
    f0ff:	e9 8a 00 00 00       	jmp    f18e <reparse_options+0x21b>
    f104:	4c 89 f6             	mov    %r14,%rsi
    f107:	4c 89 e7             	mov    %r12,%rdi
    f10a:	e8 94 fd ff ff       	call   eea3 <print_usage>
    f10f:	b8 7e dd e9 e3       	mov    $0xe3e9dd7e,%eax
    f114:	eb 78                	jmp    f18e <reparse_options+0x21b>
    f116:	4c 89 f6             	mov    %r14,%rsi
    f119:	4c 89 e7             	mov    %r12,%rdi
    f11c:	e8 82 fd ff ff       	call   eea3 <print_usage>
    f121:	b8 7e dc e9 e3       	mov    $0xe3e9dc7e,%eax
    f126:	eb 66                	jmp    f18e <reparse_options+0x21b>
    f128:	48 6b ce 18          	imul   $0x18,%rsi,%rcx
    f12c:	49 03 0c 24          	add    (%r12),%rcx
    f130:	48 ff c6             	inc    %rsi
    f133:	44 0f be 41 08       	movsbl 0x8(%rcx),%r8d
    f138:	41 39 c0             	cmp    %eax,%r8d
    f13b:	74 09                	je     f146 <reparse_options+0x1d3>
    f13d:	39 f7                	cmp    %esi,%edi
    f13f:	77 e7                	ja     f128 <reparse_options+0x1b5>
    f141:	e9 75 ff ff ff       	jmp    f0bb <reparse_options+0x148>
    f146:	0f b7 71 0a          	movzwl 0xa(%rcx),%esi
    f14a:	48 8b 3d 4f ae 01 00 	mov    0x1ae4f(%rip),%rdi        # 29fa0 <optarg>
    f151:	48 03 75 b8          	add    -0x48(%rbp),%rsi
    f155:	ff 51 10             	call   *0x10(%rcx)
    f158:	85 c0                	test   %eax,%eax
    f15a:	0f 84 5b ff ff ff    	je     f0bb <reparse_options+0x148>
    f160:	eb 2c                	jmp    f18e <reparse_options+0x21b>
    f162:	41 0f b6 44 24 0a    	movzbl 0xa(%r12),%eax
    f168:	2b 1d 3a ae 01 00    	sub    0x1ae3a(%rip),%ebx        # 29fa8 <optind>
    f16e:	39 d8                	cmp    %ebx,%eax
    f170:	77 0c                	ja     f17e <reparse_options+0x20b>
    f172:	41 0f b6 54 24 0b    	movzbl 0xb(%r12),%edx
    f178:	31 c0                	xor    %eax,%eax
    f17a:	39 da                	cmp    %ebx,%edx
    f17c:	73 10                	jae    f18e <reparse_options+0x21b>
    f17e:	4c 89 f6             	mov    %r14,%rsi
    f181:	4c 89 e7             	mov    %r12,%rdi
    f184:	e8 1a fd ff ff       	call   eea3 <print_usage>
    f189:	b8 7b df e9 b9       	mov    $0xb9e9df7b,%eax
    f18e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f192:	48 2b 15 d7 ad 01 00 	sub    0x1add7(%rip),%rdx        # 29f70 <__stack_chk_guard>
    f199:	74 05                	je     f1a0 <reparse_options+0x22d>
    f19b:	e8 c0 38 ff ff       	call   2a60 <__stack_chk_fail>
    f1a0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    f1a4:	5b                   	pop    %rbx
    f1a5:	41 5c                	pop    %r12
    f1a7:	41 5d                	pop    %r13
    f1a9:	41 5e                	pop    %r14
    f1ab:	41 5f                	pop    %r15
    f1ad:	5d                   	pop    %rbp
    f1ae:	c3                   	ret    

000000000000f1af <parse_options>:
    f1af:	f3 0f 1e fa          	endbr64 
    f1b3:	49 89 c8             	mov    %rcx,%r8
    f1b6:	41 89 f9             	mov    %edi,%r9d
    f1b9:	0f b6 4a 09          	movzbl 0x9(%rdx),%ecx
    f1bd:	31 c0                	xor    %eax,%eax
    f1bf:	4c 89 c7             	mov    %r8,%rdi
    f1c2:	f3 aa                	rep stos %al,%es:(%rdi)
    f1c4:	4c 89 c1             	mov    %r8,%rcx
    f1c7:	44 89 cf             	mov    %r9d,%edi
    f1ca:	e9 a4 fd ff ff       	jmp    ef73 <reparse_options>

000000000000f1cf <pci_bar>:
    f1cf:	53                   	push   %rbx
    f1d0:	89 f3                	mov    %esi,%ebx
    f1d2:	81 ce 00 00 02 00    	or     $0x20000,%esi
    f1d8:	48 83 ec 20          	sub    $0x20,%rsp
    f1dc:	48 8b 05 8d ad 01 00 	mov    0x1ad8d(%rip),%rax        # 29f70 <__stack_chk_guard>
    f1e3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f1e8:	31 c0                	xor    %eax,%eax
    f1ea:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    f1ef:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    f1f4:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%rsp)
    f1fb:	ff 
    f1fc:	e8 b3 de 00 00       	call   1d0b4 <efipci_read>
    f201:	8b 44 24 10          	mov    0x10(%rsp),%eax
    f205:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    f20a:	83 e0 07             	and    $0x7,%eax
    f20d:	83 f8 04             	cmp    $0x4,%eax
    f210:	75 30                	jne    f242 <pci_bar+0x73>
    f212:	8d 73 04             	lea    0x4(%rbx),%esi
    f215:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
    f21a:	c7 44 24 14 ff ff ff 	movl   $0xffffffff,0x14(%rsp)
    f221:	ff 
    f222:	81 ce 00 00 02 00    	or     $0x20000,%esi
    f228:	e8 87 de 00 00       	call   1d0b4 <efipci_read>
    f22d:	8b 44 24 14          	mov    0x14(%rsp),%eax
    f231:	85 c0                	test   %eax,%eax
    f233:	74 0d                	je     f242 <pci_bar+0x73>
    f235:	8b 54 24 10          	mov    0x10(%rsp),%edx
    f239:	48 c1 e0 20          	shl    $0x20,%rax
    f23d:	48 09 d0             	or     %rdx,%rax
    f240:	eb 04                	jmp    f246 <pci_bar+0x77>
    f242:	8b 44 24 10          	mov    0x10(%rsp),%eax
    f246:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    f24b:	48 2b 15 1e ad 01 00 	sub    0x1ad1e(%rip),%rdx        # 29f70 <__stack_chk_guard>
    f252:	74 05                	je     f259 <pci_bar+0x8a>
    f254:	e8 07 38 ff ff       	call   2a60 <__stack_chk_fail>
    f259:	48 83 c4 20          	add    $0x20,%rsp
    f25d:	5b                   	pop    %rbx
    f25e:	c3                   	ret    

000000000000f25f <adjust_pci_device>:
    f25f:	f3 0f 1e fa          	endbr64 
    f263:	55                   	push   %rbp
    f264:	be 04 00 01 00       	mov    $0x10004,%esi
    f269:	48 89 fd             	mov    %rdi,%rbp
    f26c:	48 83 ec 10          	sub    $0x10,%rsp
    f270:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
    f275:	66 c7 44 24 06 ff ff 	movw   $0xffff,0x6(%rsp)
    f27c:	48 8b 05 ed ac 01 00 	mov    0x1aced(%rip),%rax        # 29f70 <__stack_chk_guard>
    f283:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f288:	31 c0                	xor    %eax,%eax
    f28a:	e8 25 de 00 00       	call   1d0b4 <efipci_read>
    f28f:	66 8b 44 24 06       	mov    0x6(%rsp),%ax
    f294:	89 c2                	mov    %eax,%edx
    f296:	83 ca 07             	or     $0x7,%edx
    f299:	66 39 d0             	cmp    %dx,%ax
    f29c:	74 10                	je     f2ae <adjust_pci_device+0x4f>
    f29e:	0f b7 d2             	movzwl %dx,%edx
    f2a1:	be 04 00 01 00       	mov    $0x10004,%esi
    f2a6:	48 89 ef             	mov    %rbp,%rdi
    f2a9:	e8 e1 de 00 00       	call   1d18f <efipci_write>
    f2ae:	48 8d 54 24 05       	lea    0x5(%rsp),%rdx
    f2b3:	be 0d 00 00 00       	mov    $0xd,%esi
    f2b8:	48 89 ef             	mov    %rbp,%rdi
    f2bb:	c6 44 24 05 ff       	movb   $0xff,0x5(%rsp)
    f2c0:	e8 ef dd 00 00       	call   1d0b4 <efipci_read>
    f2c5:	80 7c 24 05 1f       	cmpb   $0x1f,0x5(%rsp)
    f2ca:	77 12                	ja     f2de <adjust_pci_device+0x7f>
    f2cc:	ba 20 00 00 00       	mov    $0x20,%edx
    f2d1:	be 0d 00 00 00       	mov    $0xd,%esi
    f2d6:	48 89 ef             	mov    %rbp,%rdi
    f2d9:	e8 b1 de 00 00       	call   1d18f <efipci_write>
    f2de:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    f2e3:	48 2b 05 86 ac 01 00 	sub    0x1ac86(%rip),%rax        # 29f70 <__stack_chk_guard>
    f2ea:	74 05                	je     f2f1 <adjust_pci_device+0x92>
    f2ec:	e8 6f 37 ff ff       	call   2a60 <__stack_chk_fail>
    f2f1:	48 83 c4 10          	add    $0x10,%rsp
    f2f5:	5d                   	pop    %rbp
    f2f6:	c3                   	ret    

000000000000f2f7 <pci_read_config>:
    f2f7:	f3 0f 1e fa          	endbr64 
    f2fb:	41 54                	push   %r12
    f2fd:	55                   	push   %rbp
    f2fe:	53                   	push   %rbx
    f2ff:	48 89 fb             	mov    %rdi,%rbx
    f302:	48 83 ec 10          	sub    $0x10,%rsp
    f306:	8b af 9c 00 00 00    	mov    0x9c(%rdi),%ebp
    f30c:	48 8b 05 5d ac 01 00 	mov    0x1ac5d(%rip),%rax        # 29f70 <__stack_chk_guard>
    f313:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f318:	31 c0                	xor    %eax,%eax
    f31a:	40 f6 c5 07          	test   $0x7,%bpl
    f31e:	74 2e                	je     f34e <pci_read_config+0x57>
    f320:	89 e8                	mov    %ebp,%eax
    f322:	48 8d 54 24 03       	lea    0x3(%rsp),%rdx
    f327:	be 0e 00 00 00       	mov    $0xe,%esi
    f32c:	c6 44 24 03 ff       	movb   $0xff,0x3(%rsp)
    f331:	83 e0 f8             	and    $0xfffffff8,%eax
    f334:	89 87 9c 00 00 00    	mov    %eax,0x9c(%rdi)
    f33a:	e8 75 dd 00 00       	call   1d0b4 <efipci_read>
    f33f:	80 7c 24 03 00       	cmpb   $0x0,0x3(%rsp)
    f344:	89 ab 9c 00 00 00    	mov    %ebp,0x9c(%rbx)
    f34a:	78 02                	js     f34e <pci_read_config+0x57>
    f34c:	eb 29                	jmp    f377 <pci_read_config+0x80>
    f34e:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    f353:	be 00 00 02 00       	mov    $0x20000,%esi
    f358:	48 89 df             	mov    %rbx,%rdi
    f35b:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
    f362:	ff 
    f363:	4c 89 e2             	mov    %r12,%rdx
    f366:	e8 49 dd 00 00       	call   1d0b4 <efipci_read>
    f36b:	8b 44 24 04          	mov    0x4(%rsp),%eax
    f36f:	8d 50 ff             	lea    -0x1(%rax),%edx
    f372:	83 fa fd             	cmp    $0xfffffffd,%edx
    f375:	76 0a                	jbe    f381 <pci_read_config+0x8a>
    f377:	b8 79 bf fb d3       	mov    $0xd3fbbf79,%eax
    f37c:	e9 2e 01 00 00       	jmp    f4af <pci_read_config+0x1b8>
    f381:	4c 89 e2             	mov    %r12,%rdx
    f384:	be 08 00 02 00       	mov    $0x20008,%esi
    f389:	48 89 df             	mov    %rbx,%rdi
    f38c:	bd 10 00 00 00       	mov    $0x10,%ebp
    f391:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    f397:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
    f39e:	ff 
    f39f:	e8 10 dd 00 00       	call   1d0b4 <efipci_read>
    f3a4:	8b 44 24 04          	mov    0x4(%rsp),%eax
    f3a8:	be 3c 00 00 00       	mov    $0x3c,%esi
    f3ad:	48 89 df             	mov    %rbx,%rdi
    f3b0:	c6 83 98 00 00 00 ff 	movb   $0xff,0x98(%rbx)
    f3b7:	48 8d 93 98 00 00 00 	lea    0x98(%rbx),%rdx
    f3be:	c1 e8 08             	shr    $0x8,%eax
    f3c1:	89 83 94 00 00 00    	mov    %eax,0x94(%rbx)
    f3c7:	e8 e8 dc 00 00       	call   1d0b4 <efipci_read>
    f3cc:	89 ee                	mov    %ebp,%esi
    f3ce:	48 89 df             	mov    %rbx,%rdi
    f3d1:	e8 f9 fd ff ff       	call   f1cf <pci_bar>
    f3d6:	a8 01                	test   $0x1,%al
    f3d8:	74 17                	je     f3f1 <pci_read_config+0xfa>
    f3da:	48 83 bb 88 00 00 00 	cmpq   $0x0,0x88(%rbx)
    f3e1:	00 
    f3e2:	75 2c                	jne    f410 <pci_read_config+0x119>
    f3e4:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    f3e8:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
    f3ef:	eb 1f                	jmp    f410 <pci_read_config+0x119>
    f3f1:	48 83 bb 80 00 00 00 	cmpq   $0x0,0x80(%rbx)
    f3f8:	00 
    f3f9:	75 0e                	jne    f409 <pci_read_config+0x112>
    f3fb:	48 89 c2             	mov    %rax,%rdx
    f3fe:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
    f402:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    f409:	a8 04                	test   $0x4,%al
    f40b:	74 03                	je     f410 <pci_read_config+0x119>
    f40d:	83 c5 04             	add    $0x4,%ebp
    f410:	83 c5 04             	add    $0x4,%ebp
    f413:	83 fd 24             	cmp    $0x24,%ebp
    f416:	7e b4                	jle    f3cc <pci_read_config+0xd5>
    f418:	8b 83 9c 00 00 00    	mov    0x9c(%rbx),%eax
    f41e:	56                   	push   %rsi
    f41f:	48 89 df             	mov    %rbx,%rdi
    f422:	48 8d 15 4b 42 01 00 	lea    0x1424b(%rip),%rdx        # 23674 <.LC0>
    f429:	be 28 00 00 00       	mov    $0x28,%esi
    f42e:	0f b6 cc             	movzbl %ah,%ecx
    f431:	41 89 c1             	mov    %eax,%r9d
    f434:	41 89 c8             	mov    %ecx,%r8d
    f437:	89 c1                	mov    %eax,%ecx
    f439:	83 e0 07             	and    $0x7,%eax
    f43c:	41 c1 e9 03          	shr    $0x3,%r9d
    f440:	50                   	push   %rax
    f441:	c1 e9 10             	shr    $0x10,%ecx
    f444:	41 83 e1 1f          	and    $0x1f,%r9d
    f448:	31 c0                	xor    %eax,%eax
    f44a:	e8 32 7c 00 00       	call   17081 <snprintf>
    f44f:	8b 83 9c 00 00 00    	mov    0x9c(%rbx),%eax
    f455:	5f                   	pop    %rdi
    f456:	c7 43 30 01 00 00 00 	movl   $0x1,0x30(%rbx)
    f45d:	41 58                	pop    %r8
    f45f:	89 43 34             	mov    %eax,0x34(%rbx)
    f462:	0f b7 83 90 00 00 00 	movzwl 0x90(%rbx),%eax
    f469:	89 43 38             	mov    %eax,0x38(%rbx)
    f46c:	0f b7 83 92 00 00 00 	movzwl 0x92(%rbx),%eax
    f473:	89 43 3c             	mov    %eax,0x3c(%rbx)
    f476:	8b 83 94 00 00 00    	mov    0x94(%rbx),%eax
    f47c:	48 89 43 40          	mov    %rax,0x40(%rbx)
    f480:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    f487:	48 89 43 48          	mov    %rax,0x48(%rbx)
    f48b:	0f b6 83 98 00 00 00 	movzbl 0x98(%rbx),%eax
    f492:	89 43 50             	mov    %eax,0x50(%rbx)
    f495:	48 8d 43 58          	lea    0x58(%rbx),%rax
    f499:	48 89 43 58          	mov    %rax,0x58(%rbx)
    f49d:	48 89 43 60          	mov    %rax,0x60(%rbx)
    f4a1:	48 8d 43 68          	lea    0x68(%rbx),%rax
    f4a5:	48 89 43 68          	mov    %rax,0x68(%rbx)
    f4a9:	48 89 43 70          	mov    %rax,0x70(%rbx)
    f4ad:	31 c0                	xor    %eax,%eax
    f4af:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    f4b4:	48 2b 15 b5 aa 01 00 	sub    0x1aab5(%rip),%rdx        # 29f70 <__stack_chk_guard>
    f4bb:	74 05                	je     f4c2 <pci_read_config+0x1cb>
    f4bd:	e8 9e 35 ff ff       	call   2a60 <__stack_chk_fail>
    f4c2:	48 83 c4 10          	add    $0x10,%rsp
    f4c6:	5b                   	pop    %rbx
    f4c7:	5d                   	pop    %rbp
    f4c8:	41 5c                	pop    %r12
    f4ca:	c3                   	ret    

000000000000f4cb <pci_find_next>:
    f4cb:	f3 0f 1e fa          	endbr64 
    f4cf:	83 3d a6 a7 01 00 00 	cmpl   $0x0,0x1a7a6(%rip)        # 29c7c <end.0>
    f4d6:	41 54                	push   %r12
    f4d8:	55                   	push   %rbp
    f4d9:	53                   	push   %rbx
    f4da:	74 17                	je     f4f3 <pci_find_next+0x28>
    f4dc:	48 89 fd             	mov    %rdi,%rbp
    f4df:	89 f3                	mov    %esi,%ebx
    f4e1:	41 bc b8 00 00 00    	mov    $0xb8,%r12d
    f4e7:	eb 02                	jmp    f4eb <pci_find_next+0x20>
    f4e9:	ff c3                	inc    %ebx
    f4eb:	39 1d 8b a7 01 00    	cmp    %ebx,0x1a78b(%rip)        # 29c7c <end.0>
    f4f1:	77 07                	ja     f4fa <pci_find_next+0x2f>
    f4f3:	b8 79 bf fb d3       	mov    $0xd3fbbf79,%eax
    f4f8:	eb 1e                	jmp    f518 <pci_find_next+0x4d>
    f4fa:	48 89 ef             	mov    %rbp,%rdi
    f4fd:	4c 89 e1             	mov    %r12,%rcx
    f500:	31 c0                	xor    %eax,%eax
    f502:	f3 aa                	rep stos %al,%es:(%rdi)
    f504:	89 9d 9c 00 00 00    	mov    %ebx,0x9c(%rbp)
    f50a:	48 89 ef             	mov    %rbp,%rdi
    f50d:	e8 e5 fd ff ff       	call   f2f7 <pci_read_config>
    f512:	85 c0                	test   %eax,%eax
    f514:	75 d3                	jne    f4e9 <pci_find_next+0x1e>
    f516:	89 d8                	mov    %ebx,%eax
    f518:	5b                   	pop    %rbx
    f519:	5d                   	pop    %rbp
    f51a:	41 5c                	pop    %r12
    f51c:	c3                   	ret    

000000000000f51d <pci_find_driver>:
    f51d:	f3 0f 1e fa          	endbr64 
    f521:	48 8d 05 40 98 01 00 	lea    0x19840(%rip),%rax        # 28d68 <intel_driver>
    f528:	4c 8d 05 61 98 01 00 	lea    0x19861(%rip),%r8        # 28d90 <net_process>
    f52f:	4c 39 c0             	cmp    %r8,%rax
    f532:	73 68                	jae    f59c <pci_find_driver+0x7f>
    f534:	8b 50 0c             	mov    0xc(%rax),%edx
    f537:	33 97 94 00 00 00    	xor    0x94(%rdi),%edx
    f53d:	23 50 10             	and    0x10(%rax),%edx
    f540:	75 54                	jne    f596 <pci_find_driver+0x79>
    f542:	44 8b 48 08          	mov    0x8(%rax),%r9d
    f546:	31 c9                	xor    %ecx,%ecx
    f548:	41 39 c9             	cmp    %ecx,%r9d
    f54b:	76 49                	jbe    f596 <pci_find_driver+0x79>
    f54d:	48 6b d1 18          	imul   $0x18,%rcx,%rdx
    f551:	48 03 10             	add    (%rax),%rdx
    f554:	8b 72 08             	mov    0x8(%rdx),%esi
    f557:	66 83 fe ff          	cmp    $0xffff,%si
    f55b:	74 09                	je     f566 <pci_find_driver+0x49>
    f55d:	66 3b b7 90 00 00 00 	cmp    0x90(%rdi),%si
    f564:	75 2b                	jne    f591 <pci_find_driver+0x74>
    f566:	66 8b 72 0a          	mov    0xa(%rdx),%si
    f56a:	66 83 fe ff          	cmp    $0xffff,%si
    f56e:	75 18                	jne    f588 <pci_find_driver+0x6b>
    f570:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
    f577:	48 8b 02             	mov    (%rdx),%rax
    f57a:	48 89 97 b0 00 00 00 	mov    %rdx,0xb0(%rdi)
    f581:	48 89 47 28          	mov    %rax,0x28(%rdi)
    f585:	31 c0                	xor    %eax,%eax
    f587:	c3                   	ret    
    f588:	66 3b b7 92 00 00 00 	cmp    0x92(%rdi),%si
    f58f:	74 df                	je     f570 <pci_find_driver+0x53>
    f591:	48 ff c1             	inc    %rcx
    f594:	eb b2                	jmp    f548 <pci_find_driver+0x2b>
    f596:	48 83 c0 28          	add    $0x28,%rax
    f59a:	eb 93                	jmp    f52f <pci_find_driver+0x12>
    f59c:	b8 72 bf fb d2       	mov    $0xd2fbbf72,%eax
    f5a1:	c3                   	ret    

000000000000f5a2 <pci_probe>:
    f5a2:	f3 0f 1e fa          	endbr64 
    f5a6:	48 8b 87 a0 00 00 00 	mov    0xa0(%rdi),%rax
    f5ad:	ff 60 18             	jmp    *0x18(%rax)

000000000000f5b0 <pci_remove>:
    f5b0:	f3 0f 1e fa          	endbr64 
    f5b4:	48 8b 87 a0 00 00 00 	mov    0xa0(%rdi),%rax
    f5bb:	ff 60 20             	jmp    *0x20(%rax)

000000000000f5be <pcibus_remove>:
    f5be:	f3 0f 1e fa          	endbr64 
    f5c2:	41 54                	push   %r12
    f5c4:	4c 8d 67 68          	lea    0x68(%rdi),%r12
    f5c8:	55                   	push   %rbp
    f5c9:	53                   	push   %rbx
    f5ca:	48 8b 47 68          	mov    0x68(%rdi),%rax
    f5ce:	48 8b 18             	mov    (%rax),%rbx
    f5d1:	48 8d 68 a8          	lea    -0x58(%rax),%rbp
    f5d5:	48 83 eb 58          	sub    $0x58,%rbx
    f5d9:	48 8d 45 58          	lea    0x58(%rbp),%rax
    f5dd:	4c 39 e0             	cmp    %r12,%rax
    f5e0:	74 2c                	je     f60e <pcibus_remove+0x50>
    f5e2:	48 89 ef             	mov    %rbp,%rdi
    f5e5:	e8 c6 ff ff ff       	call   f5b0 <pci_remove>
    f5ea:	48 8b 45 60          	mov    0x60(%rbp),%rax
    f5ee:	48 8b 55 58          	mov    0x58(%rbp),%rdx
    f5f2:	48 89 ef             	mov    %rbp,%rdi
    f5f5:	48 89 dd             	mov    %rbx,%rbp
    f5f8:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f5fc:	48 89 10             	mov    %rdx,(%rax)
    f5ff:	e8 4b d0 ff ff       	call   c64f <free>
    f604:	48 8b 43 58          	mov    0x58(%rbx),%rax
    f608:	48 8d 58 a8          	lea    -0x58(%rax),%rbx
    f60c:	eb cb                	jmp    f5d9 <pcibus_remove+0x1b>
    f60e:	5b                   	pop    %rbx
    f60f:	5d                   	pop    %rbp
    f610:	41 5c                	pop    %r12
    f612:	c3                   	ret    

000000000000f613 <pcibus_probe>:
    f613:	f3 0f 1e fa          	endbr64 
    f617:	41 56                	push   %r14
    f619:	4c 8d 77 68          	lea    0x68(%rdi),%r14
    f61d:	41 55                	push   %r13
    f61f:	49 89 fd             	mov    %rdi,%r13
    f622:	41 54                	push   %r12
    f624:	45 31 e4             	xor    %r12d,%r12d
    f627:	55                   	push   %rbp
    f628:	31 ed                	xor    %ebp,%ebp
    f62a:	51                   	push   %rcx
    f62b:	48 85 ed             	test   %rbp,%rbp
    f62e:	75 28                	jne    f658 <pcibus_probe+0x45>
    f630:	bf b8 00 00 00       	mov    $0xb8,%edi
    f635:	e8 07 d0 ff ff       	call   c641 <malloc>
    f63a:	48 89 c5             	mov    %rax,%rbp
    f63d:	48 85 c0             	test   %rax,%rax
    f640:	75 16                	jne    f658 <pcibus_probe+0x45>
    f642:	31 ff                	xor    %edi,%edi
    f644:	e8 06 d0 ff ff       	call   c64f <free>
    f649:	4c 89 ef             	mov    %r13,%rdi
    f64c:	e8 6d ff ff ff       	call   f5be <pcibus_remove>
    f651:	b8 77 bf fb ce       	mov    $0xcefbbf77,%eax
    f656:	eb 59                	jmp    f6b1 <pcibus_probe+0x9e>
    f658:	44 89 e6             	mov    %r12d,%esi
    f65b:	48 89 ef             	mov    %rbp,%rdi
    f65e:	e8 68 fe ff ff       	call   f4cb <pci_find_next>
    f663:	48 89 ef             	mov    %rbp,%rdi
    f666:	41 89 c4             	mov    %eax,%r12d
    f669:	85 c0                	test   %eax,%eax
    f66b:	78 3d                	js     f6aa <pcibus_probe+0x97>
    f66d:	e8 ab fe ff ff       	call   f51d <pci_find_driver>
    f672:	85 c0                	test   %eax,%eax
    f674:	75 2f                	jne    f6a5 <pcibus_probe+0x92>
    f676:	4c 89 6d 78          	mov    %r13,0x78(%rbp)
    f67a:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
    f67e:	4c 89 f6             	mov    %r14,%rsi
    f681:	e8 3b ca ff ff       	call   c0c1 <extern_list_add>
    f686:	48 89 ef             	mov    %rbp,%rdi
    f689:	e8 14 ff ff ff       	call   f5a2 <pci_probe>
    f68e:	85 c0                	test   %eax,%eax
    f690:	74 11                	je     f6a3 <pcibus_probe+0x90>
    f692:	48 8b 55 58          	mov    0x58(%rbp),%rdx
    f696:	48 8b 45 60          	mov    0x60(%rbp),%rax
    f69a:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f69e:	48 89 10             	mov    %rdx,(%rax)
    f6a1:	eb 02                	jmp    f6a5 <pcibus_probe+0x92>
    f6a3:	31 ed                	xor    %ebp,%ebp
    f6a5:	41 ff c4             	inc    %r12d
    f6a8:	eb 81                	jmp    f62b <pcibus_probe+0x18>
    f6aa:	e8 a0 cf ff ff       	call   c64f <free>
    f6af:	31 c0                	xor    %eax,%eax
    f6b1:	5a                   	pop    %rdx
    f6b2:	5d                   	pop    %rbp
    f6b3:	41 5c                	pop    %r12
    f6b5:	41 5d                	pop    %r13
    f6b7:	41 5e                	pop    %r14
    f6b9:	c3                   	ret    

000000000000f6ba <pci_settings_applies>:
    f6ba:	f3 0f 1e fa          	endbr64 
    f6be:	48 8d 05 3b 2e 01 00 	lea    0x12e3b(%rip),%rax        # 22500 <pci_settings_scope>
    f6c5:	48 39 46 20          	cmp    %rax,0x20(%rsi)
    f6c9:	0f 94 c0             	sete   %al
    f6cc:	0f b6 c0             	movzbl %al,%eax
    f6cf:	c3                   	ret    

000000000000f6d0 <pci_settings_init>:
    f6d0:	f3 0f 1e fa          	endbr64 
    f6d4:	48 8d 15 ab 3f 01 00 	lea    0x13fab(%rip),%rdx        # 23686 <.LC0>
    f6db:	31 f6                	xor    %esi,%esi
    f6dd:	48 8d 3d 1c 73 01 00 	lea    0x1731c(%rip),%rdi        # 26a00 <pci_settings>
    f6e4:	e9 d5 28 00 00       	jmp    11fbe <register_settings>

000000000000f6e9 <pci_settings_fetch>:
    f6e9:	f3 0f 1e fa          	endbr64 
    f6ed:	41 57                	push   %r15
    f6ef:	41 56                	push   %r14
    f6f1:	41 55                	push   %r13
    f6f3:	41 54                	push   %r12
    f6f5:	55                   	push   %rbp
    f6f6:	48 89 cd             	mov    %rcx,%rbp
    f6f9:	b9 b8 00 00 00       	mov    $0xb8,%ecx
    f6fe:	53                   	push   %rbx
    f6ff:	48 89 f3             	mov    %rsi,%rbx
    f702:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    f709:	48 8b 76 18          	mov    0x18(%rsi),%rsi
    f70d:	48 8b 05 5c a8 01 00 	mov    0x1a85c(%rip),%rax        # 29f70 <__stack_chk_guard>
    f714:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    f71b:	00 
    f71c:	31 c0                	xor    %eax,%eax
    f71e:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
    f723:	89 f0                	mov    %esi,%eax
    f725:	44 0f b6 ee          	movzbl %sil,%r13d
    f729:	4c 89 ff             	mov    %r15,%rdi
    f72c:	0f b6 c4             	movzbl %ah,%eax
    f72f:	4d 89 ee             	mov    %r13,%r14
    f732:	41 89 c4             	mov    %eax,%r12d
    f735:	31 c0                	xor    %eax,%eax
    f737:	f3 aa                	rep stos %al,%es:(%rdi)
    f739:	48 c1 ee 10          	shr    $0x10,%rsi
    f73d:	48 8d 04 2a          	lea    (%rdx,%rbp,1),%rax
    f741:	45 01 ec             	add    %r13d,%r12d
    f744:	49 01 d5             	add    %rdx,%r13
    f747:	89 b4 24 ac 00 00 00 	mov    %esi,0xac(%rsp)
    f74e:	41 01 d4             	add    %edx,%r12d
    f751:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f756:	4c 39 ea             	cmp    %r13,%rdx
    f759:	74 20                	je     f77b <pci_settings_fetch+0x92>
    f75b:	48 3b 54 24 08       	cmp    0x8(%rsp),%rdx
    f760:	74 19                	je     f77b <pci_settings_fetch+0x92>
    f762:	c6 02 ff             	movb   $0xff,(%rdx)
    f765:	48 8d 6a 01          	lea    0x1(%rdx),%rbp
    f769:	44 89 e6             	mov    %r12d,%esi
    f76c:	4c 89 ff             	mov    %r15,%rdi
    f76f:	29 ee                	sub    %ebp,%esi
    f771:	e8 3e d9 00 00       	call   1d0b4 <efipci_read>
    f776:	48 89 ea             	mov    %rbp,%rdx
    f779:	eb db                	jmp    f756 <pci_settings_fetch+0x6d>
    f77b:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    f780:	75 0b                	jne    f78d <pci_settings_fetch+0xa4>
    f782:	48 8d 05 37 98 01 00 	lea    0x19837(%rip),%rax        # 28fc0 <setting_type_hexraw>
    f789:	48 89 43 10          	mov    %rax,0x10(%rbx)
    f78d:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    f794:	00 
    f795:	48 2b 05 d4 a7 01 00 	sub    0x1a7d4(%rip),%rax        # 29f70 <__stack_chk_guard>
    f79c:	74 05                	je     f7a3 <pci_settings_fetch+0xba>
    f79e:	e8 bd 32 ff ff       	call   2a60 <__stack_chk_fail>
    f7a3:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    f7aa:	44 89 f0             	mov    %r14d,%eax
    f7ad:	5b                   	pop    %rbx
    f7ae:	5d                   	pop    %rbp
    f7af:	41 5c                	pop    %r12
    f7b1:	41 5d                	pop    %r13
    f7b3:	41 5e                	pop    %r14
    f7b5:	41 5f                	pop    %r15
    f7b7:	c3                   	ret    

000000000000f7b8 <pool_recycle>:
    f7b8:	f3 0f 1e fa          	endbr64 
    f7bc:	48 8d 35 f5 ff ff ff 	lea    -0xb(%rip),%rsi        # f7b8 <pool_recycle>
    f7c3:	e9 7b a3 ff ff       	jmp    9b43 <intf_poke>

000000000000f7c8 <pool_reopen>:
    f7c8:	f3 0f 1e fa          	endbr64 
    f7cc:	48 8d 35 f5 ff ff ff 	lea    -0xb(%rip),%rsi        # f7c8 <pool_reopen>
    f7d3:	e9 6b a3 ff ff       	jmp    9b43 <intf_poke>

000000000000f7d8 <pool_add>:
    f7d8:	f3 0f 1e fa          	endbr64 
    f7dc:	55                   	push   %rbp
    f7dd:	48 89 d5             	mov    %rdx,%rbp
    f7e0:	53                   	push   %rbx
    f7e1:	48 89 fb             	mov    %rdi,%rbx
    f7e4:	50                   	push   %rax
    f7e5:	e8 ed c8 ff ff       	call   c0d7 <extern_list_add_tail>
    f7ea:	5a                   	pop    %rdx
    f7eb:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    f7ef:	48 89 ee             	mov    %rbp,%rsi
    f7f2:	5b                   	pop    %rbx
    f7f3:	5d                   	pop    %rbp
    f7f4:	e9 69 0a 00 00       	jmp    10262 <start_timer_fixed>

000000000000f7f9 <pool_del>:
    f7f9:	f3 0f 1e fa          	endbr64 
    f7fd:	53                   	push   %rbx
    f7fe:	48 8b 17             	mov    (%rdi),%rdx
    f801:	48 89 fb             	mov    %rdi,%rbx
    f804:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f808:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f80c:	48 89 10             	mov    %rdx,(%rax)
    f80f:	48 89 3f             	mov    %rdi,(%rdi)
    f812:	48 89 7f 08          	mov    %rdi,0x8(%rdi)
    f816:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
    f81a:	e8 b1 0a 00 00       	call   102d0 <stop_timer>
    f81f:	c7 43 68 02 00 00 00 	movl   $0x2,0x68(%rbx)
    f826:	5b                   	pop    %rbx
    f827:	c3                   	ret    

000000000000f828 <pool_expired>:
    f828:	f3 0f 1e fa          	endbr64 
    f82c:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
    f830:	48 8b 57 f0          	mov    -0x10(%rdi),%rdx
    f834:	4c 8d 47 f0          	lea    -0x10(%rdi),%r8
    f838:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f83c:	48 89 10             	mov    %rdx,(%rax)
    f83f:	48 8b 47 50          	mov    0x50(%rdi),%rax
    f843:	4c 89 47 f0          	mov    %r8,-0x10(%rdi)
    f847:	4c 89 47 f8          	mov    %r8,-0x8(%rdi)
    f84b:	4c 89 c7             	mov    %r8,%rdi
    f84e:	ff e0                	jmp    *%rax

000000000000f850 <_printw_handler>:
    f850:	f3 0f 1e fa          	endbr64 
    f854:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    f858:	31 d2                	xor    %edx,%edx
    f85a:	0b 77 08             	or     0x8(%rdi),%esi
    f85d:	e9 d0 db ff ff       	jmp    d432 <_wputch>

000000000000f862 <waddnstr>:
    f862:	f3 0f 1e fa          	endbr64 
    f866:	50                   	push   %rax
    f867:	89 d1                	mov    %edx,%ecx
    f869:	31 d2                	xor    %edx,%edx
    f86b:	e8 30 dc ff ff       	call   d4a0 <_wputstr>
    f870:	31 c0                	xor    %eax,%eax
    f872:	5a                   	pop    %rdx
    f873:	c3                   	ret    

000000000000f874 <vw_printw>:
    f874:	f3 0f 1e fa          	endbr64 
    f878:	48 83 ec 28          	sub    $0x28,%rsp
    f87c:	48 8b 05 ed a6 01 00 	mov    0x1a6ed(%rip),%rax        # 29f70 <__stack_chk_guard>
    f883:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f888:	31 c0                	xor    %eax,%eax
    f88a:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    f88f:	48 89 e7             	mov    %rsp,%rdi
    f892:	48 8d 05 b7 ff ff ff 	lea    -0x49(%rip),%rax        # f850 <_printw_handler>
    f899:	48 89 04 24          	mov    %rax,(%rsp)
    f89d:	e8 55 73 00 00       	call   16bf7 <vcprintf>
    f8a2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    f8a7:	48 2b 05 c2 a6 01 00 	sub    0x1a6c2(%rip),%rax        # 29f70 <__stack_chk_guard>
    f8ae:	74 05                	je     f8b5 <vw_printw+0x41>
    f8b0:	e8 ab 31 ff ff       	call   2a60 <__stack_chk_fail>
    f8b5:	31 c0                	xor    %eax,%eax
    f8b7:	48 83 c4 28          	add    $0x28,%rsp
    f8bb:	c3                   	ret    

000000000000f8bc <wprintw>:
    f8bc:	f3 0f 1e fa          	endbr64 
    f8c0:	48 83 ec 58          	sub    $0x58,%rsp
    f8c4:	48 8b 05 a5 a6 01 00 	mov    0x1a6a5(%rip),%rax        # 29f70 <__stack_chk_guard>
    f8cb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f8d0:	31 c0                	xor    %eax,%eax
    f8d2:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
    f8d7:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    f8dc:	48 89 e2             	mov    %rsp,%rdx
    f8df:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f8e4:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    f8e9:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    f8ee:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    f8f3:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    f8f8:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
    f8ff:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    f904:	e8 6b ff ff ff       	call   f874 <vw_printw>
    f909:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    f90e:	48 2b 15 5b a6 01 00 	sub    0x1a65b(%rip),%rdx        # 29f70 <__stack_chk_guard>
    f915:	74 05                	je     f91c <wprintw+0x60>
    f917:	e8 44 31 ff ff       	call   2a60 <__stack_chk_fail>
    f91c:	48 83 c4 58          	add    $0x58,%rsp
    f920:	c3                   	ret    

000000000000f921 <process_object>:
    f921:	f3 0f 1e fa          	endbr64 
    f925:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    f929:	48 89 f8             	mov    %rdi,%rax
    f92c:	48 2b 42 08          	sub    0x8(%rdx),%rax
    f930:	c3                   	ret    

000000000000f931 <process_add>:
    f931:	f3 0f 1e fa          	endbr64 
    f935:	48 39 3f             	cmp    %rdi,(%rdi)
    f938:	75 1d                	jne    f957 <process_add+0x26>
    f93a:	55                   	push   %rbp
    f93b:	48 89 fd             	mov    %rdi,%rbp
    f93e:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    f942:	e8 eb 04 00 00       	call   fe32 <ref_increment>
    f947:	48 89 ef             	mov    %rbp,%rdi
    f94a:	48 8d 35 3f 71 01 00 	lea    0x1713f(%rip),%rsi        # 26a90 <run_queue>
    f951:	5d                   	pop    %rbp
    f952:	e9 80 c7 ff ff       	jmp    c0d7 <extern_list_add_tail>
    f957:	c3                   	ret    

000000000000f958 <init_processes>:
    f958:	f3 0f 1e fa          	endbr64 
    f95c:	55                   	push   %rbp
    f95d:	48 8d 2d 6c 94 01 00 	lea    0x1946c(%rip),%rbp        # 28dd0 <__table_entries.0>
    f964:	53                   	push   %rbx
    f965:	48 8d 1d 24 94 01 00 	lea    0x19424(%rip),%rbx        # 28d90 <net_process>
    f96c:	52                   	push   %rdx
    f96d:	48 39 eb             	cmp    %rbp,%rbx
    f970:	73 0e                	jae    f980 <init_processes+0x28>
    f972:	48 89 df             	mov    %rbx,%rdi
    f975:	48 83 c3 20          	add    $0x20,%rbx
    f979:	e8 b3 ff ff ff       	call   f931 <process_add>
    f97e:	eb ed                	jmp    f96d <init_processes+0x15>
    f980:	58                   	pop    %rax
    f981:	5b                   	pop    %rbx
    f982:	5d                   	pop    %rbp
    f983:	c3                   	ret    

000000000000f984 <process_del>:
    f984:	f3 0f 1e fa          	endbr64 
    f988:	48 8b 07             	mov    (%rdi),%rax
    f98b:	48 39 f8             	cmp    %rdi,%rax
    f98e:	74 1b                	je     f9ab <process_del+0x27>
    f990:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    f994:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f998:	48 89 02             	mov    %rax,(%rdx)
    f99b:	48 89 3f             	mov    %rdi,(%rdi)
    f99e:	48 89 7f 08          	mov    %rdi,0x8(%rdi)
    f9a2:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    f9a6:	e9 93 04 00 00       	jmp    fe3e <ref_decrement>
    f9ab:	c3                   	ret    

000000000000f9ac <step>:
    f9ac:	f3 0f 1e fa          	endbr64 
    f9b0:	41 55                	push   %r13
    f9b2:	4c 8d 2d d7 70 01 00 	lea    0x170d7(%rip),%r13        # 26a90 <run_queue>
    f9b9:	41 54                	push   %r12
    f9bb:	55                   	push   %rbp
    f9bc:	53                   	push   %rbx
    f9bd:	51                   	push   %rcx
    f9be:	48 8b 1d cb 70 01 00 	mov    0x170cb(%rip),%rbx        # 26a90 <run_queue>
    f9c5:	4c 39 eb             	cmp    %r13,%rbx
    f9c8:	74 5a                	je     fa24 <step+0x78>
    f9ca:	48 85 db             	test   %rbx,%rbx
    f9cd:	74 55                	je     fa24 <step+0x78>
    f9cf:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    f9d3:	e8 5a 04 00 00       	call   fe32 <ref_increment>
    f9d8:	4c 8b 63 10          	mov    0x10(%rbx),%r12
    f9dc:	48 89 df             	mov    %rbx,%rdi
    f9df:	e8 3d ff ff ff       	call   f921 <process_object>
    f9e4:	41 83 7c 24 18 00    	cmpl   $0x0,0x18(%r12)
    f9ea:	48 89 c5             	mov    %rax,%rbp
    f9ed:	74 18                	je     fa07 <step+0x5b>
    f9ef:	48 8b 13             	mov    (%rbx),%rdx
    f9f2:	48 8b 43 08          	mov    0x8(%rbx),%rax
    f9f6:	4c 89 ee             	mov    %r13,%rsi
    f9f9:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f9fd:	48 89 10             	mov    %rdx,(%rax)
    fa00:	e8 d2 c6 ff ff       	call   c0d7 <extern_list_add_tail>
    fa05:	eb 05                	jmp    fa0c <step+0x60>
    fa07:	e8 78 ff ff ff       	call   f984 <process_del>
    fa0c:	48 89 ef             	mov    %rbp,%rdi
    fa0f:	41 ff 54 24 10       	call   *0x10(%r12)
    fa14:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    fa18:	5a                   	pop    %rdx
    fa19:	5b                   	pop    %rbx
    fa1a:	5d                   	pop    %rbp
    fa1b:	41 5c                	pop    %r12
    fa1d:	41 5d                	pop    %r13
    fa1f:	e9 1a 04 00 00       	jmp    fe3e <ref_decrement>
    fa24:	58                   	pop    %rax
    fa25:	5b                   	pop    %rbx
    fa26:	5d                   	pop    %rbp
    fa27:	41 5c                	pop    %r12
    fa29:	41 5d                	pop    %r13
    fa2b:	c3                   	ret    

000000000000fa2c <srandom>:
    fa2c:	f3 0f 1e fa          	endbr64 
    fa30:	85 ff                	test   %edi,%edi
    fa32:	b8 04 00 00 00       	mov    $0x4,%eax
    fa37:	0f 44 f8             	cmove  %eax,%edi
    fa3a:	89 3d 44 a2 01 00    	mov    %edi,0x1a244(%rip)        # 29c84 <rnd_seed>
    fa40:	c3                   	ret    

000000000000fa41 <random>:
    fa41:	f3 0f 1e fa          	endbr64 
    fa45:	51                   	push   %rcx
    fa46:	83 3d 37 a2 01 00 00 	cmpl   $0x0,0x1a237(%rip)        # 29c84 <rnd_seed>
    fa4d:	75 0c                	jne    fa5b <random+0x1a>
    fa4f:	e8 7d 62 00 00       	call   15cd1 <currticks>
    fa54:	89 c7                	mov    %eax,%edi
    fa56:	e8 d1 ff ff ff       	call   fa2c <srandom>
    fa5b:	8b 05 23 a2 01 00    	mov    0x1a223(%rip),%eax        # 29c84 <rnd_seed>
    fa61:	b9 a4 d1 00 00       	mov    $0xd1a4,%ecx
    fa66:	99                   	cltd   
    fa67:	f7 f9                	idiv   %ecx
    fa69:	69 d0 5c 2e ff ff    	imul   $0xffff2e5c,%eax,%edx
    fa6f:	03 15 0f a2 01 00    	add    0x1a20f(%rip),%edx        # 29c84 <rnd_seed>
    fa75:	69 d2 4e 9c 00 00    	imul   $0x9c4e,%edx,%edx
    fa7b:	69 c0 4d d0 ff ff    	imul   $0xffffd04d,%eax,%eax
    fa81:	01 d0                	add    %edx,%eax
    fa83:	8d 90 ab ff ff 7f    	lea    0x7fffffab(%rax),%edx
    fa89:	0f 48 c2             	cmovs  %edx,%eax
    fa8c:	89 05 f2 a1 01 00    	mov    %eax,0x1a1f2(%rip)        # 29c84 <rnd_seed>
    fa92:	48 98                	cltq   
    fa94:	5a                   	pop    %rdx
    fa95:	c3                   	ret    

000000000000fa96 <sync_console>:
    fa96:	41 57                	push   %r15
    fa98:	41 56                	push   %r14
    fa9a:	41 55                	push   %r13
    fa9c:	41 54                	push   %r12
    fa9e:	55                   	push   %rbp
    fa9f:	48 89 fd             	mov    %rdi,%rbp
    faa2:	53                   	push   %rbx
    faa3:	52                   	push   %rdx
    faa4:	8b 5f 14             	mov    0x14(%rdi),%ebx
    faa7:	48 8b 3f             	mov    (%rdi),%rdi
    faaa:	41 89 df             	mov    %ebx,%r15d
    faad:	e8 88 3e 00 00       	call   1393a <strlen>
    fab2:	44 8b 6d 18          	mov    0x18(%rbp),%r13d
    fab6:	44 8b 65 10          	mov    0x10(%rbp),%r12d
    faba:	49 89 c6             	mov    %rax,%r14
    fabd:	8b 45 1c             	mov    0x1c(%rbp),%eax
    fac0:	44 39 eb             	cmp    %r13d,%ebx
    fac3:	44 0f 46 eb          	cmovbe %ebx,%r13d
    fac7:	41 39 c4             	cmp    %eax,%r12d
    faca:	44 0f 42 e0          	cmovb  %eax,%r12d
    face:	45 39 fd             	cmp    %r15d,%r13d
    fad1:	73 0f                	jae    fae2 <sync_console+0x4c>
    fad3:	bf 08 00 00 00       	mov    $0x8,%edi
    fad8:	41 ff cf             	dec    %r15d
    fadb:	e8 6e 97 00 00       	call   1924e <putchar>
    fae0:	eb ec                	jmp    face <sync_console+0x38>
    fae2:	44 89 e8             	mov    %r13d,%eax
    fae5:	31 d2                	xor    %edx,%edx
    fae7:	29 d8                	sub    %ebx,%eax
    fae9:	41 39 dd             	cmp    %ebx,%r13d
    faec:	0f 47 c2             	cmova  %edx,%eax
    faef:	44 8d 2c 03          	lea    (%rbx,%rax,1),%r13d
    faf3:	4c 89 eb             	mov    %r13,%rbx
    faf6:	45 39 ec             	cmp    %r13d,%r12d
    faf9:	76 1d                	jbe    fb18 <sync_console+0x82>
    fafb:	bf 20 00 00 00       	mov    $0x20,%edi
    fb00:	4d 39 ee             	cmp    %r13,%r14
    fb03:	76 09                	jbe    fb0e <sync_console+0x78>
    fb05:	48 8b 45 00          	mov    0x0(%rbp),%rax
    fb09:	42 0f be 3c 28       	movsbl (%rax,%r13,1),%edi
    fb0e:	e8 3b 97 00 00       	call   1924e <putchar>
    fb13:	49 ff c5             	inc    %r13
    fb16:	eb de                	jmp    faf6 <sync_console+0x60>
    fb18:	44 89 e0             	mov    %r12d,%eax
    fb1b:	31 d2                	xor    %edx,%edx
    fb1d:	29 d8                	sub    %ebx,%eax
    fb1f:	41 39 dc             	cmp    %ebx,%r12d
    fb22:	0f 42 c2             	cmovb  %edx,%eax
    fb25:	01 c3                	add    %eax,%ebx
    fb27:	39 5d 10             	cmp    %ebx,0x10(%rbp)
    fb2a:	73 0e                	jae    fb3a <sync_console+0xa4>
    fb2c:	bf 08 00 00 00       	mov    $0x8,%edi
    fb31:	ff cb                	dec    %ebx
    fb33:	e8 16 97 00 00       	call   1924e <putchar>
    fb38:	eb ed                	jmp    fb27 <sync_console+0x91>
    fb3a:	58                   	pop    %rax
    fb3b:	5b                   	pop    %rbx
    fb3c:	5d                   	pop    %rbp
    fb3d:	41 5c                	pop    %r12
    fb3f:	41 5d                	pop    %r13
    fb41:	41 5e                	pop    %r14
    fb43:	41 5f                	pop    %r15
    fb45:	c3                   	ret    

000000000000fb46 <history_free>:
    fb46:	f3 0f 1e fa          	endbr64 
    fb4a:	55                   	push   %rbp
    fb4b:	48 8d af 80 00 00 00 	lea    0x80(%rdi),%rbp
    fb52:	53                   	push   %rbx
    fb53:	48 89 fb             	mov    %rdi,%rbx
    fb56:	52                   	push   %rdx
    fb57:	48 8b 3b             	mov    (%rbx),%rdi
    fb5a:	48 83 c3 10          	add    $0x10,%rbx
    fb5e:	e8 ec ca ff ff       	call   c64f <free>
    fb63:	48 39 eb             	cmp    %rbp,%rbx
    fb66:	75 ef                	jne    fb57 <history_free+0x11>
    fb68:	58                   	pop    %rax
    fb69:	5b                   	pop    %rbx
    fb6a:	5d                   	pop    %rbp
    fb6b:	c3                   	ret    

000000000000fb6c <readline_history>:
    fb6c:	f3 0f 1e fa          	endbr64 
    fb70:	41 57                	push   %r15
    fb72:	41 56                	push   %r14
    fb74:	49 89 ce             	mov    %rcx,%r14
    fb77:	41 55                	push   %r13
    fb79:	41 54                	push   %r12
    fb7b:	55                   	push   %rbp
    fb7c:	48 89 f5             	mov    %rsi,%rbp
    fb7f:	53                   	push   %rbx
    fb80:	48 89 d3             	mov    %rdx,%rbx
    fb83:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
    fb8a:	48 8b 05 df a3 01 00 	mov    0x1a3df(%rip),%rax        # 29f70 <__stack_chk_guard>
    fb91:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
    fb98:	00 
    fb99:	31 c0                	xor    %eax,%eax
    fb9b:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    fba2:	48 85 ff             	test   %rdi,%rdi
    fba5:	74 0f                	je     fbb6 <readline_history+0x4a>
    fba7:	48 89 fe             	mov    %rdi,%rsi
    fbaa:	48 8d 3d 70 3a 01 00 	lea    0x13a70(%rip),%rdi        # 23621 <.LC0>
    fbb1:	e8 e8 75 00 00       	call   1719e <printf>
    fbb6:	48 8d 3d cd 3a 01 00 	lea    0x13acd(%rip),%rdi        # 2368a <.LC1>
    fbbd:	31 c0                	xor    %eax,%eax
    fbbf:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
    fbc4:	e8 d5 75 00 00       	call   1719e <printf>
    fbc9:	4c 89 ef             	mov    %r13,%rdi
    fbcc:	b9 20 00 00 00       	mov    $0x20,%ecx
    fbd1:	31 c0                	xor    %eax,%eax
    fbd3:	f3 aa                	rep stos %al,%es:(%rdi)
    fbd5:	4c 8d 7c 24 48       	lea    0x48(%rsp),%r15
    fbda:	c6 44 24 48 00       	movb   $0x0,0x48(%rsp)
    fbdf:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
    fbe4:	48 c7 44 24 30 00 01 	movq   $0x100,0x30(%rsp)
    fbeb:	00 00 
    fbed:	48 85 ed             	test   %rbp,%rbp
    fbf0:	74 13                	je     fc05 <readline_history+0x99>
    fbf2:	48 89 ee             	mov    %rbp,%rsi
    fbf5:	4c 89 ef             	mov    %r13,%rdi
    fbf8:	e8 9c b3 00 00       	call   1af99 <replace_string>
    fbfd:	4c 89 ef             	mov    %r13,%rdi
    fc00:	e8 91 fe ff ff       	call   fa96 <sync_console>
    fc05:	31 ff                	xor    %edi,%edi
    fc07:	e8 53 e7 00 00       	call   1e35f <getkey>
    fc0c:	4c 89 ef             	mov    %r13,%rdi
    fc0f:	89 c6                	mov    %eax,%esi
    fc11:	e8 9a b3 00 00       	call   1afb0 <edit_string>
    fc16:	4c 89 ef             	mov    %r13,%rdi
    fc19:	89 c5                	mov    %eax,%ebp
    fc1b:	e8 76 fe ff ff       	call   fa96 <sync_console>
    fc20:	81 fd 41 01 00 00    	cmp    $0x141,%ebp
    fc26:	74 4a                	je     fc72 <readline_history+0x106>
    fc28:	7f 13                	jg     fc3d <readline_history+0xd1>
    fc2a:	83 fd 0a             	cmp    $0xa,%ebp
    fc2d:	74 20                	je     fc4f <readline_history+0xe3>
    fc2f:	83 fd 0d             	cmp    $0xd,%ebp
    fc32:	74 1b                	je     fc4f <readline_history+0xe3>
    fc34:	83 fd 03             	cmp    $0x3,%ebp
    fc37:	74 31                	je     fc6a <readline_history+0xfe>
    fc39:	31 ed                	xor    %ebp,%ebp
    fc3b:	eb 3a                	jmp    fc77 <readline_history+0x10b>
    fc3d:	81 fd 42 01 00 00    	cmp    $0x142,%ebp
    fc43:	40 0f 94 c5          	sete   %bpl
    fc47:	40 0f b6 ed          	movzbl %bpl,%ebp
    fc4b:	f7 dd                	neg    %ebp
    fc4d:	eb 28                	jmp    fc77 <readline_history+0x10b>
    fc4f:	4c 89 ff             	mov    %r15,%rdi
    fc52:	45 31 e4             	xor    %r12d,%r12d
    fc55:	e8 f3 3d 00 00       	call   13a4d <strdup>
    fc5a:	49 89 06             	mov    %rax,(%r14)
    fc5d:	48 85 c0             	test   %rax,%rax
    fc60:	75 56                	jne    fcb8 <readline_history+0x14c>
    fc62:	41 bc 77 1f cd ce    	mov    $0xcecd1f77,%r12d
    fc68:	eb 4e                	jmp    fcb8 <readline_history+0x14c>
    fc6a:	41 bc 6b 1f cd f4    	mov    $0xf4cd1f6b,%r12d
    fc70:	eb 46                	jmp    fcb8 <readline_history+0x14c>
    fc72:	bd 01 00 00 00       	mov    $0x1,%ebp
    fc77:	85 ed                	test   %ebp,%ebp
    fc79:	74 8a                	je     fc05 <readline_history+0x99>
    fc7b:	48 85 db             	test   %rbx,%rbx
    fc7e:	74 85                	je     fc05 <readline_history+0x99>
    fc80:	8b 93 84 00 00 00    	mov    0x84(%rbx),%edx
    fc86:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax
    fc8c:	01 d5                	add    %edx,%ebp
    fc8e:	29 e8                	sub    %ebp,%eax
    fc90:	83 e0 07             	and    $0x7,%eax
    fc93:	48 c1 e0 04          	shl    $0x4,%rax
    fc97:	48 01 d8             	add    %rbx,%rax
    fc9a:	48 8b 70 08          	mov    0x8(%rax),%rsi
    fc9e:	48 85 f6             	test   %rsi,%rsi
    fca1:	0f 85 a4 00 00 00    	jne    fd4b <readline_history+0x1df>
    fca7:	48 8b 30             	mov    (%rax),%rsi
    fcaa:	48 85 f6             	test   %rsi,%rsi
    fcad:	0f 85 98 00 00 00    	jne    fd4b <readline_history+0x1df>
    fcb3:	e9 4d ff ff ff       	jmp    fc05 <readline_history+0x99>
    fcb8:	bf 0a 00 00 00       	mov    $0xa,%edi
    fcbd:	e8 8c 95 00 00       	call   1924e <putchar>
    fcc2:	48 85 db             	test   %rbx,%rbx
    fcc5:	0f 84 e6 00 00 00    	je     fdb1 <readline_history+0x245>
    fccb:	49 8b 3e             	mov    (%r14),%rdi
    fcce:	48 85 ff             	test   %rdi,%rdi
    fcd1:	74 4a                	je     fd1d <readline_history+0x1b1>
    fcd3:	80 3f 00             	cmpb   $0x0,(%rdi)
    fcd6:	74 45                	je     fd1d <readline_history+0x1b1>
    fcd8:	8b ab 80 00 00 00    	mov    0x80(%rbx),%ebp
    fcde:	e8 6a 3d 00 00       	call   13a4d <strdup>
    fce3:	83 e5 07             	and    $0x7,%ebp
    fce6:	48 c1 e5 04          	shl    $0x4,%rbp
    fcea:	48 89 04 2b          	mov    %rax,(%rbx,%rbp,1)
    fcee:	48 85 c0             	test   %rax,%rax
    fcf1:	74 2a                	je     fd1d <readline_history+0x1b1>
    fcf3:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax
    fcf9:	8d 68 01             	lea    0x1(%rax),%ebp
    fcfc:	89 ab 80 00 00 00    	mov    %ebp,0x80(%rbx)
    fd02:	83 e5 07             	and    $0x7,%ebp
    fd05:	48 c1 e5 04          	shl    $0x4,%rbp
    fd09:	48 01 dd             	add    %rbx,%rbp
    fd0c:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    fd10:	e8 3a c9 ff ff       	call   c64f <free>
    fd15:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    fd1c:	00 
    fd1d:	31 ed                	xor    %ebp,%ebp
    fd1f:	48 8b 7c 2b 08       	mov    0x8(%rbx,%rbp,1),%rdi
    fd24:	e8 26 c9 ff ff       	call   c64f <free>
    fd29:	48 c7 44 2b 08 00 00 	movq   $0x0,0x8(%rbx,%rbp,1)
    fd30:	00 00 
    fd32:	48 83 c5 10          	add    $0x10,%rbp
    fd36:	48 81 fd 80 00 00 00 	cmp    $0x80,%rbp
    fd3d:	75 e0                	jne    fd1f <readline_history+0x1b3>
    fd3f:	c7 83 84 00 00 00 00 	movl   $0x0,0x84(%rbx)
    fd46:	00 00 00 
    fd49:	eb 66                	jmp    fdb1 <readline_history+0x245>
    fd4b:	83 fd 07             	cmp    $0x7,%ebp
    fd4e:	0f 87 b1 fe ff ff    	ja     fc05 <readline_history+0x99>
    fd54:	4c 89 ff             	mov    %r15,%rdi
    fd57:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    fd5c:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    fd60:	e8 e8 3c 00 00       	call   13a4d <strdup>
    fd65:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    fd6a:	48 85 c0             	test   %rax,%rax
    fd6d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    fd72:	74 32                	je     fda6 <readline_history+0x23a>
    fd74:	44 8b a3 80 00 00 00 	mov    0x80(%rbx),%r12d
    fd7b:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    fd7f:	41 29 d4             	sub    %edx,%r12d
    fd82:	41 83 e4 07          	and    $0x7,%r12d
    fd86:	49 c1 e4 04          	shl    $0x4,%r12
    fd8a:	49 01 dc             	add    %rbx,%r12
    fd8d:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    fd92:	e8 b8 c8 ff ff       	call   c64f <free>
    fd97:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    fd9c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    fda1:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    fda6:	89 ab 84 00 00 00    	mov    %ebp,0x84(%rbx)
    fdac:	e9 44 fe ff ff       	jmp    fbf5 <readline_history+0x89>
    fdb1:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
    fdb8:	00 
    fdb9:	48 2b 05 b0 a1 01 00 	sub    0x1a1b0(%rip),%rax        # 29f70 <__stack_chk_guard>
    fdc0:	74 05                	je     fdc7 <readline_history+0x25b>
    fdc2:	e8 99 2c ff ff       	call   2a60 <__stack_chk_fail>
    fdc7:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
    fdce:	44 89 e0             	mov    %r12d,%eax
    fdd1:	5b                   	pop    %rbx
    fdd2:	5d                   	pop    %rbp
    fdd3:	41 5c                	pop    %r12
    fdd5:	41 5d                	pop    %r13
    fdd7:	41 5e                	pop    %r14
    fdd9:	41 5f                	pop    %r15
    fddb:	c3                   	ret    

000000000000fddc <reboot_exec>:
    fddc:	f3 0f 1e fa          	endbr64 
    fde0:	41 54                	push   %r12
    fde2:	48 8d 15 b7 6c 01 00 	lea    0x16cb7(%rip),%rdx        # 26aa0 <reboot_cmd>
    fde9:	48 83 ec 10          	sub    $0x10,%rsp
    fded:	48 8b 05 7c a1 01 00 	mov    0x1a17c(%rip),%rax        # 29f70 <__stack_chk_guard>
    fdf4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fdf9:	31 c0                	xor    %eax,%eax
    fdfb:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
    fe00:	e8 aa f3 ff ff       	call   f1af <parse_options>
    fe05:	41 89 c4             	mov    %eax,%r12d
    fe08:	85 c0                	test   %eax,%eax
    fe0a:	75 09                	jne    fe15 <reboot_exec+0x39>
    fe0c:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    fe10:	e8 88 d7 00 00       	call   1d59d <reboot>
    fe15:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    fe1a:	48 2b 05 4f a1 01 00 	sub    0x1a14f(%rip),%rax        # 29f70 <__stack_chk_guard>
    fe21:	74 05                	je     fe28 <reboot_exec+0x4c>
    fe23:	e8 38 2c ff ff       	call   2a60 <__stack_chk_fail>
    fe28:	48 83 c4 10          	add    $0x10,%rsp
    fe2c:	44 89 e0             	mov    %r12d,%eax
    fe2f:	41 5c                	pop    %r12
    fe31:	c3                   	ret    

000000000000fe32 <ref_increment>:
    fe32:	f3 0f 1e fa          	endbr64 
    fe36:	48 85 ff             	test   %rdi,%rdi
    fe39:	74 02                	je     fe3d <ref_increment+0xb>
    fe3b:	ff 07                	incl   (%rdi)
    fe3d:	c3                   	ret    

000000000000fe3e <ref_decrement>:
    fe3e:	f3 0f 1e fa          	endbr64 
    fe42:	48 85 ff             	test   %rdi,%rdi
    fe45:	74 1a                	je     fe61 <ref_decrement+0x23>
    fe47:	8b 07                	mov    (%rdi),%eax
    fe49:	ff c8                	dec    %eax
    fe4b:	89 07                	mov    %eax,(%rdi)
    fe4d:	ff c0                	inc    %eax
    fe4f:	75 10                	jne    fe61 <ref_decrement+0x23>
    fe51:	48 8b 47 08          	mov    0x8(%rdi),%rax
    fe55:	48 85 c0             	test   %rax,%rax
    fe58:	74 02                	je     fe5c <ref_decrement+0x1e>
    fe5a:	ff e0                	jmp    *%rax
    fe5c:	e9 ee c7 ff ff       	jmp    c64f <free>
    fe61:	c3                   	ret    

000000000000fe62 <resmux_try>:
    fe62:	48 8b 47 50          	mov    0x50(%rdi),%rax
    fe66:	4c 8d 47 30          	lea    0x30(%rdi),%r8
    fe6a:	48 8d 57 58          	lea    0x58(%rdi),%rdx
    fe6e:	48 8d 77 78          	lea    0x78(%rdi),%rsi
    fe72:	4c 89 c7             	mov    %r8,%rdi
    fe75:	48 8b 40 08          	mov    0x8(%rax),%rax
    fe79:	ff e0                	jmp    *%rax

000000000000fe7b <named_window>:
    fe7b:	f3 0f 1e fa          	endbr64 
    fe7f:	31 c0                	xor    %eax,%eax
    fe81:	c3                   	ret    

000000000000fe82 <resolv_done>:
    fe82:	f3 0f 1e fa          	endbr64 
    fe86:	55                   	push   %rbp
    fe87:	48 89 f5             	mov    %rsi,%rbp
    fe8a:	48 8d 35 f1 ff ff ff 	lea    -0xf(%rip),%rsi        # fe82 <resolv_done>
    fe91:	53                   	push   %rbx
    fe92:	48 83 ec 18          	sub    $0x18,%rsp
    fe96:	48 8b 05 d3 a0 01 00 	mov    0x1a0d3(%rip),%rax        # 29f70 <__stack_chk_guard>
    fe9d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    fea2:	31 c0                	xor    %eax,%eax
    fea4:	48 89 e2             	mov    %rsp,%rdx
    fea7:	e8 59 99 ff ff       	call   9805 <intf_get_dest_op_untyped>
    feac:	48 85 c0             	test   %rax,%rax
    feaf:	74 14                	je     fec5 <resolv_done+0x43>
    feb1:	48 8b 3c 24          	mov    (%rsp),%rdi
    feb5:	48 89 c3             	mov    %rax,%rbx
    feb8:	e8 f2 98 ff ff       	call   97af <intf_object>
    febd:	48 89 ee             	mov    %rbp,%rsi
    fec0:	48 89 c7             	mov    %rax,%rdi
    fec3:	ff d3                	call   *%rbx
    fec5:	48 8b 3c 24          	mov    (%rsp),%rdi
    fec9:	e8 72 98 ff ff       	call   9740 <intf_put>
    fece:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    fed3:	48 2b 05 96 a0 01 00 	sub    0x1a096(%rip),%rax        # 29f70 <__stack_chk_guard>
    feda:	74 05                	je     fee1 <resolv_done+0x5f>
    fedc:	e8 7f 2b ff ff       	call   2a60 <__stack_chk_fail>
    fee1:	48 83 c4 18          	add    $0x18,%rsp
    fee5:	5b                   	pop    %rbx
    fee6:	5d                   	pop    %rbp
    fee7:	c3                   	ret    

000000000000fee8 <numeric_step>:
    fee8:	f3 0f 1e fa          	endbr64 
    feec:	55                   	push   %rbp
    feed:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
    fef1:	53                   	push   %rbx
    fef2:	48 89 fb             	mov    %rdi,%rbx
    fef5:	52                   	push   %rdx
    fef6:	83 7f 70 00          	cmpl   $0x0,0x70(%rdi)
    fefa:	75 0c                	jne    ff08 <numeric_step+0x20>
    fefc:	48 8d 77 50          	lea    0x50(%rdi),%rsi
    ff00:	48 89 ef             	mov    %rbp,%rdi
    ff03:	e8 7a ff ff ff       	call   fe82 <resolv_done>
    ff08:	8b 73 70             	mov    0x70(%rbx),%esi
    ff0b:	48 89 ef             	mov    %rbp,%rdi
    ff0e:	58                   	pop    %rax
    ff0f:	5b                   	pop    %rbx
    ff10:	5d                   	pop    %rbp
    ff11:	e9 b9 99 ff ff       	jmp    98cf <intf_shutdown>

000000000000ff16 <resmux_close>:
    ff16:	f3 0f 1e fa          	endbr64 
    ff1a:	53                   	push   %rbx
    ff1b:	48 89 fb             	mov    %rdi,%rbx
    ff1e:	48 8d 7f 30          	lea    0x30(%rdi),%rdi
    ff22:	48 83 ec 10          	sub    $0x10,%rsp
    ff26:	89 74 24 0c          	mov    %esi,0xc(%rsp)
    ff2a:	e8 a0 99 ff ff       	call   98cf <intf_shutdown>
    ff2f:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    ff33:	48 83 c4 10          	add    $0x10,%rsp
    ff37:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    ff3b:	5b                   	pop    %rbx
    ff3c:	e9 8e 99 ff ff       	jmp    98cf <intf_shutdown>

000000000000ff41 <named_close>:
    ff41:	f3 0f 1e fa          	endbr64 
    ff45:	e9 cc ff ff ff       	jmp    ff16 <resmux_close>

000000000000ff4a <numeric_resolv>:
    ff4a:	f3 0f 1e fa          	endbr64 
    ff4e:	41 57                	push   %r15
    ff50:	41 56                	push   %r14
    ff52:	49 89 d6             	mov    %rdx,%r14
    ff55:	41 55                	push   %r13
    ff57:	49 89 f5             	mov    %rsi,%r13
    ff5a:	41 54                	push   %r12
    ff5c:	49 89 fc             	mov    %rdi,%r12
    ff5f:	bf 78 00 00 00       	mov    $0x78,%edi
    ff64:	55                   	push   %rbp
    ff65:	e8 f0 c6 ff ff       	call   c65a <zalloc>
    ff6a:	48 85 c0             	test   %rax,%rax
    ff6d:	75 07                	jne    ff76 <numeric_resolv+0x2c>
    ff6f:	b8 77 df f4 ce       	mov    $0xcef4df77,%eax
    ff74:	eb 79                	jmp    ffef <numeric_resolv+0xa5>
    ff76:	48 89 c5             	mov    %rax,%rbp
    ff79:	48 8d 05 60 64 01 00 	lea    0x16460(%rip),%rax        # 263e0 <null_intf>
    ff80:	48 89 45 10          	mov    %rax,0x10(%rbp)
    ff84:	48 8d 05 75 64 01 00 	lea    0x16475(%rip),%rax        # 26400 <null_intf_desc>
    ff8b:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
    ff8f:	48 89 45 20          	mov    %rax,0x20(%rbp)
    ff93:	4c 8d 7d 50          	lea    0x50(%rbp),%r15
    ff97:	48 89 45 28          	mov    %rax,0x28(%rbp)
    ff9b:	48 8d 05 3e 6c 01 00 	lea    0x16c3e(%rip),%rax        # 26be0 <numeric_process_desc>
    ffa2:	48 89 7d 30          	mov    %rdi,0x30(%rbp)
    ffa6:	48 89 7d 38          	mov    %rdi,0x38(%rbp)
    ffaa:	48 89 45 40          	mov    %rax,0x40(%rbp)
    ffae:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
    ffb2:	48 89 6d 48          	mov    %rbp,0x48(%rbp)
    ffb6:	e8 76 f9 ff ff       	call   f931 <process_add>
    ffbb:	ba 20 00 00 00       	mov    $0x20,%edx
    ffc0:	4c 89 f6             	mov    %r14,%rsi
    ffc3:	4c 89 ff             	mov    %r15,%rdi
    ffc6:	e8 42 73 00 00       	call   1730d <__memcpy>
    ffcb:	4c 89 fe             	mov    %r15,%rsi
    ffce:	4c 89 ef             	mov    %r13,%rdi
    ffd1:	e8 7a 37 00 00       	call   13750 <sock_aton>
    ffd6:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    ffda:	4c 89 e6             	mov    %r12,%rsi
    ffdd:	89 45 70             	mov    %eax,0x70(%rbp)
    ffe0:	e8 8c 97 ff ff       	call   9771 <intf_plug_plug>
    ffe5:	48 89 ef             	mov    %rbp,%rdi
    ffe8:	e8 51 fe ff ff       	call   fe3e <ref_decrement>
    ffed:	31 c0                	xor    %eax,%eax
    ffef:	5d                   	pop    %rbp
    fff0:	41 5c                	pop    %r12
    fff2:	41 5d                	pop    %r13
    fff4:	41 5e                	pop    %r14
    fff6:	41 5f                	pop    %r15
    fff8:	c3                   	ret    

000000000000fff9 <resmux_child_close>:
    fff9:	f3 0f 1e fa          	endbr64 
    fffd:	41 54                	push   %r12
    ffff:	49 89 fc             	mov    %rdi,%r12
   10002:	48 83 c7 30          	add    $0x30,%rdi
   10006:	48 83 ec 10          	sub    $0x10,%rsp
   1000a:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1000e:	e8 35 98 ff ff       	call   9848 <intf_restart>
   10013:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   10017:	85 f6                	test   %esi,%esi
   10019:	74 28                	je     10043 <resmux_child_close+0x4a>
   1001b:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   10020:	48 8d 15 d1 8d 01 00 	lea    0x18dd1(%rip),%rdx        # 28df8 <efi_root_device>
   10027:	48 83 c0 10          	add    $0x10,%rax
   1002b:	49 89 44 24 50       	mov    %rax,0x50(%r12)
   10030:	48 39 d0             	cmp    %rdx,%rax
   10033:	73 0e                	jae    10043 <resmux_child_close+0x4a>
   10035:	4c 89 e7             	mov    %r12,%rdi
   10038:	e8 25 fe ff ff       	call   fe62 <resmux_try>
   1003d:	89 c6                	mov    %eax,%esi
   1003f:	85 c0                	test   %eax,%eax
   10041:	74 0e                	je     10051 <resmux_child_close+0x58>
   10043:	48 83 c4 10          	add    $0x10,%rsp
   10047:	4c 89 e7             	mov    %r12,%rdi
   1004a:	41 5c                	pop    %r12
   1004c:	e9 c5 fe ff ff       	jmp    ff16 <resmux_close>
   10051:	48 83 c4 10          	add    $0x10,%rsp
   10055:	41 5c                	pop    %r12
   10057:	c3                   	ret    

0000000000010058 <named_resolv_done>:
   10058:	f3 0f 1e fa          	endbr64 
   1005c:	41 55                	push   %r13
   1005e:	4c 8d 6f 10          	lea    0x10(%rdi),%r13
   10062:	41 54                	push   %r12
   10064:	49 89 f4             	mov    %rsi,%r12
   10067:	55                   	push   %rbp
   10068:	48 89 fd             	mov    %rdi,%rbp
   1006b:	4c 89 ef             	mov    %r13,%rdi
   1006e:	e8 a5 96 ff ff       	call   9718 <intf_nullify>
   10073:	83 7d 74 00          	cmpl   $0x0,0x74(%rbp)
   10077:	4c 8d 45 54          	lea    0x54(%rbp),%r8
   1007b:	75 03                	jne    10080 <named_resolv_done+0x28>
   1007d:	45 31 c0             	xor    %r8d,%r8d
   10080:	8b 55 50             	mov    0x50(%rbp),%edx
   10083:	4c 89 e1             	mov    %r12,%rcx
   10086:	be 03 00 00 00       	mov    $0x3,%esi
   1008b:	4c 89 ef             	mov    %r13,%rdi
   1008e:	31 c0                	xor    %eax,%eax
   10090:	e8 0c 76 00 00       	call   176a1 <xfer_redirect>
   10095:	41 89 c4             	mov    %eax,%r12d
   10098:	85 c0                	test   %eax,%eax
   1009a:	75 08                	jne    100a4 <named_resolv_done+0x4c>
   1009c:	4c 89 ef             	mov    %r13,%rdi
   1009f:	e8 ef 96 ff ff       	call   9793 <intf_unplug>
   100a4:	44 89 e6             	mov    %r12d,%esi
   100a7:	48 89 ef             	mov    %rbp,%rdi
   100aa:	5d                   	pop    %rbp
   100ab:	41 5c                	pop    %r12
   100ad:	41 5d                	pop    %r13
   100af:	e9 62 fe ff ff       	jmp    ff16 <resmux_close>

00000000000100b4 <resolv>:
   100b4:	f3 0f 1e fa          	endbr64 
   100b8:	41 57                	push   %r15
   100ba:	49 89 d7             	mov    %rdx,%r15
   100bd:	41 56                	push   %r14
   100bf:	41 55                	push   %r13
   100c1:	49 89 fd             	mov    %rdi,%r13
   100c4:	48 89 f7             	mov    %rsi,%rdi
   100c7:	41 54                	push   %r12
   100c9:	49 89 f4             	mov    %rsi,%r12
   100cc:	55                   	push   %rbp
   100cd:	e8 68 38 00 00       	call   1393a <strlen>
   100d2:	48 8d 78 79          	lea    0x79(%rax),%rdi
   100d6:	4c 8d 70 01          	lea    0x1(%rax),%r14
   100da:	e8 7b c5 ff ff       	call   c65a <zalloc>
   100df:	48 85 c0             	test   %rax,%rax
   100e2:	75 0b                	jne    100ef <resolv+0x3b>
   100e4:	41 bc 77 df f4 ce    	mov    $0xcef4df77,%r12d
   100ea:	e9 8b 00 00 00       	jmp    1017a <resolv+0xc6>
   100ef:	48 89 c5             	mov    %rax,%rbp
   100f2:	48 8d 05 e7 62 01 00 	lea    0x162e7(%rip),%rax        # 263e0 <null_intf>
   100f9:	48 8d 15 60 6a 01 00 	lea    0x16a60(%rip),%rdx        # 26b60 <resmux_parent_desc>
   10100:	48 89 45 10          	mov    %rax,0x10(%rbp)
   10104:	48 89 45 30          	mov    %rax,0x30(%rbp)
   10108:	48 8d 05 91 6a 01 00 	lea    0x16a91(%rip),%rax        # 26ba0 <resmux_child_desc>
   1010f:	48 89 45 40          	mov    %rax,0x40(%rbp)
   10113:	48 89 45 48          	mov    %rax,0x48(%rbp)
   10117:	48 8d 05 ba 8c 01 00 	lea    0x18cba(%rip),%rax        # 28dd8 <numeric_resolver>
   1011e:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   10122:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   10126:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   1012a:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   1012e:	48 89 45 50          	mov    %rax,0x50(%rbp)
   10132:	4d 85 ff             	test   %r15,%r15
   10135:	74 11                	je     10148 <resolv+0x94>
   10137:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
   1013b:	ba 20 00 00 00       	mov    $0x20,%edx
   10140:	4c 89 fe             	mov    %r15,%rsi
   10143:	e8 c5 71 00 00       	call   1730d <__memcpy>
   10148:	4c 89 e6             	mov    %r12,%rsi
   1014b:	48 8d 7d 78          	lea    0x78(%rbp),%rdi
   1014f:	4c 89 f2             	mov    %r14,%rdx
   10152:	e8 b6 71 00 00       	call   1730d <__memcpy>
   10157:	48 89 ef             	mov    %rbp,%rdi
   1015a:	e8 03 fd ff ff       	call   fe62 <resmux_try>
   1015f:	41 89 c4             	mov    %eax,%r12d
   10162:	85 c0                	test   %eax,%eax
   10164:	75 0c                	jne    10172 <resolv+0xbe>
   10166:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   1016a:	4c 89 ee             	mov    %r13,%rsi
   1016d:	e8 ff 95 ff ff       	call   9771 <intf_plug_plug>
   10172:	48 89 ef             	mov    %rbp,%rdi
   10175:	e8 c4 fc ff ff       	call   fe3e <ref_decrement>
   1017a:	5d                   	pop    %rbp
   1017b:	44 89 e0             	mov    %r12d,%eax
   1017e:	41 5c                	pop    %r12
   10180:	41 5d                	pop    %r13
   10182:	41 5e                	pop    %r14
   10184:	41 5f                	pop    %r15
   10186:	c3                   	ret    

0000000000010187 <xfer_open_named_socket>:
   10187:	f3 0f 1e fa          	endbr64 
   1018b:	41 57                	push   %r15
   1018d:	49 89 d7             	mov    %rdx,%r15
   10190:	41 56                	push   %r14
   10192:	49 89 ce             	mov    %rcx,%r14
   10195:	41 55                	push   %r13
   10197:	49 89 fd             	mov    %rdi,%r13
   1019a:	bf 78 00 00 00       	mov    $0x78,%edi
   1019f:	41 54                	push   %r12
   101a1:	4d 89 c4             	mov    %r8,%r12
   101a4:	55                   	push   %rbp
   101a5:	53                   	push   %rbx
   101a6:	89 f3                	mov    %esi,%ebx
   101a8:	48 83 ec 18          	sub    $0x18,%rsp
   101ac:	e8 a9 c4 ff ff       	call   c65a <zalloc>
   101b1:	48 85 c0             	test   %rax,%rax
   101b4:	75 0b                	jne    101c1 <xfer_open_named_socket+0x3a>
   101b6:	41 bc 77 df f4 ce    	mov    $0xcef4df77,%r12d
   101bc:	e9 8f 00 00 00       	jmp    10250 <xfer_open_named_socket+0xc9>
   101c1:	48 89 c5             	mov    %rax,%rbp
   101c4:	48 8d 05 15 62 01 00 	lea    0x16215(%rip),%rax        # 263e0 <null_intf>
   101cb:	48 8d 15 4e 69 01 00 	lea    0x1694e(%rip),%rdx        # 26b20 <named_xfer_desc>
   101d2:	48 89 45 10          	mov    %rax,0x10(%rbp)
   101d6:	4c 8d 45 30          	lea    0x30(%rbp),%r8
   101da:	48 89 45 30          	mov    %rax,0x30(%rbp)
   101de:	48 8d 05 fb 68 01 00 	lea    0x168fb(%rip),%rax        # 26ae0 <named_resolv_desc>
   101e5:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   101e9:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   101ed:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   101f1:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   101f5:	48 89 45 40          	mov    %rax,0x40(%rbp)
   101f9:	48 89 45 48          	mov    %rax,0x48(%rbp)
   101fd:	89 5d 50             	mov    %ebx,0x50(%rbp)
   10200:	4d 85 e4             	test   %r12,%r12
   10203:	74 22                	je     10227 <xfer_open_named_socket+0xa0>
   10205:	48 8d 7d 54          	lea    0x54(%rbp),%rdi
   10209:	ba 20 00 00 00       	mov    $0x20,%edx
   1020e:	4c 89 e6             	mov    %r12,%rsi
   10211:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   10216:	e8 f2 70 00 00       	call   1730d <__memcpy>
   1021b:	c7 45 74 01 00 00 00 	movl   $0x1,0x74(%rbp)
   10222:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   10227:	4c 89 fa             	mov    %r15,%rdx
   1022a:	4c 89 f6             	mov    %r14,%rsi
   1022d:	4c 89 c7             	mov    %r8,%rdi
   10230:	e8 7f fe ff ff       	call   100b4 <resolv>
   10235:	41 89 c4             	mov    %eax,%r12d
   10238:	85 c0                	test   %eax,%eax
   1023a:	75 0c                	jne    10248 <xfer_open_named_socket+0xc1>
   1023c:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   10240:	4c 89 ee             	mov    %r13,%rsi
   10243:	e8 29 95 ff ff       	call   9771 <intf_plug_plug>
   10248:	48 89 ef             	mov    %rbp,%rdi
   1024b:	e8 ee fb ff ff       	call   fe3e <ref_decrement>
   10250:	48 83 c4 18          	add    $0x18,%rsp
   10254:	44 89 e0             	mov    %r12d,%eax
   10257:	5b                   	pop    %rbx
   10258:	5d                   	pop    %rbp
   10259:	41 5c                	pop    %r12
   1025b:	41 5d                	pop    %r13
   1025d:	41 5e                	pop    %r14
   1025f:	41 5f                	pop    %r15
   10261:	c3                   	ret    

0000000000010262 <start_timer_fixed>:
   10262:	f3 0f 1e fa          	endbr64 
   10266:	55                   	push   %rbp
   10267:	48 89 f5             	mov    %rsi,%rbp
   1026a:	53                   	push   %rbx
   1026b:	48 89 fb             	mov    %rdi,%rbx
   1026e:	52                   	push   %rdx
   1026f:	83 7f 10 00          	cmpl   $0x0,0x10(%rdi)
   10273:	75 1c                	jne    10291 <start_timer_fixed+0x2f>
   10275:	48 8d 35 a4 69 01 00 	lea    0x169a4(%rip),%rsi        # 26c20 <timers>
   1027c:	e8 40 be ff ff       	call   c0c1 <extern_list_add>
   10281:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   10285:	e8 a8 fb ff ff       	call   fe32 <ref_increment>
   1028a:	c7 43 10 01 00 00 00 	movl   $0x1,0x10(%rbx)
   10291:	e8 3b 5a 00 00       	call   15cd1 <currticks>
   10296:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   1029a:	48 89 43 30          	mov    %rax,0x30(%rbx)
   1029e:	58                   	pop    %rax
   1029f:	5b                   	pop    %rbx
   102a0:	5d                   	pop    %rbp
   102a1:	c3                   	ret    

00000000000102a2 <start_timer>:
   102a2:	f3 0f 1e fa          	endbr64 
   102a6:	48 8b 47 20          	mov    0x20(%rdi),%rax
   102aa:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   102ae:	be 00 01 00 00       	mov    $0x100,%esi
   102b3:	48 85 c0             	test   %rax,%rax
   102b6:	74 0c                	je     102c4 <start_timer+0x22>
   102b8:	be 07 00 00 00       	mov    $0x7,%esi
   102bd:	48 39 f0             	cmp    %rsi,%rax
   102c0:	48 0f 43 f0          	cmovae %rax,%rsi
   102c4:	48 39 d6             	cmp    %rdx,%rsi
   102c7:	48 0f 42 f2          	cmovb  %rdx,%rsi
   102cb:	e9 92 ff ff ff       	jmp    10262 <start_timer_fixed>

00000000000102d0 <stop_timer>:
   102d0:	f3 0f 1e fa          	endbr64 
   102d4:	53                   	push   %rbx
   102d5:	48 89 fb             	mov    %rdi,%rbx
   102d8:	e8 f4 59 00 00       	call   15cd1 <currticks>
   102dd:	83 7b 10 00          	cmpl   $0x0,0x10(%rbx)
   102e1:	74 4c                	je     1032f <stop_timer+0x5f>
   102e3:	48 8b 0b             	mov    (%rbx),%rcx
   102e6:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   102ea:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   102ee:	48 89 0a             	mov    %rcx,(%rdx)
   102f1:	8b 53 38             	mov    0x38(%rbx),%edx
   102f4:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%rbx)
   102fb:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   102ff:	85 d2                	test   %edx,%edx
   10301:	74 07                	je     1030a <stop_timer+0x3a>
   10303:	ff ca                	dec    %edx
   10305:	89 53 38             	mov    %edx,0x38(%rbx)
   10308:	eb 1b                	jmp    10325 <stop_timer+0x55>
   1030a:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1030e:	48 29 c8             	sub    %rcx,%rax
   10311:	48 d1 e8             	shr    %rax
   10314:	48 89 d6             	mov    %rdx,%rsi
   10317:	48 c1 ee 03          	shr    $0x3,%rsi
   1031b:	48 29 f2             	sub    %rsi,%rdx
   1031e:	48 01 c2             	add    %rax,%rdx
   10321:	48 89 53 18          	mov    %rdx,0x18(%rbx)
   10325:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   10329:	5b                   	pop    %rbx
   1032a:	e9 0f fb ff ff       	jmp    fe3e <ref_decrement>
   1032f:	5b                   	pop    %rbx
   10330:	c3                   	ret    

0000000000010331 <retry_poll>:
   10331:	f3 0f 1e fa          	endbr64 
   10335:	55                   	push   %rbp
   10336:	e8 96 59 00 00       	call   15cd1 <currticks>
   1033b:	48 8b 15 de 68 01 00 	mov    0x168de(%rip),%rdx        # 26c20 <timers>
   10342:	48 8d 35 d7 68 01 00 	lea    0x168d7(%rip),%rsi        # 26c20 <timers>
   10349:	48 39 f2             	cmp    %rsi,%rdx
   1034c:	74 68                	je     103b6 <retry_poll+0x85>
   1034e:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   10352:	49 89 c0             	mov    %rax,%r8
   10355:	4c 2b 42 30          	sub    0x30(%rdx),%r8
   10359:	48 8b 3a             	mov    (%rdx),%rdi
   1035c:	49 39 c8             	cmp    %rcx,%r8
   1035f:	72 50                	jb     103b1 <retry_poll+0x80>
   10361:	48 8b 72 28          	mov    0x28(%rdx),%rsi
   10365:	48 8b 6a 48          	mov    0x48(%rdx),%rbp
   10369:	48 85 f6             	test   %rsi,%rsi
   1036c:	75 05                	jne    10373 <retry_poll+0x42>
   1036e:	be 00 28 00 00       	mov    $0x2800,%esi
   10373:	48 8b 42 08          	mov    0x8(%rdx),%rax
   10377:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1037b:	48 89 38             	mov    %rdi,(%rax)
   1037e:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
   10382:	48 89 f1             	mov    %rsi,%rcx
   10385:	48 89 d7             	mov    %rdx,%rdi
   10388:	ff 42 38             	incl   0x38(%rdx)
   1038b:	48 39 f0             	cmp    %rsi,%rax
   1038e:	48 0f 46 c8          	cmovbe %rax,%rcx
   10392:	40 0f 97 c6          	seta   %sil
   10396:	c7 42 10 00 00 00 00 	movl   $0x0,0x10(%rdx)
   1039d:	40 0f b6 f6          	movzbl %sil,%esi
   103a1:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
   103a5:	ff 52 40             	call   *0x40(%rdx)
   103a8:	48 89 ef             	mov    %rbp,%rdi
   103ab:	5d                   	pop    %rbp
   103ac:	e9 8d fa ff ff       	jmp    fe3e <ref_decrement>
   103b1:	48 89 fa             	mov    %rdi,%rdx
   103b4:	eb 93                	jmp    10349 <retry_poll+0x18>
   103b6:	5d                   	pop    %rbp
   103b7:	c3                   	ret    

00000000000103b8 <retry_step>:
   103b8:	f3 0f 1e fa          	endbr64 
   103bc:	e9 70 ff ff ff       	jmp    10331 <retry_poll>

00000000000103c1 <route_exec>:
   103c1:	f3 0f 1e fa          	endbr64 
   103c5:	41 54                	push   %r12
   103c7:	48 8d 15 62 68 01 00 	lea    0x16862(%rip),%rdx        # 26c30 <route_cmd>
   103ce:	48 83 ec 10          	sub    $0x10,%rsp
   103d2:	48 8b 05 97 9b 01 00 	mov    0x19b97(%rip),%rax        # 29f70 <__stack_chk_guard>
   103d9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   103de:	31 c0                	xor    %eax,%eax
   103e0:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   103e5:	e8 c5 ed ff ff       	call   f1af <parse_options>
   103ea:	41 89 c4             	mov    %eax,%r12d
   103ed:	85 c0                	test   %eax,%eax
   103ef:	75 05                	jne    103f6 <route_exec+0x35>
   103f1:	e8 7d 00 01 00       	call   20473 <route>
   103f6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   103fb:	48 2b 05 6e 9b 01 00 	sub    0x19b6e(%rip),%rax        # 29f70 <__stack_chk_guard>
   10402:	74 05                	je     10409 <route_exec+0x48>
   10404:	e8 57 26 ff ff       	call   2a60 <__stack_chk_fail>
   10409:	48 83 c4 10          	add    $0x10,%rsp
   1040d:	44 89 e0             	mov    %r12d,%eax
   10410:	41 5c                	pop    %r12
   10412:	c3                   	ret    

0000000000010413 <sanboot_core_exec>:
   10413:	55                   	push   %rbp
   10414:	48 89 e5             	mov    %rsp,%rbp
   10417:	41 57                	push   %r15
   10419:	41 89 cf             	mov    %ecx,%r15d
   1041c:	41 56                	push   %r14
   1041e:	41 89 fe             	mov    %edi,%r14d
   10421:	41 55                	push   %r13
   10423:	41 54                	push   %r12
   10425:	49 89 f4             	mov    %rsi,%r12
   10428:	53                   	push   %rbx
   10429:	48 83 ec 48          	sub    $0x48,%rsp
   1042d:	44 89 45 ac          	mov    %r8d,-0x54(%rbp)
   10431:	48 8b 05 38 9b 01 00 	mov    0x19b38(%rip),%rax        # 29f70 <__stack_chk_guard>
   10438:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1043c:	31 c0                	xor    %eax,%eax
   1043e:	48 63 c7             	movslq %edi,%rax
   10441:	48 89 e6             	mov    %rsp,%rsi
   10444:	48 8d 0c c5 0f 00 00 	lea    0xf(,%rax,8),%rcx
   1044b:	00 
   1044c:	48 89 c8             	mov    %rcx,%rax
   1044f:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
   10456:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1045a:	48 29 ce             	sub    %rcx,%rsi
   1045d:	48 39 f4             	cmp    %rsi,%rsp
   10460:	74 12                	je     10474 <sanboot_core_exec+0x61>
   10462:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   10469:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   10470:	00 00 
   10472:	eb e9                	jmp    1045d <sanboot_core_exec+0x4a>
   10474:	25 ff 0f 00 00       	and    $0xfff,%eax
   10479:	48 29 c4             	sub    %rax,%rsp
   1047c:	48 85 c0             	test   %rax,%rax
   1047f:	74 06                	je     10487 <sanboot_core_exec+0x74>
   10481:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   10487:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   1048b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   1048f:	49 89 e5             	mov    %rsp,%r13
   10492:	31 c0                	xor    %eax,%eax
   10494:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   10498:	48 89 cf             	mov    %rcx,%rdi
   1049b:	ab                   	stos   %eax,%es:(%rdi)
   1049c:	ab                   	stos   %eax,%es:(%rdi)
   1049d:	ab                   	stos   %eax,%es:(%rdi)
   1049e:	ab                   	stos   %eax,%es:(%rdi)
   1049f:	ab                   	stos   %eax,%es:(%rdi)
   104a0:	ab                   	stos   %eax,%es:(%rdi)
   104a1:	e8 8e 08 01 00       	call   20d34 <san_default_drive>
   104a6:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   104aa:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   104ae:	4c 89 e6             	mov    %r12,%rsi
   104b1:	44 89 f7             	mov    %r14d,%edi
   104b4:	89 45 b0             	mov    %eax,-0x50(%rbp)
   104b7:	e8 b7 ea ff ff       	call   ef73 <reparse_options>
   104bc:	85 c0                	test   %eax,%eax
   104be:	0f 85 94 00 00 00    	jne    10558 <sanboot_core_exec+0x145>
   104c4:	44 2b 35 dd 9a 01 00 	sub    0x19add(%rip),%r14d        # 29fa8 <optind>
   104cb:	31 c9                	xor    %ecx,%ecx
   104cd:	89 cb                	mov    %ecx,%ebx
   104cf:	41 39 ce             	cmp    %ecx,%r14d
   104d2:	7e 2f                	jle    10503 <sanboot_core_exec+0xf0>
   104d4:	89 c8                	mov    %ecx,%eax
   104d6:	03 05 cc 9a 01 00    	add    0x19acc(%rip),%eax        # 29fa8 <optind>
   104dc:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   104e0:	48 98                	cltq   
   104e2:	49 8b 3c c4          	mov    (%r12,%rax,8),%rdi
   104e6:	e8 68 5f 00 00       	call   16453 <parse_uri>
   104eb:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
   104ef:	49 89 44 cd 00       	mov    %rax,0x0(%r13,%rcx,8)
   104f4:	48 ff c1             	inc    %rcx
   104f7:	48 85 c0             	test   %rax,%rax
   104fa:	75 d1                	jne    104cd <sanboot_core_exec+0xba>
   104fc:	b8 77 1f df ce       	mov    $0xcedf1f77,%eax
   10501:	eb 37                	jmp    1053a <sanboot_core_exec+0x127>
   10503:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   10507:	74 04                	je     1050d <sanboot_core_exec+0xfa>
   10509:	41 83 cf 01          	or     $0x1,%r15d
   1050d:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   10511:	74 04                	je     10517 <sanboot_core_exec+0x104>
   10513:	41 83 cf 04          	or     $0x4,%r15d
   10517:	45 85 f6             	test   %r14d,%r14d
   1051a:	75 04                	jne    10520 <sanboot_core_exec+0x10d>
   1051c:	44 0b 7d ac          	or     -0x54(%rbp),%r15d
   10520:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   10524:	8b 4d b0             	mov    -0x50(%rbp),%ecx
   10527:	45 89 f9             	mov    %r15d,%r9d
   1052a:	44 89 f2             	mov    %r14d,%edx
   1052d:	4c 89 ee             	mov    %r13,%rsi
   10530:	31 ff                	xor    %edi,%edi
   10532:	44 89 f3             	mov    %r14d,%ebx
   10535:	e8 07 7c 00 00       	call   18141 <uriboot>
   1053a:	ff cb                	dec    %ebx
   1053c:	48 63 db             	movslq %ebx,%rbx
   1053f:	85 db                	test   %ebx,%ebx
   10541:	78 15                	js     10558 <sanboot_core_exec+0x145>
   10543:	49 8b 7c dd 00       	mov    0x0(%r13,%rbx,8),%rdi
   10548:	89 45 ac             	mov    %eax,-0x54(%rbp)
   1054b:	48 ff cb             	dec    %rbx
   1054e:	e8 eb f8 ff ff       	call   fe3e <ref_decrement>
   10553:	8b 45 ac             	mov    -0x54(%rbp),%eax
   10556:	eb e7                	jmp    1053f <sanboot_core_exec+0x12c>
   10558:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1055c:	48 2b 15 0d 9a 01 00 	sub    0x19a0d(%rip),%rdx        # 29f70 <__stack_chk_guard>
   10563:	74 05                	je     1056a <sanboot_core_exec+0x157>
   10565:	e8 f6 24 ff ff       	call   2a60 <__stack_chk_fail>
   1056a:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1056e:	5b                   	pop    %rbx
   1056f:	41 5c                	pop    %r12
   10571:	41 5d                	pop    %r13
   10573:	41 5e                	pop    %r14
   10575:	41 5f                	pop    %r15
   10577:	5d                   	pop    %rbp
   10578:	c3                   	ret    

0000000000010579 <sanunhook_exec>:
   10579:	f3 0f 1e fa          	endbr64 
   1057d:	45 31 c0             	xor    %r8d,%r8d
   10580:	b9 03 00 00 00       	mov    $0x3,%ecx
   10585:	48 8d 15 d4 66 01 00 	lea    0x166d4(%rip),%rdx        # 26c60 <sanunhook_cmd>
   1058c:	e9 82 fe ff ff       	jmp    10413 <sanboot_core_exec>

0000000000010591 <sanboot_exec>:
   10591:	f3 0f 1e fa          	endbr64 
   10595:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1059b:	31 c9                	xor    %ecx,%ecx
   1059d:	48 8d 15 dc 66 01 00 	lea    0x166dc(%rip),%rdx        # 26c80 <sanboot_cmd>
   105a4:	e9 6a fe ff ff       	jmp    10413 <sanboot_core_exec>

00000000000105a9 <sanhook_exec>:
   105a9:	f3 0f 1e fa          	endbr64 
   105ad:	45 31 c0             	xor    %r8d,%r8d
   105b0:	b9 06 00 00 00       	mov    $0x6,%ecx
   105b5:	48 8d 15 e4 66 01 00 	lea    0x166e4(%rip),%rdx        # 26ca0 <sanhook_cmd>
   105bc:	e9 52 fe ff ff       	jmp    10413 <sanboot_core_exec>

00000000000105c1 <terminate_on_label_found>:
   105c1:	f3 0f 1e fa          	endbr64 
   105c5:	31 c0                	xor    %eax,%eax
   105c7:	85 ff                	test   %edi,%edi
   105c9:	0f 94 c0             	sete   %al
   105cc:	c3                   	ret    

00000000000105cd <terminate_on_exit_or_failure>:
   105cd:	f3 0f 1e fa          	endbr64 
   105d1:	53                   	push   %rbx
   105d2:	89 fb                	mov    %edi,%ebx
   105d4:	bf 02 00 00 00       	mov    $0x2,%edi
   105d9:	e8 78 d7 00 00       	call   1dd56 <shell_stopped>
   105de:	09 d8                	or     %ebx,%eax
   105e0:	5b                   	pop    %rbx
   105e1:	0f 95 c0             	setne  %al
   105e4:	0f b6 c0             	movzbl %al,%eax
   105e7:	c3                   	ret    

00000000000105e8 <script_exec_line>:
   105e8:	f3 0f 1e fa          	endbr64 
   105ec:	48 89 cf             	mov    %rcx,%rdi
   105ef:	e9 7e d7 00 00       	jmp    1dd72 <system>

00000000000105f4 <process_script>:
   105f4:	41 57                	push   %r15
   105f6:	41 56                	push   %r14
   105f8:	41 55                	push   %r13
   105fa:	45 31 ed             	xor    %r13d,%r13d
   105fd:	41 54                	push   %r12
   105ff:	55                   	push   %rbp
   10600:	31 ed                	xor    %ebp,%ebp
   10602:	53                   	push   %rbx
   10603:	48 89 fb             	mov    %rdi,%rbx
   10606:	48 83 ec 28          	sub    $0x28,%rsp
   1060a:	48 c7 05 8b 96 01 00 	movq   $0x0,0x1968b(%rip)        # 29ca0 <script_offset>
   10611:	00 00 00 00 
   10615:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1061a:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1061f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   10626:	00 
   10627:	4c 8b 73 48          	mov    0x48(%rbx),%r14
   1062b:	4c 8b 4b 40          	mov    0x40(%rbx),%r9
   1062f:	be 0a 00 00 00       	mov    $0xa,%esi
   10634:	4c 8b 3d 65 96 01 00 	mov    0x19665(%rip),%r15        # 29ca0 <script_offset>
   1063b:	4c 89 f2             	mov    %r14,%rdx
   1063e:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   10643:	4c 29 fa             	sub    %r15,%rdx
   10646:	4b 8d 3c 0f          	lea    (%r15,%r9,1),%rdi
   1064a:	e8 26 32 00 00       	call   13875 <memchr>
   1064f:	49 89 c4             	mov    %rax,%r12
   10652:	48 85 c0             	test   %rax,%rax
   10655:	74 0a                	je     10661 <process_script+0x6d>
   10657:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1065c:	4d 29 cc             	sub    %r9,%r12
   1065f:	79 03                	jns    10664 <process_script+0x70>
   10661:	4d 89 f4             	mov    %r14,%r12
   10664:	4d 29 fc             	sub    %r15,%r12
   10667:	48 89 ef             	mov    %rbp,%rdi
   1066a:	4f 8d 74 25 00       	lea    0x0(%r13,%r12,1),%r14
   1066f:	49 8d 76 01          	lea    0x1(%r14),%rsi
   10673:	e8 d2 be ff ff       	call   c54a <realloc>
   10678:	49 89 c7             	mov    %rax,%r15
   1067b:	48 85 c0             	test   %rax,%rax
   1067e:	75 0b                	jne    1068b <process_script+0x97>
   10680:	41 bc 77 7f fd ce    	mov    $0xcefd7f77,%r12d
   10686:	e9 07 01 00 00       	jmp    10792 <process_script+0x19e>
   1068b:	48 8b 73 40          	mov    0x40(%rbx),%rsi
   1068f:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
   10693:	4c 89 e2             	mov    %r12,%rdx
   10696:	48 03 35 03 96 01 00 	add    0x19603(%rip),%rsi        # 29ca0 <script_offset>
   1069d:	e8 6b 6c 00 00       	call   1730d <__memcpy>
   106a2:	48 8b 05 f7 95 01 00 	mov    0x195f7(%rip),%rax        # 29ca0 <script_offset>
   106a9:	49 8d 44 04 01       	lea    0x1(%r12,%rax,1),%rax
   106ae:	48 89 05 eb 95 01 00 	mov    %rax,0x195eb(%rip)        # 29ca0 <script_offset>
   106b5:	4d 85 f6             	test   %r14,%r14
   106b8:	74 30                	je     106ea <process_script+0xf6>
   106ba:	43 80 7c 37 ff 0d    	cmpb   $0xd,-0x1(%r15,%r14,1)
   106c0:	49 8d 46 ff          	lea    -0x1(%r14),%rax
   106c4:	75 07                	jne    106cd <process_script+0xd9>
   106c6:	48 85 c0             	test   %rax,%rax
   106c9:	75 05                	jne    106d0 <process_script+0xdc>
   106cb:	eb 1f                	jmp    106ec <process_script+0xf8>
   106cd:	4c 89 f0             	mov    %r14,%rax
   106d0:	41 80 7c 07 ff 5c    	cmpb   $0x5c,-0x1(%r15,%rax,1)
   106d6:	4c 8d 68 ff          	lea    -0x1(%rax),%r13
   106da:	75 10                	jne    106ec <process_script+0xf8>
   106dc:	41 bc 7e 7f fd e3    	mov    $0xe3fd7f7e,%r12d
   106e2:	4c 89 fd             	mov    %r15,%rbp
   106e5:	e9 92 00 00 00       	jmp    1077c <process_script+0x188>
   106ea:	31 c0                	xor    %eax,%eax
   106ec:	41 c6 04 07 00       	movb   $0x0,(%r15,%rax,1)
   106f1:	4d 89 fc             	mov    %r15,%r12
   106f4:	41 0f be 3c 24       	movsbl (%r12),%edi
   106f9:	e8 b2 8c 00 00       	call   193b0 <isspace>
   106fe:	85 c0                	test   %eax,%eax
   10700:	74 05                	je     10707 <process_script+0x113>
   10702:	49 ff c4             	inc    %r12
   10705:	eb ed                	jmp    106f4 <process_script+0x100>
   10707:	45 31 ed             	xor    %r13d,%r13d
   1070a:	41 80 3c 24 3a       	cmpb   $0x3a,(%r12)
   1070f:	75 2f                	jne    10740 <process_script+0x14c>
   10711:	4d 8d 6c 24 01       	lea    0x1(%r12),%r13
   10716:	4d 89 ec             	mov    %r13,%r12
   10719:	41 0f be 3c 24       	movsbl (%r12),%edi
   1071e:	40 84 ff             	test   %dil,%dil
   10721:	74 1d                	je     10740 <process_script+0x14c>
   10723:	e8 88 8c 00 00       	call   193b0 <isspace>
   10728:	85 c0                	test   %eax,%eax
   1072a:	75 05                	jne    10731 <process_script+0x13d>
   1072c:	49 ff c4             	inc    %r12
   1072f:	eb e8                	jmp    10719 <process_script+0x125>
   10731:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   10736:	74 08                	je     10740 <process_script+0x14c>
   10738:	41 c6 04 24 00       	movb   $0x0,(%r12)
   1073d:	49 ff c4             	inc    %r12
   10740:	4c 89 e1             	mov    %r12,%rcx
   10743:	48 89 df             	mov    %rbx,%rdi
   10746:	48 8b 34 24          	mov    (%rsp),%rsi
   1074a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1074f:	4c 89 ea             	mov    %r13,%rdx
   10752:	ff d0                	call   *%rax
   10754:	41 89 c4             	mov    %eax,%r12d
   10757:	89 c7                	mov    %eax,%edi
   10759:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1075e:	ff d0                	call   *%rax
   10760:	85 c0                	test   %eax,%eax
   10762:	75 2b                	jne    1078f <process_script+0x19b>
   10764:	4c 89 ff             	mov    %r15,%rdi
   10767:	31 ed                	xor    %ebp,%ebp
   10769:	45 31 ed             	xor    %r13d,%r13d
   1076c:	e8 de be ff ff       	call   c64f <free>
   10771:	48 8b 05 28 95 01 00 	mov    0x19528(%rip),%rax        # 29ca0 <script_offset>
   10778:	48 89 04 24          	mov    %rax,(%rsp)
   1077c:	48 8b 05 1d 95 01 00 	mov    0x1951d(%rip),%rax        # 29ca0 <script_offset>
   10783:	48 39 43 48          	cmp    %rax,0x48(%rbx)
   10787:	0f 87 9a fe ff ff    	ja     10627 <process_script+0x33>
   1078d:	eb 03                	jmp    10792 <process_script+0x19e>
   1078f:	4c 89 fd             	mov    %r15,%rbp
   10792:	48 89 ef             	mov    %rbp,%rdi
   10795:	e8 b5 be ff ff       	call   c64f <free>
   1079a:	48 83 c4 28          	add    $0x28,%rsp
   1079e:	44 89 e0             	mov    %r12d,%eax
   107a1:	5b                   	pop    %rbx
   107a2:	5d                   	pop    %rbp
   107a3:	41 5c                	pop    %r12
   107a5:	41 5d                	pop    %r13
   107a7:	41 5e                	pop    %r14
   107a9:	41 5f                	pop    %r15
   107ab:	c3                   	ret    

00000000000107ac <script_exec>:
   107ac:	f3 0f 1e fa          	endbr64 
   107b0:	41 54                	push   %r12
   107b2:	55                   	push   %rbp
   107b3:	48 89 fd             	mov    %rdi,%rbp
   107b6:	53                   	push   %rbx
   107b7:	e8 4f f2 00 00       	call   1fa0b <unregister_image>
   107bc:	48 8b 1d dd 94 01 00 	mov    0x194dd(%rip),%rbx        # 29ca0 <script_offset>
   107c3:	48 8d 15 03 fe ff ff 	lea    -0x1fd(%rip),%rdx        # 105cd <terminate_on_exit_or_failure>
   107ca:	48 89 ef             	mov    %rbp,%rdi
   107cd:	48 8d 35 14 fe ff ff 	lea    -0x1ec(%rip),%rsi        # 105e8 <script_exec_line>
   107d4:	e8 1b fe ff ff       	call   105f4 <process_script>
   107d9:	48 83 7d 58 00       	cmpq   $0x0,0x58(%rbp)
   107de:	48 89 1d bb 94 01 00 	mov    %rbx,0x194bb(%rip)        # 29ca0 <script_offset>
   107e5:	41 89 c4             	mov    %eax,%r12d
   107e8:	75 08                	jne    107f2 <script_exec+0x46>
   107ea:	48 89 ef             	mov    %rbp,%rdi
   107ed:	e8 1a f4 00 00       	call   1fc0c <register_image>
   107f2:	44 89 e0             	mov    %r12d,%eax
   107f5:	5b                   	pop    %rbx
   107f6:	5d                   	pop    %rbp
   107f7:	41 5c                	pop    %r12
   107f9:	c3                   	ret    

00000000000107fa <script_probe>:
   107fa:	f3 0f 1e fa          	endbr64 
   107fe:	55                   	push   %rbp
   107ff:	48 83 ec 10          	sub    $0x10,%rsp
   10803:	48 8b 05 66 97 01 00 	mov    0x19766(%rip),%rax        # 29f70 <__stack_chk_guard>
   1080a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1080f:	31 c0                	xor    %eax,%eax
   10811:	48 83 7f 48 06       	cmpq   $0x6,0x48(%rdi)
   10816:	77 02                	ja     1081a <script_probe+0x20>
   10818:	eb 40                	jmp    1085a <script_probe+0x60>
   1081a:	48 8d 6c 24 01       	lea    0x1(%rsp),%rbp
   1081f:	48 8b 77 40          	mov    0x40(%rdi),%rsi
   10823:	48 89 ef             	mov    %rbp,%rdi
   10826:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   10827:	66 a5                	movsw  %ds:(%rsi),%es:(%rdi)
   10829:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
   1082a:	ba 06 00 00 00       	mov    $0x6,%edx
   1082f:	48 8d 35 d2 1c 01 00 	lea    0x11cd2(%rip),%rsi        # 22508 <ipxe_magic.1>
   10836:	48 89 ef             	mov    %rbp,%rdi
   10839:	e8 16 30 00 00       	call   13854 <memcmp>
   1083e:	85 c0                	test   %eax,%eax
   10840:	74 1f                	je     10861 <script_probe+0x67>
   10842:	ba 06 00 00 00       	mov    $0x6,%edx
   10847:	48 8d 35 b3 1c 01 00 	lea    0x11cb3(%rip),%rsi        # 22501 <gpxe_magic.0>
   1084e:	48 89 ef             	mov    %rbp,%rdi
   10851:	e8 fe 2f 00 00       	call   13854 <memcmp>
   10856:	85 c0                	test   %eax,%eax
   10858:	74 07                	je     10861 <script_probe+0x67>
   1085a:	b8 7f 7f fd d1       	mov    $0xd1fd7f7f,%eax
   1085f:	eb 10                	jmp    10871 <script_probe+0x77>
   10861:	0f be 7c 24 07       	movsbl 0x7(%rsp),%edi
   10866:	e8 45 8b 00 00       	call   193b0 <isspace>
   1086b:	85 c0                	test   %eax,%eax
   1086d:	74 eb                	je     1085a <script_probe+0x60>
   1086f:	31 c0                	xor    %eax,%eax
   10871:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10876:	48 2b 15 f3 96 01 00 	sub    0x196f3(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1087d:	74 05                	je     10884 <script_probe+0x8a>
   1087f:	e8 dc 21 ff ff       	call   2a60 <__stack_chk_fail>
   10884:	48 83 c4 10          	add    $0x10,%rsp
   10888:	5d                   	pop    %rbp
   10889:	c3                   	ret    

000000000001088a <goto_find_label>:
   1088a:	f3 0f 1e fa          	endbr64 
   1088e:	48 85 d2             	test   %rdx,%rdx
   10891:	75 06                	jne    10899 <goto_find_label+0xf>
   10893:	b8 72 7f fd d2       	mov    $0xd2fd7f72,%eax
   10898:	c3                   	ret    
   10899:	53                   	push   %rbx
   1089a:	48 8b 3d f7 93 01 00 	mov    0x193f7(%rip),%rdi        # 29c98 <goto_label>
   108a1:	48 89 f3             	mov    %rsi,%rbx
   108a4:	48 89 d6             	mov    %rdx,%rsi
   108a7:	e8 34 30 00 00       	call   138e0 <strcmp>
   108ac:	85 c0                	test   %eax,%eax
   108ae:	74 07                	je     108b7 <goto_find_label+0x2d>
   108b0:	b8 72 7f fd d2       	mov    $0xd2fd7f72,%eax
   108b5:	eb 07                	jmp    108be <goto_find_label+0x34>
   108b7:	48 89 1d e2 93 01 00 	mov    %rbx,0x193e2(%rip)        # 29ca0 <script_offset>
   108be:	5b                   	pop    %rbx
   108bf:	c3                   	ret    

00000000000108c0 <prompt_exec>:
   108c0:	f3 0f 1e fa          	endbr64 
   108c4:	41 54                	push   %r12
   108c6:	48 8d 15 53 64 01 00 	lea    0x16453(%rip),%rdx        # 26d20 <prompt_cmd>
   108cd:	53                   	push   %rbx
   108ce:	48 89 f3             	mov    %rsi,%rbx
   108d1:	48 83 ec 38          	sub    $0x38,%rsp
   108d5:	48 8b 05 94 96 01 00 	mov    0x19694(%rip),%rax        # 29f70 <__stack_chk_guard>
   108dc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   108e1:	31 c0                	xor    %eax,%eax
   108e3:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
   108e8:	e8 c2 e8 ff ff       	call   f1af <parse_options>
   108ed:	41 89 c4             	mov    %eax,%r12d
   108f0:	85 c0                	test   %eax,%eax
   108f2:	75 40                	jne    10934 <prompt_exec+0x74>
   108f4:	48 63 05 ad 96 01 00 	movslq 0x196ad(%rip),%rax        # 29fa8 <optind>
   108fb:	48 8d 3c c3          	lea    (%rbx,%rax,8),%rdi
   108ff:	e8 ec d6 00 00       	call   1dff0 <concat_args>
   10904:	48 89 c7             	mov    %rax,%rdi
   10907:	48 85 c0             	test   %rax,%rax
   1090a:	75 08                	jne    10914 <prompt_exec+0x54>
   1090c:	41 bc 77 7f fd ce    	mov    $0xcefd7f77,%r12d
   10912:	eb 20                	jmp    10934 <prompt_exec+0x74>
   10914:	8b 54 24 18          	mov    0x18(%rsp),%edx
   10918:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1091d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10922:	e8 db fa 00 00       	call   20402 <prompt>
   10927:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1092c:	41 89 c4             	mov    %eax,%r12d
   1092f:	e8 1b bd ff ff       	call   c64f <free>
   10934:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   10939:	48 2b 05 30 96 01 00 	sub    0x19630(%rip),%rax        # 29f70 <__stack_chk_guard>
   10940:	74 05                	je     10947 <prompt_exec+0x87>
   10942:	e8 19 21 ff ff       	call   2a60 <__stack_chk_fail>
   10947:	48 83 c4 38          	add    $0x38,%rsp
   1094b:	44 89 e0             	mov    %r12d,%eax
   1094e:	5b                   	pop    %rbx
   1094f:	41 5c                	pop    %r12
   10951:	c3                   	ret    

0000000000010952 <goto_exec>:
   10952:	f3 0f 1e fa          	endbr64 
   10956:	53                   	push   %rbx
   10957:	48 8d 15 12 64 01 00 	lea    0x16412(%rip),%rdx        # 26d70 <goto_cmd>
   1095e:	48 89 f3             	mov    %rsi,%rbx
   10961:	48 83 ec 20          	sub    $0x20,%rsp
   10965:	48 8b 05 04 96 01 00 	mov    0x19604(%rip),%rax        # 29f70 <__stack_chk_guard>
   1096c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10971:	31 c0                	xor    %eax,%eax
   10973:	48 8d 4c 24 17       	lea    0x17(%rsp),%rcx
   10978:	e8 32 e8 ff ff       	call   f1af <parse_options>
   1097d:	85 c0                	test   %eax,%eax
   1097f:	75 79                	jne    109fa <goto_exec+0xa8>
   10981:	48 8b 3d 40 96 01 00 	mov    0x19640(%rip),%rdi        # 29fc8 <current_image>
   10988:	48 85 ff             	test   %rdi,%rdi
   1098b:	75 22                	jne    109af <goto_exec+0x5d>
   1098d:	bf 7d 7f fd c2       	mov    $0xc2fd7f7d,%edi
   10992:	e8 05 2e 00 00       	call   1379c <strerror>
   10997:	48 8d 3d 65 2d 01 00 	lea    0x12d65(%rip),%rdi        # 23703 <.LC0>
   1099e:	48 89 c6             	mov    %rax,%rsi
   109a1:	31 c0                	xor    %eax,%eax
   109a3:	e8 f6 67 00 00       	call   1719e <printf>
   109a8:	b8 7d 7f fd c2       	mov    $0xc2fd7f7d,%eax
   109ad:	eb 4b                	jmp    109fa <goto_exec+0xa8>
   109af:	48 63 05 f2 95 01 00 	movslq 0x195f2(%rip),%rax        # 29fa8 <optind>
   109b6:	48 8d 15 04 fc ff ff 	lea    -0x3fc(%rip),%rdx        # 105c1 <terminate_on_label_found>
   109bd:	48 8d 35 c6 fe ff ff 	lea    -0x13a(%rip),%rsi        # 1088a <goto_find_label>
   109c4:	48 8b 04 c3          	mov    (%rbx,%rax,8),%rax
   109c8:	48 8b 1d d1 92 01 00 	mov    0x192d1(%rip),%rbx        # 29ca0 <script_offset>
   109cf:	48 89 05 c2 92 01 00 	mov    %rax,0x192c2(%rip)        # 29c98 <goto_label>
   109d6:	e8 19 fc ff ff       	call   105f4 <process_script>
   109db:	85 c0                	test   %eax,%eax
   109dd:	74 09                	je     109e8 <goto_exec+0x96>
   109df:	48 89 1d ba 92 01 00 	mov    %rbx,0x192ba(%rip)        # 29ca0 <script_offset>
   109e6:	eb 12                	jmp    109fa <goto_exec+0xa8>
   109e8:	bf 01 00 00 00       	mov    $0x1,%edi
   109ed:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   109f1:	e8 55 d3 00 00       	call   1dd4b <shell_stop>
   109f6:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   109fa:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   109ff:	48 2b 15 6a 95 01 00 	sub    0x1956a(%rip),%rdx        # 29f70 <__stack_chk_guard>
   10a06:	74 05                	je     10a0d <goto_exec+0xbb>
   10a08:	e8 53 20 ff ff       	call   2a60 <__stack_chk_fail>
   10a0d:	48 83 c4 20          	add    $0x20,%rsp
   10a11:	5b                   	pop    %rbx
   10a12:	c3                   	ret    

0000000000010a13 <scsicmd_read_capacity_cmd>:
   10a13:	f3 0f 1e fa          	endbr64 
   10a17:	83 bf 94 00 00 00 00 	cmpl   $0x0,0x94(%rdi)
   10a1e:	48 8d 97 98 00 00 00 	lea    0x98(%rdi),%rdx
   10a25:	74 14                	je     10a3b <scsicmd_read_capacity_cmd+0x28>
   10a27:	66 c7 46 08 9e 10    	movw   $0x109e,0x8(%rsi)
   10a2d:	b8 20 00 00 00       	mov    $0x20,%eax
   10a32:	c7 46 12 00 00 00 20 	movl   $0x20000000,0x12(%rsi)
   10a39:	eb 09                	jmp    10a44 <scsicmd_read_capacity_cmd+0x31>
   10a3b:	c6 46 08 25          	movb   $0x25,0x8(%rsi)
   10a3f:	b8 08 00 00 00       	mov    $0x8,%eax
   10a44:	48 89 56 28          	mov    %rdx,0x28(%rsi)
   10a48:	48 89 46 30          	mov    %rax,0x30(%rsi)
   10a4c:	c3                   	ret    

0000000000010a4d <scsicmd_test_unit_ready_cmd>:
   10a4d:	f3 0f 1e fa          	endbr64 
   10a51:	c6 46 08 00          	movb   $0x0,0x8(%rsi)
   10a55:	c3                   	ret    

0000000000010a56 <scsicmd_write_cmd>:
   10a56:	f3 0f 1e fa          	endbr64 
   10a5a:	8b 4f 78             	mov    0x78(%rdi),%ecx
   10a5d:	48 8b 57 70          	mov    0x70(%rdi),%rdx
   10a61:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   10a67:	48 89 c8             	mov    %rcx,%rax
   10a6a:	48 01 d1             	add    %rdx,%rcx
   10a6d:	4c 39 c1             	cmp    %r8,%rcx
   10a70:	76 12                	jbe    10a84 <scsicmd_write_cmd+0x2e>
   10a72:	48 0f ca             	bswap  %rdx
   10a75:	0f c8                	bswap  %eax
   10a77:	c6 46 08 8a          	movb   $0x8a,0x8(%rsi)
   10a7b:	48 89 56 0a          	mov    %rdx,0xa(%rsi)
   10a7f:	89 46 12             	mov    %eax,0x12(%rsi)
   10a82:	eb 0f                	jmp    10a93 <scsicmd_write_cmd+0x3d>
   10a84:	0f ca                	bswap  %edx
   10a86:	86 c4                	xchg   %al,%ah
   10a88:	c6 46 08 2a          	movb   $0x2a,0x8(%rsi)
   10a8c:	89 56 0a             	mov    %edx,0xa(%rsi)
   10a8f:	66 89 46 0f          	mov    %ax,0xf(%rsi)
   10a93:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   10a9a:	48 89 46 18          	mov    %rax,0x18(%rsi)
   10a9e:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   10aa5:	48 89 46 20          	mov    %rax,0x20(%rsi)
   10aa9:	c3                   	ret    

0000000000010aaa <scsicmd_read_cmd>:
   10aaa:	f3 0f 1e fa          	endbr64 
   10aae:	8b 4f 78             	mov    0x78(%rdi),%ecx
   10ab1:	48 8b 57 70          	mov    0x70(%rdi),%rdx
   10ab5:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
   10abb:	48 89 c8             	mov    %rcx,%rax
   10abe:	48 01 d1             	add    %rdx,%rcx
   10ac1:	4c 39 c1             	cmp    %r8,%rcx
   10ac4:	76 12                	jbe    10ad8 <scsicmd_read_cmd+0x2e>
   10ac6:	48 0f ca             	bswap  %rdx
   10ac9:	0f c8                	bswap  %eax
   10acb:	c6 46 08 88          	movb   $0x88,0x8(%rsi)
   10acf:	48 89 56 0a          	mov    %rdx,0xa(%rsi)
   10ad3:	89 46 12             	mov    %eax,0x12(%rsi)
   10ad6:	eb 0f                	jmp    10ae7 <scsicmd_read_cmd+0x3d>
   10ad8:	0f ca                	bswap  %edx
   10ada:	86 c4                	xchg   %al,%ah
   10adc:	c6 46 08 28          	movb   $0x28,0x8(%rsi)
   10ae0:	89 56 0a             	mov    %edx,0xa(%rsi)
   10ae3:	66 89 46 0f          	mov    %ax,0xf(%rsi)
   10ae7:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   10aee:	48 89 46 28          	mov    %rax,0x28(%rsi)
   10af2:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   10af9:	48 89 46 30          	mov    %rax,0x30(%rsi)
   10afd:	c3                   	ret    

0000000000010afe <scsi_command>:
   10afe:	f3 0f 1e fa          	endbr64 
   10b02:	41 55                	push   %r13
   10b04:	49 89 d5             	mov    %rdx,%r13
   10b07:	41 54                	push   %r12
   10b09:	55                   	push   %rbp
   10b0a:	48 89 f5             	mov    %rsi,%rbp
   10b0d:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 10afe <scsi_command>
   10b14:	48 83 ec 10          	sub    $0x10,%rsp
   10b18:	48 8b 05 51 94 01 00 	mov    0x19451(%rip),%rax        # 29f70 <__stack_chk_guard>
   10b1f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10b24:	31 c0                	xor    %eax,%eax
   10b26:	48 89 e2             	mov    %rsp,%rdx
   10b29:	e8 d7 8c ff ff       	call   9805 <intf_get_dest_op_untyped>
   10b2e:	48 8b 3c 24          	mov    (%rsp),%rdi
   10b32:	49 89 c4             	mov    %rax,%r12
   10b35:	e8 75 8c ff ff       	call   97af <intf_object>
   10b3a:	4d 85 e4             	test   %r12,%r12
   10b3d:	74 11                	je     10b50 <scsi_command+0x52>
   10b3f:	48 89 c7             	mov    %rax,%rdi
   10b42:	4c 89 ea             	mov    %r13,%rdx
   10b45:	48 89 ee             	mov    %rbp,%rsi
   10b48:	41 ff d4             	call   *%r12
   10b4b:	41 89 c4             	mov    %eax,%r12d
   10b4e:	eb 06                	jmp    10b56 <scsi_command+0x58>
   10b50:	41 bc 7d bf 8f c0    	mov    $0xc08fbf7d,%r12d
   10b56:	48 8b 3c 24          	mov    (%rsp),%rdi
   10b5a:	e8 e1 8b ff ff       	call   9740 <intf_put>
   10b5f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10b64:	48 2b 05 05 94 01 00 	sub    0x19405(%rip),%rax        # 29f70 <__stack_chk_guard>
   10b6b:	74 05                	je     10b72 <scsi_command+0x74>
   10b6d:	e8 ee 1e ff ff       	call   2a60 <__stack_chk_fail>
   10b72:	48 83 c4 10          	add    $0x10,%rsp
   10b76:	44 89 e0             	mov    %r12d,%eax
   10b79:	5d                   	pop    %rbp
   10b7a:	41 5c                	pop    %r12
   10b7c:	41 5d                	pop    %r13
   10b7e:	c3                   	ret    

0000000000010b7f <scsicmd_command>:
   10b7f:	41 54                	push   %r12
   10b81:	b9 38 00 00 00       	mov    $0x38,%ecx
   10b86:	55                   	push   %rbp
   10b87:	53                   	push   %rbx
   10b88:	48 89 fb             	mov    %rdi,%rbx
   10b8b:	48 83 ec 40          	sub    $0x40,%rsp
   10b8f:	48 8b 6f 10          	mov    0x10(%rdi),%rbp
   10b93:	48 8b 05 d6 93 01 00 	mov    0x193d6(%rip),%rax        # 29f70 <__stack_chk_guard>
   10b9a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   10b9f:	31 c0                	xor    %eax,%eax
   10ba1:	49 89 e4             	mov    %rsp,%r12
   10ba4:	4c 89 e7             	mov    %r12,%rdi
   10ba7:	f3 aa                	rep stos %al,%es:(%rdi)
   10ba9:	48 8b 45 50          	mov    0x50(%rbp),%rax
   10bad:	4c 89 e6             	mov    %r12,%rsi
   10bb0:	48 89 df             	mov    %rbx,%rdi
   10bb3:	48 89 04 24          	mov    %rax,(%rsp)
   10bb7:	48 8b 43 68          	mov    0x68(%rbx),%rax
   10bbb:	ff 50 10             	call   *0x10(%rax)
   10bbe:	48 8d 73 48          	lea    0x48(%rbx),%rsi
   10bc2:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   10bc6:	4c 89 e2             	mov    %r12,%rdx
   10bc9:	e8 30 ff ff ff       	call   10afe <scsi_command>
   10bce:	85 c0                	test   %eax,%eax
   10bd0:	78 08                	js     10bda <scsicmd_command+0x5b>
   10bd2:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
   10bd8:	31 c0                	xor    %eax,%eax
   10bda:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   10bdf:	48 2b 15 8a 93 01 00 	sub    0x1938a(%rip),%rdx        # 29f70 <__stack_chk_guard>
   10be6:	74 05                	je     10bed <scsicmd_command+0x6e>
   10be8:	e8 73 1e ff ff       	call   2a60 <__stack_chk_fail>
   10bed:	48 83 c4 40          	add    $0x40,%rsp
   10bf1:	5b                   	pop    %rbx
   10bf2:	5d                   	pop    %rbp
   10bf3:	41 5c                	pop    %r12
   10bf5:	c3                   	ret    

0000000000010bf6 <scsi_response>:
   10bf6:	f3 0f 1e fa          	endbr64 
   10bfa:	55                   	push   %rbp
   10bfb:	48 89 f5             	mov    %rsi,%rbp
   10bfe:	48 8d 35 f1 ff ff ff 	lea    -0xf(%rip),%rsi        # 10bf6 <scsi_response>
   10c05:	53                   	push   %rbx
   10c06:	48 83 ec 18          	sub    $0x18,%rsp
   10c0a:	48 8b 05 5f 93 01 00 	mov    0x1935f(%rip),%rax        # 29f70 <__stack_chk_guard>
   10c11:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10c16:	31 c0                	xor    %eax,%eax
   10c18:	48 89 e2             	mov    %rsp,%rdx
   10c1b:	e8 e5 8b ff ff       	call   9805 <intf_get_dest_op_untyped>
   10c20:	48 85 c0             	test   %rax,%rax
   10c23:	74 14                	je     10c39 <scsi_response+0x43>
   10c25:	48 8b 3c 24          	mov    (%rsp),%rdi
   10c29:	48 89 c3             	mov    %rax,%rbx
   10c2c:	e8 7e 8b ff ff       	call   97af <intf_object>
   10c31:	48 89 ee             	mov    %rbp,%rsi
   10c34:	48 89 c7             	mov    %rax,%rdi
   10c37:	ff d3                	call   *%rbx
   10c39:	48 8b 3c 24          	mov    (%rsp),%rdi
   10c3d:	e8 fe 8a ff ff       	call   9740 <intf_put>
   10c42:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10c47:	48 2b 05 22 93 01 00 	sub    0x19322(%rip),%rax        # 29f70 <__stack_chk_guard>
   10c4e:	74 05                	je     10c55 <scsi_response+0x5f>
   10c50:	e8 0b 1e ff ff       	call   2a60 <__stack_chk_fail>
   10c55:	48 83 c4 18          	add    $0x18,%rsp
   10c59:	5b                   	pop    %rbx
   10c5a:	5d                   	pop    %rbp
   10c5b:	c3                   	ret    

0000000000010c5c <scsidev_window>:
   10c5c:	f3 0f 1e fa          	endbr64 
   10c60:	f6 47 58 02          	testb  $0x2,0x58(%rdi)
   10c64:	74 09                	je     10c6f <scsidev_window+0x13>
   10c66:	48 83 c7 30          	add    $0x30,%rdi
   10c6a:	e9 c9 67 00 00       	jmp    17438 <xfer_window>
   10c6f:	31 c0                	xor    %eax,%eax
   10c71:	c3                   	ret    

0000000000010c72 <scsicmd_close>:
   10c72:	f3 0f 1e fa          	endbr64 
   10c76:	55                   	push   %rbp
   10c77:	48 89 fd             	mov    %rdi,%rbp
   10c7a:	31 c9                	xor    %ecx,%ecx
   10c7c:	89 f7                	mov    %esi,%edi
   10c7e:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   10c82:	48 8b 45 20          	mov    0x20(%rbp),%rax
   10c86:	48 8d 75 48          	lea    0x48(%rbp),%rsi
   10c8a:	48 89 42 08          	mov    %rax,0x8(%rdx)
   10c8e:	48 89 10             	mov    %rdx,(%rax)
   10c91:	48 8d 55 28          	lea    0x28(%rbp),%rdx
   10c95:	31 c0                	xor    %eax,%eax
   10c97:	e8 44 8d ff ff       	call   99e0 <intfs_shutdown>
   10c9c:	48 89 ef             	mov    %rbp,%rdi
   10c9f:	5d                   	pop    %rbp
   10ca0:	e9 99 f1 ff ff       	jmp    fe3e <ref_decrement>

0000000000010ca5 <scsicmd_done>:
   10ca5:	f3 0f 1e fa          	endbr64 
   10ca9:	55                   	push   %rbp
   10caa:	48 89 fd             	mov    %rdi,%rbp
   10cad:	48 8d 7f 48          	lea    0x48(%rdi),%rdi
   10cb1:	48 83 ec 10          	sub    $0x10,%rsp
   10cb5:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   10cb9:	e8 8a 8b ff ff       	call   9848 <intf_restart>
   10cbe:	48 8b 45 68          	mov    0x68(%rbp),%rax
   10cc2:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   10cc6:	48 89 ef             	mov    %rbp,%rdi
   10cc9:	48 8b 40 18          	mov    0x18(%rax),%rax
   10ccd:	48 83 c4 10          	add    $0x10,%rsp
   10cd1:	5d                   	pop    %rbp
   10cd2:	ff e0                	jmp    *%rax

0000000000010cd4 <scsicmd_free>:
   10cd4:	f3 0f 1e fa          	endbr64 
   10cd8:	55                   	push   %rbp
   10cd9:	48 89 fd             	mov    %rdi,%rbp
   10cdc:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   10ce0:	e8 59 f1 ff ff       	call   fe3e <ref_decrement>
   10ce5:	48 89 ef             	mov    %rbp,%rdi
   10ce8:	5d                   	pop    %rbp
   10ce9:	e9 61 b9 ff ff       	jmp    c64f <free>

0000000000010cee <scsidev_command>:
   10cee:	41 57                	push   %r15
   10cf0:	49 89 cf             	mov    %rcx,%r15
   10cf3:	41 56                	push   %r14
   10cf5:	45 89 c6             	mov    %r8d,%r14d
   10cf8:	41 55                	push   %r13
   10cfa:	49 89 f5             	mov    %rsi,%r13
   10cfd:	41 54                	push   %r12
   10cff:	49 89 d4             	mov    %rdx,%r12
   10d02:	55                   	push   %rbp
   10d03:	53                   	push   %rbx
   10d04:	48 89 fb             	mov    %rdi,%rbx
   10d07:	48 83 ec 18          	sub    $0x18,%rsp
   10d0b:	48 8b 42 08          	mov    0x8(%rdx),%rax
   10d0f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   10d14:	48 8d b8 98 00 00 00 	lea    0x98(%rax),%rdi
   10d1b:	e8 3a b9 ff ff       	call   c65a <zalloc>
   10d20:	48 85 c0             	test   %rax,%rax
   10d23:	75 0b                	jne    10d30 <scsidev_command+0x42>
   10d25:	41 bc 77 bf 8f ce    	mov    $0xce8fbf77,%r12d
   10d2b:	e9 b2 00 00 00       	jmp    10de2 <scsidev_command+0xf4>
   10d30:	48 89 c5             	mov    %rax,%rbp
   10d33:	48 8d 05 9a ff ff ff 	lea    -0x66(%rip),%rax        # 10cd4 <scsicmd_free>
   10d3a:	48 8d 0d bf 61 01 00 	lea    0x161bf(%rip),%rcx        # 26f00 <scsicmd_block_desc>
   10d41:	48 89 df             	mov    %rbx,%rdi
   10d44:	48 89 45 08          	mov    %rax,0x8(%rbp)
   10d48:	48 8d 05 91 56 01 00 	lea    0x15691(%rip),%rax        # 263e0 <null_intf>
   10d4f:	48 89 45 28          	mov    %rax,0x28(%rbp)
   10d53:	48 89 45 48          	mov    %rax,0x48(%rbp)
   10d57:	48 8d 05 62 61 01 00 	lea    0x16162(%rip),%rax        # 26ec0 <scsicmd_scsi_desc>
   10d5e:	48 89 4d 38          	mov    %rcx,0x38(%rbp)
   10d62:	48 89 4d 40          	mov    %rcx,0x40(%rbp)
   10d66:	48 89 45 58          	mov    %rax,0x58(%rbp)
   10d6a:	48 89 45 60          	mov    %rax,0x60(%rbp)
   10d6e:	48 89 6d 30          	mov    %rbp,0x30(%rbp)
   10d72:	48 89 6d 50          	mov    %rbp,0x50(%rbp)
   10d76:	e8 b7 f0 ff ff       	call   fe32 <ref_increment>
   10d7b:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
   10d7f:	48 8d b3 a8 00 00 00 	lea    0xa8(%rbx),%rsi
   10d86:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   10d8a:	e8 32 b3 ff ff       	call   c0c1 <extern_list_add>
   10d8f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   10d94:	4c 89 65 68          	mov    %r12,0x68(%rbp)
   10d98:	48 89 ef             	mov    %rbp,%rdi
   10d9b:	4c 89 7d 70          	mov    %r15,0x70(%rbp)
   10d9f:	48 89 85 80 00 00 00 	mov    %rax,0x80(%rbp)
   10da6:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   10dab:	44 89 75 78          	mov    %r14d,0x78(%rbp)
   10daf:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
   10db6:	e8 c4 fd ff ff       	call   10b7f <scsicmd_command>
   10dbb:	41 89 c4             	mov    %eax,%r12d
   10dbe:	85 c0                	test   %eax,%eax
   10dc0:	74 14                	je     10dd6 <scsidev_command+0xe8>
   10dc2:	48 89 ef             	mov    %rbp,%rdi
   10dc5:	89 c6                	mov    %eax,%esi
   10dc7:	e8 a6 fe ff ff       	call   10c72 <scsicmd_close>
   10dcc:	48 89 ef             	mov    %rbp,%rdi
   10dcf:	e8 6a f0 ff ff       	call   fe3e <ref_decrement>
   10dd4:	eb 0c                	jmp    10de2 <scsidev_command+0xf4>
   10dd6:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
   10dda:	4c 89 ee             	mov    %r13,%rsi
   10ddd:	e8 8f 89 ff ff       	call   9771 <intf_plug_plug>
   10de2:	48 83 c4 18          	add    $0x18,%rsp
   10de6:	44 89 e0             	mov    %r12d,%eax
   10de9:	5b                   	pop    %rbx
   10dea:	5d                   	pop    %rbp
   10deb:	41 5c                	pop    %r12
   10ded:	41 5d                	pop    %r13
   10def:	41 5e                	pop    %r14
   10df1:	41 5f                	pop    %r15
   10df3:	c3                   	ret    

0000000000010df4 <scsidev_read_capacity>:
   10df4:	f3 0f 1e fa          	endbr64 
   10df8:	48 83 ec 10          	sub    $0x10,%rsp
   10dfc:	45 31 c9             	xor    %r9d,%r9d
   10dff:	45 31 c0             	xor    %r8d,%r8d
   10e02:	31 c9                	xor    %ecx,%ecx
   10e04:	6a 00                	push   $0x0
   10e06:	48 8d 15 53 61 01 00 	lea    0x16153(%rip),%rdx        # 26f60 <scsicmd_read_capacity>
   10e0d:	e8 dc fe ff ff       	call   10cee <scsidev_command>
   10e12:	48 83 c4 18          	add    $0x18,%rsp
   10e16:	c3                   	ret    

0000000000010e17 <scsidev_write>:
   10e17:	f3 0f 1e fa          	endbr64 
   10e1b:	48 83 ec 10          	sub    $0x10,%rsp
   10e1f:	41 51                	push   %r9
   10e21:	4d 89 c1             	mov    %r8,%r9
   10e24:	41 89 c8             	mov    %ecx,%r8d
   10e27:	48 89 d1             	mov    %rdx,%rcx
   10e2a:	48 8d 15 4f 61 01 00 	lea    0x1614f(%rip),%rdx        # 26f80 <scsicmd_write>
   10e31:	e8 b8 fe ff ff       	call   10cee <scsidev_command>
   10e36:	48 83 c4 18          	add    $0x18,%rsp
   10e3a:	c3                   	ret    

0000000000010e3b <scsidev_read>:
   10e3b:	f3 0f 1e fa          	endbr64 
   10e3f:	48 83 ec 10          	sub    $0x10,%rsp
   10e43:	41 51                	push   %r9
   10e45:	4d 89 c1             	mov    %r8,%r9
   10e48:	41 89 c8             	mov    %ecx,%r8d
   10e4b:	48 89 d1             	mov    %rdx,%rcx
   10e4e:	48 8d 15 4b 61 01 00 	lea    0x1614b(%rip),%rdx        # 26fa0 <scsicmd_read>
   10e55:	e8 94 fe ff ff       	call   10cee <scsidev_command>
   10e5a:	48 83 c4 18          	add    $0x18,%rsp
   10e5e:	c3                   	ret    

0000000000010e5f <scsidev_close>:
   10e5f:	f3 0f 1e fa          	endbr64 
   10e63:	41 54                	push   %r12
   10e65:	41 89 f4             	mov    %esi,%r12d
   10e68:	55                   	push   %rbp
   10e69:	53                   	push   %rbx
   10e6a:	48 89 fb             	mov    %rdi,%rbx
   10e6d:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   10e71:	e8 0e eb ff ff       	call   f984 <process_del>
   10e76:	48 8d 4b 60          	lea    0x60(%rbx),%rcx
   10e7a:	48 8d 53 30          	lea    0x30(%rbx),%rdx
   10e7e:	44 89 e7             	mov    %r12d,%edi
   10e81:	48 8d 73 10          	lea    0x10(%rbx),%rsi
   10e85:	31 c0                	xor    %eax,%eax
   10e87:	45 31 c0             	xor    %r8d,%r8d
   10e8a:	48 81 c3 a8 00 00 00 	add    $0xa8,%rbx
   10e91:	e8 4a 8b ff ff       	call   99e0 <intfs_shutdown>
   10e96:	48 8b 03             	mov    (%rbx),%rax
   10e99:	48 8b 28             	mov    (%rax),%rbp
   10e9c:	48 8d 78 e8          	lea    -0x18(%rax),%rdi
   10ea0:	48 83 ed 18          	sub    $0x18,%rbp
   10ea4:	48 8d 47 18          	lea    0x18(%rdi),%rax
   10ea8:	48 39 d8             	cmp    %rbx,%rax
   10eab:	74 15                	je     10ec2 <scsidev_close+0x63>
   10ead:	44 89 e6             	mov    %r12d,%esi
   10eb0:	e8 bd fd ff ff       	call   10c72 <scsicmd_close>
   10eb5:	48 8b 45 18          	mov    0x18(%rbp),%rax
   10eb9:	48 89 ef             	mov    %rbp,%rdi
   10ebc:	48 8d 68 e8          	lea    -0x18(%rax),%rbp
   10ec0:	eb e2                	jmp    10ea4 <scsidev_close+0x45>
   10ec2:	5b                   	pop    %rbx
   10ec3:	5d                   	pop    %rbp
   10ec4:	41 5c                	pop    %r12
   10ec6:	c3                   	ret    

0000000000010ec7 <scsicmd_read_capacity_done>:
   10ec7:	f3 0f 1e fa          	endbr64 
   10ecb:	55                   	push   %rbp
   10ecc:	48 89 fd             	mov    %rdi,%rbp
   10ecf:	48 83 ec 20          	sub    $0x20,%rsp
   10ed3:	48 8b 05 96 90 01 00 	mov    0x19096(%rip),%rax        # 29f70 <__stack_chk_guard>
   10eda:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10edf:	31 c0                	xor    %eax,%eax
   10ee1:	85 f6                	test   %esi,%esi
   10ee3:	74 1c                	je     10f01 <scsicmd_read_capacity_done+0x3a>
   10ee5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10eea:	48 2b 05 7f 90 01 00 	sub    0x1907f(%rip),%rax        # 29f70 <__stack_chk_guard>
   10ef1:	0f 85 9b 00 00 00    	jne    10f92 <scsicmd_read_capacity_done+0xcb>
   10ef7:	48 83 c4 20          	add    $0x20,%rsp
   10efb:	5d                   	pop    %rbp
   10efc:	e9 71 fd ff ff       	jmp    10c72 <scsicmd_close>
   10f01:	83 bf 94 00 00 00 00 	cmpl   $0x0,0x94(%rdi)
   10f08:	74 22                	je     10f2c <scsicmd_read_capacity_done+0x65>
   10f0a:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
   10f11:	48 0f c8             	bswap  %rax
   10f14:	48 ff c0             	inc    %rax
   10f17:	48 89 04 24          	mov    %rax,(%rsp)
   10f1b:	8b 87 a0 00 00 00    	mov    0xa0(%rdi),%eax
   10f21:	0f c8                	bswap  %eax
   10f23:	89 c0                	mov    %eax,%eax
   10f25:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10f2a:	eb 3a                	jmp    10f66 <scsicmd_read_capacity_done+0x9f>
   10f2c:	8b 87 98 00 00 00    	mov    0x98(%rdi),%eax
   10f32:	0f c8                	bswap  %eax
   10f34:	8d 50 01             	lea    0x1(%rax),%edx
   10f37:	8b 87 9c 00 00 00    	mov    0x9c(%rdi),%eax
   10f3d:	0f c8                	bswap  %eax
   10f3f:	89 c0                	mov    %eax,%eax
   10f41:	48 89 14 24          	mov    %rdx,(%rsp)
   10f45:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10f4a:	48 85 d2             	test   %rdx,%rdx
   10f4d:	75 17                	jne    10f66 <scsicmd_read_capacity_done+0x9f>
   10f4f:	c7 87 94 00 00 00 01 	movl   $0x1,0x94(%rdi)
   10f56:	00 00 00 
   10f59:	e8 21 fc ff ff       	call   10b7f <scsicmd_command>
   10f5e:	89 c6                	mov    %eax,%esi
   10f60:	85 c0                	test   %eax,%eax
   10f62:	74 20                	je     10f84 <scsicmd_read_capacity_done+0xbd>
   10f64:	eb 16                	jmp    10f7c <scsicmd_read_capacity_done+0xb5>
   10f66:	48 89 e6             	mov    %rsp,%rsi
   10f69:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
   10f6d:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%rsp)
   10f74:	ff 
   10f75:	e8 6d 7f 00 00       	call   18ee7 <block_capacity>
   10f7a:	31 f6                	xor    %esi,%esi
   10f7c:	48 89 ef             	mov    %rbp,%rdi
   10f7f:	e8 ee fc ff ff       	call   10c72 <scsicmd_close>
   10f84:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   10f89:	48 2b 05 e0 8f 01 00 	sub    0x18fe0(%rip),%rax        # 29f70 <__stack_chk_guard>
   10f90:	74 05                	je     10f97 <scsicmd_read_capacity_done+0xd0>
   10f92:	e8 c9 1a ff ff       	call   2a60 <__stack_chk_fail>
   10f97:	48 83 c4 20          	add    $0x20,%rsp
   10f9b:	5d                   	pop    %rbp
   10f9c:	c3                   	ret    

0000000000010f9d <scsicmd_response>:
   10f9d:	f3 0f 1e fa          	endbr64 
   10fa1:	80 3e 00             	cmpb   $0x0,(%rsi)
   10fa4:	75 04                	jne    10faa <scsicmd_response+0xd>
   10fa6:	31 f6                	xor    %esi,%esi
   10fa8:	eb 15                	jmp    10fbf <scsicmd_response+0x22>
   10faa:	0f b6 76 11          	movzbl 0x11(%rsi),%esi
   10fae:	c1 e6 08             	shl    $0x8,%esi
   10fb1:	81 e6 00 0f 00 00    	and    $0xf00,%esi
   10fb7:	81 ce 98 40 70 1d    	or     $0x1d704098,%esi
   10fbd:	f7 de                	neg    %esi
   10fbf:	e9 e1 fc ff ff       	jmp    10ca5 <scsicmd_done>

0000000000010fc4 <scsidev_step>:
   10fc4:	f3 0f 1e fa          	endbr64 
   10fc8:	f6 47 58 01          	testb  $0x1,0x58(%rdi)
   10fcc:	75 47                	jne    11015 <scsidev_step+0x51>
   10fce:	55                   	push   %rbp
   10fcf:	48 89 fd             	mov    %rdi,%rbp
   10fd2:	48 8d 7f 30          	lea    0x30(%rdi),%rdi
   10fd6:	e8 5d 64 00 00       	call   17438 <xfer_window>
   10fdb:	48 85 c0             	test   %rax,%rax
   10fde:	74 33                	je     11013 <scsidev_step+0x4f>
   10fe0:	83 4d 58 01          	orl    $0x1,0x58(%rbp)
   10fe4:	48 8d 75 60          	lea    0x60(%rbp),%rsi
   10fe8:	31 c9                	xor    %ecx,%ecx
   10fea:	45 31 c9             	xor    %r9d,%r9d
   10fed:	50                   	push   %rax
   10fee:	48 8d 15 4b 5f 01 00 	lea    0x15f4b(%rip),%rdx        # 26f40 <scsicmd_test_unit_ready>
   10ff5:	45 31 c0             	xor    %r8d,%r8d
   10ff8:	48 89 ef             	mov    %rbp,%rdi
   10ffb:	6a 00                	push   $0x0
   10ffd:	e8 ec fc ff ff       	call   10cee <scsidev_command>
   11002:	5a                   	pop    %rdx
   11003:	59                   	pop    %rcx
   11004:	89 c6                	mov    %eax,%esi
   11006:	85 c0                	test   %eax,%eax
   11008:	74 09                	je     11013 <scsidev_step+0x4f>
   1100a:	48 89 ef             	mov    %rbp,%rdi
   1100d:	5d                   	pop    %rbp
   1100e:	e9 4c fe ff ff       	jmp    10e5f <scsidev_close>
   11013:	5d                   	pop    %rbp
   11014:	c3                   	ret    
   11015:	c3                   	ret    

0000000000011016 <scsidev_ready>:
   11016:	f3 0f 1e fa          	endbr64 
   1101a:	55                   	push   %rbp
   1101b:	48 89 fd             	mov    %rdi,%rbp
   1101e:	48 83 c7 60          	add    $0x60,%rdi
   11022:	48 83 ec 10          	sub    $0x10,%rsp
   11026:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1102a:	e8 19 88 ff ff       	call   9848 <intf_restart>
   1102f:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   11033:	85 f6                	test   %esi,%esi
   11035:	75 12                	jne    11049 <scsidev_ready+0x33>
   11037:	83 4d 58 02          	orl    $0x2,0x58(%rbp)
   1103b:	48 83 c4 10          	add    $0x10,%rsp
   1103f:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   11043:	5d                   	pop    %rbp
   11044:	e9 5b 64 00 00       	jmp    174a4 <xfer_window_changed>
   11049:	8b 85 a0 00 00 00    	mov    0xa0(%rbp),%eax
   1104f:	8d 50 01             	lea    0x1(%rax),%edx
   11052:	89 95 a0 00 00 00    	mov    %edx,0xa0(%rbp)
   11058:	83 f8 09             	cmp    $0x9,%eax
   1105b:	77 15                	ja     11072 <scsidev_ready+0x5c>
   1105d:	83 65 58 fe          	andl   $0xfffffffe,0x58(%rbp)
   11061:	48 83 c4 10          	add    $0x10,%rsp
   11065:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
   1106c:	5d                   	pop    %rbp
   1106d:	e9 bf e8 ff ff       	jmp    f931 <process_add>
   11072:	48 83 c4 10          	add    $0x10,%rsp
   11076:	48 89 ef             	mov    %rbp,%rdi
   11079:	5d                   	pop    %rbp
   1107a:	e9 e0 fd ff ff       	jmp    10e5f <scsidev_close>

000000000001107f <scsi_parse_lun>:
   1107f:	f3 0f 1e fa          	endbr64 
   11083:	41 54                	push   %r12
   11085:	55                   	push   %rbp
   11086:	53                   	push   %rbx
   11087:	48 83 ec 10          	sub    $0x10,%rsp
   1108b:	48 8b 05 de 8e 01 00 	mov    0x18ede(%rip),%rax        # 29f70 <__stack_chk_guard>
   11092:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11097:	31 c0                	xor    %eax,%eax
   11099:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   110a0:	48 85 ff             	test   %rdi,%rdi
   110a3:	75 04                	jne    110a9 <scsi_parse_lun+0x2a>
   110a5:	31 c0                	xor    %eax,%eax
   110a7:	eb 51                	jmp    110fa <scsi_parse_lun+0x7b>
   110a9:	48 89 3c 24          	mov    %rdi,(%rsp)
   110ad:	48 89 f5             	mov    %rsi,%rbp
   110b0:	31 db                	xor    %ebx,%ebx
   110b2:	49 89 e4             	mov    %rsp,%r12
   110b5:	48 8b 3c 24          	mov    (%rsp),%rdi
   110b9:	ba 10 00 00 00       	mov    $0x10,%edx
   110be:	4c 89 e6             	mov    %r12,%rsi
   110c1:	e8 b5 29 00 00       	call   13a7b <strtoul>
   110c6:	86 c4                	xchg   %al,%ah
   110c8:	66 89 44 5d 00       	mov    %ax,0x0(%rbp,%rbx,2)
   110cd:	48 8b 04 24          	mov    (%rsp),%rax
   110d1:	8a 10                	mov    (%rax),%dl
   110d3:	84 d2                	test   %dl,%dl
   110d5:	74 ce                	je     110a5 <scsi_parse_lun+0x26>
   110d7:	80 fa 2d             	cmp    $0x2d,%dl
   110da:	74 02                	je     110de <scsi_parse_lun+0x5f>
   110dc:	eb 17                	jmp    110f5 <scsi_parse_lun+0x76>
   110de:	48 8d 50 01          	lea    0x1(%rax),%rdx
   110e2:	48 ff c3             	inc    %rbx
   110e5:	48 89 14 24          	mov    %rdx,(%rsp)
   110e9:	48 83 fb 04          	cmp    $0x4,%rbx
   110ed:	75 c6                	jne    110b5 <scsi_parse_lun+0x36>
   110ef:	80 78 01 00          	cmpb   $0x0,0x1(%rax)
   110f3:	74 b0                	je     110a5 <scsi_parse_lun+0x26>
   110f5:	b8 7e bf 8f e3       	mov    $0xe38fbf7e,%eax
   110fa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   110ff:	48 2b 15 6a 8e 01 00 	sub    0x18e6a(%rip),%rdx        # 29f70 <__stack_chk_guard>
   11106:	74 05                	je     1110d <scsi_parse_lun+0x8e>
   11108:	e8 53 19 ff ff       	call   2a60 <__stack_chk_fail>
   1110d:	48 83 c4 10          	add    $0x10,%rsp
   11111:	5b                   	pop    %rbx
   11112:	5d                   	pop    %rbp
   11113:	41 5c                	pop    %r12
   11115:	c3                   	ret    

0000000000011116 <scsi_parse_sense>:
   11116:	f3 0f 1e fa          	endbr64 
   1111a:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
   11120:	48 83 fe 03          	cmp    $0x3,%rsi
   11124:	76 1b                	jbe    11141 <scsi_parse_sense+0x2b>
   11126:	8b 07                	mov    (%rdi),%eax
   11128:	89 02                	mov    %eax,(%rdx)
   1112a:	48 83 fe 0d          	cmp    $0xd,%rsi
   1112e:	76 11                	jbe    11141 <scsi_parse_sense+0x2b>
   11130:	8a 07                	mov    (%rdi),%al
   11132:	83 e0 7e             	and    $0x7e,%eax
   11135:	3c 70                	cmp    $0x70,%al
   11137:	75 08                	jne    11141 <scsi_parse_sense+0x2b>
   11139:	66 8b 47 0c          	mov    0xc(%rdi),%ax
   1113d:	66 89 42 02          	mov    %ax,0x2(%rdx)
   11141:	c3                   	ret    

0000000000011142 <scsi_open>:
   11142:	f3 0f 1e fa          	endbr64 
   11146:	41 55                	push   %r13
   11148:	49 89 f5             	mov    %rsi,%r13
   1114b:	41 54                	push   %r12
   1114d:	49 89 fc             	mov    %rdi,%r12
   11150:	bf b8 00 00 00       	mov    $0xb8,%edi
   11155:	55                   	push   %rbp
   11156:	53                   	push   %rbx
   11157:	48 89 d3             	mov    %rdx,%rbx
   1115a:	51                   	push   %rcx
   1115b:	e8 fa b4 ff ff       	call   c65a <zalloc>
   11160:	48 85 c0             	test   %rax,%rax
   11163:	75 0a                	jne    1116f <scsi_open+0x2d>
   11165:	b8 77 bf 8f ce       	mov    $0xce8fbf77,%eax
   1116a:	e9 bc 00 00 00       	jmp    1122b <scsi_open+0xe9>
   1116f:	48 89 c5             	mov    %rax,%rbp
   11172:	48 8d 05 67 52 01 00 	lea    0x15267(%rip),%rax        # 263e0 <null_intf>
   11179:	48 8d 15 c0 5c 01 00 	lea    0x15cc0(%rip),%rdx        # 26e40 <scsidev_block_desc>
   11180:	48 89 45 10          	mov    %rax,0x10(%rbp)
   11184:	48 8d bd 80 00 00 00 	lea    0x80(%rbp),%rdi
   1118b:	48 89 45 30          	mov    %rax,0x30(%rbp)
   1118f:	48 89 45 60          	mov    %rax,0x60(%rbp)
   11193:	48 8d 05 66 5c 01 00 	lea    0x15c66(%rip),%rax        # 26e00 <scsidev_ready_desc>
   1119a:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1119e:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   111a2:	48 8d 15 17 5c 01 00 	lea    0x15c17(%rip),%rdx        # 26dc0 <scsidev_scsi_desc>
   111a9:	48 89 45 70          	mov    %rax,0x70(%rbp)
   111ad:	48 89 45 78          	mov    %rax,0x78(%rbp)
   111b1:	48 8d 05 e8 5b 01 00 	lea    0x15be8(%rip),%rax        # 26da0 <scsidev_process_desc>
   111b8:	48 89 55 40          	mov    %rdx,0x40(%rbp)
   111bc:	48 89 55 48          	mov    %rdx,0x48(%rbp)
   111c0:	48 89 bd 80 00 00 00 	mov    %rdi,0x80(%rbp)
   111c7:	48 89 bd 88 00 00 00 	mov    %rdi,0x88(%rbp)
   111ce:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   111d5:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   111d9:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   111dd:	48 89 6d 68          	mov    %rbp,0x68(%rbp)
   111e1:	48 89 ad 98 00 00 00 	mov    %rbp,0x98(%rbp)
   111e8:	e8 44 e7 ff ff       	call   f931 <process_add>
   111ed:	48 8d 85 a8 00 00 00 	lea    0xa8(%rbp),%rax
   111f4:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   111f8:	4c 89 ee             	mov    %r13,%rsi
   111fb:	48 89 85 a8 00 00 00 	mov    %rax,0xa8(%rbp)
   11202:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   11209:	48 8b 03             	mov    (%rbx),%rax
   1120c:	48 89 45 50          	mov    %rax,0x50(%rbp)
   11210:	e8 5c 85 ff ff       	call   9771 <intf_plug_plug>
   11215:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   11219:	4c 89 e6             	mov    %r12,%rsi
   1121c:	e8 50 85 ff ff       	call   9771 <intf_plug_plug>
   11221:	48 89 ef             	mov    %rbp,%rdi
   11224:	e8 15 ec ff ff       	call   fe3e <ref_decrement>
   11229:	31 c0                	xor    %eax,%eax
   1122b:	5a                   	pop    %rdx
   1122c:	5b                   	pop    %rbx
   1122d:	5d                   	pop    %rbp
   1122e:	41 5c                	pop    %r12
   11230:	41 5d                	pop    %r13
   11232:	c3                   	ret    

0000000000011233 <apply_settings>:
   11233:	55                   	push   %rbp
   11234:	48 8d 2d bd 86 01 00 	lea    0x186bd(%rip),%rbp        # 298f8 <ipv4_sockaddr_converter>
   1123b:	53                   	push   %rbx
   1123c:	48 8d 1d 8d 86 01 00 	lea    0x1868d(%rip),%rbx        # 298d0 <dns_applicator>
   11243:	51                   	push   %rcx
   11244:	48 39 eb             	cmp    %rbp,%rbx
   11247:	73 0c                	jae    11255 <apply_settings+0x22>
   11249:	ff 13                	call   *(%rbx)
   1124b:	85 c0                	test   %eax,%eax
   1124d:	75 08                	jne    11257 <apply_settings+0x24>
   1124f:	48 83 c3 08          	add    $0x8,%rbx
   11253:	eb ef                	jmp    11244 <apply_settings+0x11>
   11255:	31 c0                	xor    %eax,%eax
   11257:	5a                   	pop    %rdx
   11258:	5b                   	pop    %rbx
   11259:	5d                   	pop    %rbp
   1125a:	c3                   	ret    

000000000001125b <numeric_setting_value>:
   1125b:	48 89 d0             	mov    %rdx,%rax
   1125e:	49 89 f0             	mov    %rsi,%r8
   11261:	31 d2                	xor    %edx,%edx
   11263:	48 85 c0             	test   %rax,%rax
   11266:	74 0a                	je     11272 <numeric_setting_value+0x17>
   11268:	80 3e 00             	cmpb   $0x0,(%rsi)
   1126b:	79 05                	jns    11272 <numeric_setting_value+0x17>
   1126d:	f7 df                	neg    %edi
   1126f:	48 19 d2             	sbb    %rdx,%rdx
   11272:	48 89 11             	mov    %rdx,(%rcx)
   11275:	89 d6                	mov    %edx,%esi
   11277:	45 31 c9             	xor    %r9d,%r9d
   1127a:	44 89 ca             	mov    %r9d,%edx
   1127d:	48 39 c2             	cmp    %rax,%rdx
   11280:	73 2b                	jae    112ad <numeric_setting_value+0x52>
   11282:	48 8b 39             	mov    (%rcx),%rdi
   11285:	45 0f b6 1c 10       	movzbl (%r8,%rdx,1),%r11d
   1128a:	48 83 c2 08          	add    $0x8,%rdx
   1128e:	48 c1 e7 08          	shl    $0x8,%rdi
   11292:	4c 09 df             	or     %r11,%rdi
   11295:	48 89 39             	mov    %rdi,(%rcx)
   11298:	48 39 c2             	cmp    %rax,%rdx
   1129b:	73 0b                	jae    112a8 <numeric_setting_value+0x4d>
   1129d:	44 38 de             	cmp    %r11b,%sil
   112a0:	74 06                	je     112a8 <numeric_setting_value+0x4d>
   112a2:	b8 7b df f3 b9       	mov    $0xb9f3df7b,%eax
   112a7:	c3                   	ret    
   112a8:	41 ff c1             	inc    %r9d
   112ab:	eb cd                	jmp    1127a <numeric_setting_value+0x1f>
   112ad:	c3                   	ret    

00000000000112ae <parse_ipv6_setting>:
   112ae:	f3 0f 1e fa          	endbr64 
   112b2:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   112b7:	c3                   	ret    

00000000000112b8 <format_ipv6_setting>:
   112b8:	f3 0f 1e fa          	endbr64 
   112bc:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   112c1:	c3                   	ret    

00000000000112c2 <numerate_int_setting>:
   112c2:	f3 0f 1e fa          	endbr64 
   112c6:	48 8b 3f             	mov    (%rdi),%rdi
   112c9:	48 8d 05 50 12 01 00 	lea    0x11250(%rip),%rax        # 22520 <setting_type_int_name>
   112d0:	48 29 c7             	sub    %rax,%rdi
   112d3:	83 e7 01             	and    $0x1,%edi
   112d6:	e8 80 ff ff ff       	call   1125b <numeric_setting_value>
   112db:	31 d2                	xor    %edx,%edx
   112dd:	85 c0                	test   %eax,%eax
   112df:	0f 4f c2             	cmovg  %edx,%eax
   112e2:	c3                   	ret    

00000000000112e3 <builtin_applies>:
   112e3:	f3 0f 1e fa          	endbr64 
   112e7:	48 8d 05 c7 8c 01 00 	lea    0x18cc7(%rip),%rax        # 29fb5 <builtin_scope>
   112ee:	48 39 46 20          	cmp    %rax,0x20(%rsi)
   112f2:	0f 94 c0             	sete   %al
   112f5:	0f b6 c0             	movzbl %al,%eax
   112f8:	c3                   	ret    

00000000000112f9 <format_string_setting>:
   112f9:	f3 0f 1e fa          	endbr64 
   112fd:	53                   	push   %rbx
   112fe:	49 89 c9             	mov    %rcx,%r9
   11301:	48 89 cf             	mov    %rcx,%rdi
   11304:	48 89 d3             	mov    %rdx,%rbx
   11307:	4c 89 c1             	mov    %r8,%rcx
   1130a:	31 c0                	xor    %eax,%eax
   1130c:	f3 aa                	rep stos %al,%es:(%rdi)
   1130e:	49 39 d0             	cmp    %rdx,%r8
   11311:	4c 89 c2             	mov    %r8,%rdx
   11314:	4c 89 cf             	mov    %r9,%rdi
   11317:	48 0f 47 d3          	cmova  %rbx,%rdx
   1131b:	e8 ed 5f 00 00       	call   1730d <__memcpy>
   11320:	89 d8                	mov    %ebx,%eax
   11322:	5b                   	pop    %rbx
   11323:	c3                   	ret    

0000000000011324 <errno_fetch>:
   11324:	f3 0f 1e fa          	endbr64 
   11328:	48 83 ec 18          	sub    $0x18,%rsp
   1132c:	48 8b 05 3d 8c 01 00 	mov    0x18c3d(%rip),%rax        # 29f70 <__stack_chk_guard>
   11333:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11338:	8b 05 86 8c 01 00    	mov    0x18c86(%rip),%eax        # 29fc4 <errno>
   1133e:	0f c8                	bswap  %eax
   11340:	89 44 24 04          	mov    %eax,0x4(%rsp)
   11344:	b8 04 00 00 00       	mov    $0x4,%eax
   11349:	48 39 c6             	cmp    %rax,%rsi
   1134c:	48 0f 46 c6          	cmovbe %rsi,%rax
   11350:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   11355:	48 89 c2             	mov    %rax,%rdx
   11358:	e8 b0 5f 00 00       	call   1730d <__memcpy>
   1135d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11362:	48 2b 05 07 8c 01 00 	sub    0x18c07(%rip),%rax        # 29f70 <__stack_chk_guard>
   11369:	74 05                	je     11370 <errno_fetch+0x4c>
   1136b:	e8 f0 16 ff ff       	call   2a60 <__stack_chk_fail>
   11370:	b8 04 00 00 00       	mov    $0x4,%eax
   11375:	48 83 c4 18          	add    $0x18,%rsp
   11379:	c3                   	ret    

000000000001137a <parse_string_setting>:
   1137a:	f3 0f 1e fa          	endbr64 
   1137e:	41 55                	push   %r13
   11380:	48 89 f7             	mov    %rsi,%rdi
   11383:	49 89 d5             	mov    %rdx,%r13
   11386:	55                   	push   %rbp
   11387:	48 89 cd             	mov    %rcx,%rbp
   1138a:	53                   	push   %rbx
   1138b:	48 83 ec 10          	sub    $0x10,%rsp
   1138f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   11394:	e8 a1 25 00 00       	call   1393a <strlen>
   11399:	48 89 ea             	mov    %rbp,%rdx
   1139c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   113a1:	4c 89 ef             	mov    %r13,%rdi
   113a4:	48 39 e8             	cmp    %rbp,%rax
   113a7:	48 89 c3             	mov    %rax,%rbx
   113aa:	48 0f 46 d0          	cmovbe %rax,%rdx
   113ae:	e8 5a 5f 00 00       	call   1730d <__memcpy>
   113b3:	48 83 c4 10          	add    $0x10,%rsp
   113b7:	89 d8                	mov    %ebx,%eax
   113b9:	5b                   	pop    %rbx
   113ba:	5d                   	pop    %rbp
   113bb:	41 5d                	pop    %r13
   113bd:	c3                   	ret    

00000000000113be <format_uristring_setting>:
   113be:	f3 0f 1e fa          	endbr64 
   113c2:	50                   	push   %rax
   113c3:	31 ff                	xor    %edi,%edi
   113c5:	e8 94 4f 00 00       	call   1635e <uri_encode>
   113ca:	5a                   	pop    %rdx
   113cb:	c3                   	ret    

00000000000113cc <parse_uristring_setting>:
   113cc:	f3 0f 1e fa          	endbr64 
   113d0:	50                   	push   %rax
   113d1:	48 89 f7             	mov    %rsi,%rdi
   113d4:	48 89 d6             	mov    %rdx,%rsi
   113d7:	48 89 ca             	mov    %rcx,%rdx
   113da:	e8 ba 4e 00 00       	call   16299 <uri_decode>
   113df:	5a                   	pop    %rdx
   113e0:	c3                   	ret    

00000000000113e1 <format_int_setting>:
   113e1:	f3 0f 1e fa          	endbr64 
   113e5:	41 54                	push   %r12
   113e7:	4d 89 c4             	mov    %r8,%r12
   113ea:	55                   	push   %rbp
   113eb:	48 89 cd             	mov    %rcx,%rbp
   113ee:	48 83 ec 18          	sub    $0x18,%rsp
   113f2:	48 8b 05 77 8b 01 00 	mov    0x18b77(%rip),%rax        # 29f70 <__stack_chk_guard>
   113f9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   113fe:	31 c0                	xor    %eax,%eax
   11400:	48 89 e1             	mov    %rsp,%rcx
   11403:	ff 57 20             	call   *0x20(%rdi)
   11406:	85 c0                	test   %eax,%eax
   11408:	78 18                	js     11422 <format_int_setting+0x41>
   1140a:	48 8b 0c 24          	mov    (%rsp),%rcx
   1140e:	48 8d 15 5d 23 01 00 	lea    0x1235d(%rip),%rdx        # 23772 <.LC0>
   11415:	4c 89 e6             	mov    %r12,%rsi
   11418:	31 c0                	xor    %eax,%eax
   1141a:	48 89 ef             	mov    %rbp,%rdi
   1141d:	e8 5f 5c 00 00       	call   17081 <snprintf>
   11422:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11427:	48 2b 15 42 8b 01 00 	sub    0x18b42(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1142e:	74 05                	je     11435 <format_int_setting+0x54>
   11430:	e8 2b 16 ff ff       	call   2a60 <__stack_chk_fail>
   11435:	48 83 c4 18          	add    $0x18,%rsp
   11439:	5d                   	pop    %rbp
   1143a:	41 5c                	pop    %r12
   1143c:	c3                   	ret    

000000000001143d <format_uint_setting>:
   1143d:	f3 0f 1e fa          	endbr64 
   11441:	41 54                	push   %r12
   11443:	4d 89 c4             	mov    %r8,%r12
   11446:	55                   	push   %rbp
   11447:	48 89 cd             	mov    %rcx,%rbp
   1144a:	48 83 ec 18          	sub    $0x18,%rsp
   1144e:	48 8b 05 1b 8b 01 00 	mov    0x18b1b(%rip),%rax        # 29f70 <__stack_chk_guard>
   11455:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1145a:	31 c0                	xor    %eax,%eax
   1145c:	48 89 e1             	mov    %rsp,%rcx
   1145f:	ff 57 20             	call   *0x20(%rdi)
   11462:	85 c0                	test   %eax,%eax
   11464:	78 18                	js     1147e <format_uint_setting+0x41>
   11466:	48 8b 0c 24          	mov    (%rsp),%rcx
   1146a:	48 8d 15 05 23 01 00 	lea    0x12305(%rip),%rdx        # 23776 <.LC1>
   11471:	4c 89 e6             	mov    %r12,%rsi
   11474:	31 c0                	xor    %eax,%eax
   11476:	48 89 ef             	mov    %rbp,%rdi
   11479:	e8 03 5c 00 00       	call   17081 <snprintf>
   1147e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11483:	48 2b 15 e6 8a 01 00 	sub    0x18ae6(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1148a:	74 05                	je     11491 <format_uint_setting+0x54>
   1148c:	e8 cf 15 ff ff       	call   2a60 <__stack_chk_fail>
   11491:	48 83 c4 18          	add    $0x18,%rsp
   11495:	5d                   	pop    %rbp
   11496:	41 5c                	pop    %r12
   11498:	c3                   	ret    

0000000000011499 <format_busdevfn_setting>:
   11499:	f3 0f 1e fa          	endbr64 
   1149d:	55                   	push   %rbp
   1149e:	49 89 ca             	mov    %rcx,%r10
   114a1:	31 ff                	xor    %edi,%edi
   114a3:	4c 89 c5             	mov    %r8,%rbp
   114a6:	48 83 ec 10          	sub    $0x10,%rsp
   114aa:	48 8b 05 bf 8a 01 00 	mov    0x18abf(%rip),%rax        # 29f70 <__stack_chk_guard>
   114b1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   114b6:	31 c0                	xor    %eax,%eax
   114b8:	48 89 e1             	mov    %rsp,%rcx
   114bb:	e8 9b fd ff ff       	call   1125b <numeric_setting_value>
   114c0:	85 c0                	test   %eax,%eax
   114c2:	78 36                	js     114fa <format_busdevfn_setting+0x61>
   114c4:	48 8b 04 24          	mov    (%rsp),%rax
   114c8:	56                   	push   %rsi
   114c9:	48 8d 15 a4 21 01 00 	lea    0x121a4(%rip),%rdx        # 23674 <.LC0>
   114d0:	48 89 ee             	mov    %rbp,%rsi
   114d3:	0f b6 fc             	movzbl %ah,%edi
   114d6:	49 89 c1             	mov    %rax,%r9
   114d9:	89 c1                	mov    %eax,%ecx
   114db:	83 e0 07             	and    $0x7,%eax
   114de:	50                   	push   %rax
   114df:	49 c1 e9 03          	shr    $0x3,%r9
   114e3:	41 89 f8             	mov    %edi,%r8d
   114e6:	c1 e9 10             	shr    $0x10,%ecx
   114e9:	4c 89 d7             	mov    %r10,%rdi
   114ec:	41 83 e1 1f          	and    $0x1f,%r9d
   114f0:	31 c0                	xor    %eax,%eax
   114f2:	e8 8a 5b 00 00       	call   17081 <snprintf>
   114f7:	5f                   	pop    %rdi
   114f8:	41 58                	pop    %r8
   114fa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   114ff:	48 2b 15 6a 8a 01 00 	sub    0x18a6a(%rip),%rdx        # 29f70 <__stack_chk_guard>
   11506:	74 05                	je     1150d <format_busdevfn_setting+0x74>
   11508:	e8 53 15 ff ff       	call   2a60 <__stack_chk_fail>
   1150d:	48 83 c4 10          	add    $0x10,%rsp
   11511:	5d                   	pop    %rbp
   11512:	c3                   	ret    

0000000000011513 <format_hex_colon_setting>:
   11513:	f3 0f 1e fa          	endbr64 
   11517:	50                   	push   %rax
   11518:	bf 3a 00 00 00       	mov    $0x3a,%edi
   1151d:	e8 02 74 00 00       	call   18924 <hex_encode>
   11522:	5a                   	pop    %rdx
   11523:	c3                   	ret    

0000000000011524 <format_hex_hyphen_setting>:
   11524:	f3 0f 1e fa          	endbr64 
   11528:	50                   	push   %rax
   11529:	bf 2d 00 00 00       	mov    $0x2d,%edi
   1152e:	e8 f1 73 00 00       	call   18924 <hex_encode>
   11533:	5a                   	pop    %rdx
   11534:	c3                   	ret    

0000000000011535 <format_hex_raw_setting>:
   11535:	f3 0f 1e fa          	endbr64 
   11539:	50                   	push   %rax
   1153a:	31 ff                	xor    %edi,%edi
   1153c:	e8 e3 73 00 00       	call   18924 <hex_encode>
   11541:	5a                   	pop    %rdx
   11542:	c3                   	ret    

0000000000011543 <parse_hex_setting>:
   11543:	f3 0f 1e fa          	endbr64 
   11547:	bf 3a 00 00 00       	mov    $0x3a,%edi
   1154c:	e9 83 74 00 00       	jmp    189d4 <hex_decode>

0000000000011551 <parse_hex_hyphen_setting>:
   11551:	f3 0f 1e fa          	endbr64 
   11555:	bf 2d 00 00 00       	mov    $0x2d,%edi
   1155a:	e9 75 74 00 00       	jmp    189d4 <hex_decode>

000000000001155f <parse_hex_raw_setting>:
   1155f:	f3 0f 1e fa          	endbr64 
   11563:	31 ff                	xor    %edi,%edi
   11565:	e9 6a 74 00 00       	jmp    189d4 <hex_decode>

000000000001156a <format_base64_setting>:
   1156a:	f3 0f 1e fa          	endbr64 
   1156e:	50                   	push   %rax
   1156f:	48 89 f7             	mov    %rsi,%rdi
   11572:	48 89 d6             	mov    %rdx,%rsi
   11575:	48 89 ca             	mov    %rcx,%rdx
   11578:	4c 89 c1             	mov    %r8,%rcx
   1157b:	e8 e8 74 00 00       	call   18a68 <base64_encode>
   11580:	5a                   	pop    %rdx
   11581:	c3                   	ret    

0000000000011582 <parse_base64_setting>:
   11582:	f3 0f 1e fa          	endbr64 
   11586:	48 89 f7             	mov    %rsi,%rdi
   11589:	48 89 d6             	mov    %rdx,%rsi
   1158c:	48 89 ca             	mov    %rcx,%rdx
   1158f:	e9 7e 75 00 00       	jmp    18b12 <base64_decode>

0000000000011594 <fetch_string_setting_copy_alloc>:
   11594:	f3 0f 1e fa          	endbr64 
   11598:	48 ff c7             	inc    %rdi
   1159b:	e9 ba b0 ff ff       	jmp    c65a <zalloc>

00000000000115a0 <generic_settings_clear>:
   115a0:	f3 0f 1e fa          	endbr64 
   115a4:	55                   	push   %rbp
   115a5:	53                   	push   %rbx
   115a6:	48 8d 5f 50          	lea    0x50(%rdi),%rbx
   115aa:	52                   	push   %rdx
   115ab:	4c 8b 47 50          	mov    0x50(%rdi),%r8
   115af:	49 8b 28             	mov    (%r8),%rbp
   115b2:	49 39 d8             	cmp    %rbx,%r8
   115b5:	74 1f                	je     115d6 <generic_settings_clear+0x36>
   115b7:	49 8b 10             	mov    (%r8),%rdx
   115ba:	49 8b 40 08          	mov    0x8(%r8),%rax
   115be:	4c 89 c7             	mov    %r8,%rdi
   115c1:	48 89 42 08          	mov    %rax,0x8(%rdx)
   115c5:	48 89 10             	mov    %rdx,(%rax)
   115c8:	e8 82 b0 ff ff       	call   c64f <free>
   115cd:	49 89 e8             	mov    %rbp,%r8
   115d0:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
   115d4:	eb dc                	jmp    115b2 <generic_settings_clear+0x12>
   115d6:	58                   	pop    %rax
   115d7:	5b                   	pop    %rbx
   115d8:	5d                   	pop    %rbp
   115d9:	c3                   	ret    

00000000000115da <autovivified_settings_free>:
   115da:	f3 0f 1e fa          	endbr64 
   115de:	55                   	push   %rbp
   115df:	48 89 fd             	mov    %rdi,%rbp
   115e2:	48 8d 7f 10          	lea    0x10(%rdi),%rdi
   115e6:	e8 b5 ff ff ff       	call   115a0 <generic_settings_clear>
   115eb:	48 89 ef             	mov    %rbp,%rdi
   115ee:	5d                   	pop    %rbp
   115ef:	e9 5b b0 ff ff       	jmp    c64f <free>

00000000000115f4 <parse_settings_name>:
   115f4:	41 56                	push   %r14
   115f6:	41 55                	push   %r13
   115f8:	49 89 f5             	mov    %rsi,%r13
   115fb:	41 54                	push   %r12
   115fd:	55                   	push   %rbp
   115fe:	48 8d 2d 5b 5a 01 00 	lea    0x15a5b(%rip),%rbp        # 27060 <generic_settings_root>
   11605:	53                   	push   %rbx
   11606:	e8 42 24 00 00       	call   13a4d <strdup>
   1160b:	49 89 c4             	mov    %rax,%r12
   1160e:	49 89 c6             	mov    %rax,%r14
   11611:	48 85 c0             	test   %rax,%rax
   11614:	74 41                	je     11657 <parse_settings_name+0x63>
   11616:	be 2e 00 00 00       	mov    $0x2e,%esi
   1161b:	4c 89 f7             	mov    %r14,%rdi
   1161e:	e8 24 23 00 00       	call   13947 <strchr>
   11623:	48 89 c3             	mov    %rax,%rbx
   11626:	48 85 c0             	test   %rax,%rax
   11629:	74 06                	je     11631 <parse_settings_name+0x3d>
   1162b:	c6 00 00             	movb   $0x0,(%rax)
   1162e:	48 ff c3             	inc    %rbx
   11631:	48 89 ef             	mov    %rbp,%rdi
   11634:	4c 89 f6             	mov    %r14,%rsi
   11637:	41 ff d5             	call   *%r13
   1163a:	48 89 c5             	mov    %rax,%rbp
   1163d:	48 85 c0             	test   %rax,%rax
   11640:	74 0a                	je     1164c <parse_settings_name+0x58>
   11642:	48 85 db             	test   %rbx,%rbx
   11645:	74 05                	je     1164c <parse_settings_name+0x58>
   11647:	49 89 de             	mov    %rbx,%r14
   1164a:	eb ca                	jmp    11616 <parse_settings_name+0x22>
   1164c:	4c 89 e7             	mov    %r12,%rdi
   1164f:	49 89 ec             	mov    %rbp,%r12
   11652:	e8 f8 af ff ff       	call   c64f <free>
   11657:	5b                   	pop    %rbx
   11658:	4c 89 e0             	mov    %r12,%rax
   1165b:	5d                   	pop    %rbp
   1165c:	41 5c                	pop    %r12
   1165e:	41 5d                	pop    %r13
   11660:	41 5e                	pop    %r14
   11662:	c3                   	ret    

0000000000011663 <buildarch_fetch>:
   11663:	f3 0f 1e fa          	endbr64 
   11667:	50                   	push   %rax
   11668:	48 89 f2             	mov    %rsi,%rdx
   1166b:	48 8d 35 a2 0e 01 00 	lea    0x10ea2(%rip),%rsi        # 22514 <buildarch.1>
   11672:	e8 5a 23 00 00       	call   139d1 <strncpy>
   11677:	b8 06 00 00 00       	mov    $0x6,%eax
   1167c:	5a                   	pop    %rdx
   1167d:	c3                   	ret    

000000000001167e <platform_fetch>:
   1167e:	f3 0f 1e fa          	endbr64 
   11682:	50                   	push   %rax
   11683:	48 89 f2             	mov    %rsi,%rdx
   11686:	48 8d 35 83 0e 01 00 	lea    0x10e83(%rip),%rsi        # 22510 <platform.0>
   1168d:	e8 3f 23 00 00       	call   139d1 <strncpy>
   11692:	b8 03 00 00 00       	mov    $0x3,%eax
   11697:	5a                   	pop    %rdx
   11698:	c3                   	ret    

0000000000011699 <version_fetch>:
   11699:	f3 0f 1e fa          	endbr64 
   1169d:	55                   	push   %rbp
   1169e:	48 8d 2d 7b 0c 01 00 	lea    0x10c7b(%rip),%rbp        # 22320 <product_version>
   116a5:	48 89 f2             	mov    %rsi,%rdx
   116a8:	48 89 ee             	mov    %rbp,%rsi
   116ab:	e8 21 23 00 00       	call   139d1 <strncpy>
   116b0:	48 89 ef             	mov    %rbp,%rdi
   116b3:	e8 82 22 00 00       	call   1393a <strlen>
   116b8:	5d                   	pop    %rbp
   116b9:	c3                   	ret    

00000000000116ba <unixtime_fetch>:
   116ba:	f3 0f 1e fa          	endbr64 
   116be:	53                   	push   %rbx
   116bf:	48 89 f3             	mov    %rsi,%rbx
   116c2:	48 83 ec 20          	sub    $0x20,%rsp
   116c6:	48 8b 05 a3 88 01 00 	mov    0x188a3(%rip),%rax        # 29f70 <__stack_chk_guard>
   116cd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   116d2:	31 c0                	xor    %eax,%eax
   116d4:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   116d9:	e8 e9 be 00 00       	call   1d5c7 <time_now>
   116de:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   116e3:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   116e8:	48 03 05 c9 88 01 00 	add    0x188c9(%rip),%rax        # 29fb8 <time_offset>
   116ef:	0f c8                	bswap  %eax
   116f1:	89 44 24 14          	mov    %eax,0x14(%rsp)
   116f5:	b8 04 00 00 00       	mov    $0x4,%eax
   116fa:	48 39 c3             	cmp    %rax,%rbx
   116fd:	48 0f 46 c3          	cmovbe %rbx,%rax
   11701:	48 89 c2             	mov    %rax,%rdx
   11704:	e8 04 5c 00 00       	call   1730d <__memcpy>
   11709:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1170e:	48 2b 05 5b 88 01 00 	sub    0x1885b(%rip),%rax        # 29f70 <__stack_chk_guard>
   11715:	74 05                	je     1171c <unixtime_fetch+0x62>
   11717:	e8 44 13 ff ff       	call   2a60 <__stack_chk_fail>
   1171c:	48 83 c4 20          	add    $0x20,%rsp
   11720:	b8 04 00 00 00       	mov    $0x4,%eax
   11725:	5b                   	pop    %rbx
   11726:	c3                   	ret    

0000000000011727 <parse_int_setting>:
   11727:	f3 0f 1e fa          	endbr64 
   1172b:	41 54                	push   %r12
   1172d:	49 89 d4             	mov    %rdx,%r12
   11730:	31 d2                	xor    %edx,%edx
   11732:	53                   	push   %rbx
   11733:	48 89 fb             	mov    %rdi,%rbx
   11736:	48 89 f7             	mov    %rsi,%rdi
   11739:	48 83 ec 28          	sub    $0x28,%rsp
   1173d:	48 8b 05 2c 88 01 00 	mov    0x1882c(%rip),%rax        # 29f70 <__stack_chk_guard>
   11744:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11749:	31 c0                	xor    %eax,%eax
   1174b:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   11750:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   11755:	e8 21 23 00 00       	call   13a7b <strtoul>
   1175a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1175f:	48 89 c6             	mov    %rax,%rsi
   11762:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   11767:	80 38 00             	cmpb   $0x0,(%rax)
   1176a:	74 07                	je     11773 <parse_int_setting+0x4c>
   1176c:	b8 7e df f3 e3       	mov    $0xe3f3df7e,%eax
   11771:	eb 09                	jmp    1177c <parse_int_setting+0x55>
   11773:	4c 89 e2             	mov    %r12,%rdx
   11776:	48 89 df             	mov    %rbx,%rdi
   11779:	ff 53 18             	call   *0x18(%rbx)
   1177c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   11781:	48 2b 15 e8 87 01 00 	sub    0x187e8(%rip),%rdx        # 29f70 <__stack_chk_guard>
   11788:	74 05                	je     1178f <parse_int_setting+0x68>
   1178a:	e8 d1 12 ff ff       	call   2a60 <__stack_chk_fail>
   1178f:	48 83 c4 28          	add    $0x28,%rsp
   11793:	5b                   	pop    %rbx
   11794:	41 5c                	pop    %r12
   11796:	c3                   	ret    

0000000000011797 <format_uuid_setting>:
   11797:	f3 0f 1e fa          	endbr64 
   1179b:	48 83 fa 10          	cmp    $0x10,%rdx
   1179f:	75 2e                	jne    117cf <format_uuid_setting+0x38>
   117a1:	41 54                	push   %r12
   117a3:	48 89 f7             	mov    %rsi,%rdi
   117a6:	4d 89 c4             	mov    %r8,%r12
   117a9:	55                   	push   %rbp
   117aa:	48 89 cd             	mov    %rcx,%rbp
   117ad:	50                   	push   %rax
   117ae:	e8 a2 53 00 00       	call   16b55 <uuid_ntoa>
   117b3:	41 58                	pop    %r8
   117b5:	4c 89 e6             	mov    %r12,%rsi
   117b8:	48 89 ef             	mov    %rbp,%rdi
   117bb:	48 89 c1             	mov    %rax,%rcx
   117be:	5d                   	pop    %rbp
   117bf:	48 8d 15 5b 1e 01 00 	lea    0x11e5b(%rip),%rdx        # 23621 <.LC0>
   117c6:	31 c0                	xor    %eax,%eax
   117c8:	41 5c                	pop    %r12
   117ca:	e9 b2 58 00 00       	jmp    17081 <snprintf>
   117cf:	b8 7b df f3 b9       	mov    $0xb9f3df7b,%eax
   117d4:	c3                   	ret    

00000000000117d5 <denumerate_int_setting>:
   117d5:	f3 0f 1e fa          	endbr64 
   117d9:	41 54                	push   %r12
   117db:	49 89 f9             	mov    %rdi,%r9
   117de:	49 89 c8             	mov    %rcx,%r8
   117e1:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   117e7:	0f ce                	bswap  %esi
   117e9:	48 89 d7             	mov    %rdx,%rdi
   117ec:	4c 89 c2             	mov    %r8,%rdx
   117ef:	48 83 ec 10          	sub    $0x10,%rsp
   117f3:	49 8b 09             	mov    (%r9),%rcx
   117f6:	48 8b 05 73 87 01 00 	mov    0x18773(%rip),%rax        # 29f70 <__stack_chk_guard>
   117fd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11802:	31 c0                	xor    %eax,%eax
   11804:	48 8d 05 15 0d 01 00 	lea    0x10d15(%rip),%rax        # 22520 <setting_type_int_name>
   1180b:	89 74 24 04          	mov    %esi,0x4(%rsp)
   1180f:	48 29 c1             	sub    %rax,%rcx
   11812:	b8 04 00 00 00       	mov    $0x4,%eax
   11817:	48 c1 e9 03          	shr    $0x3,%rcx
   1181b:	41 d3 e4             	shl    %cl,%r12d
   1181e:	44 89 e1             	mov    %r12d,%ecx
   11821:	4c 39 c1             	cmp    %r8,%rcx
   11824:	48 0f 46 d1          	cmovbe %rcx,%rdx
   11828:	48 29 c8             	sub    %rcx,%rax
   1182b:	48 8d 74 04 04       	lea    0x4(%rsp,%rax,1),%rsi
   11830:	e8 d8 5a 00 00       	call   1730d <__memcpy>
   11835:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1183a:	48 2b 05 2f 87 01 00 	sub    0x1872f(%rip),%rax        # 29f70 <__stack_chk_guard>
   11841:	74 05                	je     11848 <denumerate_int_setting+0x73>
   11843:	e8 18 12 ff ff       	call   2a60 <__stack_chk_fail>
   11848:	48 83 c4 10          	add    $0x10,%rsp
   1184c:	44 89 e0             	mov    %r12d,%eax
   1184f:	41 5c                	pop    %r12
   11851:	c3                   	ret    

0000000000011852 <find_settings>:
   11852:	f3 0f 1e fa          	endbr64 
   11856:	48 8d 35 7f 00 00 00 	lea    0x7f(%rip),%rsi        # 118dc <find_child_settings>
   1185d:	e9 92 fd ff ff       	jmp    115f4 <parse_settings_name>

0000000000011862 <unregister_settings>:
   11862:	f3 0f 1e fa          	endbr64 
   11866:	55                   	push   %rbp
   11867:	48 8d 6f 28          	lea    0x28(%rdi),%rbp
   1186b:	53                   	push   %rbx
   1186c:	48 89 fb             	mov    %rdi,%rbx
   1186f:	52                   	push   %rdx
   11870:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   11874:	48 39 ef             	cmp    %rbp,%rdi
   11877:	74 0b                	je     11884 <unregister_settings+0x22>
   11879:	48 83 ef 18          	sub    $0x18,%rdi
   1187d:	e8 e0 ff ff ff       	call   11862 <unregister_settings>
   11882:	eb ec                	jmp    11870 <unregister_settings+0xe>
   11884:	48 8b 43 10          	mov    0x10(%rbx),%rax
   11888:	48 8b 38             	mov    (%rax),%rdi
   1188b:	e8 ae e5 ff ff       	call   fe3e <ref_decrement>
   11890:	48 8b 43 20          	mov    0x20(%rbx),%rax
   11894:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   11898:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1189f:	00 
   118a0:	48 8b 3b             	mov    (%rbx),%rdi
   118a3:	48 89 42 08          	mov    %rax,0x8(%rdx)
   118a7:	48 89 10             	mov    %rdx,(%rax)
   118aa:	e8 8f e5 ff ff       	call   fe3e <ref_decrement>
   118af:	58                   	pop    %rax
   118b0:	5b                   	pop    %rbx
   118b1:	5d                   	pop    %rbp
   118b2:	e9 7c f9 ff ff       	jmp    11233 <apply_settings>

00000000000118b7 <settings_target>:
   118b7:	f3 0f 1e fa          	endbr64 
   118bb:	48 89 f8             	mov    %rdi,%rax
   118be:	48 85 ff             	test   %rdi,%rdi
   118c1:	75 07                	jne    118ca <settings_target+0x13>
   118c3:	48 8d 05 96 57 01 00 	lea    0x15796(%rip),%rax        # 27060 <generic_settings_root>
   118ca:	48 8b 50 38          	mov    0x38(%rax),%rdx
   118ce:	48 8b 12             	mov    (%rdx),%rdx
   118d1:	48 85 d2             	test   %rdx,%rdx
   118d4:	74 05                	je     118db <settings_target+0x24>
   118d6:	48 89 c7             	mov    %rax,%rdi
   118d9:	ff e2                	jmp    *%rdx
   118db:	c3                   	ret    

00000000000118dc <find_child_settings>:
   118dc:	f3 0f 1e fa          	endbr64 
   118e0:	41 54                	push   %r12
   118e2:	49 89 f4             	mov    %rsi,%r12
   118e5:	55                   	push   %rbp
   118e6:	53                   	push   %rbx
   118e7:	e8 cb ff ff ff       	call   118b7 <settings_target>
   118ec:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   118f1:	74 3d                	je     11930 <find_child_settings+0x54>
   118f3:	48 8b 50 28          	mov    0x28(%rax),%rdx
   118f7:	48 8d 58 28          	lea    0x28(%rax),%rbx
   118fb:	48 8d 6a e8          	lea    -0x18(%rdx),%rbp
   118ff:	48 8d 45 18          	lea    0x18(%rbp),%rax
   11903:	48 39 d8             	cmp    %rbx,%rax
   11906:	74 26                	je     1192e <find_child_settings+0x52>
   11908:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   1190c:	4c 89 e6             	mov    %r12,%rsi
   1190f:	e8 cc 1f 00 00       	call   138e0 <strcmp>
   11914:	85 c0                	test   %eax,%eax
   11916:	75 0c                	jne    11924 <find_child_settings+0x48>
   11918:	5b                   	pop    %rbx
   11919:	48 89 ef             	mov    %rbp,%rdi
   1191c:	5d                   	pop    %rbp
   1191d:	41 5c                	pop    %r12
   1191f:	e9 93 ff ff ff       	jmp    118b7 <settings_target>
   11924:	48 8b 6d 18          	mov    0x18(%rbp),%rbp
   11928:	48 83 ed 18          	sub    $0x18,%rbp
   1192c:	eb d1                	jmp    118ff <find_child_settings+0x23>
   1192e:	31 c0                	xor    %eax,%eax
   11930:	5b                   	pop    %rbx
   11931:	5d                   	pop    %rbp
   11932:	41 5c                	pop    %r12
   11934:	c3                   	ret    

0000000000011935 <settings_name>:
   11935:	f3 0f 1e fa          	endbr64 
   11939:	41 54                	push   %r12
   1193b:	4c 8d 25 7e 83 01 00 	lea    0x1837e(%rip),%r12        # 29cc0 <buf.2>
   11942:	53                   	push   %rbx
   11943:	48 83 ec 28          	sub    $0x28,%rsp
   11947:	48 8b 05 22 86 01 00 	mov    0x18622(%rip),%rax        # 29f70 <__stack_chk_guard>
   1194e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   11953:	31 c0                	xor    %eax,%eax
   11955:	e8 5d ff ff ff       	call   118b7 <settings_target>
   1195a:	c6 05 5f 83 01 00 00 	movb   $0x0,0x1835f(%rip)        # 29cc0 <buf.2>
   11961:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   11966:	48 89 c3             	mov    %rax,%rbx
   11969:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   1196e:	74 36                	je     119a6 <settings_name+0x71>
   11970:	4c 8d 44 24 07       	lea    0x7(%rsp),%r8
   11975:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1197a:	4c 89 e6             	mov    %r12,%rsi
   1197d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1197e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1197f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   11980:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   11981:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   11985:	48 8d 15 3a 0e 01 00 	lea    0x10e3a(%rip),%rdx        # 227c6 <.LC4>
   1198c:	4c 89 e7             	mov    %r12,%rdi
   1198f:	31 c0                	xor    %eax,%eax
   11991:	be 10 00 00 00       	mov    $0x10,%esi
   11996:	e8 e6 56 00 00       	call   17081 <snprintf>
   1199b:	c6 44 24 07 2e       	movb   $0x2e,0x7(%rsp)
   119a0:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   119a4:	eb c3                	jmp    11969 <settings_name+0x34>
   119a6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   119ab:	48 2b 05 be 85 01 00 	sub    0x185be(%rip),%rax        # 29f70 <__stack_chk_guard>
   119b2:	74 05                	je     119b9 <settings_name+0x84>
   119b4:	e8 a7 10 ff ff       	call   2a60 <__stack_chk_fail>
   119b9:	48 83 c4 28          	add    $0x28,%rsp
   119bd:	4c 89 e0             	mov    %r12,%rax
   119c0:	5b                   	pop    %rbx
   119c1:	41 5c                	pop    %r12
   119c3:	c3                   	ret    

00000000000119c4 <setting_applies>:
   119c4:	f3 0f 1e fa          	endbr64 
   119c8:	48 83 ec 18          	sub    $0x18,%rsp
   119cc:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   119d1:	e8 e1 fe ff ff       	call   118b7 <settings_target>
   119d6:	48 89 c7             	mov    %rax,%rdi
   119d9:	48 8b 40 38          	mov    0x38(%rax),%rax
   119dd:	48 8b 40 08          	mov    0x8(%rax),%rax
   119e1:	48 85 c0             	test   %rax,%rax
   119e4:	74 0b                	je     119f1 <setting_applies+0x2d>
   119e6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   119eb:	48 83 c4 18          	add    $0x18,%rsp
   119ef:	ff e0                	jmp    *%rax
   119f1:	b8 01 00 00 00       	mov    $0x1,%eax
   119f6:	48 83 c4 18          	add    $0x18,%rsp
   119fa:	c3                   	ret    

00000000000119fb <clear_settings>:
   119fb:	f3 0f 1e fa          	endbr64 
   119ff:	51                   	push   %rcx
   11a00:	e8 b2 fe ff ff       	call   118b7 <settings_target>
   11a05:	48 89 c7             	mov    %rax,%rdi
   11a08:	48 8b 40 38          	mov    0x38(%rax),%rax
   11a0c:	48 8b 40 20          	mov    0x20(%rax),%rax
   11a10:	48 85 c0             	test   %rax,%rax
   11a13:	74 03                	je     11a18 <clear_settings+0x1d>
   11a15:	5a                   	pop    %rdx
   11a16:	ff e0                	jmp    *%rax
   11a18:	58                   	pop    %rax
   11a19:	c3                   	ret    

0000000000011a1a <setting_cmp>:
   11a1a:	f3 0f 1e fa          	endbr64 
   11a1e:	48 8b 47 18          	mov    0x18(%rdi),%rax
   11a22:	48 85 c0             	test   %rax,%rax
   11a25:	74 10                	je     11a37 <setting_cmp+0x1d>
   11a27:	48 3b 46 18          	cmp    0x18(%rsi),%rax
   11a2b:	75 0a                	jne    11a37 <setting_cmp+0x1d>
   11a2d:	48 8b 46 20          	mov    0x20(%rsi),%rax
   11a31:	48 39 47 20          	cmp    %rax,0x20(%rdi)
   11a35:	74 1f                	je     11a56 <setting_cmp+0x3c>
   11a37:	48 8b 3f             	mov    (%rdi),%rdi
   11a3a:	48 85 ff             	test   %rdi,%rdi
   11a3d:	74 1a                	je     11a59 <setting_cmp+0x3f>
   11a3f:	48 8b 36             	mov    (%rsi),%rsi
   11a42:	b8 01 00 00 00       	mov    $0x1,%eax
   11a47:	48 85 f6             	test   %rsi,%rsi
   11a4a:	74 13                	je     11a5f <setting_cmp+0x45>
   11a4c:	80 3f 00             	cmpb   $0x0,(%rdi)
   11a4f:	74 0e                	je     11a5f <setting_cmp+0x45>
   11a51:	e9 8a 1e 00 00       	jmp    138e0 <strcmp>
   11a56:	31 c0                	xor    %eax,%eax
   11a58:	c3                   	ret    
   11a59:	b8 01 00 00 00       	mov    $0x1,%eax
   11a5e:	c3                   	ret    
   11a5f:	c3                   	ret    

0000000000011a60 <generic_settings_store>:
   11a60:	f3 0f 1e fa          	endbr64 
   11a64:	41 57                	push   %r15
   11a66:	48 8d 47 50          	lea    0x50(%rdi),%rax
   11a6a:	41 56                	push   %r14
   11a6c:	49 89 d6             	mov    %rdx,%r14
   11a6f:	41 55                	push   %r13
   11a71:	49 89 cd             	mov    %rcx,%r13
   11a74:	41 54                	push   %r12
   11a76:	55                   	push   %rbp
   11a77:	53                   	push   %rbx
   11a78:	48 89 f3             	mov    %rsi,%rbx
   11a7b:	48 83 ec 18          	sub    $0x18,%rsp
   11a7f:	4c 8b 67 50          	mov    0x50(%rdi),%r12
   11a83:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11a88:	4c 3b 64 24 08       	cmp    0x8(%rsp),%r12
   11a8d:	74 22                	je     11ab1 <generic_settings_store+0x51>
   11a8f:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
   11a94:	48 89 de             	mov    %rbx,%rsi
   11a97:	e8 7e ff ff ff       	call   11a1a <setting_cmp>
   11a9c:	85 c0                	test   %eax,%eax
   11a9e:	74 06                	je     11aa6 <generic_settings_store+0x46>
   11aa0:	4d 8b 24 24          	mov    (%r12),%r12
   11aa4:	eb e2                	jmp    11a88 <generic_settings_store+0x28>
   11aa6:	4d 85 ed             	test   %r13,%r13
   11aa9:	0f 84 a6 00 00 00    	je     11b55 <generic_settings_store+0xf5>
   11aaf:	eb 0c                	jmp    11abd <generic_settings_store+0x5d>
   11ab1:	4d 85 ed             	test   %r13,%r13
   11ab4:	0f 84 97 00 00 00    	je     11b51 <generic_settings_store+0xf1>
   11aba:	45 31 e4             	xor    %r12d,%r12d
   11abd:	48 8b 3b             	mov    (%rbx),%rdi
   11ac0:	e8 75 1e 00 00       	call   1393a <strlen>
   11ac5:	49 8d 7c 05 49       	lea    0x49(%r13,%rax,1),%rdi
   11aca:	4c 8d 78 01          	lea    0x1(%rax),%r15
   11ace:	e8 87 ab ff ff       	call   c65a <zalloc>
   11ad3:	48 89 c5             	mov    %rax,%rbp
   11ad6:	48 85 c0             	test   %rax,%rax
   11ad9:	75 07                	jne    11ae2 <generic_settings_store+0x82>
   11adb:	b8 77 df f3 ce       	mov    $0xcef3df77,%eax
   11ae0:	eb 7c                	jmp    11b5e <generic_settings_store+0xfe>
   11ae2:	4c 89 78 38          	mov    %r15,0x38(%rax)
   11ae6:	48 8d 78 10          	lea    0x10(%rax),%rdi
   11aea:	ba 28 00 00 00       	mov    $0x28,%edx
   11aef:	48 89 de             	mov    %rbx,%rsi
   11af2:	4c 89 68 40          	mov    %r13,0x40(%rax)
   11af6:	e8 12 58 00 00       	call   1730d <__memcpy>
   11afb:	48 8d 7d 48          	lea    0x48(%rbp),%rdi
   11aff:	48 8b 33             	mov    (%rbx),%rsi
   11b02:	4c 89 fa             	mov    %r15,%rdx
   11b05:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   11b09:	e8 ff 57 00 00       	call   1730d <__memcpy>
   11b0e:	48 8b 45 38          	mov    0x38(%rbp),%rax
   11b12:	4c 89 ea             	mov    %r13,%rdx
   11b15:	4c 89 f6             	mov    %r14,%rsi
   11b18:	48 8d 7c 05 48       	lea    0x48(%rbp,%rax,1),%rdi
   11b1d:	e8 eb 57 00 00       	call   1730d <__memcpy>
   11b22:	4d 85 e4             	test   %r12,%r12
   11b25:	74 1d                	je     11b44 <generic_settings_store+0xe4>
   11b27:	49 8b 14 24          	mov    (%r12),%rdx
   11b2b:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   11b30:	4c 89 e7             	mov    %r12,%rdi
   11b33:	48 89 42 08          	mov    %rax,0x8(%rdx)
   11b37:	48 89 10             	mov    %rdx,(%rax)
   11b3a:	e8 10 ab ff ff       	call   c64f <free>
   11b3f:	48 85 ed             	test   %rbp,%rbp
   11b42:	74 0d                	je     11b51 <generic_settings_store+0xf1>
   11b44:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11b49:	48 89 ef             	mov    %rbp,%rdi
   11b4c:	e8 70 a5 ff ff       	call   c0c1 <extern_list_add>
   11b51:	31 c0                	xor    %eax,%eax
   11b53:	eb 09                	jmp    11b5e <generic_settings_store+0xfe>
   11b55:	31 ed                	xor    %ebp,%ebp
   11b57:	4d 85 e4             	test   %r12,%r12
   11b5a:	75 cb                	jne    11b27 <generic_settings_store+0xc7>
   11b5c:	eb f3                	jmp    11b51 <generic_settings_store+0xf1>
   11b5e:	48 83 c4 18          	add    $0x18,%rsp
   11b62:	5b                   	pop    %rbx
   11b63:	5d                   	pop    %rbp
   11b64:	41 5c                	pop    %r12
   11b66:	41 5d                	pop    %r13
   11b68:	41 5e                	pop    %r14
   11b6a:	41 5f                	pop    %r15
   11b6c:	c3                   	ret    

0000000000011b6d <fetch_setting>:
   11b6d:	f3 0f 1e fa          	endbr64 
   11b71:	41 57                	push   %r15
   11b73:	4d 89 cf             	mov    %r9,%r15
   11b76:	41 56                	push   %r14
   11b78:	49 89 fe             	mov    %rdi,%r14
   11b7b:	4c 89 c7             	mov    %r8,%rdi
   11b7e:	41 55                	push   %r13
   11b80:	49 89 cd             	mov    %rcx,%r13
   11b83:	4c 89 c9             	mov    %r9,%rcx
   11b86:	41 54                	push   %r12
   11b88:	49 89 d4             	mov    %rdx,%r12
   11b8b:	55                   	push   %rbp
   11b8c:	48 89 f5             	mov    %rsi,%rbp
   11b8f:	53                   	push   %rbx
   11b90:	48 83 ec 48          	sub    $0x48,%rsp
   11b94:	48 8b 05 d5 83 01 00 	mov    0x183d5(%rip),%rax        # 29f70 <__stack_chk_guard>
   11b9b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11ba0:	31 c0                	xor    %eax,%eax
   11ba2:	4c 89 04 24          	mov    %r8,(%rsp)
   11ba6:	f3 aa                	rep stos %al,%es:(%rdi)
   11ba8:	48 85 d2             	test   %rdx,%rdx
   11bab:	74 07                	je     11bb4 <fetch_setting+0x47>
   11bad:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   11bb4:	4d 85 ed             	test   %r13,%r13
   11bb7:	74 10                	je     11bc9 <fetch_setting+0x5c>
   11bb9:	ba 28 00 00 00       	mov    $0x28,%edx
   11bbe:	48 89 ee             	mov    %rbp,%rsi
   11bc1:	4c 89 ef             	mov    %r13,%rdi
   11bc4:	e8 44 57 00 00       	call   1730d <__memcpy>
   11bc9:	4c 89 f7             	mov    %r14,%rdi
   11bcc:	e8 e6 fc ff ff       	call   118b7 <settings_target>
   11bd1:	49 89 c6             	mov    %rax,%r14
   11bd4:	48 8b 40 38          	mov    0x38(%rax),%rax
   11bd8:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
   11bdd:	75 0b                	jne    11bea <fetch_setting+0x7d>
   11bdf:	41 b8 7d df f3 c3    	mov    $0xc3f3df7d,%r8d
   11be5:	e9 0f 01 00 00       	jmp    11cf9 <fetch_setting+0x18c>
   11bea:	48 89 ee             	mov    %rbp,%rsi
   11bed:	4c 89 f7             	mov    %r14,%rdi
   11bf0:	48 8d 1d d9 7c 01 00 	lea    0x17cd9(%rip),%rbx        # 298d0 <dns_applicator>
   11bf7:	e8 c8 fd ff ff       	call   119c4 <setting_applies>
   11bfc:	48 8d 35 c5 75 01 00 	lea    0x175c5(%rip),%rsi        # 291c8 <busid_setting>
   11c03:	85 c0                	test   %eax,%eax
   11c05:	75 3d                	jne    11c44 <fetch_setting+0xd7>
   11c07:	48 39 de             	cmp    %rbx,%rsi
   11c0a:	0f 83 a5 00 00 00    	jae    11cb5 <fetch_setting+0x148>
   11c10:	48 89 ef             	mov    %rbp,%rdi
   11c13:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   11c18:	e8 fd fd ff ff       	call   11a1a <setting_cmp>
   11c1d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11c22:	85 c0                	test   %eax,%eax
   11c24:	74 06                	je     11c2c <fetch_setting+0xbf>
   11c26:	48 83 c6 28          	add    $0x28,%rsi
   11c2a:	eb db                	jmp    11c07 <fetch_setting+0x9a>
   11c2c:	4c 89 f7             	mov    %r14,%rdi
   11c2f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   11c34:	e8 8b fd ff ff       	call   119c4 <setting_applies>
   11c39:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11c3e:	85 c0                	test   %eax,%eax
   11c40:	74 e4                	je     11c26 <fetch_setting+0xb9>
   11c42:	eb 03                	jmp    11c47 <fetch_setting+0xda>
   11c44:	48 89 ee             	mov    %rbp,%rsi
   11c47:	48 85 f6             	test   %rsi,%rsi
   11c4a:	74 69                	je     11cb5 <fetch_setting+0x148>
   11c4c:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
   11c51:	ba 28 00 00 00       	mov    $0x28,%edx
   11c56:	48 89 df             	mov    %rbx,%rdi
   11c59:	e8 af 56 00 00       	call   1730d <__memcpy>
   11c5e:	49 8b 46 38          	mov    0x38(%r14),%rax
   11c62:	48 8b 14 24          	mov    (%rsp),%rdx
   11c66:	4c 89 f9             	mov    %r15,%rcx
   11c69:	48 89 de             	mov    %rbx,%rsi
   11c6c:	4c 89 f7             	mov    %r14,%rdi
   11c6f:	ff 50 18             	call   *0x18(%rax)
   11c72:	41 89 c0             	mov    %eax,%r8d
   11c75:	85 c0                	test   %eax,%eax
   11c77:	78 3c                	js     11cb5 <fetch_setting+0x148>
   11c79:	48 83 7c 24 20 00    	cmpq   $0x0,0x20(%rsp)
   11c7f:	75 0c                	jne    11c8d <fetch_setting+0x120>
   11c81:	48 8d 05 18 75 01 00 	lea    0x17518(%rip),%rax        # 291a0 <setting_type_string>
   11c88:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   11c8d:	4d 85 e4             	test   %r12,%r12
   11c90:	74 04                	je     11c96 <fetch_setting+0x129>
   11c92:	4d 89 34 24          	mov    %r14,(%r12)
   11c96:	4d 85 ed             	test   %r13,%r13
   11c99:	74 5e                	je     11cf9 <fetch_setting+0x18c>
   11c9b:	ba 28 00 00 00       	mov    $0x28,%edx
   11ca0:	48 89 de             	mov    %rbx,%rsi
   11ca3:	4c 89 ef             	mov    %r13,%rdi
   11ca6:	44 89 04 24          	mov    %r8d,(%rsp)
   11caa:	e8 5e 56 00 00       	call   1730d <__memcpy>
   11caf:	44 8b 04 24          	mov    (%rsp),%r8d
   11cb3:	eb 44                	jmp    11cf9 <fetch_setting+0x18c>
   11cb5:	49 8b 46 28          	mov    0x28(%r14),%rax
   11cb9:	49 83 c6 28          	add    $0x28,%r14
   11cbd:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
   11cc1:	48 8d 43 18          	lea    0x18(%rbx),%rax
   11cc5:	4c 39 f0             	cmp    %r14,%rax
   11cc8:	74 29                	je     11cf3 <fetch_setting+0x186>
   11cca:	4c 8b 04 24          	mov    (%rsp),%r8
   11cce:	4d 89 f9             	mov    %r15,%r9
   11cd1:	4c 89 e9             	mov    %r13,%rcx
   11cd4:	4c 89 e2             	mov    %r12,%rdx
   11cd7:	48 89 ee             	mov    %rbp,%rsi
   11cda:	48 89 df             	mov    %rbx,%rdi
   11cdd:	e8 8b fe ff ff       	call   11b6d <fetch_setting>
   11ce2:	41 89 c0             	mov    %eax,%r8d
   11ce5:	85 c0                	test   %eax,%eax
   11ce7:	79 10                	jns    11cf9 <fetch_setting+0x18c>
   11ce9:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   11ced:	48 8d 5f e8          	lea    -0x18(%rdi),%rbx
   11cf1:	eb ce                	jmp    11cc1 <fetch_setting+0x154>
   11cf3:	41 b8 72 df f3 d2    	mov    $0xd2f3df72,%r8d
   11cf9:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   11cfe:	48 2b 05 6b 82 01 00 	sub    0x1826b(%rip),%rax        # 29f70 <__stack_chk_guard>
   11d05:	74 05                	je     11d0c <fetch_setting+0x19f>
   11d07:	e8 54 0d ff ff       	call   2a60 <__stack_chk_fail>
   11d0c:	48 83 c4 48          	add    $0x48,%rsp
   11d10:	44 89 c0             	mov    %r8d,%eax
   11d13:	5b                   	pop    %rbx
   11d14:	5d                   	pop    %rbp
   11d15:	41 5c                	pop    %r12
   11d17:	41 5d                	pop    %r13
   11d19:	41 5e                	pop    %r14
   11d1b:	41 5f                	pop    %r15
   11d1d:	c3                   	ret    

0000000000011d1e <fetch_setting_alloc>:
   11d1e:	41 57                	push   %r15
   11d20:	4d 89 cf             	mov    %r9,%r15
   11d23:	41 56                	push   %r14
   11d25:	41 55                	push   %r13
   11d27:	4d 89 c5             	mov    %r8,%r13
   11d2a:	41 54                	push   %r12
   11d2c:	55                   	push   %rbp
   11d2d:	48 89 cd             	mov    %rcx,%rbp
   11d30:	53                   	push   %rbx
   11d31:	48 83 ec 48          	sub    $0x48,%rsp
   11d35:	48 8b 05 34 82 01 00 	mov    0x18234(%rip),%rax        # 29f70 <__stack_chk_guard>
   11d3c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   11d41:	31 c0                	xor    %eax,%eax
   11d43:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   11d48:	48 85 d2             	test   %rdx,%rdx
   11d4b:	74 03                	je     11d50 <fetch_setting_alloc+0x32>
   11d4d:	48 89 d3             	mov    %rdx,%rbx
   11d50:	48 85 ed             	test   %rbp,%rbp
   11d53:	75 05                	jne    11d5a <fetch_setting_alloc+0x3c>
   11d55:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   11d5a:	45 31 c9             	xor    %r9d,%r9d
   11d5d:	45 31 c0             	xor    %r8d,%r8d
   11d60:	48 89 e9             	mov    %rbp,%rcx
   11d63:	48 89 da             	mov    %rbx,%rdx
   11d66:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   11d6d:	00 
   11d6e:	e8 fa fd ff ff       	call   11b6d <fetch_setting>
   11d73:	41 89 c4             	mov    %eax,%r12d
   11d76:	85 c0                	test   %eax,%eax
   11d78:	78 2f                	js     11da9 <fetch_setting_alloc+0x8b>
   11d7a:	4c 63 f0             	movslq %eax,%r14
   11d7d:	4c 89 f7             	mov    %r14,%rdi
   11d80:	41 ff d7             	call   *%r15
   11d83:	49 89 45 00          	mov    %rax,0x0(%r13)
   11d87:	49 89 c0             	mov    %rax,%r8
   11d8a:	48 85 c0             	test   %rax,%rax
   11d8d:	75 08                	jne    11d97 <fetch_setting_alloc+0x79>
   11d8f:	41 bc 77 df f3 ce    	mov    $0xcef3df77,%r12d
   11d95:	eb 12                	jmp    11da9 <fetch_setting_alloc+0x8b>
   11d97:	48 8b 3b             	mov    (%rbx),%rdi
   11d9a:	4d 89 f1             	mov    %r14,%r9
   11d9d:	31 c9                	xor    %ecx,%ecx
   11d9f:	31 d2                	xor    %edx,%edx
   11da1:	48 89 ee             	mov    %rbp,%rsi
   11da4:	e8 c4 fd ff ff       	call   11b6d <fetch_setting>
   11da9:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   11dae:	48 2b 05 bb 81 01 00 	sub    0x181bb(%rip),%rax        # 29f70 <__stack_chk_guard>
   11db5:	74 05                	je     11dbc <fetch_setting_alloc+0x9e>
   11db7:	e8 a4 0c ff ff       	call   2a60 <__stack_chk_fail>
   11dbc:	48 83 c4 48          	add    $0x48,%rsp
   11dc0:	44 89 e0             	mov    %r12d,%eax
   11dc3:	5b                   	pop    %rbx
   11dc4:	5d                   	pop    %rbp
   11dc5:	41 5c                	pop    %r12
   11dc7:	41 5d                	pop    %r13
   11dc9:	41 5e                	pop    %r14
   11dcb:	41 5f                	pop    %r15
   11dcd:	c3                   	ret    

0000000000011dce <fetch_setting_copy>:
   11dce:	f3 0f 1e fa          	endbr64 
   11dd2:	4c 8d 0d 68 a8 ff ff 	lea    -0x5798(%rip),%r9        # c641 <malloc>
   11dd9:	e9 40 ff ff ff       	jmp    11d1e <fetch_setting_alloc>

0000000000011dde <fetch_raw_setting_copy>:
   11dde:	f3 0f 1e fa          	endbr64 
   11de2:	49 89 d0             	mov    %rdx,%r8
   11de5:	31 c9                	xor    %ecx,%ecx
   11de7:	31 d2                	xor    %edx,%edx
   11de9:	e9 e0 ff ff ff       	jmp    11dce <fetch_setting_copy>

0000000000011dee <fetch_string_setting_copy>:
   11dee:	f3 0f 1e fa          	endbr64 
   11df2:	49 89 d0             	mov    %rdx,%r8
   11df5:	4c 8d 0d 98 f7 ff ff 	lea    -0x868(%rip),%r9        # 11594 <fetch_string_setting_copy_alloc>
   11dfc:	31 c9                	xor    %ecx,%ecx
   11dfe:	31 d2                	xor    %edx,%edx
   11e00:	e9 19 ff ff ff       	jmp    11d1e <fetch_setting_alloc>

0000000000011e05 <fetch_raw_setting>:
   11e05:	f3 0f 1e fa          	endbr64 
   11e09:	49 89 d0             	mov    %rdx,%r8
   11e0c:	49 89 c9             	mov    %rcx,%r9
   11e0f:	31 d2                	xor    %edx,%edx
   11e11:	31 c9                	xor    %ecx,%ecx
   11e13:	e9 55 fd ff ff       	jmp    11b6d <fetch_setting>

0000000000011e18 <fetch_string_setting>:
   11e18:	f3 0f 1e fa          	endbr64 
   11e1c:	49 89 f9             	mov    %rdi,%r9
   11e1f:	49 89 c8             	mov    %rcx,%r8
   11e22:	48 89 d7             	mov    %rdx,%rdi
   11e25:	31 c0                	xor    %eax,%eax
   11e27:	f3 aa                	rep stos %al,%es:(%rdi)
   11e29:	49 83 f8 01          	cmp    $0x1,%r8
   11e2d:	4c 89 cf             	mov    %r9,%rdi
   11e30:	49 83 d0 ff          	adc    $0xffffffffffffffff,%r8
   11e34:	4c 89 c1             	mov    %r8,%rcx
   11e37:	e9 c9 ff ff ff       	jmp    11e05 <fetch_raw_setting>

0000000000011e3c <fetch_ipv4_array_setting>:
   11e3c:	f3 0f 1e fa          	endbr64 
   11e40:	41 50                	push   %r8
   11e42:	89 c9                	mov    %ecx,%ecx
   11e44:	48 c1 e1 02          	shl    $0x2,%rcx
   11e48:	e8 b8 ff ff ff       	call   11e05 <fetch_raw_setting>
   11e4d:	85 c0                	test   %eax,%eax
   11e4f:	78 09                	js     11e5a <fetch_ipv4_array_setting+0x1e>
   11e51:	a8 03                	test   $0x3,%al
   11e53:	74 05                	je     11e5a <fetch_ipv4_array_setting+0x1e>
   11e55:	b8 7b df f3 b9       	mov    $0xb9f3df7b,%eax
   11e5a:	5a                   	pop    %rdx
   11e5b:	c3                   	ret    

0000000000011e5c <fetch_ipv4_setting>:
   11e5c:	f3 0f 1e fa          	endbr64 
   11e60:	b9 01 00 00 00       	mov    $0x1,%ecx
   11e65:	e9 d2 ff ff ff       	jmp    11e3c <fetch_ipv4_array_setting>

0000000000011e6a <fetch_numeric_setting>:
   11e6a:	f3 0f 1e fa          	endbr64 
   11e6e:	41 55                	push   %r13
   11e70:	41 54                	push   %r12
   11e72:	49 89 d4             	mov    %rdx,%r12
   11e75:	55                   	push   %rbp
   11e76:	89 cd                	mov    %ecx,%ebp
   11e78:	b9 08 00 00 00       	mov    $0x8,%ecx
   11e7d:	48 83 ec 10          	sub    $0x10,%rsp
   11e81:	48 8b 05 e8 80 01 00 	mov    0x180e8(%rip),%rax        # 29f70 <__stack_chk_guard>
   11e88:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11e8d:	31 c0                	xor    %eax,%eax
   11e8f:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   11e96:	49 89 e5             	mov    %rsp,%r13
   11e99:	4c 89 ea             	mov    %r13,%rdx
   11e9c:	e8 64 ff ff ff       	call   11e05 <fetch_raw_setting>
   11ea1:	85 c0                	test   %eax,%eax
   11ea3:	78 10                	js     11eb5 <fetch_numeric_setting+0x4b>
   11ea5:	48 63 d0             	movslq %eax,%rdx
   11ea8:	4c 89 e1             	mov    %r12,%rcx
   11eab:	4c 89 ee             	mov    %r13,%rsi
   11eae:	89 ef                	mov    %ebp,%edi
   11eb0:	e8 a6 f3 ff ff       	call   1125b <numeric_setting_value>
   11eb5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11eba:	48 2b 15 af 80 01 00 	sub    0x180af(%rip),%rdx        # 29f70 <__stack_chk_guard>
   11ec1:	74 05                	je     11ec8 <fetch_numeric_setting+0x5e>
   11ec3:	e8 98 0b ff ff       	call   2a60 <__stack_chk_fail>
   11ec8:	48 83 c4 10          	add    $0x10,%rsp
   11ecc:	5d                   	pop    %rbp
   11ecd:	41 5c                	pop    %r12
   11ecf:	41 5d                	pop    %r13
   11ed1:	c3                   	ret    

0000000000011ed2 <fetch_uint_setting>:
   11ed2:	f3 0f 1e fa          	endbr64 
   11ed6:	31 c9                	xor    %ecx,%ecx
   11ed8:	e9 8d ff ff ff       	jmp    11e6a <fetch_numeric_setting>

0000000000011edd <fetch_intz_setting>:
   11edd:	f3 0f 1e fa          	endbr64 
   11ee1:	48 83 ec 18          	sub    $0x18,%rsp
   11ee5:	b9 01 00 00 00       	mov    $0x1,%ecx
   11eea:	48 8b 05 7f 80 01 00 	mov    0x1807f(%rip),%rax        # 29f70 <__stack_chk_guard>
   11ef1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11ef6:	31 c0                	xor    %eax,%eax
   11ef8:	48 89 e2             	mov    %rsp,%rdx
   11efb:	e8 6a ff ff ff       	call   11e6a <fetch_numeric_setting>
   11f00:	48 8b 04 24          	mov    (%rsp),%rax
   11f04:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11f09:	48 2b 15 60 80 01 00 	sub    0x18060(%rip),%rdx        # 29f70 <__stack_chk_guard>
   11f10:	74 05                	je     11f17 <fetch_intz_setting+0x3a>
   11f12:	e8 49 0b ff ff       	call   2a60 <__stack_chk_fail>
   11f17:	48 83 c4 18          	add    $0x18,%rsp
   11f1b:	c3                   	ret    

0000000000011f1c <reprioritise_settings>:
   11f1c:	41 57                	push   %r15
   11f1e:	49 89 ff             	mov    %rdi,%r15
   11f21:	41 56                	push   %r14
   11f23:	41 55                	push   %r13
   11f25:	4c 8d 2d 04 79 01 00 	lea    0x17904(%rip),%r13        # 29830 <priority_setting>
   11f2c:	41 54                	push   %r12
   11f2e:	55                   	push   %rbp
   11f2f:	53                   	push   %rbx
   11f30:	48 83 ec 18          	sub    $0x18,%rsp
   11f34:	49 8b 6f 10          	mov    0x10(%r15),%rbp
   11f38:	48 85 ed             	test   %rbp,%rbp
   11f3b:	74 72                	je     11faf <reprioritise_settings+0x93>
   11f3d:	4c 89 ee             	mov    %r13,%rsi
   11f40:	4c 89 ff             	mov    %r15,%rdi
   11f43:	4d 8d 67 18          	lea    0x18(%r15),%r12
   11f47:	e8 91 ff ff ff       	call   11edd <fetch_intz_setting>
   11f4c:	49 8b 57 18          	mov    0x18(%r15),%rdx
   11f50:	48 89 04 24          	mov    %rax,(%rsp)
   11f54:	49 8b 47 20          	mov    0x20(%r15),%rax
   11f58:	48 89 42 08          	mov    %rax,0x8(%rdx)
   11f5c:	48 89 10             	mov    %rdx,(%rax)
   11f5f:	48 8b 45 28          	mov    0x28(%rbp),%rax
   11f63:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
   11f67:	48 8d 45 28          	lea    0x28(%rbp),%rax
   11f6b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11f70:	4c 8d 73 18          	lea    0x18(%rbx),%r14
   11f74:	4c 3b 74 24 08       	cmp    0x8(%rsp),%r14
   11f79:	74 11                	je     11f8c <reprioritise_settings+0x70>
   11f7b:	4c 89 ee             	mov    %r13,%rsi
   11f7e:	48 89 df             	mov    %rbx,%rdi
   11f81:	e8 57 ff ff ff       	call   11edd <fetch_intz_setting>
   11f86:	48 3b 04 24          	cmp    (%rsp),%rax
   11f8a:	7d 10                	jge    11f9c <reprioritise_settings+0x80>
   11f8c:	4c 89 f6             	mov    %r14,%rsi
   11f8f:	4c 89 e7             	mov    %r12,%rdi
   11f92:	49 89 ef             	mov    %rbp,%r15
   11f95:	e8 3d a1 ff ff       	call   c0d7 <extern_list_add_tail>
   11f9a:	eb 98                	jmp    11f34 <reprioritise_settings+0x18>
   11f9c:	8b 43 48             	mov    0x48(%rbx),%eax
   11f9f:	41 39 47 48          	cmp    %eax,0x48(%r15)
   11fa3:	7f e7                	jg     11f8c <reprioritise_settings+0x70>
   11fa5:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
   11fa9:	48 83 eb 18          	sub    $0x18,%rbx
   11fad:	eb c1                	jmp    11f70 <reprioritise_settings+0x54>
   11faf:	48 83 c4 18          	add    $0x18,%rsp
   11fb3:	5b                   	pop    %rbx
   11fb4:	5d                   	pop    %rbp
   11fb5:	41 5c                	pop    %r12
   11fb7:	41 5d                	pop    %r13
   11fb9:	41 5e                	pop    %r14
   11fbb:	41 5f                	pop    %r15
   11fbd:	c3                   	ret    

0000000000011fbe <register_settings>:
   11fbe:	f3 0f 1e fa          	endbr64 
   11fc2:	41 54                	push   %r12
   11fc4:	49 89 d4             	mov    %rdx,%r12
   11fc7:	55                   	push   %rbp
   11fc8:	48 89 fd             	mov    %rdi,%rbp
   11fcb:	48 89 f7             	mov    %rsi,%rdi
   11fce:	53                   	push   %rbx
   11fcf:	e8 e3 f8 ff ff       	call   118b7 <settings_target>
   11fd4:	4c 89 65 08          	mov    %r12,0x8(%rbp)
   11fd8:	4c 89 e6             	mov    %r12,%rsi
   11fdb:	48 89 c7             	mov    %rax,%rdi
   11fde:	48 89 c3             	mov    %rax,%rbx
   11fe1:	e8 f6 f8 ff ff       	call   118dc <find_child_settings>
   11fe6:	48 85 c0             	test   %rax,%rax
   11fe9:	74 08                	je     11ff3 <register_settings+0x35>
   11feb:	48 89 c7             	mov    %rax,%rdi
   11fee:	e8 6f f8 ff ff       	call   11862 <unregister_settings>
   11ff3:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   11ff7:	e8 36 de ff ff       	call   fe32 <ref_increment>
   11ffc:	48 8b 3b             	mov    (%rbx),%rdi
   11fff:	e8 2e de ff ff       	call   fe32 <ref_increment>
   12004:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
   12008:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   1200c:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   12010:	e8 c2 a0 ff ff       	call   c0d7 <extern_list_add_tail>
   12015:	48 89 ef             	mov    %rbp,%rdi
   12018:	e8 ff fe ff ff       	call   11f1c <reprioritise_settings>
   1201d:	e8 11 f2 ff ff       	call   11233 <apply_settings>
   12022:	5b                   	pop    %rbx
   12023:	31 c0                	xor    %eax,%eax
   12025:	5d                   	pop    %rbp
   12026:	41 5c                	pop    %r12
   12028:	c3                   	ret    

0000000000012029 <autovivify_child_settings>:
   12029:	f3 0f 1e fa          	endbr64 
   1202d:	41 56                	push   %r14
   1202f:	41 55                	push   %r13
   12031:	41 54                	push   %r12
   12033:	49 89 fc             	mov    %rdi,%r12
   12036:	48 89 f7             	mov    %rsi,%rdi
   12039:	55                   	push   %rbp
   1203a:	48 89 f5             	mov    %rsi,%rbp
   1203d:	53                   	push   %rbx
   1203e:	e8 f7 18 00 00       	call   1393a <strlen>
   12043:	4c 89 e7             	mov    %r12,%rdi
   12046:	48 89 c3             	mov    %rax,%rbx
   12049:	e8 69 f8 ff ff       	call   118b7 <settings_target>
   1204e:	48 89 ee             	mov    %rbp,%rsi
   12051:	48 89 c7             	mov    %rax,%rdi
   12054:	49 89 c5             	mov    %rax,%r13
   12057:	e8 80 f8 ff ff       	call   118dc <find_child_settings>
   1205c:	49 89 c4             	mov    %rax,%r12
   1205f:	48 85 c0             	test   %rax,%rax
   12062:	0f 85 9f 00 00 00    	jne    12107 <autovivify_child_settings+0xde>
   12068:	48 8d 7b 78          	lea    0x78(%rbx),%rdi
   1206c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   12070:	e8 e5 a5 ff ff       	call   c65a <zalloc>
   12075:	49 89 c4             	mov    %rax,%r12
   12078:	48 85 c0             	test   %rax,%rax
   1207b:	0f 84 86 00 00 00    	je     12107 <autovivify_child_settings+0xde>
   12081:	4c 8d 70 70          	lea    0x70(%rax),%r14
   12085:	48 8d 53 01          	lea    0x1(%rbx),%rdx
   12089:	48 89 ee             	mov    %rbp,%rsi
   1208c:	4c 89 f7             	mov    %r14,%rdi
   1208f:	49 8d 5c 24 10       	lea    0x10(%r12),%rbx
   12094:	e8 74 52 00 00       	call   1730d <__memcpy>
   12099:	4d 89 64 24 10       	mov    %r12,0x10(%r12)
   1209e:	4c 89 f2             	mov    %r14,%rdx
   120a1:	4c 89 ee             	mov    %r13,%rsi
   120a4:	48 8d 05 2f f5 ff ff 	lea    -0xad1(%rip),%rax        # 115da <autovivified_settings_free>
   120ab:	48 89 df             	mov    %rbx,%rdi
   120ae:	49 c7 44 24 50 00 00 	movq   $0x0,0x50(%r12)
   120b5:	00 00 
   120b7:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   120bc:	49 8d 44 24 28       	lea    0x28(%r12),%rax
   120c1:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   120c6:	49 89 44 24 30       	mov    %rax,0x30(%r12)
   120cb:	49 8d 44 24 38       	lea    0x38(%r12),%rax
   120d0:	49 89 44 24 38       	mov    %rax,0x38(%r12)
   120d5:	49 89 44 24 40       	mov    %rax,0x40(%r12)
   120da:	48 8d 05 df 4f 01 00 	lea    0x14fdf(%rip),%rax        # 270c0 <generic_settings_operations>
   120e1:	49 89 44 24 48       	mov    %rax,0x48(%r12)
   120e6:	49 8d 44 24 60       	lea    0x60(%r12),%rax
   120eb:	49 89 44 24 60       	mov    %rax,0x60(%r12)
   120f0:	49 89 44 24 68       	mov    %rax,0x68(%r12)
   120f5:	e8 c4 fe ff ff       	call   11fbe <register_settings>
   120fa:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   120ff:	49 89 dc             	mov    %rbx,%r12
   12102:	e8 37 dd ff ff       	call   fe3e <ref_decrement>
   12107:	5b                   	pop    %rbx
   12108:	4c 89 e0             	mov    %r12,%rax
   1210b:	5d                   	pop    %rbp
   1210c:	41 5c                	pop    %r12
   1210e:	41 5d                	pop    %r13
   12110:	41 5e                	pop    %r14
   12112:	c3                   	ret    

0000000000012113 <builtin_init>:
   12113:	f3 0f 1e fa          	endbr64 
   12117:	48 8d 15 5d 16 01 00 	lea    0x1165d(%rip),%rdx        # 2377b <.LC5>
   1211e:	31 f6                	xor    %esi,%esi
   12120:	48 8d 3d 99 4e 01 00 	lea    0x14e99(%rip),%rdi        # 26fc0 <builtin_settings>
   12127:	e9 92 fe ff ff       	jmp    11fbe <register_settings>

000000000001212c <fetch_uintz_setting>:
   1212c:	f3 0f 1e fa          	endbr64 
   12130:	48 83 ec 18          	sub    $0x18,%rsp
   12134:	31 c9                	xor    %ecx,%ecx
   12136:	48 8b 05 33 7e 01 00 	mov    0x17e33(%rip),%rax        # 29f70 <__stack_chk_guard>
   1213d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   12142:	31 c0                	xor    %eax,%eax
   12144:	48 89 e2             	mov    %rsp,%rdx
   12147:	e8 1e fd ff ff       	call   11e6a <fetch_numeric_setting>
   1214c:	48 8b 04 24          	mov    (%rsp),%rax
   12150:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   12155:	48 2b 15 14 7e 01 00 	sub    0x17e14(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1215c:	74 05                	je     12163 <fetch_uintz_setting+0x37>
   1215e:	e8 fd 08 ff ff       	call   2a60 <__stack_chk_fail>
   12163:	48 83 c4 18          	add    $0x18,%rsp
   12167:	c3                   	ret    

0000000000012168 <fetch_uuid_setting>:
   12168:	f3 0f 1e fa          	endbr64 
   1216c:	51                   	push   %rcx
   1216d:	b9 10 00 00 00       	mov    $0x10,%ecx
   12172:	e8 8e fc ff ff       	call   11e05 <fetch_raw_setting>
   12177:	85 c0                	test   %eax,%eax
   12179:	78 0a                	js     12185 <fetch_uuid_setting+0x1d>
   1217b:	83 f8 10             	cmp    $0x10,%eax
   1217e:	74 05                	je     12185 <fetch_uuid_setting+0x1d>
   12180:	b8 7b df f3 b9       	mov    $0xb9f3df7b,%eax
   12185:	5a                   	pop    %rdx
   12186:	c3                   	ret    

0000000000012187 <store_setting>:
   12187:	f3 0f 1e fa          	endbr64 
   1218b:	41 54                	push   %r12
   1218d:	55                   	push   %rbp
   1218e:	48 89 f5             	mov    %rsi,%rbp
   12191:	53                   	push   %rbx
   12192:	48 83 ec 10          	sub    $0x10,%rsp
   12196:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1219b:	48 89 0c 24          	mov    %rcx,(%rsp)
   1219f:	e8 13 f7 ff ff       	call   118b7 <settings_target>
   121a4:	48 89 ee             	mov    %rbp,%rsi
   121a7:	48 89 c7             	mov    %rax,%rdi
   121aa:	48 89 c3             	mov    %rax,%rbx
   121ad:	e8 12 f8 ff ff       	call   119c4 <setting_applies>
   121b2:	48 8b 0c 24          	mov    (%rsp),%rcx
   121b6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   121bb:	85 c0                	test   %eax,%eax
   121bd:	75 08                	jne    121c7 <store_setting+0x40>
   121bf:	41 bc 7d df f3 c2    	mov    $0xc2f3df7d,%r12d
   121c5:	eb 61                	jmp    12228 <store_setting+0xa1>
   121c7:	48 8b 43 38          	mov    0x38(%rbx),%rax
   121cb:	48 8b 40 10          	mov    0x10(%rax),%rax
   121cf:	48 85 c0             	test   %rax,%rax
   121d2:	75 08                	jne    121dc <store_setting+0x55>
   121d4:	41 bc 7d df f3 c3    	mov    $0xc3f3df7d,%r12d
   121da:	eb 4c                	jmp    12228 <store_setting+0xa1>
   121dc:	48 89 ee             	mov    %rbp,%rsi
   121df:	48 89 df             	mov    %rbx,%rdi
   121e2:	ff d0                	call   *%rax
   121e4:	41 89 c4             	mov    %eax,%r12d
   121e7:	85 c0                	test   %eax,%eax
   121e9:	75 3d                	jne    12228 <store_setting+0xa1>
   121eb:	48 8d 35 3e 76 01 00 	lea    0x1763e(%rip),%rsi        # 29830 <priority_setting>
   121f2:	48 89 ef             	mov    %rbp,%rdi
   121f5:	e8 20 f8 ff ff       	call   11a1a <setting_cmp>
   121fa:	85 c0                	test   %eax,%eax
   121fc:	75 08                	jne    12206 <store_setting+0x7f>
   121fe:	48 89 df             	mov    %rbx,%rdi
   12201:	e8 16 fd ff ff       	call   11f1c <reprioritise_settings>
   12206:	48 8d 05 53 4e 01 00 	lea    0x14e53(%rip),%rax        # 27060 <generic_settings_root>
   1220d:	48 39 c3             	cmp    %rax,%rbx
   12210:	75 0d                	jne    1221f <store_setting+0x98>
   12212:	48 83 c4 10          	add    $0x10,%rsp
   12216:	5b                   	pop    %rbx
   12217:	5d                   	pop    %rbp
   12218:	41 5c                	pop    %r12
   1221a:	e9 14 f0 ff ff       	jmp    11233 <apply_settings>
   1221f:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   12223:	48 85 db             	test   %rbx,%rbx
   12226:	75 e5                	jne    1220d <store_setting+0x86>
   12228:	48 83 c4 10          	add    $0x10,%rsp
   1222c:	44 89 e0             	mov    %r12d,%eax
   1222f:	5b                   	pop    %rbx
   12230:	5d                   	pop    %rbp
   12231:	41 5c                	pop    %r12
   12233:	c3                   	ret    

0000000000012234 <builtin_fetch>:
   12234:	f3 0f 1e fa          	endbr64 
   12238:	41 56                	push   %r14
   1223a:	4c 8d 35 ff 61 01 00 	lea    0x161ff(%rip),%r14        # 28440 <net_discarder>
   12241:	41 55                	push   %r13
   12243:	49 89 cd             	mov    %rcx,%r13
   12246:	41 54                	push   %r12
   12248:	49 89 d4             	mov    %rdx,%r12
   1224b:	55                   	push   %rbp
   1224c:	48 89 f5             	mov    %rsi,%rbp
   1224f:	53                   	push   %rbx
   12250:	48 8d 1d 99 61 01 00 	lea    0x16199(%rip),%rbx        # 283f0 <unixtime_builtin_setting>
   12257:	4c 39 f3             	cmp    %r14,%rbx
   1225a:	73 29                	jae    12285 <builtin_fetch+0x51>
   1225c:	48 8b 33             	mov    (%rbx),%rsi
   1225f:	48 89 ef             	mov    %rbp,%rdi
   12262:	e8 b3 f7 ff ff       	call   11a1a <setting_cmp>
   12267:	85 c0                	test   %eax,%eax
   12269:	75 14                	jne    1227f <builtin_fetch+0x4b>
   1226b:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1226f:	4c 89 ee             	mov    %r13,%rsi
   12272:	5b                   	pop    %rbx
   12273:	4c 89 e7             	mov    %r12,%rdi
   12276:	5d                   	pop    %rbp
   12277:	41 5c                	pop    %r12
   12279:	41 5d                	pop    %r13
   1227b:	41 5e                	pop    %r14
   1227d:	ff e0                	jmp    *%rax
   1227f:	48 83 c3 10          	add    $0x10,%rbx
   12283:	eb d2                	jmp    12257 <builtin_fetch+0x23>
   12285:	b8 72 df f3 d2       	mov    $0xd2f3df72,%eax
   1228a:	5b                   	pop    %rbx
   1228b:	5d                   	pop    %rbp
   1228c:	41 5c                	pop    %r12
   1228e:	41 5d                	pop    %r13
   12290:	41 5e                	pop    %r14
   12292:	c3                   	ret    

0000000000012293 <generic_settings_fetch>:
   12293:	f3 0f 1e fa          	endbr64 
   12297:	41 56                	push   %r14
   12299:	49 89 d6             	mov    %rdx,%r14
   1229c:	41 55                	push   %r13
   1229e:	49 89 f5             	mov    %rsi,%r13
   122a1:	41 54                	push   %r12
   122a3:	4c 8d 67 50          	lea    0x50(%rdi),%r12
   122a7:	55                   	push   %rbp
   122a8:	48 89 cd             	mov    %rcx,%rbp
   122ab:	53                   	push   %rbx
   122ac:	48 8b 5f 50          	mov    0x50(%rdi),%rbx
   122b0:	4c 39 e3             	cmp    %r12,%rbx
   122b3:	74 1c                	je     122d1 <generic_settings_fetch+0x3e>
   122b5:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   122b9:	4c 89 ee             	mov    %r13,%rsi
   122bc:	e8 59 f7 ff ff       	call   11a1a <setting_cmp>
   122c1:	85 c0                	test   %eax,%eax
   122c3:	75 07                	jne    122cc <generic_settings_fetch+0x39>
   122c5:	48 85 db             	test   %rbx,%rbx
   122c8:	75 0e                	jne    122d8 <generic_settings_fetch+0x45>
   122ca:	eb 05                	jmp    122d1 <generic_settings_fetch+0x3e>
   122cc:	48 8b 1b             	mov    (%rbx),%rbx
   122cf:	eb df                	jmp    122b0 <generic_settings_fetch+0x1d>
   122d1:	b8 72 df f3 d2       	mov    $0xd2f3df72,%eax
   122d6:	eb 31                	jmp    12309 <generic_settings_fetch+0x76>
   122d8:	48 8b 43 40          	mov    0x40(%rbx),%rax
   122dc:	4c 89 f7             	mov    %r14,%rdi
   122df:	48 39 c5             	cmp    %rax,%rbp
   122e2:	48 0f 46 c5          	cmovbe %rbp,%rax
   122e6:	48 89 c2             	mov    %rax,%rdx
   122e9:	48 8b 43 38          	mov    0x38(%rbx),%rax
   122ed:	48 8d 74 03 48       	lea    0x48(%rbx,%rax,1),%rsi
   122f2:	e8 16 50 00 00       	call   1730d <__memcpy>
   122f7:	49 83 7d 10 00       	cmpq   $0x0,0x10(%r13)
   122fc:	75 08                	jne    12306 <generic_settings_fetch+0x73>
   122fe:	48 8b 43 20          	mov    0x20(%rbx),%rax
   12302:	49 89 45 10          	mov    %rax,0x10(%r13)
   12306:	8b 43 40             	mov    0x40(%rbx),%eax
   12309:	5b                   	pop    %rbx
   1230a:	5d                   	pop    %rbp
   1230b:	41 5c                	pop    %r12
   1230d:	41 5d                	pop    %r13
   1230f:	41 5e                	pop    %r14
   12311:	c3                   	ret    

0000000000012312 <setting_format>:
   12312:	f3 0f 1e fa          	endbr64 
   12316:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1231a:	48 85 c0             	test   %rax,%rax
   1231d:	74 02                	je     12321 <setting_format+0xf>
   1231f:	ff e0                	jmp    *%rax
   12321:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   12326:	c3                   	ret    

0000000000012327 <setting_parse>:
   12327:	f3 0f 1e fa          	endbr64 
   1232b:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1232f:	48 85 c0             	test   %rax,%rax
   12332:	74 02                	je     12336 <setting_parse+0xf>
   12334:	ff e0                	jmp    *%rax
   12336:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   1233b:	c3                   	ret    

000000000001233c <setting_numerate>:
   1233c:	f3 0f 1e fa          	endbr64 
   12340:	48 8b 47 20          	mov    0x20(%rdi),%rax
   12344:	48 85 c0             	test   %rax,%rax
   12347:	74 02                	je     1234b <setting_numerate+0xf>
   12349:	ff e0                	jmp    *%rax
   1234b:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   12350:	c3                   	ret    

0000000000012351 <setting_denumerate>:
   12351:	f3 0f 1e fa          	endbr64 
   12355:	48 8b 47 18          	mov    0x18(%rdi),%rax
   12359:	48 85 c0             	test   %rax,%rax
   1235c:	74 02                	je     12360 <setting_denumerate+0xf>
   1235e:	ff e0                	jmp    *%rax
   12360:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   12365:	c3                   	ret    

0000000000012366 <fetchf_setting>:
   12366:	f3 0f 1e fa          	endbr64 
   1236a:	41 54                	push   %r12
   1236c:	4d 89 c4             	mov    %r8,%r12
   1236f:	55                   	push   %rbp
   12370:	4c 89 cd             	mov    %r9,%rbp
   12373:	53                   	push   %rbx
   12374:	48 83 ec 50          	sub    $0x50,%rsp
   12378:	48 8b 05 f1 7b 01 00 	mov    0x17bf1(%rip),%rax        # 29f70 <__stack_chk_guard>
   1237f:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   12384:	31 c0                	xor    %eax,%eax
   12386:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
   1238b:	48 85 c9             	test   %rcx,%rcx
   1238e:	74 03                	je     12393 <fetchf_setting+0x2d>
   12390:	48 89 cb             	mov    %rcx,%rbx
   12393:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   12398:	48 89 d9             	mov    %rbx,%rcx
   1239b:	e8 2e fa ff ff       	call   11dce <fetch_setting_copy>
   123a0:	85 c0                	test   %eax,%eax
   123a2:	78 29                	js     123cd <fetchf_setting+0x67>
   123a4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   123a8:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   123ad:	48 63 d0             	movslq %eax,%rdx
   123b0:	49 89 e8             	mov    %rbp,%r8
   123b3:	4c 89 e1             	mov    %r12,%rcx
   123b6:	e8 57 ff ff ff       	call   12312 <setting_format>
   123bb:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   123c0:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   123c4:	e8 86 a2 ff ff       	call   c64f <free>
   123c9:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   123cd:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   123d2:	48 2b 15 97 7b 01 00 	sub    0x17b97(%rip),%rdx        # 29f70 <__stack_chk_guard>
   123d9:	74 05                	je     123e0 <fetchf_setting+0x7a>
   123db:	e8 80 06 ff ff       	call   2a60 <__stack_chk_fail>
   123e0:	48 83 c4 50          	add    $0x50,%rsp
   123e4:	5b                   	pop    %rbx
   123e5:	5d                   	pop    %rbp
   123e6:	41 5c                	pop    %r12
   123e8:	c3                   	ret    

00000000000123e9 <fetchf_setting_copy>:
   123e9:	f3 0f 1e fa          	endbr64 
   123ed:	41 55                	push   %r13
   123ef:	4d 89 c5             	mov    %r8,%r13
   123f2:	41 54                	push   %r12
   123f4:	55                   	push   %rbp
   123f5:	48 89 cd             	mov    %rcx,%rbp
   123f8:	53                   	push   %rbx
   123f9:	48 83 ec 58          	sub    $0x58,%rsp
   123fd:	48 8b 05 6c 7b 01 00 	mov    0x17b6c(%rip),%rax        # 29f70 <__stack_chk_guard>
   12404:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   12409:	31 c0                	xor    %eax,%eax
   1240b:	48 8d 5c 24 18       	lea    0x18(%rsp),%rbx
   12410:	48 85 d2             	test   %rdx,%rdx
   12413:	74 03                	je     12418 <fetchf_setting_copy+0x2f>
   12415:	48 89 d3             	mov    %rdx,%rbx
   12418:	48 85 ed             	test   %rbp,%rbp
   1241b:	75 05                	jne    12422 <fetchf_setting_copy+0x39>
   1241d:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   12422:	45 31 c9             	xor    %r9d,%r9d
   12425:	45 31 c0             	xor    %r8d,%r8d
   12428:	48 89 e9             	mov    %rbp,%rcx
   1242b:	48 89 da             	mov    %rbx,%rdx
   1242e:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   12435:	00 
   12436:	e8 2b ff ff ff       	call   12366 <fetchf_setting>
   1243b:	41 89 c4             	mov    %eax,%r12d
   1243e:	85 c0                	test   %eax,%eax
   12440:	78 3c                	js     1247e <fetchf_setting_copy+0x95>
   12442:	44 8d 48 01          	lea    0x1(%rax),%r9d
   12446:	4d 63 c9             	movslq %r9d,%r9
   12449:	4c 89 cf             	mov    %r9,%rdi
   1244c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   12451:	e8 04 a2 ff ff       	call   c65a <zalloc>
   12456:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1245b:	48 85 c0             	test   %rax,%rax
   1245e:	49 89 45 00          	mov    %rax,0x0(%r13)
   12462:	49 89 c0             	mov    %rax,%r8
   12465:	75 08                	jne    1246f <fetchf_setting_copy+0x86>
   12467:	41 bc 77 df f3 ce    	mov    $0xcef3df77,%r12d
   1246d:	eb 0f                	jmp    1247e <fetchf_setting_copy+0x95>
   1246f:	48 8b 3b             	mov    (%rbx),%rdi
   12472:	31 c9                	xor    %ecx,%ecx
   12474:	31 d2                	xor    %edx,%edx
   12476:	48 89 ee             	mov    %rbp,%rsi
   12479:	e8 e8 fe ff ff       	call   12366 <fetchf_setting>
   1247e:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   12483:	48 2b 05 e6 7a 01 00 	sub    0x17ae6(%rip),%rax        # 29f70 <__stack_chk_guard>
   1248a:	74 05                	je     12491 <fetchf_setting_copy+0xa8>
   1248c:	e8 cf 05 ff ff       	call   2a60 <__stack_chk_fail>
   12491:	48 83 c4 58          	add    $0x58,%rsp
   12495:	44 89 e0             	mov    %r12d,%eax
   12498:	5b                   	pop    %rbx
   12499:	5d                   	pop    %rbp
   1249a:	41 5c                	pop    %r12
   1249c:	41 5d                	pop    %r13
   1249e:	c3                   	ret    

000000000001249f <storef_setting>:
   1249f:	f3 0f 1e fa          	endbr64 
   124a3:	41 57                	push   %r15
   124a5:	41 56                	push   %r14
   124a7:	49 89 f6             	mov    %rsi,%r14
   124aa:	41 55                	push   %r13
   124ac:	49 89 fd             	mov    %rdi,%r13
   124af:	41 54                	push   %r12
   124b1:	55                   	push   %rbp
   124b2:	48 83 ec 10          	sub    $0x10,%rsp
   124b6:	48 85 d2             	test   %rdx,%rdx
   124b9:	74 08                	je     124c3 <storef_setting+0x24>
   124bb:	80 3a 00             	cmpb   $0x0,(%rdx)
   124be:	49 89 d7             	mov    %rdx,%r15
   124c1:	75 1c                	jne    124df <storef_setting+0x40>
   124c3:	48 83 c4 10          	add    $0x10,%rsp
   124c7:	4c 89 f6             	mov    %r14,%rsi
   124ca:	4c 89 ef             	mov    %r13,%rdi
   124cd:	31 c9                	xor    %ecx,%ecx
   124cf:	5d                   	pop    %rbp
   124d0:	31 d2                	xor    %edx,%edx
   124d2:	41 5c                	pop    %r12
   124d4:	41 5d                	pop    %r13
   124d6:	41 5e                	pop    %r14
   124d8:	41 5f                	pop    %r15
   124da:	e9 a8 fc ff ff       	jmp    12187 <store_setting>
   124df:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
   124e3:	31 c9                	xor    %ecx,%ecx
   124e5:	31 d2                	xor    %edx,%edx
   124e7:	4c 89 fe             	mov    %r15,%rsi
   124ea:	e8 38 fe ff ff       	call   12327 <setting_parse>
   124ef:	85 c0                	test   %eax,%eax
   124f1:	78 4d                	js     12540 <storef_setting+0xa1>
   124f3:	4c 63 e0             	movslq %eax,%r12
   124f6:	4c 89 e7             	mov    %r12,%rdi
   124f9:	e8 43 a1 ff ff       	call   c641 <malloc>
   124fe:	48 89 c5             	mov    %rax,%rbp
   12501:	48 85 c0             	test   %rax,%rax
   12504:	75 07                	jne    1250d <storef_setting+0x6e>
   12506:	b8 77 df f3 ce       	mov    $0xcef3df77,%eax
   1250b:	eb 33                	jmp    12540 <storef_setting+0xa1>
   1250d:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   12511:	4c 89 e1             	mov    %r12,%rcx
   12514:	48 89 c2             	mov    %rax,%rdx
   12517:	4c 89 fe             	mov    %r15,%rsi
   1251a:	e8 08 fe ff ff       	call   12327 <setting_parse>
   1251f:	4c 89 e1             	mov    %r12,%rcx
   12522:	48 89 ea             	mov    %rbp,%rdx
   12525:	4c 89 f6             	mov    %r14,%rsi
   12528:	4c 89 ef             	mov    %r13,%rdi
   1252b:	e8 57 fc ff ff       	call   12187 <store_setting>
   12530:	48 89 ef             	mov    %rbp,%rdi
   12533:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   12537:	e8 13 a1 ff ff       	call   c64f <free>
   1253c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   12540:	48 83 c4 10          	add    $0x10,%rsp
   12544:	5d                   	pop    %rbp
   12545:	41 5c                	pop    %r12
   12547:	41 5d                	pop    %r13
   12549:	41 5e                	pop    %r14
   1254b:	41 5f                	pop    %r15
   1254d:	c3                   	ret    

000000000001254e <fetchn_setting>:
   1254e:	f3 0f 1e fa          	endbr64 
   12552:	41 54                	push   %r12
   12554:	4d 89 c4             	mov    %r8,%r12
   12557:	53                   	push   %rbx
   12558:	48 83 ec 58          	sub    $0x58,%rsp
   1255c:	48 8b 05 0d 7a 01 00 	mov    0x17a0d(%rip),%rax        # 29f70 <__stack_chk_guard>
   12563:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   12568:	31 c0                	xor    %eax,%eax
   1256a:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
   1256f:	48 85 c9             	test   %rcx,%rcx
   12572:	74 03                	je     12577 <fetchn_setting+0x29>
   12574:	48 89 cb             	mov    %rcx,%rbx
   12577:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1257c:	48 89 d9             	mov    %rbx,%rcx
   1257f:	e8 4a f8 ff ff       	call   11dce <fetch_setting_copy>
   12584:	85 c0                	test   %eax,%eax
   12586:	78 26                	js     125ae <fetchn_setting+0x60>
   12588:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1258c:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   12591:	48 63 d0             	movslq %eax,%rdx
   12594:	4c 89 e1             	mov    %r12,%rcx
   12597:	e8 a0 fd ff ff       	call   1233c <setting_numerate>
   1259c:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   125a1:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   125a5:	e8 a5 a0 ff ff       	call   c64f <free>
   125aa:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   125ae:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   125b3:	48 2b 15 b6 79 01 00 	sub    0x179b6(%rip),%rdx        # 29f70 <__stack_chk_guard>
   125ba:	74 05                	je     125c1 <fetchn_setting+0x73>
   125bc:	e8 9f 04 ff ff       	call   2a60 <__stack_chk_fail>
   125c1:	48 83 c4 58          	add    $0x58,%rsp
   125c5:	5b                   	pop    %rbx
   125c6:	41 5c                	pop    %r12
   125c8:	c3                   	ret    

00000000000125c9 <storen_setting>:
   125c9:	f3 0f 1e fa          	endbr64 
   125cd:	41 57                	push   %r15
   125cf:	31 c9                	xor    %ecx,%ecx
   125d1:	49 89 f7             	mov    %rsi,%r15
   125d4:	41 56                	push   %r14
   125d6:	49 89 d6             	mov    %rdx,%r14
   125d9:	31 d2                	xor    %edx,%edx
   125db:	41 55                	push   %r13
   125dd:	49 89 fd             	mov    %rdi,%r13
   125e0:	41 54                	push   %r12
   125e2:	55                   	push   %rbp
   125e3:	48 83 ec 10          	sub    $0x10,%rsp
   125e7:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
   125eb:	4c 89 f6             	mov    %r14,%rsi
   125ee:	e8 5e fd ff ff       	call   12351 <setting_denumerate>
   125f3:	85 c0                	test   %eax,%eax
   125f5:	78 4d                	js     12644 <storen_setting+0x7b>
   125f7:	4c 63 e0             	movslq %eax,%r12
   125fa:	4c 89 e7             	mov    %r12,%rdi
   125fd:	e8 3f a0 ff ff       	call   c641 <malloc>
   12602:	48 89 c5             	mov    %rax,%rbp
   12605:	48 85 c0             	test   %rax,%rax
   12608:	75 07                	jne    12611 <storen_setting+0x48>
   1260a:	b8 77 df f3 ce       	mov    $0xcef3df77,%eax
   1260f:	eb 33                	jmp    12644 <storen_setting+0x7b>
   12611:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   12615:	4c 89 e1             	mov    %r12,%rcx
   12618:	48 89 c2             	mov    %rax,%rdx
   1261b:	4c 89 f6             	mov    %r14,%rsi
   1261e:	e8 2e fd ff ff       	call   12351 <setting_denumerate>
   12623:	4c 89 e1             	mov    %r12,%rcx
   12626:	48 89 ea             	mov    %rbp,%rdx
   12629:	4c 89 fe             	mov    %r15,%rsi
   1262c:	4c 89 ef             	mov    %r13,%rdi
   1262f:	e8 53 fb ff ff       	call   12187 <store_setting>
   12634:	48 89 ef             	mov    %rbp,%rdi
   12637:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1263b:	e8 0f a0 ff ff       	call   c64f <free>
   12640:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   12644:	48 83 c4 10          	add    $0x10,%rsp
   12648:	5d                   	pop    %rbp
   12649:	41 5c                	pop    %r12
   1264b:	41 5d                	pop    %r13
   1264d:	41 5e                	pop    %r14
   1264f:	41 5f                	pop    %r15
   12651:	c3                   	ret    

0000000000012652 <find_setting>:
   12652:	f3 0f 1e fa          	endbr64 
   12656:	41 54                	push   %r12
   12658:	4c 8d 25 69 6b 01 00 	lea    0x16b69(%rip),%r12        # 291c8 <busid_setting>
   1265f:	55                   	push   %rbp
   12660:	48 8d 2d 69 72 01 00 	lea    0x17269(%rip),%rbp        # 298d0 <dns_applicator>
   12667:	53                   	push   %rbx
   12668:	48 89 fb             	mov    %rdi,%rbx
   1266b:	49 39 ec             	cmp    %rbp,%r12
   1266e:	73 16                	jae    12686 <find_setting+0x34>
   12670:	49 8b 34 24          	mov    (%r12),%rsi
   12674:	48 89 df             	mov    %rbx,%rdi
   12677:	e8 64 12 00 00       	call   138e0 <strcmp>
   1267c:	85 c0                	test   %eax,%eax
   1267e:	74 09                	je     12689 <find_setting+0x37>
   12680:	49 83 c4 28          	add    $0x28,%r12
   12684:	eb e5                	jmp    1266b <find_setting+0x19>
   12686:	45 31 e4             	xor    %r12d,%r12d
   12689:	4c 89 e0             	mov    %r12,%rax
   1268c:	5b                   	pop    %rbx
   1268d:	5d                   	pop    %rbp
   1268e:	41 5c                	pop    %r12
   12690:	c3                   	ret    

0000000000012691 <parse_setting_name>:
   12691:	f3 0f 1e fa          	endbr64 
   12695:	41 57                	push   %r15
   12697:	49 89 f7             	mov    %rsi,%r15
   1269a:	41 56                	push   %r14
   1269c:	49 89 d6             	mov    %rdx,%r14
   1269f:	41 55                	push   %r13
   126a1:	41 54                	push   %r12
   126a3:	49 89 fc             	mov    %rdi,%r12
   126a6:	48 89 cf             	mov    %rcx,%rdi
   126a9:	55                   	push   %rbp
   126aa:	48 89 cd             	mov    %rcx,%rbp
   126ad:	b9 28 00 00 00       	mov    $0x28,%ecx
   126b2:	53                   	push   %rbx
   126b3:	48 83 ec 28          	sub    $0x28,%rsp
   126b7:	48 8b 05 b2 78 01 00 	mov    0x178b2(%rip),%rax        # 29f70 <__stack_chk_guard>
   126be:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   126c3:	48 8d 05 96 49 01 00 	lea    0x14996(%rip),%rax        # 27060 <generic_settings_root>
   126ca:	48 89 02             	mov    %rax,(%rdx)
   126cd:	31 c0                	xor    %eax,%eax
   126cf:	f3 aa                	rep stos %al,%es:(%rdi)
   126d1:	48 8d 05 fc 1c 01 00 	lea    0x11cfc(%rip),%rax        # 243d4 <.LC0>
   126d8:	be 2f 00 00 00       	mov    $0x2f,%esi
   126dd:	4c 89 e7             	mov    %r12,%rdi
   126e0:	48 89 45 00          	mov    %rax,0x0(%rbp)
   126e4:	e8 5e 12 00 00       	call   13947 <strchr>
   126e9:	49 89 c5             	mov    %rax,%r13
   126ec:	48 85 c0             	test   %rax,%rax
   126ef:	74 0f                	je     12700 <parse_setting_name+0x6f>
   126f1:	48 8d 40 01          	lea    0x1(%rax),%rax
   126f5:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   126fa:	4d 89 e5             	mov    %r12,%r13
   126fd:	49 89 c4             	mov    %rax,%r12
   12700:	be 3a 00 00 00       	mov    $0x3a,%esi
   12705:	4c 89 e7             	mov    %r12,%rdi
   12708:	e8 3a 12 00 00       	call   13947 <strchr>
   1270d:	48 89 c3             	mov    %rax,%rbx
   12710:	48 85 c0             	test   %rax,%rax
   12713:	74 06                	je     1271b <parse_setting_name+0x8a>
   12715:	c6 00 00             	movb   $0x0,(%rax)
   12718:	48 ff c3             	inc    %rbx
   1271b:	4d 85 ed             	test   %r13,%r13
   1271e:	74 1d                	je     1273d <parse_setting_name+0xac>
   12720:	4c 89 fe             	mov    %r15,%rsi
   12723:	4c 89 ef             	mov    %r13,%rdi
   12726:	e8 c9 ee ff ff       	call   115f4 <parse_settings_name>
   1272b:	49 89 06             	mov    %rax,(%r14)
   1272e:	48 85 c0             	test   %rax,%rax
   12731:	75 0a                	jne    1273d <parse_setting_name+0xac>
   12733:	b8 79 df f3 d3       	mov    $0xd3f3df79,%eax
   12738:	e9 d0 00 00 00       	jmp    1280d <parse_setting_name+0x17c>
   1273d:	4c 89 e7             	mov    %r12,%rdi
   12740:	31 c0                	xor    %eax,%eax
   12742:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   12747:	48 c1 e0 08          	shl    $0x8,%rax
   1274b:	31 d2                	xor    %edx,%edx
   1274d:	4c 89 fe             	mov    %r15,%rsi
   12750:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   12755:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1275a:	e8 1c 13 00 00       	call   13a7b <strtoul>
   1275f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   12764:	48 0b 44 24 08       	or     0x8(%rsp),%rax
   12769:	8a 17                	mov    (%rdi),%dl
   1276b:	84 d2                	test   %dl,%dl
   1276d:	74 0c                	je     1277b <parse_setting_name+0xea>
   1276f:	80 fa 2e             	cmp    $0x2e,%dl
   12772:	75 05                	jne    12779 <parse_setting_name+0xe8>
   12774:	48 ff c7             	inc    %rdi
   12777:	eb ce                	jmp    12747 <parse_setting_name+0xb6>
   12779:	31 c0                	xor    %eax,%eax
   1277b:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1277f:	49 8b 06             	mov    (%r14),%rax
   12782:	4c 8d 3d 47 71 01 00 	lea    0x17147(%rip),%r15        # 298d0 <dns_applicator>
   12789:	4c 8d 35 38 6a 01 00 	lea    0x16a38(%rip),%r14        # 291c8 <busid_setting>
   12790:	48 8b 40 40          	mov    0x40(%rax),%rax
   12794:	4c 89 65 00          	mov    %r12,0x0(%rbp)
   12798:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1279c:	4d 39 fe             	cmp    %r15,%r14
   1279f:	73 27                	jae    127c8 <parse_setting_name+0x137>
   127a1:	48 89 ee             	mov    %rbp,%rsi
   127a4:	4c 89 f7             	mov    %r14,%rdi
   127a7:	e8 6e f2 ff ff       	call   11a1a <setting_cmp>
   127ac:	85 c0                	test   %eax,%eax
   127ae:	75 12                	jne    127c2 <parse_setting_name+0x131>
   127b0:	ba 28 00 00 00       	mov    $0x28,%edx
   127b5:	4c 89 f6             	mov    %r14,%rsi
   127b8:	48 89 ef             	mov    %rbp,%rdi
   127bb:	e8 4d 4b 00 00       	call   1730d <__memcpy>
   127c0:	eb 06                	jmp    127c8 <parse_setting_name+0x137>
   127c2:	49 83 c6 28          	add    $0x28,%r14
   127c6:	eb d4                	jmp    1279c <parse_setting_name+0x10b>
   127c8:	4c 8d 35 51 67 01 00 	lea    0x16751(%rip),%r14        # 28f20 <setting_type_dnssl>
   127cf:	4c 8d 3d f2 69 01 00 	lea    0x169f2(%rip),%r15        # 291c8 <busid_setting>
   127d6:	48 85 db             	test   %rbx,%rbx
   127d9:	75 17                	jne    127f2 <parse_setting_name+0x161>
   127db:	31 c0                	xor    %eax,%eax
   127dd:	eb 3d                	jmp    1281c <parse_setting_name+0x18b>
   127df:	49 8b 36             	mov    (%r14),%rsi
   127e2:	48 89 df             	mov    %rbx,%rdi
   127e5:	e8 f6 10 00 00       	call   138e0 <strcmp>
   127ea:	85 c0                	test   %eax,%eax
   127ec:	74 0c                	je     127fa <parse_setting_name+0x169>
   127ee:	49 83 c6 28          	add    $0x28,%r14
   127f2:	4d 39 fe             	cmp    %r15,%r14
   127f5:	72 e8                	jb     127df <parse_setting_name+0x14e>
   127f7:	45 31 f6             	xor    %r14d,%r14d
   127fa:	4c 89 75 10          	mov    %r14,0x10(%rbp)
   127fe:	4d 85 f6             	test   %r14,%r14
   12801:	75 d8                	jne    127db <parse_setting_name+0x14a>
   12803:	b8 7d df f3 c3       	mov    $0xc3f3df7d,%eax
   12808:	4d 85 ed             	test   %r13,%r13
   1280b:	74 0b                	je     12818 <parse_setting_name+0x187>
   1280d:	41 c6 44 24 ff 2f    	movb   $0x2f,-0x1(%r12)
   12813:	48 85 db             	test   %rbx,%rbx
   12816:	74 04                	je     1281c <parse_setting_name+0x18b>
   12818:	c6 43 ff 3a          	movb   $0x3a,-0x1(%rbx)
   1281c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   12821:	48 2b 15 48 77 01 00 	sub    0x17748(%rip),%rdx        # 29f70 <__stack_chk_guard>
   12828:	74 05                	je     1282f <parse_setting_name+0x19e>
   1282a:	e8 31 02 ff ff       	call   2a60 <__stack_chk_fail>
   1282f:	48 83 c4 28          	add    $0x28,%rsp
   12833:	5b                   	pop    %rbx
   12834:	5d                   	pop    %rbp
   12835:	41 5c                	pop    %r12
   12837:	41 5d                	pop    %r13
   12839:	41 5e                	pop    %r14
   1283b:	41 5f                	pop    %r15
   1283d:	c3                   	ret    

000000000001283e <setting_name>:
   1283e:	f3 0f 1e fa          	endbr64 
   12842:	41 54                	push   %r12
   12844:	49 89 cc             	mov    %rcx,%r12
   12847:	55                   	push   %rbp
   12848:	48 89 d5             	mov    %rdx,%rbp
   1284b:	53                   	push   %rbx
   1284c:	48 89 f3             	mov    %rsi,%rbx
   1284f:	e8 63 f0 ff ff       	call   118b7 <settings_target>
   12854:	48 89 c7             	mov    %rax,%rdi
   12857:	e8 d9 f0 ff ff       	call   11935 <settings_name>
   1285c:	4c 8b 0b             	mov    (%rbx),%r9
   1285f:	4c 89 e6             	mov    %r12,%rsi
   12862:	48 89 ef             	mov    %rbp,%rdi
   12865:	48 89 c1             	mov    %rax,%rcx
   12868:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1286c:	48 8d 15 61 1b 01 00 	lea    0x11b61(%rip),%rdx        # 243d4 <.LC0>
   12873:	4c 8d 05 86 10 01 00 	lea    0x11086(%rip),%r8        # 23900 <.LC0>
   1287a:	80 39 00             	cmpb   $0x0,(%rcx)
   1287d:	4c 0f 44 c2          	cmove  %rdx,%r8
   12881:	52                   	push   %rdx
   12882:	48 8d 15 fa 0e 01 00 	lea    0x10efa(%rip),%rdx        # 23783 <.LC8>
   12889:	ff 30                	push   (%rax)
   1288b:	31 c0                	xor    %eax,%eax
   1288d:	e8 ef 47 00 00       	call   17081 <snprintf>
   12892:	59                   	pop    %rcx
   12893:	5e                   	pop    %rsi
   12894:	5b                   	pop    %rbx
   12895:	5d                   	pop    %rbp
   12896:	41 5c                	pop    %r12
   12898:	c3                   	ret    

0000000000012899 <expand_settings>:
   12899:	f3 0f 1e fa          	endbr64 
   1289d:	41 56                	push   %r14
   1289f:	41 55                	push   %r13
   128a1:	41 54                	push   %r12
   128a3:	55                   	push   %rbp
   128a4:	53                   	push   %rbx
   128a5:	48 83 ec 50          	sub    $0x50,%rsp
   128a9:	48 8b 05 c0 76 01 00 	mov    0x176c0(%rip),%rax        # 29f70 <__stack_chk_guard>
   128b0:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   128b5:	31 c0                	xor    %eax,%eax
   128b7:	e8 91 11 00 00       	call   13a4d <strdup>
   128bc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   128c1:	48 85 c0             	test   %rax,%rax
   128c4:	0f 84 b5 00 00 00    	je     1297f <expand_settings+0xe6>
   128ca:	48 8d 2d 0b f0 ff ff 	lea    -0xff5(%rip),%rbp        # 118dc <find_child_settings>
   128d1:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   128d6:	31 ff                	xor    %edi,%edi
   128d8:	48 89 d8             	mov    %rbx,%rax
   128db:	8a 10                	mov    (%rax),%dl
   128dd:	84 d2                	test   %dl,%dl
   128df:	0f 84 b6 00 00 00    	je     1299b <expand_settings+0x102>
   128e5:	80 fa 24             	cmp    $0x24,%dl
   128e8:	4c 8d 60 01          	lea    0x1(%rax),%r12
   128ec:	75 06                	jne    128f4 <expand_settings+0x5b>
   128ee:	80 78 01 7b          	cmpb   $0x7b,0x1(%rax)
   128f2:	74 0c                	je     12900 <expand_settings+0x67>
   128f4:	48 85 ff             	test   %rdi,%rdi
   128f7:	74 0a                	je     12903 <expand_settings+0x6a>
   128f9:	80 fa 7d             	cmp    $0x7d,%dl
   128fc:	75 05                	jne    12903 <expand_settings+0x6a>
   128fe:	eb 08                	jmp    12908 <expand_settings+0x6f>
   12900:	48 89 c7             	mov    %rax,%rdi
   12903:	4c 89 e0             	mov    %r12,%rax
   12906:	eb d3                	jmp    128db <expand_settings+0x42>
   12908:	c6 07 00             	movb   $0x0,(%rdi)
   1290b:	4c 8d 6c 24 20       	lea    0x20(%rsp),%r13
   12910:	48 83 c7 02          	add    $0x2,%rdi
   12914:	48 89 ee             	mov    %rbp,%rsi
   12917:	c6 00 00             	movb   $0x0,(%rax)
   1291a:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1291f:	4c 89 e9             	mov    %r13,%rcx
   12922:	e8 6a fd ff ff       	call   12691 <parse_setting_name>
   12927:	85 c0                	test   %eax,%eax
   12929:	74 58                	je     12983 <expand_settings+0xea>
   1292b:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   12932:	00 00 
   12934:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   12939:	48 89 da             	mov    %rbx,%rdx
   1293c:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   12941:	4d 89 e0             	mov    %r12,%r8
   12944:	48 8d 0d 89 1a 01 00 	lea    0x11a89(%rip),%rcx        # 243d4 <.LC0>
   1294b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   12950:	4d 85 ed             	test   %r13,%r13
   12953:	48 8d 35 6a fe 00 00 	lea    0xfe6a(%rip),%rsi        # 227c4 <.LC3>
   1295a:	49 0f 45 cd          	cmovne %r13,%rcx
   1295e:	31 c0                	xor    %eax,%eax
   12960:	e8 3e 57 00 00       	call   180a3 <asprintf>
   12965:	4c 89 ef             	mov    %r13,%rdi
   12968:	89 c3                	mov    %eax,%ebx
   1296a:	e8 e0 9c ff ff       	call   c64f <free>
   1296f:	4c 89 f7             	mov    %r14,%rdi
   12972:	e8 d8 9c ff ff       	call   c64f <free>
   12977:	85 db                	test   %ebx,%ebx
   12979:	0f 89 52 ff ff ff    	jns    128d1 <expand_settings+0x38>
   1297f:	31 db                	xor    %ebx,%ebx
   12981:	eb 18                	jmp    1299b <expand_settings+0x102>
   12983:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   12988:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
   1298d:	31 c9                	xor    %ecx,%ecx
   1298f:	31 d2                	xor    %edx,%edx
   12991:	4c 89 ee             	mov    %r13,%rsi
   12994:	e8 50 fa ff ff       	call   123e9 <fetchf_setting_copy>
   12999:	eb 99                	jmp    12934 <expand_settings+0x9b>
   1299b:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   129a0:	48 2b 05 c9 75 01 00 	sub    0x175c9(%rip),%rax        # 29f70 <__stack_chk_guard>
   129a7:	74 05                	je     129ae <expand_settings+0x115>
   129a9:	e8 b2 00 ff ff       	call   2a60 <__stack_chk_fail>
   129ae:	48 83 c4 50          	add    $0x50,%rsp
   129b2:	48 89 d8             	mov    %rbx,%rax
   129b5:	5b                   	pop    %rbx
   129b6:	5d                   	pop    %rbp
   129b7:	41 5c                	pop    %r12
   129b9:	41 5d                	pop    %r13
   129bb:	41 5e                	pop    %r14
   129bd:	c3                   	ret    

00000000000129be <vmsg>:
   129be:	55                   	push   %rbp
   129bf:	49 89 f0             	mov    %rsi,%r8
   129c2:	48 89 d1             	mov    %rdx,%rcx
   129c5:	48 89 e5             	mov    %rsp,%rbp
   129c8:	41 54                	push   %r12
   129ca:	41 89 fc             	mov    %edi,%r12d
   129cd:	48 83 ec 18          	sub    $0x18,%rsp
   129d1:	8b 35 dd 1b 01 00    	mov    0x11bdd(%rip),%esi        # 245b4 <console_width>
   129d7:	48 8b 05 92 75 01 00 	mov    0x17592(%rip),%rax        # 29f70 <__stack_chk_guard>
   129de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   129e2:	31 c0                	xor    %eax,%eax
   129e4:	48 89 e2             	mov    %rsp,%rdx
   129e7:	48 8d 46 0f          	lea    0xf(%rsi),%rax
   129eb:	48 c1 e8 04          	shr    $0x4,%rax
   129ef:	48 c1 e0 04          	shl    $0x4,%rax
   129f3:	48 89 c7             	mov    %rax,%rdi
   129f6:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
   129fd:	48 29 fa             	sub    %rdi,%rdx
   12a00:	48 39 d4             	cmp    %rdx,%rsp
   12a03:	74 12                	je     12a17 <vmsg+0x59>
   12a05:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   12a0c:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   12a13:	00 00 
   12a15:	eb e9                	jmp    12a00 <vmsg+0x42>
   12a17:	25 ff 0f 00 00       	and    $0xfff,%eax
   12a1c:	48 29 c4             	sub    %rax,%rsp
   12a1f:	48 85 c0             	test   %rax,%rax
   12a22:	74 06                	je     12a2a <vmsg+0x6c>
   12a24:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   12a2a:	4c 89 c2             	mov    %r8,%rdx
   12a2d:	48 89 e7             	mov    %rsp,%rdi
   12a30:	e8 df 45 00 00       	call   17014 <vsnprintf>
   12a35:	8b 15 79 1b 01 00    	mov    0x11b79(%rip),%edx        # 245b4 <console_width>
   12a3b:	44 89 e6             	mov    %r12d,%esi
   12a3e:	4c 8d 25 3b 3e 01 00 	lea    0x13e3b(%rip),%r12        # 26880 <_stdscr>
   12a45:	48 98                	cltq   
   12a47:	4c 89 e7             	mov    %r12,%rdi
   12a4a:	48 29 c2             	sub    %rax,%rdx
   12a4d:	48 d1 ea             	shr    %rdx
   12a50:	e8 8a aa ff ff       	call   d4df <wmove>
   12a55:	85 c0                	test   %eax,%eax
   12a57:	75 12                	jne    12a6b <vmsg+0xad>
   12a59:	48 89 e2             	mov    %rsp,%rdx
   12a5c:	48 8d 35 be 0b 01 00 	lea    0x10bbe(%rip),%rsi        # 23621 <.LC0>
   12a63:	4c 89 e7             	mov    %r12,%rdi
   12a66:	e8 51 ce ff ff       	call   f8bc <wprintw>
   12a6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a6f:	48 2b 05 fa 74 01 00 	sub    0x174fa(%rip),%rax        # 29f70 <__stack_chk_guard>
   12a76:	74 05                	je     12a7d <vmsg+0xbf>
   12a78:	e8 e3 ff fe ff       	call   2a60 <__stack_chk_fail>
   12a7d:	4c 8b 65 f8          	mov    -0x8(%rbp),%r12
   12a81:	c9                   	leave  
   12a82:	c3                   	ret    

0000000000012a83 <msg>:
   12a83:	48 83 ec 58          	sub    $0x58,%rsp
   12a87:	48 8b 05 e2 74 01 00 	mov    0x174e2(%rip),%rax        # 29f70 <__stack_chk_guard>
   12a8e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   12a93:	31 c0                	xor    %eax,%eax
   12a95:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   12a9a:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   12a9f:	48 89 e2             	mov    %rsp,%rdx
   12aa2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   12aa7:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   12aac:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   12ab1:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   12ab6:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   12abb:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   12ac0:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   12ac7:	e8 f2 fe ff ff       	call   129be <vmsg>
   12acc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   12ad1:	48 2b 05 98 74 01 00 	sub    0x17498(%rip),%rax        # 29f70 <__stack_chk_guard>
   12ad8:	74 05                	je     12adf <msg+0x5c>
   12ada:	e8 81 ff fe ff       	call   2a60 <__stack_chk_fail>
   12adf:	48 83 c4 58          	add    $0x58,%rsp
   12ae3:	c3                   	ret    

0000000000012ae4 <string_copy>:
   12ae4:	41 55                	push   %r13
   12ae6:	49 89 fd             	mov    %rdi,%r13
   12ae9:	48 89 f7             	mov    %rsi,%rdi
   12aec:	41 54                	push   %r12
   12aee:	49 89 d4             	mov    %rdx,%r12
   12af1:	48 83 ec 18          	sub    $0x18,%rsp
   12af5:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   12afa:	e8 3b 0e 00 00       	call   1393a <strlen>
   12aff:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   12b04:	4c 89 ef             	mov    %r13,%rdi
   12b07:	4c 39 e0             	cmp    %r12,%rax
   12b0a:	4c 0f 46 e0          	cmovbe %rax,%r12
   12b0e:	4c 89 e2             	mov    %r12,%rdx
   12b11:	e8 f7 47 00 00       	call   1730d <__memcpy>
   12b16:	48 83 c4 18          	add    $0x18,%rsp
   12b1a:	4c 89 e0             	mov    %r12,%rax
   12b1d:	41 5c                	pop    %r12
   12b1f:	41 5d                	pop    %r13
   12b21:	c3                   	ret    

0000000000012b22 <select_setting_row>:
   12b22:	41 57                	push   %r15
   12b24:	b9 88 01 00 00       	mov    $0x188,%ecx
   12b29:	41 56                	push   %r14
   12b2b:	41 55                	push   %r13
   12b2d:	41 89 f5             	mov    %esi,%r13d
   12b30:	41 54                	push   %r12
   12b32:	55                   	push   %rbp
   12b33:	53                   	push   %rbx
   12b34:	48 89 fb             	mov    %rdi,%rbx
   12b37:	48 83 c7 18          	add    $0x18,%rdi
   12b3b:	48 83 ec 18          	sub    $0x18,%rsp
   12b3f:	8b 05 6f 1a 01 00    	mov    0x11a6f(%rip),%eax        # 245b4 <console_width>
   12b45:	83 e8 14             	sub    $0x14,%eax
   12b48:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   12b4c:	31 c0                	xor    %eax,%eax
   12b4e:	f3 aa                	rep stos %al,%es:(%rdi)
   12b50:	8d 46 03             	lea    0x3(%rsi),%eax
   12b53:	2b 43 14             	sub    0x14(%rbx),%eax
   12b56:	4c 8d b3 9c 00 00 00 	lea    0x9c(%rbx),%r14
   12b5d:	45 31 e4             	xor    %r12d,%r12d
   12b60:	89 43 50             	mov    %eax,0x50(%rbx)
   12b63:	48 8b 03             	mov    (%rbx),%rax
   12b66:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b6a:	48 85 c0             	test   %rax,%rax
   12b6d:	74 24                	je     12b93 <select_setting_row+0x71>
   12b6f:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   12b75:	85 f6                	test   %esi,%esi
   12b77:	75 1a                	jne    12b93 <select_setting_row+0x71>
   12b79:	48 89 43 18          	mov    %rax,0x18(%rbx)
   12b7d:	48 8d 15 7a 0d 01 00 	lea    0x10d7a(%rip),%rdx        # 238fe <.LC1>
   12b84:	4c 89 f7             	mov    %r14,%rdi
   12b87:	31 c0                	xor    %eax,%eax
   12b89:	be 00 01 00 00       	mov    $0x100,%esi
   12b8e:	e8 ee 44 00 00       	call   17081 <snprintf>
   12b93:	48 8b 03             	mov    (%rbx),%rax
   12b96:	4c 8d 3d a4 18 01 00 	lea    0x118a4(%rip),%r15        # 24441 <.LC2>
   12b9d:	48 8b 68 28          	mov    0x28(%rax),%rbp
   12ba1:	48 83 ed 18          	sub    $0x18,%rbp
   12ba5:	48 8b 03             	mov    (%rbx),%rax
   12ba8:	48 8d 55 18          	lea    0x18(%rbp),%rdx
   12bac:	48 83 c0 28          	add    $0x28,%rax
   12bb0:	48 39 c2             	cmp    %rax,%rdx
   12bb3:	74 2c                	je     12be1 <select_setting_row+0xbf>
   12bb5:	45 39 e5             	cmp    %r12d,%r13d
   12bb8:	75 1a                	jne    12bd4 <select_setting_row+0xb2>
   12bba:	48 89 6b 18          	mov    %rbp,0x18(%rbx)
   12bbe:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
   12bc2:	4c 89 fa             	mov    %r15,%rdx
   12bc5:	be 00 01 00 00       	mov    $0x100,%esi
   12bca:	4c 89 f7             	mov    %r14,%rdi
   12bcd:	31 c0                	xor    %eax,%eax
   12bcf:	e8 ad 44 00 00       	call   17081 <snprintf>
   12bd4:	48 8b 6d 18          	mov    0x18(%rbp),%rbp
   12bd8:	41 ff c4             	inc    %r12d
   12bdb:	48 83 ed 18          	sub    $0x18,%rbp
   12bdf:	eb c4                	jmp    12ba5 <select_setting_row+0x83>
   12be1:	45 31 ff             	xor    %r15d,%r15d
   12be4:	48 8d 2d dd 65 01 00 	lea    0x165dd(%rip),%rbp        # 291c8 <busid_setting>
   12beb:	48 8d 05 de 6c 01 00 	lea    0x16cde(%rip),%rax        # 298d0 <dns_applicator>
   12bf2:	48 39 c5             	cmp    %rax,%rbp
   12bf5:	73 59                	jae    12c50 <select_setting_row+0x12e>
   12bf7:	48 8b 3b             	mov    (%rbx),%rdi
   12bfa:	48 89 ee             	mov    %rbp,%rsi
   12bfd:	e8 c2 ed ff ff       	call   119c4 <setting_applies>
   12c02:	85 c0                	test   %eax,%eax
   12c04:	74 44                	je     12c4a <select_setting_row+0x128>
   12c06:	4d 85 ff             	test   %r15,%r15
   12c09:	75 28                	jne    12c33 <select_setting_row+0x111>
   12c0b:	45 8d 7c 24 01       	lea    0x1(%r12),%r15d
   12c10:	45 39 ec             	cmp    %r13d,%r12d
   12c13:	75 2f                	jne    12c44 <select_setting_row+0x122>
   12c15:	48 8b 3b             	mov    (%rbx),%rdi
   12c18:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
   12c1c:	48 8d 53 20          	lea    0x20(%rbx),%rdx
   12c20:	4d 89 f0             	mov    %r14,%r8
   12c23:	41 b9 00 01 00 00    	mov    $0x100,%r9d
   12c29:	48 89 ee             	mov    %rbp,%rsi
   12c2c:	e8 35 f7 ff ff       	call   12366 <fetchf_setting>
   12c31:	eb 11                	jmp    12c44 <select_setting_row+0x122>
   12c33:	4c 89 fe             	mov    %r15,%rsi
   12c36:	48 89 ef             	mov    %rbp,%rdi
   12c39:	e8 dc ed ff ff       	call   11a1a <setting_cmp>
   12c3e:	85 c0                	test   %eax,%eax
   12c40:	75 c9                	jne    12c0b <select_setting_row+0xe9>
   12c42:	eb 06                	jmp    12c4a <select_setting_row+0x128>
   12c44:	45 89 fc             	mov    %r15d,%r12d
   12c47:	49 89 ef             	mov    %rbp,%r15
   12c4a:	48 83 c5 28          	add    $0x28,%rbp
   12c4e:	eb 9b                	jmp    12beb <select_setting_row+0xc9>
   12c50:	6a 00                	push   $0x0
   12c52:	8b 44 24 14          	mov    0x14(%rsp),%eax
   12c56:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
   12c5a:	4c 89 f6             	mov    %r14,%rsi
   12c5d:	44 8b 43 50          	mov    0x50(%rbx),%r8d
   12c61:	41 b9 12 00 00 00    	mov    $0x12,%r9d
   12c67:	31 c9                	xor    %ecx,%ecx
   12c69:	ba 00 01 00 00       	mov    $0x100,%edx
   12c6e:	50                   	push   %rax
   12c6f:	e8 87 80 00 00       	call   1acfb <init_editbox>
   12c74:	48 83 c4 28          	add    $0x28,%rsp
   12c78:	44 89 e0             	mov    %r12d,%eax
   12c7b:	5b                   	pop    %rbx
   12c7c:	5d                   	pop    %rbp
   12c7d:	41 5c                	pop    %r12
   12c7f:	41 5d                	pop    %r13
   12c81:	41 5e                	pop    %r14
   12c83:	41 5f                	pop    %r15
   12c85:	c3                   	ret    

0000000000012c86 <colour_set.constprop.0>:
   12c86:	0f bf f7             	movswl %di,%esi
   12c89:	31 d2                	xor    %edx,%edx
   12c8b:	48 8d 3d ee 3b 01 00 	lea    0x13bee(%rip),%rdi        # 26880 <_stdscr>
   12c92:	e9 ae 45 00 00       	jmp    17245 <wcolour_set>

0000000000012c97 <mvaddstr.constprop.0.isra.0>:
   12c97:	41 54                	push   %r12
   12c99:	4c 8d 25 e0 3b 01 00 	lea    0x13be0(%rip),%r12        # 26880 <_stdscr>
   12ca0:	ba 02 00 00 00       	mov    $0x2,%edx
   12ca5:	55                   	push   %rbp
   12ca6:	48 89 f5             	mov    %rsi,%rbp
   12ca9:	89 fe                	mov    %edi,%esi
   12cab:	4c 89 e7             	mov    %r12,%rdi
   12cae:	41 50                	push   %r8
   12cb0:	e8 2a a8 ff ff       	call   d4df <wmove>
   12cb5:	85 c0                	test   %eax,%eax
   12cb7:	75 12                	jne    12ccb <mvaddstr.constprop.0.isra.0+0x34>
   12cb9:	59                   	pop    %rcx
   12cba:	48 89 ee             	mov    %rbp,%rsi
   12cbd:	4c 89 e7             	mov    %r12,%rdi
   12cc0:	5d                   	pop    %rbp
   12cc1:	83 ca ff             	or     $0xffffffff,%edx
   12cc4:	41 5c                	pop    %r12
   12cc6:	e9 97 cb ff ff       	jmp    f862 <waddnstr>
   12ccb:	58                   	pop    %rax
   12ccc:	5d                   	pop    %rbp
   12ccd:	41 5c                	pop    %r12
   12ccf:	c3                   	ret    

0000000000012cd0 <draw_setting_row>:
   12cd0:	55                   	push   %rbp
   12cd1:	48 89 e5             	mov    %rsp,%rbp
   12cd4:	41 56                	push   %r14
   12cd6:	41 55                	push   %r13
   12cd8:	41 54                	push   %r12
   12cda:	53                   	push   %rbx
   12cdb:	48 89 fb             	mov    %rdi,%rbx
   12cde:	48 83 ec 10          	sub    $0x10,%rsp
   12ce2:	48 8b 05 87 72 01 00 	mov    0x17287(%rip),%rax        # 29f70 <__stack_chk_guard>
   12ce9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   12ced:	8b 05 c1 18 01 00    	mov    0x118c1(%rip),%eax        # 245b4 <console_width>
   12cf3:	48 89 e6             	mov    %rsp,%rsi
   12cf6:	44 8d 60 ec          	lea    -0x14(%rax),%r12d
   12cfa:	44 8d 40 fc          	lea    -0x4(%rax),%r8d
   12cfe:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
   12d03:	4c 39 c2             	cmp    %r8,%rdx
   12d06:	49 0f 42 d0          	cmovb  %r8,%rdx
   12d0a:	48 8d 42 12          	lea    0x12(%rdx),%rax
   12d0e:	48 8d 4a 03          	lea    0x3(%rdx),%rcx
   12d12:	48 c1 e8 04          	shr    $0x4,%rax
   12d16:	48 c1 e0 04          	shl    $0x4,%rax
   12d1a:	48 89 c7             	mov    %rax,%rdi
   12d1d:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
   12d24:	48 29 fe             	sub    %rdi,%rsi
   12d27:	48 39 f4             	cmp    %rsi,%rsp
   12d2a:	74 12                	je     12d3e <draw_setting_row+0x6e>
   12d2c:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   12d33:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   12d3a:	00 00 
   12d3c:	eb e9                	jmp    12d27 <draw_setting_row+0x57>
   12d3e:	25 ff 0f 00 00       	and    $0xfff,%eax
   12d43:	48 29 c4             	sub    %rax,%rsp
   12d46:	48 85 c0             	test   %rax,%rax
   12d49:	74 06                	je     12d51 <draw_setting_row+0x81>
   12d4b:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   12d51:	49 89 e5             	mov    %rsp,%r13
   12d54:	48 89 e7             	mov    %rsp,%rdi
   12d57:	b8 20 00 00 00       	mov    $0x20,%eax
   12d5c:	f3 aa                	rep stos %al,%es:(%rdi)
   12d5e:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
   12d63:	c6 44 14 02 00       	movb   $0x0,0x2(%rsp,%rdx,1)
   12d68:	4c 8d 4c 24 01       	lea    0x1(%rsp),%r9
   12d6d:	4c 8d b3 9c 00 00 00 	lea    0x9c(%rbx),%r14
   12d74:	74 14                	je     12d8a <draw_setting_row+0xba>
   12d76:	4c 89 c2             	mov    %r8,%rdx
   12d79:	4c 89 f6             	mov    %r14,%rsi
   12d7c:	4c 89 cf             	mov    %r9,%rdi
   12d7f:	e8 60 fd ff ff       	call   12ae4 <string_copy>
   12d84:	44 8d 60 01          	lea    0x1(%rax),%r12d
   12d88:	eb 46                	jmp    12dd0 <draw_setting_row+0x100>
   12d8a:	4c 89 cf             	mov    %r9,%rdi
   12d8d:	b9 0f 00 00 00       	mov    $0xf,%ecx
   12d92:	b8 2e 00 00 00       	mov    $0x2e,%eax
   12d97:	f3 aa                	rep stos %al,%es:(%rdi)
   12d99:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   12d9d:	4c 89 cf             	mov    %r9,%rdi
   12da0:	ba 0f 00 00 00       	mov    $0xf,%edx
   12da5:	e8 3a fd ff ff       	call   12ae4 <string_copy>
   12daa:	80 bb 9c 00 00 00 00 	cmpb   $0x0,0x9c(%rbx)
   12db1:	4c 89 e2             	mov    %r12,%rdx
   12db4:	48 8d 05 47 0b 01 00 	lea    0x10b47(%rip),%rax        # 23902 <.LC3>
   12dbb:	4c 0f 44 f0          	cmove  %rax,%r14
   12dbf:	48 8d 7c 24 11       	lea    0x11(%rsp),%rdi
   12dc4:	4c 89 f6             	mov    %r14,%rsi
   12dc7:	e8 18 fd ff ff       	call   12ae4 <string_copy>
   12dcc:	44 8d 60 11          	lea    0x11(%rax),%r12d
   12dd0:	48 8b 03             	mov    (%rbx),%rax
   12dd3:	48 39 43 20          	cmp    %rax,0x20(%rbx)
   12dd7:	4c 8d 35 a2 3a 01 00 	lea    0x13aa2(%rip),%r14        # 26880 <_stdscr>
   12dde:	74 07                	je     12de7 <draw_setting_row+0x117>
   12de0:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
   12de5:	74 0d                	je     12df4 <draw_setting_row+0x124>
   12de7:	be 00 00 04 00       	mov    $0x40000,%esi
   12dec:	4c 89 f7             	mov    %r14,%rdi
   12def:	e8 33 44 00 00       	call   17227 <wattron>
   12df4:	8b 73 50             	mov    0x50(%rbx),%esi
   12df7:	ba 01 00 00 00       	mov    $0x1,%edx
   12dfc:	4c 89 f7             	mov    %r14,%rdi
   12dff:	e8 db a6 ff ff       	call   d4df <wmove>
   12e04:	85 c0                	test   %eax,%eax
   12e06:	75 12                	jne    12e1a <draw_setting_row+0x14a>
   12e08:	4c 89 ea             	mov    %r13,%rdx
   12e0b:	48 8d 35 0f 08 01 00 	lea    0x1080f(%rip),%rsi        # 23621 <.LC0>
   12e12:	4c 89 f7             	mov    %r14,%rdi
   12e15:	e8 a2 ca ff ff       	call   f8bc <wprintw>
   12e1a:	be 00 00 04 00       	mov    $0x40000,%esi
   12e1f:	4c 89 f7             	mov    %r14,%rdi
   12e22:	e8 f4 43 00 00       	call   1721b <wattroff>
   12e27:	8b 73 50             	mov    0x50(%rbx),%esi
   12e2a:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   12e2f:	4c 89 f7             	mov    %r14,%rdi
   12e32:	e8 a8 a6 ff ff       	call   d4df <wmove>
   12e37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e3b:	48 2b 05 2e 71 01 00 	sub    0x1712e(%rip),%rax        # 29f70 <__stack_chk_guard>
   12e42:	74 05                	je     12e49 <draw_setting_row+0x179>
   12e44:	e8 17 fc fe ff       	call   2a60 <__stack_chk_fail>
   12e49:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
   12e4d:	5b                   	pop    %rbx
   12e4e:	41 5c                	pop    %r12
   12e50:	41 5d                	pop    %r13
   12e52:	41 5e                	pop    %r14
   12e54:	5d                   	pop    %rbp
   12e55:	c3                   	ret    

0000000000012e56 <clearmsg>:
   12e56:	55                   	push   %rbp
   12e57:	48 8d 2d 22 3a 01 00 	lea    0x13a22(%rip),%rbp        # 26880 <_stdscr>
   12e5e:	89 fe                	mov    %edi,%esi
   12e60:	31 d2                	xor    %edx,%edx
   12e62:	48 89 ef             	mov    %rbp,%rdi
   12e65:	e8 75 a6 ff ff       	call   d4df <wmove>
   12e6a:	48 89 ef             	mov    %rbp,%rdi
   12e6d:	5d                   	pop    %rbp
   12e6e:	e9 38 63 00 00       	jmp    191ab <wclrtoeol>

0000000000012e73 <draw_setting_rows>:
   12e73:	41 54                	push   %r12
   12e75:	4c 8d 25 27 0f 01 00 	lea    0x10f27(%rip),%r12        # 23da3 <.LC0>
   12e7c:	55                   	push   %rbp
   12e7d:	48 8d 2d d0 0a 01 00 	lea    0x10ad0(%rip),%rbp        # 23954 <.LC2>
   12e84:	53                   	push   %rbx
   12e85:	48 89 fb             	mov    %rdi,%rbx
   12e88:	bf 03 00 00 00       	mov    $0x3,%edi
   12e8d:	e8 f4 fd ff ff       	call   12c86 <colour_set.constprop.0>
   12e92:	83 7b 14 00          	cmpl   $0x0,0x14(%rbx)
   12e96:	4c 89 e6             	mov    %r12,%rsi
   12e99:	bf 02 00 00 00       	mov    $0x2,%edi
   12e9e:	48 0f 44 f5          	cmove  %rbp,%rsi
   12ea2:	e8 f0 fd ff ff       	call   12c97 <mvaddstr.constprop.0.isra.0>
   12ea7:	8b 43 08             	mov    0x8(%rbx),%eax
   12eaa:	4c 89 e6             	mov    %r12,%rsi
   12ead:	03 43 14             	add    0x14(%rbx),%eax
   12eb0:	3b 43 0c             	cmp    0xc(%rbx),%eax
   12eb3:	8b 05 f7 16 01 00    	mov    0x116f7(%rip),%eax        # 245b0 <console_height>
   12eb9:	48 0f 43 f5          	cmovae %rbp,%rsi
   12ebd:	31 ed                	xor    %ebp,%ebp
   12ebf:	8d 78 fa             	lea    -0x6(%rax),%edi
   12ec2:	e8 d0 fd ff ff       	call   12c97 <mvaddstr.constprop.0.isra.0>
   12ec7:	bf 01 00 00 00       	mov    $0x1,%edi
   12ecc:	e8 b5 fd ff ff       	call   12c86 <colour_set.constprop.0>
   12ed1:	8b 05 d9 16 01 00    	mov    0x116d9(%rip),%eax        # 245b0 <console_height>
   12ed7:	83 e8 09             	sub    $0x9,%eax
   12eda:	39 e8                	cmp    %ebp,%eax
   12edc:	76 28                	jbe    12f06 <draw_setting_rows+0x93>
   12ede:	8b 73 14             	mov    0x14(%rbx),%esi
   12ee1:	01 ee                	add    %ebp,%esi
   12ee3:	3b 73 0c             	cmp    0xc(%rbx),%esi
   12ee6:	73 12                	jae    12efa <draw_setting_rows+0x87>
   12ee8:	48 89 df             	mov    %rbx,%rdi
   12eeb:	e8 32 fc ff ff       	call   12b22 <select_setting_row>
   12ef0:	48 89 df             	mov    %rbx,%rdi
   12ef3:	e8 d8 fd ff ff       	call   12cd0 <draw_setting_row>
   12ef8:	eb 08                	jmp    12f02 <draw_setting_rows+0x8f>
   12efa:	8d 7d 03             	lea    0x3(%rbp),%edi
   12efd:	e8 54 ff ff ff       	call   12e56 <clearmsg>
   12f02:	ff c5                	inc    %ebp
   12f04:	eb cb                	jmp    12ed1 <draw_setting_rows+0x5e>
   12f06:	5b                   	pop    %rbx
   12f07:	5d                   	pop    %rbp
   12f08:	41 5c                	pop    %r12
   12f0a:	c3                   	ret    

0000000000012f0b <alert.constprop.0>:
   12f0b:	48 83 ec 58          	sub    $0x58,%rsp
   12f0f:	48 8b 05 5a 70 01 00 	mov    0x1705a(%rip),%rax        # 29f70 <__stack_chk_guard>
   12f16:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   12f1b:	31 c0                	xor    %eax,%eax
   12f1d:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   12f22:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   12f27:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   12f2c:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   12f31:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   12f36:	8b 05 74 16 01 00    	mov    0x11674(%rip),%eax        # 245b0 <console_height>
   12f3c:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   12f41:	8d 78 fe             	lea    -0x2(%rax),%edi
   12f44:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   12f49:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   12f4e:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   12f53:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   12f5a:	e8 f7 fe ff ff       	call   12e56 <clearmsg>
   12f5f:	bf 05 00 00 00       	mov    $0x5,%edi
   12f64:	e8 1d fd ff ff       	call   12c86 <colour_set.constprop.0>
   12f69:	8b 05 41 16 01 00    	mov    0x11641(%rip),%eax        # 245b0 <console_height>
   12f6f:	48 89 e2             	mov    %rsp,%rdx
   12f72:	48 8d 35 99 09 01 00 	lea    0x10999(%rip),%rsi        # 23912 <.LC6>
   12f79:	8d 78 fe             	lea    -0x2(%rax),%edi
   12f7c:	e8 3d fa ff ff       	call   129be <vmsg>
   12f81:	bf 02 00 00 00       	mov    $0x2,%edi
   12f86:	e8 99 2d 00 00       	call   15d24 <sleep>
   12f8b:	bf 01 00 00 00       	mov    $0x1,%edi
   12f90:	e8 f1 fc ff ff       	call   12c86 <colour_set.constprop.0>
   12f95:	8b 05 15 16 01 00    	mov    0x11615(%rip),%eax        # 245b0 <console_height>
   12f9b:	8d 78 fe             	lea    -0x2(%rax),%edi
   12f9e:	e8 b3 fe ff ff       	call   12e56 <clearmsg>
   12fa3:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   12fa8:	48 2b 05 c1 6f 01 00 	sub    0x16fc1(%rip),%rax        # 29f70 <__stack_chk_guard>
   12faf:	74 05                	je     12fb6 <alert.constprop.0+0xab>
   12fb1:	e8 aa fa fe ff       	call   2a60 <__stack_chk_fail>
   12fb6:	48 83 c4 58          	add    $0x58,%rsp
   12fba:	c3                   	ret    

0000000000012fbb <select_settings>:
   12fbb:	41 55                	push   %r13
   12fbd:	4c 8d 2d bc 38 01 00 	lea    0x138bc(%rip),%r13        # 26880 <_stdscr>
   12fc4:	41 54                	push   %r12
   12fc6:	55                   	push   %rbp
   12fc7:	48 89 fd             	mov    %rdi,%rbp
   12fca:	48 89 f7             	mov    %rsi,%rdi
   12fcd:	e8 e5 e8 ff ff       	call   118b7 <settings_target>
   12fd2:	31 f6                	xor    %esi,%esi
   12fd4:	48 89 ef             	mov    %rbp,%rdi
   12fd7:	48 89 45 00          	mov    %rax,0x0(%rbp)
   12fdb:	e8 42 fb ff ff       	call   12b22 <select_setting_row>
   12fe0:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
   12fe7:	00 
   12fe8:	bf 01 00 00 00       	mov    $0x1,%edi
   12fed:	89 45 0c             	mov    %eax,0xc(%rbp)
   12ff0:	8b 05 ba 15 01 00    	mov    0x115ba(%rip),%eax        # 245b0 <console_height>
   12ff6:	83 e8 09             	sub    $0x9,%eax
   12ff9:	89 45 08             	mov    %eax,0x8(%rbp)
   12ffc:	e8 55 fe ff ff       	call   12e56 <clearmsg>
   13001:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   13005:	e8 2b e9 ff ff       	call   11935 <settings_name>
   1300a:	4c 89 ef             	mov    %r13,%rdi
   1300d:	be 00 00 04 00       	mov    $0x40000,%esi
   13012:	49 89 c4             	mov    %rax,%r12
   13015:	e8 0d 42 00 00       	call   17227 <wattron>
   1301a:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   1301f:	4c 89 e1             	mov    %r12,%rcx
   13022:	bf 01 00 00 00       	mov    $0x1,%edi
   13027:	48 8d 05 a6 13 01 00 	lea    0x113a6(%rip),%rax        # 243d4 <.LC0>
   1302e:	48 8d 15 e2 08 01 00 	lea    0x108e2(%rip),%rdx        # 23917 <.LC7>
   13035:	48 0f 44 d0          	cmove  %rax,%rdx
   13039:	48 8d 35 db 08 01 00 	lea    0x108db(%rip),%rsi        # 2391b <.LC9>
   13040:	31 c0                	xor    %eax,%eax
   13042:	e8 3c fa ff ff       	call   12a83 <msg>
   13047:	be 00 00 04 00       	mov    $0x40000,%esi
   1304c:	4c 89 ef             	mov    %r13,%rdi
   1304f:	e8 c7 41 00 00       	call   1721b <wattroff>
   13054:	48 89 ef             	mov    %rbp,%rdi
   13057:	e8 17 fe ff ff       	call   12e73 <draw_setting_rows>
   1305c:	48 89 ef             	mov    %rbp,%rdi
   1305f:	31 f6                	xor    %esi,%esi
   13061:	5d                   	pop    %rbp
   13062:	41 5c                	pop    %r12
   13064:	41 5d                	pop    %r13
   13066:	e9 b7 fa ff ff       	jmp    12b22 <select_setting_row>

000000000001306b <main_loop>:
   1306b:	41 55                	push   %r13
   1306d:	41 54                	push   %r12
   1306f:	55                   	push   %rbp
   13070:	48 89 fd             	mov    %rdi,%rbp
   13073:	bf 01 00 00 00       	mov    $0x1,%edi
   13078:	53                   	push   %rbx
   13079:	48 81 ec d8 01 00 00 	sub    $0x1d8,%rsp
   13080:	48 8b 05 e9 6e 01 00 	mov    0x16ee9(%rip),%rax        # 29f70 <__stack_chk_guard>
   13087:	48 89 84 24 c8 01 00 	mov    %rax,0x1c8(%rsp)
   1308e:	00 
   1308f:	31 c0                	xor    %eax,%eax
   13091:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   13096:	e8 eb fb ff ff       	call   12c86 <colour_set.constprop.0>
   1309b:	48 89 df             	mov    %rbx,%rdi
   1309e:	b9 a0 01 00 00       	mov    $0x1a0,%ecx
   130a3:	31 c0                	xor    %eax,%eax
   130a5:	f3 aa                	rep stos %al,%es:(%rdi)
   130a7:	48 89 ee             	mov    %rbp,%rsi
   130aa:	48 89 df             	mov    %rbx,%rdi
   130ad:	4c 8d 2d 87 08 01 00 	lea    0x10887(%rip),%r13        # 2393b <.LC10>
   130b4:	e8 02 ff ff ff       	call   12fbb <select_settings>
   130b9:	be 01 00 00 00       	mov    $0x1,%esi
   130be:	85 f6                	test   %esi,%esi
   130c0:	0f 84 4b 01 00 00    	je     13211 <main_loop+0x1a6>
   130c6:	8b 05 e4 14 01 00    	mov    0x114e4(%rip),%eax        # 245b0 <console_height>
   130cc:	8d 78 fb             	lea    -0x5(%rax),%edi
   130cf:	e8 82 fd ff ff       	call   12e56 <clearmsg>
   130d4:	8b 05 d6 14 01 00    	mov    0x114d6(%rip),%eax        # 245b0 <console_height>
   130da:	8d 78 fc             	lea    -0x4(%rax),%edi
   130dd:	e8 74 fd ff ff       	call   12e56 <clearmsg>
   130e2:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
   130e8:	0f 84 99 00 00 00    	je     13187 <main_loop+0x11c>
   130ee:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
   130f3:	48 85 ff             	test   %rdi,%rdi
   130f6:	75 05                	jne    130fd <main_loop+0x92>
   130f8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   130fd:	4c 8d a4 24 a8 01 00 	lea    0x1a8(%rsp),%r12
   13104:	00 
   13105:	b9 20 00 00 00       	mov    $0x20,%ecx
   1310a:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1310f:	4c 89 e2             	mov    %r12,%rdx
   13112:	48 8d 2d 67 37 01 00 	lea    0x13767(%rip),%rbp        # 26880 <_stdscr>
   13119:	e8 20 f7 ff ff       	call   1283e <setting_name>
   1311e:	be 00 00 04 00       	mov    $0x40000,%esi
   13123:	48 89 ef             	mov    %rbp,%rdi
   13126:	e8 fc 40 00 00       	call   17227 <wattron>
   1312b:	8b 05 7f 14 01 00    	mov    0x1147f(%rip),%eax        # 245b0 <console_height>
   13131:	4c 89 e2             	mov    %r12,%rdx
   13134:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   13139:	48 8d 35 18 08 01 00 	lea    0x10818(%rip),%rsi        # 23958 <.LC11>
   13140:	8d 78 fb             	lea    -0x5(%rax),%edi
   13143:	31 c0                	xor    %eax,%eax
   13145:	e8 39 f9 ff ff       	call   12a83 <msg>
   1314a:	be 00 00 04 00       	mov    $0x40000,%esi
   1314f:	48 89 ef             	mov    %rbp,%rdi
   13152:	e8 c4 40 00 00       	call   1721b <wattroff>
   13157:	bf 06 00 00 00       	mov    $0x6,%edi
   1315c:	e8 25 fb ff ff       	call   12c86 <colour_set.constprop.0>
   13161:	8b 05 49 14 01 00    	mov    0x11449(%rip),%eax        # 245b0 <console_height>
   13167:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
   1316c:	48 8d 35 47 f7 00 00 	lea    0xf747(%rip),%rsi        # 228ba <.LC12>
   13173:	8d 78 fc             	lea    -0x4(%rax),%edi
   13176:	31 c0                	xor    %eax,%eax
   13178:	e8 06 f9 ff ff       	call   12a83 <msg>
   1317d:	bf 01 00 00 00       	mov    $0x1,%edi
   13182:	e8 ff fa ff ff       	call   12c86 <colour_set.constprop.0>
   13187:	8b 05 23 14 01 00    	mov    0x11423(%rip),%eax        # 245b0 <console_height>
   1318d:	8d 78 fe             	lea    -0x2(%rax),%edi
   13190:	e8 c1 fc ff ff       	call   12e56 <clearmsg>
   13195:	83 bc 24 a0 00 00 00 	cmpl   $0x0,0xa0(%rsp)
   1319c:	00 
   1319d:	8b 3d 0d 14 01 00    	mov    0x1140d(%rip),%edi        # 245b0 <console_height>
   131a3:	74 13                	je     131b8 <main_loop+0x14d>
   131a5:	83 ef 02             	sub    $0x2,%edi
   131a8:	48 8d 35 b1 07 01 00 	lea    0x107b1(%rip),%rsi        # 23960 <.LC13>
   131af:	31 c0                	xor    %eax,%eax
   131b1:	e8 cd f8 ff ff       	call   12a83 <msg>
   131b6:	eb 26                	jmp    131de <main_loop+0x173>
   131b8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   131bd:	48 8d 15 10 12 01 00 	lea    0x11210(%rip),%rdx        # 243d4 <.LC0>
   131c4:	48 39 44 24 28       	cmp    %rax,0x28(%rsp)
   131c9:	48 8d 35 c4 07 01 00 	lea    0x107c4(%rip),%rsi        # 23994 <.LC14>
   131d0:	49 0f 44 d5          	cmove  %r13,%rdx
   131d4:	83 ef 02             	sub    $0x2,%edi
   131d7:	31 c0                	xor    %eax,%eax
   131d9:	e8 a5 f8 ff ff       	call   12a83 <msg>
   131de:	83 bc 24 a0 00 00 00 	cmpl   $0x1,0xa0(%rsp)
   131e5:	01 
   131e6:	19 ff                	sbb    %edi,%edi
   131e8:	83 e7 fe             	and    $0xfffffffe,%edi
   131eb:	83 c7 04             	add    $0x4,%edi
   131ee:	e8 93 fa ff ff       	call   12c86 <colour_set.constprop.0>
   131f3:	48 89 df             	mov    %rbx,%rdi
   131f6:	e8 d5 fa ff ff       	call   12cd0 <draw_setting_row>
   131fb:	bf 01 00 00 00       	mov    $0x1,%edi
   13200:	e8 81 fa ff ff       	call   12c86 <colour_set.constprop.0>
   13205:	8b bc 24 a0 00 00 00 	mov    0xa0(%rsp),%edi
   1320c:	e8 f0 a2 ff ff       	call   d501 <curs_set>
   13211:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   13216:	83 bc 24 a0 00 00 00 	cmpl   $0x0,0xa0(%rsp)
   1321d:	00 
   1321e:	74 6d                	je     1328d <main_loop+0x222>
   13220:	bf 04 00 00 00       	mov    $0x4,%edi
   13225:	48 8d 6c 24 60       	lea    0x60(%rsp),%rbp
   1322a:	e8 57 fa ff ff       	call   12c86 <colour_set.constprop.0>
   1322f:	48 89 ef             	mov    %rbp,%rdi
   13232:	e8 25 7b 00 00       	call   1ad5c <draw_editbox>
   13237:	bf 01 00 00 00       	mov    $0x1,%edi
   1323c:	e8 45 fa ff ff       	call   12c86 <colour_set.constprop.0>
   13241:	31 ff                	xor    %edi,%edi
   13243:	e8 17 b1 00 00       	call   1e35f <getkey>
   13248:	48 89 ef             	mov    %rbp,%rdi
   1324b:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   13252:	01 00 00 00 
   13256:	89 c6                	mov    %eax,%esi
   13258:	e8 53 7d 00 00       	call   1afb0 <edit_string>
   1325d:	83 f8 0a             	cmp    $0xa,%eax
   13260:	74 0f                	je     13271 <main_loop+0x206>
   13262:	83 f8 0d             	cmp    $0xd,%eax
   13265:	74 0a                	je     13271 <main_loop+0x206>
   13267:	83 f8 03             	cmp    $0x3,%eax
   1326a:	75 aa                	jne    13216 <main_loop+0x1ab>
   1326c:	e9 c1 00 00 00       	jmp    13332 <main_loop+0x2c7>
   13271:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   13276:	48 8d 94 24 a4 00 00 	lea    0xa4(%rsp),%rdx
   1327d:	00 
   1327e:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   13283:	e8 17 f2 ff ff       	call   1249f <storef_setting>
   13288:	e9 89 00 00 00       	jmp    13316 <main_loop+0x2ab>
   1328d:	31 ff                	xor    %edi,%edi
   1328f:	e8 cb b0 00 00       	call   1e35f <getkey>
   13294:	4c 89 e7             	mov    %r12,%rdi
   13297:	89 c6                	mov    %eax,%esi
   13299:	89 c5                	mov    %eax,%ebp
   1329b:	e8 43 ca 00 00       	call   1fce3 <jump_scroll_key>
   132a0:	89 c6                	mov    %eax,%esi
   132a2:	85 c0                	test   %eax,%eax
   132a4:	74 34                	je     132da <main_loop+0x26f>
   132a6:	4c 89 e7             	mov    %r12,%rdi
   132a9:	8b 6c 24 18          	mov    0x18(%rsp),%ebp
   132ad:	e8 8e ca 00 00       	call   1fd40 <jump_scroll_move>
   132b2:	39 6c 24 18          	cmp    %ebp,0x18(%rsp)
   132b6:	0f 84 5a ff ff ff    	je     13216 <main_loop+0x1ab>
   132bc:	48 89 df             	mov    %rbx,%rdi
   132bf:	e8 0c fa ff ff       	call   12cd0 <draw_setting_row>
   132c4:	4c 89 e7             	mov    %r12,%rdi
   132c7:	e8 ad ca 00 00       	call   1fd79 <jump_scroll>
   132cc:	85 c0                	test   %eax,%eax
   132ce:	74 62                	je     13332 <main_loop+0x2c7>
   132d0:	48 89 df             	mov    %rbx,%rdi
   132d3:	e8 9b fb ff ff       	call   12e73 <draw_setting_rows>
   132d8:	eb 58                	jmp    13332 <main_loop+0x2c7>
   132da:	83 fd 0d             	cmp    $0xd,%ebp
   132dd:	74 7a                	je     13359 <main_loop+0x2ee>
   132df:	7f 0f                	jg     132f0 <main_loop+0x285>
   132e1:	83 fd 04             	cmp    $0x4,%ebp
   132e4:	74 11                	je     132f7 <main_loop+0x28c>
   132e6:	83 fd 0a             	cmp    $0xa,%ebp
   132e9:	74 6e                	je     13359 <main_loop+0x2ee>
   132eb:	e9 83 00 00 00       	jmp    13373 <main_loop+0x308>
   132f0:	83 fd 18             	cmp    $0x18,%ebp
   132f3:	74 4e                	je     13343 <main_loop+0x2d8>
   132f5:	eb 7c                	jmp    13373 <main_loop+0x308>
   132f7:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
   132fd:	0f 84 13 ff ff ff    	je     13216 <main_loop+0x1ab>
   13303:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   13308:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1330d:	31 c9                	xor    %ecx,%ecx
   1330f:	31 d2                	xor    %edx,%edx
   13311:	e8 71 ee ff ff       	call   12187 <store_setting>
   13316:	89 c7                	mov    %eax,%edi
   13318:	85 c0                	test   %eax,%eax
   1331a:	74 16                	je     13332 <main_loop+0x2c7>
   1331c:	e8 7b 04 00 00       	call   1379c <strerror>
   13321:	48 8d 3d ea 05 01 00 	lea    0x105ea(%rip),%rdi        # 23912 <.LC6>
   13328:	48 89 c6             	mov    %rax,%rsi
   1332b:	31 c0                	xor    %eax,%eax
   1332d:	e8 d9 fb ff ff       	call   12f0b <alert.constprop.0>
   13332:	8b 74 24 18          	mov    0x18(%rsp),%esi
   13336:	48 89 df             	mov    %rbx,%rdi
   13339:	e8 e4 f7 ff ff       	call   12b22 <select_setting_row>
   1333e:	e9 83 fd ff ff       	jmp    130c6 <main_loop+0x5b>
   13343:	48 8b 84 24 c8 01 00 	mov    0x1c8(%rsp),%rax
   1334a:	00 
   1334b:	48 2b 05 1e 6c 01 00 	sub    0x16c1e(%rip),%rax        # 29f70 <__stack_chk_guard>
   13352:	74 47                	je     1339b <main_loop+0x330>
   13354:	e8 07 f7 fe ff       	call   2a60 <__stack_chk_fail>
   13359:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
   1335e:	4d 85 c0             	test   %r8,%r8
   13361:	74 10                	je     13373 <main_loop+0x308>
   13363:	4c 89 c6             	mov    %r8,%rsi
   13366:	48 89 df             	mov    %rbx,%rdi
   13369:	e8 4d fc ff ff       	call   12fbb <select_settings>
   1336e:	be 01 00 00 00       	mov    $0x1,%esi
   13373:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
   13379:	0f 84 3f fd ff ff    	je     130be <main_loop+0x53>
   1337f:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   13384:	89 ee                	mov    %ebp,%esi
   13386:	c7 84 24 a0 00 00 00 	movl   $0x1,0xa0(%rsp)
   1338d:	01 00 00 00 
   13391:	e8 1a 7c 00 00       	call   1afb0 <edit_string>
   13396:	e9 2b fd ff ff       	jmp    130c6 <main_loop+0x5b>
   1339b:	48 81 c4 d8 01 00 00 	add    $0x1d8,%rsp
   133a2:	31 c0                	xor    %eax,%eax
   133a4:	5b                   	pop    %rbx
   133a5:	5d                   	pop    %rbp
   133a6:	41 5c                	pop    %r12
   133a8:	41 5d                	pop    %r13
   133aa:	c3                   	ret    

00000000000133ab <settings_ui>:
   133ab:	f3 0f 1e fa          	endbr64 
   133af:	41 54                	push   %r12
   133b1:	49 89 fc             	mov    %rdi,%r12
   133b4:	e8 ad 3e 00 00       	call   17266 <initscr>
   133b9:	bf 01 00 00 00       	mov    $0x1,%edi
   133be:	e8 c3 f8 ff ff       	call   12c86 <colour_set.constprop.0>
   133c3:	31 ff                	xor    %edi,%edi
   133c5:	e8 37 a1 ff ff       	call   d501 <curs_set>
   133ca:	e8 22 5e 00 00       	call   191f1 <erase>
   133cf:	4c 89 e7             	mov    %r12,%rdi
   133d2:	e8 94 fc ff ff       	call   1306b <main_loop>
   133d7:	41 89 c4             	mov    %eax,%r12d
   133da:	e8 cb 3e 00 00       	call   172aa <endwin>
   133df:	44 89 e0             	mov    %r12d,%eax
   133e2:	41 5c                	pop    %r12
   133e4:	c3                   	ret    

00000000000133e5 <help_exec>:
   133e5:	f3 0f 1e fa          	endbr64 
   133e9:	41 55                	push   %r13
   133eb:	48 8d 3d c8 05 01 00 	lea    0x105c8(%rip),%rdi        # 239ba <.LC0>
   133f2:	31 c0                	xor    %eax,%eax
   133f4:	41 54                	push   %r12
   133f6:	4c 8d 25 2b 53 01 00 	lea    0x1532b(%rip),%r12        # 28728 <efi_console>
   133fd:	55                   	push   %rbp
   133fe:	48 8d 2d 53 50 01 00 	lea    0x15053(%rip),%rbp        # 28458 <config_command>
   13405:	53                   	push   %rbx
   13406:	31 db                	xor    %ebx,%ebx
   13408:	51                   	push   %rcx
   13409:	e8 90 3d 00 00       	call   1719e <printf>
   1340e:	4c 39 e5             	cmp    %r12,%rbp
   13411:	73 4b                	jae    1345e <help_exec+0x79>
   13413:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   13417:	48 8d 3d 01 02 01 00 	lea    0x10201(%rip),%rdi        # 2361f <.LC1>
   1341e:	31 c0                	xor    %eax,%eax
   13420:	4c 8d 2d 2f 05 01 00 	lea    0x1052f(%rip),%r13        # 23956 <.LC1>
   13427:	e8 72 3d 00 00       	call   1719e <printf>
   1342c:	01 c3                	add    %eax,%ebx
   1342e:	83 fb 40             	cmp    $0x40,%ebx
   13431:	76 12                	jbe    13445 <help_exec+0x60>
   13433:	48 8d 3d 95 05 01 00 	lea    0x10595(%rip),%rdi        # 239cf <.LC0>
   1343a:	31 c0                	xor    %eax,%eax
   1343c:	31 db                	xor    %ebx,%ebx
   1343e:	e8 5b 3d 00 00       	call   1719e <printf>
   13443:	eb 13                	jmp    13458 <help_exec+0x73>
   13445:	f6 c3 0f             	test   $0xf,%bl
   13448:	74 0e                	je     13458 <help_exec+0x73>
   1344a:	4c 89 ef             	mov    %r13,%rdi
   1344d:	31 c0                	xor    %eax,%eax
   1344f:	ff c3                	inc    %ebx
   13451:	e8 48 3d 00 00       	call   1719e <printf>
   13456:	eb ed                	jmp    13445 <help_exec+0x60>
   13458:	48 83 c5 10          	add    $0x10,%rbp
   1345c:	eb b0                	jmp    1340e <help_exec+0x29>
   1345e:	48 8d 3d 6c 05 01 00 	lea    0x1056c(%rip),%rdi        # 239d1 <.LC4>
   13465:	31 c0                	xor    %eax,%eax
   13467:	e8 32 3d 00 00       	call   1719e <printf>
   1346c:	5a                   	pop    %rdx
   1346d:	31 c0                	xor    %eax,%eax
   1346f:	5b                   	pop    %rbx
   13470:	5d                   	pop    %rbp
   13471:	41 5c                	pop    %r12
   13473:	41 5d                	pop    %r13
   13475:	c3                   	ret    

0000000000013476 <shell>:
   13476:	f3 0f 1e fa          	endbr64 
   1347a:	41 54                	push   %r12
   1347c:	b9 88 00 00 00       	mov    $0x88,%ecx
   13481:	55                   	push   %rbp
   13482:	53                   	push   %rbx
   13483:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   1348a:	48 8b 05 df 6a 01 00 	mov    0x16adf(%rip),%rax        # 29f70 <__stack_chk_guard>
   13491:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   13498:	00 
   13499:	31 c0                	xor    %eax,%eax
   1349b:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   134a0:	48 89 ef             	mov    %rbp,%rdi
   134a3:	f3 aa                	rep stos %al,%es:(%rdi)
   134a5:	45 31 e4             	xor    %r12d,%r12d
   134a8:	48 8d 1d 89 f0 00 00 	lea    0xf089(%rip),%rbx        # 22538 <shell_prompt>
   134af:	48 89 df             	mov    %rbx,%rdi
   134b2:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   134b7:	48 89 ea             	mov    %rbp,%rdx
   134ba:	31 f6                	xor    %esi,%esi
   134bc:	e8 ab c6 ff ff       	call   fb6c <readline_history>
   134c1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   134c6:	48 85 ff             	test   %rdi,%rdi
   134c9:	74 12                	je     134dd <shell+0x67>
   134cb:	e8 a2 a8 00 00       	call   1dd72 <system>
   134d0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   134d5:	41 89 c4             	mov    %eax,%r12d
   134d8:	e8 72 91 ff ff       	call   c64f <free>
   134dd:	bf 02 00 00 00       	mov    $0x2,%edi
   134e2:	e8 6f a8 00 00       	call   1dd56 <shell_stopped>
   134e7:	85 c0                	test   %eax,%eax
   134e9:	74 c4                	je     134af <shell+0x39>
   134eb:	48 89 ef             	mov    %rbp,%rdi
   134ee:	e8 53 c6 ff ff       	call   fb46 <history_free>
   134f3:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   134fa:	00 
   134fb:	48 2b 05 6e 6a 01 00 	sub    0x16a6e(%rip),%rax        # 29f70 <__stack_chk_guard>
   13502:	74 05                	je     13509 <shell+0x93>
   13504:	e8 57 f5 fe ff       	call   2a60 <__stack_chk_fail>
   13509:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   13510:	44 89 e0             	mov    %r12d,%eax
   13513:	5b                   	pop    %rbx
   13514:	5d                   	pop    %rbp
   13515:	41 5c                	pop    %r12
   13517:	c3                   	ret    

0000000000013518 <shell_exec>:
   13518:	f3 0f 1e fa          	endbr64 
   1351c:	48 83 ec 18          	sub    $0x18,%rsp
   13520:	48 8d 15 c9 3b 01 00 	lea    0x13bc9(%rip),%rdx        # 270f0 <shell_cmd>
   13527:	48 8b 05 42 6a 01 00 	mov    0x16a42(%rip),%rax        # 29f70 <__stack_chk_guard>
   1352e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13533:	31 c0                	xor    %eax,%eax
   13535:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   1353a:	e8 70 bc ff ff       	call   f1af <parse_options>
   1353f:	85 c0                	test   %eax,%eax
   13541:	75 05                	jne    13548 <shell_exec+0x30>
   13543:	e8 2e ff ff ff       	call   13476 <shell>
   13548:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1354d:	48 2b 15 1c 6a 01 00 	sub    0x16a1c(%rip),%rdx        # 29f70 <__stack_chk_guard>
   13554:	74 05                	je     1355b <shell_exec+0x43>
   13556:	e8 05 f5 fe ff       	call   2a60 <__stack_chk_fail>
   1355b:	48 83 c4 18          	add    $0x18,%rsp
   1355f:	c3                   	ret    

0000000000013560 <smbios_applies>:
   13560:	f3 0f 1e fa          	endbr64 
   13564:	48 8d 05 d4 ef 00 00 	lea    0xefd4(%rip),%rax        # 2253f <smbios_settings_scope>
   1356b:	48 39 46 20          	cmp    %rax,0x20(%rsi)
   1356f:	0f 94 c0             	sete   %al
   13572:	0f b6 c0             	movzbl %al,%eax
   13575:	c3                   	ret    

0000000000013576 <smbios_init>:
   13576:	f3 0f 1e fa          	endbr64 
   1357a:	48 8d 15 8a 04 01 00 	lea    0x1048a(%rip),%rdx        # 23a0b <.LC0>
   13581:	31 f6                	xor    %esi,%esi
   13583:	48 8d 3d 96 3b 01 00 	lea    0x13b96(%rip),%rdi        # 27120 <smbios_settings>
   1358a:	e9 2f ea ff ff       	jmp    11fbe <register_settings>

000000000001358f <smbios_fetch>:
   1358f:	f3 0f 1e fa          	endbr64 
   13593:	55                   	push   %rbp
   13594:	48 89 e5             	mov    %rsp,%rbp
   13597:	41 57                	push   %r15
   13599:	41 56                	push   %r14
   1359b:	4c 8d 75 a0          	lea    -0x60(%rbp),%r14
   1359f:	41 55                	push   %r13
   135a1:	49 89 d5             	mov    %rdx,%r13
   135a4:	4c 89 f2             	mov    %r14,%rdx
   135a7:	41 54                	push   %r12
   135a9:	49 89 cc             	mov    %rcx,%r12
   135ac:	53                   	push   %rbx
   135ad:	48 89 f3             	mov    %rsi,%rbx
   135b0:	48 83 ec 48          	sub    $0x48,%rsp
   135b4:	4c 8b 7e 18          	mov    0x18(%rsi),%r15
   135b8:	48 8b 05 b1 69 01 00 	mov    0x169b1(%rip),%rax        # 29f70 <__stack_chk_guard>
   135bf:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   135c3:	31 c0                	xor    %eax,%eax
   135c5:	4c 89 ff             	mov    %r15,%rdi
   135c8:	44 89 fe             	mov    %r15d,%esi
   135cb:	48 c1 ef 10          	shr    $0x10,%rdi
   135cf:	c1 ee 18             	shr    $0x18,%esi
   135d2:	40 0f b6 ff          	movzbl %dil,%edi
   135d6:	e8 a8 d7 00 00       	call   20d83 <find_smbios_structure>
   135db:	85 c0                	test   %eax,%eax
   135dd:	0f 85 21 01 00 00    	jne    13704 <smbios_fetch+0x175>
   135e3:	0f b6 55 a1          	movzbl -0x5f(%rbp),%edx
   135e7:	48 89 65 98          	mov    %rsp,-0x68(%rbp)
   135eb:	48 89 e1             	mov    %rsp,%rcx
   135ee:	48 8d 42 0f          	lea    0xf(%rdx),%rax
   135f2:	25 f0 01 00 00       	and    $0x1f0,%eax
   135f7:	48 39 cc             	cmp    %rcx,%rsp
   135fa:	74 12                	je     1360e <smbios_fetch+0x7f>
   135fc:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   13603:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1360a:	00 00 
   1360c:	eb e9                	jmp    135f7 <smbios_fetch+0x68>
   1360e:	48 29 c4             	sub    %rax,%rsp
   13611:	25 ff 0f 00 00       	and    $0xfff,%eax
   13616:	74 06                	je     1361e <smbios_fetch+0x8f>
   13618:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1361e:	48 89 e1             	mov    %rsp,%rcx
   13621:	48 89 e6             	mov    %rsp,%rsi
   13624:	4c 89 f7             	mov    %r14,%rdi
   13627:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   1362b:	e8 28 d8 00 00       	call   20e58 <read_smbios_structure>
   13630:	85 c0                	test   %eax,%eax
   13632:	0f 85 c8 00 00 00    	jne    13700 <smbios_fetch+0x171>
   13638:	44 89 f8             	mov    %r15d,%eax
   1363b:	41 81 e7 ff 00 00 00 	and    $0xff,%r15d
   13642:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
   13646:	0f b6 f4             	movzbl %ah,%esi
   13649:	74 06                	je     13651 <smbios_fetch+0xc2>
   1364b:	85 f6                	test   %esi,%esi
   1364d:	75 3e                	jne    1368d <smbios_fetch+0xfe>
   1364f:	eb 0b                	jmp    1365c <smbios_fetch+0xcd>
   13651:	85 f6                	test   %esi,%esi
   13653:	74 07                	je     1365c <smbios_fetch+0xcd>
   13655:	89 f6                	mov    %esi,%esi
   13657:	44 0f b6 3c 31       	movzbl (%rcx,%rsi,1),%r15d
   1365c:	4c 89 e1             	mov    %r12,%rcx
   1365f:	4c 89 ea             	mov    %r13,%rdx
   13662:	44 89 fe             	mov    %r15d,%esi
   13665:	4c 89 f7             	mov    %r14,%rdi
   13668:	e8 18 d8 00 00       	call   20e85 <read_smbios_string>
   1366d:	85 c0                	test   %eax,%eax
   1366f:	0f 88 8b 00 00 00    	js     13700 <smbios_fetch+0x171>
   13675:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   1367a:	0f 85 80 00 00 00    	jne    13700 <smbios_fetch+0x171>
   13680:	48 8d 0d 19 5b 01 00 	lea    0x15b19(%rip),%rcx        # 291a0 <setting_type_string>
   13687:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   1368b:	eb 73                	jmp    13700 <smbios_fetch+0x171>
   1368d:	89 f6                	mov    %esi,%esi
   1368f:	48 8d 05 da 58 01 00 	lea    0x158da(%rip),%rax        # 28f70 <setting_type_uuid>
   13696:	48 01 e6             	add    %rsp,%rsi
   13699:	48 39 43 10          	cmp    %rax,0x10(%rbx)
   1369d:	75 3a                	jne    136d9 <smbios_fetch+0x14a>
   1369f:	41 83 ff 10          	cmp    $0x10,%r15d
   136a3:	75 34                	jne    136d9 <smbios_fetch+0x14a>
   136a5:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   136a9:	e8 67 d8 00 00       	call   20f15 <smbios_version>
   136ae:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
   136b2:	3d 05 02 00 00       	cmp    $0x205,%eax
   136b7:	7e 20                	jle    136d9 <smbios_fetch+0x14a>
   136b9:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
   136bd:	48 89 c7             	mov    %rax,%rdi
   136c0:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   136c1:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   136c2:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   136c3:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   136c4:	8b 55 b8             	mov    -0x48(%rbp),%edx
   136c7:	48 89 c6             	mov    %rax,%rsi
   136ca:	0f ca                	bswap  %edx
   136cc:	89 55 b8             	mov    %edx,-0x48(%rbp)
   136cf:	66 c1 4d bc 08       	rorw   $0x8,-0x44(%rbp)
   136d4:	66 c1 4d be 08       	rorw   $0x8,-0x42(%rbp)
   136d9:	44 89 fa             	mov    %r15d,%edx
   136dc:	4c 89 ef             	mov    %r13,%rdi
   136df:	4c 39 e2             	cmp    %r12,%rdx
   136e2:	49 0f 47 d4          	cmova  %r12,%rdx
   136e6:	e8 22 3c 00 00       	call   1730d <__memcpy>
   136eb:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   136f0:	75 0b                	jne    136fd <smbios_fetch+0x16e>
   136f2:	48 8d 05 17 59 01 00 	lea    0x15917(%rip),%rax        # 29010 <setting_type_hex>
   136f9:	48 89 43 10          	mov    %rax,0x10(%rbx)
   136fd:	44 89 f8             	mov    %r15d,%eax
   13700:	48 8b 65 98          	mov    -0x68(%rbp),%rsp
   13704:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13708:	48 2b 15 61 68 01 00 	sub    0x16861(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1370f:	74 05                	je     13716 <smbios_fetch+0x187>
   13711:	e8 4a f3 fe ff       	call   2a60 <__stack_chk_fail>
   13716:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1371a:	5b                   	pop    %rbx
   1371b:	41 5c                	pop    %r12
   1371d:	41 5d                	pop    %r13
   1371f:	41 5e                	pop    %r14
   13721:	41 5f                	pop    %r15
   13723:	5d                   	pop    %rbp
   13724:	c3                   	ret    

0000000000013725 <sock_ntoa>:
   13725:	f3 0f 1e fa          	endbr64 
   13729:	48 8d 05 c8 61 01 00 	lea    0x161c8(%rip),%rax        # 298f8 <ipv4_sockaddr_converter>
   13730:	48 8d 15 d9 61 01 00 	lea    0x161d9(%rip),%rdx        # 29910 <tcp_socket_opener>
   13737:	48 39 d0             	cmp    %rdx,%rax
   1373a:	73 11                	jae    1374d <sock_ntoa+0x28>
   1373c:	66 8b 0f             	mov    (%rdi),%cx
   1373f:	66 39 08             	cmp    %cx,(%rax)
   13742:	75 03                	jne    13747 <sock_ntoa+0x22>
   13744:	ff 60 08             	jmp    *0x8(%rax)
   13747:	48 83 c0 18          	add    $0x18,%rax
   1374b:	eb ea                	jmp    13737 <sock_ntoa+0x12>
   1374d:	31 c0                	xor    %eax,%eax
   1374f:	c3                   	ret    

0000000000013750 <sock_aton>:
   13750:	f3 0f 1e fa          	endbr64 
   13754:	41 55                	push   %r13
   13756:	4c 8d 2d b3 61 01 00 	lea    0x161b3(%rip),%r13        # 29910 <tcp_socket_opener>
   1375d:	41 54                	push   %r12
   1375f:	49 89 fc             	mov    %rdi,%r12
   13762:	55                   	push   %rbp
   13763:	48 89 f5             	mov    %rsi,%rbp
   13766:	53                   	push   %rbx
   13767:	48 8d 1d 8a 61 01 00 	lea    0x1618a(%rip),%rbx        # 298f8 <ipv4_sockaddr_converter>
   1376e:	51                   	push   %rcx
   1376f:	4c 39 eb             	cmp    %r13,%rbx
   13772:	73 1b                	jae    1378f <sock_aton+0x3f>
   13774:	48 89 ee             	mov    %rbp,%rsi
   13777:	4c 89 e7             	mov    %r12,%rdi
   1377a:	ff 53 10             	call   *0x10(%rbx)
   1377d:	85 c0                	test   %eax,%eax
   1377f:	75 08                	jne    13789 <sock_aton+0x39>
   13781:	8b 13                	mov    (%rbx),%edx
   13783:	66 89 55 00          	mov    %dx,0x0(%rbp)
   13787:	eb 0b                	jmp    13794 <sock_aton+0x44>
   13789:	48 83 c3 18          	add    $0x18,%rbx
   1378d:	eb e0                	jmp    1376f <sock_aton+0x1f>
   1378f:	b8 7e 9f c7 e3       	mov    $0xe3c79f7e,%eax
   13794:	5a                   	pop    %rdx
   13795:	5b                   	pop    %rbx
   13796:	5d                   	pop    %rbp
   13797:	41 5c                	pop    %r12
   13799:	41 5d                	pop    %r13
   1379b:	c3                   	ret    

000000000001379c <strerror>:
   1379c:	f3 0f 1e fa          	endbr64 
   137a0:	41 89 f8             	mov    %edi,%r8d
   137a3:	51                   	push   %rcx
   137a4:	48 8d 05 8d 50 01 00 	lea    0x1508d(%rip),%rax        # 28838 <http_errors>
   137ab:	48 8d 15 06 52 01 00 	lea    0x15206(%rip),%rdx        # 289b8 <__feature_dns>
   137b2:	41 f7 d8             	neg    %r8d
   137b5:	44 0f 48 c7          	cmovs  %edi,%r8d
   137b9:	48 39 d0             	cmp    %rdx,%rax
   137bc:	73 2b                	jae    137e9 <strerror+0x4d>
   137be:	44 3b 00             	cmp    (%rax),%r8d
   137c1:	74 06                	je     137c9 <strerror+0x2d>
   137c3:	48 83 c0 10          	add    $0x10,%rax
   137c7:	eb f0                	jmp    137b9 <strerror+0x1d>
   137c9:	48 8b 48 08          	mov    0x8(%rax),%rcx
   137cd:	48 8d 15 af 02 01 00 	lea    0x102af(%rip),%rdx        # 23a83 <.LC0>
   137d4:	be 40 00 00 00       	mov    $0x40,%esi
   137d9:	31 c0                	xor    %eax,%eax
   137db:	48 8d 3d 1e 65 01 00 	lea    0x1651e(%rip),%rdi        # 29d00 <errbuf.0>
   137e2:	e8 9a 38 00 00       	call   17081 <snprintf>
   137e7:	eb 3c                	jmp    13825 <strerror+0x89>
   137e9:	44 89 c1             	mov    %r8d,%ecx
   137ec:	48 8d 05 45 50 01 00 	lea    0x15045(%rip),%rax        # 28838 <http_errors>
   137f3:	81 e1 ff 00 00 7f    	and    $0x7f0000ff,%ecx
   137f9:	48 39 d0             	cmp    %rdx,%rax
   137fc:	73 0a                	jae    13808 <strerror+0x6c>
   137fe:	3b 08                	cmp    (%rax),%ecx
   13800:	74 c7                	je     137c9 <strerror+0x2d>
   13802:	48 83 c0 10          	add    $0x10,%rax
   13806:	eb f1                	jmp    137f9 <strerror+0x5d>
   13808:	44 89 c1             	mov    %r8d,%ecx
   1380b:	48 8d 15 8b 02 01 00 	lea    0x1028b(%rip),%rdx        # 23a9d <.LC1>
   13812:	be 40 00 00 00       	mov    $0x40,%esi
   13817:	31 c0                	xor    %eax,%eax
   13819:	48 8d 3d e0 64 01 00 	lea    0x164e0(%rip),%rdi        # 29d00 <errbuf.0>
   13820:	e8 5c 38 00 00       	call   17081 <snprintf>
   13825:	48 8d 05 d4 64 01 00 	lea    0x164d4(%rip),%rax        # 29d00 <errbuf.0>
   1382c:	5a                   	pop    %rdx
   1382d:	c3                   	ret    

000000000001382e <generic_memcpy_reverse>:
   1382e:	f3 0f 1e fa          	endbr64 
   13832:	48 89 f8             	mov    %rdi,%rax
   13835:	48 01 d6             	add    %rdx,%rsi
   13838:	48 8d 3c 17          	lea    (%rdi,%rdx,1),%rdi
   1383c:	31 c9                	xor    %ecx,%ecx
   1383e:	48 f7 d2             	not    %rdx
   13841:	48 ff c9             	dec    %rcx
   13844:	48 39 ca             	cmp    %rcx,%rdx
   13847:	74 0a                	je     13853 <generic_memcpy_reverse+0x25>
   13849:	44 8a 04 0e          	mov    (%rsi,%rcx,1),%r8b
   1384d:	44 88 04 0f          	mov    %r8b,(%rdi,%rcx,1)
   13851:	eb ee                	jmp    13841 <generic_memcpy_reverse+0x13>
   13853:	c3                   	ret    

0000000000013854 <memcmp>:
   13854:	f3 0f 1e fa          	endbr64 
   13858:	31 c9                	xor    %ecx,%ecx
   1385a:	48 39 d1             	cmp    %rdx,%rcx
   1385d:	74 13                	je     13872 <memcmp+0x1e>
   1385f:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   13863:	44 0f b6 04 0e       	movzbl (%rsi,%rcx,1),%r8d
   13868:	48 ff c1             	inc    %rcx
   1386b:	44 29 c0             	sub    %r8d,%eax
   1386e:	74 ea                	je     1385a <memcmp+0x6>
   13870:	eb 02                	jmp    13874 <memcmp+0x20>
   13872:	31 c0                	xor    %eax,%eax
   13874:	c3                   	ret    

0000000000013875 <memchr>:
   13875:	f3 0f 1e fa          	endbr64 
   13879:	48 89 f8             	mov    %rdi,%rax
   1387c:	48 01 fa             	add    %rdi,%rdx
   1387f:	48 39 d0             	cmp    %rdx,%rax
   13882:	74 0c                	je     13890 <memchr+0x1b>
   13884:	0f b6 08             	movzbl (%rax),%ecx
   13887:	39 f1                	cmp    %esi,%ecx
   13889:	74 07                	je     13892 <memchr+0x1d>
   1388b:	48 ff c0             	inc    %rax
   1388e:	eb ef                	jmp    1387f <memchr+0xa>
   13890:	31 c0                	xor    %eax,%eax
   13892:	c3                   	ret    

0000000000013893 <memswap>:
   13893:	f3 0f 1e fa          	endbr64 
   13897:	48 89 f8             	mov    %rdi,%rax
   1389a:	31 c9                	xor    %ecx,%ecx
   1389c:	48 39 ca             	cmp    %rcx,%rdx
   1389f:	74 15                	je     138b6 <memswap+0x23>
   138a1:	40 8a 3c 08          	mov    (%rax,%rcx,1),%dil
   138a5:	44 8a 04 0e          	mov    (%rsi,%rcx,1),%r8b
   138a9:	44 88 04 08          	mov    %r8b,(%rax,%rcx,1)
   138ad:	40 88 3c 0e          	mov    %dil,(%rsi,%rcx,1)
   138b1:	48 ff c1             	inc    %rcx
   138b4:	eb e6                	jmp    1389c <memswap+0x9>
   138b6:	c3                   	ret    

00000000000138b7 <strncmp>:
   138b7:	f3 0f 1e fa          	endbr64 
   138bb:	31 c9                	xor    %ecx,%ecx
   138bd:	48 39 ca             	cmp    %rcx,%rdx
   138c0:	74 1b                	je     138dd <strncmp+0x26>
   138c2:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   138c6:	44 0f b6 0c 0e       	movzbl (%rsi,%rcx,1),%r9d
   138cb:	41 89 c0             	mov    %eax,%r8d
   138ce:	44 29 c8             	sub    %r9d,%eax
   138d1:	75 0c                	jne    138df <strncmp+0x28>
   138d3:	48 ff c1             	inc    %rcx
   138d6:	45 84 c0             	test   %r8b,%r8b
   138d9:	75 e2                	jne    138bd <strncmp+0x6>
   138db:	eb 02                	jmp    138df <strncmp+0x28>
   138dd:	31 c0                	xor    %eax,%eax
   138df:	c3                   	ret    

00000000000138e0 <strcmp>:
   138e0:	f3 0f 1e fa          	endbr64 
   138e4:	48 83 ca ff          	or     $0xffffffffffffffff,%rdx
   138e8:	e9 ca ff ff ff       	jmp    138b7 <strncmp>

00000000000138ed <strcasecmp>:
   138ed:	f3 0f 1e fa          	endbr64 
   138f1:	31 c9                	xor    %ecx,%ecx
   138f3:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
   138f7:	8d 50 9f             	lea    -0x61(%rax),%edx
   138fa:	41 89 c0             	mov    %eax,%r8d
   138fd:	83 fa 19             	cmp    $0x19,%edx
   13900:	77 03                	ja     13905 <strcasecmp+0x18>
   13902:	83 e8 20             	sub    $0x20,%eax
   13905:	0f b6 14 0e          	movzbl (%rsi,%rcx,1),%edx
   13909:	44 8d 4a 9f          	lea    -0x61(%rdx),%r9d
   1390d:	41 83 f9 19          	cmp    $0x19,%r9d
   13911:	77 03                	ja     13916 <strcasecmp+0x29>
   13913:	83 ea 20             	sub    $0x20,%edx
   13916:	29 d0                	sub    %edx,%eax
   13918:	75 08                	jne    13922 <strcasecmp+0x35>
   1391a:	48 ff c1             	inc    %rcx
   1391d:	45 84 c0             	test   %r8b,%r8b
   13920:	75 d1                	jne    138f3 <strcasecmp+0x6>
   13922:	c3                   	ret    

0000000000013923 <strnlen>:
   13923:	f3 0f 1e fa          	endbr64 
   13927:	31 c0                	xor    %eax,%eax
   13929:	48 39 f0             	cmp    %rsi,%rax
   1392c:	74 0b                	je     13939 <strnlen+0x16>
   1392e:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)
   13932:	74 05                	je     13939 <strnlen+0x16>
   13934:	48 ff c0             	inc    %rax
   13937:	eb f0                	jmp    13929 <strnlen+0x6>
   13939:	c3                   	ret    

000000000001393a <strlen>:
   1393a:	f3 0f 1e fa          	endbr64 
   1393e:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   13942:	e9 dc ff ff ff       	jmp    13923 <strnlen>

0000000000013947 <strchr>:
   13947:	f3 0f 1e fa          	endbr64 
   1394b:	48 89 f8             	mov    %rdi,%rax
   1394e:	0f b6 08             	movzbl (%rax),%ecx
   13951:	39 f1                	cmp    %esi,%ecx
   13953:	74 0b                	je     13960 <strchr+0x19>
   13955:	84 c9                	test   %cl,%cl
   13957:	74 05                	je     1395e <strchr+0x17>
   13959:	48 ff c0             	inc    %rax
   1395c:	eb f0                	jmp    1394e <strchr+0x7>
   1395e:	31 c0                	xor    %eax,%eax
   13960:	c3                   	ret    

0000000000013961 <strrchr>:
   13961:	f3 0f 1e fa          	endbr64 
   13965:	48 89 f8             	mov    %rdi,%rax
   13968:	80 38 00             	cmpb   $0x0,(%rax)
   1396b:	74 0c                	je     13979 <strrchr+0x18>
   1396d:	48 ff c0             	inc    %rax
   13970:	eb f6                	jmp    13968 <strrchr+0x7>
   13972:	0f b6 10             	movzbl (%rax),%edx
   13975:	39 f2                	cmp    %esi,%edx
   13977:	74 0a                	je     13983 <strrchr+0x22>
   13979:	48 ff c8             	dec    %rax
   1397c:	48 39 f8             	cmp    %rdi,%rax
   1397f:	73 f1                	jae    13972 <strrchr+0x11>
   13981:	31 c0                	xor    %eax,%eax
   13983:	c3                   	ret    

0000000000013984 <strstr>:
   13984:	f3 0f 1e fa          	endbr64 
   13988:	49 89 f9             	mov    %rdi,%r9
   1398b:	48 89 f7             	mov    %rsi,%rdi
   1398e:	49 89 f2             	mov    %rsi,%r10
   13991:	e8 a4 ff ff ff       	call   1393a <strlen>
   13996:	48 89 c2             	mov    %rax,%rdx
   13999:	41 80 39 00          	cmpb   $0x0,(%r9)
   1399d:	74 14                	je     139b3 <strstr+0x2f>
   1399f:	4c 89 d6             	mov    %r10,%rsi
   139a2:	4c 89 cf             	mov    %r9,%rdi
   139a5:	e8 aa fe ff ff       	call   13854 <memcmp>
   139aa:	85 c0                	test   %eax,%eax
   139ac:	74 08                	je     139b6 <strstr+0x32>
   139ae:	49 ff c1             	inc    %r9
   139b1:	eb e6                	jmp    13999 <strstr+0x15>
   139b3:	45 31 c9             	xor    %r9d,%r9d
   139b6:	4c 89 c8             	mov    %r9,%rax
   139b9:	c3                   	ret    

00000000000139ba <strcpy>:
   139ba:	f3 0f 1e fa          	endbr64 
   139be:	48 89 f8             	mov    %rdi,%rax
   139c1:	31 d2                	xor    %edx,%edx
   139c3:	8a 0c 16             	mov    (%rsi,%rdx,1),%cl
   139c6:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
   139c9:	48 ff c2             	inc    %rdx
   139cc:	84 c9                	test   %cl,%cl
   139ce:	75 f3                	jne    139c3 <strcpy+0x9>
   139d0:	c3                   	ret    

00000000000139d1 <strncpy>:
   139d1:	f3 0f 1e fa          	endbr64 
   139d5:	48 89 f8             	mov    %rdi,%rax
   139d8:	31 c9                	xor    %ecx,%ecx
   139da:	49 89 d0             	mov    %rdx,%r8
   139dd:	4c 8d 0c 08          	lea    (%rax,%rcx,1),%r9
   139e1:	49 29 c8             	sub    %rcx,%r8
   139e4:	48 39 ca             	cmp    %rcx,%rdx
   139e7:	74 14                	je     139fd <strncpy+0x2c>
   139e9:	40 8a 3c 0e          	mov    (%rsi,%rcx,1),%dil
   139ed:	40 88 3c 08          	mov    %dil,(%rax,%rcx,1)
   139f1:	48 ff c1             	inc    %rcx
   139f4:	40 84 ff             	test   %dil,%dil
   139f7:	75 e1                	jne    139da <strncpy+0x9>
   139f9:	31 d2                	xor    %edx,%edx
   139fb:	eb 01                	jmp    139fe <strncpy+0x2d>
   139fd:	c3                   	ret    
   139fe:	4c 39 c2             	cmp    %r8,%rdx
   13a01:	74 0a                	je     13a0d <strncpy+0x3c>
   13a03:	41 c6 04 11 00       	movb   $0x0,(%r9,%rdx,1)
   13a08:	48 ff c2             	inc    %rdx
   13a0b:	eb f1                	jmp    139fe <strncpy+0x2d>
   13a0d:	c3                   	ret    

0000000000013a0e <strndup>:
   13a0e:	f3 0f 1e fa          	endbr64 
   13a12:	41 54                	push   %r12
   13a14:	55                   	push   %rbp
   13a15:	48 89 fd             	mov    %rdi,%rbp
   13a18:	53                   	push   %rbx
   13a19:	e8 05 ff ff ff       	call   13923 <strnlen>
   13a1e:	48 8d 78 01          	lea    0x1(%rax),%rdi
   13a22:	48 89 c3             	mov    %rax,%rbx
   13a25:	e8 17 8c ff ff       	call   c641 <malloc>
   13a2a:	49 89 c4             	mov    %rax,%r12
   13a2d:	48 85 c0             	test   %rax,%rax
   13a30:	74 13                	je     13a45 <strndup+0x37>
   13a32:	48 89 da             	mov    %rbx,%rdx
   13a35:	48 89 ee             	mov    %rbp,%rsi
   13a38:	48 89 c7             	mov    %rax,%rdi
   13a3b:	e8 cd 38 00 00       	call   1730d <__memcpy>
   13a40:	41 c6 04 1c 00       	movb   $0x0,(%r12,%rbx,1)
   13a45:	4c 89 e0             	mov    %r12,%rax
   13a48:	5b                   	pop    %rbx
   13a49:	5d                   	pop    %rbp
   13a4a:	41 5c                	pop    %r12
   13a4c:	c3                   	ret    

0000000000013a4d <strdup>:
   13a4d:	f3 0f 1e fa          	endbr64 
   13a51:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   13a55:	e9 b4 ff ff ff       	jmp    13a0e <strndup>

0000000000013a5a <digit_value>:
   13a5a:	f3 0f 1e fa          	endbr64 
   13a5e:	89 f8                	mov    %edi,%eax
   13a60:	83 ff 60             	cmp    $0x60,%edi
   13a63:	76 04                	jbe    13a69 <digit_value+0xf>
   13a65:	83 e8 57             	sub    $0x57,%eax
   13a68:	c3                   	ret    
   13a69:	83 ff 40             	cmp    $0x40,%edi
   13a6c:	76 04                	jbe    13a72 <digit_value+0x18>
   13a6e:	83 e8 37             	sub    $0x37,%eax
   13a71:	c3                   	ret    
   13a72:	83 ff 39             	cmp    $0x39,%edi
   13a75:	77 03                	ja     13a7a <digit_value+0x20>
   13a77:	83 e8 30             	sub    $0x30,%eax
   13a7a:	c3                   	ret    

0000000000013a7b <strtoul>:
   13a7b:	f3 0f 1e fa          	endbr64 
   13a7f:	41 54                	push   %r12
   13a81:	49 89 f4             	mov    %rsi,%r12
   13a84:	55                   	push   %rbp
   13a85:	89 d5                	mov    %edx,%ebp
   13a87:	53                   	push   %rbx
   13a88:	48 89 fb             	mov    %rdi,%rbx
   13a8b:	0f be 3b             	movsbl (%rbx),%edi
   13a8e:	e8 1d 59 00 00       	call   193b0 <isspace>
   13a93:	89 c2                	mov    %eax,%edx
   13a95:	85 c0                	test   %eax,%eax
   13a97:	74 05                	je     13a9e <strtoul+0x23>
   13a99:	48 ff c3             	inc    %rbx
   13a9c:	eb ed                	jmp    13a8b <strtoul+0x10>
   13a9e:	8a 03                	mov    (%rbx),%al
   13aa0:	3c 2d                	cmp    $0x2d,%al
   13aa2:	75 0a                	jne    13aae <strtoul+0x33>
   13aa4:	48 ff c3             	inc    %rbx
   13aa7:	ba 01 00 00 00       	mov    $0x1,%edx
   13aac:	eb 07                	jmp    13ab5 <strtoul+0x3a>
   13aae:	3c 2b                	cmp    $0x2b,%al
   13ab0:	75 03                	jne    13ab5 <strtoul+0x3a>
   13ab2:	48 ff c3             	inc    %rbx
   13ab5:	8a 03                	mov    (%rbx),%al
   13ab7:	85 ed                	test   %ebp,%ebp
   13ab9:	75 26                	jne    13ae1 <strtoul+0x66>
   13abb:	bd 0a 00 00 00       	mov    $0xa,%ebp
   13ac0:	3c 30                	cmp    $0x30,%al
   13ac2:	75 1d                	jne    13ae1 <strtoul+0x66>
   13ac4:	8a 43 01             	mov    0x1(%rbx),%al
   13ac7:	83 e0 df             	and    $0xffffffdf,%eax
   13aca:	3c 58                	cmp    $0x58,%al
   13acc:	74 0a                	je     13ad8 <strtoul+0x5d>
   13ace:	48 ff c3             	inc    %rbx
   13ad1:	bd 08 00 00 00       	mov    $0x8,%ebp
   13ad6:	eb 09                	jmp    13ae1 <strtoul+0x66>
   13ad8:	48 83 c3 02          	add    $0x2,%rbx
   13adc:	bd 10 00 00 00       	mov    $0x10,%ebp
   13ae1:	45 31 c0             	xor    %r8d,%r8d
   13ae4:	48 63 cd             	movslq %ebp,%rcx
   13ae7:	0f be 3b             	movsbl (%rbx),%edi
   13aea:	e8 6b ff ff ff       	call   13a5a <digit_value>
   13aef:	39 c5                	cmp    %eax,%ebp
   13af1:	76 0e                	jbe    13b01 <strtoul+0x86>
   13af3:	4c 0f af c1          	imul   %rcx,%r8
   13af7:	89 c0                	mov    %eax,%eax
   13af9:	48 ff c3             	inc    %rbx
   13afc:	49 01 c0             	add    %rax,%r8
   13aff:	eb e6                	jmp    13ae7 <strtoul+0x6c>
   13b01:	85 d2                	test   %edx,%edx
   13b03:	74 03                	je     13b08 <strtoul+0x8d>
   13b05:	49 f7 d8             	neg    %r8
   13b08:	4d 85 e4             	test   %r12,%r12
   13b0b:	74 04                	je     13b11 <strtoul+0x96>
   13b0d:	49 89 1c 24          	mov    %rbx,(%r12)
   13b11:	5b                   	pop    %rbx
   13b12:	4c 89 c0             	mov    %r8,%rax
   13b15:	5d                   	pop    %rbp
   13b16:	41 5c                	pop    %r12
   13b18:	c3                   	ret    

0000000000013b19 <sync_exec>:
   13b19:	f3 0f 1e fa          	endbr64 
   13b1d:	41 54                	push   %r12
   13b1f:	48 8d 15 8a 36 01 00 	lea    0x1368a(%rip),%rdx        # 271b0 <sync_cmd>
   13b26:	48 83 ec 10          	sub    $0x10,%rsp
   13b2a:	48 8b 05 3f 64 01 00 	mov    0x1643f(%rip),%rax        # 29f70 <__stack_chk_guard>
   13b31:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13b36:	31 c0                	xor    %eax,%eax
   13b38:	48 89 e1             	mov    %rsp,%rcx
   13b3b:	e8 6f b6 ff ff       	call   f1af <parse_options>
   13b40:	41 89 c4             	mov    %eax,%r12d
   13b43:	85 c0                	test   %eax,%eax
   13b45:	75 28                	jne    13b6f <sync_exec+0x56>
   13b47:	48 8b 3c 24          	mov    (%rsp),%rdi
   13b4b:	e8 11 d4 00 00       	call   20f61 <sync>
   13b50:	41 89 c4             	mov    %eax,%r12d
   13b53:	85 c0                	test   %eax,%eax
   13b55:	74 18                	je     13b6f <sync_exec+0x56>
   13b57:	89 c7                	mov    %eax,%edi
   13b59:	e8 3e fc ff ff       	call   1379c <strerror>
   13b5e:	48 8d 3d c0 00 01 00 	lea    0x100c0(%rip),%rdi        # 23c25 <.LC0>
   13b65:	48 89 c6             	mov    %rax,%rsi
   13b68:	31 c0                	xor    %eax,%eax
   13b6a:	e8 2f 36 00 00       	call   1719e <printf>
   13b6f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13b74:	48 2b 05 f5 63 01 00 	sub    0x163f5(%rip),%rax        # 29f70 <__stack_chk_guard>
   13b7b:	74 05                	je     13b82 <sync_exec+0x69>
   13b7d:	e8 de ee fe ff       	call   2a60 <__stack_chk_fail>
   13b82:	48 83 c4 10          	add    $0x10,%rsp
   13b86:	44 89 e0             	mov    %r12d,%eax
   13b89:	41 5c                	pop    %r12
   13b8b:	c3                   	ret    

0000000000013b8c <tcp_sack_block>:
   13b8c:	8b 8f 8c 00 00 00    	mov    0x8c(%rdi),%ecx
   13b92:	4c 8b 87 c8 00 00 00 	mov    0xc8(%rdi),%r8
   13b99:	48 81 c7 c8 00 00 00 	add    $0xc8,%rdi
   13ba0:	89 c8                	mov    %ecx,%eax
   13ba2:	49 39 f8             	cmp    %rdi,%r8
   13ba5:	74 1d                	je     13bc4 <tcp_sack_block+0x38>
   13ba7:	4d 8b 50 18          	mov    0x18(%r8),%r10
   13bab:	45 8b 0a             	mov    (%r10),%r9d
   13bae:	45 89 cb             	mov    %r9d,%r11d
   13bb1:	41 29 c3             	sub    %eax,%r11d
   13bb4:	45 85 db             	test   %r11d,%r11d
   13bb7:	7e 21                	jle    13bda <tcp_sack_block+0x4e>
   13bb9:	45 89 cb             	mov    %r9d,%r11d
   13bbc:	41 29 f3             	sub    %esi,%r11d
   13bbf:	45 85 db             	test   %r11d,%r11d
   13bc2:	7e 13                	jle    13bd7 <tcp_sack_block+0x4b>
   13bc4:	45 31 c0             	xor    %r8d,%r8d
   13bc7:	39 f0                	cmp    %esi,%eax
   13bc9:	78 25                	js     13bf0 <tcp_sack_block+0x64>
   13bcb:	89 42 04             	mov    %eax,0x4(%rdx)
   13bce:	29 c8                	sub    %ecx,%eax
   13bd0:	89 0a                	mov    %ecx,(%rdx)
   13bd2:	41 89 c0             	mov    %eax,%r8d
   13bd5:	eb 19                	jmp    13bf0 <tcp_sack_block+0x64>
   13bd7:	44 89 c9             	mov    %r9d,%ecx
   13bda:	45 8b 4a 04          	mov    0x4(%r10),%r9d
   13bde:	4d 8b 00             	mov    (%r8),%r8
   13be1:	45 89 ca             	mov    %r9d,%r10d
   13be4:	41 29 c2             	sub    %eax,%r10d
   13be7:	45 85 d2             	test   %r10d,%r10d
   13bea:	41 0f 4f c1          	cmovg  %r9d,%eax
   13bee:	eb b2                	jmp    13ba2 <tcp_sack_block+0x16>
   13bf0:	44 89 c0             	mov    %r8d,%eax
   13bf3:	c3                   	ret    

0000000000013bf4 <tcp_rx_seq>:
   13bf4:	8b 97 8c 00 00 00    	mov    0x8c(%rdi),%edx
   13bfa:	8b 8f 90 00 00 00    	mov    0x90(%rdi),%ecx
   13c00:	31 c0                	xor    %eax,%eax
   13c02:	01 f2                	add    %esi,%edx
   13c04:	89 97 8c 00 00 00    	mov    %edx,0x8c(%rdi)
   13c0a:	39 f1                	cmp    %esi,%ecx
   13c0c:	76 04                	jbe    13c12 <tcp_rx_seq+0x1e>
   13c0e:	89 c8                	mov    %ecx,%eax
   13c10:	29 f0                	sub    %esi,%eax
   13c12:	89 87 90 00 00 00    	mov    %eax,0x90(%rdi)
   13c18:	8b 87 94 00 00 00    	mov    0x94(%rdi),%eax
   13c1e:	4c 8d 87 b6 00 00 00 	lea    0xb6(%rdi),%r8
   13c25:	89 87 98 00 00 00    	mov    %eax,0x98(%rdi)
   13c2b:	48 8d 87 9e 00 00 00 	lea    0x9e(%rdi),%rax
   13c32:	8b 30                	mov    (%rax),%esi
   13c34:	8b 48 04             	mov    0x4(%rax),%ecx
   13c37:	39 ce                	cmp    %ecx,%esi
   13c39:	74 0d                	je     13c48 <tcp_rx_seq+0x54>
   13c3b:	39 d6                	cmp    %edx,%esi
   13c3d:	79 02                	jns    13c41 <tcp_rx_seq+0x4d>
   13c3f:	89 10                	mov    %edx,(%rax)
   13c41:	39 d1                	cmp    %edx,%ecx
   13c43:	79 03                	jns    13c48 <tcp_rx_seq+0x54>
   13c45:	89 50 04             	mov    %edx,0x4(%rax)
   13c48:	48 83 c0 08          	add    $0x8,%rax
   13c4c:	49 39 c0             	cmp    %rax,%r8
   13c4f:	75 e1                	jne    13c32 <tcp_rx_seq+0x3e>
   13c51:	83 4f 20 04          	orl    $0x4,0x20(%rdi)
   13c55:	c3                   	ret    

0000000000013c56 <tcp_discard>:
   13c56:	f3 0f 1e fa          	endbr64 
   13c5a:	48 8b 05 1f 36 01 00 	mov    0x1361f(%rip),%rax        # 27280 <tcp_conns>
   13c61:	41 54                	push   %r12
   13c63:	45 31 e4             	xor    %r12d,%r12d
   13c66:	55                   	push   %rbp
   13c67:	48 8d 2d 12 36 01 00 	lea    0x13612(%rip),%rbp        # 27280 <tcp_conns>
   13c6e:	53                   	push   %rbx
   13c6f:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
   13c73:	48 8d 43 10          	lea    0x10(%rbx),%rax
   13c77:	48 39 e8             	cmp    %rbp,%rax
   13c7a:	74 33                	je     13caf <tcp_discard+0x59>
   13c7c:	48 8b bb d0 00 00 00 	mov    0xd0(%rbx),%rdi
   13c83:	48 8d 83 c8 00 00 00 	lea    0xc8(%rbx),%rax
   13c8a:	48 39 c7             	cmp    %rax,%rdi
   13c8d:	74 16                	je     13ca5 <tcp_discard+0x4f>
   13c8f:	48 8b 17             	mov    (%rdi),%rdx
   13c92:	48 8b 47 08          	mov    0x8(%rdi),%rax
   13c96:	41 ff c4             	inc    %r12d
   13c99:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13c9d:	48 89 10             	mov    %rdx,(%rax)
   13ca0:	e8 f1 5f ff ff       	call   9c96 <free_iob>
   13ca5:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   13ca9:	48 83 eb 10          	sub    $0x10,%rbx
   13cad:	eb c4                	jmp    13c73 <tcp_discard+0x1d>
   13caf:	44 89 e0             	mov    %r12d,%eax
   13cb2:	5b                   	pop    %rbx
   13cb3:	5d                   	pop    %rbp
   13cb4:	41 5c                	pop    %r12
   13cb6:	c3                   	ret    

0000000000013cb7 <tcp_open>:
   13cb7:	f3 0f 1e fa          	endbr64 
   13cbb:	41 57                	push   %r15
   13cbd:	41 56                	push   %r14
   13cbf:	49 89 f6             	mov    %rsi,%r14
   13cc2:	41 55                	push   %r13
   13cc4:	49 89 fd             	mov    %rdi,%r13
   13cc7:	bf f0 01 00 00       	mov    $0x1f0,%edi
   13ccc:	41 54                	push   %r12
   13cce:	49 89 d4             	mov    %rdx,%r12
   13cd1:	55                   	push   %rbp
   13cd2:	48 83 ec 10          	sub    $0x10,%rsp
   13cd6:	e8 7f 89 ff ff       	call   c65a <zalloc>
   13cdb:	48 85 c0             	test   %rax,%rax
   13cde:	75 0a                	jne    13cea <tcp_open+0x33>
   13ce0:	b8 77 9f f5 ce       	mov    $0xcef59f77,%eax
   13ce5:	e9 5d 01 00 00       	jmp    13e47 <tcp_open+0x190>
   13cea:	48 89 c5             	mov    %rax,%rbp
   13ced:	48 8d 05 ec 26 01 00 	lea    0x126ec(%rip),%rax        # 263e0 <null_intf>
   13cf4:	48 89 45 28          	mov    %rax,0x28(%rbp)
   13cf8:	48 8d 05 41 35 01 00 	lea    0x13541(%rip),%rax        # 27240 <tcp_xfer_desc>
   13cff:	4c 8d 7d 48          	lea    0x48(%rbp),%r15
   13d03:	48 89 45 38          	mov    %rax,0x38(%rbp)
   13d07:	48 89 45 40          	mov    %rax,0x40(%rbp)
   13d0b:	48 8d 85 d8 00 00 00 	lea    0xd8(%rbp),%rax
   13d12:	48 89 85 d8 00 00 00 	mov    %rax,0xd8(%rbp)
   13d19:	48 89 85 e0 00 00 00 	mov    %rax,0xe0(%rbp)
   13d20:	48 8d 05 39 35 01 00 	lea    0x13539(%rip),%rax        # 27260 <tcp_process_desc>
   13d27:	48 89 85 e8 00 00 00 	mov    %rax,0xe8(%rbp)
   13d2e:	48 8d 05 89 09 00 00 	lea    0x989(%rip),%rax        # 146be <tcp_expired>
   13d35:	48 89 85 38 01 00 00 	mov    %rax,0x138(%rbp)
   13d3c:	48 8d 05 56 06 00 00 	lea    0x656(%rip),%rax        # 14399 <tcp_keepalive_expired>
   13d43:	48 89 85 88 01 00 00 	mov    %rax,0x188(%rbp)
   13d4a:	48 8d 05 4a 09 00 00 	lea    0x94a(%rip),%rax        # 1469b <tcp_wait_expired>
   13d51:	48 89 85 d8 01 00 00 	mov    %rax,0x1d8(%rbp)
   13d58:	48 b8 02 00 00 00 02 	movabs $0x200000002,%rax
   13d5f:	00 00 00 
   13d62:	48 89 6d 30          	mov    %rbp,0x30(%rbp)
   13d66:	48 89 ad f0 00 00 00 	mov    %rbp,0xf0(%rbp)
   13d6d:	48 89 ad 40 01 00 00 	mov    %rbp,0x140(%rbp)
   13d74:	48 89 ad 90 01 00 00 	mov    %rbp,0x190(%rbp)
   13d7b:	48 89 ad e0 01 00 00 	mov    %rbp,0x1e0(%rbp)
   13d82:	48 89 45 78          	mov    %rax,0x78(%rbp)
   13d86:	e8 b6 bc ff ff       	call   fa41 <random>
   13d8b:	4c 89 ff             	mov    %r15,%rdi
   13d8e:	ba 20 00 00 00       	mov    $0x20,%edx
   13d93:	4c 89 f6             	mov    %r14,%rsi
   13d96:	89 85 80 00 00 00    	mov    %eax,0x80(%rbp)
   13d9c:	48 8d 85 b8 00 00 00 	lea    0xb8(%rbp),%rax
   13da3:	48 89 85 b8 00 00 00 	mov    %rax,0xb8(%rbp)
   13daa:	48 89 85 c0 00 00 00 	mov    %rax,0xc0(%rbp)
   13db1:	48 8d 85 c8 00 00 00 	lea    0xc8(%rbp),%rax
   13db8:	48 89 85 c8 00 00 00 	mov    %rax,0xc8(%rbp)
   13dbf:	48 89 85 d0 00 00 00 	mov    %rax,0xd0(%rbp)
   13dc6:	e8 42 35 00 00       	call   1730d <__memcpy>
   13dcb:	4c 89 ff             	mov    %r15,%rdi
   13dce:	e8 e2 10 00 00       	call   14eb5 <tcpip_mtu>
   13dd3:	48 85 c0             	test   %rax,%rax
   13dd6:	75 07                	jne    13ddf <tcp_open+0x128>
   13dd8:	b8 70 9f f5 d7       	mov    $0xd7f59f70,%eax
   13ddd:	eb 58                	jmp    13e37 <tcp_open+0x180>
   13ddf:	48 83 e8 14          	sub    $0x14,%rax
   13de3:	48 8d 35 6b 00 00 00 	lea    0x6b(%rip),%rsi        # 13e55 <tcp_port_available>
   13dea:	4c 89 e7             	mov    %r12,%rdi
   13ded:	48 89 45 70          	mov    %rax,0x70(%rbp)
   13df1:	e8 04 11 00 00       	call   14efa <tcpip_bind>
   13df6:	85 c0                	test   %eax,%eax
   13df8:	78 3d                	js     13e37 <tcp_open+0x180>
   13dfa:	89 45 68             	mov    %eax,0x68(%rbp)
   13dfd:	31 f6                	xor    %esi,%esi
   13dff:	48 8d bd f8 00 00 00 	lea    0xf8(%rbp),%rdi
   13e06:	e8 57 c4 ff ff       	call   10262 <start_timer_fixed>
   13e0b:	48 8d bd e8 01 00 00 	lea    0x1e8(%rbp),%rdi
   13e12:	e8 cc c5 00 00       	call   203e3 <pending_get>
   13e17:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
   13e1b:	4c 89 ee             	mov    %r13,%rsi
   13e1e:	e8 4e 59 ff ff       	call   9771 <intf_plug_plug>
   13e23:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   13e27:	48 8d 35 52 34 01 00 	lea    0x13452(%rip),%rsi        # 27280 <tcp_conns>
   13e2e:	e8 8e 82 ff ff       	call   c0c1 <extern_list_add>
   13e33:	31 c0                	xor    %eax,%eax
   13e35:	eb 10                	jmp    13e47 <tcp_open+0x190>
   13e37:	48 89 ef             	mov    %rbp,%rdi
   13e3a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   13e3e:	e8 fb bf ff ff       	call   fe3e <ref_decrement>
   13e43:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   13e47:	48 83 c4 10          	add    $0x10,%rsp
   13e4b:	5d                   	pop    %rbp
   13e4c:	41 5c                	pop    %r12
   13e4e:	41 5d                	pop    %r13
   13e50:	41 5e                	pop    %r14
   13e52:	41 5f                	pop    %r15
   13e54:	c3                   	ret    

0000000000013e55 <tcp_port_available>:
   13e55:	f3 0f 1e fa          	endbr64 
   13e59:	48 8b 0d 20 34 01 00 	mov    0x13420(%rip),%rcx        # 27280 <tcp_conns>
   13e60:	89 f8                	mov    %edi,%eax
   13e62:	48 8d 51 f0          	lea    -0x10(%rcx),%rdx
   13e66:	48 8d 0d 13 34 01 00 	lea    0x13413(%rip),%rcx        # 27280 <tcp_conns>
   13e6d:	48 8d 72 10          	lea    0x10(%rdx),%rsi
   13e71:	48 39 ce             	cmp    %rcx,%rsi
   13e74:	74 15                	je     13e8b <tcp_port_available+0x36>
   13e76:	3b 42 68             	cmp    0x68(%rdx),%eax
   13e79:	75 06                	jne    13e81 <tcp_port_available+0x2c>
   13e7b:	b8 6c 9f f5 fc       	mov    $0xfcf59f6c,%eax
   13e80:	c3                   	ret    
   13e81:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   13e85:	48 83 ea 10          	sub    $0x10,%rdx
   13e89:	eb e2                	jmp    13e6d <tcp_port_available+0x18>
   13e8b:	c3                   	ret    

0000000000013e8c <tcp_progress>:
   13e8c:	f3 0f 1e fa          	endbr64 
   13e90:	8b 47 78             	mov    0x78(%rdi),%eax
   13e93:	25 00 02 02 00       	and    $0x20200,%eax
   13e98:	3d 00 02 02 00       	cmp    $0x20200,%eax
   13e9d:	74 1c                	je     13ebb <tcp_progress+0x2f>
   13e9f:	50                   	push   %rax
   13ea0:	48 8d 7e 10          	lea    0x10(%rsi),%rdi
   13ea4:	48 8d 15 a0 fd 00 00 	lea    0xfda0(%rip),%rdx        # 23c4b <.LC0>
   13eab:	31 c0                	xor    %eax,%eax
   13ead:	be 20 00 00 00       	mov    $0x20,%esi
   13eb2:	e8 ca 31 00 00       	call   17081 <snprintf>
   13eb7:	31 c0                	xor    %eax,%eax
   13eb9:	5a                   	pop    %rdx
   13eba:	c3                   	ret    
   13ebb:	31 c0                	xor    %eax,%eax
   13ebd:	c3                   	ret    

0000000000013ebe <tcp_open_uri>:
   13ebe:	f3 0f 1e fa          	endbr64 
   13ec2:	41 54                	push   %r12
   13ec4:	55                   	push   %rbp
   13ec5:	53                   	push   %rbx
   13ec6:	48 83 ec 30          	sub    $0x30,%rsp
   13eca:	48 8b 05 9f 60 01 00 	mov    0x1609f(%rip),%rax        # 29f70 <__stack_chk_guard>
   13ed1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   13ed6:	31 c0                	xor    %eax,%eax
   13ed8:	48 83 7e 30 00       	cmpq   $0x0,0x30(%rsi)
   13edd:	75 07                	jne    13ee6 <tcp_open_uri+0x28>
   13edf:	b8 7e 9f f5 e3       	mov    $0xe3f59f7e,%eax
   13ee4:	eb 40                	jmp    13f26 <tcp_open_uri+0x68>
   13ee6:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   13eeb:	48 89 fd             	mov    %rdi,%rbp
   13eee:	48 89 f3             	mov    %rsi,%rbx
   13ef1:	b9 20 00 00 00       	mov    $0x20,%ecx
   13ef6:	4c 89 e7             	mov    %r12,%rdi
   13ef9:	31 c0                	xor    %eax,%eax
   13efb:	f3 aa                	rep stos %al,%es:(%rdi)
   13efd:	31 f6                	xor    %esi,%esi
   13eff:	48 89 df             	mov    %rbx,%rdi
   13f02:	e8 63 27 00 00       	call   1666a <uri_port>
   13f07:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   13f0b:	45 31 c0             	xor    %r8d,%r8d
   13f0e:	4c 89 e2             	mov    %r12,%rdx
   13f11:	8b 35 15 06 01 00    	mov    0x10615(%rip),%esi        # 2452c <tcp_sock_stream>
   13f17:	48 89 ef             	mov    %rbp,%rdi
   13f1a:	86 c4                	xchg   %al,%ah
   13f1c:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
   13f21:	e8 61 c2 ff ff       	call   10187 <xfer_open_named_socket>
   13f26:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   13f2b:	48 2b 15 3e 60 01 00 	sub    0x1603e(%rip),%rdx        # 29f70 <__stack_chk_guard>
   13f32:	74 05                	je     13f39 <tcp_open_uri+0x7b>
   13f34:	e8 27 eb fe ff       	call   2a60 <__stack_chk_fail>
   13f39:	48 83 c4 30          	add    $0x30,%rsp
   13f3d:	5b                   	pop    %rbx
   13f3e:	5d                   	pop    %rbp
   13f3f:	41 5c                	pop    %r12
   13f41:	c3                   	ret    

0000000000013f42 <tcp_xfer_window>:
   13f42:	f3 0f 1e fa          	endbr64 
   13f46:	48 8d 97 b8 00 00 00 	lea    0xb8(%rdi),%rdx
   13f4d:	31 c0                	xor    %eax,%eax
   13f4f:	48 39 97 b8 00 00 00 	cmp    %rdx,0xb8(%rdi)
   13f56:	75 23                	jne    13f7b <tcp_xfer_window+0x39>
   13f58:	8b 57 78             	mov    0x78(%rdi),%edx
   13f5b:	81 e2 01 02 00 00    	and    $0x201,%edx
   13f61:	81 fa 00 02 00 00    	cmp    $0x200,%edx
   13f67:	75 12                	jne    13f7b <tcp_xfer_window+0x39>
   13f69:	8b 87 88 00 00 00    	mov    0x88(%rdi),%eax
   13f6f:	ba b8 04 00 00       	mov    $0x4b8,%edx
   13f74:	48 39 d0             	cmp    %rdx,%rax
   13f77:	48 0f 47 c2          	cmova  %rdx,%rax
   13f7b:	c3                   	ret    

0000000000013f7c <tcp_xmit_sack.part.0>:
   13f7c:	41 57                	push   %r15
   13f7e:	41 56                	push   %r14
   13f80:	41 89 f6             	mov    %esi,%r14d
   13f83:	41 55                	push   %r13
   13f85:	41 54                	push   %r12
   13f87:	45 31 e4             	xor    %r12d,%r12d
   13f8a:	55                   	push   %rbp
   13f8b:	53                   	push   %rbx
   13f8c:	48 89 fb             	mov    %rdi,%rbx
   13f8f:	48 83 ec 48          	sub    $0x48,%rsp
   13f93:	8b 77 78             	mov    0x78(%rdi),%esi
   13f96:	48 8b 05 d3 5f 01 00 	mov    0x15fd3(%rip),%rax        # 29f70 <__stack_chk_guard>
   13f9d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   13fa2:	31 c0                	xor    %eax,%eax
   13fa4:	89 f0                	mov    %esi,%eax
   13fa6:	25 01 02 00 00       	and    $0x201,%eax
   13fab:	3d 00 02 00 00       	cmp    $0x200,%eax
   13fb0:	75 45                	jne    13ff7 <tcp_xmit_sack.part.0+0x7b>
   13fb2:	8b 87 88 00 00 00    	mov    0x88(%rdi),%eax
   13fb8:	ba b8 04 00 00       	mov    $0x4b8,%edx
   13fbd:	48 8b 8f b8 00 00 00 	mov    0xb8(%rdi),%rcx
   13fc4:	4c 8d 83 b8 00 00 00 	lea    0xb8(%rbx),%r8
   13fcb:	48 39 d0             	cmp    %rdx,%rax
   13fce:	48 8b 39             	mov    (%rcx),%rdi
   13fd1:	48 0f 47 c2          	cmova  %rdx,%rax
   13fd5:	4c 39 c1             	cmp    %r8,%rcx
   13fd8:	74 1d                	je     13ff7 <tcp_xmit_sack.part.0+0x7b>
   13fda:	48 8b 51 20          	mov    0x20(%rcx),%rdx
   13fde:	48 2b 51 18          	sub    0x18(%rcx),%rdx
   13fe2:	48 89 f9             	mov    %rdi,%rcx
   13fe5:	48 39 c2             	cmp    %rax,%rdx
   13fe8:	48 8b 3f             	mov    (%rdi),%rdi
   13feb:	48 0f 47 d0          	cmova  %rax,%rdx
   13fef:	49 01 d4             	add    %rdx,%r12
   13ff2:	48 29 d0             	sub    %rdx,%rax
   13ff5:	eb de                	jmp    13fd5 <tcp_xmit_sack.part.0+0x59>
   13ff7:	89 f0                	mov    %esi,%eax
   13ff9:	0f b6 ec             	movzbl %ah,%ebp
   13ffc:	f7 d5                	not    %ebp
   13ffe:	21 f5                	and    %esi,%ebp
   14000:	40 0f b6 c5          	movzbl %bpl,%eax
   14004:	89 44 24 04          	mov    %eax,0x4(%rsp)
   14008:	89 e8                	mov    %ebp,%eax
   1400a:	83 e0 03             	and    $0x3,%eax
   1400d:	83 f8 01             	cmp    $0x1,%eax
   14010:	44 89 e0             	mov    %r12d,%eax
   14013:	83 d8 ff             	sbb    $0xffffffff,%eax
   14016:	89 83 84 00 00 00    	mov    %eax,0x84(%rbx)
   1401c:	85 c0                	test   %eax,%eax
   1401e:	75 0b                	jne    1402b <tcp_xmit_sack.part.0+0xaf>
   14020:	f6 43 20 04          	testb  $0x4,0x20(%rbx)
   14024:	75 11                	jne    14037 <tcp_xmit_sack.part.0+0xbb>
   14026:	e9 33 03 00 00       	jmp    1435e <tcp_xmit_sack.part.0+0x3e2>
   1402b:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
   14032:	e8 6b c2 ff ff       	call   102a2 <start_timer>
   14037:	49 8d bc 24 90 00 00 	lea    0x90(%r12),%rdi
   1403e:	00 
   1403f:	e8 38 5c ff ff       	call   9c7c <alloc_iob>
   14044:	49 89 c5             	mov    %rax,%r13
   14047:	48 85 c0             	test   %rax,%rax
   1404a:	0f 84 0e 03 00 00    	je     1435e <tcp_xmit_sack.part.0+0x3e2>
   14050:	48 81 40 18 90 00 00 	addq   $0x90,0x18(%rax)
   14057:	00 
   14058:	48 8d b3 b8 00 00 00 	lea    0xb8(%rbx),%rsi
   1405f:	4d 89 e7             	mov    %r12,%r15
   14062:	48 81 40 20 90 00 00 	addq   $0x90,0x20(%rax)
   14069:	00 
   1406a:	48 8b 83 b8 00 00 00 	mov    0xb8(%rbx),%rax
   14071:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   14076:	4c 8b 00             	mov    (%rax),%r8
   14079:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
   1407e:	74 42                	je     140c2 <tcp_xmit_sack.part.0+0x146>
   14080:	48 8b 70 18          	mov    0x18(%rax),%rsi
   14084:	48 8b 50 20          	mov    0x20(%rax),%rdx
   14088:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   1408d:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   14091:	48 29 f2             	sub    %rsi,%rdx
   14094:	4c 39 fa             	cmp    %r15,%rdx
   14097:	49 0f 47 d7          	cmova  %r15,%rdx
   1409b:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   1409f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   140a4:	49 89 45 20          	mov    %rax,0x20(%r13)
   140a8:	e8 60 32 00 00       	call   1730d <__memcpy>
   140ad:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   140b2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   140b7:	4c 89 c0             	mov    %r8,%rax
   140ba:	49 29 d7             	sub    %rdx,%r15
   140bd:	4d 8b 00             	mov    (%r8),%r8
   140c0:	eb b7                	jmp    14079 <tcp_xmit_sack.part.0+0xfd>
   140c2:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   140c6:	e8 6d 33 00 00       	call   17438 <xfer_window>
   140cb:	0f b6 8b 9d 00 00 00 	movzbl 0x9d(%rbx),%ecx
   140d2:	ba ff ff 00 00       	mov    $0xffff,%edx
   140d7:	d3 e2                	shl    %cl,%edx
   140d9:	b9 00 00 04 00       	mov    $0x40000,%ecx
   140de:	39 ca                	cmp    %ecx,%edx
   140e0:	0f 47 d1             	cmova  %ecx,%edx
   140e3:	39 c2                	cmp    %eax,%edx
   140e5:	0f 47 d0             	cmova  %eax,%edx
   140e8:	83 e2 fc             	and    $0xfffffffc,%edx
   140eb:	3b 93 90 00 00 00    	cmp    0x90(%rbx),%edx
   140f1:	76 06                	jbe    140f9 <tcp_xmit_sack.part.0+0x17d>
   140f3:	89 93 90 00 00 00    	mov    %edx,0x90(%rbx)
   140f9:	40 80 e5 02          	and    $0x2,%bpl
   140fd:	4d 8b 7d 18          	mov    0x18(%r13),%r15
   14101:	0f 84 48 02 00 00    	je     1434f <tcp_xmit_sack.part.0+0x3d3>
   14107:	49 8d 7f f4          	lea    -0xc(%r15),%rdi
   1410b:	41 c6 47 fc 02       	movb   $0x2,-0x4(%r15)
   14110:	b9 02 00 00 00       	mov    $0x2,%ecx
   14115:	41 c6 47 fd 04       	movb   $0x4,-0x3(%r15)
   1411a:	8b 43 70             	mov    0x70(%rbx),%eax
   1411d:	41 c6 47 f8 01       	movb   $0x1,-0x8(%r15)
   14122:	86 c4                	xchg   %al,%ah
   14124:	41 c6 47 f9 03       	movb   $0x3,-0x7(%r15)
   14129:	66 41 89 47 fe       	mov    %ax,-0x2(%r15)
   1412e:	b8 01 00 00 00       	mov    $0x1,%eax
   14133:	41 c6 47 fa 03       	movb   $0x3,-0x6(%r15)
   14138:	41 c6 47 fb 09       	movb   $0x9,-0x5(%r15)
   1413d:	49 89 7d 18          	mov    %rdi,0x18(%r13)
   14141:	f3 aa                	rep stos %al,%es:(%rdi)
   14143:	41 c6 47 f6 04       	movb   $0x4,-0xa(%r15)
   14148:	41 c6 47 f7 02       	movb   $0x2,-0x9(%r15)
   1414d:	49 8b 6d 18          	mov    0x18(%r13),%rbp
   14151:	b9 02 00 00 00       	mov    $0x2,%ecx
   14156:	b8 01 00 00 00       	mov    $0x1,%eax
   1415b:	48 8d 7d f4          	lea    -0xc(%rbp),%rdi
   1415f:	49 89 7d 18          	mov    %rdi,0x18(%r13)
   14163:	f3 aa                	rep stos %al,%es:(%rdi)
   14165:	c6 45 f6 08          	movb   $0x8,-0xa(%rbp)
   14169:	c6 45 f7 0a          	movb   $0xa,-0x9(%rbp)
   1416d:	e8 5f 1b 00 00       	call   15cd1 <currticks>
   14172:	0f c8                	bswap  %eax
   14174:	89 45 f8             	mov    %eax,-0x8(%rbp)
   14177:	8b 83 98 00 00 00    	mov    0x98(%rbx),%eax
   1417d:	0f c8                	bswap  %eax
   1417f:	89 45 fc             	mov    %eax,-0x4(%rbp)
   14182:	f6 43 20 08          	testb  $0x8,0x20(%rbx)
   14186:	0f 84 1f 01 00 00    	je     142ab <tcp_xmit_sack.part.0+0x32f>
   1418c:	48 8d 83 c8 00 00 00 	lea    0xc8(%rbx),%rax
   14193:	48 39 83 c8 00 00 00 	cmp    %rax,0xc8(%rbx)
   1419a:	0f 84 0b 01 00 00    	je     142ab <tcp_xmit_sack.part.0+0x32f>
   141a0:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   141a5:	44 89 f6             	mov    %r14d,%esi
   141a8:	48 89 df             	mov    %rbx,%rdi
   141ab:	45 31 f6             	xor    %r14d,%r14d
   141ae:	48 89 ea             	mov    %rbp,%rdx
   141b1:	e8 d6 f9 ff ff       	call   13b8c <tcp_sack_block>
   141b6:	85 c0                	test   %eax,%eax
   141b8:	41 0f 95 c6          	setne  %r14b
   141bc:	31 c9                	xor    %ecx,%ecx
   141be:	8b b4 0b 9e 00 00 00 	mov    0x9e(%rbx,%rcx,1),%esi
   141c5:	3b b4 0b a2 00 00 00 	cmp    0xa2(%rbx,%rcx,1),%esi
   141cc:	74 43                	je     14211 <tcp_xmit_sack.part.0+0x295>
   141ce:	45 89 f0             	mov    %r14d,%r8d
   141d1:	48 89 df             	mov    %rbx,%rdi
   141d4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   141d9:	4a 8d 54 c5 00       	lea    0x0(%rbp,%r8,8),%rdx
   141de:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   141e3:	e8 a4 f9 ff ff       	call   13b8c <tcp_sack_block>
   141e8:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   141ed:	85 c0                	test   %eax,%eax
   141ef:	74 20                	je     14211 <tcp_xmit_sack.part.0+0x295>
   141f1:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   141f6:	31 c0                	xor    %eax,%eax
   141f8:	41 39 c6             	cmp    %eax,%r14d
   141fb:	76 11                	jbe    1420e <tcp_xmit_sack.part.0+0x292>
   141fd:	8b 54 c5 00          	mov    0x0(%rbp,%rax,8),%edx
   14201:	48 ff c0             	inc    %rax
   14204:	42 3b 54 c4 20       	cmp    0x20(%rsp,%r8,8),%edx
   14209:	75 ed                	jne    141f8 <tcp_xmit_sack.part.0+0x27c>
   1420b:	41 ff ce             	dec    %r14d
   1420e:	41 ff c6             	inc    %r14d
   14211:	48 83 f9 10          	cmp    $0x10,%rcx
   14215:	74 0a                	je     14221 <tcp_xmit_sack.part.0+0x2a5>
   14217:	48 83 c1 08          	add    $0x8,%rcx
   1421b:	41 83 fe 03          	cmp    $0x3,%r14d
   1421f:	75 9d                	jne    141be <tcp_xmit_sack.part.0+0x242>
   14221:	4c 8d 83 9e 00 00 00 	lea    0x9e(%rbx),%r8
   14228:	31 c0                	xor    %eax,%eax
   1422a:	4c 89 c7             	mov    %r8,%rdi
   1422d:	ab                   	stos   %eax,%es:(%rdi)
   1422e:	ab                   	stos   %eax,%es:(%rdi)
   1422f:	ab                   	stos   %eax,%es:(%rdi)
   14230:	ab                   	stos   %eax,%es:(%rdi)
   14231:	ab                   	stos   %eax,%es:(%rdi)
   14232:	ab                   	stos   %eax,%es:(%rdi)
   14233:	44 89 f0             	mov    %r14d,%eax
   14236:	48 89 ee             	mov    %rbp,%rsi
   14239:	4c 89 c7             	mov    %r8,%rdi
   1423c:	4c 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%r9
   14243:	00 
   14244:	4c 89 ca             	mov    %r9,%rdx
   14247:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1424c:	e8 bc 30 00 00       	call   1730d <__memcpy>
   14251:	45 85 f6             	test   %r14d,%r14d
   14254:	74 55                	je     142ab <tcp_xmit_sack.part.0+0x32f>
   14256:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1425b:	b9 02 00 00 00       	mov    $0x2,%ecx
   14260:	b8 01 00 00 00       	mov    $0x1,%eax
   14265:	48 c7 c2 fc ff ff ff 	mov    $0xfffffffffffffffc,%rdx
   1426c:	4c 29 ca             	sub    %r9,%rdx
   1426f:	49 03 55 18          	add    0x18(%r13),%rdx
   14273:	49 89 55 18          	mov    %rdx,0x18(%r13)
   14277:	48 89 d7             	mov    %rdx,%rdi
   1427a:	f3 aa                	rep stos %al,%es:(%rdi)
   1427c:	c6 42 02 05          	movb   $0x5,0x2(%rdx)
   14280:	41 8d 41 02          	lea    0x2(%r9),%eax
   14284:	88 42 03             	mov    %al,0x3(%rdx)
   14287:	31 c0                	xor    %eax,%eax
   14289:	8b 8c c3 9e 00 00 00 	mov    0x9e(%rbx,%rax,8),%ecx
   14290:	0f c9                	bswap  %ecx
   14292:	89 4c c2 04          	mov    %ecx,0x4(%rdx,%rax,8)
   14296:	8b 8c c3 a2 00 00 00 	mov    0xa2(%rbx,%rax,8),%ecx
   1429d:	0f c9                	bswap  %ecx
   1429f:	89 4c c2 08          	mov    %ecx,0x8(%rdx,%rax,8)
   142a3:	48 ff c0             	inc    %rax
   142a6:	41 39 c6             	cmp    %eax,%r14d
   142a9:	77 de                	ja     14289 <tcp_xmit_sack.part.0+0x30d>
   142ab:	4d 85 e4             	test   %r12,%r12
   142ae:	74 05                	je     142b5 <tcp_xmit_sack.part.0+0x339>
   142b0:	83 4c 24 04 08       	orl    $0x8,0x4(%rsp)
   142b5:	49 8b 6d 18          	mov    0x18(%r13),%rbp
   142b9:	31 c0                	xor    %eax,%eax
   142bb:	48 8d 7d ec          	lea    -0x14(%rbp),%rdi
   142bf:	49 89 7d 18          	mov    %rdi,0x18(%r13)
   142c3:	ab                   	stos   %eax,%es:(%rdi)
   142c4:	ab                   	stos   %eax,%es:(%rdi)
   142c5:	ab                   	stos   %eax,%es:(%rdi)
   142c6:	ab                   	stos   %eax,%es:(%rdi)
   142c7:	ab                   	stos   %eax,%es:(%rdi)
   142c8:	8b 43 68             	mov    0x68(%rbx),%eax
   142cb:	49 8b 7d 18          	mov    0x18(%r13),%rdi
   142cf:	86 c4                	xchg   %al,%ah
   142d1:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
   142d5:	8b 43 4c             	mov    0x4c(%rbx),%eax
   142d8:	49 29 ff             	sub    %rdi,%r15
   142db:	41 c1 e7 02          	shl    $0x2,%r15d
   142df:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
   142e3:	8b 83 80 00 00 00    	mov    0x80(%rbx),%eax
   142e9:	0f c8                	bswap  %eax
   142eb:	89 45 f0             	mov    %eax,-0x10(%rbp)
   142ee:	8b 83 8c 00 00 00    	mov    0x8c(%rbx),%eax
   142f4:	0f c8                	bswap  %eax
   142f6:	89 45 f4             	mov    %eax,-0xc(%rbp)
   142f9:	8a 44 24 04          	mov    0x4(%rsp),%al
   142fd:	44 88 7d f8          	mov    %r15b,-0x8(%rbp)
   14301:	88 45 f9             	mov    %al,-0x7(%rbp)
   14304:	0f b6 8b 9d 00 00 00 	movzbl 0x9d(%rbx),%ecx
   1430b:	8b 83 90 00 00 00    	mov    0x90(%rbx),%eax
   14311:	49 8b 75 20          	mov    0x20(%r13),%rsi
   14315:	d3 e8                	shr    %cl,%eax
   14317:	48 29 fe             	sub    %rdi,%rsi
   1431a:	86 c4                	xchg   %al,%ah
   1431c:	66 89 45 fa          	mov    %ax,-0x6(%rbp)
   14320:	e8 c4 0b 00 00       	call   14ee9 <tcpip_chksum>
   14325:	45 31 c0             	xor    %r8d,%r8d
   14328:	31 d2                	xor    %edx,%edx
   1432a:	48 8d 4b 48          	lea    0x48(%rbx),%rcx
   1432e:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
   14332:	4c 8d 4d fc          	lea    -0x4(%rbp),%r9
   14336:	48 8d 35 83 56 01 00 	lea    0x15683(%rip),%rsi        # 299c0 <tcp_protocol>
   1433d:	4c 89 ef             	mov    %r13,%rdi
   14340:	e8 0c 0b 00 00       	call   14e51 <tcpip_tx>
   14345:	85 c0                	test   %eax,%eax
   14347:	75 15                	jne    1435e <tcp_xmit_sack.part.0+0x3e2>
   14349:	83 63 20 fb          	andl   $0xfffffffb,0x20(%rbx)
   1434d:	eb 0f                	jmp    1435e <tcp_xmit_sack.part.0+0x3e2>
   1434f:	f6 43 20 02          	testb  $0x2,0x20(%rbx)
   14353:	0f 85 f4 fd ff ff    	jne    1414d <tcp_xmit_sack.part.0+0x1d1>
   14359:	e9 24 fe ff ff       	jmp    14182 <tcp_xmit_sack.part.0+0x206>
   1435e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   14363:	48 2b 05 06 5c 01 00 	sub    0x15c06(%rip),%rax        # 29f70 <__stack_chk_guard>
   1436a:	74 05                	je     14371 <tcp_xmit_sack.part.0+0x3f5>
   1436c:	e8 ef e6 fe ff       	call   2a60 <__stack_chk_fail>
   14371:	48 83 c4 48          	add    $0x48,%rsp
   14375:	5b                   	pop    %rbx
   14376:	5d                   	pop    %rbp
   14377:	41 5c                	pop    %r12
   14379:	41 5d                	pop    %r13
   1437b:	41 5e                	pop    %r14
   1437d:	41 5f                	pop    %r15
   1437f:	c3                   	ret    

0000000000014380 <tcp_xmit>:
   14380:	f3 0f 1e fa          	endbr64 
   14384:	83 bf 08 01 00 00 00 	cmpl   $0x0,0x108(%rdi)
   1438b:	75 0b                	jne    14398 <tcp_xmit+0x18>
   1438d:	8b b7 8c 00 00 00    	mov    0x8c(%rdi),%esi
   14393:	e9 e4 fb ff ff       	jmp    13f7c <tcp_xmit_sack.part.0>
   14398:	c3                   	ret    

0000000000014399 <tcp_keepalive_expired>:
   14399:	f3 0f 1e fa          	endbr64 
   1439d:	55                   	push   %rbp
   1439e:	be 00 3c 00 00       	mov    $0x3c00,%esi
   143a3:	48 8d af b8 fe ff ff 	lea    -0x148(%rdi),%rbp
   143aa:	53                   	push   %rbx
   143ab:	48 89 fb             	mov    %rdi,%rbx
   143ae:	50                   	push   %rax
   143af:	e8 ae be ff ff       	call   10262 <start_timer_fixed>
   143b4:	83 8b d8 fe ff ff 04 	orl    $0x4,-0x128(%rbx)
   143bb:	48 89 ef             	mov    %rbp,%rdi
   143be:	5a                   	pop    %rdx
   143bf:	5b                   	pop    %rbx
   143c0:	5d                   	pop    %rbp
   143c1:	e9 ba ff ff ff       	jmp    14380 <tcp_xmit>

00000000000143c6 <tcp_xfer_deliver>:
   143c6:	f3 0f 1e fa          	endbr64 
   143ca:	55                   	push   %rbp
   143cb:	48 89 fd             	mov    %rdi,%rbp
   143ce:	48 89 f7             	mov    %rsi,%rdi
   143d1:	48 8d b5 b8 00 00 00 	lea    0xb8(%rbp),%rsi
   143d8:	e8 fa 7c ff ff       	call   c0d7 <extern_list_add_tail>
   143dd:	48 8d bd ec 01 00 00 	lea    0x1ec(%rbp),%rdi
   143e4:	e8 fa bf 00 00       	call   203e3 <pending_get>
   143e9:	48 89 ef             	mov    %rbp,%rdi
   143ec:	e8 8f ff ff ff       	call   14380 <tcp_xmit>
   143f1:	31 c0                	xor    %eax,%eax
   143f3:	5d                   	pop    %rbp
   143f4:	c3                   	ret    

00000000000143f5 <tcp_rx_ack>:
   143f5:	41 57                	push   %r15
   143f7:	41 56                	push   %r14
   143f9:	41 55                	push   %r13
   143fb:	41 54                	push   %r12
   143fd:	41 89 f4             	mov    %esi,%r12d
   14400:	55                   	push   %rbp
   14401:	53                   	push   %rbx
   14402:	51                   	push   %rcx
   14403:	8b 47 78             	mov    0x78(%rdi),%eax
   14406:	44 2b a7 80 00 00 00 	sub    0x80(%rdi),%r12d
   1440d:	44 39 a7 84 00 00 00 	cmp    %r12d,0x84(%rdi)
   14414:	73 1a                	jae    14430 <tcp_rx_ack+0x3b>
   14416:	25 00 02 02 00       	and    $0x20200,%eax
   1441b:	3d 00 02 02 00       	cmp    $0x20200,%eax
   14420:	0f 84 02 01 00 00    	je     14528 <tcp_rx_ack+0x133>
   14426:	b8 7e 9f f5 e3       	mov    $0xe3f59f7e,%eax
   1442b:	e9 fa 00 00 00       	jmp    1452a <tcp_rx_ack+0x135>
   14430:	89 97 88 00 00 00    	mov    %edx,0x88(%rdi)
   14436:	48 89 fb             	mov    %rdi,%rbx
   14439:	41 89 f5             	mov    %esi,%r13d
   1443c:	a8 01                	test   $0x1,%al
   1443e:	75 11                	jne    14451 <tcp_rx_ack+0x5c>
   14440:	48 8d bf 48 01 00 00 	lea    0x148(%rdi),%rdi
   14447:	be 00 3c 00 00       	mov    $0x3c00,%esi
   1444c:	e8 11 be ff ff       	call   10262 <start_timer_fixed>
   14451:	45 85 e4             	test   %r12d,%r12d
   14454:	0f 84 ce 00 00 00    	je     14528 <tcp_rx_ack+0x133>
   1445a:	48 8d bb f8 00 00 00 	lea    0xf8(%rbx),%rdi
   14461:	e8 6a be ff ff       	call   102d0 <stop_timer>
   14466:	8b 43 78             	mov    0x78(%rbx),%eax
   14469:	0f b6 ec             	movzbl %ah,%ebp
   1446c:	f7 d5                	not    %ebp
   1446e:	21 c5                	and    %eax,%ebp
   14470:	83 e5 03             	and    $0x3,%ebp
   14473:	74 0f                	je     14484 <tcp_rx_ack+0x8f>
   14475:	48 8d bb e8 01 00 00 	lea    0x1e8(%rbx),%rdi
   1447c:	49 ff cc             	dec    %r12
   1447f:	e8 6c bf 00 00       	call   203f0 <pending_put>
   14484:	48 8b bb b8 00 00 00 	mov    0xb8(%rbx),%rdi
   1448b:	44 89 ab 80 00 00 00 	mov    %r13d,0x80(%rbx)
   14492:	4c 8d bb b8 00 00 00 	lea    0xb8(%rbx),%r15
   14499:	c7 83 84 00 00 00 00 	movl   $0x0,0x84(%rbx)
   144a0:	00 00 00 
   144a3:	4c 8b 37             	mov    (%rdi),%r14
   144a6:	4c 39 ff             	cmp    %r15,%rdi
   144a9:	74 4b                	je     144f6 <tcp_rx_ack+0x101>
   144ab:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   144af:	48 8b 47 18          	mov    0x18(%rdi),%rax
   144b3:	49 89 d5             	mov    %rdx,%r13
   144b6:	49 29 c5             	sub    %rax,%r13
   144b9:	4d 39 e5             	cmp    %r12,%r13
   144bc:	4d 0f 47 ec          	cmova  %r12,%r13
   144c0:	4c 01 e8             	add    %r13,%rax
   144c3:	48 89 47 18          	mov    %rax,0x18(%rdi)
   144c7:	48 39 c2             	cmp    %rax,%rdx
   144ca:	75 1f                	jne    144eb <tcp_rx_ack+0xf6>
   144cc:	48 8b 17             	mov    (%rdi),%rdx
   144cf:	48 8b 47 08          	mov    0x8(%rdi),%rax
   144d3:	48 89 42 08          	mov    %rax,0x8(%rdx)
   144d7:	48 89 10             	mov    %rdx,(%rax)
   144da:	e8 b7 57 ff ff       	call   9c96 <free_iob>
   144df:	48 8d bb ec 01 00 00 	lea    0x1ec(%rbx),%rdi
   144e6:	e8 05 bf 00 00       	call   203f0 <pending_put>
   144eb:	4c 89 f7             	mov    %r14,%rdi
   144ee:	4d 29 ec             	sub    %r13,%r12
   144f1:	4d 8b 36             	mov    (%r14),%r14
   144f4:	eb b0                	jmp    144a6 <tcp_rx_ack+0xb1>
   144f6:	85 ed                	test   %ebp,%ebp
   144f8:	74 06                	je     14500 <tcp_rx_ack+0x10b>
   144fa:	c1 e5 08             	shl    $0x8,%ebp
   144fd:	09 6b 78             	or     %ebp,0x78(%rbx)
   14500:	4c 39 bb b8 00 00 00 	cmp    %r15,0xb8(%rbx)
   14507:	75 1f                	jne    14528 <tcp_rx_ack+0x133>
   14509:	f6 43 20 01          	testb  $0x1,0x20(%rbx)
   1450d:	74 19                	je     14528 <tcp_rx_ack+0x133>
   1450f:	8b 43 78             	mov    0x78(%rbx),%eax
   14512:	a8 01                	test   $0x1,%al
   14514:	75 12                	jne    14528 <tcp_rx_ack+0x133>
   14516:	83 c8 01             	or     $0x1,%eax
   14519:	48 8d bb e8 01 00 00 	lea    0x1e8(%rbx),%rdi
   14520:	89 43 78             	mov    %eax,0x78(%rbx)
   14523:	e8 bb be 00 00       	call   203e3 <pending_get>
   14528:	31 c0                	xor    %eax,%eax
   1452a:	5a                   	pop    %rdx
   1452b:	5b                   	pop    %rbx
   1452c:	5d                   	pop    %rbp
   1452d:	41 5c                	pop    %r12
   1452f:	41 5d                	pop    %r13
   14531:	41 5e                	pop    %r14
   14533:	41 5f                	pop    %r15
   14535:	c3                   	ret    

0000000000014536 <tcp_close>:
   14536:	41 54                	push   %r12
   14538:	55                   	push   %rbp
   14539:	48 89 fd             	mov    %rdi,%rbp
   1453c:	48 83 c7 28          	add    $0x28,%rdi
   14540:	53                   	push   %rbx
   14541:	e8 89 53 ff ff       	call   98cf <intf_shutdown>
   14546:	8b 45 78             	mov    0x78(%rbp),%eax
   14549:	83 4d 20 01          	orl    $0x1,0x20(%rbp)
   1454d:	0f ba e0 11          	bt     $0x11,%eax
   14551:	0f 82 de 00 00 00    	jb     14635 <tcp_close+0xff>
   14557:	48 8b bd c8 00 00 00 	mov    0xc8(%rbp),%rdi
   1455e:	4c 8d a5 c8 00 00 00 	lea    0xc8(%rbp),%r12
   14565:	48 b8 04 00 00 00 04 	movabs $0x400000004,%rax
   1456c:	00 00 00 
   1456f:	48 89 45 78          	mov    %rax,0x78(%rbp)
   14573:	48 8b 1f             	mov    (%rdi),%rbx
   14576:	4c 39 e7             	cmp    %r12,%rdi
   14579:	74 1b                	je     14596 <tcp_close+0x60>
   1457b:	48 8b 17             	mov    (%rdi),%rdx
   1457e:	48 8b 47 08          	mov    0x8(%rdi),%rax
   14582:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14586:	48 89 10             	mov    %rdx,(%rax)
   14589:	e8 08 57 ff ff       	call   9c96 <free_iob>
   1458e:	48 89 df             	mov    %rbx,%rdi
   14591:	48 8b 1b             	mov    (%rbx),%rbx
   14594:	eb e0                	jmp    14576 <tcp_close+0x40>
   14596:	48 8b bd b8 00 00 00 	mov    0xb8(%rbp),%rdi
   1459d:	4c 8d a5 b8 00 00 00 	lea    0xb8(%rbp),%r12
   145a4:	48 8b 1f             	mov    (%rdi),%rbx
   145a7:	4c 39 e7             	cmp    %r12,%rdi
   145aa:	74 27                	je     145d3 <tcp_close+0x9d>
   145ac:	48 8b 17             	mov    (%rdi),%rdx
   145af:	48 8b 47 08          	mov    0x8(%rdi),%rax
   145b3:	48 89 42 08          	mov    %rax,0x8(%rdx)
   145b7:	48 89 10             	mov    %rdx,(%rax)
   145ba:	e8 d7 56 ff ff       	call   9c96 <free_iob>
   145bf:	48 8d bd ec 01 00 00 	lea    0x1ec(%rbp),%rdi
   145c6:	e8 25 be 00 00       	call   203f0 <pending_put>
   145cb:	48 89 df             	mov    %rbx,%rdi
   145ce:	48 8b 1b             	mov    (%rbx),%rbx
   145d1:	eb d4                	jmp    145a7 <tcp_close+0x71>
   145d3:	4c 8d a5 e8 01 00 00 	lea    0x1e8(%rbp),%r12
   145da:	4c 89 e7             	mov    %r12,%rdi
   145dd:	e8 0e be 00 00       	call   203f0 <pending_put>
   145e2:	4c 89 e7             	mov    %r12,%rdi
   145e5:	e8 06 be 00 00       	call   203f0 <pending_put>
   145ea:	48 8d bd d8 00 00 00 	lea    0xd8(%rbp),%rdi
   145f1:	e8 8e b3 ff ff       	call   f984 <process_del>
   145f6:	48 8d bd f8 00 00 00 	lea    0xf8(%rbp),%rdi
   145fd:	e8 ce bc ff ff       	call   102d0 <stop_timer>
   14602:	48 8d bd 48 01 00 00 	lea    0x148(%rbp),%rdi
   14609:	e8 c2 bc ff ff       	call   102d0 <stop_timer>
   1460e:	48 8d bd 98 01 00 00 	lea    0x198(%rbp),%rdi
   14615:	e8 b6 bc ff ff       	call   102d0 <stop_timer>
   1461a:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1461e:	48 8b 45 18          	mov    0x18(%rbp),%rax
   14622:	48 89 ef             	mov    %rbp,%rdi
   14625:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14629:	48 89 10             	mov    %rdx,(%rax)
   1462c:	5b                   	pop    %rbx
   1462d:	5d                   	pop    %rbp
   1462e:	41 5c                	pop    %r12
   14630:	e9 09 b8 ff ff       	jmp    fe3e <ref_decrement>
   14635:	0f ba e0 09          	bt     $0x9,%eax
   14639:	72 13                	jb     1464e <tcp_close+0x118>
   1463b:	8b 85 80 00 00 00    	mov    0x80(%rbp),%eax
   14641:	31 d2                	xor    %edx,%edx
   14643:	48 89 ef             	mov    %rbp,%rdi
   14646:	8d 70 01             	lea    0x1(%rax),%esi
   14649:	e8 a7 fd ff ff       	call   143f5 <tcp_rx_ack>
   1464e:	48 8d bd 48 01 00 00 	lea    0x148(%rbp),%rdi
   14655:	e8 76 bc ff ff       	call   102d0 <stop_timer>
   1465a:	48 8d 85 b8 00 00 00 	lea    0xb8(%rbp),%rax
   14661:	48 39 85 b8 00 00 00 	cmp    %rax,0xb8(%rbp)
   14668:	75 2c                	jne    14696 <tcp_close+0x160>
   1466a:	8b 45 78             	mov    0x78(%rbp),%eax
   1466d:	a8 01                	test   $0x1,%al
   1466f:	75 25                	jne    14696 <tcp_close+0x160>
   14671:	83 c8 01             	or     $0x1,%eax
   14674:	48 8d bd d8 00 00 00 	lea    0xd8(%rbp),%rdi
   1467b:	89 45 78             	mov    %eax,0x78(%rbp)
   1467e:	89 45 7c             	mov    %eax,0x7c(%rbp)
   14681:	e8 ab b2 ff ff       	call   f931 <process_add>
   14686:	5b                   	pop    %rbx
   14687:	48 8d bd e8 01 00 00 	lea    0x1e8(%rbp),%rdi
   1468e:	5d                   	pop    %rbp
   1468f:	41 5c                	pop    %r12
   14691:	e9 4d bd 00 00       	jmp    203e3 <pending_get>
   14696:	5b                   	pop    %rbx
   14697:	5d                   	pop    %rbp
   14698:	41 5c                	pop    %r12
   1469a:	c3                   	ret    

000000000001469b <tcp_wait_expired>:
   1469b:	f3 0f 1e fa          	endbr64 
   1469f:	c7 87 e0 fe ff ff 04 	movl   $0x4,-0x120(%rdi)
   146a6:	00 00 00 
   146a9:	31 f6                	xor    %esi,%esi
   146ab:	48 81 ef 98 01 00 00 	sub    $0x198,%rdi
   146b2:	c7 47 7c 04 00 00 00 	movl   $0x4,0x7c(%rdi)
   146b9:	e9 78 fe ff ff       	jmp    14536 <tcp_close>

00000000000146be <tcp_expired>:
   146be:	f3 0f 1e fa          	endbr64 
   146c2:	4c 8d 87 08 ff ff ff 	lea    -0xf8(%rdi),%r8
   146c9:	85 f6                	test   %esi,%esi
   146cb:	74 1b                	je     146e8 <tcp_expired+0x2a>
   146cd:	c7 47 80 04 00 00 00 	movl   $0x4,-0x80(%rdi)
   146d4:	c7 47 84 04 00 00 00 	movl   $0x4,-0x7c(%rdi)
   146db:	be 6e 9f f5 b3       	mov    $0xb3f59f6e,%esi
   146e0:	4c 89 c7             	mov    %r8,%rdi
   146e3:	e9 4e fe ff ff       	jmp    14536 <tcp_close>
   146e8:	4c 89 c7             	mov    %r8,%rdi
   146eb:	e9 90 fc ff ff       	jmp    14380 <tcp_xmit>

00000000000146f0 <tcp_xfer_close>:
   146f0:	f3 0f 1e fa          	endbr64 
   146f4:	48 83 ec 18          	sub    $0x18,%rsp
   146f8:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   146fd:	e8 34 fe ff ff       	call   14536 <tcp_close>
   14702:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   14707:	48 83 c4 18          	add    $0x18,%rsp
   1470b:	e9 70 fc ff ff       	jmp    14380 <tcp_xmit>

0000000000014710 <tcp_shutdown>:
   14710:	f3 0f 1e fa          	endbr64 
   14714:	55                   	push   %rbp
   14715:	53                   	push   %rbx
   14716:	48 8d 1d 63 2b 01 00 	lea    0x12b63(%rip),%rbx        # 27280 <tcp_conns>
   1471d:	52                   	push   %rdx
   1471e:	48 8b 03             	mov    (%rbx),%rax
   14721:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
   14725:	48 8d 47 10          	lea    0x10(%rdi),%rax
   14729:	48 39 d8             	cmp    %rbx,%rax
   1472c:	74 1c                	je     1474a <tcp_shutdown+0x3a>
   1472e:	f6 47 20 01          	testb  $0x1,0x20(%rdi)
   14732:	75 0c                	jne    14740 <tcp_shutdown+0x30>
   14734:	be 6b 9f f5 f4       	mov    $0xf4f59f6b,%esi
   14739:	e8 f8 fd ff ff       	call   14536 <tcp_close>
   1473e:	eb de                	jmp    1471e <tcp_shutdown+0xe>
   14740:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   14744:	48 83 ef 10          	sub    $0x10,%rdi
   14748:	eb db                	jmp    14725 <tcp_shutdown+0x15>
   1474a:	e8 82 15 00 00       	call   15cd1 <currticks>
   1474f:	48 89 c5             	mov    %rax,%rbp
   14752:	48 8b 03             	mov    (%rbx),%rax
   14755:	48 83 e8 10          	sub    $0x10,%rax
   14759:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1475d:	48 39 da             	cmp    %rbx,%rdx
   14760:	74 38                	je     1479a <tcp_shutdown+0x8a>
   14762:	8b 50 78             	mov    0x78(%rax),%edx
   14765:	81 e2 00 01 01 00    	and    $0x10100,%edx
   1476b:	81 fa 00 01 01 00    	cmp    $0x10100,%edx
   14771:	75 10                	jne    14783 <tcp_shutdown+0x73>
   14773:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
   1477a:	48 39 90 d8 00 00 00 	cmp    %rdx,0xd8(%rax)
   14781:	74 23                	je     147a6 <tcp_shutdown+0x96>
   14783:	e8 49 15 00 00       	call   15cd1 <currticks>
   14788:	48 29 e8             	sub    %rbp,%rax
   1478b:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
   14791:	77 07                	ja     1479a <tcp_shutdown+0x8a>
   14793:	e8 14 b2 ff ff       	call   f9ac <step>
   14798:	eb b8                	jmp    14752 <tcp_shutdown+0x42>
   1479a:	48 bd 04 00 00 00 04 	movabs $0x400000004,%rbp
   147a1:	00 00 00 
   147a4:	eb 06                	jmp    147ac <tcp_shutdown+0x9c>
   147a6:	48 8b 40 10          	mov    0x10(%rax),%rax
   147aa:	eb a9                	jmp    14755 <tcp_shutdown+0x45>
   147ac:	48 8b 3b             	mov    (%rbx),%rdi
   147af:	48 39 df             	cmp    %rbx,%rdi
   147b2:	74 14                	je     147c8 <tcp_shutdown+0xb8>
   147b4:	48 89 6f 68          	mov    %rbp,0x68(%rdi)
   147b8:	be 6b 9f f5 f4       	mov    $0xf4f59f6b,%esi
   147bd:	48 83 ef 10          	sub    $0x10,%rdi
   147c1:	e8 70 fd ff ff       	call   14536 <tcp_close>
   147c6:	eb e4                	jmp    147ac <tcp_shutdown+0x9c>
   147c8:	58                   	pop    %rax
   147c9:	5b                   	pop    %rbx
   147ca:	5d                   	pop    %rbp
   147cb:	c3                   	ret    

00000000000147cc <tcp_rx>:
   147cc:	f3 0f 1e fa          	endbr64 
   147d0:	41 57                	push   %r15
   147d2:	41 56                	push   %r14
   147d4:	41 55                	push   %r13
   147d6:	49 89 fd             	mov    %rdi,%r13
   147d9:	41 54                	push   %r12
   147db:	55                   	push   %rbp
   147dc:	53                   	push   %rbx
   147dd:	48 83 ec 58          	sub    $0x58,%rsp
   147e1:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   147e5:	48 8b 05 84 57 01 00 	mov    0x15784(%rip),%rax        # 29f70 <__stack_chk_guard>
   147ec:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   147f1:	31 c0                	xor    %eax,%eax
   147f3:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
   147f8:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   147fc:	48 29 da             	sub    %rbx,%rdx
   147ff:	48 83 fa 13          	cmp    $0x13,%rdx
   14803:	77 02                	ja     14807 <tcp_rx+0x3b>
   14805:	eb 12                	jmp    14819 <tcp_rx+0x4d>
   14807:	8a 43 0c             	mov    0xc(%rbx),%al
   1480a:	25 f0 00 00 00       	and    $0xf0,%eax
   1480f:	89 c1                	mov    %eax,%ecx
   14811:	c1 e9 02             	shr    $0x2,%ecx
   14814:	83 f8 4c             	cmp    $0x4c,%eax
   14817:	77 0b                	ja     14824 <tcp_rx+0x58>
   14819:	41 be 7e 9f f5 e3    	mov    $0xe3f59f7e,%r14d
   1481f:	e9 e4 01 00 00       	jmp    14a08 <tcp_rx+0x23c>
   14824:	48 63 c1             	movslq %ecx,%rax
   14827:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1482c:	48 39 c2             	cmp    %rax,%rdx
   1482f:	73 02                	jae    14833 <tcp_rx+0x67>
   14831:	eb e6                	jmp    14819 <tcp_rx+0x4d>
   14833:	41 0f b7 f8          	movzwl %r8w,%edi
   14837:	48 89 de             	mov    %rbx,%rsi
   1483a:	4c 89 1c 24          	mov    %r11,(%rsp)
   1483e:	e8 ff 2a 00 00       	call   17342 <tcpip_continue_chksum>
   14843:	4c 8b 1c 24          	mov    (%rsp),%r11
   14847:	66 85 c0             	test   %ax,%ax
   1484a:	74 02                	je     1484e <tcp_rx+0x82>
   1484c:	eb cb                	jmp    14819 <tcp_rx+0x4d>
   1484e:	48 8b 0d 2b 2a 01 00 	mov    0x12a2b(%rip),%rcx        # 27280 <tcp_conns>
   14855:	66 8b 43 02          	mov    0x2(%rbx),%ax
   14859:	48 8d 15 20 2a 01 00 	lea    0x12a20(%rip),%rdx        # 27280 <tcp_conns>
   14860:	86 c4                	xchg   %al,%ah
   14862:	4c 8d 79 f0          	lea    -0x10(%rcx),%r15
   14866:	0f b7 c0             	movzwl %ax,%eax
   14869:	49 8d 4f 10          	lea    0x10(%r15),%rcx
   1486d:	48 39 d1             	cmp    %rdx,%rcx
   14870:	74 10                	je     14882 <tcp_rx+0xb6>
   14872:	41 3b 47 68          	cmp    0x68(%r15),%eax
   14876:	74 0d                	je     14885 <tcp_rx+0xb9>
   14878:	4d 8b 47 10          	mov    0x10(%r15),%r8
   1487c:	4d 8d 78 f0          	lea    -0x10(%r8),%r15
   14880:	eb e7                	jmp    14869 <tcp_rx+0x9d>
   14882:	45 31 ff             	xor    %r15d,%r15d
   14885:	66 8b 43 0e          	mov    0xe(%rbx),%ax
   14889:	8b 73 08             	mov    0x8(%rbx),%esi
   1488c:	48 8d 53 14          	lea    0x14(%rbx),%rdx
   14890:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
   14895:	86 c4                	xchg   %al,%ah
   14897:	66 89 44 24 16       	mov    %ax,0x16(%rsp)
   1489c:	8a 43 0d             	mov    0xd(%rbx),%al
   1489f:	44 8b 63 04          	mov    0x4(%rbx),%r12d
   148a3:	88 44 24 10          	mov    %al,0x10(%rsp)
   148a7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   148ac:	41 0f cc             	bswap  %r12d
   148af:	48 01 d8             	add    %rbx,%rax
   148b2:	44 89 24 24          	mov    %r12d,(%rsp)
   148b6:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   148bb:	31 c0                	xor    %eax,%eax
   148bd:	0f ce                	bswap  %esi
   148bf:	ab                   	stos   %eax,%es:(%rdi)
   148c0:	ab                   	stos   %eax,%es:(%rdi)
   148c1:	ab                   	stos   %eax,%es:(%rdi)
   148c2:	ab                   	stos   %eax,%es:(%rdi)
   148c3:	ab                   	stos   %eax,%es:(%rdi)
   148c4:	ab                   	stos   %eax,%es:(%rdi)
   148c5:	31 ff                	xor    %edi,%edi
   148c7:	31 c9                	xor    %ecx,%ecx
   148c9:	31 c0                	xor    %eax,%eax
   148cb:	41 b0 01             	mov    $0x1,%r8b
   148ce:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   148d3:	49 29 d2             	sub    %rdx,%r10
   148d6:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   148db:	0f 84 dc 00 00 00    	je     149bd <tcp_rx+0x1f1>
   148e1:	44 0f b6 12          	movzbl (%rdx),%r10d
   148e5:	45 89 d1             	mov    %r10d,%r9d
   148e8:	45 85 d2             	test   %r10d,%r10d
   148eb:	0f 84 cc 00 00 00    	je     149bd <tcp_rx+0x1f1>
   148f1:	41 ff ca             	dec    %r10d
   148f4:	75 05                	jne    148fb <tcp_rx+0x12f>
   148f6:	48 ff c2             	inc    %rdx
   148f9:	eb d3                	jmp    148ce <tcp_rx+0x102>
   148fb:	41 80 f9 04          	cmp    $0x4,%r9b
   148ff:	74 20                	je     14921 <tcp_rx+0x155>
   14901:	41 80 f9 08          	cmp    $0x8,%r9b
   14905:	74 27                	je     1492e <tcp_rx+0x162>
   14907:	41 80 f9 03          	cmp    $0x3,%r9b
   1490b:	41 0f 94 c1          	sete   %r9b
   1490f:	48 0f 44 ea          	cmove  %rdx,%rbp
   14913:	41 0f 44 c0          	cmove  %r8d,%eax
   14917:	45 0f b6 c9          	movzbl %r9b,%r9d
   1491b:	49 83 c1 02          	add    $0x2,%r9
   1491f:	eb 19                	jmp    1493a <tcp_rx+0x16e>
   14921:	49 89 d6             	mov    %rdx,%r14
   14924:	b1 01                	mov    $0x1,%cl
   14926:	41 b9 02 00 00 00    	mov    $0x2,%r9d
   1492c:	eb 0c                	jmp    1493a <tcp_rx+0x16e>
   1492e:	49 89 d3             	mov    %rdx,%r11
   14931:	40 b7 01             	mov    $0x1,%dil
   14934:	41 b9 0a 00 00 00    	mov    $0xa,%r9d
   1493a:	4c 3b 4c 24 18       	cmp    0x18(%rsp),%r9
   1493f:	76 21                	jbe    14962 <tcp_rx+0x196>
   14941:	40 84 ff             	test   %dil,%dil
   14944:	74 05                	je     1494b <tcp_rx+0x17f>
   14946:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   1494b:	84 c9                	test   %cl,%cl
   1494d:	74 05                	je     14954 <tcp_rx+0x188>
   1494f:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   14954:	84 c0                	test   %al,%al
   14956:	74 05                	je     1495d <tcp_rx+0x191>
   14958:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   1495d:	e9 b7 fe ff ff       	jmp    14819 <tcp_rx+0x4d>
   14962:	44 0f b6 52 01       	movzbl 0x1(%rdx),%r10d
   14967:	4d 39 d1             	cmp    %r10,%r9
   1496a:	76 21                	jbe    1498d <tcp_rx+0x1c1>
   1496c:	40 84 ff             	test   %dil,%dil
   1496f:	74 05                	je     14976 <tcp_rx+0x1aa>
   14971:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   14976:	84 c9                	test   %cl,%cl
   14978:	74 05                	je     1497f <tcp_rx+0x1b3>
   1497a:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   1497f:	84 c0                	test   %al,%al
   14981:	74 05                	je     14988 <tcp_rx+0x1bc>
   14983:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   14988:	e9 8c fe ff ff       	jmp    14819 <tcp_rx+0x4d>
   1498d:	4c 39 54 24 18       	cmp    %r10,0x18(%rsp)
   14992:	73 21                	jae    149b5 <tcp_rx+0x1e9>
   14994:	40 84 ff             	test   %dil,%dil
   14997:	74 05                	je     1499e <tcp_rx+0x1d2>
   14999:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   1499e:	84 c9                	test   %cl,%cl
   149a0:	74 05                	je     149a7 <tcp_rx+0x1db>
   149a2:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   149a7:	84 c0                	test   %al,%al
   149a9:	74 05                	je     149b0 <tcp_rx+0x1e4>
   149ab:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   149b0:	e9 64 fe ff ff       	jmp    14819 <tcp_rx+0x4d>
   149b5:	4c 01 d2             	add    %r10,%rdx
   149b8:	e9 11 ff ff ff       	jmp    148ce <tcp_rx+0x102>
   149bd:	40 84 ff             	test   %dil,%dil
   149c0:	74 05                	je     149c7 <tcp_rx+0x1fb>
   149c2:	4c 89 5c 24 40       	mov    %r11,0x40(%rsp)
   149c7:	84 c9                	test   %cl,%cl
   149c9:	74 05                	je     149d0 <tcp_rx+0x204>
   149cb:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
   149d0:	84 c0                	test   %al,%al
   149d2:	74 05                	je     149d9 <tcp_rx+0x20d>
   149d4:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
   149d9:	4d 85 ff             	test   %r15,%r15
   149dc:	74 16                	je     149f4 <tcp_rx+0x228>
   149de:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   149e3:	48 85 c0             	test   %rax,%rax
   149e6:	74 0c                	je     149f4 <tcp_rx+0x228>
   149e8:	8b 40 02             	mov    0x2(%rax),%eax
   149eb:	0f c8                	bswap  %eax
   149ed:	41 89 87 94 00 00 00 	mov    %eax,0x94(%r15)
   149f4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   149f9:	49 01 45 18          	add    %rax,0x18(%r13)
   149fd:	4d 85 ff             	test   %r15,%r15
   14a00:	75 13                	jne    14a15 <tcp_rx+0x249>
   14a02:	41 be 6d 9f f5 c7    	mov    $0xc7f59f6d,%r14d
   14a08:	4c 89 ef             	mov    %r13,%rdi
   14a0b:	e8 86 52 ff ff       	call   9c96 <free_iob>
   14a10:	e9 99 03 00 00       	jmp    14dae <tcp_rx+0x5e2>
   14a15:	4c 89 ff             	mov    %r15,%rdi
   14a18:	e8 25 f5 ff ff       	call   13f42 <tcp_xfer_window>
   14a1d:	48 89 c5             	mov    %rax,%rbp
   14a20:	f6 44 24 10 10       	testb  $0x10,0x10(%rsp)
   14a25:	0f 84 c3 00 00 00    	je     14aee <tcp_rx+0x322>
   14a2b:	0f b7 54 24 16       	movzwl 0x16(%rsp),%edx
   14a30:	41 0f b6 8f 9c 00 00 	movzbl 0x9c(%r15),%ecx
   14a37:	00 
   14a38:	d3 e2                	shl    %cl,%edx
   14a3a:	e8 b6 f9 ff ff       	call   143f5 <tcp_rx_ack>
   14a3f:	41 89 c6             	mov    %eax,%r14d
   14a42:	85 c0                	test   %eax,%eax
   14a44:	0f 84 a4 00 00 00    	je     14aee <tcp_rx+0x322>
   14a4a:	bf 90 00 00 00       	mov    $0x90,%edi
   14a4f:	e8 28 52 ff ff       	call   9c7c <alloc_iob>
   14a54:	48 89 c5             	mov    %rax,%rbp
   14a57:	48 85 c0             	test   %rax,%rax
   14a5a:	75 02                	jne    14a5e <tcp_rx+0x292>
   14a5c:	eb aa                	jmp    14a08 <tcp_rx+0x23c>
   14a5e:	4c 8b 60 18          	mov    0x18(%rax),%r12
   14a62:	48 81 40 20 90 00 00 	addq   $0x90,0x20(%rax)
   14a69:	00 
   14a6a:	49 8d 7c 24 7c       	lea    0x7c(%r12),%rdi
   14a6f:	48 89 78 18          	mov    %rdi,0x18(%rax)
   14a73:	31 c0                	xor    %eax,%eax
   14a75:	ab                   	stos   %eax,%es:(%rdi)
   14a76:	ab                   	stos   %eax,%es:(%rdi)
   14a77:	ab                   	stos   %eax,%es:(%rdi)
   14a78:	ab                   	stos   %eax,%es:(%rdi)
   14a79:	ab                   	stos   %eax,%es:(%rdi)
   14a7a:	66 8b 43 02          	mov    0x2(%rbx),%ax
   14a7e:	66 41 89 44 24 7c    	mov    %ax,0x7c(%r12)
   14a84:	66 8b 03             	mov    (%rbx),%ax
   14a87:	66 41 89 44 24 7e    	mov    %ax,0x7e(%r12)
   14a8d:	8b 43 08             	mov    0x8(%rbx),%eax
   14a90:	41 89 84 24 80 00 00 	mov    %eax,0x80(%r12)
   14a97:	00 
   14a98:	8b 43 04             	mov    0x4(%rbx),%eax
   14a9b:	41 c7 84 24 88 00 00 	movl   $0x1450,0x88(%r12)
   14aa2:	00 50 14 00 00 
   14aa7:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
   14aab:	48 8b 75 20          	mov    0x20(%rbp),%rsi
   14aaf:	41 89 84 24 84 00 00 	mov    %eax,0x84(%r12)
   14ab6:	00 
   14ab7:	48 29 fe             	sub    %rdi,%rsi
   14aba:	e8 2a 04 00 00       	call   14ee9 <tcpip_chksum>
   14abf:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   14ac4:	45 31 c0             	xor    %r8d,%r8d
   14ac7:	31 d2                	xor    %edx,%edx
   14ac9:	66 41 89 84 24 8c 00 	mov    %ax,0x8c(%r12)
   14ad0:	00 00 
   14ad2:	4d 8d 8c 24 8c 00 00 	lea    0x8c(%r12),%r9
   14ad9:	00 
   14ada:	48 8d 35 df 4e 01 00 	lea    0x14edf(%rip),%rsi        # 299c0 <tcp_protocol>
   14ae1:	48 89 ef             	mov    %rbp,%rdi
   14ae4:	e8 68 03 00 00       	call   14e51 <tcpip_tx>
   14ae9:	e9 1a ff ff ff       	jmp    14a08 <tcp_rx+0x23c>
   14aee:	45 8b 4f 78          	mov    0x78(%r15),%r9d
   14af2:	44 89 c8             	mov    %r9d,%eax
   14af5:	25 00 00 02 00       	and    $0x20000,%eax
   14afa:	74 0e                	je     14b0a <tcp_rx+0x33e>
   14afc:	45 3b a7 8c 00 00 00 	cmp    0x8c(%r15),%r12d
   14b03:	74 05                	je     14b0a <tcp_rx+0x33e>
   14b05:	41 83 4f 20 04       	orl    $0x4,0x20(%r15)
   14b0a:	f6 44 24 10 02       	testb  $0x2,0x10(%rsp)
   14b0f:	74 5f                	je     14b70 <tcp_rx+0x3a4>
   14b11:	85 c0                	test   %eax,%eax
   14b13:	75 46                	jne    14b5b <tcp_rx+0x38f>
   14b15:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   14b1b:	45 89 a7 8c 00 00 00 	mov    %r12d,0x8c(%r15)
   14b22:	74 05                	je     14b29 <tcp_rx+0x35d>
   14b24:	41 83 4f 20 02       	orl    $0x2,0x20(%r15)
   14b29:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   14b2f:	74 05                	je     14b36 <tcp_rx+0x36a>
   14b31:	41 83 4f 20 08       	orl    $0x8,0x20(%r15)
   14b36:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   14b3b:	48 85 c0             	test   %rax,%rax
   14b3e:	0f 84 4d 02 00 00    	je     14d91 <tcp_rx+0x5c5>
   14b44:	8a 40 02             	mov    0x2(%rax),%al
   14b47:	41 c6 87 9d 00 00 00 	movb   $0x9,0x9d(%r15)
   14b4e:	09 
   14b4f:	41 88 87 9c 00 00 00 	mov    %al,0x9c(%r15)
   14b56:	e9 36 02 00 00       	jmp    14d91 <tcp_rx+0x5c5>
   14b5b:	45 3b a7 8c 00 00 00 	cmp    0x8c(%r15),%r12d
   14b62:	0f 84 29 02 00 00    	je     14d91 <tcp_rx+0x5c5>
   14b68:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   14b6d:	89 04 24             	mov    %eax,(%rsp)
   14b70:	41 8b 47 78          	mov    0x78(%r15),%eax
   14b74:	89 c2                	mov    %eax,%edx
   14b76:	81 e2 00 00 02 00    	and    $0x20000,%edx
   14b7c:	f6 44 24 10 04       	testb  $0x4,0x10(%rsp)
   14b81:	74 45                	je     14bc8 <tcp_rx+0x3fc>
   14b83:	85 d2                	test   %edx,%edx
   14b85:	74 15                	je     14b9c <tcp_rx+0x3d0>
   14b87:	8b 04 24             	mov    (%rsp),%eax
   14b8a:	41 2b 87 8c 00 00 00 	sub    0x8c(%r15),%eax
   14b91:	41 39 87 90 00 00 00 	cmp    %eax,0x90(%r15)
   14b98:	76 2e                	jbe    14bc8 <tcp_rx+0x3fc>
   14b9a:	eb 06                	jmp    14ba2 <tcp_rx+0x3d6>
   14b9c:	0f ba e0 09          	bt     $0x9,%eax
   14ba0:	73 26                	jae    14bc8 <tcp_rx+0x3fc>
   14ba2:	48 b8 04 00 00 00 04 	movabs $0x400000004,%rax
   14ba9:	00 00 00 
   14bac:	49 89 47 78          	mov    %rax,0x78(%r15)
   14bb0:	be 6b 9f f5 f0       	mov    $0xf0f59f6b,%esi
   14bb5:	4c 89 ff             	mov    %r15,%rdi
   14bb8:	e8 79 f9 ff ff       	call   14536 <tcp_close>
   14bbd:	41 be 6b 9f f5 f0    	mov    $0xf0f59f6b,%r14d
   14bc3:	e9 40 fe ff ff       	jmp    14a08 <tcp_rx+0x23c>
   14bc8:	85 d2                	test   %edx,%edx
   14bca:	49 8b 4d 20          	mov    0x20(%r13),%rcx
   14bce:	49 8b 45 18          	mov    0x18(%r13),%rax
   14bd2:	4d 8d a7 c8 00 00 00 	lea    0xc8(%r15),%r12
   14bd9:	74 37                	je     14c12 <tcp_rx+0x446>
   14bdb:	41 8b b7 8c 00 00 00 	mov    0x8c(%r15),%esi
   14be2:	41 8b 97 90 00 00 00 	mov    0x90(%r15),%edx
   14be9:	01 f2                	add    %esi,%edx
   14beb:	39 14 24             	cmp    %edx,(%rsp)
   14bee:	79 22                	jns    14c12 <tcp_rx+0x446>
   14bf0:	8b 54 24 10          	mov    0x10(%rsp),%edx
   14bf4:	48 29 c1             	sub    %rax,%rcx
   14bf7:	8b 1c 24             	mov    (%rsp),%ebx
   14bfa:	40 8a 7c 24 10       	mov    0x10(%rsp),%dil
   14bff:	83 e2 01             	and    $0x1,%edx
   14c02:	01 ca                	add    %ecx,%edx
   14c04:	83 e7 01             	and    $0x1,%edi
   14c07:	8d 0c 13             	lea    (%rbx,%rdx,1),%ecx
   14c0a:	39 f1                	cmp    %esi,%ecx
   14c0c:	78 04                	js     14c12 <tcp_rx+0x446>
   14c0e:	85 d2                	test   %edx,%edx
   14c10:	75 0a                	jne    14c1c <tcp_rx+0x450>
   14c12:	4c 89 ef             	mov    %r13,%rdi
   14c15:	e8 7c 50 ff ff       	call   9c96 <free_iob>
   14c1a:	eb 39                	jmp    14c55 <tcp_rx+0x489>
   14c1c:	8b 1c 24             	mov    (%rsp),%ebx
   14c1f:	48 8d 50 f4          	lea    -0xc(%rax),%rdx
   14c23:	49 89 55 18          	mov    %rdx,0x18(%r13)
   14c27:	89 58 f4             	mov    %ebx,-0xc(%rax)
   14c2a:	89 48 f8             	mov    %ecx,-0x8(%rax)
   14c2d:	40 88 78 fc          	mov    %dil,-0x4(%rax)
   14c31:	49 8b b7 c8 00 00 00 	mov    0xc8(%r15),%rsi
   14c38:	4c 39 e6             	cmp    %r12,%rsi
   14c3b:	74 10                	je     14c4d <tcp_rx+0x481>
   14c3d:	48 8b 46 18          	mov    0x18(%rsi),%rax
   14c41:	8b 1c 24             	mov    (%rsp),%ebx
   14c44:	3b 18                	cmp    (%rax),%ebx
   14c46:	78 05                	js     14c4d <tcp_rx+0x481>
   14c48:	48 8b 36             	mov    (%rsi),%rsi
   14c4b:	eb eb                	jmp    14c38 <tcp_rx+0x46c>
   14c4d:	4c 89 ef             	mov    %r13,%rdi
   14c50:	e8 82 74 ff ff       	call   c0d7 <extern_list_add_tail>
   14c55:	4d 8d 6f 28          	lea    0x28(%r15),%r13
   14c59:	4d 8b 8f c8 00 00 00 	mov    0xc8(%r15),%r9
   14c60:	4d 39 e1             	cmp    %r12,%r9
   14c63:	0f 84 b1 00 00 00    	je     14d1a <tcp_rx+0x54e>
   14c69:	4d 85 c9             	test   %r9,%r9
   14c6c:	0f 84 a8 00 00 00    	je     14d1a <tcp_rx+0x54e>
   14c72:	49 8b 41 18          	mov    0x18(%r9),%rax
   14c76:	41 8b 97 8c 00 00 00 	mov    0x8c(%r15),%edx
   14c7d:	8b 18                	mov    (%rax),%ebx
   14c7f:	89 de                	mov    %ebx,%esi
   14c81:	29 d6                	sub    %edx,%esi
   14c83:	85 f6                	test   %esi,%esi
   14c85:	0f 8f 8f 00 00 00    	jg     14d1a <tcp_rx+0x54e>
   14c8b:	49 8b 49 08          	mov    0x8(%r9),%rcx
   14c8f:	49 8b 39             	mov    (%r9),%rdi
   14c92:	48 83 c0 0c          	add    $0xc,%rax
   14c96:	29 da                	sub    %ebx,%edx
   14c98:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   14c9c:	48 89 39             	mov    %rdi,(%rcx)
   14c9f:	8a 48 fc             	mov    -0x4(%rax),%cl
   14ca2:	49 89 41 18          	mov    %rax,0x18(%r9)
   14ca6:	88 4c 24 10          	mov    %cl,0x10(%rsp)
   14caa:	49 8b 49 20          	mov    0x20(%r9),%rcx
   14cae:	48 29 c1             	sub    %rax,%rcx
   14cb1:	41 89 ce             	mov    %ecx,%r14d
   14cb4:	39 ca                	cmp    %ecx,%edx
   14cb6:	72 0a                	jb     14cc2 <tcp_rx+0x4f6>
   14cb8:	4c 89 cf             	mov    %r9,%rdi
   14cbb:	e8 d6 4f ff ff       	call   9c96 <free_iob>
   14cc0:	eb 1c                	jmp    14cde <tcp_rx+0x512>
   14cc2:	48 01 d0             	add    %rdx,%rax
   14cc5:	01 ce                	add    %ecx,%esi
   14cc7:	4c 89 ff             	mov    %r15,%rdi
   14cca:	49 89 41 18          	mov    %rax,0x18(%r9)
   14cce:	e8 21 ef ff ff       	call   13bf4 <tcp_rx_seq>
   14cd3:	4c 89 ce             	mov    %r9,%rsi
   14cd6:	4c 89 ef             	mov    %r13,%rdi
   14cd9:	e8 28 2a 00 00       	call   17706 <xfer_deliver_iob>
   14cde:	f6 44 24 10 01       	testb  $0x1,0x10(%rsp)
   14ce3:	0f 84 70 ff ff ff    	je     14c59 <tcp_rx+0x48d>
   14ce9:	44 01 f3             	add    %r14d,%ebx
   14cec:	41 3b 9f 8c 00 00 00 	cmp    0x8c(%r15),%ebx
   14cf3:	0f 85 60 ff ff ff    	jne    14c59 <tcp_rx+0x48d>
   14cf9:	be 01 00 00 00       	mov    $0x1,%esi
   14cfe:	4c 89 ff             	mov    %r15,%rdi
   14d01:	e8 ee ee ff ff       	call   13bf4 <tcp_rx_seq>
   14d06:	41 81 4f 78 00 00 01 	orl    $0x10000,0x78(%r15)
   14d0d:	00 
   14d0e:	31 f6                	xor    %esi,%esi
   14d10:	e8 21 f8 ff ff       	call   14536 <tcp_close>
   14d15:	e9 3f ff ff ff       	jmp    14c59 <tcp_rx+0x48d>
   14d1a:	41 8b 47 78          	mov    0x78(%r15),%eax
   14d1e:	41 89 47 7c          	mov    %eax,0x7c(%r15)
   14d22:	4d 39 e1             	cmp    %r12,%r9
   14d25:	75 0e                	jne    14d35 <tcp_rx+0x569>
   14d27:	49 8d bf d8 00 00 00 	lea    0xd8(%r15),%rdi
   14d2e:	e8 fe ab ff ff       	call   f931 <process_add>
   14d33:	eb 15                	jmp    14d4a <tcp_rx+0x57e>
   14d35:	41 83 bf 08 01 00 00 	cmpl   $0x0,0x108(%r15)
   14d3c:	00 
   14d3d:	75 0b                	jne    14d4a <tcp_rx+0x57e>
   14d3f:	8b 34 24             	mov    (%rsp),%esi
   14d42:	4c 89 ff             	mov    %r15,%rdi
   14d45:	e8 32 f2 ff ff       	call   13f7c <tcp_xmit_sack.part.0>
   14d4a:	41 8b 47 78          	mov    0x78(%r15),%eax
   14d4e:	25 00 01 01 00       	and    $0x10100,%eax
   14d53:	3d 00 01 01 00       	cmp    $0x10100,%eax
   14d58:	75 1c                	jne    14d76 <tcp_rx+0x5aa>
   14d5a:	4d 8d a7 98 01 00 00 	lea    0x198(%r15),%r12
   14d61:	4c 89 e7             	mov    %r12,%rdi
   14d64:	e8 67 b5 ff ff       	call   102d0 <stop_timer>
   14d69:	be 00 c0 03 00       	mov    $0x3c000,%esi
   14d6e:	4c 89 e7             	mov    %r12,%rdi
   14d71:	e8 ec b4 ff ff       	call   10262 <start_timer_fixed>
   14d76:	4c 89 ff             	mov    %r15,%rdi
   14d79:	45 31 f6             	xor    %r14d,%r14d
   14d7c:	e8 c1 f1 ff ff       	call   13f42 <tcp_xfer_window>
   14d81:	48 39 c5             	cmp    %rax,%rbp
   14d84:	74 28                	je     14dae <tcp_rx+0x5e2>
   14d86:	49 8d 7f 28          	lea    0x28(%r15),%rdi
   14d8a:	e8 15 27 00 00       	call   174a4 <xfer_window_changed>
   14d8f:	eb 1d                	jmp    14dae <tcp_rx+0x5e2>
   14d91:	be 01 00 00 00       	mov    $0x1,%esi
   14d96:	4c 89 ff             	mov    %r15,%rdi
   14d99:	41 81 c9 10 00 02 00 	or     $0x20010,%r9d
   14da0:	e8 4f ee ff ff       	call   13bf4 <tcp_rx_seq>
   14da5:	45 89 4f 78          	mov    %r9d,0x78(%r15)
   14da9:	e9 ba fd ff ff       	jmp    14b68 <tcp_rx+0x39c>
   14dae:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   14db3:	48 2b 05 b6 51 01 00 	sub    0x151b6(%rip),%rax        # 29f70 <__stack_chk_guard>
   14dba:	74 05                	je     14dc1 <tcp_rx+0x5f5>
   14dbc:	e8 9f dc fe ff       	call   2a60 <__stack_chk_fail>
   14dc1:	48 83 c4 58          	add    $0x58,%rsp
   14dc5:	44 89 f0             	mov    %r14d,%eax
   14dc8:	5b                   	pop    %rbx
   14dc9:	5d                   	pop    %rbp
   14dca:	41 5c                	pop    %r12
   14dcc:	41 5d                	pop    %r13
   14dce:	41 5e                	pop    %r14
   14dd0:	41 5f                	pop    %r15
   14dd2:	c3                   	ret    

0000000000014dd3 <tcpip_rx>:
   14dd3:	f3 0f 1e fa          	endbr64 
   14dd7:	41 52                	push   %r10
   14dd9:	49 89 f2             	mov    %rsi,%r10
   14ddc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   14de1:	49 89 cb             	mov    %rcx,%r11
   14de4:	48 8d 05 d5 4b 01 00 	lea    0x14bd5(%rip),%rax        # 299c0 <tcp_protocol>
   14deb:	4c 89 c1             	mov    %r8,%rcx
   14dee:	4c 8d 05 13 4c 01 00 	lea    0x14c13(%rip),%r8        # 29a08 <efi_timer>
   14df5:	4c 39 c0             	cmp    %r8,%rax
   14df8:	73 21                	jae    14e1b <tcpip_rx+0x48>
   14dfa:	38 50 12             	cmp    %dl,0x12(%rax)
   14dfd:	75 16                	jne    14e15 <tcpip_rx+0x42>
   14dff:	48 ff 46 48          	incq   0x48(%rsi)
   14e03:	48 8b 40 08          	mov    0x8(%rax),%rax
   14e07:	45 0f b7 c1          	movzwl %r9w,%r8d
   14e0b:	4c 89 da             	mov    %r11,%rdx
   14e0e:	4c 89 d6             	mov    %r10,%rsi
   14e11:	41 59                	pop    %r9
   14e13:	ff e0                	jmp    *%rax
   14e15:	48 83 c0 18          	add    $0x18,%rax
   14e19:	eb da                	jmp    14df5 <tcpip_rx+0x22>
   14e1b:	48 ff 46 20          	incq   0x20(%rsi)
   14e1f:	e8 72 4e ff ff       	call   9c96 <free_iob>
   14e24:	b8 7d 9f f1 bb       	mov    $0xbbf19f7d,%eax
   14e29:	5a                   	pop    %rdx
   14e2a:	c3                   	ret    

0000000000014e2b <tcpip_net_protocol>:
   14e2b:	f3 0f 1e fa          	endbr64 
   14e2f:	48 8d 05 5a 4b 01 00 	lea    0x14b5a(%rip),%rax        # 29990 <ipv4_tcpip_protocol>
   14e36:	48 8d 15 83 4b 01 00 	lea    0x14b83(%rip),%rdx        # 299c0 <tcp_protocol>
   14e3d:	48 39 d0             	cmp    %rdx,%rax
   14e40:	73 0c                	jae    14e4e <tcpip_net_protocol+0x23>
   14e42:	66 39 78 08          	cmp    %di,0x8(%rax)
   14e46:	74 08                	je     14e50 <tcpip_net_protocol+0x25>
   14e48:	48 83 c0 30          	add    $0x30,%rax
   14e4c:	eb ef                	jmp    14e3d <tcpip_net_protocol+0x12>
   14e4e:	31 c0                	xor    %eax,%eax
   14e50:	c3                   	ret    

0000000000014e51 <tcpip_tx>:
   14e51:	f3 0f 1e fa          	endbr64 
   14e55:	48 83 ec 18          	sub    $0x18,%rsp
   14e59:	49 89 fa             	mov    %rdi,%r10
   14e5c:	0f b7 39             	movzwl (%rcx),%edi
   14e5f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14e64:	e8 c2 ff ff ff       	call   14e2b <tcpip_net_protocol>
   14e69:	48 85 c0             	test   %rax,%rax
   14e6c:	74 12                	je     14e80 <tcpip_tx+0x2f>
   14e6e:	48 8b 40 20          	mov    0x20(%rax),%rax
   14e72:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14e77:	4c 89 d7             	mov    %r10,%rdi
   14e7a:	48 83 c4 18          	add    $0x18,%rsp
   14e7e:	ff e0                	jmp    *%rax
   14e80:	4c 89 d7             	mov    %r10,%rdi
   14e83:	e8 0e 4e ff ff       	call   9c96 <free_iob>
   14e88:	b8 7d 9f f1 fa       	mov    $0xfaf19f7d,%eax
   14e8d:	48 83 c4 18          	add    $0x18,%rsp
   14e91:	c3                   	ret    

0000000000014e92 <tcpip_netdev>:
   14e92:	f3 0f 1e fa          	endbr64 
   14e96:	56                   	push   %rsi
   14e97:	49 89 f8             	mov    %rdi,%r8
   14e9a:	0f b7 3f             	movzwl (%rdi),%edi
   14e9d:	e8 89 ff ff ff       	call   14e2b <tcpip_net_protocol>
   14ea2:	48 85 c0             	test   %rax,%rax
   14ea5:	74 0a                	je     14eb1 <tcpip_netdev+0x1f>
   14ea7:	48 8b 40 28          	mov    0x28(%rax),%rax
   14eab:	4c 89 c7             	mov    %r8,%rdi
   14eae:	59                   	pop    %rcx
   14eaf:	ff e0                	jmp    *%rax
   14eb1:	31 c0                	xor    %eax,%eax
   14eb3:	5a                   	pop    %rdx
   14eb4:	c3                   	ret    

0000000000014eb5 <tcpip_mtu>:
   14eb5:	f3 0f 1e fa          	endbr64 
   14eb9:	53                   	push   %rbx
   14eba:	49 89 f8             	mov    %rdi,%r8
   14ebd:	0f b7 3f             	movzwl (%rdi),%edi
   14ec0:	e8 66 ff ff ff       	call   14e2b <tcpip_net_protocol>
   14ec5:	48 85 c0             	test   %rax,%rax
   14ec8:	75 04                	jne    14ece <tcpip_mtu+0x19>
   14eca:	31 c0                	xor    %eax,%eax
   14ecc:	eb 19                	jmp    14ee7 <tcpip_mtu+0x32>
   14ece:	48 89 c3             	mov    %rax,%rbx
   14ed1:	4c 89 c7             	mov    %r8,%rdi
   14ed4:	ff 50 28             	call   *0x28(%rax)
   14ed7:	48 85 c0             	test   %rax,%rax
   14eda:	74 ee                	je     14eca <tcpip_mtu+0x15>
   14edc:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
   14ee3:	48 2b 43 10          	sub    0x10(%rbx),%rax
   14ee7:	5b                   	pop    %rbx
   14ee8:	c3                   	ret    

0000000000014ee9 <tcpip_chksum>:
   14ee9:	f3 0f 1e fa          	endbr64 
   14eed:	48 89 f2             	mov    %rsi,%rdx
   14ef0:	48 89 fe             	mov    %rdi,%rsi
   14ef3:	31 ff                	xor    %edi,%edi
   14ef5:	e9 48 24 00 00       	jmp    17342 <tcpip_continue_chksum>

0000000000014efa <tcpip_bind>:
   14efa:	f3 0f 1e fa          	endbr64 
   14efe:	41 57                	push   %r15
   14f00:	41 56                	push   %r14
   14f02:	41 55                	push   %r13
   14f04:	49 89 f5             	mov    %rsi,%r13
   14f07:	41 54                	push   %r12
   14f09:	55                   	push   %rbp
   14f0a:	53                   	push   %rbx
   14f0b:	48 83 ec 18          	sub    $0x18,%rsp
   14f0f:	48 85 ff             	test   %rdi,%rdi
   14f12:	74 22                	je     14f36 <tcpip_bind+0x3c>
   14f14:	66 8b 47 04          	mov    0x4(%rdi),%ax
   14f18:	66 8b 5f 02          	mov    0x2(%rdi),%bx
   14f1c:	86 c4                	xchg   %al,%ah
   14f1e:	66 85 c0             	test   %ax,%ax
   14f21:	74 15                	je     14f38 <tcpip_bind+0x3e>
   14f23:	48 83 c4 18          	add    $0x18,%rsp
   14f27:	0f b7 f8             	movzwl %ax,%edi
   14f2a:	5b                   	pop    %rbx
   14f2b:	5d                   	pop    %rbp
   14f2c:	41 5c                	pop    %r12
   14f2e:	41 5d                	pop    %r13
   14f30:	41 5e                	pop    %r14
   14f32:	41 5f                	pop    %r15
   14f34:	ff e6                	jmp    *%rsi
   14f36:	31 db                	xor    %ebx,%ebx
   14f38:	89 dd                	mov    %ebx,%ebp
   14f3a:	66 81 e3 00 04       	and    $0x400,%bx
   14f3f:	45 31 ff             	xor    %r15d,%r15d
   14f42:	f7 d5                	not    %ebp
   14f44:	ff cb                	dec    %ebx
   14f46:	66 81 e5 00 04       	and    $0x400,%bp
   14f4b:	44 0f b7 f3          	movzwl %bx,%r14d
   14f4f:	8d 45 01             	lea    0x1(%rbp),%eax
   14f52:	66 89 44 24 0e       	mov    %ax,0xe(%rsp)
   14f57:	e8 e5 aa ff ff       	call   fa41 <random>
   14f5c:	48 89 c5             	mov    %rax,%rbp
   14f5f:	46 8d 64 3d 00       	lea    0x0(%rbp,%r15,1),%r12d
   14f64:	41 21 dc             	and    %ebx,%r12d
   14f67:	66 44 39 64 24 0e    	cmp    %r12w,0xe(%rsp)
   14f6d:	76 10                	jbe    14f7f <tcpip_bind+0x85>
   14f6f:	41 ff c7             	inc    %r15d
   14f72:	45 39 fe             	cmp    %r15d,%r14d
   14f75:	73 e8                	jae    14f5f <tcpip_bind+0x65>
   14f77:	41 bc 6c 9f f1 fc    	mov    $0xfcf19f6c,%r12d
   14f7d:	eb 0e                	jmp    14f8d <tcpip_bind+0x93>
   14f7f:	45 0f b7 e4          	movzwl %r12w,%r12d
   14f83:	44 89 e7             	mov    %r12d,%edi
   14f86:	41 ff d5             	call   *%r13
   14f89:	85 c0                	test   %eax,%eax
   14f8b:	78 e2                	js     14f6f <tcpip_bind+0x75>
   14f8d:	48 83 c4 18          	add    $0x18,%rsp
   14f91:	44 89 e0             	mov    %r12d,%eax
   14f94:	5b                   	pop    %rbx
   14f95:	5d                   	pop    %rbp
   14f96:	41 5c                	pop    %r12
   14f98:	41 5d                	pop    %r13
   14f9a:	41 5e                	pop    %r14
   14f9c:	41 5f                	pop    %r15
   14f9e:	c3                   	ret    

0000000000014f9f <tftp_xfer_window>:
   14f9f:	f3 0f 1e fa          	endbr64 
   14fa3:	8b 47 78             	mov    0x78(%rdi),%eax
   14fa6:	c3                   	ret    

0000000000014fa7 <tftp_reopen>:
   14fa7:	55                   	push   %rbp
   14fa8:	48 8d 6f 38          	lea    0x38(%rdi),%rbp
   14fac:	31 f6                	xor    %esi,%esi
   14fae:	53                   	push   %rbx
   14faf:	48 89 fb             	mov    %rdi,%rbx
   14fb2:	48 89 ef             	mov    %rbp,%rdi
   14fb5:	48 83 ec 38          	sub    $0x38,%rsp
   14fb9:	48 8b 05 b0 4f 01 00 	mov    0x14fb0(%rip),%rax        # 29f70 <__stack_chk_guard>
   14fc0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   14fc5:	31 c0                	xor    %eax,%eax
   14fc7:	e8 7c 48 ff ff       	call   9848 <intf_restart>
   14fcc:	ba 20 00 00 00       	mov    $0x20,%edx
   14fd1:	83 a3 ac 00 00 00 fe 	andl   $0xfffffffe,0xac(%rbx)
   14fd8:	31 c0                	xor    %eax,%eax
   14fda:	48 8d bb 8c 00 00 00 	lea    0x8c(%rbx),%rdi
   14fe1:	48 89 d1             	mov    %rdx,%rcx
   14fe4:	f3 aa                	rep stos %al,%es:(%rdi)
   14fe6:	4c 8d 4c 24 08       	lea    0x8(%rsp),%r9
   14feb:	48 89 d1             	mov    %rdx,%rcx
   14fee:	4c 89 cf             	mov    %r9,%rdi
   14ff1:	f3 aa                	rep stos %al,%es:(%rdi)
   14ff3:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax
   14ff9:	45 31 c0             	xor    %r8d,%r8d
   14ffc:	4c 89 ca             	mov    %r9,%rdx
   14fff:	48 89 ef             	mov    %rbp,%rdi
   15002:	86 c4                	xchg   %al,%ah
   15004:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
   15009:	48 8b 43 30          	mov    0x30(%rbx),%rax
   1500d:	8b 35 4d f5 00 00    	mov    0xf54d(%rip),%esi        # 24560 <udp_sock_dgram>
   15013:	48 8b 48 30          	mov    0x30(%rax),%rcx
   15017:	e8 6b b1 ff ff       	call   10187 <xfer_open_named_socket>
   1501c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   15021:	48 2b 15 48 4f 01 00 	sub    0x14f48(%rip),%rdx        # 29f70 <__stack_chk_guard>
   15028:	74 05                	je     1502f <tftp_reopen+0x88>
   1502a:	e8 31 da fe ff       	call   2a60 <__stack_chk_fail>
   1502f:	48 83 c4 38          	add    $0x38,%rsp
   15033:	5b                   	pop    %rbx
   15034:	5d                   	pop    %rbp
   15035:	c3                   	ret    

0000000000015036 <tftp_reopen_mc>:
   15036:	41 54                	push   %r12
   15038:	49 89 f4             	mov    %rsi,%r12
   1503b:	31 f6                	xor    %esi,%esi
   1503d:	55                   	push   %rbp
   1503e:	48 8d 6f 58          	lea    0x58(%rdi),%rbp
   15042:	50                   	push   %rax
   15043:	48 89 ef             	mov    %rbp,%rdi
   15046:	e8 fd 47 ff ff       	call   9848 <intf_restart>
   1504b:	4c 89 e1             	mov    %r12,%rcx
   1504e:	4c 89 e2             	mov    %r12,%rdx
   15051:	48 89 ef             	mov    %rbp,%rdi
   15054:	8b 35 06 f5 00 00    	mov    0xf506(%rip),%esi        # 24560 <udp_sock_dgram>
   1505a:	41 58                	pop    %r8
   1505c:	5d                   	pop    %rbp
   1505d:	41 5c                	pop    %r12
   1505f:	e9 56 9a ff ff       	jmp    eaba <xfer_open_socket>

0000000000015064 <tftp_process_multicast>:
   15064:	f3 0f 1e fa          	endbr64 
   15068:	41 56                	push   %r14
   1506a:	41 55                	push   %r13
   1506c:	41 54                	push   %r12
   1506e:	49 89 f4             	mov    %rsi,%r12
   15071:	be 2c 00 00 00       	mov    $0x2c,%esi
   15076:	55                   	push   %rbp
   15077:	48 89 fd             	mov    %rdi,%rbp
   1507a:	4c 89 e7             	mov    %r12,%rdi
   1507d:	53                   	push   %rbx
   1507e:	48 83 ec 40          	sub    $0x40,%rsp
   15082:	48 8b 05 e7 4e 01 00 	mov    0x14ee7(%rip),%rax        # 29f70 <__stack_chk_guard>
   15089:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1508e:	31 c0                	xor    %eax,%eax
   15090:	e8 b2 e8 ff ff       	call   13947 <strchr>
   15095:	48 85 c0             	test   %rax,%rax
   15098:	75 0a                	jne    150a4 <tftp_process_multicast+0x40>
   1509a:	b8 7e 9c ed e3       	mov    $0xe3ed9c7e,%eax
   1509f:	e9 bb 00 00 00       	jmp    1515f <tftp_process_multicast+0xfb>
   150a4:	c6 00 00             	movb   $0x0,(%rax)
   150a7:	4c 8d 68 01          	lea    0x1(%rax),%r13
   150ab:	be 2c 00 00 00       	mov    $0x2c,%esi
   150b0:	48 89 c3             	mov    %rax,%rbx
   150b3:	4c 89 ef             	mov    %r13,%rdi
   150b6:	e8 8c e8 ff ff       	call   13947 <strchr>
   150bb:	48 85 c0             	test   %rax,%rax
   150be:	75 0a                	jne    150ca <tftp_process_multicast+0x66>
   150c0:	b8 7e 9b ed e3       	mov    $0xe3ed9b7e,%eax
   150c5:	e9 95 00 00 00       	jmp    1515f <tftp_process_multicast+0xfb>
   150ca:	c6 00 00             	movb   $0x0,(%rax)
   150cd:	31 d2                	xor    %edx,%edx
   150cf:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   150d4:	48 8d 78 01          	lea    0x1(%rax),%rdi
   150d8:	e8 9e e9 ff ff       	call   13a7b <strtoul>
   150dd:	48 85 c0             	test   %rax,%rax
   150e0:	75 07                	jne    150e9 <tftp_process_multicast+0x85>
   150e2:	83 a5 ac 00 00 00 fe 	andl   $0xfffffffe,0xac(%rbp)
   150e9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   150ee:	80 38 00             	cmpb   $0x0,(%rax)
   150f1:	74 07                	je     150fa <tftp_process_multicast+0x96>
   150f3:	b8 7e 9a ed e3       	mov    $0xe3ed9a7e,%eax
   150f8:	eb 65                	jmp    1515f <tftp_process_multicast+0xfb>
   150fa:	31 c0                	xor    %eax,%eax
   150fc:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
   15101:	74 5c                	je     1515f <tftp_process_multicast+0xfb>
   15103:	80 7b 01 00          	cmpb   $0x0,0x1(%rbx)
   15107:	74 56                	je     1515f <tftp_process_multicast+0xfb>
   15109:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1510e:	4c 89 e7             	mov    %r12,%rdi
   15111:	4c 8d 74 24 18       	lea    0x18(%rsp),%r14
   15116:	66 c7 44 24 18 01 00 	movw   $0x1,0x18(%rsp)
   1511d:	e8 c2 53 ff ff       	call   a4e4 <inet_aton>
   15122:	85 c0                	test   %eax,%eax
   15124:	75 07                	jne    1512d <tftp_process_multicast+0xc9>
   15126:	b8 7e 99 ed e3       	mov    $0xe3ed997e,%eax
   1512b:	eb 32                	jmp    1515f <tftp_process_multicast+0xfb>
   1512d:	31 d2                	xor    %edx,%edx
   1512f:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
   15134:	4c 89 ef             	mov    %r13,%rdi
   15137:	e8 3f e9 ff ff       	call   13a7b <strtoul>
   1513c:	86 c4                	xchg   %al,%ah
   1513e:	66 89 44 24 1c       	mov    %ax,0x1c(%rsp)
   15143:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   15148:	80 38 00             	cmpb   $0x0,(%rax)
   1514b:	74 07                	je     15154 <tftp_process_multicast+0xf0>
   1514d:	b8 7e 98 ed e3       	mov    $0xe3ed987e,%eax
   15152:	eb 0b                	jmp    1515f <tftp_process_multicast+0xfb>
   15154:	4c 89 f6             	mov    %r14,%rsi
   15157:	48 89 ef             	mov    %rbp,%rdi
   1515a:	e8 d7 fe ff ff       	call   15036 <tftp_reopen_mc>
   1515f:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   15164:	48 2b 15 05 4e 01 00 	sub    0x14e05(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1516b:	74 05                	je     15172 <tftp_process_multicast+0x10e>
   1516d:	e8 ee d8 fe ff       	call   2a60 <__stack_chk_fail>
   15172:	48 83 c4 40          	add    $0x40,%rsp
   15176:	5b                   	pop    %rbx
   15177:	5d                   	pop    %rbp
   15178:	41 5c                	pop    %r12
   1517a:	41 5d                	pop    %r13
   1517c:	41 5e                	pop    %r14
   1517e:	c3                   	ret    

000000000001517f <tftp_done>:
   1517f:	55                   	push   %rbp
   15180:	89 f5                	mov    %esi,%ebp
   15182:	53                   	push   %rbx
   15183:	48 89 fb             	mov    %rdi,%rbx
   15186:	48 8d bf d0 00 00 00 	lea    0xd0(%rdi),%rdi
   1518d:	50                   	push   %rax
   1518e:	e8 3d b1 ff ff       	call   102d0 <stop_timer>
   15193:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   15197:	89 ee                	mov    %ebp,%esi
   15199:	e8 31 47 ff ff       	call   98cf <intf_shutdown>
   1519e:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
   151a2:	89 ee                	mov    %ebp,%esi
   151a4:	e8 26 47 ff ff       	call   98cf <intf_shutdown>
   151a9:	5a                   	pop    %rdx
   151aa:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   151ae:	89 ee                	mov    %ebp,%esi
   151b0:	5b                   	pop    %rbx
   151b1:	5d                   	pop    %rbp
   151b2:	e9 18 47 ff ff       	jmp    98cf <intf_shutdown>

00000000000151b7 <tftp_core_open>:
   151b7:	41 57                	push   %r15
   151b9:	41 56                	push   %r14
   151bb:	41 55                	push   %r13
   151bd:	41 54                	push   %r12
   151bf:	55                   	push   %rbp
   151c0:	53                   	push   %rbx
   151c1:	41 51                	push   %r9
   151c3:	48 83 7e 30 00       	cmpq   $0x0,0x30(%rsi)
   151c8:	75 02                	jne    151cc <tftp_core_open+0x15>
   151ca:	eb 0c                	jmp    151d8 <tftp_core_open+0x21>
   151cc:	48 8b 46 40          	mov    0x40(%rsi),%rax
   151d0:	49 89 f4             	mov    %rsi,%r12
   151d3:	48 85 c0             	test   %rax,%rax
   151d6:	75 0b                	jne    151e3 <tftp_core_open+0x2c>
   151d8:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   151de:	e9 26 01 00 00       	jmp    15309 <tftp_core_open+0x152>
   151e3:	80 38 2f             	cmpb   $0x2f,(%rax)
   151e6:	74 02                	je     151ea <tftp_core_open+0x33>
   151e8:	eb ee                	jmp    151d8 <tftp_core_open+0x21>
   151ea:	49 89 fd             	mov    %rdi,%r13
   151ed:	bf 20 01 00 00       	mov    $0x120,%edi
   151f2:	41 89 d7             	mov    %edx,%r15d
   151f5:	49 89 ce             	mov    %rcx,%r14
   151f8:	44 89 c3             	mov    %r8d,%ebx
   151fb:	e8 5a 74 ff ff       	call   c65a <zalloc>
   15200:	48 89 c5             	mov    %rax,%rbp
   15203:	48 85 c0             	test   %rax,%rax
   15206:	75 0b                	jne    15213 <tftp_core_open+0x5c>
   15208:	41 bc 77 9f ed ce    	mov    $0xceed9f77,%r12d
   1520e:	e9 f6 00 00 00       	jmp    15309 <tftp_core_open+0x152>
   15213:	48 8d 05 c8 03 00 00 	lea    0x3c8(%rip),%rax        # 155e2 <tftp_free>
   1521a:	48 8d 15 7f 20 01 00 	lea    0x1207f(%rip),%rdx        # 272a0 <tftp_xfer_desc>
   15221:	4c 89 e7             	mov    %r12,%rdi
   15224:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   15228:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1522c:	48 8d 05 ad 11 01 00 	lea    0x111ad(%rip),%rax        # 263e0 <null_intf>
   15233:	48 89 45 10          	mov    %rax,0x10(%rbp)
   15237:	48 89 45 38          	mov    %rax,0x38(%rbp)
   1523b:	48 89 45 58          	mov    %rax,0x58(%rbp)
   1523f:	48 8d 05 9a 20 01 00 	lea    0x1209a(%rip),%rax        # 272e0 <tftp_mc_socket_desc>
   15246:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1524a:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   1524e:	48 8d 15 cb 20 01 00 	lea    0x120cb(%rip),%rdx        # 27320 <tftp_socket_desc>
   15255:	48 89 45 68          	mov    %rax,0x68(%rbp)
   15259:	48 89 45 70          	mov    %rax,0x70(%rbp)
   1525d:	48 8d 05 63 08 00 00 	lea    0x863(%rip),%rax        # 15ac7 <tftp_timer_expired>
   15264:	48 89 55 48          	mov    %rdx,0x48(%rbp)
   15268:	48 89 55 50          	mov    %rdx,0x50(%rbp)
   1526c:	48 89 85 10 01 00 00 	mov    %rax,0x110(%rbp)
   15273:	48 89 6d 40          	mov    %rbp,0x40(%rbp)
   15277:	48 89 6d 60          	mov    %rbp,0x60(%rbp)
   1527b:	48 89 ad 18 01 00 00 	mov    %rbp,0x118(%rbp)
   15282:	e8 ab ab ff ff       	call   fe32 <ref_increment>
   15287:	4c 89 e7             	mov    %r12,%rdi
   1528a:	44 89 fe             	mov    %r15d,%esi
   1528d:	4c 89 65 30          	mov    %r12,0x30(%rbp)
   15291:	c7 45 78 00 02 00 00 	movl   $0x200,0x78(%rbp)
   15298:	89 9d ac 00 00 00    	mov    %ebx,0xac(%rbp)
   1529e:	e8 c7 13 00 00       	call   1666a <uri_port>
   152a3:	48 89 ef             	mov    %rbp,%rdi
   152a6:	89 85 88 00 00 00    	mov    %eax,0x88(%rbp)
   152ac:	e8 f6 fc ff ff       	call   14fa7 <tftp_reopen>
   152b1:	41 89 c4             	mov    %eax,%r12d
   152b4:	85 c0                	test   %eax,%eax
   152b6:	75 3e                	jne    152f6 <tftp_core_open+0x13f>
   152b8:	4d 85 f6             	test   %r14,%r14
   152bb:	75 27                	jne    152e4 <tftp_core_open+0x12d>
   152bd:	48 8d bd d0 00 00 00 	lea    0xd0(%rbp),%rdi
   152c4:	31 f6                	xor    %esi,%esi
   152c6:	45 31 e4             	xor    %r12d,%r12d
   152c9:	e8 94 af ff ff       	call   10262 <start_timer_fixed>
   152ce:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   152d2:	4c 89 ee             	mov    %r13,%rsi
   152d5:	e8 97 44 ff ff       	call   9771 <intf_plug_plug>
   152da:	48 89 ef             	mov    %rbp,%rdi
   152dd:	e8 5c ab ff ff       	call   fe3e <ref_decrement>
   152e2:	eb 25                	jmp    15309 <tftp_core_open+0x152>
   152e4:	4c 89 f6             	mov    %r14,%rsi
   152e7:	48 89 ef             	mov    %rbp,%rdi
   152ea:	e8 47 fd ff ff       	call   15036 <tftp_reopen_mc>
   152ef:	41 89 c4             	mov    %eax,%r12d
   152f2:	85 c0                	test   %eax,%eax
   152f4:	74 c7                	je     152bd <tftp_core_open+0x106>
   152f6:	48 89 ef             	mov    %rbp,%rdi
   152f9:	44 89 e6             	mov    %r12d,%esi
   152fc:	e8 7e fe ff ff       	call   1517f <tftp_done>
   15301:	48 89 ef             	mov    %rbp,%rdi
   15304:	e8 35 ab ff ff       	call   fe3e <ref_decrement>
   15309:	5a                   	pop    %rdx
   1530a:	44 89 e0             	mov    %r12d,%eax
   1530d:	5b                   	pop    %rbx
   1530e:	5d                   	pop    %rbp
   1530f:	41 5c                	pop    %r12
   15311:	41 5d                	pop    %r13
   15313:	41 5e                	pop    %r14
   15315:	41 5f                	pop    %r15
   15317:	c3                   	ret    

0000000000015318 <tftp_open>:
   15318:	f3 0f 1e fa          	endbr64 
   1531c:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   15322:	31 c9                	xor    %ecx,%ecx
   15324:	ba 45 00 00 00       	mov    $0x45,%edx
   15329:	e9 89 fe ff ff       	jmp    151b7 <tftp_core_open>

000000000001532e <tftm_open>:
   1532e:	f3 0f 1e fa          	endbr64 
   15332:	41 b8 06 00 00 00    	mov    $0x6,%r8d
   15338:	31 c9                	xor    %ecx,%ecx
   1533a:	ba 45 00 00 00       	mov    $0x45,%edx
   1533f:	e9 73 fe ff ff       	jmp    151b7 <tftp_core_open>

0000000000015344 <mtftp_open>:
   15344:	f3 0f 1e fa          	endbr64 
   15348:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   1534e:	48 8d 0d eb f1 00 00 	lea    0xf1eb(%rip),%rcx        # 24540 <tftp_mtftp_socket>
   15355:	ba df 06 00 00       	mov    $0x6df,%edx
   1535a:	e9 58 fe ff ff       	jmp    151b7 <tftp_core_open>

000000000001535f <tftp_apply_settings>:
   1535f:	f3 0f 1e fa          	endbr64 
   15363:	41 54                	push   %r12
   15365:	31 ff                	xor    %edi,%edi
   15367:	48 8d 35 da 40 01 00 	lea    0x140da(%rip),%rsi        # 29448 <next_server_setting>
   1536e:	45 31 e4             	xor    %r12d,%r12d
   15371:	55                   	push   %rbp
   15372:	48 83 ec 38          	sub    $0x38,%rsp
   15376:	48 8b 05 f3 4b 01 00 	mov    0x14bf3(%rip),%rax        # 29f70 <__stack_chk_guard>
   1537d:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   15382:	31 c0                	xor    %eax,%eax
   15384:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   15389:	e8 ce ca ff ff       	call   11e5c <fetch_ipv4_setting>
   1538e:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   15392:	85 ff                	test   %edi,%edi
   15394:	74 5d                	je     153f3 <tftp_apply_settings+0x94>
   15396:	3b 3d a8 49 01 00    	cmp    0x149a8(%rip),%edi        # 29d44 <tftp_server.0>
   1539c:	74 55                	je     153f3 <tftp_apply_settings+0x94>
   1539e:	e8 1c 52 ff ff       	call   a5bf <inet_ntoa>
   153a3:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   153a8:	be 20 00 00 00       	mov    $0x20,%esi
   153ad:	48 8d 15 b3 e8 00 00 	lea    0xe8b3(%rip),%rdx        # 23c67 <.LC0>
   153b4:	48 89 c1             	mov    %rax,%rcx
   153b7:	48 89 ef             	mov    %rbp,%rdi
   153ba:	31 c0                	xor    %eax,%eax
   153bc:	e8 c0 1c 00 00       	call   17081 <snprintf>
   153c1:	48 89 ef             	mov    %rbp,%rdi
   153c4:	e8 8a 10 00 00       	call   16453 <parse_uri>
   153c9:	48 89 c5             	mov    %rax,%rbp
   153cc:	48 85 c0             	test   %rax,%rax
   153cf:	75 08                	jne    153d9 <tftp_apply_settings+0x7a>
   153d1:	41 bc 77 9f ed ce    	mov    $0xceed9f77,%r12d
   153d7:	eb 1a                	jmp    153f3 <tftp_apply_settings+0x94>
   153d9:	48 89 c7             	mov    %rax,%rdi
   153dc:	e8 ea 3f 00 00       	call   193cb <churi>
   153e1:	48 89 ef             	mov    %rbp,%rdi
   153e4:	e8 55 aa ff ff       	call   fe3e <ref_decrement>
   153e9:	8b 44 24 04          	mov    0x4(%rsp),%eax
   153ed:	89 05 51 49 01 00    	mov    %eax,0x14951(%rip)        # 29d44 <tftp_server.0>
   153f3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   153f8:	48 2b 05 71 4b 01 00 	sub    0x14b71(%rip),%rax        # 29f70 <__stack_chk_guard>
   153ff:	74 05                	je     15406 <tftp_apply_settings+0xa7>
   15401:	e8 5a d6 fe ff       	call   2a60 <__stack_chk_fail>
   15406:	48 83 c4 38          	add    $0x38,%rsp
   1540a:	44 89 e0             	mov    %r12d,%eax
   1540d:	5d                   	pop    %rbp
   1540e:	41 5c                	pop    %r12
   15410:	c3                   	ret    

0000000000015411 <tftp_process_tsize>:
   15411:	f3 0f 1e fa          	endbr64 
   15415:	53                   	push   %rbx
   15416:	ba 0a 00 00 00       	mov    $0xa,%edx
   1541b:	48 89 fb             	mov    %rdi,%rbx
   1541e:	48 89 f7             	mov    %rsi,%rdi
   15421:	48 83 ec 10          	sub    $0x10,%rsp
   15425:	48 8b 05 44 4b 01 00 	mov    0x14b44(%rip),%rax        # 29f70 <__stack_chk_guard>
   1542c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   15431:	31 c0                	xor    %eax,%eax
   15433:	48 89 e6             	mov    %rsp,%rsi
   15436:	e8 40 e6 ff ff       	call   13a7b <strtoul>
   1543b:	48 8b 14 24          	mov    (%rsp),%rdx
   1543f:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
   15446:	31 c0                	xor    %eax,%eax
   15448:	80 3a 00             	cmpb   $0x0,(%rdx)
   1544b:	74 05                	je     15452 <tftp_process_tsize+0x41>
   1544d:	b8 7e 9d ed e3       	mov    $0xe3ed9d7e,%eax
   15452:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   15457:	48 2b 15 12 4b 01 00 	sub    0x14b12(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1545e:	74 05                	je     15465 <tftp_process_tsize+0x54>
   15460:	e8 fb d5 fe ff       	call   2a60 <__stack_chk_fail>
   15465:	48 83 c4 10          	add    $0x10,%rsp
   15469:	5b                   	pop    %rbx
   1546a:	c3                   	ret    

000000000001546b <tftp_process_blksize>:
   1546b:	f3 0f 1e fa          	endbr64 
   1546f:	53                   	push   %rbx
   15470:	ba 0a 00 00 00       	mov    $0xa,%edx
   15475:	48 89 fb             	mov    %rdi,%rbx
   15478:	48 89 f7             	mov    %rsi,%rdi
   1547b:	48 83 ec 10          	sub    $0x10,%rsp
   1547f:	48 8b 05 ea 4a 01 00 	mov    0x14aea(%rip),%rax        # 29f70 <__stack_chk_guard>
   15486:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1548b:	31 c0                	xor    %eax,%eax
   1548d:	48 89 e6             	mov    %rsp,%rsi
   15490:	e8 e6 e5 ff ff       	call   13a7b <strtoul>
   15495:	48 8b 14 24          	mov    (%rsp),%rdx
   15499:	89 43 78             	mov    %eax,0x78(%rbx)
   1549c:	31 c0                	xor    %eax,%eax
   1549e:	80 3a 00             	cmpb   $0x0,(%rdx)
   154a1:	74 05                	je     154a8 <tftp_process_blksize+0x3d>
   154a3:	b8 7e 9e ed e3       	mov    $0xe3ed9e7e,%eax
   154a8:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   154ad:	48 2b 15 bc 4a 01 00 	sub    0x14abc(%rip),%rdx        # 29f70 <__stack_chk_guard>
   154b4:	74 05                	je     154bb <tftp_process_blksize+0x50>
   154b6:	e8 a5 d5 fe ff       	call   2a60 <__stack_chk_fail>
   154bb:	48 83 c4 10          	add    $0x10,%rsp
   154bf:	5b                   	pop    %rbx
   154c0:	c3                   	ret    

00000000000154c1 <tftp_presize>:
   154c1:	48 39 b7 c8 00 00 00 	cmp    %rsi,0xc8(%rdi)
   154c8:	73 53                	jae    1551d <tftp_presize+0x5c>
   154ca:	41 54                	push   %r12
   154cc:	49 89 f4             	mov    %rsi,%r12
   154cf:	55                   	push   %rbp
   154d0:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
   154d4:	53                   	push   %rbx
   154d5:	48 89 fb             	mov    %rdi,%rbx
   154d8:	48 89 b7 c8 00 00 00 	mov    %rsi,0xc8(%rdi)
   154df:	48 89 ef             	mov    %rbp,%rdi
   154e2:	e8 af 22 00 00       	call   17796 <xfer_seek>
   154e7:	31 f6                	xor    %esi,%esi
   154e9:	48 89 ef             	mov    %rbp,%rdi
   154ec:	e8 a5 22 00 00       	call   17796 <xfer_seek>
   154f1:	8b 4b 78             	mov    0x78(%rbx),%ecx
   154f4:	85 c9                	test   %ecx,%ecx
   154f6:	75 0a                	jne    15502 <tftp_presize+0x41>
   154f8:	b8 7e 9f ed e3       	mov    $0xe3ed9f7e,%eax
   154fd:	5b                   	pop    %rbx
   154fe:	5d                   	pop    %rbp
   154ff:	41 5c                	pop    %r12
   15501:	c3                   	ret    
   15502:	4c 89 e0             	mov    %r12,%rax
   15505:	31 d2                	xor    %edx,%edx
   15507:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
   1550e:	5b                   	pop    %rbx
   1550f:	48 f7 f1             	div    %rcx
   15512:	5d                   	pop    %rbp
   15513:	41 5c                	pop    %r12
   15515:	8d 70 01             	lea    0x1(%rax),%esi
   15518:	e9 3b 37 00 00       	jmp    18c58 <bitmap_resize>
   1551d:	31 c0                	xor    %eax,%eax
   1551f:	c3                   	ret    

0000000000015520 <tftp_close>:
   15520:	f3 0f 1e fa          	endbr64 
   15524:	41 57                	push   %r15
   15526:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1552b:	4c 8d 3d 40 e7 00 00 	lea    0xe740(%rip),%r15        # 23c72 <.LC1>
   15532:	41 56                	push   %r14
   15534:	41 55                	push   %r13
   15536:	41 89 f5             	mov    %esi,%r13d
   15539:	41 54                	push   %r12
   1553b:	49 89 fc             	mov    %rdi,%r12
   1553e:	55                   	push   %rbp
   1553f:	4d 8d 74 24 38       	lea    0x38(%r12),%r14
   15544:	53                   	push   %rbx
   15545:	48 83 ec 38          	sub    $0x38,%rsp
   15549:	48 8b 05 20 4a 01 00 	mov    0x14a20(%rip),%rax        # 29f70 <__stack_chk_guard>
   15550:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   15555:	31 c0                	xor    %eax,%eax
   15557:	48 89 e7             	mov    %rsp,%rdi
   1555a:	f3 ab                	rep stos %eax,%es:(%rdi)
   1555c:	49 8d 84 24 8c 00 00 	lea    0x8c(%r12),%rax
   15563:	00 
   15564:	4c 89 ff             	mov    %r15,%rdi
   15567:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1556c:	e8 c9 e3 ff ff       	call   1393a <strlen>
   15571:	4c 89 f7             	mov    %r14,%rdi
   15574:	48 8d 58 05          	lea    0x5(%rax),%rbx
   15578:	48 89 de             	mov    %rbx,%rsi
   1557b:	e8 1b 20 00 00       	call   1759b <xfer_alloc_iob>
   15580:	48 85 c0             	test   %rax,%rax
   15583:	75 02                	jne    15587 <tftp_close+0x67>
   15585:	eb 2f                	jmp    155b6 <tftp_close+0x96>
   15587:	48 8b 78 20          	mov    0x20(%rax),%rdi
   1558b:	48 89 c5             	mov    %rax,%rbp
   1558e:	4c 89 fe             	mov    %r15,%rsi
   15591:	48 01 fb             	add    %rdi,%rbx
   15594:	48 83 c7 04          	add    $0x4,%rdi
   15598:	48 89 58 20          	mov    %rbx,0x20(%rax)
   1559c:	c7 47 fc 00 05 00 00 	movl   $0x500,-0x4(%rdi)
   155a3:	e8 12 e4 ff ff       	call   139ba <strcpy>
   155a8:	48 89 e2             	mov    %rsp,%rdx
   155ab:	48 89 ee             	mov    %rbp,%rsi
   155ae:	4c 89 f7             	mov    %r14,%rdi
   155b1:	e8 63 20 00 00       	call   17619 <xfer_deliver>
   155b6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   155bb:	48 2b 05 ae 49 01 00 	sub    0x149ae(%rip),%rax        # 29f70 <__stack_chk_guard>
   155c2:	74 05                	je     155c9 <tftp_close+0xa9>
   155c4:	e8 97 d4 fe ff       	call   2a60 <__stack_chk_fail>
   155c9:	48 83 c4 38          	add    $0x38,%rsp
   155cd:	44 89 ee             	mov    %r13d,%esi
   155d0:	4c 89 e7             	mov    %r12,%rdi
   155d3:	5b                   	pop    %rbx
   155d4:	5d                   	pop    %rbp
   155d5:	41 5c                	pop    %r12
   155d7:	41 5d                	pop    %r13
   155d9:	41 5e                	pop    %r14
   155db:	41 5f                	pop    %r15
   155dd:	e9 9d fb ff ff       	jmp    1517f <tftp_done>

00000000000155e2 <tftp_free>:
   155e2:	f3 0f 1e fa          	endbr64 
   155e6:	55                   	push   %rbp
   155e7:	48 89 fd             	mov    %rdi,%rbp
   155ea:	48 8b 7f 30          	mov    0x30(%rdi),%rdi
   155ee:	e8 4b a8 ff ff       	call   fe3e <ref_decrement>
   155f3:	48 8b bd b8 00 00 00 	mov    0xb8(%rbp),%rdi
   155fa:	e8 50 70 ff ff       	call   c64f <free>
   155ff:	48 89 ef             	mov    %rbp,%rdi
   15602:	5d                   	pop    %rbp
   15603:	e9 47 70 ff ff       	jmp    c64f <free>

0000000000015608 <tftp_send_packet.isra.0>:
   15608:	41 56                	push   %r14
   1560a:	41 55                	push   %r13
   1560c:	41 54                	push   %r12
   1560e:	55                   	push   %rbp
   1560f:	48 8d af d0 00 00 00 	lea    0xd0(%rdi),%rbp
   15616:	53                   	push   %rbx
   15617:	48 89 fb             	mov    %rdi,%rbx
   1561a:	48 89 ef             	mov    %rbp,%rdi
   1561d:	4c 8d 63 38          	lea    0x38(%rbx),%r12
   15621:	48 83 ec 30          	sub    $0x30,%rsp
   15625:	48 8b 05 44 49 01 00 	mov    0x14944(%rip),%rax        # 29f70 <__stack_chk_guard>
   1562c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   15631:	31 c0                	xor    %eax,%eax
   15633:	e8 98 ac ff ff       	call   102d0 <stop_timer>
   15638:	4c 89 e7             	mov    %r12,%rdi
   1563b:	e8 f8 1d 00 00       	call   17438 <xfer_window>
   15640:	48 85 c0             	test   %rax,%rax
   15643:	74 0a                	je     1564f <tftp_send_packet.isra.0+0x47>
   15645:	48 89 ef             	mov    %rbp,%rdi
   15648:	e8 55 ac ff ff       	call   102a2 <start_timer>
   1564d:	eb 0a                	jmp    15659 <tftp_send_packet.isra.0+0x51>
   1564f:	31 f6                	xor    %esi,%esi
   15651:	48 89 ef             	mov    %rbp,%rdi
   15654:	e8 09 ac ff ff       	call   10262 <start_timer_fixed>
   15659:	66 83 bb 8c 00 00 00 	cmpw   $0x0,0x8c(%rbx)
   15660:	00 
   15661:	0f 85 04 01 00 00    	jne    1576b <tftp_send_packet.isra.0+0x163>
   15667:	48 8b 43 30          	mov    0x30(%rbx),%rax
   1566b:	4c 8b 70 40          	mov    0x40(%rax),%r14
   1566f:	49 ff c6             	inc    %r14
   15672:	4c 89 f7             	mov    %r14,%rdi
   15675:	e8 c0 e2 ff ff       	call   1393a <strlen>
   1567a:	4c 89 e7             	mov    %r12,%rdi
   1567d:	48 8d 70 2a          	lea    0x2a(%rax),%rsi
   15681:	e8 15 1f 00 00       	call   1759b <xfer_alloc_iob>
   15686:	48 89 c5             	mov    %rax,%rbp
   15689:	48 85 c0             	test   %rax,%rax
   1568c:	75 05                	jne    15693 <tftp_send_packet.isra.0+0x8b>
   1568e:	e9 38 01 00 00       	jmp    157cb <tftp_send_packet.isra.0+0x1c3>
   15693:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   15697:	e8 9c 1d 00 00       	call   17438 <xfer_window>
   1569c:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   156a0:	45 31 c0             	xor    %r8d,%r8d
   156a3:	4c 89 f1             	mov    %r14,%rcx
   156a6:	49 89 c5             	mov    %rax,%r13
   156a9:	48 8b 45 20          	mov    0x20(%rbp),%rax
   156ad:	48 8d 15 cb e5 00 00 	lea    0xe5cb(%rip),%rdx        # 23c7f <.LC2>
   156b4:	48 8d 78 02          	lea    0x2(%rax),%rdi
   156b8:	48 89 7d 20          	mov    %rdi,0x20(%rbp)
   156bc:	48 29 fe             	sub    %rdi,%rsi
   156bf:	66 c7 00 00 01       	movw   $0x100,(%rax)
   156c4:	31 c0                	xor    %eax,%eax
   156c6:	e8 b6 19 00 00       	call   17081 <snprintf>
   156cb:	8d 78 01             	lea    0x1(%rax),%edi
   156ce:	48 63 ff             	movslq %edi,%rdi
   156d1:	48 03 7d 20          	add    0x20(%rbp),%rdi
   156d5:	48 89 7d 20          	mov    %rdi,0x20(%rbp)
   156d9:	f6 83 ac 00 00 00 02 	testb  $0x2,0xac(%rbx)
   156e0:	74 34                	je     15716 <tftp_send_packet.isra.0+0x10e>
   156e2:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   156e6:	41 b8 98 05 00 00    	mov    $0x598,%r8d
   156ec:	45 31 c9             	xor    %r9d,%r9d
   156ef:	50                   	push   %rax
   156f0:	6a 00                	push   $0x0
   156f2:	48 8d 15 90 e5 00 00 	lea    0xe590(%rip),%rdx        # 23c89 <.LC3>
   156f9:	48 29 fe             	sub    %rdi,%rsi
   156fc:	4d 39 c5             	cmp    %r8,%r13
   156ff:	4d 0f 46 c5          	cmovbe %r13,%r8
   15703:	31 c9                	xor    %ecx,%ecx
   15705:	31 c0                	xor    %eax,%eax
   15707:	e8 75 19 00 00       	call   17081 <snprintf>
   1570c:	ff c0                	inc    %eax
   1570e:	48 98                	cltq   
   15710:	48 01 45 20          	add    %rax,0x20(%rbp)
   15714:	5a                   	pop    %rdx
   15715:	59                   	pop    %rcx
   15716:	f6 83 ac 00 00 00 04 	testb  $0x4,0xac(%rbx)
   1571d:	74 23                	je     15742 <tftp_send_packet.isra.0+0x13a>
   1571f:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   15723:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   15727:	31 c9                	xor    %ecx,%ecx
   15729:	31 c0                	xor    %eax,%eax
   1572b:	48 8d 15 6e e5 00 00 	lea    0xe56e(%rip),%rdx        # 23ca0 <.LC4>
   15732:	48 29 fe             	sub    %rdi,%rsi
   15735:	e8 47 19 00 00       	call   17081 <snprintf>
   1573a:	ff c0                	inc    %eax
   1573c:	48 98                	cltq   
   1573e:	48 01 45 20          	add    %rax,0x20(%rbp)
   15742:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   15747:	48 2b 05 22 48 01 00 	sub    0x14822(%rip),%rax        # 29f70 <__stack_chk_guard>
   1574e:	0f 85 85 00 00 00    	jne    157d9 <tftp_send_packet.isra.0+0x1d1>
   15754:	48 83 c4 30          	add    $0x30,%rsp
   15758:	48 89 ee             	mov    %rbp,%rsi
   1575b:	4c 89 e7             	mov    %r12,%rdi
   1575e:	5b                   	pop    %rbx
   1575f:	5d                   	pop    %rbp
   15760:	41 5c                	pop    %r12
   15762:	41 5d                	pop    %r13
   15764:	41 5e                	pop    %r14
   15766:	e9 9b 1f 00 00       	jmp    17706 <xfer_deliver_iob>
   1576b:	f6 83 ac 00 00 00 01 	testb  $0x1,0xac(%rbx)
   15772:	74 57                	je     157cb <tftp_send_packet.isra.0+0x1c3>
   15774:	31 c0                	xor    %eax,%eax
   15776:	48 89 e7             	mov    %rsp,%rdi
   15779:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1577e:	be 04 00 00 00       	mov    $0x4,%esi
   15783:	f3 ab                	rep stos %eax,%es:(%rdi)
   15785:	48 8d 83 8c 00 00 00 	lea    0x8c(%rbx),%rax
   1578c:	4c 89 e7             	mov    %r12,%rdi
   1578f:	8b 9b c4 00 00 00    	mov    0xc4(%rbx),%ebx
   15795:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1579a:	e8 fc 1d 00 00       	call   1759b <xfer_alloc_iob>
   1579f:	48 89 c6             	mov    %rax,%rsi
   157a2:	48 85 c0             	test   %rax,%rax
   157a5:	75 02                	jne    157a9 <tftp_send_packet.isra.0+0x1a1>
   157a7:	eb 22                	jmp    157cb <tftp_send_packet.isra.0+0x1c3>
   157a9:	48 8b 50 20          	mov    0x20(%rax),%rdx
   157ad:	4c 89 e7             	mov    %r12,%rdi
   157b0:	86 df                	xchg   %bl,%bh
   157b2:	48 8d 42 04          	lea    0x4(%rdx),%rax
   157b6:	48 89 46 20          	mov    %rax,0x20(%rsi)
   157ba:	66 c7 02 00 04       	movw   $0x400,(%rdx)
   157bf:	66 89 5a 02          	mov    %bx,0x2(%rdx)
   157c3:	48 89 e2             	mov    %rsp,%rdx
   157c6:	e8 4e 1e 00 00       	call   17619 <xfer_deliver>
   157cb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   157d0:	48 2b 05 99 47 01 00 	sub    0x14799(%rip),%rax        # 29f70 <__stack_chk_guard>
   157d7:	74 05                	je     157de <tftp_send_packet.isra.0+0x1d6>
   157d9:	e8 82 d2 fe ff       	call   2a60 <__stack_chk_fail>
   157de:	48 83 c4 30          	add    $0x30,%rsp
   157e2:	5b                   	pop    %rbx
   157e3:	5d                   	pop    %rbp
   157e4:	41 5c                	pop    %r12
   157e6:	41 5d                	pop    %r13
   157e8:	41 5e                	pop    %r14
   157ea:	c3                   	ret    

00000000000157eb <tftp_rx>:
   157eb:	f3 0f 1e fa          	endbr64 
   157ef:	41 57                	push   %r15
   157f1:	41 56                	push   %r14
   157f3:	41 55                	push   %r13
   157f5:	49 89 f5             	mov    %rsi,%r13
   157f8:	41 54                	push   %r12
   157fa:	55                   	push   %rbp
   157fb:	53                   	push   %rbx
   157fc:	48 83 ec 48          	sub    $0x48,%rsp
   15800:	4c 8b 76 18          	mov    0x18(%rsi),%r14
   15804:	48 8b 5e 20          	mov    0x20(%rsi),%rbx
   15808:	48 8b 05 61 47 01 00 	mov    0x14761(%rip),%rax        # 29f70 <__stack_chk_guard>
   1580f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   15814:	31 c0                	xor    %eax,%eax
   15816:	4c 29 f3             	sub    %r14,%rbx
   15819:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   1581f:	48 83 fb 01          	cmp    $0x1,%rbx
   15823:	0f 86 54 02 00 00    	jbe    15a7d <tftp_rx+0x292>
   15829:	48 8b 72 10          	mov    0x10(%rdx),%rsi
   1582d:	48 85 f6             	test   %rsi,%rsi
   15830:	0f 84 47 02 00 00    	je     15a7d <tftp_rx+0x292>
   15836:	48 89 fd             	mov    %rdi,%rbp
   15839:	ba 20 00 00 00       	mov    $0x20,%edx
   1583e:	48 8d bf 8c 00 00 00 	lea    0x8c(%rdi),%rdi
   15845:	66 83 bd 8c 00 00 00 	cmpw   $0x0,0x8c(%rbp)
   1584c:	00 
   1584d:	75 07                	jne    15856 <tftp_rx+0x6b>
   1584f:	e8 b9 1a 00 00       	call   1730d <__memcpy>
   15854:	eb 13                	jmp    15869 <tftp_rx+0x7e>
   15856:	e8 f9 df ff ff       	call   13854 <memcmp>
   1585b:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   15861:	85 c0                	test   %eax,%eax
   15863:	0f 85 14 02 00 00    	jne    15a7d <tftp_rx+0x292>
   15869:	66 41 8b 06          	mov    (%r14),%ax
   1586d:	66 3d 00 05          	cmp    $0x500,%ax
   15871:	0f 84 b8 01 00 00    	je     15a2f <tftp_rx+0x244>
   15877:	66 3d 00 06          	cmp    $0x600,%ax
   1587b:	74 0f                	je     1588c <tftp_rx+0xa1>
   1587d:	66 3d 00 03          	cmp    $0x300,%ax
   15881:	0f 85 b2 01 00 00    	jne    15a39 <tftp_rx+0x24e>
   15887:	e9 af 00 00 00       	jmp    1593b <tftp_rx+0x150>
   1588c:	4d 8b 65 18          	mov    0x18(%r13),%r12
   15890:	4c 01 e3             	add    %r12,%rbx
   15893:	49 83 c4 02          	add    $0x2,%r12
   15897:	4c 39 e3             	cmp    %r12,%rbx
   1589a:	76 72                	jbe    1590e <tftp_rx+0x123>
   1589c:	48 89 de             	mov    %rbx,%rsi
   1589f:	4c 89 e7             	mov    %r12,%rdi
   158a2:	4c 29 e6             	sub    %r12,%rsi
   158a5:	e8 79 e0 ff ff       	call   13923 <strnlen>
   158aa:	4d 8d 74 04 01       	lea    0x1(%r12,%rax,1),%r14
   158af:	4c 39 f3             	cmp    %r14,%rbx
   158b2:	76 5a                	jbe    1590e <tftp_rx+0x123>
   158b4:	48 89 de             	mov    %rbx,%rsi
   158b7:	4c 89 f7             	mov    %r14,%rdi
   158ba:	4c 29 f6             	sub    %r14,%rsi
   158bd:	e8 61 e0 ff ff       	call   13923 <strnlen>
   158c2:	49 8d 44 06 01       	lea    0x1(%r14,%rax,1),%rax
   158c7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   158cc:	48 39 c3             	cmp    %rax,%rbx
   158cf:	72 3d                	jb     1590e <tftp_rx+0x123>
   158d1:	4c 8d 3d 88 1a 01 00 	lea    0x11a88(%rip),%r15        # 27360 <tftp_options>
   158d8:	49 8b 37             	mov    (%r15),%rsi
   158db:	48 85 f6             	test   %rsi,%rsi
   158de:	74 21                	je     15901 <tftp_rx+0x116>
   158e0:	4c 89 e7             	mov    %r12,%rdi
   158e3:	e8 05 e0 ff ff       	call   138ed <strcasecmp>
   158e8:	85 c0                	test   %eax,%eax
   158ea:	75 1c                	jne    15908 <tftp_rx+0x11d>
   158ec:	4c 89 f6             	mov    %r14,%rsi
   158ef:	48 89 ef             	mov    %rbp,%rdi
   158f2:	41 ff 57 08          	call   *0x8(%r15)
   158f6:	41 89 c4             	mov    %eax,%r12d
   158f9:	85 c0                	test   %eax,%eax
   158fb:	0f 85 97 01 00 00    	jne    15a98 <tftp_rx+0x2ad>
   15901:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   15906:	eb 8f                	jmp    15897 <tftp_rx+0xac>
   15908:	49 83 c7 10          	add    $0x10,%r15
   1590c:	eb ca                	jmp    158d8 <tftp_rx+0xed>
   1590e:	48 8b b5 80 00 00 00 	mov    0x80(%rbp),%rsi
   15915:	48 85 f6             	test   %rsi,%rsi
   15918:	75 0d                	jne    15927 <tftp_rx+0x13c>
   1591a:	48 89 ef             	mov    %rbp,%rdi
   1591d:	e8 e6 fc ff ff       	call   15608 <tftp_send_packet.isra.0>
   15922:	e9 53 01 00 00       	jmp    15a7a <tftp_rx+0x28f>
   15927:	48 89 ef             	mov    %rbp,%rdi
   1592a:	e8 92 fb ff ff       	call   154c1 <tftp_presize>
   1592f:	41 89 c4             	mov    %eax,%r12d
   15932:	85 c0                	test   %eax,%eax
   15934:	74 e4                	je     1591a <tftp_rx+0x12f>
   15936:	e9 5d 01 00 00       	jmp    15a98 <tftp_rx+0x2ad>
   1593b:	49 8b 5d 20          	mov    0x20(%r13),%rbx
   1593f:	49 8b 55 18          	mov    0x18(%r13),%rdx
   15943:	48 89 d8             	mov    %rbx,%rax
   15946:	48 29 d0             	sub    %rdx,%rax
   15949:	48 83 f8 03          	cmp    $0x3,%rax
   1594d:	77 02                	ja     15951 <tftp_rx+0x166>
   1594f:	eb 1a                	jmp    1596b <tftp_rx+0x180>
   15951:	8b 85 c4 00 00 00    	mov    0xc4(%rbp),%eax
   15957:	8d 48 01             	lea    0x1(%rax),%ecx
   1595a:	66 8b 42 02          	mov    0x2(%rdx),%ax
   1595e:	81 e1 00 00 ff ff    	and    $0xffff0000,%ecx
   15964:	75 10                	jne    15976 <tftp_rx+0x18b>
   15966:	66 85 c0             	test   %ax,%ax
   15969:	75 0b                	jne    15976 <tftp_rx+0x18b>
   1596b:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   15971:	e9 9c 00 00 00       	jmp    15a12 <tftp_rx+0x227>
   15976:	86 c4                	xchg   %al,%ah
   15978:	0f b7 c0             	movzwl %ax,%eax
   1597b:	48 83 c2 04          	add    $0x4,%rdx
   1597f:	44 8d 74 01 ff       	lea    -0x1(%rcx,%rax,1),%r14d
   15984:	8b 45 78             	mov    0x78(%rbp),%eax
   15987:	48 29 d3             	sub    %rdx,%rbx
   1598a:	49 89 55 18          	mov    %rdx,0x18(%r13)
   1598e:	45 89 f7             	mov    %r14d,%r15d
   15991:	44 0f af f8          	imul   %eax,%r15d
   15995:	48 39 c3             	cmp    %rax,%rbx
   15998:	76 02                	jbe    1599c <tftp_rx+0x1b1>
   1599a:	eb cf                	jmp    1596b <tftp_rx+0x180>
   1599c:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   159a1:	b9 28 00 00 00       	mov    $0x28,%ecx
   159a6:	31 c0                	xor    %eax,%eax
   159a8:	48 89 d7             	mov    %rdx,%rdi
   159ab:	f3 aa                	rep stos %al,%es:(%rdi)
   159ad:	4c 89 ee             	mov    %r13,%rsi
   159b0:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   159b4:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
   159b9:	45 31 ed             	xor    %r13d,%r13d
   159bc:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   159c3:	00 
   159c4:	e8 50 1c 00 00       	call   17619 <xfer_deliver>
   159c9:	41 89 c4             	mov    %eax,%r12d
   159cc:	85 c0                	test   %eax,%eax
   159ce:	75 42                	jne    15a12 <tftp_rx+0x227>
   159d0:	49 8d 34 1f          	lea    (%r15,%rbx,1),%rsi
   159d4:	48 89 ef             	mov    %rbp,%rdi
   159d7:	e8 e5 fa ff ff       	call   154c1 <tftp_presize>
   159dc:	41 89 c4             	mov    %eax,%r12d
   159df:	85 c0                	test   %eax,%eax
   159e1:	75 2f                	jne    15a12 <tftp_rx+0x227>
   159e3:	48 8d bd b8 00 00 00 	lea    0xb8(%rbp),%rdi
   159ea:	44 89 f6             	mov    %r14d,%esi
   159ed:	e8 08 33 00 00       	call   18cfa <bitmap_set>
   159f2:	48 89 ef             	mov    %rbp,%rdi
   159f5:	e8 0e fc ff ff       	call   15608 <tftp_send_packet.isra.0>
   159fa:	8b 85 c0 00 00 00    	mov    0xc0(%rbp),%eax
   15a00:	39 85 c4 00 00 00    	cmp    %eax,0xc4(%rbp)
   15a06:	75 0a                	jne    15a12 <tftp_rx+0x227>
   15a08:	31 f6                	xor    %esi,%esi
   15a0a:	48 89 ef             	mov    %rbp,%rdi
   15a0d:	e8 6d f7 ff ff       	call   1517f <tftp_done>
   15a12:	4c 89 ef             	mov    %r13,%rdi
   15a15:	e8 7c 42 ff ff       	call   9c96 <free_iob>
   15a1a:	45 85 e4             	test   %r12d,%r12d
   15a1d:	74 0b                	je     15a2a <tftp_rx+0x23f>
   15a1f:	44 89 e6             	mov    %r12d,%esi
   15a22:	48 89 ef             	mov    %rbp,%rdi
   15a25:	e8 55 f7 ff ff       	call   1517f <tftp_done>
   15a2a:	45 31 ed             	xor    %r13d,%r13d
   15a2d:	eb 4e                	jmp    15a7d <tftp_rx+0x292>
   15a2f:	49 8b 45 18          	mov    0x18(%r13),%rax
   15a33:	48 83 fb 03          	cmp    $0x3,%rbx
   15a37:	77 08                	ja     15a41 <tftp_rx+0x256>
   15a39:	41 bc 7e 9f ed e3    	mov    $0xe3ed9f7e,%r12d
   15a3f:	eb 3c                	jmp    15a7d <tftp_rx+0x292>
   15a41:	66 8b 40 02          	mov    0x2(%rax),%ax
   15a45:	86 c4                	xchg   %al,%ah
   15a47:	66 83 f8 02          	cmp    $0x2,%ax
   15a4b:	74 12                	je     15a5f <tftp_rx+0x274>
   15a4d:	66 83 f8 04          	cmp    $0x4,%ax
   15a51:	74 13                	je     15a66 <tftp_rx+0x27b>
   15a53:	66 ff c8             	dec    %ax
   15a56:	75 15                	jne    15a6d <tftp_rx+0x282>
   15a58:	be 72 9f ed d2       	mov    $0xd2ed9f72,%esi
   15a5d:	eb 13                	jmp    15a72 <tftp_rx+0x287>
   15a5f:	be 71 9f ed fd       	mov    $0xfded9f71,%esi
   15a64:	eb 0c                	jmp    15a72 <tftp_rx+0x287>
   15a66:	be 7d 9f ed c2       	mov    $0xc2ed9f7d,%esi
   15a6b:	eb 05                	jmp    15a72 <tftp_rx+0x287>
   15a6d:	be 7d 9f ed c3       	mov    $0xc3ed9f7d,%esi
   15a72:	48 89 ef             	mov    %rbp,%rdi
   15a75:	e8 05 f7 ff ff       	call   1517f <tftp_done>
   15a7a:	45 31 e4             	xor    %r12d,%r12d
   15a7d:	4c 89 ef             	mov    %r13,%rdi
   15a80:	e8 11 42 ff ff       	call   9c96 <free_iob>
   15a85:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15a8a:	48 2b 05 df 44 01 00 	sub    0x144df(%rip),%rax        # 29f70 <__stack_chk_guard>
   15a91:	74 12                	je     15aa5 <tftp_rx+0x2ba>
   15a93:	e8 c8 cf fe ff       	call   2a60 <__stack_chk_fail>
   15a98:	44 89 e6             	mov    %r12d,%esi
   15a9b:	48 89 ef             	mov    %rbp,%rdi
   15a9e:	e8 dc f6 ff ff       	call   1517f <tftp_done>
   15aa3:	eb d8                	jmp    15a7d <tftp_rx+0x292>
   15aa5:	48 83 c4 48          	add    $0x48,%rsp
   15aa9:	44 89 e0             	mov    %r12d,%eax
   15aac:	5b                   	pop    %rbx
   15aad:	5d                   	pop    %rbp
   15aae:	41 5c                	pop    %r12
   15ab0:	41 5d                	pop    %r13
   15ab2:	41 5e                	pop    %r14
   15ab4:	41 5f                	pop    %r15
   15ab6:	c3                   	ret    

0000000000015ab7 <tftp_socket_deliver>:
   15ab7:	f3 0f 1e fa          	endbr64 
   15abb:	83 8f ac 00 00 00 01 	orl    $0x1,0xac(%rdi)
   15ac2:	e9 24 fd ff ff       	jmp    157eb <tftp_rx>

0000000000015ac7 <tftp_timer_expired>:
   15ac7:	f3 0f 1e fa          	endbr64 
   15acb:	55                   	push   %rbp
   15acc:	48 8d af 30 ff ff ff 	lea    -0xd0(%rdi),%rbp
   15ad3:	53                   	push   %rbx
   15ad4:	51                   	push   %rcx
   15ad5:	f6 47 dc 08          	testb  $0x8,-0x24(%rdi)
   15ad9:	74 5d                	je     15b38 <tftp_timer_expired+0x71>
   15adb:	66 83 7f bc 00       	cmpw   $0x0,-0x44(%rdi)
   15ae0:	48 89 fb             	mov    %rdi,%rbx
   15ae3:	75 43                	jne    15b28 <tftp_timer_expired+0x61>
   15ae5:	8b 47 e0             	mov    -0x20(%rdi),%eax
   15ae8:	ff c0                	inc    %eax
   15aea:	89 47 e0             	mov    %eax,-0x20(%rdi)
   15aed:	83 f8 03             	cmp    $0x3,%eax
   15af0:	76 51                	jbe    15b43 <tftp_timer_expired+0x7c>
   15af2:	c7 47 dc 02 00 00 00 	movl   $0x2,-0x24(%rdi)
   15af9:	31 f6                	xor    %esi,%esi
   15afb:	48 8d 7f 88          	lea    -0x78(%rdi),%rdi
   15aff:	e8 44 3d ff ff       	call   9848 <intf_restart>
   15b04:	31 f6                	xor    %esi,%esi
   15b06:	48 89 df             	mov    %rbx,%rdi
   15b09:	e8 54 a7 ff ff       	call   10262 <start_timer_fixed>
   15b0e:	48 8b 7b e8          	mov    -0x18(%rbx),%rdi
   15b12:	e8 38 6b ff ff       	call   c64f <free>
   15b17:	48 8d 7b e8          	lea    -0x18(%rbx),%rdi
   15b1b:	31 c0                	xor    %eax,%eax
   15b1d:	ab                   	stos   %eax,%es:(%rdi)
   15b1e:	ab                   	stos   %eax,%es:(%rdi)
   15b1f:	ab                   	stos   %eax,%es:(%rdi)
   15b20:	ab                   	stos   %eax,%es:(%rdi)
   15b21:	c7 43 b8 45 00 00 00 	movl   $0x45,-0x48(%rbx)
   15b28:	48 89 ef             	mov    %rbp,%rdi
   15b2b:	e8 77 f4 ff ff       	call   14fa7 <tftp_reopen>
   15b30:	89 c6                	mov    %eax,%esi
   15b32:	85 c0                	test   %eax,%eax
   15b34:	74 0d                	je     15b43 <tftp_timer_expired+0x7c>
   15b36:	eb 16                	jmp    15b4e <tftp_timer_expired+0x87>
   15b38:	85 f6                	test   %esi,%esi
   15b3a:	74 07                	je     15b43 <tftp_timer_expired+0x7c>
   15b3c:	be 6e 9f ed b3       	mov    $0xb3ed9f6e,%esi
   15b41:	eb 0b                	jmp    15b4e <tftp_timer_expired+0x87>
   15b43:	5a                   	pop    %rdx
   15b44:	48 89 ef             	mov    %rbp,%rdi
   15b47:	5b                   	pop    %rbx
   15b48:	5d                   	pop    %rbp
   15b49:	e9 ba fa ff ff       	jmp    15608 <tftp_send_packet.isra.0>
   15b4e:	58                   	pop    %rax
   15b4f:	48 89 ef             	mov    %rbp,%rdi
   15b52:	5b                   	pop    %rbx
   15b53:	5d                   	pop    %rbp
   15b54:	e9 26 f6 ff ff       	jmp    1517f <tftp_done>

0000000000015b59 <mktime>:
   15b59:	f3 0f 1e fa          	endbr64 
   15b5d:	41 54                	push   %r12
   15b5f:	48 8d 05 ea c9 00 00 	lea    0xc9ea(%rip),%rax        # 22550 <days_to_month_start>
   15b66:	48 89 fe             	mov    %rdi,%rsi
   15b69:	55                   	push   %rbp
   15b6a:	8b 4e 14             	mov    0x14(%rsi),%ecx
   15b6d:	53                   	push   %rbx
   15b6e:	48 63 6f 10          	movslq 0x10(%rdi),%rbp
   15b72:	8b 5f 0c             	mov    0xc(%rdi),%ebx
   15b75:	0f b7 04 68          	movzwl (%rax,%rbp,2),%eax
   15b79:	49 89 e8             	mov    %rbp,%r8
   15b7c:	8d 7c 03 ff          	lea    -0x1(%rbx,%rax,1),%edi
   15b80:	89 7e 1c             	mov    %edi,0x1c(%rsi)
   15b83:	83 fd 01             	cmp    $0x1,%ebp
   15b86:	7e 39                	jle    15bc1 <mktime+0x68>
   15b88:	89 c8                	mov    %ecx,%eax
   15b8a:	41 ba 64 00 00 00    	mov    $0x64,%r10d
   15b90:	99                   	cltd   
   15b91:	41 f7 fa             	idiv   %r10d
   15b94:	41 89 d1             	mov    %edx,%r9d
   15b97:	85 d2                	test   %edx,%edx
   15b99:	74 0a                	je     15ba5 <mktime+0x4c>
   15b9b:	45 31 c9             	xor    %r9d,%r9d
   15b9e:	f6 c1 03             	test   $0x3,%cl
   15ba1:	41 0f 94 c1          	sete   %r9b
   15ba5:	89 c8                	mov    %ecx,%eax
   15ba7:	41 ba 90 01 00 00    	mov    $0x190,%r10d
   15bad:	99                   	cltd   
   15bae:	41 f7 fa             	idiv   %r10d
   15bb1:	83 fa 64             	cmp    $0x64,%edx
   15bb4:	74 06                	je     15bbc <mktime+0x63>
   15bb6:	41 80 e1 01          	and    $0x1,%r9b
   15bba:	74 05                	je     15bc1 <mktime+0x68>
   15bbc:	ff c7                	inc    %edi
   15bbe:	89 7e 1c             	mov    %edi,0x1c(%rsi)
   15bc1:	41 83 f8 02          	cmp    $0x2,%r8d
   15bc5:	8d 79 ff             	lea    -0x1(%rcx),%edi
   15bc8:	41 89 cb             	mov    %ecx,%r11d
   15bcb:	41 ba 04 00 00 00    	mov    $0x4,%r10d
   15bd1:	44 0f 4c df          	cmovl  %edi,%r11d
   15bd5:	41 b9 9c ff ff ff    	mov    $0xffffff9c,%r9d
   15bdb:	41 b8 90 01 00 00    	mov    $0x190,%r8d
   15be1:	44 89 d8             	mov    %r11d,%eax
   15be4:	99                   	cltd   
   15be5:	41 f7 fa             	idiv   %r10d
   15be8:	41 89 c4             	mov    %eax,%r12d
   15beb:	44 89 d8             	mov    %r11d,%eax
   15bee:	99                   	cltd   
   15bef:	41 f7 f9             	idiv   %r9d
   15bf2:	41 01 c4             	add    %eax,%r12d
   15bf5:	41 8d 83 2c 01 00 00 	lea    0x12c(%r11),%eax
   15bfc:	99                   	cltd   
   15bfd:	41 f7 f8             	idiv   %r8d
   15c00:	42 8d 14 20          	lea    (%rax,%r12,1),%edx
   15c04:	48 8d 05 35 c9 00 00 	lea    0xc935(%rip),%rax        # 22540 <offset.0>
   15c0b:	0f b6 04 28          	movzbl (%rax,%rbp,1),%eax
   15c0f:	44 01 da             	add    %r11d,%edx
   15c12:	41 bb 07 00 00 00    	mov    $0x7,%r11d
   15c18:	01 c2                	add    %eax,%edx
   15c1a:	8d 04 1a             	lea    (%rdx,%rbx,1),%eax
   15c1d:	5b                   	pop    %rbx
   15c1e:	5d                   	pop    %rbp
   15c1f:	99                   	cltd   
   15c20:	41 5c                	pop    %r12
   15c22:	41 f7 fb             	idiv   %r11d
   15c25:	89 f8                	mov    %edi,%eax
   15c27:	89 56 18             	mov    %edx,0x18(%rsi)
   15c2a:	99                   	cltd   
   15c2b:	41 f7 fa             	idiv   %r10d
   15c2e:	41 89 c2             	mov    %eax,%r10d
   15c31:	89 f8                	mov    %edi,%eax
   15c33:	99                   	cltd   
   15c34:	69 f9 6d 01 00 00    	imul   $0x16d,%ecx,%edi
   15c3a:	03 7e 1c             	add    0x1c(%rsi),%edi
   15c3d:	41 f7 f9             	idiv   %r9d
   15c40:	45 8d 0c 02          	lea    (%r10,%rax,1),%r9d
   15c44:	8d 81 2b 01 00 00    	lea    0x12b(%rcx),%eax
   15c4a:	99                   	cltd   
   15c4b:	41 f7 f8             	idiv   %r8d
   15c4e:	6b 56 08 3c          	imul   $0x3c,0x8(%rsi),%edx
   15c52:	03 56 04             	add    0x4(%rsi),%edx
   15c55:	6b d2 3c             	imul   $0x3c,%edx,%edx
   15c58:	03 16                	add    (%rsi),%edx
   15c5a:	48 63 d2             	movslq %edx,%rdx
   15c5d:	44 01 c8             	add    %r9d,%eax
   15c60:	8d 84 07 21 9c ff ff 	lea    -0x63df(%rdi,%rax,1),%eax
   15c67:	48 98                	cltq   
   15c69:	48 69 c0 80 51 01 00 	imul   $0x15180,%rax,%rax
   15c70:	48 01 d0             	add    %rdx,%rax
   15c73:	c3                   	ret    

0000000000015c74 <timer_probe>:
   15c74:	f3 0f 1e fa          	endbr64 
   15c78:	53                   	push   %rbx
   15c79:	48 8d 05 88 3d 01 00 	lea    0x13d88(%rip),%rax        # 29a08 <efi_timer>
   15c80:	48 8d 1d a1 3d 01 00 	lea    0x13da1(%rip),%rbx        # 29a28 <efi_local_uri_opener>
   15c87:	48 89 05 c2 40 01 00 	mov    %rax,0x140c2(%rip)        # 29d50 <timer>
   15c8e:	48 39 d8             	cmp    %rbx,%rax
   15c91:	73 1c                	jae    15caf <timer_probe+0x3b>
   15c93:	48 8b 40 08          	mov    0x8(%rax),%rax
   15c97:	48 85 c0             	test   %rax,%rax
   15c9a:	74 15                	je     15cb1 <timer_probe+0x3d>
   15c9c:	ff d0                	call   *%rax
   15c9e:	85 c0                	test   %eax,%eax
   15ca0:	74 0f                	je     15cb1 <timer_probe+0x3d>
   15ca2:	48 8b 05 a7 40 01 00 	mov    0x140a7(%rip),%rax        # 29d50 <timer>
   15ca9:	48 83 c0 20          	add    $0x20,%rax
   15cad:	eb d8                	jmp    15c87 <timer_probe+0x13>
   15caf:	eb fe                	jmp    15caf <timer_probe+0x3b>
   15cb1:	5b                   	pop    %rbx
   15cb2:	c3                   	ret    

0000000000015cb3 <keypress_interrupted>:
   15cb3:	f3 0f 1e fa          	endbr64 
   15cb7:	51                   	push   %rcx
   15cb8:	e8 d2 35 00 00       	call   1928f <iskey>
   15cbd:	85 c0                	test   %eax,%eax
   15cbf:	74 0e                	je     15ccf <keypress_interrupted+0x1c>
   15cc1:	e8 95 35 00 00       	call   1925b <getchar>
   15cc6:	83 f8 03             	cmp    $0x3,%eax
   15cc9:	0f 94 c0             	sete   %al
   15ccc:	0f b6 c0             	movzbl %al,%eax
   15ccf:	5a                   	pop    %rdx
   15cd0:	c3                   	ret    

0000000000015cd1 <currticks>:
   15cd1:	f3 0f 1e fa          	endbr64 
   15cd5:	48 8b 05 74 40 01 00 	mov    0x14074(%rip),%rax        # 29d50 <timer>
   15cdc:	48 85 c0             	test   %rax,%rax
   15cdf:	74 03                	je     15ce4 <currticks+0x13>
   15ce1:	ff 60 10             	jmp    *0x10(%rax)
   15ce4:	31 c0                	xor    %eax,%eax
   15ce6:	c3                   	ret    

0000000000015ce7 <udelay>:
   15ce7:	f3 0f 1e fa          	endbr64 
   15ceb:	48 8b 05 5e 40 01 00 	mov    0x1405e(%rip),%rax        # 29d50 <timer>
   15cf2:	48 85 c0             	test   %rax,%rax
   15cf5:	74 03                	je     15cfa <udelay+0x13>
   15cf7:	ff 60 18             	jmp    *0x18(%rax)
   15cfa:	c3                   	ret    

0000000000015cfb <mdelay>:
   15cfb:	f3 0f 1e fa          	endbr64 
   15cff:	48 83 3d 49 40 01 00 	cmpq   $0x0,0x14049(%rip)        # 29d50 <timer>
   15d06:	00 
   15d07:	75 01                	jne    15d0a <mdelay+0xf>
   15d09:	c3                   	ret    
   15d0a:	53                   	push   %rbx
   15d0b:	48 89 fb             	mov    %rdi,%rbx
   15d0e:	48 85 db             	test   %rbx,%rbx
   15d11:	74 0f                	je     15d22 <mdelay+0x27>
   15d13:	bf e8 03 00 00       	mov    $0x3e8,%edi
   15d18:	48 ff cb             	dec    %rbx
   15d1b:	e8 c7 ff ff ff       	call   15ce7 <udelay>
   15d20:	eb ec                	jmp    15d0e <mdelay+0x13>
   15d22:	5b                   	pop    %rbx
   15d23:	c3                   	ret    

0000000000015d24 <sleep>:
   15d24:	f3 0f 1e fa          	endbr64 
   15d28:	41 54                	push   %r12
   15d2a:	41 89 fc             	mov    %edi,%r12d
   15d2d:	53                   	push   %rbx
   15d2e:	51                   	push   %rcx
   15d2f:	e8 9d ff ff ff       	call   15cd1 <currticks>
   15d34:	48 89 c3             	mov    %rax,%rbx
   15d37:	45 85 e4             	test   %r12d,%r12d
   15d3a:	74 2e                	je     15d6a <sleep+0x46>
   15d3c:	e8 90 ff ff ff       	call   15cd1 <currticks>
   15d41:	48 89 c2             	mov    %rax,%rdx
   15d44:	48 29 da             	sub    %rbx,%rdx
   15d47:	48 81 fa ff 03 00 00 	cmp    $0x3ff,%rdx
   15d4e:	77 15                	ja     15d65 <sleep+0x41>
   15d50:	e8 57 9c ff ff       	call   f9ac <step>
   15d55:	e8 59 ff ff ff       	call   15cb3 <keypress_interrupted>
   15d5a:	85 c0                	test   %eax,%eax
   15d5c:	75 0c                	jne    15d6a <sleep+0x46>
   15d5e:	e8 34 7b 00 00       	call   1d897 <cpu_nap>
   15d63:	eb d7                	jmp    15d3c <sleep+0x18>
   15d65:	41 ff cc             	dec    %r12d
   15d68:	eb ca                	jmp    15d34 <sleep+0x10>
   15d6a:	44 89 e0             	mov    %r12d,%eax
   15d6d:	5a                   	pop    %rdx
   15d6e:	5b                   	pop    %rbx
   15d6f:	41 5c                	pop    %r12
   15d71:	c3                   	ret    

0000000000015d72 <sleep_fixed>:
   15d72:	f3 0f 1e fa          	endbr64 
   15d76:	55                   	push   %rbp
   15d77:	53                   	push   %rbx
   15d78:	89 fb                	mov    %edi,%ebx
   15d7a:	52                   	push   %rdx
   15d7b:	e8 51 ff ff ff       	call   15cd1 <currticks>
   15d80:	48 89 c5             	mov    %rax,%rbp
   15d83:	85 db                	test   %ebx,%ebx
   15d85:	74 24                	je     15dab <sleep_fixed+0x39>
   15d87:	e8 45 ff ff ff       	call   15cd1 <currticks>
   15d8c:	48 89 c2             	mov    %rax,%rdx
   15d8f:	48 29 ea             	sub    %rbp,%rdx
   15d92:	48 81 fa ff 03 00 00 	cmp    $0x3ff,%rdx
   15d99:	77 0c                	ja     15da7 <sleep_fixed+0x35>
   15d9b:	e8 0c 9c ff ff       	call   f9ac <step>
   15da0:	e8 f2 7a 00 00       	call   1d897 <cpu_nap>
   15da5:	eb e0                	jmp    15d87 <sleep_fixed+0x15>
   15da7:	ff cb                	dec    %ebx
   15da9:	eb d5                	jmp    15d80 <sleep_fixed+0xe>
   15dab:	58                   	pop    %rax
   15dac:	5b                   	pop    %rbx
   15dad:	5d                   	pop    %rbp
   15dae:	c3                   	ret    

0000000000015daf <udp_rx>:
   15daf:	f3 0f 1e fa          	endbr64 
   15db3:	41 57                	push   %r15
   15db5:	41 56                	push   %r14
   15db7:	49 89 fe             	mov    %rdi,%r14
   15dba:	41 55                	push   %r13
   15dbc:	41 54                	push   %r12
   15dbe:	49 89 d4             	mov    %rdx,%r12
   15dc1:	55                   	push   %rbp
   15dc2:	53                   	push   %rbx
   15dc3:	48 83 ec 48          	sub    $0x48,%rsp
   15dc7:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   15dcb:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   15dcf:	48 8b 05 9a 41 01 00 	mov    0x1419a(%rip),%rax        # 29f70 <__stack_chk_guard>
   15dd6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   15ddb:	31 c0                	xor    %eax,%eax
   15ddd:	4c 29 ea             	sub    %r13,%rdx
   15de0:	48 83 fa 07          	cmp    $0x7,%rdx
   15de4:	77 02                	ja     15de8 <udp_rx+0x39>
   15de6:	eb 10                	jmp    15df8 <udp_rx+0x49>
   15de8:	66 41 8b 45 04       	mov    0x4(%r13),%ax
   15ded:	86 c4                	xchg   %al,%ah
   15def:	0f b7 e8             	movzwl %ax,%ebp
   15df2:	66 83 f8 07          	cmp    $0x7,%ax
   15df6:	77 0b                	ja     15e03 <udp_rx+0x54>
   15df8:	41 bc 7e 9f f0 e3    	mov    $0xe3f09f7e,%r12d
   15dfe:	e9 0c 01 00 00       	jmp    15f0f <udp_rx+0x160>
   15e03:	48 39 d5             	cmp    %rdx,%rbp
   15e06:	76 02                	jbe    15e0a <udp_rx+0x5b>
   15e08:	eb ee                	jmp    15df8 <udp_rx+0x49>
   15e0a:	66 41 83 7d 06 00    	cmpw   $0x0,0x6(%r13)
   15e10:	48 89 cb             	mov    %rcx,%rbx
   15e13:	74 16                	je     15e2b <udp_rx+0x7c>
   15e15:	41 0f b7 f8          	movzwl %r8w,%edi
   15e19:	48 89 ea             	mov    %rbp,%rdx
   15e1c:	4c 89 ee             	mov    %r13,%rsi
   15e1f:	e8 1e 15 00 00       	call   17342 <tcpip_continue_chksum>
   15e24:	66 85 c0             	test   %ax,%ax
   15e27:	74 02                	je     15e2b <udp_rx+0x7c>
   15e29:	eb cd                	jmp    15df8 <udp_rx+0x49>
   15e2b:	66 41 8b 45 00       	mov    0x0(%r13),%ax
   15e30:	66 41 89 44 24 04    	mov    %ax,0x4(%r12)
   15e36:	66 45 8b 6d 02       	mov    0x2(%r13),%r13w
   15e3b:	66 44 89 6b 04       	mov    %r13w,0x4(%rbx)
   15e40:	48 8b 05 b9 15 01 00 	mov    0x115b9(%rip),%rax        # 27400 <udp_conns>
   15e47:	4c 8d 78 f0          	lea    -0x10(%rax),%r15
   15e4b:	48 8d 43 08          	lea    0x8(%rbx),%rax
   15e4f:	48 89 04 24          	mov    %rax,(%rsp)
   15e53:	49 8d 47 10          	lea    0x10(%r15),%rax
   15e57:	48 8d 35 a2 15 01 00 	lea    0x115a2(%rip),%rsi        # 27400 <udp_conns>
   15e5e:	48 39 f0             	cmp    %rsi,%rax
   15e61:	74 5c                	je     15ebf <udp_rx+0x110>
   15e63:	41 8b 47 40          	mov    0x40(%r15),%eax
   15e67:	66 39 03             	cmp    %ax,(%rbx)
   15e6a:	74 05                	je     15e71 <udp_rx+0xc2>
   15e6c:	66 85 c0             	test   %ax,%ax
   15e6f:	75 44                	jne    15eb5 <udp_rx+0x106>
   15e71:	41 8b 47 44          	mov    0x44(%r15),%eax
   15e75:	66 85 c0             	test   %ax,%ax
   15e78:	74 06                	je     15e80 <udp_rx+0xd1>
   15e7a:	66 41 39 c5          	cmp    %ax,%r13w
   15e7e:	75 35                	jne    15eb5 <udp_rx+0x106>
   15e80:	48 8b 34 24          	mov    (%rsp),%rsi
   15e84:	49 8d 7f 48          	lea    0x48(%r15),%rdi
   15e88:	ba 18 00 00 00       	mov    $0x18,%edx
   15e8d:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   15e92:	e8 bd d9 ff ff       	call   13854 <memcmp>
   15e97:	85 c0                	test   %eax,%eax
   15e99:	74 27                	je     15ec2 <udp_rx+0x113>
   15e9b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   15ea0:	ba 18 00 00 00       	mov    $0x18,%edx
   15ea5:	48 8d 35 dc c6 00 00 	lea    0xc6dc(%rip),%rsi        # 22588 <empty_sockaddr.0+0x8>
   15eac:	e8 a3 d9 ff ff       	call   13854 <memcmp>
   15eb1:	85 c0                	test   %eax,%eax
   15eb3:	74 0d                	je     15ec2 <udp_rx+0x113>
   15eb5:	4d 8b 47 10          	mov    0x10(%r15),%r8
   15eb9:	4d 8d 78 f0          	lea    -0x10(%r8),%r15
   15ebd:	eb 94                	jmp    15e53 <udp_rx+0xa4>
   15ebf:	45 31 ff             	xor    %r15d,%r15d
   15ec2:	49 8b 46 18          	mov    0x18(%r14),%rax
   15ec6:	48 01 c5             	add    %rax,%rbp
   15ec9:	48 83 c0 08          	add    $0x8,%rax
   15ecd:	49 89 6e 20          	mov    %rbp,0x20(%r14)
   15ed1:	49 89 46 18          	mov    %rax,0x18(%r14)
   15ed5:	4d 85 ff             	test   %r15,%r15
   15ed8:	75 08                	jne    15ee2 <udp_rx+0x133>
   15eda:	41 bc 6d 9f f0 c7    	mov    $0xc7f09f6d,%r12d
   15ee0:	eb 2d                	jmp    15f0f <udp_rx+0x160>
   15ee2:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   15ee7:	b9 28 00 00 00       	mov    $0x28,%ecx
   15eec:	31 c0                	xor    %eax,%eax
   15eee:	48 89 d7             	mov    %rdx,%rdi
   15ef1:	f3 aa                	rep stos %al,%es:(%rdi)
   15ef3:	4c 89 f6             	mov    %r14,%rsi
   15ef6:	49 8d 7f 20          	lea    0x20(%r15),%rdi
   15efa:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   15eff:	45 31 f6             	xor    %r14d,%r14d
   15f02:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   15f07:	e8 0d 17 00 00       	call   17619 <xfer_deliver>
   15f0c:	41 89 c4             	mov    %eax,%r12d
   15f0f:	4c 89 f7             	mov    %r14,%rdi
   15f12:	e8 7f 3d ff ff       	call   9c96 <free_iob>
   15f17:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   15f1c:	48 2b 05 4d 40 01 00 	sub    0x1404d(%rip),%rax        # 29f70 <__stack_chk_guard>
   15f23:	74 05                	je     15f2a <udp_rx+0x17b>
   15f25:	e8 36 cb fe ff       	call   2a60 <__stack_chk_fail>
   15f2a:	48 83 c4 48          	add    $0x48,%rsp
   15f2e:	44 89 e0             	mov    %r12d,%eax
   15f31:	5b                   	pop    %rbx
   15f32:	5d                   	pop    %rbp
   15f33:	41 5c                	pop    %r12
   15f35:	41 5d                	pop    %r13
   15f37:	41 5e                	pop    %r14
   15f39:	41 5f                	pop    %r15
   15f3b:	c3                   	ret    

0000000000015f3c <udp_close>:
   15f3c:	f3 0f 1e fa          	endbr64 
   15f40:	55                   	push   %rbp
   15f41:	48 89 fd             	mov    %rdi,%rbp
   15f44:	48 8d 7f 20          	lea    0x20(%rdi),%rdi
   15f48:	e8 82 39 ff ff       	call   98cf <intf_shutdown>
   15f4d:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   15f51:	48 8b 45 18          	mov    0x18(%rbp),%rax
   15f55:	48 89 ef             	mov    %rbp,%rdi
   15f58:	48 89 42 08          	mov    %rax,0x8(%rdx)
   15f5c:	48 89 10             	mov    %rdx,(%rax)
   15f5f:	5d                   	pop    %rbp
   15f60:	e9 d9 9e ff ff       	jmp    fe3e <ref_decrement>

0000000000015f65 <udp_xfer_alloc_iob>:
   15f65:	f3 0f 1e fa          	endbr64 
   15f69:	51                   	push   %rcx
   15f6a:	48 8d 7e 68          	lea    0x68(%rsi),%rdi
   15f6e:	e8 09 3d ff ff       	call   9c7c <alloc_iob>
   15f73:	48 85 c0             	test   %rax,%rax
   15f76:	74 0a                	je     15f82 <udp_xfer_alloc_iob+0x1d>
   15f78:	48 83 40 18 68       	addq   $0x68,0x18(%rax)
   15f7d:	48 83 40 20 68       	addq   $0x68,0x20(%rax)
   15f82:	5a                   	pop    %rdx
   15f83:	c3                   	ret    

0000000000015f84 <udp_xfer_deliver>:
   15f84:	f3 0f 1e fa          	endbr64 
   15f88:	41 57                	push   %r15
   15f8a:	41 56                	push   %r14
   15f8c:	41 55                	push   %r13
   15f8e:	55                   	push   %rbp
   15f8f:	48 89 f5             	mov    %rsi,%rbp
   15f92:	be 68 00 00 00       	mov    $0x68,%esi
   15f97:	53                   	push   %rbx
   15f98:	48 89 fb             	mov    %rdi,%rbx
   15f9b:	48 89 ef             	mov    %rbp,%rdi
   15f9e:	48 83 ec 10          	sub    $0x10,%rsp
   15fa2:	4c 8b 72 20          	mov    0x20(%rdx),%r14
   15fa6:	4c 8b 7a 18          	mov    0x18(%rdx),%r15
   15faa:	4c 8b 6a 10          	mov    0x10(%rdx),%r13
   15fae:	e8 1c 3d ff ff       	call   9ccf <iob_ensure_headroom>
   15fb3:	85 c0                	test   %eax,%eax
   15fb5:	75 76                	jne    1602d <udp_xfer_deliver+0xa9>
   15fb7:	4d 85 ed             	test   %r13,%r13
   15fba:	75 04                	jne    15fc0 <udp_xfer_deliver+0x3c>
   15fbc:	4c 8d 6b 40          	lea    0x40(%rbx),%r13
   15fc0:	4d 85 ff             	test   %r15,%r15
   15fc3:	75 04                	jne    15fc9 <udp_xfer_deliver+0x45>
   15fc5:	4c 8d 7b 60          	lea    0x60(%rbx),%r15
   15fc9:	48 8b 5d 18          	mov    0x18(%rbp),%rbx
   15fcd:	48 8b 75 20          	mov    0x20(%rbp),%rsi
   15fd1:	48 8d 7b f8          	lea    -0x8(%rbx),%rdi
   15fd5:	48 89 7d 18          	mov    %rdi,0x18(%rbp)
   15fd9:	66 41 8b 47 04       	mov    0x4(%r15),%ax
   15fde:	48 29 fe             	sub    %rdi,%rsi
   15fe1:	66 89 43 fa          	mov    %ax,-0x6(%rbx)
   15fe5:	66 41 8b 45 04       	mov    0x4(%r13),%ax
   15fea:	66 c7 43 fe 00 00    	movw   $0x0,-0x2(%rbx)
   15ff0:	66 89 43 f8          	mov    %ax,-0x8(%rbx)
   15ff4:	89 f0                	mov    %esi,%eax
   15ff6:	86 c4                	xchg   %al,%ah
   15ff8:	66 89 43 fc          	mov    %ax,-0x4(%rbx)
   15ffc:	e8 e8 ee ff ff       	call   14ee9 <tcpip_chksum>
   16001:	4c 8d 4b fe          	lea    -0x2(%rbx),%r9
   16005:	4d 89 f0             	mov    %r14,%r8
   16008:	4c 89 f9             	mov    %r15,%rcx
   1600b:	66 89 43 fe          	mov    %ax,-0x2(%rbx)
   1600f:	48 83 c4 10          	add    $0x10,%rsp
   16013:	4c 89 ea             	mov    %r13,%rdx
   16016:	48 89 ef             	mov    %rbp,%rdi
   16019:	5b                   	pop    %rbx
   1601a:	48 8d 35 b7 39 01 00 	lea    0x139b7(%rip),%rsi        # 299d8 <udp_protocol>
   16021:	5d                   	pop    %rbp
   16022:	41 5d                	pop    %r13
   16024:	41 5e                	pop    %r14
   16026:	41 5f                	pop    %r15
   16028:	e9 24 ee ff ff       	jmp    14e51 <tcpip_tx>
   1602d:	48 89 ef             	mov    %rbp,%rdi
   16030:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   16034:	e8 5d 3c ff ff       	call   9c96 <free_iob>
   16039:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1603d:	48 83 c4 10          	add    $0x10,%rsp
   16041:	5b                   	pop    %rbx
   16042:	5d                   	pop    %rbp
   16043:	41 5d                	pop    %r13
   16045:	41 5e                	pop    %r14
   16047:	41 5f                	pop    %r15
   16049:	c3                   	ret    

000000000001604a <udp_open_common>:
   1604a:	41 56                	push   %r14
   1604c:	41 55                	push   %r13
   1604e:	49 89 fd             	mov    %rdi,%r13
   16051:	bf 80 00 00 00       	mov    $0x80,%edi
   16056:	41 54                	push   %r12
   16058:	49 89 d4             	mov    %rdx,%r12
   1605b:	55                   	push   %rbp
   1605c:	53                   	push   %rbx
   1605d:	89 cb                	mov    %ecx,%ebx
   1605f:	48 83 ec 10          	sub    $0x10,%rsp
   16063:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   16068:	e8 ed 65 ff ff       	call   c65a <zalloc>
   1606d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   16072:	48 85 c0             	test   %rax,%rax
   16075:	75 0a                	jne    16081 <udp_open_common+0x37>
   16077:	b8 77 9f f0 ce       	mov    $0xcef09f77,%eax
   1607c:	e9 9a 00 00 00       	jmp    1611b <udp_open_common+0xd1>
   16081:	48 89 c5             	mov    %rax,%rbp
   16084:	4c 8d 70 20          	lea    0x20(%rax),%r14
   16088:	48 8d 05 51 03 01 00 	lea    0x10351(%rip),%rax        # 263e0 <null_intf>
   1608f:	48 89 45 20          	mov    %rax,0x20(%rbp)
   16093:	48 8d 05 46 13 01 00 	lea    0x11346(%rip),%rax        # 273e0 <udp_xfer_desc>
   1609a:	48 89 6d 28          	mov    %rbp,0x28(%rbp)
   1609e:	48 89 45 30          	mov    %rax,0x30(%rbp)
   160a2:	48 89 45 38          	mov    %rax,0x38(%rbp)
   160a6:	48 85 f6             	test   %rsi,%rsi
   160a9:	74 0e                	je     160b9 <udp_open_common+0x6f>
   160ab:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   160af:	ba 20 00 00 00       	mov    $0x20,%edx
   160b4:	e8 54 12 00 00       	call   1730d <__memcpy>
   160b9:	4d 85 e4             	test   %r12,%r12
   160bc:	74 11                	je     160cf <udp_open_common+0x85>
   160be:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
   160c2:	ba 20 00 00 00       	mov    $0x20,%edx
   160c7:	4c 89 e6             	mov    %r12,%rsi
   160ca:	e8 3e 12 00 00       	call   1730d <__memcpy>
   160cf:	85 db                	test   %ebx,%ebx
   160d1:	75 2b                	jne    160fe <udp_open_common+0xb4>
   160d3:	48 8d 35 59 00 00 00 	lea    0x59(%rip),%rsi        # 16133 <udp_port_available>
   160da:	4c 89 e7             	mov    %r12,%rdi
   160dd:	e8 18 ee ff ff       	call   14efa <tcpip_bind>
   160e2:	85 c0                	test   %eax,%eax
   160e4:	79 12                	jns    160f8 <udp_open_common+0xae>
   160e6:	48 89 ef             	mov    %rbp,%rdi
   160e9:	89 44 24 08          	mov    %eax,0x8(%rsp)
   160ed:	e8 4c 9d ff ff       	call   fe3e <ref_decrement>
   160f2:	8b 44 24 08          	mov    0x8(%rsp),%eax
   160f6:	eb 23                	jmp    1611b <udp_open_common+0xd1>
   160f8:	86 c4                	xchg   %al,%ah
   160fa:	66 89 45 44          	mov    %ax,0x44(%rbp)
   160fe:	4c 89 ee             	mov    %r13,%rsi
   16101:	4c 89 f7             	mov    %r14,%rdi
   16104:	e8 68 36 ff ff       	call   9771 <intf_plug_plug>
   16109:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   1610d:	48 8d 35 ec 12 01 00 	lea    0x112ec(%rip),%rsi        # 27400 <udp_conns>
   16114:	e8 a8 5f ff ff       	call   c0c1 <extern_list_add>
   16119:	31 c0                	xor    %eax,%eax
   1611b:	48 83 c4 10          	add    $0x10,%rsp
   1611f:	5b                   	pop    %rbx
   16120:	5d                   	pop    %rbp
   16121:	41 5c                	pop    %r12
   16123:	41 5d                	pop    %r13
   16125:	41 5e                	pop    %r14
   16127:	c3                   	ret    

0000000000016128 <udp_open>:
   16128:	f3 0f 1e fa          	endbr64 
   1612c:	31 c9                	xor    %ecx,%ecx
   1612e:	e9 17 ff ff ff       	jmp    1604a <udp_open_common>

0000000000016133 <udp_port_available>:
   16133:	f3 0f 1e fa          	endbr64 
   16137:	48 8b 35 c2 12 01 00 	mov    0x112c2(%rip),%rsi        # 27400 <udp_conns>
   1613e:	89 f8                	mov    %edi,%eax
   16140:	89 f9                	mov    %edi,%ecx
   16142:	86 cd                	xchg   %cl,%ch
   16144:	48 8d 56 f0          	lea    -0x10(%rsi),%rdx
   16148:	48 8d 35 b1 12 01 00 	lea    0x112b1(%rip),%rsi        # 27400 <udp_conns>
   1614f:	48 8d 7a 10          	lea    0x10(%rdx),%rdi
   16153:	48 39 f7             	cmp    %rsi,%rdi
   16156:	74 16                	je     1616e <udp_port_available+0x3b>
   16158:	66 3b 4a 44          	cmp    0x44(%rdx),%cx
   1615c:	75 06                	jne    16164 <udp_port_available+0x31>
   1615e:	b8 6c 9f f0 fc       	mov    $0xfcf09f6c,%eax
   16163:	c3                   	ret    
   16164:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   16168:	48 83 ea 10          	sub    $0x10,%rdx
   1616c:	eb e1                	jmp    1614f <udp_port_available+0x1c>
   1616e:	c3                   	ret    

000000000001616f <udp_open_uri>:
   1616f:	f3 0f 1e fa          	endbr64 
   16173:	41 54                	push   %r12
   16175:	55                   	push   %rbp
   16176:	53                   	push   %rbx
   16177:	48 83 ec 30          	sub    $0x30,%rsp
   1617b:	48 8b 05 ee 3d 01 00 	mov    0x13dee(%rip),%rax        # 29f70 <__stack_chk_guard>
   16182:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16187:	31 c0                	xor    %eax,%eax
   16189:	48 83 7e 30 00       	cmpq   $0x0,0x30(%rsi)
   1618e:	75 07                	jne    16197 <udp_open_uri+0x28>
   16190:	b8 7e 9f f0 e3       	mov    $0xe3f09f7e,%eax
   16195:	eb 40                	jmp    161d7 <udp_open_uri+0x68>
   16197:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
   1619c:	48 89 fd             	mov    %rdi,%rbp
   1619f:	48 89 f3             	mov    %rsi,%rbx
   161a2:	b9 20 00 00 00       	mov    $0x20,%ecx
   161a7:	4c 89 e7             	mov    %r12,%rdi
   161aa:	31 c0                	xor    %eax,%eax
   161ac:	f3 aa                	rep stos %al,%es:(%rdi)
   161ae:	31 f6                	xor    %esi,%esi
   161b0:	48 89 df             	mov    %rbx,%rdi
   161b3:	e8 b2 04 00 00       	call   1666a <uri_port>
   161b8:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   161bc:	45 31 c0             	xor    %r8d,%r8d
   161bf:	4c 89 e2             	mov    %r12,%rdx
   161c2:	8b 35 98 e3 00 00    	mov    0xe398(%rip),%esi        # 24560 <udp_sock_dgram>
   161c8:	48 89 ef             	mov    %rbp,%rdi
   161cb:	86 c4                	xchg   %al,%ah
   161cd:	66 89 44 24 0c       	mov    %ax,0xc(%rsp)
   161d2:	e8 b0 9f ff ff       	call   10187 <xfer_open_named_socket>
   161d7:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   161dc:	48 2b 15 8d 3d 01 00 	sub    0x13d8d(%rip),%rdx        # 29f70 <__stack_chk_guard>
   161e3:	74 05                	je     161ea <udp_open_uri+0x7b>
   161e5:	e8 76 c8 fe ff       	call   2a60 <__stack_chk_fail>
   161ea:	48 83 c4 30          	add    $0x30,%rsp
   161ee:	5b                   	pop    %rbx
   161ef:	5d                   	pop    %rbp
   161f0:	41 5c                	pop    %r12
   161f2:	c3                   	ret    

00000000000161f3 <udp_open_promisc>:
   161f3:	f3 0f 1e fa          	endbr64 
   161f7:	b9 01 00 00 00       	mov    $0x1,%ecx
   161fc:	31 d2                	xor    %edx,%edx
   161fe:	31 f6                	xor    %esi,%esi
   16200:	e9 45 fe ff ff       	jmp    1604a <udp_open_common>

0000000000016205 <uri_free>:
   16205:	f3 0f 1e fa          	endbr64 
   16209:	55                   	push   %rbp
   1620a:	48 89 fd             	mov    %rdi,%rbp
   1620d:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
   16211:	e8 28 9c ff ff       	call   fe3e <ref_decrement>
   16216:	48 89 ef             	mov    %rbp,%rdi
   16219:	5d                   	pop    %rbp
   1621a:	e9 30 64 ff ff       	jmp    c64f <free>

000000000001621f <uri_copy_fields>:
   1621f:	41 57                	push   %r15
   16221:	4c 8d 7e 60          	lea    0x60(%rsi),%r15
   16225:	41 56                	push   %r14
   16227:	41 be 60 00 00 00    	mov    $0x60,%r14d
   1622d:	41 55                	push   %r13
   1622f:	49 89 fd             	mov    %rdi,%r13
   16232:	41 54                	push   %r12
   16234:	55                   	push   %rbp
   16235:	48 89 f5             	mov    %rsi,%rbp
   16238:	53                   	push   %rbx
   16239:	bb 10 00 00 00       	mov    $0x10,%ebx
   1623e:	48 83 ec 18          	sub    $0x18,%rsp
   16242:	49 8b 74 1d 00       	mov    0x0(%r13,%rbx,1),%rsi
   16247:	48 85 f6             	test   %rsi,%rsi
   1624a:	74 31                	je     1627d <uri_copy_fields+0x5e>
   1624c:	48 89 f7             	mov    %rsi,%rdi
   1624f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   16254:	e8 e1 d6 ff ff       	call   1393a <strlen>
   16259:	4c 8d 60 01          	lea    0x1(%rax),%r12
   1625d:	4d 01 e6             	add    %r12,%r14
   16260:	48 85 ed             	test   %rbp,%rbp
   16263:	74 18                	je     1627d <uri_copy_fields+0x5e>
   16265:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1626a:	4c 89 ff             	mov    %r15,%rdi
   1626d:	4c 89 e2             	mov    %r12,%rdx
   16270:	e8 98 10 00 00       	call   1730d <__memcpy>
   16275:	4c 89 7c 1d 00       	mov    %r15,0x0(%rbp,%rbx,1)
   1627a:	4d 01 e7             	add    %r12,%r15
   1627d:	48 83 c3 08          	add    $0x8,%rbx
   16281:	48 83 fb 58          	cmp    $0x58,%rbx
   16285:	75 bb                	jne    16242 <uri_copy_fields+0x23>
   16287:	48 83 c4 18          	add    $0x18,%rsp
   1628b:	4c 89 f0             	mov    %r14,%rax
   1628e:	5b                   	pop    %rbx
   1628f:	5d                   	pop    %rbp
   16290:	41 5c                	pop    %r12
   16292:	41 5d                	pop    %r13
   16294:	41 5e                	pop    %r14
   16296:	41 5f                	pop    %r15
   16298:	c3                   	ret    

0000000000016299 <uri_decode>:
   16299:	f3 0f 1e fa          	endbr64 
   1629d:	41 57                	push   %r15
   1629f:	4c 8d 05 7b d3 00 00 	lea    0xd37b(%rip),%r8        # 23621 <.LC0>
   162a6:	49 89 f7             	mov    %rsi,%r15
   162a9:	41 56                	push   %r14
   162ab:	45 31 f6             	xor    %r14d,%r14d
   162ae:	41 55                	push   %r13
   162b0:	41 54                	push   %r12
   162b2:	55                   	push   %rbp
   162b3:	53                   	push   %rbx
   162b4:	48 83 ec 38          	sub    $0x38,%rsp
   162b8:	48 8b 05 b1 3c 01 00 	mov    0x13cb1(%rip),%rax        # 29f70 <__stack_chk_guard>
   162bf:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   162c4:	31 c0                	xor    %eax,%eax
   162c6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   162cb:	8a 1f                	mov    (%rdi),%bl
   162cd:	48 8d 6f 01          	lea    0x1(%rdi),%rbp
   162d1:	45 89 f4             	mov    %r14d,%r12d
   162d4:	84 db                	test   %bl,%bl
   162d6:	74 61                	je     16339 <uri_decode+0xa0>
   162d8:	80 fb 25             	cmp    $0x25,%bl
   162db:	75 49                	jne    16326 <uri_decode+0x8d>
   162dd:	4c 8d 6c 24 25       	lea    0x25(%rsp),%r13
   162e2:	4c 89 c2             	mov    %r8,%rdx
   162e5:	48 89 e9             	mov    %rbp,%rcx
   162e8:	be 03 00 00 00       	mov    $0x3,%esi
   162ed:	4c 89 ef             	mov    %r13,%rdi
   162f0:	31 c0                	xor    %eax,%eax
   162f2:	e8 8a 0d 00 00       	call   17081 <snprintf>
   162f7:	ba 10 00 00 00       	mov    $0x10,%edx
   162fc:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   16301:	4c 89 ef             	mov    %r13,%rdi
   16304:	e8 72 d7 ff ff       	call   13a7b <strtoul>
   16309:	4c 8d 05 11 d3 00 00 	lea    0xd311(%rip),%r8        # 23621 <.LC0>
   16310:	49 89 c1             	mov    %rax,%r9
   16313:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16318:	4c 29 e8             	sub    %r13,%rax
   1631b:	89 c2                	mov    %eax,%edx
   1631d:	48 01 d5             	add    %rdx,%rbp
   16320:	85 c0                	test   %eax,%eax
   16322:	41 0f 45 d9          	cmovne %r9d,%ebx
   16326:	4c 3b 64 24 08       	cmp    0x8(%rsp),%r12
   1632b:	73 04                	jae    16331 <uri_decode+0x98>
   1632d:	43 88 1c 27          	mov    %bl,(%r15,%r12,1)
   16331:	41 ff c6             	inc    %r14d
   16334:	48 89 ef             	mov    %rbp,%rdi
   16337:	eb 92                	jmp    162cb <uri_decode+0x32>
   16339:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1633e:	48 2b 05 2b 3c 01 00 	sub    0x13c2b(%rip),%rax        # 29f70 <__stack_chk_guard>
   16345:	74 05                	je     1634c <uri_decode+0xb3>
   16347:	e8 14 c7 fe ff       	call   2a60 <__stack_chk_fail>
   1634c:	48 83 c4 38          	add    $0x38,%rsp
   16350:	4c 89 e0             	mov    %r12,%rax
   16353:	5b                   	pop    %rbx
   16354:	5d                   	pop    %rbp
   16355:	41 5c                	pop    %r12
   16357:	41 5d                	pop    %r13
   16359:	41 5e                	pop    %r14
   1635b:	41 5f                	pop    %r15
   1635d:	c3                   	ret    

000000000001635e <uri_encode>:
   1635e:	f3 0f 1e fa          	endbr64 
   16362:	41 57                	push   %r15
   16364:	41 56                	push   %r14
   16366:	41 89 fe             	mov    %edi,%r14d
   16369:	41 55                	push   %r13
   1636b:	41 54                	push   %r12
   1636d:	49 89 cc             	mov    %rcx,%r12
   16370:	55                   	push   %rbp
   16371:	48 89 f5             	mov    %rsi,%rbp
   16374:	53                   	push   %rbx
   16375:	4c 89 c3             	mov    %r8,%rbx
   16378:	48 83 ec 18          	sub    $0x18,%rsp
   1637c:	4d 85 c0             	test   %r8,%r8
   1637f:	7e 03                	jle    16384 <uri_encode+0x26>
   16381:	c6 01 00             	movb   $0x0,(%rcx)
   16384:	48 8d 44 15 00       	lea    0x0(%rbp,%rdx,1),%rax
   16389:	49 89 dd             	mov    %rbx,%r13
   1638c:	4c 8d 3d 49 d9 00 00 	lea    0xd949(%rip),%r15        # 23cdc <.LC2>
   16393:	48 89 04 24          	mov    %rax,(%rsp)
   16397:	48 3b 2c 24          	cmp    (%rsp),%rbp
   1639b:	74 5f                	je     163fc <uri_encode+0x9e>
   1639d:	0f be 4d 00          	movsbl 0x0(%rbp),%ecx
   163a1:	48 ff c5             	inc    %rbp
   163a4:	8d 51 df             	lea    -0x21(%rcx),%edx
   163a7:	80 fa 5d             	cmp    $0x5d,%dl
   163aa:	77 36                	ja     163e2 <uri_encode+0x84>
   163ac:	80 f9 25             	cmp    $0x25,%cl
   163af:	74 31                	je     163e2 <uri_encode+0x84>
   163b1:	44 89 f0             	mov    %r14d,%eax
   163b4:	48 8d 15 65 10 01 00 	lea    0x11065(%rip),%rdx        # 27420 <escaped.1>
   163bb:	89 ce                	mov    %ecx,%esi
   163bd:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   163c1:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
   163c5:	e8 7d d5 ff ff       	call   13947 <strchr>
   163ca:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   163ce:	48 85 c0             	test   %rax,%rax
   163d1:	75 0f                	jne    163e2 <uri_encode+0x84>
   163d3:	48 8d 15 11 cf 00 00 	lea    0xcf11(%rip),%rdx        # 232eb <.LC1>
   163da:	4c 89 ee             	mov    %r13,%rsi
   163dd:	4c 89 e7             	mov    %r12,%rdi
   163e0:	eb 0b                	jmp    163ed <uri_encode+0x8f>
   163e2:	4c 89 fa             	mov    %r15,%rdx
   163e5:	4c 89 ee             	mov    %r13,%rsi
   163e8:	4c 89 e7             	mov    %r12,%rdi
   163eb:	31 c0                	xor    %eax,%eax
   163ed:	e8 01 0d 00 00       	call   170f3 <ssnprintf>
   163f2:	48 98                	cltq   
   163f4:	49 01 c4             	add    %rax,%r12
   163f7:	49 29 c5             	sub    %rax,%r13
   163fa:	eb 9b                	jmp    16397 <uri_encode+0x39>
   163fc:	48 83 c4 18          	add    $0x18,%rsp
   16400:	48 89 d8             	mov    %rbx,%rax
   16403:	4c 29 e8             	sub    %r13,%rax
   16406:	5b                   	pop    %rbx
   16407:	5d                   	pop    %rbp
   16408:	41 5c                	pop    %r12
   1640a:	41 5d                	pop    %r13
   1640c:	41 5e                	pop    %r14
   1640e:	41 5f                	pop    %r15
   16410:	c3                   	ret    

0000000000016411 <uri_encode_string>:
   16411:	f3 0f 1e fa          	endbr64 
   16415:	41 55                	push   %r13
   16417:	49 89 d5             	mov    %rdx,%r13
   1641a:	41 54                	push   %r12
   1641c:	41 89 fc             	mov    %edi,%r12d
   1641f:	48 89 f7             	mov    %rsi,%rdi
   16422:	48 83 ec 18          	sub    $0x18,%rsp
   16426:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1642b:	48 89 34 24          	mov    %rsi,(%rsp)
   1642f:	e8 06 d5 ff ff       	call   1393a <strlen>
   16434:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   16439:	4c 89 e9             	mov    %r13,%rcx
   1643c:	44 89 e7             	mov    %r12d,%edi
   1643f:	48 8b 34 24          	mov    (%rsp),%rsi
   16443:	48 83 c4 18          	add    $0x18,%rsp
   16447:	48 89 c2             	mov    %rax,%rdx
   1644a:	41 5c                	pop    %r12
   1644c:	41 5d                	pop    %r13
   1644e:	e9 0b ff ff ff       	jmp    1635e <uri_encode>

0000000000016453 <parse_uri>:
   16453:	f3 0f 1e fa          	endbr64 
   16457:	41 55                	push   %r13
   16459:	41 54                	push   %r12
   1645b:	55                   	push   %rbp
   1645c:	48 89 fd             	mov    %rdi,%rbp
   1645f:	53                   	push   %rbx
   16460:	51                   	push   %rcx
   16461:	e8 d4 d4 ff ff       	call   1393a <strlen>
   16466:	48 8d 78 61          	lea    0x61(%rax),%rdi
   1646a:	4c 8d 68 01          	lea    0x1(%rax),%r13
   1646e:	e8 e7 61 ff ff       	call   c65a <zalloc>
   16473:	49 89 c4             	mov    %rax,%r12
   16476:	48 85 c0             	test   %rax,%rax
   16479:	0f 84 e0 01 00 00    	je     1665f <parse_uri+0x20c>
   1647f:	49 8d 5c 24 60       	lea    0x60(%r12),%rbx
   16484:	48 8d 05 7a fd ff ff 	lea    -0x286(%rip),%rax        # 16205 <uri_free>
   1648b:	48 89 ee             	mov    %rbp,%rsi
   1648e:	4c 89 ea             	mov    %r13,%rdx
   16491:	48 89 df             	mov    %rbx,%rdi
   16494:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   16499:	e8 6f 0e 00 00       	call   1730d <__memcpy>
   1649e:	48 8d 35 3e d8 00 00 	lea    0xd83e(%rip),%rsi        # 23ce3 <.LC3>
   164a5:	48 89 df             	mov    %rbx,%rdi
   164a8:	e8 d7 d4 ff ff       	call   13984 <strstr>
   164ad:	48 85 c0             	test   %rax,%rax
   164b0:	74 2d                	je     164df <parse_uri+0x8c>
   164b2:	31 ff                	xor    %edi,%edi
   164b4:	80 78 08 00          	cmpb   $0x0,0x8(%rax)
   164b8:	c6 00 00             	movb   $0x0,(%rax)
   164bb:	74 04                	je     164c1 <parse_uri+0x6e>
   164bd:	48 8d 78 09          	lea    0x9(%rax),%rdi
   164c1:	e8 ca 9e 00 00       	call   20390 <find_parameters>
   164c6:	48 85 c0             	test   %rax,%rax
   164c9:	74 14                	je     164df <parse_uri+0x8c>
   164cb:	48 8b 48 10          	mov    0x10(%rax),%rcx
   164cf:	48 8b 50 18          	mov    0x18(%rax),%rdx
   164d3:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   164d7:	48 89 0a             	mov    %rcx,(%rdx)
   164da:	49 89 44 24 58       	mov    %rax,0x58(%r12)
   164df:	be 23 00 00 00       	mov    $0x23,%esi
   164e4:	48 89 df             	mov    %rbx,%rdi
   164e7:	e8 5b d4 ff ff       	call   13947 <strchr>
   164ec:	48 85 c0             	test   %rax,%rax
   164ef:	74 0b                	je     164fc <parse_uri+0xa9>
   164f1:	c6 00 00             	movb   $0x0,(%rax)
   164f4:	48 ff c0             	inc    %rax
   164f7:	49 89 44 24 50       	mov    %rax,0x50(%r12)
   164fc:	be 3a 00 00 00       	mov    $0x3a,%esi
   16501:	48 89 df             	mov    %rbx,%rdi
   16504:	e8 3e d4 ff ff       	call   13947 <strchr>
   16509:	48 85 c0             	test   %rax,%rax
   1650c:	74 1c                	je     1652a <parse_uri+0xd7>
   1650e:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
   16513:	80 78 01 2f          	cmpb   $0x2f,0x1(%rax)
   16517:	48 8d 58 01          	lea    0x1(%rax),%rbx
   1651b:	c6 00 00             	movb   $0x0,(%rax)
   1651e:	74 0a                	je     1652a <parse_uri+0xd7>
   16520:	49 89 5c 24 18       	mov    %rbx,0x18(%r12)
   16525:	e9 05 01 00 00       	jmp    1662f <parse_uri+0x1dc>
   1652a:	be 3f 00 00 00       	mov    $0x3f,%esi
   1652f:	48 89 df             	mov    %rbx,%rdi
   16532:	e8 10 d4 ff ff       	call   13947 <strchr>
   16537:	48 85 c0             	test   %rax,%rax
   1653a:	74 0b                	je     16547 <parse_uri+0xf4>
   1653c:	c6 00 00             	movb   $0x0,(%rax)
   1653f:	48 ff c0             	inc    %rax
   16542:	49 89 44 24 48       	mov    %rax,0x48(%r12)
   16547:	80 3b 00             	cmpb   $0x0,(%rbx)
   1654a:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1654f:	0f 84 da 00 00 00    	je     1662f <parse_uri+0x1dc>
   16555:	48 85 c0             	test   %rax,%rax
   16558:	74 54                	je     165ae <parse_uri+0x15b>
   1655a:	ba 02 00 00 00       	mov    $0x2,%edx
   1655f:	48 8d 35 86 d7 00 00 	lea    0xd786(%rip),%rsi        # 23cec <.LC4>
   16566:	48 89 df             	mov    %rbx,%rdi
   16569:	e8 49 d3 ff ff       	call   138b7 <strncmp>
   1656e:	85 c0                	test   %eax,%eax
   16570:	75 3c                	jne    165ae <parse_uri+0x15b>
   16572:	48 8d 6b 02          	lea    0x2(%rbx),%rbp
   16576:	be 2f 00 00 00       	mov    $0x2f,%esi
   1657b:	48 89 ef             	mov    %rbp,%rdi
   1657e:	e8 c4 d3 ff ff       	call   13947 <strchr>
   16583:	49 89 c5             	mov    %rax,%r13
   16586:	48 85 c0             	test   %rax,%rax
   16589:	74 2a                	je     165b5 <parse_uri+0x162>
   1658b:	48 ff c3             	inc    %rbx
   1658e:	48 89 c2             	mov    %rax,%rdx
   16591:	48 89 ee             	mov    %rbp,%rsi
   16594:	49 89 44 24 40       	mov    %rax,0x40(%r12)
   16599:	48 29 ea             	sub    %rbp,%rdx
   1659c:	48 89 df             	mov    %rbx,%rdi
   1659f:	48 89 dd             	mov    %rbx,%rbp
   165a2:	e8 66 0d 00 00       	call   1730d <__memcpy>
   165a7:	41 c6 45 ff 00       	movb   $0x0,-0x1(%r13)
   165ac:	eb 07                	jmp    165b5 <parse_uri+0x162>
   165ae:	49 89 5c 24 40       	mov    %rbx,0x40(%r12)
   165b3:	eb 7a                	jmp    1662f <parse_uri+0x1dc>
   165b5:	be 40 00 00 00       	mov    $0x40,%esi
   165ba:	48 89 ef             	mov    %rbp,%rdi
   165bd:	e8 85 d3 ff ff       	call   13947 <strchr>
   165c2:	48 85 c0             	test   %rax,%rax
   165c5:	74 2f                	je     165f6 <parse_uri+0x1a3>
   165c7:	c6 00 00             	movb   $0x0,(%rax)
   165ca:	be 3a 00 00 00       	mov    $0x3a,%esi
   165cf:	48 ff c0             	inc    %rax
   165d2:	48 89 ef             	mov    %rbp,%rdi
   165d5:	49 89 44 24 30       	mov    %rax,0x30(%r12)
   165da:	49 89 6c 24 20       	mov    %rbp,0x20(%r12)
   165df:	e8 63 d3 ff ff       	call   13947 <strchr>
   165e4:	48 85 c0             	test   %rax,%rax
   165e7:	74 12                	je     165fb <parse_uri+0x1a8>
   165e9:	c6 00 00             	movb   $0x0,(%rax)
   165ec:	48 ff c0             	inc    %rax
   165ef:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   165f4:	eb 05                	jmp    165fb <parse_uri+0x1a8>
   165f6:	49 89 6c 24 30       	mov    %rbp,0x30(%r12)
   165fb:	49 8b 6c 24 30       	mov    0x30(%r12),%rbp
   16600:	be 3a 00 00 00       	mov    $0x3a,%esi
   16605:	48 89 ef             	mov    %rbp,%rdi
   16608:	e8 54 d3 ff ff       	call   13961 <strrchr>
   1660d:	48 89 c3             	mov    %rax,%rbx
   16610:	48 85 c0             	test   %rax,%rax
   16613:	74 1a                	je     1662f <parse_uri+0x1dc>
   16615:	48 89 ef             	mov    %rbp,%rdi
   16618:	e8 1d d3 ff ff       	call   1393a <strlen>
   1661d:	80 7c 05 ff 5d       	cmpb   $0x5d,-0x1(%rbp,%rax,1)
   16622:	74 0b                	je     1662f <parse_uri+0x1dc>
   16624:	c6 03 00             	movb   $0x0,(%rbx)
   16627:	48 ff c3             	inc    %rbx
   1662a:	49 89 5c 24 38       	mov    %rbx,0x38(%r12)
   1662f:	31 ed                	xor    %ebp,%ebp
   16631:	49 8b 5c 2c 10       	mov    0x10(%r12,%rbp,1),%rbx
   16636:	48 85 db             	test   %rbx,%rbx
   16639:	74 1a                	je     16655 <parse_uri+0x202>
   1663b:	48 89 df             	mov    %rbx,%rdi
   1663e:	e8 f7 d2 ff ff       	call   1393a <strlen>
   16643:	48 89 de             	mov    %rbx,%rsi
   16646:	48 89 df             	mov    %rbx,%rdi
   16649:	48 89 c2             	mov    %rax,%rdx
   1664c:	e8 48 fc ff ff       	call   16299 <uri_decode>
   16651:	c6 04 03 00          	movb   $0x0,(%rbx,%rax,1)
   16655:	48 83 c5 08          	add    $0x8,%rbp
   16659:	48 83 fd 48          	cmp    $0x48,%rbp
   1665d:	75 d2                	jne    16631 <parse_uri+0x1de>
   1665f:	5a                   	pop    %rdx
   16660:	4c 89 e0             	mov    %r12,%rax
   16663:	5b                   	pop    %rbx
   16664:	5d                   	pop    %rbp
   16665:	41 5c                	pop    %r12
   16667:	41 5d                	pop    %r13
   16669:	c3                   	ret    

000000000001666a <uri_port>:
   1666a:	f3 0f 1e fa          	endbr64 
   1666e:	89 f0                	mov    %esi,%eax
   16670:	48 85 ff             	test   %rdi,%rdi
   16673:	74 15                	je     1668a <uri_port+0x20>
   16675:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   16679:	48 85 ff             	test   %rdi,%rdi
   1667c:	74 0c                	je     1668a <uri_port+0x20>
   1667e:	50                   	push   %rax
   1667f:	31 d2                	xor    %edx,%edx
   16681:	31 f6                	xor    %esi,%esi
   16683:	e8 f3 d3 ff ff       	call   13a7b <strtoul>
   16688:	5a                   	pop    %rdx
   16689:	c3                   	ret    
   1668a:	c3                   	ret    

000000000001668b <format_uri>:
   1668b:	f3 0f 1e fa          	endbr64 
   1668f:	41 57                	push   %r15
   16691:	41 56                	push   %r14
   16693:	49 89 d6             	mov    %rdx,%r14
   16696:	41 55                	push   %r13
   16698:	49 89 f5             	mov    %rsi,%r13
   1669b:	41 54                	push   %r12
   1669d:	55                   	push   %rbp
   1669e:	48 89 fd             	mov    %rdi,%rbp
   166a1:	53                   	push   %rbx
   166a2:	48 83 ec 18          	sub    $0x18,%rsp
   166a6:	48 85 d2             	test   %rdx,%rdx
   166a9:	74 03                	je     166ae <format_uri+0x23>
   166ab:	c6 06 00             	movb   $0x0,(%rsi)
   166ae:	45 31 e4             	xor    %r12d,%r12d
   166b1:	48 85 ed             	test   %rbp,%rbp
   166b4:	0f 84 bd 00 00 00    	je     16777 <format_uri+0xec>
   166ba:	31 db                	xor    %ebx,%ebx
   166bc:	4c 8d 3d dd be 00 00 	lea    0xbedd(%rip),%r15        # 225a0 <prefixes.0>
   166c3:	48 83 7c dd 10 00    	cmpq   $0x0,0x10(%rbp,%rbx,8)
   166c9:	41 89 d8             	mov    %ebx,%r8d
   166cc:	0f 84 98 00 00 00    	je     1676a <format_uri+0xdf>
   166d2:	41 0f be 0c 1f       	movsbl (%r15,%rbx,1),%ecx
   166d7:	48 83 fb 04          	cmp    $0x4,%rbx
   166db:	75 0c                	jne    166e9 <format_uri+0x5e>
   166dd:	b9 40 00 00 00       	mov    $0x40,%ecx
   166e2:	48 83 7d 20 00       	cmpq   $0x0,0x20(%rbp)
   166e7:	eb 02                	jmp    166eb <format_uri+0x60>
   166e9:	84 c9                	test   %cl,%cl
   166eb:	74 28                	je     16715 <format_uri+0x8a>
   166ed:	4c 89 f6             	mov    %r14,%rsi
   166f0:	4b 8d 7c 25 00       	lea    0x0(%r13,%r12,1),%rdi
   166f5:	31 c0                	xor    %eax,%eax
   166f7:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
   166fc:	4c 29 e6             	sub    %r12,%rsi
   166ff:	48 8d 15 e5 cb 00 00 	lea    0xcbe5(%rip),%rdx        # 232eb <.LC1>
   16706:	e8 e8 09 00 00       	call   170f3 <ssnprintf>
   1670b:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   16710:	48 98                	cltq   
   16712:	49 01 c4             	add    %rax,%r12
   16715:	48 8b 74 dd 10       	mov    0x10(%rbp,%rbx,8),%rsi
   1671a:	4c 89 f1             	mov    %r14,%rcx
   1671d:	4b 8d 54 25 00       	lea    0x0(%r13,%r12,1),%rdx
   16722:	44 89 c7             	mov    %r8d,%edi
   16725:	4c 29 e1             	sub    %r12,%rcx
   16728:	e8 e4 fc ff ff       	call   16411 <uri_encode_string>
   1672d:	49 01 c4             	add    %rax,%r12
   16730:	48 85 db             	test   %rbx,%rbx
   16733:	75 35                	jne    1676a <format_uri+0xdf>
   16735:	48 83 7d 30 00       	cmpq   $0x0,0x30(%rbp)
   1673a:	48 8d 05 93 dc 00 00 	lea    0xdc93(%rip),%rax        # 243d4 <.LC0>
   16741:	4b 8d 7c 25 00       	lea    0x0(%r13,%r12,1),%rdi
   16746:	4c 89 f6             	mov    %r14,%rsi
   16749:	48 8d 0d 9c d5 00 00 	lea    0xd59c(%rip),%rcx        # 23cec <.LC4>
   16750:	48 8d 15 ab cb 00 00 	lea    0xcbab(%rip),%rdx        # 23302 <.LC6>
   16757:	48 0f 44 c8          	cmove  %rax,%rcx
   1675b:	4c 29 e6             	sub    %r12,%rsi
   1675e:	31 c0                	xor    %eax,%eax
   16760:	e8 8e 09 00 00       	call   170f3 <ssnprintf>
   16765:	48 98                	cltq   
   16767:	49 01 c4             	add    %rax,%r12
   1676a:	48 ff c3             	inc    %rbx
   1676d:	48 83 fb 09          	cmp    $0x9,%rbx
   16771:	0f 85 4c ff ff ff    	jne    166c3 <format_uri+0x38>
   16777:	48 83 c4 18          	add    $0x18,%rsp
   1677b:	4c 89 e0             	mov    %r12,%rax
   1677e:	5b                   	pop    %rbx
   1677f:	5d                   	pop    %rbp
   16780:	41 5c                	pop    %r12
   16782:	41 5d                	pop    %r13
   16784:	41 5e                	pop    %r14
   16786:	41 5f                	pop    %r15
   16788:	c3                   	ret    

0000000000016789 <format_uri_alloc>:
   16789:	f3 0f 1e fa          	endbr64 
   1678d:	41 55                	push   %r13
   1678f:	31 d2                	xor    %edx,%edx
   16791:	31 f6                	xor    %esi,%esi
   16793:	41 54                	push   %r12
   16795:	55                   	push   %rbp
   16796:	48 89 fd             	mov    %rdi,%rbp
   16799:	e8 ed fe ff ff       	call   1668b <format_uri>
   1679e:	4c 8d 68 01          	lea    0x1(%rax),%r13
   167a2:	4c 89 ef             	mov    %r13,%rdi
   167a5:	e8 97 5e ff ff       	call   c641 <malloc>
   167aa:	49 89 c4             	mov    %rax,%r12
   167ad:	48 85 c0             	test   %rax,%rax
   167b0:	74 0e                	je     167c0 <format_uri_alloc+0x37>
   167b2:	4c 89 ea             	mov    %r13,%rdx
   167b5:	48 89 c6             	mov    %rax,%rsi
   167b8:	48 89 ef             	mov    %rbp,%rdi
   167bb:	e8 cb fe ff ff       	call   1668b <format_uri>
   167c0:	4c 89 e0             	mov    %r12,%rax
   167c3:	5d                   	pop    %rbp
   167c4:	41 5c                	pop    %r12
   167c6:	41 5d                	pop    %r13
   167c8:	c3                   	ret    

00000000000167c9 <uri_dup>:
   167c9:	f3 0f 1e fa          	endbr64 
   167cd:	41 54                	push   %r12
   167cf:	31 f6                	xor    %esi,%esi
   167d1:	53                   	push   %rbx
   167d2:	48 89 fb             	mov    %rdi,%rbx
   167d5:	51                   	push   %rcx
   167d6:	e8 44 fa ff ff       	call   1621f <uri_copy_fields>
   167db:	48 89 c7             	mov    %rax,%rdi
   167de:	e8 77 5e ff ff       	call   c65a <zalloc>
   167e3:	49 89 c4             	mov    %rax,%r12
   167e6:	48 85 c0             	test   %rax,%rax
   167e9:	74 28                	je     16813 <uri_dup+0x4a>
   167eb:	48 89 df             	mov    %rbx,%rdi
   167ee:	48 8d 05 10 fa ff ff 	lea    -0x5f0(%rip),%rax        # 16205 <uri_free>
   167f5:	4c 89 e6             	mov    %r12,%rsi
   167f8:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   167fd:	e8 1d fa ff ff       	call   1621f <uri_copy_fields>
   16802:	48 8b 5b 58          	mov    0x58(%rbx),%rbx
   16806:	48 89 df             	mov    %rbx,%rdi
   16809:	e8 24 96 ff ff       	call   fe32 <ref_increment>
   1680e:	49 89 5c 24 58       	mov    %rbx,0x58(%r12)
   16813:	4c 89 e0             	mov    %r12,%rax
   16816:	5a                   	pop    %rdx
   16817:	5b                   	pop    %rbx
   16818:	41 5c                	pop    %r12
   1681a:	c3                   	ret    

000000000001681b <resolve_path>:
   1681b:	f3 0f 1e fa          	endbr64 
   1681f:	41 54                	push   %r12
   16821:	55                   	push   %rbp
   16822:	48 89 f5             	mov    %rsi,%rbp
   16825:	48 83 ec 28          	sub    $0x28,%rsp
   16829:	48 8b 05 40 37 01 00 	mov    0x13740(%rip),%rax        # 29f70 <__stack_chk_guard>
   16830:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   16835:	31 c0                	xor    %eax,%eax
   16837:	80 3e 2f             	cmpb   $0x2f,(%rsi)
   1683a:	75 21                	jne    1685d <resolve_path+0x42>
   1683c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16841:	48 2b 05 28 37 01 00 	sub    0x13728(%rip),%rax        # 29f70 <__stack_chk_guard>
   16848:	0f 85 d8 00 00 00    	jne    16926 <resolve_path+0x10b>
   1684e:	48 83 c4 28          	add    $0x28,%rsp
   16852:	48 89 f7             	mov    %rsi,%rdi
   16855:	5d                   	pop    %rbp
   16856:	41 5c                	pop    %r12
   16858:	e9 f0 d1 ff ff       	jmp    13a4d <strdup>
   1685d:	e8 eb d1 ff ff       	call   13a4d <strdup>
   16862:	49 89 c4             	mov    %rax,%r12
   16865:	48 89 c7             	mov    %rax,%rdi
   16868:	48 85 c0             	test   %rax,%rax
   1686b:	0f 84 a7 00 00 00    	je     16918 <resolve_path+0xfd>
   16871:	e8 aa 23 00 00       	call   18c20 <dirname>
   16876:	48 89 c7             	mov    %rax,%rdi
   16879:	80 7d 00 2e          	cmpb   $0x2e,0x0(%rbp)
   1687d:	75 3d                	jne    168bc <resolve_path+0xa1>
   1687f:	8a 45 01             	mov    0x1(%rbp),%al
   16882:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   16886:	84 c0                	test   %al,%al
   16888:	74 2d                	je     168b7 <resolve_path+0x9c>
   1688a:	3c 2f                	cmp    $0x2f,%al
   1688c:	75 06                	jne    16894 <resolve_path+0x79>
   1688e:	48 83 c5 02          	add    $0x2,%rbp
   16892:	eb e5                	jmp    16879 <resolve_path+0x5e>
   16894:	3c 2e                	cmp    $0x2e,%al
   16896:	75 24                	jne    168bc <resolve_path+0xa1>
   16898:	8a 42 01             	mov    0x1(%rdx),%al
   1689b:	84 c0                	test   %al,%al
   1689d:	75 06                	jne    168a5 <resolve_path+0x8a>
   1689f:	48 83 c5 02          	add    $0x2,%rbp
   168a3:	eb cc                	jmp    16871 <resolve_path+0x56>
   168a5:	3c 2f                	cmp    $0x2f,%al
   168a7:	75 13                	jne    168bc <resolve_path+0xa1>
   168a9:	e8 72 23 00 00       	call   18c20 <dirname>
   168ae:	48 83 c5 03          	add    $0x3,%rbp
   168b2:	48 89 c7             	mov    %rax,%rdi
   168b5:	eb c2                	jmp    16879 <resolve_path+0x5e>
   168b7:	48 89 d5             	mov    %rdx,%rbp
   168ba:	eb bd                	jmp    16879 <resolve_path+0x5e>
   168bc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   168c1:	e8 74 d0 ff ff       	call   1393a <strlen>
   168c6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   168cb:	4c 8d 4c 24 10       	lea    0x10(%rsp),%r9
   168d0:	49 89 e8             	mov    %rbp,%r8
   168d3:	48 8d 0d fa da 00 00 	lea    0xdafa(%rip),%rcx        # 243d4 <.LC0>
   168da:	48 8d 35 e3 be 00 00 	lea    0xbee3(%rip),%rsi        # 227c4 <.LC3>
   168e1:	80 7c 07 ff 2f       	cmpb   $0x2f,-0x1(%rdi,%rax,1)
   168e6:	48 8d 05 13 d0 00 00 	lea    0xd013(%rip),%rax        # 23900 <.LC0>
   168ed:	48 89 fa             	mov    %rdi,%rdx
   168f0:	4c 89 cf             	mov    %r9,%rdi
   168f3:	48 0f 45 c8          	cmovne %rax,%rcx
   168f7:	31 c0                	xor    %eax,%eax
   168f9:	e8 a5 17 00 00       	call   180a3 <asprintf>
   168fe:	85 c0                	test   %eax,%eax
   16900:	79 09                	jns    1690b <resolve_path+0xf0>
   16902:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   16909:	00 00 
   1690b:	4c 89 e7             	mov    %r12,%rdi
   1690e:	e8 3c 5d ff ff       	call   c64f <free>
   16913:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   16918:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1691d:	48 2b 05 4c 36 01 00 	sub    0x1364c(%rip),%rax        # 29f70 <__stack_chk_guard>
   16924:	74 05                	je     1692b <resolve_path+0x110>
   16926:	e8 35 c1 fe ff       	call   2a60 <__stack_chk_fail>
   1692b:	48 83 c4 28          	add    $0x28,%rsp
   1692f:	4c 89 e0             	mov    %r12,%rax
   16932:	5d                   	pop    %rbp
   16933:	41 5c                	pop    %r12
   16935:	c3                   	ret    

0000000000016936 <resolve_uri>:
   16936:	f3 0f 1e fa          	endbr64 
   1693a:	41 55                	push   %r13
   1693c:	41 54                	push   %r12
   1693e:	49 89 f4             	mov    %rsi,%r12
   16941:	55                   	push   %rbp
   16942:	48 83 ec 70          	sub    $0x70,%rsp
   16946:	48 8b 05 23 36 01 00 	mov    0x13623(%rip),%rax        # 29f70 <__stack_chk_guard>
   1694d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   16952:	31 c0                	xor    %eax,%eax
   16954:	48 83 7e 10 00       	cmpq   $0x0,0x10(%rsi)
   16959:	75 08                	jne    16963 <resolve_uri+0x2d>
   1695b:	48 89 fd             	mov    %rdi,%rbp
   1695e:	48 85 ff             	test   %rdi,%rdi
   16961:	75 0d                	jne    16970 <resolve_uri+0x3a>
   16963:	4c 89 e7             	mov    %r12,%rdi
   16966:	e8 c7 94 ff ff       	call   fe32 <ref_increment>
   1696b:	e9 a0 00 00 00       	jmp    16a10 <resolve_uri+0xda>
   16970:	49 89 e5             	mov    %rsp,%r13
   16973:	48 89 fe             	mov    %rdi,%rsi
   16976:	ba 60 00 00 00       	mov    $0x60,%edx
   1697b:	4c 89 ef             	mov    %r13,%rdi
   1697e:	e8 8a 09 00 00       	call   1730d <__memcpy>
   16983:	49 8b 74 24 40       	mov    0x40(%r12),%rsi
   16988:	48 85 f6             	test   %rsi,%rsi
   1698b:	74 3d                	je     169ca <resolve_uri+0x94>
   1698d:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
   16991:	48 85 ff             	test   %rdi,%rdi
   16994:	75 07                	jne    1699d <resolve_uri+0x67>
   16996:	48 8d 3d 63 cf 00 00 	lea    0xcf63(%rip),%rdi        # 23900 <.LC0>
   1699d:	e8 79 fe ff ff       	call   1681b <resolve_path>
   169a2:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   169a7:	48 89 c5             	mov    %rax,%rbp
   169aa:	49 8b 44 24 48       	mov    0x48(%r12),%rax
   169af:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   169b4:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   169b9:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   169be:	49 8b 44 24 58       	mov    0x58(%r12),%rax
   169c3:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   169c8:	eb 33                	jmp    169fd <resolve_uri+0xc7>
   169ca:	49 8b 54 24 48       	mov    0x48(%r12),%rdx
   169cf:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   169d4:	49 8b 6c 24 58       	mov    0x58(%r12),%rbp
   169d9:	48 85 d2             	test   %rdx,%rdx
   169dc:	74 07                	je     169e5 <resolve_uri+0xaf>
   169de:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   169e3:	eb 05                	jmp    169ea <resolve_uri+0xb4>
   169e5:	48 85 c0             	test   %rax,%rax
   169e8:	74 07                	je     169f1 <resolve_uri+0xbb>
   169ea:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   169ef:	eb 05                	jmp    169f6 <resolve_uri+0xc0>
   169f1:	48 85 ed             	test   %rbp,%rbp
   169f4:	74 07                	je     169fd <resolve_uri+0xc7>
   169f6:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   169fb:	31 ed                	xor    %ebp,%ebp
   169fd:	4c 89 ef             	mov    %r13,%rdi
   16a00:	e8 c4 fd ff ff       	call   167c9 <uri_dup>
   16a05:	48 89 ef             	mov    %rbp,%rdi
   16a08:	49 89 c4             	mov    %rax,%r12
   16a0b:	e8 3f 5c ff ff       	call   c64f <free>
   16a10:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   16a15:	48 2b 05 54 35 01 00 	sub    0x13554(%rip),%rax        # 29f70 <__stack_chk_guard>
   16a1c:	74 05                	je     16a23 <resolve_uri+0xed>
   16a1e:	e8 3d c0 fe ff       	call   2a60 <__stack_chk_fail>
   16a23:	48 83 c4 70          	add    $0x70,%rsp
   16a27:	4c 89 e0             	mov    %r12,%rax
   16a2a:	5d                   	pop    %rbp
   16a2b:	41 5c                	pop    %r12
   16a2d:	41 5d                	pop    %r13
   16a2f:	c3                   	ret    

0000000000016a30 <pxe_uri>:
   16a30:	f3 0f 1e fa          	endbr64 
   16a34:	41 54                	push   %r12
   16a36:	55                   	push   %rbp
   16a37:	53                   	push   %rbx
   16a38:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   16a3f:	48 8b 05 2a 35 01 00 	mov    0x1352a(%rip),%rax        # 29f70 <__stack_chk_guard>
   16a46:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   16a4d:	00 
   16a4e:	31 c0                	xor    %eax,%eax
   16a50:	48 85 f6             	test   %rsi,%rsi
   16a53:	0f 84 da 00 00 00    	je     16b33 <pxe_uri+0x103>
   16a59:	80 3e 00             	cmpb   $0x0,(%rsi)
   16a5c:	49 89 f4             	mov    %rsi,%r12
   16a5f:	0f 84 ce 00 00 00    	je     16b33 <pxe_uri+0x103>
   16a65:	48 89 fb             	mov    %rdi,%rbx
   16a68:	48 89 f7             	mov    %rsi,%rdi
   16a6b:	e8 e3 f9 ff ff       	call   16453 <parse_uri>
   16a70:	48 85 c0             	test   %rax,%rax
   16a73:	74 12                	je     16a87 <pxe_uri+0x57>
   16a75:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   16a7a:	74 0b                	je     16a87 <pxe_uri+0x57>
   16a7c:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
   16a81:	0f 84 ac 00 00 00    	je     16b33 <pxe_uri+0x103>
   16a87:	48 89 c7             	mov    %rax,%rdi
   16a8a:	48 8d 6c 24 20       	lea    0x20(%rsp),%rbp
   16a8f:	e8 aa 93 ff ff       	call   fe3e <ref_decrement>
   16a94:	48 89 ef             	mov    %rbp,%rdi
   16a97:	b9 60 00 00 00       	mov    $0x60,%ecx
   16a9c:	31 c0                	xor    %eax,%eax
   16a9e:	f3 aa                	rep stos %al,%es:(%rdi)
   16aa0:	48 8d 05 06 d2 00 00 	lea    0xd206(%rip),%rax        # 23cad <.LC9>
   16aa7:	48 89 df             	mov    %rbx,%rdi
   16aaa:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   16aaf:	e8 71 cc ff ff       	call   13725 <sock_ntoa>
   16ab4:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   16ab9:	48 85 c0             	test   %rax,%rax
   16abc:	75 04                	jne    16ac2 <pxe_uri+0x92>
   16abe:	31 c0                	xor    %eax,%eax
   16ac0:	eb 71                	jmp    16b33 <pxe_uri+0x103>
   16ac2:	66 8b 4b 04          	mov    0x4(%rbx),%cx
   16ac6:	66 85 c9             	test   %cx,%cx
   16ac9:	74 28                	je     16af3 <pxe_uri+0xc3>
   16acb:	48 8d 9c 24 82 00 00 	lea    0x82(%rsp),%rbx
   16ad2:	00 
   16ad3:	48 8d 15 20 c6 00 00 	lea    0xc620(%rip),%rdx        # 230fa <.LC10>
   16ada:	be 06 00 00 00       	mov    $0x6,%esi
   16adf:	31 c0                	xor    %eax,%eax
   16ae1:	48 89 df             	mov    %rbx,%rdi
   16ae4:	86 cd                	xchg   %cl,%ch
   16ae6:	0f b7 c9             	movzwl %cx,%ecx
   16ae9:	e8 93 05 00 00       	call   17081 <snprintf>
   16aee:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   16af3:	31 c0                	xor    %eax,%eax
   16af5:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   16afa:	4c 89 e2             	mov    %r12,%rdx
   16afd:	48 8d 35 a7 be 00 00 	lea    0xbea7(%rip),%rsi        # 229ab <.LC11>
   16b04:	e8 9a 15 00 00       	call   180a3 <asprintf>
   16b09:	85 c0                	test   %eax,%eax
   16b0b:	78 b1                	js     16abe <pxe_uri+0x8e>
   16b0d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   16b12:	48 89 ef             	mov    %rbp,%rdi
   16b15:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   16b1a:	e8 aa fc ff ff       	call   167c9 <uri_dup>
   16b1f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   16b24:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   16b29:	e8 21 5b ff ff       	call   c64f <free>
   16b2e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16b33:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
   16b3a:	00 
   16b3b:	48 2b 15 2e 34 01 00 	sub    0x1342e(%rip),%rdx        # 29f70 <__stack_chk_guard>
   16b42:	74 05                	je     16b49 <pxe_uri+0x119>
   16b44:	e8 17 bf fe ff       	call   2a60 <__stack_chk_fail>
   16b49:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
   16b50:	5b                   	pop    %rbx
   16b51:	5d                   	pop    %rbp
   16b52:	41 5c                	pop    %r12
   16b54:	c3                   	ret    

0000000000016b55 <uuid_ntoa>:
   16b55:	f3 0f 1e fa          	endbr64 
   16b59:	41 54                	push   %r12
   16b5b:	4c 8d 25 1e 32 01 00 	lea    0x1321e(%rip),%r12        # 29d80 <buf.0>
   16b62:	53                   	push   %rbx
   16b63:	48 83 ec 10          	sub    $0x10,%rsp
   16b67:	0f b6 77 0f          	movzbl 0xf(%rdi),%esi
   16b6b:	8b 47 08             	mov    0x8(%rdi),%eax
   16b6e:	66 8b 5f 06          	mov    0x6(%rdi),%bx
   16b72:	8b 57 04             	mov    0x4(%rdi),%edx
   16b75:	8b 0f                	mov    (%rdi),%ecx
   16b77:	56                   	push   %rsi
   16b78:	0f b6 77 0e          	movzbl 0xe(%rdi),%esi
   16b7c:	86 c4                	xchg   %al,%ah
   16b7e:	56                   	push   %rsi
   16b7f:	0f b6 77 0d          	movzbl 0xd(%rdi),%esi
   16b83:	0f b7 c0             	movzwl %ax,%eax
   16b86:	86 df                	xchg   %bl,%bh
   16b88:	56                   	push   %rsi
   16b89:	0f b6 77 0c          	movzbl 0xc(%rdi),%esi
   16b8d:	44 0f b7 cb          	movzwl %bx,%r9d
   16b91:	86 d6                	xchg   %dl,%dh
   16b93:	56                   	push   %rsi
   16b94:	0f b6 77 0b          	movzbl 0xb(%rdi),%esi
   16b98:	44 0f b7 c2          	movzwl %dx,%r8d
   16b9c:	48 8d 15 61 d1 00 00 	lea    0xd161(%rip),%rdx        # 23d04 <.LC0>
   16ba3:	0f c9                	bswap  %ecx
   16ba5:	56                   	push   %rsi
   16ba6:	0f b6 77 0a          	movzbl 0xa(%rdi),%esi
   16baa:	4c 89 e7             	mov    %r12,%rdi
   16bad:	56                   	push   %rsi
   16bae:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   16bb2:	50                   	push   %rax
   16bb3:	31 c0                	xor    %eax,%eax
   16bb5:	e8 c7 04 00 00       	call   17081 <snprintf>
   16bba:	48 83 c4 48          	add    $0x48,%rsp
   16bbe:	4c 89 e0             	mov    %r12,%rax
   16bc1:	5b                   	pop    %rbx
   16bc2:	41 5c                	pop    %r12
   16bc4:	c3                   	ret    

0000000000016bc5 <cputchar>:
   16bc5:	53                   	push   %rbx
   16bc6:	48 89 fb             	mov    %rdi,%rbx
   16bc9:	40 0f b6 f6          	movzbl %sil,%esi
   16bcd:	ff 17                	call   *(%rdi)
   16bcf:	48 ff 43 08          	incq   0x8(%rbx)
   16bd3:	5b                   	pop    %rbx
   16bd4:	c3                   	ret    

0000000000016bd5 <printf_sputc>:
   16bd5:	f3 0f 1e fa          	endbr64 
   16bd9:	48 8b 47 08          	mov    0x8(%rdi),%rax
   16bdd:	48 3b 47 18          	cmp    0x18(%rdi),%rax
   16be1:	73 08                	jae    16beb <printf_sputc+0x16>
   16be3:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   16be7:	40 88 34 02          	mov    %sil,(%rdx,%rax,1)
   16beb:	c3                   	ret    

0000000000016bec <printf_putchar>:
   16bec:	f3 0f 1e fa          	endbr64 
   16bf0:	89 f7                	mov    %esi,%edi
   16bf2:	e9 57 26 00 00       	jmp    1924e <putchar>

0000000000016bf7 <vcprintf>:
   16bf7:	f3 0f 1e fa          	endbr64 
   16bfb:	41 56                	push   %r14
   16bfd:	49 89 f6             	mov    %rsi,%r14
   16c00:	41 55                	push   %r13
   16c02:	4c 8d 2d 2f d1 00 00 	lea    0xd12f(%rip),%r13        # 23d38 <.LC1>
   16c09:	41 54                	push   %r12
   16c0b:	49 89 fc             	mov    %rdi,%r12
   16c0e:	55                   	push   %rbp
   16c0f:	53                   	push   %rbx
   16c10:	48 89 d3             	mov    %rdx,%rbx
   16c13:	48 83 ec 30          	sub    $0x30,%rsp
   16c17:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   16c1e:	00 
   16c1f:	48 8b 05 4a 33 01 00 	mov    0x1334a(%rip),%rax        # 29f70 <__stack_chk_guard>
   16c26:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   16c2b:	31 c0                	xor    %eax,%eax
   16c2d:	41 0f b6 36          	movzbl (%r14),%esi
   16c31:	40 84 f6             	test   %sil,%sil
   16c34:	0f 84 b5 03 00 00    	je     16fef <vcprintf+0x3f8>
   16c3a:	40 80 fe 25          	cmp    $0x25,%sil
   16c3e:	75 07                	jne    16c47 <vcprintf+0x50>
   16c40:	49 ff c6             	inc    %r14
   16c43:	31 f6                	xor    %esi,%esi
   16c45:	eb 17                	jmp    16c5e <vcprintf+0x67>
   16c47:	4c 89 e7             	mov    %r12,%rdi
   16c4a:	e8 76 ff ff ff       	call   16bc5 <cputchar>
   16c4f:	e9 93 03 00 00       	jmp    16fe7 <vcprintf+0x3f0>
   16c54:	3c 30                	cmp    $0x30,%al
   16c56:	75 12                	jne    16c6a <vcprintf+0x73>
   16c58:	83 ce 10             	or     $0x10,%esi
   16c5b:	49 ff c6             	inc    %r14
   16c5e:	41 8a 06             	mov    (%r14),%al
   16c61:	3c 23                	cmp    $0x23,%al
   16c63:	75 ef                	jne    16c54 <vcprintf+0x5d>
   16c65:	83 ce 02             	or     $0x2,%esi
   16c68:	eb f1                	jmp    16c5b <vcprintf+0x64>
   16c6a:	31 c9                	xor    %ecx,%ecx
   16c6c:	41 0f be 06          	movsbl (%r14),%eax
   16c70:	49 8d 56 01          	lea    0x1(%r14),%rdx
   16c74:	83 e8 30             	sub    $0x30,%eax
   16c77:	83 f8 09             	cmp    $0x9,%eax
   16c7a:	77 0a                	ja     16c86 <vcprintf+0x8f>
   16c7c:	6b c9 0a             	imul   $0xa,%ecx,%ecx
   16c7f:	49 89 d6             	mov    %rdx,%r14
   16c82:	01 c1                	add    %eax,%ecx
   16c84:	eb e6                	jmp    16c6c <vcprintf+0x75>
   16c86:	48 8d 3d d9 d8 00 00 	lea    0xd8d9(%rip),%rdi        # 24566 <type_sizes+0x2>
   16c8d:	41 8a 06             	mov    (%r14),%al
   16c90:	3c 68                	cmp    $0x68,%al
   16c92:	75 05                	jne    16c99 <vcprintf+0xa2>
   16c94:	48 ff cf             	dec    %rdi
   16c97:	eb 14                	jmp    16cad <vcprintf+0xb6>
   16c99:	3c 6c                	cmp    $0x6c,%al
   16c9b:	75 05                	jne    16ca2 <vcprintf+0xab>
   16c9d:	48 ff c7             	inc    %rdi
   16ca0:	eb 0b                	jmp    16cad <vcprintf+0xb6>
   16ca2:	3c 7a                	cmp    $0x7a,%al
   16ca4:	75 0c                	jne    16cb2 <vcprintf+0xbb>
   16ca6:	48 8d 3d bc d8 00 00 	lea    0xd8bc(%rip),%rdi        # 24569 <type_sizes+0x5>
   16cad:	49 ff c6             	inc    %r14
   16cb0:	eb db                	jmp    16c8d <vcprintf+0x96>
   16cb2:	c6 44 24 27 00       	movb   $0x0,0x27(%rsp)
   16cb7:	3c 63                	cmp    $0x63,%al
   16cb9:	75 74                	jne    16d2f <vcprintf+0x138>
   16cbb:	48 8d 15 a5 d8 00 00 	lea    0xd8a5(%rip),%rdx        # 24567 <type_sizes+0x3>
   16cc2:	8b 03                	mov    (%rbx),%eax
   16cc4:	48 39 d7             	cmp    %rdx,%rdi
   16cc7:	73 33                	jae    16cfc <vcprintf+0x105>
   16cc9:	83 f8 2f             	cmp    $0x2f,%eax
   16ccc:	77 0d                	ja     16cdb <vcprintf+0xe4>
   16cce:	89 c2                	mov    %eax,%edx
   16cd0:	83 c0 08             	add    $0x8,%eax
   16cd3:	48 03 53 10          	add    0x10(%rbx),%rdx
   16cd7:	89 03                	mov    %eax,(%rbx)
   16cd9:	eb 0c                	jmp    16ce7 <vcprintf+0xf0>
   16cdb:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16cdf:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16ce3:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16ce7:	0f b6 32             	movzbl (%rdx),%esi
   16cea:	4c 89 e7             	mov    %r12,%rdi
   16ced:	48 8d 6c 24 27       	lea    0x27(%rsp),%rbp
   16cf2:	e8 ce fe ff ff       	call   16bc5 <cputchar>
   16cf7:	e9 b5 02 00 00       	jmp    16fb1 <vcprintf+0x3ba>
   16cfc:	83 f8 2f             	cmp    $0x2f,%eax
   16cff:	77 0d                	ja     16d0e <vcprintf+0x117>
   16d01:	89 c2                	mov    %eax,%edx
   16d03:	83 c0 08             	add    $0x8,%eax
   16d06:	48 03 53 10          	add    0x10(%rbx),%rdx
   16d0a:	89 03                	mov    %eax,(%rbx)
   16d0c:	eb 0c                	jmp    16d1a <vcprintf+0x123>
   16d0e:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16d12:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16d16:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16d1a:	8b 02                	mov    (%rdx),%eax
   16d1c:	c6 44 24 09 00       	movb   $0x0,0x9(%rsp)
   16d21:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   16d26:	88 44 24 08          	mov    %al,0x8(%rsp)
   16d2a:	e9 82 02 00 00       	jmp    16fb1 <vcprintf+0x3ba>
   16d2f:	3c 73                	cmp    $0x73,%al
   16d31:	75 70                	jne    16da3 <vcprintf+0x1ac>
   16d33:	48 8d 15 2d d8 00 00 	lea    0xd82d(%rip),%rdx        # 24567 <type_sizes+0x3>
   16d3a:	8b 03                	mov    (%rbx),%eax
   16d3c:	48 39 d7             	cmp    %rdx,%rdi
   16d3f:	73 36                	jae    16d77 <vcprintf+0x180>
   16d41:	83 f8 2f             	cmp    $0x2f,%eax
   16d44:	77 0d                	ja     16d53 <vcprintf+0x15c>
   16d46:	89 c2                	mov    %eax,%edx
   16d48:	83 c0 08             	add    $0x8,%eax
   16d4b:	48 03 53 10          	add    0x10(%rbx),%rdx
   16d4f:	89 03                	mov    %eax,(%rbx)
   16d51:	eb 0c                	jmp    16d5f <vcprintf+0x168>
   16d53:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16d57:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16d5b:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16d5f:	48 8b 2a             	mov    (%rdx),%rbp
   16d62:	48 85 ed             	test   %rbp,%rbp
   16d65:	0f 85 46 02 00 00    	jne    16fb1 <vcprintf+0x3ba>
   16d6b:	48 8d 2d bf cf 00 00 	lea    0xcfbf(%rip),%rbp        # 23d31 <.LC0>
   16d72:	e9 3a 02 00 00       	jmp    16fb1 <vcprintf+0x3ba>
   16d77:	83 f8 2f             	cmp    $0x2f,%eax
   16d7a:	77 0d                	ja     16d89 <vcprintf+0x192>
   16d7c:	89 c2                	mov    %eax,%edx
   16d7e:	83 c0 08             	add    $0x8,%eax
   16d81:	48 03 53 10          	add    0x10(%rbx),%rdx
   16d85:	89 03                	mov    %eax,(%rbx)
   16d87:	eb 0c                	jmp    16d95 <vcprintf+0x19e>
   16d89:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16d8d:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16d91:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16d95:	48 8b 2a             	mov    (%rdx),%rbp
   16d98:	48 85 ed             	test   %rbp,%rbp
   16d9b:	0f 85 26 02 00 00    	jne    16fc7 <vcprintf+0x3d0>
   16da1:	eb c8                	jmp    16d6b <vcprintf+0x174>
   16da3:	3c 70                	cmp    $0x70,%al
   16da5:	75 6c                	jne    16e13 <vcprintf+0x21c>
   16da7:	8b 13                	mov    (%rbx),%edx
   16da9:	83 fa 2f             	cmp    $0x2f,%edx
   16dac:	77 0d                	ja     16dbb <vcprintf+0x1c4>
   16dae:	89 d0                	mov    %edx,%eax
   16db0:	83 c2 08             	add    $0x8,%edx
   16db3:	48 03 43 10          	add    0x10(%rbx),%rax
   16db7:	89 13                	mov    %edx,(%rbx)
   16db9:	eb 0c                	jmp    16dc7 <vcprintf+0x1d0>
   16dbb:	48 8b 43 08          	mov    0x8(%rbx),%rax
   16dbf:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16dc3:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   16dc7:	48 8b 10             	mov    (%rax),%rdx
   16dca:	48 8d 44 24 27       	lea    0x27(%rsp),%rax
   16dcf:	48 89 c7             	mov    %rax,%rdi
   16dd2:	48 89 d6             	mov    %rdx,%rsi
   16dd5:	48 ff c8             	dec    %rax
   16dd8:	83 e6 0f             	and    $0xf,%esi
   16ddb:	41 8a 74 35 00       	mov    0x0(%r13,%rsi,1),%sil
   16de0:	83 ce 20             	or     $0x20,%esi
   16de3:	48 c1 ea 04          	shr    $0x4,%rdx
   16de7:	40 88 30             	mov    %sil,(%rax)
   16dea:	75 e6                	jne    16dd2 <vcprintf+0x1db>
   16dec:	48 63 c9             	movslq %ecx,%rcx
   16def:	48 89 fa             	mov    %rdi,%rdx
   16df2:	48 29 c2             	sub    %rax,%rdx
   16df5:	48 39 ca             	cmp    %rcx,%rdx
   16df8:	7d 08                	jge    16e02 <vcprintf+0x20b>
   16dfa:	48 ff c8             	dec    %rax
   16dfd:	c6 00 20             	movb   $0x20,(%rax)
   16e00:	eb ed                	jmp    16def <vcprintf+0x1f8>
   16e02:	c6 40 ff 78          	movb   $0x78,-0x1(%rax)
   16e06:	48 8d 68 fe          	lea    -0x2(%rax),%rbp
   16e0a:	c6 40 fe 30          	movb   $0x30,-0x2(%rax)
   16e0e:	e9 9e 01 00 00       	jmp    16fb1 <vcprintf+0x3ba>
   16e13:	89 c2                	mov    %eax,%edx
   16e15:	83 e2 df             	and    $0xffffffdf,%edx
   16e18:	80 fa 58             	cmp    $0x58,%dl
   16e1b:	0f 85 b9 00 00 00    	jne    16eda <vcprintf+0x2e3>
   16e21:	83 e0 20             	and    $0x20,%eax
   16e24:	8b 13                	mov    (%rbx),%edx
   16e26:	09 f0                	or     %esi,%eax
   16e28:	80 3f 07             	cmpb   $0x7,(%rdi)
   16e2b:	76 23                	jbe    16e50 <vcprintf+0x259>
   16e2d:	83 fa 2f             	cmp    $0x2f,%edx
   16e30:	77 0d                	ja     16e3f <vcprintf+0x248>
   16e32:	89 d6                	mov    %edx,%esi
   16e34:	83 c2 08             	add    $0x8,%edx
   16e37:	48 03 73 10          	add    0x10(%rbx),%rsi
   16e3b:	89 13                	mov    %edx,(%rbx)
   16e3d:	eb 0c                	jmp    16e4b <vcprintf+0x254>
   16e3f:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   16e43:	48 8d 56 08          	lea    0x8(%rsi),%rdx
   16e47:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   16e4b:	48 8b 16             	mov    (%rsi),%rdx
   16e4e:	eb 20                	jmp    16e70 <vcprintf+0x279>
   16e50:	83 fa 2f             	cmp    $0x2f,%edx
   16e53:	77 0d                	ja     16e62 <vcprintf+0x26b>
   16e55:	89 d6                	mov    %edx,%esi
   16e57:	83 c2 08             	add    $0x8,%edx
   16e5a:	48 03 73 10          	add    0x10(%rbx),%rsi
   16e5e:	89 13                	mov    %edx,(%rbx)
   16e60:	eb 0c                	jmp    16e6e <vcprintf+0x277>
   16e62:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   16e66:	48 8d 56 08          	lea    0x8(%rsi),%rdx
   16e6a:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   16e6e:	8b 16                	mov    (%rsi),%edx
   16e70:	41 89 c0             	mov    %eax,%r8d
   16e73:	89 c7                	mov    %eax,%edi
   16e75:	48 8d 6c 24 27       	lea    0x27(%rsp),%rbp
   16e7a:	41 83 e0 20          	and    $0x20,%r8d
   16e7e:	83 e7 10             	and    $0x10,%edi
   16e81:	49 89 e9             	mov    %rbp,%r9
   16e84:	83 cf 20             	or     $0x20,%edi
   16e87:	44 89 c6             	mov    %r8d,%esi
   16e8a:	49 89 d2             	mov    %rdx,%r10
   16e8d:	48 ff cd             	dec    %rbp
   16e90:	41 83 e2 0f          	and    $0xf,%r10d
   16e94:	47 8a 5c 15 00       	mov    0x0(%r13,%r10,1),%r11b
   16e99:	45 09 c3             	or     %r8d,%r11d
   16e9c:	48 c1 ea 04          	shr    $0x4,%rdx
   16ea0:	44 88 5d 00          	mov    %r11b,0x0(%rbp)
   16ea4:	75 e4                	jne    16e8a <vcprintf+0x293>
   16ea6:	48 63 c9             	movslq %ecx,%rcx
   16ea9:	4c 89 ca             	mov    %r9,%rdx
   16eac:	48 29 ea             	sub    %rbp,%rdx
   16eaf:	48 39 ca             	cmp    %rcx,%rdx
   16eb2:	7d 09                	jge    16ebd <vcprintf+0x2c6>
   16eb4:	48 ff cd             	dec    %rbp
   16eb7:	40 88 7d 00          	mov    %dil,0x0(%rbp)
   16ebb:	eb ec                	jmp    16ea9 <vcprintf+0x2b2>
   16ebd:	a8 02                	test   $0x2,%al
   16ebf:	0f 84 ec 00 00 00    	je     16fb1 <vcprintf+0x3ba>
   16ec5:	89 f0                	mov    %esi,%eax
   16ec7:	c6 45 fe 30          	movb   $0x30,-0x2(%rbp)
   16ecb:	48 83 ed 02          	sub    $0x2,%rbp
   16ecf:	83 c8 58             	or     $0x58,%eax
   16ed2:	88 45 01             	mov    %al,0x1(%rbp)
   16ed5:	e9 d7 00 00 00       	jmp    16fb1 <vcprintf+0x3ba>
   16eda:	3c 64                	cmp    $0x64,%al
   16edc:	74 08                	je     16ee6 <vcprintf+0x2ef>
   16ede:	3c 69                	cmp    $0x69,%al
   16ee0:	0f 85 c2 00 00 00    	jne    16fa8 <vcprintf+0x3b1>
   16ee6:	80 3f 07             	cmpb   $0x7,(%rdi)
   16ee9:	8b 03                	mov    (%rbx),%eax
   16eeb:	76 23                	jbe    16f10 <vcprintf+0x319>
   16eed:	83 f8 2f             	cmp    $0x2f,%eax
   16ef0:	77 0d                	ja     16eff <vcprintf+0x308>
   16ef2:	89 c2                	mov    %eax,%edx
   16ef4:	83 c0 08             	add    $0x8,%eax
   16ef7:	48 03 53 10          	add    0x10(%rbx),%rdx
   16efb:	89 03                	mov    %eax,(%rbx)
   16efd:	eb 0c                	jmp    16f0b <vcprintf+0x314>
   16eff:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16f03:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16f07:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16f0b:	48 8b 02             	mov    (%rdx),%rax
   16f0e:	eb 21                	jmp    16f31 <vcprintf+0x33a>
   16f10:	83 f8 2f             	cmp    $0x2f,%eax
   16f13:	77 0d                	ja     16f22 <vcprintf+0x32b>
   16f15:	89 c2                	mov    %eax,%edx
   16f17:	83 c0 08             	add    $0x8,%eax
   16f1a:	48 03 53 10          	add    0x10(%rbx),%rdx
   16f1e:	89 03                	mov    %eax,(%rbx)
   16f20:	eb 0c                	jmp    16f2e <vcprintf+0x337>
   16f22:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   16f26:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16f2a:	48 89 43 08          	mov    %rax,0x8(%rbx)
   16f2e:	48 63 02             	movslq (%rdx),%rax
   16f31:	83 e6 10             	and    $0x10,%esi
   16f34:	31 ff                	xor    %edi,%edi
   16f36:	41 89 f2             	mov    %esi,%r10d
   16f39:	41 83 ca 20          	or     $0x20,%r10d
   16f3d:	48 85 c0             	test   %rax,%rax
   16f40:	79 08                	jns    16f4a <vcprintf+0x353>
   16f42:	48 f7 d8             	neg    %rax
   16f45:	bf 01 00 00 00       	mov    $0x1,%edi
   16f4a:	48 8d 6c 24 27       	lea    0x27(%rsp),%rbp
   16f4f:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   16f55:	49 89 e9             	mov    %rbp,%r9
   16f58:	48 99                	cqto   
   16f5a:	49 89 eb             	mov    %rbp,%r11
   16f5d:	48 ff cd             	dec    %rbp
   16f60:	49 f7 f8             	idiv   %r8
   16f63:	83 c2 30             	add    $0x30,%edx
   16f66:	88 55 00             	mov    %dl,0x0(%rbp)
   16f69:	48 85 c0             	test   %rax,%rax
   16f6c:	75 ea                	jne    16f58 <vcprintf+0x361>
   16f6e:	83 e7 01             	and    $0x1,%edi
   16f71:	85 f6                	test   %esi,%esi
   16f73:	75 0d                	jne    16f82 <vcprintf+0x38b>
   16f75:	40 84 ff             	test   %dil,%dil
   16f78:	74 08                	je     16f82 <vcprintf+0x38b>
   16f7a:	c6 45 ff 2d          	movb   $0x2d,-0x1(%rbp)
   16f7e:	49 8d 6b fe          	lea    -0x2(%r11),%rbp
   16f82:	48 63 c9             	movslq %ecx,%rcx
   16f85:	4c 89 c8             	mov    %r9,%rax
   16f88:	48 29 e8             	sub    %rbp,%rax
   16f8b:	48 39 c8             	cmp    %rcx,%rax
   16f8e:	7d 09                	jge    16f99 <vcprintf+0x3a2>
   16f90:	48 ff cd             	dec    %rbp
   16f93:	44 88 55 00          	mov    %r10b,0x0(%rbp)
   16f97:	eb ec                	jmp    16f85 <vcprintf+0x38e>
   16f99:	85 f6                	test   %esi,%esi
   16f9b:	74 14                	je     16fb1 <vcprintf+0x3ba>
   16f9d:	40 84 ff             	test   %dil,%dil
   16fa0:	74 0f                	je     16fb1 <vcprintf+0x3ba>
   16fa2:	c6 45 00 2d          	movb   $0x2d,0x0(%rbp)
   16fa6:	eb 09                	jmp    16fb1 <vcprintf+0x3ba>
   16fa8:	88 44 24 26          	mov    %al,0x26(%rsp)
   16fac:	48 8d 6c 24 26       	lea    0x26(%rsp),%rbp
   16fb1:	0f b6 75 00          	movzbl 0x0(%rbp),%esi
   16fb5:	40 84 f6             	test   %sil,%sil
   16fb8:	74 2d                	je     16fe7 <vcprintf+0x3f0>
   16fba:	4c 89 e7             	mov    %r12,%rdi
   16fbd:	48 ff c5             	inc    %rbp
   16fc0:	e8 00 fc ff ff       	call   16bc5 <cputchar>
   16fc5:	eb ea                	jmp    16fb1 <vcprintf+0x3ba>
   16fc7:	66 8b 75 00          	mov    0x0(%rbp),%si
   16fcb:	66 85 f6             	test   %si,%si
   16fce:	74 17                	je     16fe7 <vcprintf+0x3f0>
   16fd0:	40 88 74 24 08       	mov    %sil,0x8(%rsp)
   16fd5:	4c 89 e7             	mov    %r12,%rdi
   16fd8:	40 0f b6 f6          	movzbl %sil,%esi
   16fdc:	48 83 c5 02          	add    $0x2,%rbp
   16fe0:	e8 e0 fb ff ff       	call   16bc5 <cputchar>
   16fe5:	eb e0                	jmp    16fc7 <vcprintf+0x3d0>
   16fe7:	49 ff c6             	inc    %r14
   16fea:	e9 3e fc ff ff       	jmp    16c2d <vcprintf+0x36>
   16fef:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   16ff4:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   16ff9:	48 2b 15 70 2f 01 00 	sub    0x12f70(%rip),%rdx        # 29f70 <__stack_chk_guard>
   17000:	74 05                	je     17007 <vcprintf+0x410>
   17002:	e8 59 ba fe ff       	call   2a60 <__stack_chk_fail>
   17007:	48 83 c4 30          	add    $0x30,%rsp
   1700b:	5b                   	pop    %rbx
   1700c:	5d                   	pop    %rbp
   1700d:	41 5c                	pop    %r12
   1700f:	41 5d                	pop    %r13
   17011:	41 5e                	pop    %r14
   17013:	c3                   	ret    

0000000000017014 <vsnprintf>:
   17014:	f3 0f 1e fa          	endbr64 
   17018:	55                   	push   %rbp
   17019:	48 89 fd             	mov    %rdi,%rbp
   1701c:	53                   	push   %rbx
   1701d:	48 89 f3             	mov    %rsi,%rbx
   17020:	48 89 d6             	mov    %rdx,%rsi
   17023:	48 89 ca             	mov    %rcx,%rdx
   17026:	48 83 ec 38          	sub    $0x38,%rsp
   1702a:	48 8b 05 3f 2f 01 00 	mov    0x12f3f(%rip),%rax        # 29f70 <__stack_chk_guard>
   17031:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   17036:	48 8d 05 98 fb ff ff 	lea    -0x468(%rip),%rax        # 16bd5 <printf_sputc>
   1703d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   17042:	48 89 e7             	mov    %rsp,%rdi
   17045:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1704a:	48 89 04 24          	mov    %rax,(%rsp)
   1704e:	e8 a4 fb ff ff       	call   16bf7 <vcprintf>
   17053:	48 85 db             	test   %rbx,%rbx
   17056:	74 0f                	je     17067 <vsnprintf+0x53>
   17058:	48 ff cb             	dec    %rbx
   1705b:	48 39 c3             	cmp    %rax,%rbx
   1705e:	48 0f 47 d8          	cmova  %rax,%rbx
   17062:	c6 44 1d 00 00       	movb   $0x0,0x0(%rbp,%rbx,1)
   17067:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1706c:	48 2b 15 fd 2e 01 00 	sub    0x12efd(%rip),%rdx        # 29f70 <__stack_chk_guard>
   17073:	74 05                	je     1707a <vsnprintf+0x66>
   17075:	e8 e6 b9 fe ff       	call   2a60 <__stack_chk_fail>
   1707a:	48 83 c4 38          	add    $0x38,%rsp
   1707e:	5b                   	pop    %rbx
   1707f:	5d                   	pop    %rbp
   17080:	c3                   	ret    

0000000000017081 <snprintf>:
   17081:	f3 0f 1e fa          	endbr64 
   17085:	48 83 ec 58          	sub    $0x58,%rsp
   17089:	48 8b 05 e0 2e 01 00 	mov    0x12ee0(%rip),%rax        # 29f70 <__stack_chk_guard>
   17090:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17095:	31 c0                	xor    %eax,%eax
   17097:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   1709c:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   170a1:	48 89 e1             	mov    %rsp,%rcx
   170a4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   170a9:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   170ae:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   170b3:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   170b8:	c7 04 24 18 00 00 00 	movl   $0x18,(%rsp)
   170bf:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   170c4:	e8 4b ff ff ff       	call   17014 <vsnprintf>
   170c9:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   170ce:	48 2b 15 9b 2e 01 00 	sub    0x12e9b(%rip),%rdx        # 29f70 <__stack_chk_guard>
   170d5:	74 05                	je     170dc <snprintf+0x5b>
   170d7:	e8 84 b9 fe ff       	call   2a60 <__stack_chk_fail>
   170dc:	48 83 c4 58          	add    $0x58,%rsp
   170e0:	c3                   	ret    

00000000000170e1 <vssnprintf>:
   170e1:	f3 0f 1e fa          	endbr64 
   170e5:	31 c0                	xor    %eax,%eax
   170e7:	48 85 f6             	test   %rsi,%rsi
   170ea:	48 0f 48 f0          	cmovs  %rax,%rsi
   170ee:	e9 21 ff ff ff       	jmp    17014 <vsnprintf>

00000000000170f3 <ssnprintf>:
   170f3:	f3 0f 1e fa          	endbr64 
   170f7:	48 83 ec 58          	sub    $0x58,%rsp
   170fb:	48 8b 05 6e 2e 01 00 	mov    0x12e6e(%rip),%rax        # 29f70 <__stack_chk_guard>
   17102:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17107:	31 c0                	xor    %eax,%eax
   17109:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   1710e:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   17113:	48 89 e1             	mov    %rsp,%rcx
   17116:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1711b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   17120:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   17125:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1712a:	c7 04 24 18 00 00 00 	movl   $0x18,(%rsp)
   17131:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   17136:	e8 a6 ff ff ff       	call   170e1 <vssnprintf>
   1713b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   17140:	48 2b 15 29 2e 01 00 	sub    0x12e29(%rip),%rdx        # 29f70 <__stack_chk_guard>
   17147:	74 05                	je     1714e <ssnprintf+0x5b>
   17149:	e8 12 b9 fe ff       	call   2a60 <__stack_chk_fail>
   1714e:	48 83 c4 58          	add    $0x58,%rsp
   17152:	c3                   	ret    

0000000000017153 <vprintf>:
   17153:	f3 0f 1e fa          	endbr64 
   17157:	48 83 ec 28          	sub    $0x28,%rsp
   1715b:	49 89 f8             	mov    %rdi,%r8
   1715e:	48 89 f2             	mov    %rsi,%rdx
   17161:	48 8b 05 08 2e 01 00 	mov    0x12e08(%rip),%rax        # 29f70 <__stack_chk_guard>
   17168:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1716d:	48 8d 05 78 fa ff ff 	lea    -0x588(%rip),%rax        # 16bec <printf_putchar>
   17174:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   17179:	4c 89 c6             	mov    %r8,%rsi
   1717c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17181:	e8 71 fa ff ff       	call   16bf7 <vcprintf>
   17186:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1718b:	48 2b 15 de 2d 01 00 	sub    0x12dde(%rip),%rdx        # 29f70 <__stack_chk_guard>
   17192:	74 05                	je     17199 <vprintf+0x46>
   17194:	e8 c7 b8 fe ff       	call   2a60 <__stack_chk_fail>
   17199:	48 83 c4 28          	add    $0x28,%rsp
   1719d:	c3                   	ret    

000000000001719e <printf>:
   1719e:	f3 0f 1e fa          	endbr64 
   171a2:	48 83 ec 58          	sub    $0x58,%rsp
   171a6:	48 8b 05 c3 2d 01 00 	mov    0x12dc3(%rip),%rax        # 29f70 <__stack_chk_guard>
   171ad:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   171b2:	31 c0                	xor    %eax,%eax
   171b4:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   171b9:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
   171be:	48 89 e6             	mov    %rsp,%rsi
   171c1:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   171c6:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   171cb:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   171d0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   171d5:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   171da:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   171df:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
   171e6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   171eb:	e8 63 ff ff ff       	call   17153 <vprintf>
   171f0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   171f5:	48 2b 15 74 2d 01 00 	sub    0x12d74(%rip),%rdx        # 29f70 <__stack_chk_guard>
   171fc:	74 05                	je     17203 <printf+0x65>
   171fe:	e8 5d b8 fe ff       	call   2a60 <__stack_chk_fail>
   17203:	48 83 c4 58          	add    $0x58,%rsp
   17207:	c3                   	ret    

0000000000017208 <wcslen>:
   17208:	f3 0f 1e fa          	endbr64 
   1720c:	31 c0                	xor    %eax,%eax
   1720e:	66 83 3c 47 00       	cmpw   $0x0,(%rdi,%rax,2)
   17213:	74 05                	je     1721a <wcslen+0x12>
   17215:	48 ff c0             	inc    %rax
   17218:	eb f4                	jmp    1720e <wcslen+0x6>
   1721a:	c3                   	ret    

000000000001721b <wattroff>:
   1721b:	f3 0f 1e fa          	endbr64 
   1721f:	f7 d6                	not    %esi
   17221:	31 c0                	xor    %eax,%eax
   17223:	21 77 08             	and    %esi,0x8(%rdi)
   17226:	c3                   	ret    

0000000000017227 <wattron>:
   17227:	f3 0f 1e fa          	endbr64 
   1722b:	09 77 08             	or     %esi,0x8(%rdi)
   1722e:	31 c0                	xor    %eax,%eax
   17230:	c3                   	ret    

0000000000017231 <wattrset>:
   17231:	f3 0f 1e fa          	endbr64 
   17235:	8b 47 08             	mov    0x8(%rdi),%eax
   17238:	25 00 ff 00 00       	and    $0xff00,%eax
   1723d:	09 f0                	or     %esi,%eax
   1723f:	89 47 08             	mov    %eax,0x8(%rdi)
   17242:	31 c0                	xor    %eax,%eax
   17244:	c3                   	ret    

0000000000017245 <wcolour_set>:
   17245:	f3 0f 1e fa          	endbr64 
   17249:	83 c8 ff             	or     $0xffffffff,%eax
   1724c:	66 83 fe 08          	cmp    $0x8,%si
   17250:	77 13                	ja     17265 <wcolour_set+0x20>
   17252:	8b 47 08             	mov    0x8(%rdi),%eax
   17255:	0f bf f6             	movswl %si,%esi
   17258:	c1 e6 08             	shl    $0x8,%esi
   1725b:	66 31 c0             	xor    %ax,%ax
   1725e:	09 f0                	or     %esi,%eax
   17260:	89 47 08             	mov    %eax,0x8(%rdi)
   17263:	31 c0                	xor    %eax,%eax
   17265:	c3                   	ret    

0000000000017266 <initscr>:
   17266:	f3 0f 1e fa          	endbr64 
   1726a:	48 8b 05 0f f6 00 00 	mov    0xf60f(%rip),%rax        # 26880 <_stdscr>
   17271:	41 54                	push   %r12
   17273:	4c 8d 25 06 f6 00 00 	lea    0xf606(%rip),%r12        # 26880 <_stdscr>
   1727a:	48 89 c7             	mov    %rax,%rdi
   1727d:	ff 50 10             	call   *0x10(%rax)
   17280:	8b 05 2a d3 00 00    	mov    0xd32a(%rip),%eax        # 245b0 <console_height>
   17286:	4c 89 e7             	mov    %r12,%rdi
   17289:	31 d2                	xor    %edx,%edx
   1728b:	31 f6                	xor    %esi,%esi
   1728d:	89 05 0d f6 00 00    	mov    %eax,0xf60d(%rip)        # 268a0 <_stdscr+0x20>
   17293:	8b 05 1b d3 00 00    	mov    0xd31b(%rip),%eax        # 245b4 <console_width>
   17299:	89 05 fd f5 00 00    	mov    %eax,0xf5fd(%rip)        # 2689c <_stdscr+0x1c>
   1729f:	e8 3b 62 ff ff       	call   d4df <wmove>
   172a4:	4c 89 e0             	mov    %r12,%rax
   172a7:	41 5c                	pop    %r12
   172a9:	c3                   	ret    

00000000000172aa <endwin>:
   172aa:	f3 0f 1e fa          	endbr64 
   172ae:	55                   	push   %rbp
   172af:	48 8d 2d ca f5 00 00 	lea    0xf5ca(%rip),%rbp        # 26880 <_stdscr>
   172b6:	31 f6                	xor    %esi,%esi
   172b8:	48 89 ef             	mov    %rbp,%rdi
   172bb:	e8 71 ff ff ff       	call   17231 <wattrset>
   172c0:	31 d2                	xor    %edx,%edx
   172c2:	31 f6                	xor    %esi,%esi
   172c4:	48 89 ef             	mov    %rbp,%rdi
   172c7:	e8 79 ff ff ff       	call   17245 <wcolour_set>
   172cc:	bf 01 00 00 00       	mov    $0x1,%edi
   172d1:	e8 2b 62 ff ff       	call   d501 <curs_set>
   172d6:	8b 05 d4 d2 00 00    	mov    0xd2d4(%rip),%eax        # 245b0 <console_height>
   172dc:	31 d2                	xor    %edx,%edx
   172de:	48 89 ef             	mov    %rbp,%rdi
   172e1:	8d 70 ff             	lea    -0x1(%rax),%esi
   172e4:	e8 f6 61 ff ff       	call   d4df <wmove>
   172e9:	85 c0                	test   %eax,%eax
   172eb:	75 0f                	jne    172fc <endwin+0x52>
   172ed:	48 8d 35 db c6 00 00 	lea    0xc6db(%rip),%rsi        # 239cf <.LC0>
   172f4:	48 89 ef             	mov    %rbp,%rdi
   172f7:	e8 c0 85 ff ff       	call   f8bc <wprintw>
   172fc:	48 8b 05 7d f5 00 00 	mov    0xf57d(%rip),%rax        # 26880 <_stdscr>
   17303:	48 89 c7             	mov    %rax,%rdi
   17306:	ff 50 18             	call   *0x18(%rax)
   17309:	31 c0                	xor    %eax,%eax
   1730b:	5d                   	pop    %rbp
   1730c:	c3                   	ret    

000000000001730d <__memcpy>:
   1730d:	f3 0f 1e fa          	endbr64 
   17311:	48 89 d1             	mov    %rdx,%rcx
   17314:	48 89 f8             	mov    %rdi,%rax
   17317:	48 c1 e9 02          	shr    $0x2,%rcx
   1731b:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
   1731d:	83 e2 03             	and    $0x3,%edx
   17320:	48 89 d1             	mov    %rdx,%rcx
   17323:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   17325:	c3                   	ret    

0000000000017326 <__memcpy_reverse>:
   17326:	f3 0f 1e fa          	endbr64 
   1732a:	e9 ff c4 ff ff       	jmp    1382e <generic_memcpy_reverse>

000000000001732f <__memmove>:
   1732f:	f3 0f 1e fa          	endbr64 
   17333:	48 39 f7             	cmp    %rsi,%rdi
   17336:	77 05                	ja     1733d <__memmove+0xe>
   17338:	e9 d0 ff ff ff       	jmp    1730d <__memcpy>
   1733d:	e9 e4 ff ff ff       	jmp    17326 <__memcpy_reverse>

0000000000017342 <tcpip_continue_chksum>:
   17342:	f3 0f 1e fa          	endbr64 
   17346:	f7 d7                	not    %edi
   17348:	53                   	push   %rbx
   17349:	31 c9                	xor    %ecx,%ecx
   1734b:	0f b7 df             	movzwl %di,%ebx
   1734e:	48 83 fa 07          	cmp    $0x7,%rdx
   17352:	76 0c                	jbe    17360 <tcpip_continue_chksum+0x1e>
   17354:	48 89 f1             	mov    %rsi,%rcx
   17357:	48 f7 d9             	neg    %rcx
   1735a:	48 d1 e9             	shr    %rcx
   1735d:	83 e1 03             	and    $0x3,%ecx
   17360:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
   17364:	4c 8d 15 95 00 00 00 	lea    0x95(%rip),%r10        # 17400 <x86_tcpip_loop_end>
   1736b:	48 ff c1             	inc    %rcx
   1736e:	48 29 c2             	sub    %rax,%rdx
   17371:	31 c0                	xor    %eax,%eax
   17373:	49 89 d0             	mov    %rdx,%r8
   17376:	48 89 d7             	mov    %rdx,%rdi
   17379:	49 89 d1             	mov    %rdx,%r9
   1737c:	83 e2 01             	and    $0x1,%edx
   1737f:	49 d1 e8             	shr    %r8
   17382:	48 c1 ef 03          	shr    $0x3,%rdi
   17386:	49 c1 e9 07          	shr    $0x7,%r9
   1738a:	41 83 e0 03          	and    $0x3,%r8d
   1738e:	83 e7 0f             	and    $0xf,%edi
   17391:	49 ff c1             	inc    %r9
   17394:	49 ff c0             	inc    %r8
   17397:	48 69 ff fb ff ff ff 	imul   $0xfffffffffffffffb,%rdi,%rdi
   1739e:	4c 01 d7             	add    %r10,%rdi
   173a1:	f8                   	clc    
   173a2:	eb 05                	jmp    173a9 <tcpip_continue_chksum+0x67>
   173a4:	66 ad                	lods   %ds:(%rsi),%ax
   173a6:	66 11 c3             	adc    %ax,%bx
   173a9:	e2 f9                	loop   173a4 <tcpip_continue_chksum+0x62>
   173ab:	4c 89 c9             	mov    %r9,%rcx
   173ae:	ff e7                	jmp    *%rdi

00000000000173b0 <x86_tcpip_loop_start>:
   173b0:	48 ad                	lods   %ds:(%rsi),%rax
   173b2:	48 11 c3             	adc    %rax,%rbx
   173b5:	48 ad                	lods   %ds:(%rsi),%rax
   173b7:	48 11 c3             	adc    %rax,%rbx
   173ba:	48 ad                	lods   %ds:(%rsi),%rax
   173bc:	48 11 c3             	adc    %rax,%rbx
   173bf:	48 ad                	lods   %ds:(%rsi),%rax
   173c1:	48 11 c3             	adc    %rax,%rbx
   173c4:	48 ad                	lods   %ds:(%rsi),%rax
   173c6:	48 11 c3             	adc    %rax,%rbx
   173c9:	48 ad                	lods   %ds:(%rsi),%rax
   173cb:	48 11 c3             	adc    %rax,%rbx
   173ce:	48 ad                	lods   %ds:(%rsi),%rax
   173d0:	48 11 c3             	adc    %rax,%rbx
   173d3:	48 ad                	lods   %ds:(%rsi),%rax
   173d5:	48 11 c3             	adc    %rax,%rbx
   173d8:	48 ad                	lods   %ds:(%rsi),%rax
   173da:	48 11 c3             	adc    %rax,%rbx
   173dd:	48 ad                	lods   %ds:(%rsi),%rax
   173df:	48 11 c3             	adc    %rax,%rbx
   173e2:	48 ad                	lods   %ds:(%rsi),%rax
   173e4:	48 11 c3             	adc    %rax,%rbx
   173e7:	48 ad                	lods   %ds:(%rsi),%rax
   173e9:	48 11 c3             	adc    %rax,%rbx
   173ec:	48 ad                	lods   %ds:(%rsi),%rax
   173ee:	48 11 c3             	adc    %rax,%rbx
   173f1:	48 ad                	lods   %ds:(%rsi),%rax
   173f3:	48 11 c3             	adc    %rax,%rbx
   173f6:	48 ad                	lods   %ds:(%rsi),%rax
   173f8:	48 11 c3             	adc    %rax,%rbx
   173fb:	48 ad                	lods   %ds:(%rsi),%rax
   173fd:	48 11 c3             	adc    %rax,%rbx

0000000000017400 <x86_tcpip_loop_end>:
   17400:	e2 ae                	loop   173b0 <x86_tcpip_loop_start>
   17402:	4c 89 c1             	mov    %r8,%rcx
   17405:	eb 05                	jmp    1740c <x86_tcpip_loop_end+0xc>
   17407:	66 ad                	lods   %ds:(%rsi),%ax
   17409:	66 11 c3             	adc    %ax,%bx
   1740c:	e2 f9                	loop   17407 <x86_tcpip_loop_end+0x7>
   1740e:	48 89 d1             	mov    %rdx,%rcx
   17411:	e2 05                	loop   17418 <x86_tcpip_loop_end+0x18>
   17413:	12 1e                	adc    (%rsi),%bl
   17415:	80 d7 00             	adc    $0x0,%bh
   17418:	53                   	push   %rbx
   17419:	66 5b                	pop    %bx
   1741b:	66 58                	pop    %ax
   1741d:	66 11 c3             	adc    %ax,%bx
   17420:	66 58                	pop    %ax
   17422:	66 11 c3             	adc    %ax,%bx
   17425:	66 58                	pop    %ax
   17427:	66 11 c3             	adc    %ax,%bx
   1742a:	66 83 d3 00          	adc    $0x0,%bx
   1742e:	66 83 d3 00          	adc    $0x0,%bx
   17432:	89 d8                	mov    %ebx,%eax
   17434:	5b                   	pop    %rbx
   17435:	f7 d0                	not    %eax
   17437:	c3                   	ret    

0000000000017438 <xfer_window>:
   17438:	f3 0f 1e fa          	endbr64 
   1743c:	41 54                	push   %r12
   1743e:	48 8d 35 f3 ff ff ff 	lea    -0xd(%rip),%rsi        # 17438 <xfer_window>
   17445:	49 83 cc ff          	or     $0xffffffffffffffff,%r12
   17449:	53                   	push   %rbx
   1744a:	48 83 ec 18          	sub    $0x18,%rsp
   1744e:	48 8b 05 1b 2b 01 00 	mov    0x12b1b(%rip),%rax        # 29f70 <__stack_chk_guard>
   17455:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1745a:	31 c0                	xor    %eax,%eax
   1745c:	48 89 e2             	mov    %rsp,%rdx
   1745f:	e8 a1 23 ff ff       	call   9805 <intf_get_dest_op_untyped>
   17464:	48 85 c0             	test   %rax,%rax
   17467:	74 14                	je     1747d <xfer_window+0x45>
   17469:	48 8b 3c 24          	mov    (%rsp),%rdi
   1746d:	48 89 c3             	mov    %rax,%rbx
   17470:	e8 3a 23 ff ff       	call   97af <intf_object>
   17475:	48 89 c7             	mov    %rax,%rdi
   17478:	ff d3                	call   *%rbx
   1747a:	49 89 c4             	mov    %rax,%r12
   1747d:	48 8b 3c 24          	mov    (%rsp),%rdi
   17481:	e8 ba 22 ff ff       	call   9740 <intf_put>
   17486:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1748b:	48 2b 05 de 2a 01 00 	sub    0x12ade(%rip),%rax        # 29f70 <__stack_chk_guard>
   17492:	74 05                	je     17499 <xfer_window+0x61>
   17494:	e8 c7 b5 fe ff       	call   2a60 <__stack_chk_fail>
   17499:	48 83 c4 18          	add    $0x18,%rsp
   1749d:	4c 89 e0             	mov    %r12,%rax
   174a0:	5b                   	pop    %rbx
   174a1:	41 5c                	pop    %r12
   174a3:	c3                   	ret    

00000000000174a4 <xfer_window_changed>:
   174a4:	f3 0f 1e fa          	endbr64 
   174a8:	48 8d 35 f5 ff ff ff 	lea    -0xb(%rip),%rsi        # 174a4 <xfer_window_changed>
   174af:	e9 8f 26 ff ff       	jmp    9b43 <intf_poke>

00000000000174b4 <xfer_vredirect>:
   174b4:	f3 0f 1e fa          	endbr64 
   174b8:	41 56                	push   %r14
   174ba:	49 89 f8             	mov    %rdi,%r8
   174bd:	b9 08 00 00 00       	mov    $0x8,%ecx
   174c2:	41 55                	push   %r13
   174c4:	49 89 d5             	mov    %rdx,%r13
   174c7:	41 54                	push   %r12
   174c9:	41 89 f4             	mov    %esi,%r12d
   174cc:	48 8d 35 ad d0 00 00 	lea    0xd0ad(%rip),%rsi        # 24580 <type_sizes+0x1c>
   174d3:	55                   	push   %rbp
   174d4:	53                   	push   %rbx
   174d5:	48 83 ec 30          	sub    $0x30,%rsp
   174d9:	48 8b 05 90 2a 01 00 	mov    0x12a90(%rip),%rax        # 29f70 <__stack_chk_guard>
   174e0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   174e5:	31 c0                	xor    %eax,%eax
   174e7:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   174ec:	48 89 e2             	mov    %rsp,%rdx
   174ef:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
   174f1:	4c 89 c7             	mov    %r8,%rdi
   174f4:	48 8d 35 b9 ff ff ff 	lea    -0x47(%rip),%rsi        # 174b4 <xfer_vredirect>
   174fb:	e8 be 22 ff ff       	call   97be <intf_get_dest_op_no_passthru_untyped>
   17500:	4c 8b 34 24          	mov    (%rsp),%r14
   17504:	48 89 c3             	mov    %rax,%rbx
   17507:	4c 89 f7             	mov    %r14,%rdi
   1750a:	e8 a0 22 ff ff       	call   97af <intf_object>
   1750f:	48 85 db             	test   %rbx,%rbx
   17512:	74 10                	je     17524 <xfer_vredirect+0x70>
   17514:	44 89 e6             	mov    %r12d,%esi
   17517:	48 89 c7             	mov    %rax,%rdi
   1751a:	4c 89 ea             	mov    %r13,%rdx
   1751d:	ff d3                	call   *%rbx
   1751f:	41 89 c4             	mov    %eax,%r12d
   17522:	eb 4b                	jmp    1756f <xfer_vredirect+0xbb>
   17524:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   17529:	4c 89 f6             	mov    %r14,%rsi
   1752c:	48 89 ef             	mov    %rbp,%rdi
   1752f:	e8 19 22 ff ff       	call   974d <intf_plug>
   17534:	48 8b 3c 24          	mov    (%rsp),%rdi
   17538:	44 89 e6             	mov    %r12d,%esi
   1753b:	4c 89 ea             	mov    %r13,%rdx
   1753e:	e8 f1 76 ff ff       	call   ec34 <xfer_vreopen>
   17543:	41 89 c4             	mov    %eax,%r12d
   17546:	85 c0                	test   %eax,%eax
   17548:	75 13                	jne    1755d <xfer_vredirect+0xa9>
   1754a:	48 8b 3c 24          	mov    (%rsp),%rdi
   1754e:	e8 51 ff ff ff       	call   174a4 <xfer_window_changed>
   17553:	48 89 ef             	mov    %rbp,%rdi
   17556:	e8 49 ff ff ff       	call   174a4 <xfer_window_changed>
   1755b:	eb 0a                	jmp    17567 <xfer_vredirect+0xb3>
   1755d:	89 c6                	mov    %eax,%esi
   1755f:	48 89 ef             	mov    %rbp,%rdi
   17562:	e8 f8 22 ff ff       	call   985f <intf_close>
   17567:	48 89 ef             	mov    %rbp,%rdi
   1756a:	e8 24 22 ff ff       	call   9793 <intf_unplug>
   1756f:	48 8b 3c 24          	mov    (%rsp),%rdi
   17573:	e8 c8 21 ff ff       	call   9740 <intf_put>
   17578:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1757d:	48 2b 05 ec 29 01 00 	sub    0x129ec(%rip),%rax        # 29f70 <__stack_chk_guard>
   17584:	74 05                	je     1758b <xfer_vredirect+0xd7>
   17586:	e8 d5 b4 fe ff       	call   2a60 <__stack_chk_fail>
   1758b:	48 83 c4 30          	add    $0x30,%rsp
   1758f:	44 89 e0             	mov    %r12d,%eax
   17592:	5b                   	pop    %rbx
   17593:	5d                   	pop    %rbp
   17594:	41 5c                	pop    %r12
   17596:	41 5d                	pop    %r13
   17598:	41 5e                	pop    %r14
   1759a:	c3                   	ret    

000000000001759b <xfer_alloc_iob>:
   1759b:	f3 0f 1e fa          	endbr64 
   1759f:	55                   	push   %rbp
   175a0:	48 89 f5             	mov    %rsi,%rbp
   175a3:	48 8d 35 f1 ff ff ff 	lea    -0xf(%rip),%rsi        # 1759b <xfer_alloc_iob>
   175aa:	53                   	push   %rbx
   175ab:	48 83 ec 28          	sub    $0x28,%rsp
   175af:	48 8b 05 ba 29 01 00 	mov    0x129ba(%rip),%rax        # 29f70 <__stack_chk_guard>
   175b6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   175bb:	31 c0                	xor    %eax,%eax
   175bd:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   175c2:	e8 3e 22 ff ff       	call   9805 <intf_get_dest_op_untyped>
   175c7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   175cc:	48 89 c3             	mov    %rax,%rbx
   175cf:	e8 db 21 ff ff       	call   97af <intf_object>
   175d4:	48 85 db             	test   %rbx,%rbx
   175d7:	74 0a                	je     175e3 <xfer_alloc_iob+0x48>
   175d9:	48 89 c7             	mov    %rax,%rdi
   175dc:	48 89 ee             	mov    %rbp,%rsi
   175df:	ff d3                	call   *%rbx
   175e1:	eb 08                	jmp    175eb <xfer_alloc_iob+0x50>
   175e3:	48 89 ef             	mov    %rbp,%rdi
   175e6:	e8 91 26 ff ff       	call   9c7c <alloc_iob>
   175eb:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   175f0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   175f5:	e8 46 21 ff ff       	call   9740 <intf_put>
   175fa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   175ff:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   17604:	48 2b 15 65 29 01 00 	sub    0x12965(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1760b:	74 05                	je     17612 <xfer_alloc_iob+0x77>
   1760d:	e8 4e b4 fe ff       	call   2a60 <__stack_chk_fail>
   17612:	48 83 c4 28          	add    $0x28,%rsp
   17616:	5b                   	pop    %rbx
   17617:	5d                   	pop    %rbp
   17618:	c3                   	ret    

0000000000017619 <xfer_deliver>:
   17619:	f3 0f 1e fa          	endbr64 
   1761d:	41 55                	push   %r13
   1761f:	49 89 d5             	mov    %rdx,%r13
   17622:	41 54                	push   %r12
   17624:	49 89 f4             	mov    %rsi,%r12
   17627:	48 8d 35 eb ff ff ff 	lea    -0x15(%rip),%rsi        # 17619 <xfer_deliver>
   1762e:	53                   	push   %rbx
   1762f:	48 83 ec 10          	sub    $0x10,%rsp
   17633:	48 8b 05 36 29 01 00 	mov    0x12936(%rip),%rax        # 29f70 <__stack_chk_guard>
   1763a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1763f:	31 c0                	xor    %eax,%eax
   17641:	48 89 e2             	mov    %rsp,%rdx
   17644:	e8 bc 21 ff ff       	call   9805 <intf_get_dest_op_untyped>
   17649:	48 8b 3c 24          	mov    (%rsp),%rdi
   1764d:	48 89 c3             	mov    %rax,%rbx
   17650:	e8 5a 21 ff ff       	call   97af <intf_object>
   17655:	48 85 db             	test   %rbx,%rbx
   17658:	74 10                	je     1766a <xfer_deliver+0x51>
   1765a:	4c 89 e6             	mov    %r12,%rsi
   1765d:	48 89 c7             	mov    %rax,%rdi
   17660:	4c 89 ea             	mov    %r13,%rdx
   17663:	ff d3                	call   *%rbx
   17665:	41 89 c4             	mov    %eax,%r12d
   17668:	eb 0e                	jmp    17678 <xfer_deliver+0x5f>
   1766a:	4c 89 e7             	mov    %r12,%rdi
   1766d:	e8 24 26 ff ff       	call   9c96 <free_iob>
   17672:	41 bc 6b df f1 bd    	mov    $0xbdf1df6b,%r12d
   17678:	48 8b 3c 24          	mov    (%rsp),%rdi
   1767c:	e8 bf 20 ff ff       	call   9740 <intf_put>
   17681:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17686:	48 2b 05 e3 28 01 00 	sub    0x128e3(%rip),%rax        # 29f70 <__stack_chk_guard>
   1768d:	74 05                	je     17694 <xfer_deliver+0x7b>
   1768f:	e8 cc b3 fe ff       	call   2a60 <__stack_chk_fail>
   17694:	48 83 c4 10          	add    $0x10,%rsp
   17698:	44 89 e0             	mov    %r12d,%eax
   1769b:	5b                   	pop    %rbx
   1769c:	41 5c                	pop    %r12
   1769e:	41 5d                	pop    %r13
   176a0:	c3                   	ret    

00000000000176a1 <xfer_redirect>:
   176a1:	f3 0f 1e fa          	endbr64 
   176a5:	48 83 ec 58          	sub    $0x58,%rsp
   176a9:	48 8b 05 c0 28 01 00 	mov    0x128c0(%rip),%rax        # 29f70 <__stack_chk_guard>
   176b0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   176b5:	31 c0                	xor    %eax,%eax
   176b7:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   176bc:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   176c1:	48 89 e2             	mov    %rsp,%rdx
   176c4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   176c9:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   176ce:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   176d3:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   176d8:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   176dd:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   176e4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   176e9:	e8 c6 fd ff ff       	call   174b4 <xfer_vredirect>
   176ee:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   176f3:	48 2b 15 76 28 01 00 	sub    0x12876(%rip),%rdx        # 29f70 <__stack_chk_guard>
   176fa:	74 05                	je     17701 <xfer_redirect+0x60>
   176fc:	e8 5f b3 fe ff       	call   2a60 <__stack_chk_fail>
   17701:	48 83 c4 58          	add    $0x58,%rsp
   17705:	c3                   	ret    

0000000000017706 <xfer_deliver_iob>:
   17706:	f3 0f 1e fa          	endbr64 
   1770a:	48 8d 15 cf 26 01 00 	lea    0x126cf(%rip),%rdx        # 29de0 <dummy_metadata>
   17711:	e9 03 ff ff ff       	jmp    17619 <xfer_deliver>

0000000000017716 <xfer_deliver_raw_meta>:
   17716:	f3 0f 1e fa          	endbr64 
   1771a:	41 57                	push   %r15
   1771c:	49 89 f7             	mov    %rsi,%r15
   1771f:	48 89 d6             	mov    %rdx,%rsi
   17722:	41 56                	push   %r14
   17724:	49 89 ce             	mov    %rcx,%r14
   17727:	41 55                	push   %r13
   17729:	49 89 fd             	mov    %rdi,%r13
   1772c:	55                   	push   %rbp
   1772d:	48 83 ec 18          	sub    $0x18,%rsp
   17731:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   17736:	e8 60 fe ff ff       	call   1759b <xfer_alloc_iob>
   1773b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   17740:	48 85 c0             	test   %rax,%rax
   17743:	74 30                	je     17775 <xfer_deliver_raw_meta+0x5f>
   17745:	48 8b 78 20          	mov    0x20(%rax),%rdi
   17749:	48 89 c5             	mov    %rax,%rbp
   1774c:	4c 89 fe             	mov    %r15,%rsi
   1774f:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   17753:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17757:	e8 b1 fb ff ff       	call   1730d <__memcpy>
   1775c:	48 83 c4 18          	add    $0x18,%rsp
   17760:	4c 89 f2             	mov    %r14,%rdx
   17763:	48 89 ee             	mov    %rbp,%rsi
   17766:	4c 89 ef             	mov    %r13,%rdi
   17769:	5d                   	pop    %rbp
   1776a:	41 5d                	pop    %r13
   1776c:	41 5e                	pop    %r14
   1776e:	41 5f                	pop    %r15
   17770:	e9 a4 fe ff ff       	jmp    17619 <xfer_deliver>
   17775:	48 83 c4 18          	add    $0x18,%rsp
   17779:	b8 77 df f1 ce       	mov    $0xcef1df77,%eax
   1777e:	5d                   	pop    %rbp
   1777f:	41 5d                	pop    %r13
   17781:	41 5e                	pop    %r14
   17783:	41 5f                	pop    %r15
   17785:	c3                   	ret    

0000000000017786 <xfer_deliver_raw>:
   17786:	f3 0f 1e fa          	endbr64 
   1778a:	48 8d 0d 4f 26 01 00 	lea    0x1264f(%rip),%rcx        # 29de0 <dummy_metadata>
   17791:	e9 80 ff ff ff       	jmp    17716 <xfer_deliver_raw_meta>

0000000000017796 <xfer_seek>:
   17796:	f3 0f 1e fa          	endbr64 
   1779a:	55                   	push   %rbp
   1779b:	b9 0a 00 00 00       	mov    $0xa,%ecx
   177a0:	48 89 fd             	mov    %rdi,%rbp
   177a3:	48 83 ec 30          	sub    $0x30,%rsp
   177a7:	48 8b 05 c2 27 01 00 	mov    0x127c2(%rip),%rax        # 29f70 <__stack_chk_guard>
   177ae:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   177b3:	31 c0                	xor    %eax,%eax
   177b5:	48 89 e7             	mov    %rsp,%rdi
   177b8:	f3 ab                	rep stos %eax,%es:(%rdi)
   177ba:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   177bf:	48 89 ef             	mov    %rbp,%rdi
   177c2:	31 f6                	xor    %esi,%esi
   177c4:	c7 04 24 01 00 00 00 	movl   $0x1,(%rsp)
   177cb:	e8 cb fd ff ff       	call   1759b <xfer_alloc_iob>
   177d0:	48 85 c0             	test   %rax,%rax
   177d3:	75 07                	jne    177dc <xfer_seek+0x46>
   177d5:	b8 77 df f1 ce       	mov    $0xcef1df77,%eax
   177da:	eb 0e                	jmp    177ea <xfer_seek+0x54>
   177dc:	48 89 c6             	mov    %rax,%rsi
   177df:	48 89 e2             	mov    %rsp,%rdx
   177e2:	48 89 ef             	mov    %rbp,%rdi
   177e5:	e8 2f fe ff ff       	call   17619 <xfer_deliver>
   177ea:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   177ef:	48 2b 15 7a 27 01 00 	sub    0x1277a(%rip),%rdx        # 29f70 <__stack_chk_guard>
   177f6:	74 05                	je     177fd <xfer_seek+0x67>
   177f8:	e8 63 b2 fe ff       	call   2a60 <__stack_chk_fail>
   177fd:	48 83 c4 30          	add    $0x30,%rsp
   17801:	5d                   	pop    %rbp
   17802:	c3                   	ret    

0000000000017803 <xferbuf_malloc_write>:
   17803:	f3 0f 1e fa          	endbr64 
   17807:	49 89 d0             	mov    %rdx,%r8
   1780a:	48 03 37             	add    (%rdi),%rsi
   1780d:	48 89 ca             	mov    %rcx,%rdx
   17810:	48 89 f7             	mov    %rsi,%rdi
   17813:	4c 89 c6             	mov    %r8,%rsi
   17816:	e9 f2 fa ff ff       	jmp    1730d <__memcpy>

000000000001781b <xferbuf_malloc_read>:
   1781b:	f3 0f 1e fa          	endbr64 
   1781f:	49 89 f8             	mov    %rdi,%r8
   17822:	48 89 d7             	mov    %rdx,%rdi
   17825:	48 89 ca             	mov    %rcx,%rdx
   17828:	49 03 30             	add    (%r8),%rsi
   1782b:	e9 dd fa ff ff       	jmp    1730d <__memcpy>

0000000000017830 <xferbuf_umalloc_write>:
   17830:	f3 0f 1e fa          	endbr64 
   17834:	48 8b 07             	mov    (%rdi),%rax
   17837:	49 89 d0             	mov    %rdx,%r8
   1783a:	48 89 ca             	mov    %rcx,%rdx
   1783d:	48 03 30             	add    (%rax),%rsi
   17840:	48 89 f7             	mov    %rsi,%rdi
   17843:	4c 89 c6             	mov    %r8,%rsi
   17846:	e9 c2 fa ff ff       	jmp    1730d <__memcpy>

000000000001784b <xferbuf_umalloc_read>:
   1784b:	f3 0f 1e fa          	endbr64 
   1784f:	49 89 f8             	mov    %rdi,%r8
   17852:	48 89 d7             	mov    %rdx,%rdi
   17855:	48 89 ca             	mov    %rcx,%rdx
   17858:	49 8b 00             	mov    (%r8),%rax
   1785b:	48 03 30             	add    (%rax),%rsi
   1785e:	e9 aa fa ff ff       	jmp    1730d <__memcpy>

0000000000017863 <xfer_buffer>:
   17863:	f3 0f 1e fa          	endbr64 
   17867:	41 54                	push   %r12
   17869:	48 8d 35 f3 ff ff ff 	lea    -0xd(%rip),%rsi        # 17863 <xfer_buffer>
   17870:	49 89 fc             	mov    %rdi,%r12
   17873:	55                   	push   %rbp
   17874:	53                   	push   %rbx
   17875:	48 83 ec 20          	sub    $0x20,%rsp
   17879:	48 8b 05 f0 26 01 00 	mov    0x126f0(%rip),%rax        # 29f70 <__stack_chk_guard>
   17880:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   17885:	31 c0                	xor    %eax,%eax
   17887:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1788c:	e8 74 1f ff ff       	call   9805 <intf_get_dest_op_untyped>
   17891:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17896:	48 89 c3             	mov    %rax,%rbx
   17899:	e8 11 1f ff ff       	call   97af <intf_object>
   1789e:	4c 89 e7             	mov    %r12,%rdi
   178a1:	45 31 e4             	xor    %r12d,%r12d
   178a4:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   178a9:	48 8d 35 69 fd ff ff 	lea    -0x297(%rip),%rsi        # 17619 <xfer_deliver>
   178b0:	48 89 c5             	mov    %rax,%rbp
   178b3:	e8 4d 1f ff ff       	call   9805 <intf_get_dest_op_untyped>
   178b8:	48 85 db             	test   %rbx,%rbx
   178bb:	74 14                	je     178d1 <xfer_buffer+0x6e>
   178bd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   178c2:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
   178c7:	75 08                	jne    178d1 <xfer_buffer+0x6e>
   178c9:	48 89 ef             	mov    %rbp,%rdi
   178cc:	ff d3                	call   *%rbx
   178ce:	49 89 c4             	mov    %rax,%r12
   178d1:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   178d6:	e8 65 1e ff ff       	call   9740 <intf_put>
   178db:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   178e0:	e8 5b 1e ff ff       	call   9740 <intf_put>
   178e5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   178ea:	48 2b 05 7f 26 01 00 	sub    0x1267f(%rip),%rax        # 29f70 <__stack_chk_guard>
   178f1:	74 05                	je     178f8 <xfer_buffer+0x95>
   178f3:	e8 68 b1 fe ff       	call   2a60 <__stack_chk_fail>
   178f8:	48 83 c4 20          	add    $0x20,%rsp
   178fc:	4c 89 e0             	mov    %r12,%rax
   178ff:	5b                   	pop    %rbx
   17900:	5d                   	pop    %rbp
   17901:	41 5c                	pop    %r12
   17903:	c3                   	ret    

0000000000017904 <xferbuf_malloc_realloc>:
   17904:	f3 0f 1e fa          	endbr64 
   17908:	53                   	push   %rbx
   17909:	48 89 fb             	mov    %rdi,%rbx
   1790c:	48 8b 3f             	mov    (%rdi),%rdi
   1790f:	e8 36 4c ff ff       	call   c54a <realloc>
   17914:	48 85 c0             	test   %rax,%rax
   17917:	75 07                	jne    17920 <xferbuf_malloc_realloc+0x1c>
   17919:	b8 75 df e7 cb       	mov    $0xcbe7df75,%eax
   1791e:	eb 05                	jmp    17925 <xferbuf_malloc_realloc+0x21>
   17920:	48 89 03             	mov    %rax,(%rbx)
   17923:	31 c0                	xor    %eax,%eax
   17925:	5b                   	pop    %rbx
   17926:	c3                   	ret    

0000000000017927 <xferbuf_umalloc_realloc>:
   17927:	f3 0f 1e fa          	endbr64 
   1792b:	53                   	push   %rbx
   1792c:	48 8b 1f             	mov    (%rdi),%rbx
   1792f:	48 8b 3b             	mov    (%rbx),%rdi
   17932:	e8 5e 5e 00 00       	call   1d795 <urealloc>
   17937:	48 85 c0             	test   %rax,%rax
   1793a:	75 07                	jne    17943 <xferbuf_umalloc_realloc+0x1c>
   1793c:	b8 75 df e7 cb       	mov    $0xcbe7df75,%eax
   17941:	eb 05                	jmp    17948 <xferbuf_umalloc_realloc+0x21>
   17943:	48 89 03             	mov    %rax,(%rbx)
   17946:	31 c0                	xor    %eax,%eax
   17948:	5b                   	pop    %rbx
   17949:	c3                   	ret    

000000000001794a <xferbuf_write>:
   1794a:	f3 0f 1e fa          	endbr64 
   1794e:	41 54                	push   %r12
   17950:	53                   	push   %rbx
   17951:	48 89 f3             	mov    %rsi,%rbx
   17954:	48 83 ec 28          	sub    $0x28,%rsp
   17958:	48 01 cb             	add    %rcx,%rbx
   1795b:	72 0f                	jb     1796c <xferbuf_write+0x22>
   1795d:	48 8b 47 18          	mov    0x18(%rdi),%rax
   17961:	49 89 f4             	mov    %rsi,%r12
   17964:	48 3b 5f 08          	cmp    0x8(%rdi),%rbx
   17968:	77 09                	ja     17973 <xferbuf_write+0x29>
   1796a:	eb 32                	jmp    1799e <xferbuf_write+0x54>
   1796c:	b8 7b df e7 bf       	mov    $0xbfe7df7b,%eax
   17971:	eb 37                	jmp    179aa <xferbuf_write+0x60>
   17973:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   17978:	48 89 de             	mov    %rbx,%rsi
   1797b:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   17980:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   17985:	ff 10                	call   *(%rax)
   17987:	85 c0                	test   %eax,%eax
   17989:	75 1f                	jne    179aa <xferbuf_write+0x60>
   1798b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17990:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   17995:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1799a:	48 89 5f 08          	mov    %rbx,0x8(%rdi)
   1799e:	48 8b 47 18          	mov    0x18(%rdi),%rax
   179a2:	4c 89 e6             	mov    %r12,%rsi
   179a5:	ff 50 08             	call   *0x8(%rax)
   179a8:	31 c0                	xor    %eax,%eax
   179aa:	48 83 c4 28          	add    $0x28,%rsp
   179ae:	5b                   	pop    %rbx
   179af:	41 5c                	pop    %r12
   179b1:	c3                   	ret    

00000000000179b2 <xferbuf_deliver>:
   179b2:	f3 0f 1e fa          	endbr64 
   179b6:	41 56                	push   %r14
   179b8:	31 c9                	xor    %ecx,%ecx
   179ba:	41 54                	push   %r12
   179bc:	49 89 fc             	mov    %rdi,%r12
   179bf:	55                   	push   %rbp
   179c0:	48 89 f5             	mov    %rsi,%rbp
   179c3:	53                   	push   %rbx
   179c4:	48 83 ec 18          	sub    $0x18,%rsp
   179c8:	4c 8b 46 18          	mov    0x18(%rsi),%r8
   179cc:	4c 8b 76 20          	mov    0x20(%rsi),%r14
   179d0:	48 8b 47 10          	mov    0x10(%rdi),%rax
   179d4:	4d 29 c6             	sub    %r8,%r14
   179d7:	f6 02 01             	testb  $0x1,(%rdx)
   179da:	48 0f 45 c1          	cmovne %rcx,%rax
   179de:	48 03 42 08          	add    0x8(%rdx),%rax
   179e2:	4c 89 f1             	mov    %r14,%rcx
   179e5:	4c 89 c2             	mov    %r8,%rdx
   179e8:	48 89 c6             	mov    %rax,%rsi
   179eb:	48 89 c3             	mov    %rax,%rbx
   179ee:	e8 57 ff ff ff       	call   1794a <xferbuf_write>
   179f3:	85 c0                	test   %eax,%eax
   179f5:	75 08                	jne    179ff <xferbuf_deliver+0x4d>
   179f7:	4c 01 f3             	add    %r14,%rbx
   179fa:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
   179ff:	48 89 ef             	mov    %rbp,%rdi
   17a02:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   17a06:	e8 8b 22 ff ff       	call   9c96 <free_iob>
   17a0b:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   17a0f:	48 83 c4 18          	add    $0x18,%rsp
   17a13:	5b                   	pop    %rbx
   17a14:	5d                   	pop    %rbp
   17a15:	41 5c                	pop    %r12
   17a17:	41 5e                	pop    %r14
   17a19:	c3                   	ret    

0000000000017a1a <acpi_describe>:
   17a1a:	f3 0f 1e fa          	endbr64 
   17a1e:	41 54                	push   %r12
   17a20:	48 8d 35 f3 ff ff ff 	lea    -0xd(%rip),%rsi        # 17a1a <acpi_describe>
   17a27:	45 31 e4             	xor    %r12d,%r12d
   17a2a:	53                   	push   %rbx
   17a2b:	48 83 ec 18          	sub    $0x18,%rsp
   17a2f:	48 8b 05 3a 25 01 00 	mov    0x1253a(%rip),%rax        # 29f70 <__stack_chk_guard>
   17a36:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   17a3b:	31 c0                	xor    %eax,%eax
   17a3d:	48 89 e2             	mov    %rsp,%rdx
   17a40:	e8 c0 1d ff ff       	call   9805 <intf_get_dest_op_untyped>
   17a45:	48 8b 3c 24          	mov    (%rsp),%rdi
   17a49:	48 89 c3             	mov    %rax,%rbx
   17a4c:	e8 5e 1d ff ff       	call   97af <intf_object>
   17a51:	48 85 db             	test   %rbx,%rbx
   17a54:	74 08                	je     17a5e <acpi_describe+0x44>
   17a56:	48 89 c7             	mov    %rax,%rdi
   17a59:	ff d3                	call   *%rbx
   17a5b:	49 89 c4             	mov    %rax,%r12
   17a5e:	48 8b 3c 24          	mov    (%rsp),%rdi
   17a62:	e8 d9 1c ff ff       	call   9740 <intf_put>
   17a67:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   17a6c:	48 2b 05 fd 24 01 00 	sub    0x124fd(%rip),%rax        # 29f70 <__stack_chk_guard>
   17a73:	74 05                	je     17a7a <acpi_describe+0x60>
   17a75:	e8 e6 af fe ff       	call   2a60 <__stack_chk_fail>
   17a7a:	48 83 c4 18          	add    $0x18,%rsp
   17a7e:	4c 89 e0             	mov    %r12,%rax
   17a81:	5b                   	pop    %rbx
   17a82:	41 5c                	pop    %r12
   17a84:	c3                   	ret    

0000000000017a85 <acpi_fix_checksum>:
   17a85:	f3 0f 1e fa          	endbr64 
   17a89:	8b 4f 04             	mov    0x4(%rdi),%ecx
   17a8c:	31 c0                	xor    %eax,%eax
   17a8e:	31 d2                	xor    %edx,%edx
   17a90:	39 c1                	cmp    %eax,%ecx
   17a92:	76 08                	jbe    17a9c <acpi_fix_checksum+0x17>
   17a94:	03 14 07             	add    (%rdi,%rax,1),%edx
   17a97:	48 ff c0             	inc    %rax
   17a9a:	eb f4                	jmp    17a90 <acpi_fix_checksum+0xb>
   17a9c:	28 57 09             	sub    %dl,0x9(%rdi)
   17a9f:	c3                   	ret    

0000000000017aa0 <acpi_add>:
   17aa0:	f3 0f 1e fa          	endbr64 
   17aa4:	53                   	push   %rbx
   17aa5:	48 89 fb             	mov    %rdi,%rbx
   17aa8:	48 8b 3f             	mov    (%rdi),%rdi
   17aab:	e8 82 83 ff ff       	call   fe32 <ref_increment>
   17ab0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   17ab4:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   17ab8:	5b                   	pop    %rbx
   17ab9:	e9 19 46 ff ff       	jmp    c0d7 <extern_list_add_tail>

0000000000017abe <acpi_del>:
   17abe:	f3 0f 1e fa          	endbr64 
   17ac2:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   17ac6:	48 8b 47 18          	mov    0x18(%rdi),%rax
   17aca:	48 8b 3f             	mov    (%rdi),%rdi
   17acd:	48 89 42 08          	mov    %rax,0x8(%rdx)
   17ad1:	48 89 10             	mov    %rdx,(%rax)
   17ad4:	e9 65 83 ff ff       	jmp    fe3e <ref_decrement>

0000000000017ad9 <acpi_install>:
   17ad9:	f3 0f 1e fa          	endbr64 
   17add:	41 54                	push   %r12
   17adf:	4c 8d 25 fa 08 01 00 	lea    0x108fa(%rip),%r12        # 283e0 <ipv4_arp_protocol>
   17ae6:	55                   	push   %rbp
   17ae7:	48 89 fd             	mov    %rdi,%rbp
   17aea:	53                   	push   %rbx
   17aeb:	48 8d 1d ae 08 01 00 	lea    0x108ae(%rip),%rbx        # 283a0 <ibft_model>
   17af2:	4c 39 e3             	cmp    %r12,%rbx
   17af5:	73 10                	jae    17b07 <acpi_install+0x2e>
   17af7:	48 89 ef             	mov    %rbp,%rdi
   17afa:	ff 53 18             	call   *0x18(%rbx)
   17afd:	85 c0                	test   %eax,%eax
   17aff:	75 08                	jne    17b09 <acpi_install+0x30>
   17b01:	48 83 c3 20          	add    $0x20,%rbx
   17b05:	eb eb                	jmp    17af2 <acpi_install+0x19>
   17b07:	31 c0                	xor    %eax,%eax
   17b09:	5b                   	pop    %rbx
   17b0a:	5d                   	pop    %rbp
   17b0b:	41 5c                	pop    %r12
   17b0d:	c3                   	ret    

0000000000017b0e <ansiscr_cursor>:
   17b0e:	f3 0f 1e fa          	endbr64 
   17b12:	83 fe 01             	cmp    $0x1,%esi
   17b15:	48 8d 3d 2d c2 00 00 	lea    0xc22d(%rip),%rdi        # 23d49 <.LC0>
   17b1c:	19 f6                	sbb    %esi,%esi
   17b1e:	31 c0                	xor    %eax,%eax
   17b20:	83 e6 04             	and    $0x4,%esi
   17b23:	83 c6 68             	add    $0x68,%esi
   17b26:	e9 73 f6 ff ff       	jmp    1719e <printf>

0000000000017b2b <ansiscr_movetoyx>:
   17b2b:	f3 0f 1e fa          	endbr64 
   17b2f:	41 54                	push   %r12
   17b31:	41 89 d4             	mov    %edx,%r12d
   17b34:	55                   	push   %rbp
   17b35:	89 f5                	mov    %esi,%ebp
   17b37:	53                   	push   %rbx
   17b38:	48 89 fb             	mov    %rdi,%rbx
   17b3b:	39 17                	cmp    %edx,(%rdi)
   17b3d:	75 05                	jne    17b44 <ansiscr_movetoyx+0x19>
   17b3f:	39 77 04             	cmp    %esi,0x4(%rdi)
   17b42:	74 1c                	je     17b60 <ansiscr_movetoyx+0x35>
   17b44:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   17b49:	8d 75 01             	lea    0x1(%rbp),%esi
   17b4c:	31 c0                	xor    %eax,%eax
   17b4e:	48 8d 3d fc c1 00 00 	lea    0xc1fc(%rip),%rdi        # 23d51 <.LC1>
   17b55:	e8 44 f6 ff ff       	call   1719e <printf>
   17b5a:	44 89 23             	mov    %r12d,(%rbx)
   17b5d:	89 6b 04             	mov    %ebp,0x4(%rbx)
   17b60:	5b                   	pop    %rbx
   17b61:	5d                   	pop    %rbp
   17b62:	41 5c                	pop    %r12
   17b64:	c3                   	ret    

0000000000017b65 <ansiscr_peek>:
   17b65:	f3 0f 1e fa          	endbr64 
   17b69:	50                   	push   %rax
   17b6a:	e8 20 17 00 00       	call   1928f <iskey>
   17b6f:	5a                   	pop    %rdx
   17b70:	85 c0                	test   %eax,%eax
   17b72:	0f 95 c0             	setne  %al
   17b75:	c3                   	ret    

0000000000017b76 <ansiscr_getc>:
   17b76:	f3 0f 1e fa          	endbr64 
   17b7a:	e9 dc 16 00 00       	jmp    1925b <getchar>

0000000000017b7f <ansiscr_attrs>:
   17b7f:	39 77 08             	cmp    %esi,0x8(%rdi)
   17b82:	74 2e                	je     17bb2 <ansiscr_attrs+0x33>
   17b84:	89 f0                	mov    %esi,%eax
   17b86:	53                   	push   %rbx
   17b87:	89 f3                	mov    %esi,%ebx
   17b89:	25 00 00 04 00       	and    $0x40000,%eax
   17b8e:	89 77 08             	mov    %esi,0x8(%rdi)
   17b91:	48 8d 3d c2 c1 00 00 	lea    0xc1c2(%rip),%rdi        # 23d5a <.LC2>
   17b98:	83 f8 01             	cmp    $0x1,%eax
   17b9b:	19 f6                	sbb    %esi,%esi
   17b9d:	31 c0                	xor    %eax,%eax
   17b9f:	83 e6 15             	and    $0x15,%esi
   17ba2:	ff c6                	inc    %esi
   17ba4:	e8 f5 f5 ff ff       	call   1719e <printf>
   17ba9:	0f b6 ff             	movzbl %bh,%edi
   17bac:	5b                   	pop    %rbx
   17bad:	e9 f7 00 00 00       	jmp    17ca9 <ansicol_set_pair>
   17bb2:	c3                   	ret    

0000000000017bb3 <ansiscr_erase>:
   17bb3:	f3 0f 1e fa          	endbr64 
   17bb7:	50                   	push   %rax
   17bb8:	e8 c2 ff ff ff       	call   17b7f <ansiscr_attrs>
   17bbd:	48 8d 3d 9e c1 00 00 	lea    0xc19e(%rip),%rdi        # 23d62 <.LC3>
   17bc4:	31 c0                	xor    %eax,%eax
   17bc6:	5a                   	pop    %rdx
   17bc7:	e9 d2 f5 ff ff       	jmp    1719e <printf>

0000000000017bcc <ansiscr_exit>:
   17bcc:	f3 0f 1e fa          	endbr64 
   17bd0:	50                   	push   %rax
   17bd1:	31 c0                	xor    %eax,%eax
   17bd3:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   17bda:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
   17be1:	48 8d 3d 7f c1 00 00 	lea    0xc17f(%rip),%rdi        # 23d67 <.LC4>
   17be8:	e8 b1 f5 ff ff       	call   1719e <printf>
   17bed:	31 ff                	xor    %edi,%edi
   17bef:	e8 b5 00 00 00       	call   17ca9 <ansicol_set_pair>
   17bf4:	48 8d 3d 67 c1 00 00 	lea    0xc167(%rip),%rdi        # 23d62 <.LC3>
   17bfb:	31 c0                	xor    %eax,%eax
   17bfd:	e8 9c f5 ff ff       	call   1719e <printf>
   17c02:	8b 05 04 22 01 00    	mov    0x12204(%rip),%eax        # 29e0c <saved_usage>
   17c08:	89 05 aa c9 00 00    	mov    %eax,0xc9aa(%rip)        # 245b8 <console_usage>
   17c0e:	5a                   	pop    %rdx
   17c0f:	c3                   	ret    

0000000000017c10 <ansiscr_putc>:
   17c10:	f3 0f 1e fa          	endbr64 
   17c14:	55                   	push   %rbp
   17c15:	89 f5                	mov    %esi,%ebp
   17c17:	40 30 f6             	xor    %sil,%sil
   17c1a:	53                   	push   %rbx
   17c1b:	48 89 fb             	mov    %rdi,%rbx
   17c1e:	52                   	push   %rdx
   17c1f:	e8 5b ff ff ff       	call   17b7f <ansiscr_attrs>
   17c24:	40 0f b6 fd          	movzbl %bpl,%edi
   17c28:	e8 21 16 00 00       	call   1924e <putchar>
   17c2d:	8b 03                	mov    (%rbx),%eax
   17c2f:	ff c0                	inc    %eax
   17c31:	3b 05 7d c9 00 00    	cmp    0xc97d(%rip),%eax        # 245b4 <console_width>
   17c37:	89 03                	mov    %eax,(%rbx)
   17c39:	75 09                	jne    17c44 <ansiscr_putc+0x34>
   17c3b:	ff 43 04             	incl   0x4(%rbx)
   17c3e:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
   17c44:	58                   	pop    %rax
   17c45:	5b                   	pop    %rbx
   17c46:	5d                   	pop    %rbp
   17c47:	c3                   	ret    

0000000000017c48 <ansiscr_init>:
   17c48:	f3 0f 1e fa          	endbr64 
   17c4c:	50                   	push   %rax
   17c4d:	8b 05 65 c9 00 00    	mov    0xc965(%rip),%eax        # 245b8 <console_usage>
   17c53:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
   17c5a:	c7 05 54 c9 00 00 04 	movl   $0x4,0xc954(%rip)        # 245b8 <console_usage>
   17c61:	00 00 00 
   17c64:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   17c6b:	48 8d 3d f5 c0 00 00 	lea    0xc0f5(%rip),%rdi        # 23d67 <.LC4>
   17c72:	89 05 94 21 01 00    	mov    %eax,0x12194(%rip)        # 29e0c <saved_usage>
   17c78:	31 c0                	xor    %eax,%eax
   17c7a:	e8 1f f5 ff ff       	call   1719e <printf>
   17c7f:	31 ff                	xor    %edi,%edi
   17c81:	e8 23 00 00 00       	call   17ca9 <ansicol_set_pair>
   17c86:	48 8d 3d d5 c0 00 00 	lea    0xc0d5(%rip),%rdi        # 23d62 <.LC3>
   17c8d:	31 c0                	xor    %eax,%eax
   17c8f:	5a                   	pop    %rdx
   17c90:	e9 09 f5 ff ff       	jmp    1719e <printf>

0000000000017c95 <ansicol_set>:
   17c95:	f3 0f 1e fa          	endbr64 
   17c99:	89 fa                	mov    %edi,%edx
   17c9b:	31 c0                	xor    %eax,%eax
   17c9d:	48 8d 3d c7 c0 00 00 	lea    0xc0c7(%rip),%rdi        # 23d6b <.LC0>
   17ca4:	e9 f5 f4 ff ff       	jmp    1719e <printf>

0000000000017ca9 <ansicol_set_pair>:
   17ca9:	f3 0f 1e fa          	endbr64 
   17cad:	55                   	push   %rbp
   17cae:	48 8d 2d eb c8 00 00 	lea    0xc8eb(%rip),%rbp        # 245a0 <ansicol_pairs>
   17cb5:	be 33 00 00 00       	mov    $0x33,%esi
   17cba:	53                   	push   %rbx
   17cbb:	89 fb                	mov    %edi,%ebx
   17cbd:	50                   	push   %rax
   17cbe:	0f b6 7c 5d 00       	movzbl 0x0(%rbp,%rbx,2),%edi
   17cc3:	e8 cd ff ff ff       	call   17c95 <ansicol_set>
   17cc8:	0f b6 7c 5d 01       	movzbl 0x1(%rbp,%rbx,2),%edi
   17ccd:	be 34 00 00 00       	mov    $0x34,%esi
   17cd2:	5a                   	pop    %rdx
   17cd3:	5b                   	pop    %rbx
   17cd4:	5d                   	pop    %rbp
   17cd5:	e9 bb ff ff ff       	jmp    17c95 <ansicol_set>

0000000000017cda <ansiesc_process>:
   17cda:	f3 0f 1e fa          	endbr64 
   17cde:	89 f0                	mov    %esi,%eax
   17ce0:	8b 77 08             	mov    0x8(%rdi),%esi
   17ce3:	49 89 f8             	mov    %rdi,%r8
   17ce6:	85 f6                	test   %esi,%esi
   17ce8:	75 2a                	jne    17d14 <ansiesc_process+0x3a>
   17cea:	83 f8 1b             	cmp    $0x1b,%eax
   17ced:	0f 85 b1 00 00 00    	jne    17da4 <ansiesc_process+0xca>
   17cf3:	c7 47 08 01 00 00 00 	movl   $0x1,0x8(%rdi)
   17cfa:	b9 14 00 00 00       	mov    $0x14,%ecx
   17cff:	48 8d 7f 0c          	lea    0xc(%rdi),%rdi
   17d03:	b8 ff 00 00 00       	mov    $0xff,%eax
   17d08:	f3 aa                	rep stos %al,%es:(%rdi)
   17d0a:	41 c7 40 20 00 00 00 	movl   $0x0,0x20(%r8)
   17d11:	00 
   17d12:	eb 5f                	jmp    17d73 <ansiesc_process+0x99>
   17d14:	83 f8 5b             	cmp    $0x5b,%eax
   17d17:	74 5a                	je     17d73 <ansiesc_process+0x99>
   17d19:	8d 48 d0             	lea    -0x30(%rax),%ecx
   17d1c:	83 f9 09             	cmp    $0x9,%ecx
   17d1f:	77 1f                	ja     17d40 <ansiesc_process+0x66>
   17d21:	8d 46 ff             	lea    -0x1(%rsi),%eax
   17d24:	48 8d 04 87          	lea    (%rdi,%rax,4),%rax
   17d28:	83 78 0c 00          	cmpl   $0x0,0xc(%rax)
   17d2c:	79 07                	jns    17d35 <ansiesc_process+0x5b>
   17d2e:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   17d35:	6b 50 0c 0a          	imul   $0xa,0xc(%rax),%edx
   17d39:	01 ca                	add    %ecx,%edx
   17d3b:	89 50 0c             	mov    %edx,0xc(%rax)
   17d3e:	eb 33                	jmp    17d73 <ansiesc_process+0x99>
   17d40:	83 f8 3b             	cmp    $0x3b,%eax
   17d43:	75 15                	jne    17d5a <ansiesc_process+0x80>
   17d45:	ff c6                	inc    %esi
   17d47:	83 fe 05             	cmp    $0x5,%esi
   17d4a:	77 05                	ja     17d51 <ansiesc_process+0x77>
   17d4c:	89 77 08             	mov    %esi,0x8(%rdi)
   17d4f:	eb 22                	jmp    17d73 <ansiesc_process+0x99>
   17d51:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
   17d58:	eb 19                	jmp    17d73 <ansiesc_process+0x99>
   17d5a:	8b 57 20             	mov    0x20(%rdi),%edx
   17d5d:	8d 48 e0             	lea    -0x20(%rax),%ecx
   17d60:	c1 e2 08             	shl    $0x8,%edx
   17d63:	09 c2                	or     %eax,%edx
   17d65:	83 f9 0f             	cmp    $0xf,%ecx
   17d68:	76 05                	jbe    17d6f <ansiesc_process+0x95>
   17d6a:	83 f8 3f             	cmp    $0x3f,%eax
   17d6d:	75 08                	jne    17d77 <ansiesc_process+0x9d>
   17d6f:	41 89 50 20          	mov    %edx,0x20(%r8)
   17d73:	83 c8 ff             	or     $0xffffffff,%eax
   17d76:	c3                   	ret    
   17d77:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
   17d7e:	48 8b 07             	mov    (%rdi),%rax
   17d81:	89 57 20             	mov    %edx,0x20(%rdi)
   17d84:	8b 08                	mov    (%rax),%ecx
   17d86:	85 c9                	test   %ecx,%ecx
   17d88:	74 e9                	je     17d73 <ansiesc_process+0x99>
   17d8a:	39 d1                	cmp    %edx,%ecx
   17d8c:	75 10                	jne    17d9e <ansiesc_process+0xc4>
   17d8e:	4c 89 c7             	mov    %r8,%rdi
   17d91:	52                   	push   %rdx
   17d92:	49 8d 50 0c          	lea    0xc(%r8),%rdx
   17d96:	ff 50 08             	call   *0x8(%rax)
   17d99:	83 c8 ff             	or     $0xffffffff,%eax
   17d9c:	59                   	pop    %rcx
   17d9d:	c3                   	ret    
   17d9e:	48 83 c0 10          	add    $0x10,%rax
   17da2:	eb e0                	jmp    17d84 <ansiesc_process+0xaa>
   17da4:	c3                   	ret    

0000000000017da5 <arp_ntoa>:
   17da5:	f3 0f 1e fa          	endbr64 
   17da9:	48 8d 05 c3 bf 00 00 	lea    0xbfc3(%rip),%rax        # 23d73 <.LC0>
   17db0:	c3                   	ret    

0000000000017db1 <arp_tx_request>:
   17db1:	f3 0f 1e fa          	endbr64 
   17db5:	41 57                	push   %r15
   17db7:	41 56                	push   %r14
   17db9:	49 89 ce             	mov    %rcx,%r14
   17dbc:	41 55                	push   %r13
   17dbe:	49 89 d5             	mov    %rdx,%r13
   17dc1:	41 54                	push   %r12
   17dc3:	49 89 fc             	mov    %rdi,%r12
   17dc6:	55                   	push   %rbp
   17dc7:	53                   	push   %rbx
   17dc8:	48 89 f3             	mov    %rsi,%rbx
   17dcb:	48 83 ec 18          	sub    $0x18,%rsp
   17dcf:	4c 8b 7f 50          	mov    0x50(%rdi),%r15
   17dd3:	bf 90 00 00 00       	mov    $0x90,%edi
   17dd8:	e8 9f 1e ff ff       	call   9c7c <alloc_iob>
   17ddd:	48 85 c0             	test   %rax,%rax
   17de0:	0f 84 bc 00 00 00    	je     17ea2 <arp_tx_request+0xf1>
   17de6:	41 8b 57 40          	mov    0x40(%r15),%edx
   17dea:	48 89 c5             	mov    %rax,%rbp
   17ded:	48 83 40 18 40       	addq   $0x40,0x18(%rax)
   17df2:	4d 8d 44 24 60       	lea    0x60(%r12),%r8
   17df7:	48 8b 40 20          	mov    0x20(%rax),%rax
   17dfb:	4c 89 c6             	mov    %r8,%rsi
   17dfe:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   17e03:	66 89 50 40          	mov    %dx,0x40(%rax)
   17e07:	41 0f b6 57 43       	movzbl 0x43(%r15),%edx
   17e0c:	48 8d 78 48          	lea    0x48(%rax),%rdi
   17e10:	88 50 44             	mov    %dl,0x44(%rax)
   17e13:	8b 4b 18             	mov    0x18(%rbx),%ecx
   17e16:	66 89 48 42          	mov    %cx,0x42(%rax)
   17e1a:	8a 4b 1a             	mov    0x1a(%rbx),%cl
   17e1d:	66 c7 40 46 00 01    	movw   $0x100,0x46(%rax)
   17e23:	88 48 45             	mov    %cl,0x45(%rax)
   17e26:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   17e2a:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17e2e:	e8 da f4 ff ff       	call   1730d <__memcpy>
   17e33:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   17e37:	0f b6 53 1a          	movzbl 0x1a(%rbx),%edx
   17e3b:	4c 89 f6             	mov    %r14,%rsi
   17e3e:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   17e42:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17e46:	e8 c2 f4 ff ff       	call   1730d <__memcpy>
   17e4b:	41 0f b6 4f 43       	movzbl 0x43(%r15),%ecx
   17e50:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   17e54:	48 8d 04 0f          	lea    (%rdi,%rcx,1),%rax
   17e58:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17e5c:	31 c0                	xor    %eax,%eax
   17e5e:	f3 aa                	rep stos %al,%es:(%rdi)
   17e60:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   17e64:	0f b6 53 1a          	movzbl 0x1a(%rbx),%edx
   17e68:	4c 89 ee             	mov    %r13,%rsi
   17e6b:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   17e6f:	48 89 45 20          	mov    %rax,0x20(%rbp)
   17e73:	e8 95 f4 ff ff       	call   1730d <__memcpy>
   17e78:	49 8b 4c 24 78       	mov    0x78(%r12),%rcx
   17e7d:	4c 89 e6             	mov    %r12,%rsi
   17e80:	48 89 ef             	mov    %rbp,%rdi
   17e83:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   17e88:	48 83 c4 18          	add    $0x18,%rsp
   17e8c:	48 8d 15 55 0e 01 00 	lea    0x10e55(%rip),%rdx        # 28ce8 <arp_protocol>
   17e93:	5b                   	pop    %rbx
   17e94:	5d                   	pop    %rbp
   17e95:	41 5c                	pop    %r12
   17e97:	41 5d                	pop    %r13
   17e99:	41 5e                	pop    %r14
   17e9b:	41 5f                	pop    %r15
   17e9d:	e9 5e 63 ff ff       	jmp    e200 <net_tx>
   17ea2:	48 83 c4 18          	add    $0x18,%rsp
   17ea6:	b8 77 9f fe ce       	mov    $0xcefe9f77,%eax
   17eab:	5b                   	pop    %rbx
   17eac:	5d                   	pop    %rbp
   17ead:	41 5c                	pop    %r12
   17eaf:	41 5d                	pop    %r13
   17eb1:	41 5e                	pop    %r14
   17eb3:	41 5f                	pop    %r15
   17eb5:	c3                   	ret    

0000000000017eb6 <arp_rx>:
   17eb6:	f3 0f 1e fa          	endbr64 
   17eba:	41 56                	push   %r14
   17ebc:	41 55                	push   %r13
   17ebe:	41 54                	push   %r12
   17ec0:	55                   	push   %rbp
   17ec1:	48 89 fd             	mov    %rdi,%rbp
   17ec4:	53                   	push   %rbx
   17ec5:	48 83 ec 10          	sub    $0x10,%rsp
   17ec9:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   17ecd:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   17ed1:	48 29 da             	sub    %rbx,%rdx
   17ed4:	48 83 fa 07          	cmp    $0x7,%rdx
   17ed8:	76 1e                	jbe    17ef8 <arp_rx+0x42>
   17eda:	0f b6 4b 04          	movzbl 0x4(%rbx),%ecx
   17ede:	49 89 f4             	mov    %rsi,%r12
   17ee1:	0f b6 73 05          	movzbl 0x5(%rbx),%esi
   17ee5:	48 89 c8             	mov    %rcx,%rax
   17ee8:	01 f1                	add    %esi,%ecx
   17eea:	89 f7                	mov    %esi,%edi
   17eec:	8d 4c 09 08          	lea    0x8(%rcx,%rcx,1),%ecx
   17ef0:	48 63 c9             	movslq %ecx,%rcx
   17ef3:	48 39 ca             	cmp    %rcx,%rdx
   17ef6:	73 02                	jae    17efa <arp_rx+0x44>
   17ef8:	eb 39                	jmp    17f33 <arp_rx+0x7d>
   17efa:	66 8b 4b 02          	mov    0x2(%rbx),%cx
   17efe:	4c 8d 2d db 04 01 00 	lea    0x104db(%rip),%r13        # 283e0 <ipv4_arp_protocol>
   17f05:	48 8d 15 e4 04 01 00 	lea    0x104e4(%rip),%rdx        # 283f0 <unixtime_builtin_setting>
   17f0c:	49 39 d5             	cmp    %rdx,%r13
   17f0f:	73 2c                	jae    17f3d <arp_rx+0x87>
   17f11:	49 8b 75 00          	mov    0x0(%r13),%rsi
   17f15:	66 3b 4e 18          	cmp    0x18(%rsi),%cx
   17f19:	74 06                	je     17f21 <arp_rx+0x6b>
   17f1b:	49 83 c5 10          	add    $0x10,%r13
   17f1f:	eb eb                	jmp    17f0c <arp_rx+0x56>
   17f21:	49 8b 54 24 50       	mov    0x50(%r12),%rdx
   17f26:	8b 4a 40             	mov    0x40(%rdx),%ecx
   17f29:	66 39 0b             	cmp    %cx,(%rbx)
   17f2c:	75 05                	jne    17f33 <arp_rx+0x7d>
   17f2e:	38 42 43             	cmp    %al,0x43(%rdx)
   17f31:	74 14                	je     17f47 <arp_rx+0x91>
   17f33:	b8 7e 9f fe e3       	mov    $0xe3fe9f7e,%eax
   17f38:	e9 b9 00 00 00       	jmp    17ff6 <arp_rx+0x140>
   17f3d:	b8 7d 9f fe bb       	mov    $0xbbfe9f7d,%eax
   17f42:	e9 af 00 00 00       	jmp    17ff6 <arp_rx+0x140>
   17f47:	40 38 7e 1a          	cmp    %dil,0x1a(%rsi)
   17f4b:	75 e6                	jne    17f33 <arp_rx+0x7d>
   17f4d:	4c 8d 73 08          	lea    0x8(%rbx),%r14
   17f51:	48 8d 54 03 08       	lea    0x8(%rbx,%rax,1),%rdx
   17f56:	4c 89 e7             	mov    %r12,%rdi
   17f59:	4c 89 f1             	mov    %r14,%rcx
   17f5c:	e8 a4 59 ff ff       	call   d905 <neighbour_update>
   17f61:	66 81 7b 06 00 01    	cmpw   $0x100,0x6(%rbx)
   17f67:	74 07                	je     17f70 <arp_rx+0xba>
   17f69:	31 c0                	xor    %eax,%eax
   17f6b:	e9 86 00 00 00       	jmp    17ff6 <arp_rx+0x140>
   17f70:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
   17f74:	0f b6 53 05          	movzbl 0x5(%rbx),%edx
   17f78:	4c 89 e7             	mov    %r12,%rdi
   17f7b:	48 01 c0             	add    %rax,%rax
   17f7e:	48 8d 74 10 08       	lea    0x8(%rax,%rdx,1),%rsi
   17f83:	48 01 de             	add    %rbx,%rsi
   17f86:	41 ff 55 08          	call   *0x8(%r13)
   17f8a:	85 c0                	test   %eax,%eax
   17f8c:	75 db                	jne    17f69 <arp_rx+0xb3>
   17f8e:	0f b6 53 04          	movzbl 0x4(%rbx),%edx
   17f92:	0f b6 73 05          	movzbl 0x5(%rbx),%esi
   17f96:	66 c7 43 06 00 02    	movw   $0x200,0x6(%rbx)
   17f9c:	4c 89 f7             	mov    %r14,%rdi
   17f9f:	48 89 d1             	mov    %rdx,%rcx
   17fa2:	01 f2                	add    %esi,%edx
   17fa4:	48 8d 74 31 08       	lea    0x8(%rcx,%rsi,1),%rsi
   17fa9:	48 63 d2             	movslq %edx,%rdx
   17fac:	48 01 de             	add    %rbx,%rsi
   17faf:	e8 df b8 ff ff       	call   13893 <memswap>
   17fb4:	4d 8d 44 24 60       	lea    0x60(%r12),%r8
   17fb9:	0f b6 53 04          	movzbl 0x4(%rbx),%edx
   17fbd:	4c 89 f7             	mov    %r14,%rdi
   17fc0:	4c 89 c6             	mov    %r8,%rsi
   17fc3:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   17fc8:	e8 40 f3 ff ff       	call   1730d <__memcpy>
   17fcd:	0f b6 53 04          	movzbl 0x4(%rbx),%edx
   17fd1:	0f b6 43 05          	movzbl 0x5(%rbx),%eax
   17fd5:	48 89 ef             	mov    %rbp,%rdi
   17fd8:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   17fdd:	4c 89 e6             	mov    %r12,%rsi
   17fe0:	31 ed                	xor    %ebp,%ebp
   17fe2:	48 8d 4c 02 08       	lea    0x8(%rdx,%rax,1),%rcx
   17fe7:	48 8d 15 fa 0c 01 00 	lea    0x10cfa(%rip),%rdx        # 28ce8 <arp_protocol>
   17fee:	48 01 d9             	add    %rbx,%rcx
   17ff1:	e8 0a 62 ff ff       	call   e200 <net_tx>
   17ff6:	48 89 ef             	mov    %rbp,%rdi
   17ff9:	89 44 24 08          	mov    %eax,0x8(%rsp)
   17ffd:	e8 94 1c ff ff       	call   9c96 <free_iob>
   18002:	8b 44 24 08          	mov    0x8(%rsp),%eax
   18006:	48 83 c4 10          	add    $0x10,%rsp
   1800a:	5b                   	pop    %rbx
   1800b:	5d                   	pop    %rbp
   1800c:	41 5c                	pop    %r12
   1800e:	41 5d                	pop    %r13
   18010:	41 5e                	pop    %r14
   18012:	c3                   	ret    

0000000000018013 <vasprintf>:
   18013:	f3 0f 1e fa          	endbr64 
   18017:	41 55                	push   %r13
   18019:	b9 06 00 00 00       	mov    $0x6,%ecx
   1801e:	49 89 f5             	mov    %rsi,%r13
   18021:	48 89 d6             	mov    %rdx,%rsi
   18024:	41 54                	push   %r12
   18026:	49 89 d4             	mov    %rdx,%r12
   18029:	4c 89 ea             	mov    %r13,%rdx
   1802c:	55                   	push   %rbp
   1802d:	53                   	push   %rbx
   1802e:	48 89 fb             	mov    %rdi,%rbx
   18031:	48 83 ec 28          	sub    $0x28,%rsp
   18035:	48 8b 05 34 1f 01 00 	mov    0x11f34(%rip),%rax        # 29f70 <__stack_chk_guard>
   1803c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18041:	31 c0                	xor    %eax,%eax
   18043:	49 89 e0             	mov    %rsp,%r8
   18046:	4c 89 c7             	mov    %r8,%rdi
   18049:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
   1804b:	4c 89 c1             	mov    %r8,%rcx
   1804e:	31 f6                	xor    %esi,%esi
   18050:	31 ff                	xor    %edi,%edi
   18052:	e8 bd ef ff ff       	call   17014 <vsnprintf>
   18057:	8d 68 01             	lea    0x1(%rax),%ebp
   1805a:	48 63 ed             	movslq %ebp,%rbp
   1805d:	48 89 ef             	mov    %rbp,%rdi
   18060:	e8 dc 45 ff ff       	call   c641 <malloc>
   18065:	48 89 03             	mov    %rax,(%rbx)
   18068:	48 85 c0             	test   %rax,%rax
   1806b:	75 07                	jne    18074 <vasprintf+0x61>
   1806d:	b8 77 df ff ce       	mov    $0xceffdf77,%eax
   18072:	eb 11                	jmp    18085 <vasprintf+0x72>
   18074:	48 89 c7             	mov    %rax,%rdi
   18077:	4c 89 e1             	mov    %r12,%rcx
   1807a:	4c 89 ea             	mov    %r13,%rdx
   1807d:	48 89 ee             	mov    %rbp,%rsi
   18080:	e8 8f ef ff ff       	call   17014 <vsnprintf>
   18085:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1808a:	48 2b 15 df 1e 01 00 	sub    0x11edf(%rip),%rdx        # 29f70 <__stack_chk_guard>
   18091:	74 05                	je     18098 <vasprintf+0x85>
   18093:	e8 c8 a9 fe ff       	call   2a60 <__stack_chk_fail>
   18098:	48 83 c4 28          	add    $0x28,%rsp
   1809c:	5b                   	pop    %rbx
   1809d:	5d                   	pop    %rbp
   1809e:	41 5c                	pop    %r12
   180a0:	41 5d                	pop    %r13
   180a2:	c3                   	ret    

00000000000180a3 <asprintf>:
   180a3:	f3 0f 1e fa          	endbr64 
   180a7:	48 83 ec 58          	sub    $0x58,%rsp
   180ab:	48 8b 05 be 1e 01 00 	mov    0x11ebe(%rip),%rax        # 29f70 <__stack_chk_guard>
   180b2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   180b7:	31 c0                	xor    %eax,%eax
   180b9:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
   180be:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   180c3:	48 89 e2             	mov    %rsp,%rdx
   180c6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   180cb:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   180d0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   180d5:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   180da:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   180df:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   180e6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   180eb:	e8 23 ff ff ff       	call   18013 <vasprintf>
   180f0:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   180f5:	48 2b 15 74 1e 01 00 	sub    0x11e74(%rip),%rdx        # 29f70 <__stack_chk_guard>
   180fc:	74 05                	je     18103 <asprintf+0x60>
   180fe:	e8 5d a9 fe ff       	call   2a60 <__stack_chk_fail>
   18103:	48 83 c4 58          	add    $0x58,%rsp
   18107:	c3                   	ret    

0000000000018108 <shell_banner>:
   18108:	50                   	push   %rax
   18109:	48 8d 3d bf b8 00 00 	lea    0xb8bf(%rip),%rdi        # 239cf <.LC0>
   18110:	31 c0                	xor    %eax,%eax
   18112:	e8 87 f0 ff ff       	call   1719e <printf>
   18117:	ba 02 00 00 00       	mov    $0x2,%edx
   1811c:	be 00 0c 00 00       	mov    $0xc00,%esi
   18121:	48 8d 3d 55 bc 00 00 	lea    0xbc55(%rip),%rdi        # 23d7d <.LC1>
   18128:	e8 d5 82 00 00       	call   20402 <prompt>
   1812d:	5a                   	pop    %rdx
   1812e:	85 c0                	test   %eax,%eax
   18130:	0f 94 c0             	sete   %al
   18133:	0f b6 c0             	movzbl %al,%eax
   18136:	c3                   	ret    

0000000000018137 <pxe_menu_boot>:
   18137:	f3 0f 1e fa          	endbr64 
   1813b:	b8 7d 1f fc c3       	mov    $0xc3fc1f7d,%eax
   18140:	c3                   	ret    

0000000000018141 <uriboot>:
   18141:	f3 0f 1e fa          	endbr64 
   18145:	41 57                	push   %r15
   18147:	45 89 cf             	mov    %r9d,%r15d
   1814a:	41 56                	push   %r14
   1814c:	41 83 e7 01          	and    $0x1,%r15d
   18150:	49 89 fe             	mov    %rdi,%r14
   18153:	41 55                	push   %r13
   18155:	4d 89 c5             	mov    %r8,%r13
   18158:	41 54                	push   %r12
   1815a:	55                   	push   %rbp
   1815b:	89 cd                	mov    %ecx,%ebp
   1815d:	53                   	push   %rbx
   1815e:	44 89 cb             	mov    %r9d,%ebx
   18161:	48 83 ec 18          	sub    $0x18,%rsp
   18165:	48 8b 05 04 1e 01 00 	mov    0x11e04(%rip),%rax        # 29f70 <__stack_chk_guard>
   1816c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18171:	31 c0                	xor    %eax,%eax
   18173:	85 d2                	test   %edx,%edx
   18175:	74 41                	je     181b8 <uriboot+0x77>
   18177:	44 89 f9             	mov    %r15d,%ecx
   1817a:	89 ef                	mov    %ebp,%edi
   1817c:	e8 21 32 00 00       	call   1b3a2 <san_hook>
   18181:	41 89 c4             	mov    %eax,%r12d
   18184:	85 c0                	test   %eax,%eax
   18186:	79 1d                	jns    181a5 <uriboot+0x64>
   18188:	89 c7                	mov    %eax,%edi
   1818a:	e8 0d b6 ff ff       	call   1379c <strerror>
   1818f:	48 8d 3d 11 bc 00 00 	lea    0xbc11(%rip),%rdi        # 23da7 <.LC4>
   18196:	48 89 c6             	mov    %rax,%rsi
   18199:	31 c0                	xor    %eax,%eax
   1819b:	e8 fe ef ff ff       	call   1719e <printf>
   181a0:	e9 5d 01 00 00       	jmp    18302 <uriboot+0x1c1>
   181a5:	89 c6                	mov    %eax,%esi
   181a7:	48 8d 3d 18 bc 00 00 	lea    0xbc18(%rip),%rdi        # 23dc6 <.LC5>
   181ae:	31 c0                	xor    %eax,%eax
   181b0:	44 89 e5             	mov    %r12d,%ebp
   181b3:	e8 e6 ef ff ff       	call   1719e <printf>
   181b8:	45 85 ff             	test   %r15d,%r15d
   181bb:	75 29                	jne    181e6 <uriboot+0xa5>
   181bd:	e8 83 34 00 00       	call   1b645 <san_describe>
   181c2:	41 89 c4             	mov    %eax,%r12d
   181c5:	85 c0                	test   %eax,%eax
   181c7:	74 1d                	je     181e6 <uriboot+0xa5>
   181c9:	89 c7                	mov    %eax,%edi
   181cb:	e8 cc b5 ff ff       	call   1379c <strerror>
   181d0:	48 8d 3d 0c bc 00 00 	lea    0xbc0c(%rip),%rdi        # 23de3 <.LC6>
   181d7:	48 89 c6             	mov    %rax,%rsi
   181da:	31 c0                	xor    %eax,%eax
   181dc:	e8 bd ef ff ff       	call   1719e <printf>
   181e1:	e9 e4 00 00 00       	jmp    182ca <uriboot+0x189>
   181e6:	4d 85 f6             	test   %r14,%r14
   181e9:	74 5f                	je     1824a <uriboot+0x109>
   181eb:	48 89 e2             	mov    %rsp,%rdx
   181ee:	31 f6                	xor    %esi,%esi
   181f0:	4c 89 f7             	mov    %r14,%rdi
   181f3:	e8 ff 08 ff ff       	call   8af7 <imgdownload>
   181f8:	41 89 c4             	mov    %eax,%r12d
   181fb:	85 c0                	test   %eax,%eax
   181fd:	0f 85 c7 00 00 00    	jne    182ca <uriboot+0x189>
   18203:	48 8b 3c 24          	mov    (%rsp),%rdi
   18207:	e8 c9 0a ff ff       	call   8cd5 <imgstat>
   1820c:	48 8b 3c 24          	mov    (%rsp),%rdi
   18210:	83 4f 30 08          	orl    $0x8,0x30(%rdi)
   18214:	e8 66 78 00 00       	call   1fa7f <image_exec>
   18219:	41 89 c4             	mov    %eax,%r12d
   1821c:	85 c0                	test   %eax,%eax
   1821e:	74 1a                	je     1823a <uriboot+0xf9>
   18220:	89 c7                	mov    %eax,%edi
   18222:	e8 75 b5 ff ff       	call   1379c <strerror>
   18227:	48 8d 3d d9 bb 00 00 	lea    0xbbd9(%rip),%rdi        # 23e07 <.LC7>
   1822e:	48 89 c6             	mov    %rax,%rsi
   18231:	31 c0                	xor    %eax,%eax
   18233:	e8 66 ef ff ff       	call   1719e <printf>
   18238:	eb 13                	jmp    1824d <uriboot+0x10c>
   1823a:	48 8d 3d 8e b7 00 00 	lea    0xb78e(%rip),%rdi        # 239cf <.LC0>
   18241:	31 c0                	xor    %eax,%eax
   18243:	e8 56 ef ff ff       	call   1719e <printf>
   18248:	eb 03                	jmp    1824d <uriboot+0x10c>
   1824a:	45 31 e4             	xor    %r12d,%r12d
   1824d:	f6 c3 02             	test   $0x2,%bl
   18250:	75 78                	jne    182ca <uriboot+0x189>
   18252:	31 ff                	xor    %edi,%edi
   18254:	48 8d 35 05 13 01 00 	lea    0x11305(%rip),%rsi        # 29560 <skip_san_boot_setting>
   1825b:	e8 7d 9c ff ff       	call   11edd <fetch_intz_setting>
   18260:	48 85 c0             	test   %rax,%rax
   18263:	75 55                	jne    182ba <uriboot+0x179>
   18265:	48 8d 15 68 c1 00 00 	lea    0xc168(%rip),%rdx        # 243d4 <.LC0>
   1826c:	4d 85 ed             	test   %r13,%r13
   1826f:	48 8d 05 e0 b6 00 00 	lea    0xb6e0(%rip),%rax        # 23956 <.LC1>
   18276:	89 e9                	mov    %ebp,%ecx
   18278:	48 89 d6             	mov    %rdx,%rsi
   1827b:	49 0f 45 d5          	cmovne %r13,%rdx
   1827f:	48 8d 3d 9b bb 00 00 	lea    0xbb9b(%rip),%rdi        # 23e21 <.LC8>
   18286:	48 0f 45 f0          	cmovne %rax,%rsi
   1828a:	31 c0                	xor    %eax,%eax
   1828c:	e8 0d ef ff ff       	call   1719e <printf>
   18291:	4c 89 ee             	mov    %r13,%rsi
   18294:	89 ef                	mov    %ebp,%edi
   18296:	e8 26 34 00 00       	call   1b6c1 <san_boot>
   1829b:	89 c7                	mov    %eax,%edi
   1829d:	41 89 c4             	mov    %eax,%r12d
   182a0:	e8 f7 b4 ff ff       	call   1379c <strerror>
   182a5:	89 ee                	mov    %ebp,%esi
   182a7:	48 8d 3d 96 bb 00 00 	lea    0xbb96(%rip),%rdi        # 23e44 <.LC9>
   182ae:	48 89 c2             	mov    %rax,%rdx
   182b1:	31 c0                	xor    %eax,%eax
   182b3:	e8 e6 ee ff ff       	call   1719e <printf>
   182b8:	eb 10                	jmp    182ca <uriboot+0x189>
   182ba:	89 ee                	mov    %ebp,%esi
   182bc:	48 8d 3d a8 bb 00 00 	lea    0xbba8(%rip),%rdi        # 23e6b <.LC10>
   182c3:	31 c0                	xor    %eax,%eax
   182c5:	e8 d4 ee ff ff       	call   1719e <printf>
   182ca:	80 e3 04             	and    $0x4,%bl
   182cd:	75 33                	jne    18302 <uriboot+0x1c1>
   182cf:	48 8d 35 12 12 01 00 	lea    0x11212(%rip),%rsi        # 294e8 <keep_san_setting>
   182d6:	31 ff                	xor    %edi,%edi
   182d8:	e8 00 9c ff ff       	call   11edd <fetch_intz_setting>
   182dd:	89 ee                	mov    %ebp,%esi
   182df:	48 8d 3d c9 bb 00 00 	lea    0xbbc9(%rip),%rdi        # 23eaf <.LC12>
   182e6:	48 85 c0             	test   %rax,%rax
   182e9:	75 10                	jne    182fb <uriboot+0x1ba>
   182eb:	89 ef                	mov    %ebp,%edi
   182ed:	e8 ed 32 00 00       	call   1b5df <san_unhook>
   182f2:	89 ee                	mov    %ebp,%esi
   182f4:	48 8d 3d 95 bb 00 00 	lea    0xbb95(%rip),%rdi        # 23e90 <.LC11>
   182fb:	31 c0                	xor    %eax,%eax
   182fd:	e8 9c ee ff ff       	call   1719e <printf>
   18302:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18307:	48 2b 05 62 1c 01 00 	sub    0x11c62(%rip),%rax        # 29f70 <__stack_chk_guard>
   1830e:	74 05                	je     18315 <uriboot+0x1d4>
   18310:	e8 4b a7 fe ff       	call   2a60 <__stack_chk_fail>
   18315:	48 83 c4 18          	add    $0x18,%rsp
   18319:	44 89 e0             	mov    %r12d,%eax
   1831c:	5b                   	pop    %rbx
   1831d:	5d                   	pop    %rbp
   1831e:	41 5c                	pop    %r12
   18320:	41 5d                	pop    %r13
   18322:	41 5e                	pop    %r14
   18324:	41 5f                	pop    %r15
   18326:	c3                   	ret    

0000000000018327 <fetch_next_server_and_filename>:
   18327:	f3 0f 1e fa          	endbr64 
   1832b:	41 54                	push   %r12
   1832d:	b9 20 00 00 00       	mov    $0x20,%ecx
   18332:	55                   	push   %rbp
   18333:	53                   	push   %rbx
   18334:	48 83 ec 40          	sub    $0x40,%rsp
   18338:	48 8b 05 31 1c 01 00 	mov    0x11c31(%rip),%rax        # 29f70 <__stack_chk_guard>
   1833f:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   18344:	31 c0                	xor    %eax,%eax
   18346:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
   1834b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   18350:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   18357:	00 00 
   18359:	48 89 ef             	mov    %rbp,%rdi
   1835c:	f3 aa                	rep stos %al,%es:(%rdi)
   1835e:	4c 8d 25 bb 10 01 00 	lea    0x110bb(%rip),%r12        # 29420 <filename_setting>
   18365:	45 31 c9             	xor    %r9d,%r9d
   18368:	45 31 c0             	xor    %r8d,%r8d
   1836b:	31 c9                	xor    %ecx,%ecx
   1836d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18372:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   18377:	4c 89 e6             	mov    %r12,%rsi
   1837a:	e8 ee 97 ff ff       	call   11b6d <fetch_setting>
   1837f:	85 c0                	test   %eax,%eax
   18381:	78 28                	js     183ab <fetch_next_server_and_filename+0x84>
   18383:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   18388:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1838d:	4c 89 e6             	mov    %r12,%rsi
   18390:	e8 59 9a ff ff       	call   11dee <fetch_string_setting_copy>
   18395:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1839a:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1839f:	48 8d 35 a2 10 01 00 	lea    0x110a2(%rip),%rsi        # 29448 <next_server_setting>
   183a6:	e8 b1 9a ff ff       	call   11e5c <fetch_ipv4_setting>
   183ab:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
   183b0:	4d 85 e4             	test   %r12,%r12
   183b3:	74 73                	je     18428 <fetch_next_server_and_filename+0x101>
   183b5:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
   183ba:	74 21                	je     183dd <fetch_next_server_and_filename+0xb6>
   183bc:	8b 7c 24 20          	mov    0x20(%rsp),%edi
   183c0:	66 c7 44 24 18 01 00 	movw   $0x1,0x18(%rsp)
   183c7:	e8 f3 21 ff ff       	call   a5bf <inet_ntoa>
   183cc:	48 8d 3d f9 ba 00 00 	lea    0xbaf9(%rip),%rdi        # 23ecc <.LC13>
   183d3:	48 89 c6             	mov    %rax,%rsi
   183d6:	31 c0                	xor    %eax,%eax
   183d8:	e8 c1 ed ff ff       	call   1719e <printf>
   183dd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   183e2:	e8 b2 a4 ff ff       	call   12899 <expand_settings>
   183e7:	49 89 c4             	mov    %rax,%r12
   183ea:	48 85 c0             	test   %rax,%rax
   183ed:	74 2f                	je     1841e <fetch_next_server_and_filename+0xf7>
   183ef:	80 38 00             	cmpb   $0x0,(%rax)
   183f2:	74 11                	je     18405 <fetch_next_server_and_filename+0xde>
   183f4:	48 89 c6             	mov    %rax,%rsi
   183f7:	48 8d 3d df ba 00 00 	lea    0xbadf(%rip),%rdi        # 23edd <.LC14>
   183fe:	31 c0                	xor    %eax,%eax
   18400:	e8 99 ed ff ff       	call   1719e <printf>
   18405:	4c 89 e6             	mov    %r12,%rsi
   18408:	48 89 ef             	mov    %rbp,%rdi
   1840b:	e8 20 e6 ff ff       	call   16a30 <pxe_uri>
   18410:	4c 89 e7             	mov    %r12,%rdi
   18413:	48 89 c3             	mov    %rax,%rbx
   18416:	e8 34 42 ff ff       	call   c64f <free>
   1841b:	49 89 dc             	mov    %rbx,%r12
   1841e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   18423:	e8 27 42 ff ff       	call   c64f <free>
   18428:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1842d:	48 2b 05 3c 1b 01 00 	sub    0x11b3c(%rip),%rax        # 29f70 <__stack_chk_guard>
   18434:	74 05                	je     1843b <fetch_next_server_and_filename+0x114>
   18436:	e8 25 a6 fe ff       	call   2a60 <__stack_chk_fail>
   1843b:	48 83 c4 40          	add    $0x40,%rsp
   1843f:	4c 89 e0             	mov    %r12,%rax
   18442:	5b                   	pop    %rbx
   18443:	5d                   	pop    %rbp
   18444:	41 5c                	pop    %r12
   18446:	c3                   	ret    

0000000000018447 <netboot>:
   18447:	f3 0f 1e fa          	endbr64 
   1844b:	41 56                	push   %r14
   1844d:	41 55                	push   %r13
   1844f:	41 54                	push   %r12
   18451:	49 89 fc             	mov    %rdi,%r12
   18454:	55                   	push   %rbp
   18455:	53                   	push   %rbx
   18456:	48 8d 1d c3 e4 00 00 	lea    0xe4c3(%rip),%rbx        # 26920 <net_devices>
   1845d:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   18464:	48 8b 05 05 1b 01 00 	mov    0x11b05(%rip),%rax        # 29f70 <__stack_chk_guard>
   1846b:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   18472:	00 
   18473:	48 8b 05 a6 e4 00 00 	mov    0xe4a6(%rip),%rax        # 26920 <net_devices>
   1847a:	48 8d 68 f0          	lea    -0x10(%rax),%rbp
   1847e:	48 8d 45 10          	lea    0x10(%rbp),%rax
   18482:	48 39 d8             	cmp    %rbx,%rax
   18485:	74 12                	je     18499 <netboot+0x52>
   18487:	48 89 ef             	mov    %rbp,%rdi
   1848a:	e8 39 71 00 00       	call   1f5c8 <ifclose>
   1848f:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
   18493:	48 83 ed 10          	sub    $0x10,%rbp
   18497:	eb e5                	jmp    1847e <netboot+0x37>
   18499:	4c 89 e7             	mov    %r12,%rdi
   1849c:	e8 ec 70 00 00       	call   1f58d <ifopen>
   184a1:	85 c0                	test   %eax,%eax
   184a3:	0f 85 ac 02 00 00    	jne    18755 <netboot+0x30e>
   184a9:	4c 89 e7             	mov    %r12,%rdi
   184ac:	e8 20 71 00 00       	call   1f5d1 <ifstat>
   184b1:	31 d2                	xor    %edx,%edx
   184b3:	31 f6                	xor    %esi,%esi
   184b5:	4c 89 e7             	mov    %r12,%rdi
   184b8:	e8 c6 72 00 00       	call   1f783 <ifconf>
   184bd:	85 c0                	test   %eax,%eax
   184bf:	0f 85 90 02 00 00    	jne    18755 <netboot+0x30e>
   184c5:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   184c9:	4c 8d 6c 24 38       	lea    0x38(%rsp),%r13
   184ce:	4c 8d 74 24 60       	lea    0x60(%rsp),%r14
   184d3:	e8 9b 7f 00 00       	call   20473 <route>
   184d8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   184dc:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   184e1:	b9 0a 00 00 00       	mov    $0xa,%ecx
   184e6:	48 8d ac 24 8e 00 00 	lea    0x8e(%rsp),%rbp
   184ed:	00 
   184ee:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   184f3:	f3 ab                	rep stos %eax,%es:(%rdi)
   184f5:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   184fa:	b9 0a 00 00 00       	mov    $0xa,%ecx
   184ff:	48 89 ea             	mov    %rbp,%rdx
   18502:	f3 ab                	rep stos %eax,%es:(%rdi)
   18504:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   18509:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1850e:	48 c7 44 24 28 3c 00 	movq   $0x3c,0x28(%rsp)
   18515:	00 00 
   18517:	f3 ab                	rep stos %eax,%es:(%rdi)
   18519:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1851e:	31 ff                	xor    %edi,%edi
   18520:	48 c7 44 24 50 06 2b 	movq   $0x2b06,0x50(%rsp)
   18527:	00 00 
   18529:	48 c7 44 24 78 09 2b 	movq   $0x2b09,0x78(%rsp)
   18530:	00 00 
   18532:	e8 e1 98 ff ff       	call   11e18 <fetch_string_setting>
   18537:	31 ff                	xor    %edi,%edi
   18539:	4c 89 ee             	mov    %r13,%rsi
   1853c:	e8 eb 9b ff ff       	call   1212c <fetch_uintz_setting>
   18541:	48 8d 35 a3 b9 00 00 	lea    0xb9a3(%rip),%rsi        # 23eeb <.LC0>
   18548:	48 89 ef             	mov    %rbp,%rdi
   1854b:	48 89 c3             	mov    %rax,%rbx
   1854e:	e8 8d b3 ff ff       	call   138e0 <strcmp>
   18553:	85 c0                	test   %eax,%eax
   18555:	74 2a                	je     18581 <netboot+0x13a>
   18557:	31 ff                	xor    %edi,%edi
   18559:	e8 c9 fd ff ff       	call   18327 <fetch_next_server_and_filename>
   1855e:	4c 89 f2             	mov    %r14,%rdx
   18561:	48 8d 35 08 0f 01 00 	lea    0x10f08(%rip),%rsi        # 29470 <root_path_setting>
   18568:	31 ff                	xor    %edi,%edi
   1856a:	49 89 c4             	mov    %rax,%r12
   1856d:	e8 7c 98 ff ff       	call   11dee <fetch_string_setting_copy>
   18572:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
   18577:	48 85 ed             	test   %rbp,%rbp
   1857a:	75 78                	jne    185f4 <netboot+0x1ad>
   1857c:	e9 b9 00 00 00       	jmp    1863a <netboot+0x1f3>
   18581:	45 31 c9             	xor    %r9d,%r9d
   18584:	45 31 c0             	xor    %r8d,%r8d
   18587:	31 c9                	xor    %ecx,%ecx
   18589:	31 d2                	xor    %edx,%edx
   1858b:	31 ff                	xor    %edi,%edi
   1858d:	4c 89 f6             	mov    %r14,%rsi
   18590:	e8 d8 95 ff ff       	call   11b6d <fetch_setting>
   18595:	85 c0                	test   %eax,%eax
   18597:	78 be                	js     18557 <netboot+0x110>
   18599:	80 e3 08             	and    $0x8,%bl
   1859c:	74 1c                	je     185ba <netboot+0x173>
   1859e:	45 31 c9             	xor    %r9d,%r9d
   185a1:	45 31 c0             	xor    %r8d,%r8d
   185a4:	31 c9                	xor    %ecx,%ecx
   185a6:	31 d2                	xor    %edx,%edx
   185a8:	31 ff                	xor    %edi,%edi
   185aa:	48 8d 35 6f 0e 01 00 	lea    0x10e6f(%rip),%rsi        # 29420 <filename_setting>
   185b1:	e8 b7 95 ff ff       	call   11b6d <fetch_setting>
   185b6:	85 c0                	test   %eax,%eax
   185b8:	79 9d                	jns    18557 <netboot+0x110>
   185ba:	31 c0                	xor    %eax,%eax
   185bc:	48 8d 3d 32 b9 00 00 	lea    0xb932(%rip),%rdi        # 23ef5 <.LC16>
   185c3:	e8 d6 eb ff ff       	call   1719e <printf>
   185c8:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   185cf:	00 
   185d0:	48 2b 05 99 19 01 00 	sub    0x11999(%rip),%rax        # 29f70 <__stack_chk_guard>
   185d7:	0f 85 89 01 00 00    	jne    18766 <netboot+0x31f>
   185dd:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   185e4:	4c 89 e7             	mov    %r12,%rdi
   185e7:	5b                   	pop    %rbx
   185e8:	5d                   	pop    %rbp
   185e9:	41 5c                	pop    %r12
   185eb:	41 5d                	pop    %r13
   185ed:	41 5e                	pop    %r14
   185ef:	e9 43 fb ff ff       	jmp    18137 <pxe_menu_boot>
   185f4:	48 89 ef             	mov    %rbp,%rdi
   185f7:	e8 9d a2 ff ff       	call   12899 <expand_settings>
   185fc:	48 89 c5             	mov    %rax,%rbp
   185ff:	48 85 c0             	test   %rax,%rax
   18602:	74 2c                	je     18630 <netboot+0x1e9>
   18604:	80 38 00             	cmpb   $0x0,(%rax)
   18607:	74 11                	je     1861a <netboot+0x1d3>
   18609:	48 89 c6             	mov    %rax,%rsi
   1860c:	48 8d 3d f9 b8 00 00 	lea    0xb8f9(%rip),%rdi        # 23f0c <.LC17>
   18613:	31 c0                	xor    %eax,%eax
   18615:	e8 84 eb ff ff       	call   1719e <printf>
   1861a:	48 89 ef             	mov    %rbp,%rdi
   1861d:	e8 31 de ff ff       	call   16453 <parse_uri>
   18622:	48 89 ef             	mov    %rbp,%rdi
   18625:	48 89 c3             	mov    %rax,%rbx
   18628:	e8 22 40 ff ff       	call   c64f <free>
   1862d:	48 89 dd             	mov    %rbx,%rbp
   18630:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   18635:	e8 15 40 ff ff       	call   c64f <free>
   1863a:	4c 89 f2             	mov    %r14,%rdx
   1863d:	48 8d 35 54 0e 01 00 	lea    0x10e54(%rip),%rsi        # 29498 <san_filename_setting>
   18644:	31 ff                	xor    %edi,%edi
   18646:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   1864b:	e8 9e 97 ff ff       	call   11dee <fetch_string_setting_copy>
   18650:	48 8b 6c 24 60       	mov    0x60(%rsp),%rbp
   18655:	48 85 ed             	test   %rbp,%rbp
   18658:	74 30                	je     1868a <netboot+0x243>
   1865a:	48 89 ef             	mov    %rbp,%rdi
   1865d:	e8 37 a2 ff ff       	call   12899 <expand_settings>
   18662:	48 89 c5             	mov    %rax,%rbp
   18665:	48 85 c0             	test   %rax,%rax
   18668:	74 16                	je     18680 <netboot+0x239>
   1866a:	80 38 00             	cmpb   $0x0,(%rax)
   1866d:	74 11                	je     18680 <netboot+0x239>
   1866f:	48 89 c6             	mov    %rax,%rsi
   18672:	48 8d 3d a2 b8 00 00 	lea    0xb8a2(%rip),%rdi        # 23f1b <.LC18>
   18679:	31 c0                	xor    %eax,%eax
   1867b:	e8 1e eb ff ff       	call   1719e <printf>
   18680:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   18685:	e8 c5 3f ff ff       	call   c64f <free>
   1868a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1868f:	4d 85 e4             	test   %r12,%r12
   18692:	74 3b                	je     186cf <netboot+0x288>
   18694:	48 85 c0             	test   %rax,%rax
   18697:	74 36                	je     186cf <netboot+0x288>
   18699:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1869d:	48 85 ff             	test   %rdi,%rdi
   186a0:	75 23                	jne    186c5 <netboot+0x27e>
   186a2:	48 8d 3d 84 b8 00 00 	lea    0xb884(%rip),%rdi        # 23f2d <.LC19>
   186a9:	31 c0                	xor    %eax,%eax
   186ab:	e8 ee ea ff ff       	call   1719e <printf>
   186b0:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   186b5:	e8 84 77 ff ff       	call   fe3e <ref_decrement>
   186ba:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   186c1:	00 00 
   186c3:	eb 0a                	jmp    186cf <netboot+0x288>
   186c5:	e8 0a 63 ff ff       	call   e9d4 <xfer_uri_opener>
   186ca:	48 85 c0             	test   %rax,%rax
   186cd:	74 d3                	je     186a2 <netboot+0x25b>
   186cf:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   186d4:	4c 89 e3             	mov    %r12,%rbx
   186d7:	48 09 c3             	or     %rax,%rbx
   186da:	75 22                	jne    186fe <netboot+0x2b7>
   186dc:	bf 72 1e fc d2       	mov    $0xd2fc1e72,%edi
   186e1:	e8 b6 b0 ff ff       	call   1379c <strerror>
   186e6:	48 8d 3d 60 b8 00 00 	lea    0xb860(%rip),%rdi        # 23f4d <.LC20>
   186ed:	48 89 c6             	mov    %rax,%rsi
   186f0:	31 c0                	xor    %eax,%eax
   186f2:	e8 a7 ea ff ff       	call   1719e <printf>
   186f7:	b8 72 1e fc d2       	mov    $0xd2fc1e72,%eax
   186fc:	eb 35                	jmp    18733 <netboot+0x2ec>
   186fe:	48 83 f8 01          	cmp    $0x1,%rax
   18702:	45 19 c9             	sbb    %r9d,%r9d
   18705:	41 83 e1 07          	and    $0x7,%r9d
   18709:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
   1870e:	e8 21 86 00 00       	call   20d34 <san_default_drive>
   18713:	31 d2                	xor    %edx,%edx
   18715:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
   1871a:	49 89 e8             	mov    %rbp,%r8
   1871d:	48 83 7c 24 38 00    	cmpq   $0x0,0x38(%rsp)
   18723:	89 c1                	mov    %eax,%ecx
   18725:	4c 89 ee             	mov    %r13,%rsi
   18728:	4c 89 e7             	mov    %r12,%rdi
   1872b:	0f 95 c2             	setne  %dl
   1872e:	e8 0e fa ff ff       	call   18141 <uriboot>
   18733:	48 89 ef             	mov    %rbp,%rdi
   18736:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1873a:	e8 10 3f ff ff       	call   c64f <free>
   1873f:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
   18744:	e8 f5 76 ff ff       	call   fe3e <ref_decrement>
   18749:	4c 89 e7             	mov    %r12,%rdi
   1874c:	e8 ed 76 ff ff       	call   fe3e <ref_decrement>
   18751:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   18755:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
   1875c:	00 
   1875d:	48 2b 15 0c 18 01 00 	sub    0x1180c(%rip),%rdx        # 29f70 <__stack_chk_guard>
   18764:	74 05                	je     1876b <netboot+0x324>
   18766:	e8 f5 a2 fe ff       	call   2a60 <__stack_chk_fail>
   1876b:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   18772:	5b                   	pop    %rbx
   18773:	5d                   	pop    %rbp
   18774:	41 5c                	pop    %r12
   18776:	41 5d                	pop    %r13
   18778:	41 5e                	pop    %r14
   1877a:	c3                   	ret    

000000000001877b <ipxe>:
   1877b:	f3 0f 1e fa          	endbr64 
   1877f:	41 54                	push   %r12
   18781:	48 8d 35 98 9b 00 00 	lea    0x9b98(%rip),%rsi        # 22320 <product_version>
   18788:	49 89 fc             	mov    %rdi,%r12
   1878b:	48 8d 3d d0 b7 00 00 	lea    0xb7d0(%rip),%rdi        # 23f62 <.LC21>
   18792:	55                   	push   %rbp
   18793:	48 8d 2d 56 02 01 00 	lea    0x10256(%rip),%rbp        # 289f0 <http_basic_auth>
   1879a:	53                   	push   %rbx
   1879b:	48 8d 1d 16 02 01 00 	lea    0x10216(%rip),%rbx        # 289b8 <__feature_dns>
   187a2:	48 83 ec 10          	sub    $0x10,%rsp
   187a6:	48 8b 05 c3 17 01 00 	mov    0x117c3(%rip),%rax        # 29f70 <__stack_chk_guard>
   187ad:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   187b2:	31 c0                	xor    %eax,%eax
   187b4:	e8 e5 e9 ff ff       	call   1719e <printf>
   187b9:	48 39 eb             	cmp    %rbp,%rbx
   187bc:	73 17                	jae    187d5 <ipxe+0x5a>
   187be:	48 8b 33             	mov    (%rbx),%rsi
   187c1:	48 8d 3d 58 ae 00 00 	lea    0xae58(%rip),%rdi        # 23620 <.LC15>
   187c8:	31 c0                	xor    %eax,%eax
   187ca:	48 83 c3 08          	add    $0x8,%rbx
   187ce:	e8 cb e9 ff ff       	call   1719e <printf>
   187d3:	eb e4                	jmp    187b9 <ipxe+0x3e>
   187d5:	48 8d 3d f3 b1 00 00 	lea    0xb1f3(%rip),%rdi        # 239cf <.LC0>
   187dc:	31 c0                	xor    %eax,%eax
   187de:	e8 bb e9 ff ff       	call   1719e <printf>
   187e3:	48 8b 3d 06 f5 00 00 	mov    0xf506(%rip),%rdi        # 27cf0 <images>
   187ea:	48 8d 05 ff f4 00 00 	lea    0xf4ff(%rip),%rax        # 27cf0 <images>
   187f1:	48 39 c7             	cmp    %rax,%rdi
   187f4:	74 23                	je     18819 <ipxe+0x9e>
   187f6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   187fb:	48 2b 05 6e 17 01 00 	sub    0x1176e(%rip),%rax        # 29f70 <__stack_chk_guard>
   18802:	0f 85 f2 00 00 00    	jne    188fa <ipxe+0x17f>
   18808:	48 83 c4 10          	add    $0x10,%rsp
   1880c:	48 83 ef 10          	sub    $0x10,%rdi
   18810:	5b                   	pop    %rbx
   18811:	5d                   	pop    %rbp
   18812:	41 5c                	pop    %r12
   18814:	e9 66 72 00 00       	jmp    1fa7f <image_exec>
   18819:	e8 ea f8 ff ff       	call   18108 <shell_banner>
   1881e:	85 c0                	test   %eax,%eax
   18820:	74 1f                	je     18841 <ipxe+0xc6>
   18822:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18827:	48 2b 05 42 17 01 00 	sub    0x11742(%rip),%rax        # 29f70 <__stack_chk_guard>
   1882e:	0f 85 c6 00 00 00    	jne    188fa <ipxe+0x17f>
   18834:	48 83 c4 10          	add    $0x10,%rsp
   18838:	5b                   	pop    %rbx
   18839:	5d                   	pop    %rbp
   1883a:	41 5c                	pop    %r12
   1883c:	e9 35 ac ff ff       	jmp    13476 <shell>
   18841:	31 ff                	xor    %edi,%edi
   18843:	48 89 e2             	mov    %rsp,%rdx
   18846:	48 8d 35 0b 10 01 00 	lea    0x1100b(%rip),%rsi        # 29858 <scriptlet_setting>
   1884d:	e8 9c 95 ff ff       	call   11dee <fetch_string_setting_copy>
   18852:	48 8b 3c 24          	mov    (%rsp),%rdi
   18856:	48 85 ff             	test   %rdi,%rdi
   18859:	74 13                	je     1886e <ipxe+0xf3>
   1885b:	e8 12 55 00 00       	call   1dd72 <system>
   18860:	48 8b 3c 24          	mov    (%rsp),%rdi
   18864:	41 89 c4             	mov    %eax,%r12d
   18867:	e8 e3 3d ff ff       	call   c64f <free>
   1886c:	eb 7e                	jmp    188ec <ipxe+0x171>
   1886e:	4d 85 e4             	test   %r12,%r12
   18871:	74 0d                	je     18880 <ipxe+0x105>
   18873:	4c 89 e7             	mov    %r12,%rdi
   18876:	e8 cc fb ff ff       	call   18447 <netboot>
   1887b:	41 89 c4             	mov    %eax,%r12d
   1887e:	eb 5b                	jmp    188db <ipxe+0x160>
   18880:	48 8b 05 99 e0 00 00 	mov    0xe099(%rip),%rax        # 26920 <net_devices>
   18887:	41 bc 79 1f fc d3    	mov    $0xd3fc1f79,%r12d
   1888d:	48 8d 2d 8c e0 00 00 	lea    0xe08c(%rip),%rbp        # 26920 <net_devices>
   18894:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
   18898:	48 8d 43 10          	lea    0x10(%rbx),%rax
   1889c:	48 39 e8             	cmp    %rbp,%rax
   1889f:	74 2c                	je     188cd <ipxe+0x152>
   188a1:	48 8b 05 80 15 01 00 	mov    0x11580(%rip),%rax        # 29e28 <is_autoboot_device>
   188a8:	48 85 c0             	test   %rax,%rax
   188ab:	75 0d                	jne    188ba <ipxe+0x13f>
   188ad:	48 89 df             	mov    %rbx,%rdi
   188b0:	e8 92 fb ff ff       	call   18447 <netboot>
   188b5:	41 89 c4             	mov    %eax,%r12d
   188b8:	eb 09                	jmp    188c3 <ipxe+0x148>
   188ba:	48 89 df             	mov    %rbx,%rdi
   188bd:	ff d0                	call   *%rax
   188bf:	85 c0                	test   %eax,%eax
   188c1:	75 ea                	jne    188ad <ipxe+0x132>
   188c3:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   188c7:	48 83 eb 10          	sub    $0x10,%rbx
   188cb:	eb cb                	jmp    18898 <ipxe+0x11d>
   188cd:	48 8d 3d f0 b6 00 00 	lea    0xb6f0(%rip),%rdi        # 23fc4 <.LC23>
   188d4:	31 c0                	xor    %eax,%eax
   188d6:	e8 c3 e8 ff ff       	call   1719e <printf>
   188db:	e8 28 f8 ff ff       	call   18108 <shell_banner>
   188e0:	85 c0                	test   %eax,%eax
   188e2:	74 08                	je     188ec <ipxe+0x171>
   188e4:	e8 8d ab ff ff       	call   13476 <shell>
   188e9:	41 89 c4             	mov    %eax,%r12d
   188ec:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   188f1:	48 2b 05 78 16 01 00 	sub    0x11678(%rip),%rax        # 29f70 <__stack_chk_guard>
   188f8:	74 05                	je     188ff <ipxe+0x184>
   188fa:	e8 61 a1 fe ff       	call   2a60 <__stack_chk_fail>
   188ff:	48 83 c4 10          	add    $0x10,%rsp
   18903:	44 89 e0             	mov    %r12d,%eax
   18906:	5b                   	pop    %rbx
   18907:	5d                   	pop    %rbp
   18908:	41 5c                	pop    %r12
   1890a:	c3                   	ret    

000000000001890b <autoboot_exec>:
   1890b:	f3 0f 1e fa          	endbr64 
   1890f:	48 8d 15 0a ec 00 00 	lea    0xec0a(%rip),%rdx        # 27520 <autoboot_cmd>
   18916:	e9 4c fd fe ff       	jmp    8667 <ifcommon_exec>

000000000001891b <autoboot_payload>:
   1891b:	f3 0f 1e fa          	endbr64 
   1891f:	e9 23 fb ff ff       	jmp    18447 <netboot>

0000000000018924 <hex_encode>:
   18924:	f3 0f 1e fa          	endbr64 
   18928:	41 57                	push   %r15
   1892a:	41 56                	push   %r14
   1892c:	41 55                	push   %r13
   1892e:	49 89 f5             	mov    %rsi,%r13
   18931:	41 54                	push   %r12
   18933:	55                   	push   %rbp
   18934:	4c 89 c5             	mov    %r8,%rbp
   18937:	53                   	push   %rbx
   18938:	48 89 cb             	mov    %rcx,%rbx
   1893b:	48 83 ec 28          	sub    $0x28,%rsp
   1893f:	48 8b 05 2a 16 01 00 	mov    0x1162a(%rip),%rax        # 29f70 <__stack_chk_guard>
   18946:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1894b:	31 c0                	xor    %eax,%eax
   1894d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   18952:	40 88 7c 24 16       	mov    %dil,0x16(%rsp)
   18957:	c6 44 24 17 00       	movb   $0x0,0x17(%rsp)
   1895c:	4d 85 c0             	test   %r8,%r8
   1895f:	74 03                	je     18964 <hex_encode+0x40>
   18961:	c6 01 00             	movb   $0x0,(%rcx)
   18964:	45 31 f6             	xor    %r14d,%r14d
   18967:	45 31 e4             	xor    %r12d,%r12d
   1896a:	4c 8d 3d 63 ba 00 00 	lea    0xba63(%rip),%r15        # 243d4 <.LC0>
   18971:	44 89 f0             	mov    %r14d,%eax
   18974:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
   18979:	73 34                	jae    189af <hex_encode+0x8b>
   1897b:	4d 85 e4             	test   %r12,%r12
   1897e:	48 8d 4c 24 16       	lea    0x16(%rsp),%rcx
   18983:	4a 8d 3c 23          	lea    (%rbx,%r12,1),%rdi
   18987:	48 89 ee             	mov    %rbp,%rsi
   1898a:	49 0f 44 cf          	cmove  %r15,%rcx
   1898e:	45 0f b6 44 05 00    	movzbl 0x0(%r13,%rax,1),%r8d
   18994:	4c 29 e6             	sub    %r12,%rsi
   18997:	31 c0                	xor    %eax,%eax
   18999:	48 8d 15 a0 b6 00 00 	lea    0xb6a0(%rip),%rdx        # 24040 <.LC1>
   189a0:	41 ff c6             	inc    %r14d
   189a3:	e8 4b e7 ff ff       	call   170f3 <ssnprintf>
   189a8:	48 98                	cltq   
   189aa:	49 01 c4             	add    %rax,%r12
   189ad:	eb c2                	jmp    18971 <hex_encode+0x4d>
   189af:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   189b4:	48 2b 05 b5 15 01 00 	sub    0x115b5(%rip),%rax        # 29f70 <__stack_chk_guard>
   189bb:	74 05                	je     189c2 <hex_encode+0x9e>
   189bd:	e8 9e a0 fe ff       	call   2a60 <__stack_chk_fail>
   189c2:	48 83 c4 28          	add    $0x28,%rsp
   189c6:	4c 89 e0             	mov    %r12,%rax
   189c9:	5b                   	pop    %rbx
   189ca:	5d                   	pop    %rbp
   189cb:	41 5c                	pop    %r12
   189cd:	41 5d                	pop    %r13
   189cf:	41 5e                	pop    %r14
   189d1:	41 5f                	pop    %r15
   189d3:	c3                   	ret    

00000000000189d4 <hex_decode>:
   189d4:	f3 0f 1e fa          	endbr64 
   189d8:	41 57                	push   %r15
   189da:	41 56                	push   %r14
   189dc:	49 89 ce             	mov    %rcx,%r14
   189df:	41 55                	push   %r13
   189e1:	49 89 d5             	mov    %rdx,%r13
   189e4:	41 54                	push   %r12
   189e6:	41 89 fc             	mov    %edi,%r12d
   189e9:	55                   	push   %rbp
   189ea:	48 89 f5             	mov    %rsi,%rbp
   189ed:	53                   	push   %rbx
   189ee:	31 db                	xor    %ebx,%ebx
   189f0:	48 83 ec 18          	sub    $0x18,%rsp
   189f4:	8a 45 00             	mov    0x0(%rbp),%al
   189f7:	84 c0                	test   %al,%al
   189f9:	74 5c                	je     18a57 <hex_decode+0x83>
   189fb:	85 db                	test   %ebx,%ebx
   189fd:	74 0f                	je     18a0e <hex_decode+0x3a>
   189ff:	45 84 e4             	test   %r12b,%r12b
   18a02:	74 0a                	je     18a0e <hex_decode+0x3a>
   18a04:	48 ff c5             	inc    %rbp
   18a07:	44 38 e0             	cmp    %r12b,%al
   18a0a:	74 02                	je     18a0e <hex_decode+0x3a>
   18a0c:	eb 2a                	jmp    18a38 <hex_decode+0x64>
   18a0e:	0f be 7d 00          	movsbl 0x0(%rbp),%edi
   18a12:	e8 43 b0 ff ff       	call   13a5a <digit_value>
   18a17:	83 f8 0f             	cmp    $0xf,%eax
   18a1a:	76 02                	jbe    18a1e <hex_decode+0x4a>
   18a1c:	eb 1a                	jmp    18a38 <hex_decode+0x64>
   18a1e:	0f be 7d 01          	movsbl 0x1(%rbp),%edi
   18a22:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   18a26:	4c 8d 7d 02          	lea    0x2(%rbp),%r15
   18a2a:	e8 2b b0 ff ff       	call   13a5a <digit_value>
   18a2f:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   18a33:	83 f8 0f             	cmp    $0xf,%eax
   18a36:	76 07                	jbe    18a3f <hex_decode+0x6b>
   18a38:	b8 7e df ee e3       	mov    $0xe3eedf7e,%eax
   18a3d:	eb 1a                	jmp    18a59 <hex_decode+0x85>
   18a3f:	89 d9                	mov    %ebx,%ecx
   18a41:	4c 39 f1             	cmp    %r14,%rcx
   18a44:	73 0a                	jae    18a50 <hex_decode+0x7c>
   18a46:	c1 e2 04             	shl    $0x4,%edx
   18a49:	09 c2                	or     %eax,%edx
   18a4b:	41 88 54 0d 00       	mov    %dl,0x0(%r13,%rcx,1)
   18a50:	ff c3                	inc    %ebx
   18a52:	4c 89 fd             	mov    %r15,%rbp
   18a55:	eb 9d                	jmp    189f4 <hex_decode+0x20>
   18a57:	89 d8                	mov    %ebx,%eax
   18a59:	48 83 c4 18          	add    $0x18,%rsp
   18a5d:	5b                   	pop    %rbx
   18a5e:	5d                   	pop    %rbp
   18a5f:	41 5c                	pop    %r12
   18a61:	41 5d                	pop    %r13
   18a63:	41 5e                	pop    %r14
   18a65:	41 5f                	pop    %r15
   18a67:	c3                   	ret    

0000000000018a68 <base64_encode>:
   18a68:	f3 0f 1e fa          	endbr64 
   18a6c:	49 89 f2             	mov    %rsi,%r10
   18a6f:	41 54                	push   %r12
   18a71:	49 89 f9             	mov    %rdi,%r9
   18a74:	48 89 ce             	mov    %rcx,%rsi
   18a77:	55                   	push   %rbp
   18a78:	48 89 d7             	mov    %rdx,%rdi
   18a7b:	4e 8d 1c d5 00 00 00 	lea    0x0(,%r10,8),%r11
   18a82:	00 
   18a83:	45 31 c0             	xor    %r8d,%r8d
   18a86:	53                   	push   %rbx
   18a87:	48 8d 2d 32 9b 00 00 	lea    0x9b32(%rip),%rbp        # 225c0 <base64>
   18a8e:	bb 08 00 00 00       	mov    $0x8,%ebx
   18a93:	41 6b d0 06          	imul   $0x6,%r8d,%edx
   18a97:	41 89 d4             	mov    %edx,%r12d
   18a9a:	48 89 d0             	mov    %rdx,%rax
   18a9d:	41 83 e4 07          	and    $0x7,%r12d
   18aa1:	4c 39 da             	cmp    %r11,%rdx
   18aa4:	73 4c                	jae    18af2 <base64_encode+0x8a>
   18aa6:	c1 e8 03             	shr    $0x3,%eax
   18aa9:	44 89 e1             	mov    %r12d,%ecx
   18aac:	89 c2                	mov    %eax,%edx
   18aae:	ff c0                	inc    %eax
   18ab0:	41 0f b6 14 11       	movzbl (%r9,%rdx,1),%edx
   18ab5:	d3 e2                	shl    %cl,%edx
   18ab7:	4c 39 d0             	cmp    %r10,%rax
   18aba:	73 0e                	jae    18aca <base64_encode+0x62>
   18abc:	41 0f b6 04 01       	movzbl (%r9,%rax,1),%eax
   18ac1:	89 d9                	mov    %ebx,%ecx
   18ac3:	44 29 e1             	sub    %r12d,%ecx
   18ac6:	d3 f8                	sar    %cl,%eax
   18ac8:	09 c2                	or     %eax,%edx
   18aca:	49 39 f0             	cmp    %rsi,%r8
   18acd:	73 0e                	jae    18add <base64_encode+0x75>
   18acf:	c1 ea 02             	shr    $0x2,%edx
   18ad2:	83 e2 3f             	and    $0x3f,%edx
   18ad5:	8a 44 15 00          	mov    0x0(%rbp,%rdx,1),%al
   18ad9:	42 88 04 07          	mov    %al,(%rdi,%r8,1)
   18add:	49 ff c0             	inc    %r8
   18ae0:	eb b1                	jmp    18a93 <base64_encode+0x2b>
   18ae2:	49 39 f0             	cmp    %rsi,%r8
   18ae5:	73 05                	jae    18aec <base64_encode+0x84>
   18ae7:	42 c6 04 07 3d       	movb   $0x3d,(%rdi,%r8,1)
   18aec:	83 c0 06             	add    $0x6,%eax
   18aef:	49 ff c0             	inc    %r8
   18af2:	a8 07                	test   $0x7,%al
   18af4:	75 ec                	jne    18ae2 <base64_encode+0x7a>
   18af6:	49 39 f0             	cmp    %rsi,%r8
   18af9:	73 05                	jae    18b00 <base64_encode+0x98>
   18afb:	42 c6 04 07 00       	movb   $0x0,(%rdi,%r8,1)
   18b00:	48 85 f6             	test   %rsi,%rsi
   18b03:	74 05                	je     18b0a <base64_encode+0xa2>
   18b05:	c6 44 37 ff 00       	movb   $0x0,-0x1(%rdi,%rsi,1)
   18b0a:	5b                   	pop    %rbx
   18b0b:	4c 89 c0             	mov    %r8,%rax
   18b0e:	5d                   	pop    %rbp
   18b0f:	41 5c                	pop    %r12
   18b11:	c3                   	ret    

0000000000018b12 <base64_decode>:
   18b12:	f3 0f 1e fa          	endbr64 
   18b16:	41 57                	push   %r15
   18b18:	48 89 d1             	mov    %rdx,%rcx
   18b1b:	31 c0                	xor    %eax,%eax
   18b1d:	41 56                	push   %r14
   18b1f:	49 89 f6             	mov    %rsi,%r14
   18b22:	41 55                	push   %r13
   18b24:	41 54                	push   %r12
   18b26:	55                   	push   %rbp
   18b27:	48 89 d5             	mov    %rdx,%rbp
   18b2a:	53                   	push   %rbx
   18b2b:	48 89 fb             	mov    %rdi,%rbx
   18b2e:	48 89 f7             	mov    %rsi,%rdi
   18b31:	48 83 ec 18          	sub    $0x18,%rsp
   18b35:	f3 aa                	rep stos %al,%es:(%rdi)
   18b37:	45 31 e4             	xor    %r12d,%r12d
   18b3a:	45 31 ff             	xor    %r15d,%r15d
   18b3d:	4c 8d 2d 7c 9a 00 00 	lea    0x9a7c(%rip),%r13        # 225c0 <base64>
   18b44:	8a 13                	mov    (%rbx),%dl
   18b46:	48 ff c3             	inc    %rbx
   18b49:	84 d2                	test   %dl,%dl
   18b4b:	0f 84 8d 00 00 00    	je     18bde <base64_decode+0xcc>
   18b51:	0f b6 f2             	movzbl %dl,%esi
   18b54:	88 54 24 0f          	mov    %dl,0xf(%rsp)
   18b58:	89 f7                	mov    %esi,%edi
   18b5a:	89 74 24 08          	mov    %esi,0x8(%rsp)
   18b5e:	e8 4d 08 00 00       	call   193b0 <isspace>
   18b63:	85 c0                	test   %eax,%eax
   18b65:	75 dd                	jne    18b44 <base64_decode+0x32>
   18b67:	8a 54 24 0f          	mov    0xf(%rsp),%dl
   18b6b:	8b 74 24 08          	mov    0x8(%rsp),%esi
   18b6f:	80 fa 3d             	cmp    $0x3d,%dl
   18b72:	75 11                	jne    18b85 <base64_decode+0x73>
   18b74:	41 83 fc 01          	cmp    $0x1,%r12d
   18b78:	76 02                	jbe    18b7c <base64_decode+0x6a>
   18b7a:	eb 6e                	jmp    18bea <base64_decode+0xd8>
   18b7c:	41 ff c4             	inc    %r12d
   18b7f:	41 83 ef 02          	sub    $0x2,%r15d
   18b83:	eb bf                	jmp    18b44 <base64_decode+0x32>
   18b85:	45 85 e4             	test   %r12d,%r12d
   18b88:	74 02                	je     18b8c <base64_decode+0x7a>
   18b8a:	eb 5e                	jmp    18bea <base64_decode+0xd8>
   18b8c:	4c 89 ef             	mov    %r13,%rdi
   18b8f:	e8 b3 ad ff ff       	call   13947 <strchr>
   18b94:	48 85 c0             	test   %rax,%rax
   18b97:	75 02                	jne    18b9b <base64_decode+0x89>
   18b99:	eb 4f                	jmp    18bea <base64_decode+0xd8>
   18b9b:	44 89 fa             	mov    %r15d,%edx
   18b9e:	4c 29 e8             	sub    %r13,%rax
   18ba1:	c1 ea 03             	shr    $0x3,%edx
   18ba4:	c1 e0 02             	shl    $0x2,%eax
   18ba7:	48 39 d5             	cmp    %rdx,%rbp
   18baa:	76 0e                	jbe    18bba <base64_decode+0xa8>
   18bac:	44 89 f9             	mov    %r15d,%ecx
   18baf:	89 c7                	mov    %eax,%edi
   18bb1:	83 e1 07             	and    $0x7,%ecx
   18bb4:	d3 ff                	sar    %cl,%edi
   18bb6:	41 08 3c 16          	or     %dil,(%r14,%rdx,1)
   18bba:	48 ff c2             	inc    %rdx
   18bbd:	48 39 d5             	cmp    %rdx,%rbp
   18bc0:	76 13                	jbe    18bd5 <base64_decode+0xc3>
   18bc2:	44 89 fe             	mov    %r15d,%esi
   18bc5:	b9 08 00 00 00       	mov    $0x8,%ecx
   18bca:	83 e6 07             	and    $0x7,%esi
   18bcd:	29 f1                	sub    %esi,%ecx
   18bcf:	d3 e0                	shl    %cl,%eax
   18bd1:	41 08 04 16          	or     %al,(%r14,%rdx,1)
   18bd5:	41 83 c7 06          	add    $0x6,%r15d
   18bd9:	e9 66 ff ff ff       	jmp    18b44 <base64_decode+0x32>
   18bde:	44 89 f8             	mov    %r15d,%eax
   18be1:	c1 e8 03             	shr    $0x3,%eax
   18be4:	41 80 e7 07          	and    $0x7,%r15b
   18be8:	74 05                	je     18bef <base64_decode+0xdd>
   18bea:	b8 7e df ef e3       	mov    $0xe3efdf7e,%eax
   18bef:	48 83 c4 18          	add    $0x18,%rsp
   18bf3:	5b                   	pop    %rbx
   18bf4:	5d                   	pop    %rbp
   18bf5:	41 5c                	pop    %r12
   18bf7:	41 5d                	pop    %r13
   18bf9:	41 5e                	pop    %r14
   18bfb:	41 5f                	pop    %r15
   18bfd:	c3                   	ret    

0000000000018bfe <basename>:
   18bfe:	f3 0f 1e fa          	endbr64 
   18c02:	41 54                	push   %r12
   18c04:	be 2f 00 00 00       	mov    $0x2f,%esi
   18c09:	49 89 fc             	mov    %rdi,%r12
   18c0c:	e8 50 ad ff ff       	call   13961 <strrchr>
   18c11:	48 85 c0             	test   %rax,%rax
   18c14:	74 04                	je     18c1a <basename+0x1c>
   18c16:	4c 8d 60 01          	lea    0x1(%rax),%r12
   18c1a:	4c 89 e0             	mov    %r12,%rax
   18c1d:	41 5c                	pop    %r12
   18c1f:	c3                   	ret    

0000000000018c20 <dirname>:
   18c20:	f3 0f 1e fa          	endbr64 
   18c24:	41 54                	push   %r12
   18c26:	be 2f 00 00 00       	mov    $0x2f,%esi
   18c2b:	49 89 fc             	mov    %rdi,%r12
   18c2e:	e8 2e ad ff ff       	call   13961 <strrchr>
   18c33:	49 39 c4             	cmp    %rax,%r12
   18c36:	74 0a                	je     18c42 <dirname+0x22>
   18c38:	48 85 c0             	test   %rax,%rax
   18c3b:	74 0e                	je     18c4b <dirname+0x2b>
   18c3d:	c6 00 00             	movb   $0x0,(%rax)
   18c40:	eb 10                	jmp    18c52 <dirname+0x32>
   18c42:	4c 8d 25 b7 ac 00 00 	lea    0xacb7(%rip),%r12        # 23900 <.LC0>
   18c49:	eb 07                	jmp    18c52 <dirname+0x32>
   18c4b:	4c 8d 25 53 b1 00 00 	lea    0xb153(%rip),%r12        # 23da5 <.LC1>
   18c52:	4c 89 e0             	mov    %r12,%rax
   18c55:	41 5c                	pop    %r12
   18c57:	c3                   	ret    

0000000000018c58 <bitmap_resize>:
   18c58:	f3 0f 1e fa          	endbr64 
   18c5c:	41 56                	push   %r14
   18c5e:	89 f6                	mov    %esi,%esi
   18c60:	41 55                	push   %r13
   18c62:	49 89 f5             	mov    %rsi,%r13
   18c65:	48 83 c6 3f          	add    $0x3f,%rsi
   18c69:	41 54                	push   %r12
   18c6b:	48 c1 ee 06          	shr    $0x6,%rsi
   18c6f:	55                   	push   %rbp
   18c70:	41 89 f4             	mov    %esi,%r12d
   18c73:	48 89 fd             	mov    %rdi,%rbp
   18c76:	53                   	push   %rbx
   18c77:	8b 5f 08             	mov    0x8(%rdi),%ebx
   18c7a:	48 83 c3 3f          	add    $0x3f,%rbx
   18c7e:	48 c1 eb 06          	shr    $0x6,%rbx
   18c82:	41 89 de             	mov    %ebx,%r14d
   18c85:	39 f3                	cmp    %esi,%ebx
   18c87:	74 1c                	je     18ca5 <bitmap_resize+0x4d>
   18c89:	48 8b 3f             	mov    (%rdi),%rdi
   18c8c:	48 c1 e6 03          	shl    $0x3,%rsi
   18c90:	e8 b5 38 ff ff       	call   c54a <realloc>
   18c95:	48 85 c0             	test   %rax,%rax
   18c98:	75 07                	jne    18ca1 <bitmap_resize+0x49>
   18c9a:	b8 77 df f0 ce       	mov    $0xcef0df77,%eax
   18c9f:	eb 28                	jmp    18cc9 <bitmap_resize+0x71>
   18ca1:	48 89 45 00          	mov    %rax,0x0(%rbp)
   18ca5:	44 89 6d 08          	mov    %r13d,0x8(%rbp)
   18ca9:	48 c1 e3 03          	shl    $0x3,%rbx
   18cad:	45 39 e6             	cmp    %r12d,%r14d
   18cb0:	73 15                	jae    18cc7 <bitmap_resize+0x6f>
   18cb2:	48 8b 45 00          	mov    0x0(%rbp),%rax
   18cb6:	41 ff c6             	inc    %r14d
   18cb9:	48 c7 04 18 00 00 00 	movq   $0x0,(%rax,%rbx,1)
   18cc0:	00 
   18cc1:	48 83 c3 08          	add    $0x8,%rbx
   18cc5:	eb e6                	jmp    18cad <bitmap_resize+0x55>
   18cc7:	31 c0                	xor    %eax,%eax
   18cc9:	5b                   	pop    %rbx
   18cca:	5d                   	pop    %rbp
   18ccb:	41 5c                	pop    %r12
   18ccd:	41 5d                	pop    %r13
   18ccf:	41 5e                	pop    %r14
   18cd1:	c3                   	ret    

0000000000018cd2 <bitmap_test>:
   18cd2:	f3 0f 1e fa          	endbr64 
   18cd6:	89 f1                	mov    %esi,%ecx
   18cd8:	31 c0                	xor    %eax,%eax
   18cda:	39 77 08             	cmp    %esi,0x8(%rdi)
   18cdd:	76 1a                	jbe    18cf9 <bitmap_test+0x27>
   18cdf:	89 f2                	mov    %esi,%edx
   18ce1:	48 8b 37             	mov    (%rdi),%rsi
   18ce4:	b8 01 00 00 00       	mov    $0x1,%eax
   18ce9:	c1 ea 06             	shr    $0x6,%edx
   18cec:	48 d3 e0             	shl    %cl,%rax
   18cef:	48 23 04 d6          	and    (%rsi,%rdx,8),%rax
   18cf3:	0f 95 c0             	setne  %al
   18cf6:	0f b6 c0             	movzbl %al,%eax
   18cf9:	c3                   	ret    

0000000000018cfa <bitmap_set>:
   18cfa:	f3 0f 1e fa          	endbr64 
   18cfe:	89 f1                	mov    %esi,%ecx
   18d00:	89 f0                	mov    %esi,%eax
   18d02:	48 8b 37             	mov    (%rdi),%rsi
   18d05:	ba 01 00 00 00       	mov    $0x1,%edx
   18d0a:	c1 e8 06             	shr    $0x6,%eax
   18d0d:	48 d3 e2             	shl    %cl,%rdx
   18d10:	48 09 14 c6          	or     %rdx,(%rsi,%rax,8)
   18d14:	44 8b 47 0c          	mov    0xc(%rdi),%r8d
   18d18:	44 89 c6             	mov    %r8d,%esi
   18d1b:	e8 b2 ff ff ff       	call   18cd2 <bitmap_test>
   18d20:	85 c0                	test   %eax,%eax
   18d22:	74 09                	je     18d2d <bitmap_set+0x33>
   18d24:	41 ff c0             	inc    %r8d
   18d27:	44 89 47 0c          	mov    %r8d,0xc(%rdi)
   18d2b:	eb e7                	jmp    18d14 <bitmap_set+0x1a>
   18d2d:	c3                   	ret    

0000000000018d2e <block_read>:
   18d2e:	f3 0f 1e fa          	endbr64 
   18d32:	41 55                	push   %r13
   18d34:	49 89 d5             	mov    %rdx,%r13
   18d37:	41 54                	push   %r12
   18d39:	55                   	push   %rbp
   18d3a:	48 89 f5             	mov    %rsi,%rbp
   18d3d:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 18d2e <block_read>
   18d44:	48 83 ec 30          	sub    $0x30,%rsp
   18d48:	48 8b 05 21 12 01 00 	mov    0x11221(%rip),%rax        # 29f70 <__stack_chk_guard>
   18d4f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   18d54:	31 c0                	xor    %eax,%eax
   18d56:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   18d5b:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   18d5f:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   18d64:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   18d69:	e8 97 0a ff ff       	call   9805 <intf_get_dest_op_untyped>
   18d6e:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18d73:	49 89 c4             	mov    %rax,%r12
   18d76:	e8 34 0a ff ff       	call   97af <intf_object>
   18d7b:	4d 85 e4             	test   %r12,%r12
   18d7e:	74 1f                	je     18d9f <block_read+0x71>
   18d80:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   18d85:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   18d8a:	48 89 c7             	mov    %rax,%rdi
   18d8d:	4c 89 ea             	mov    %r13,%rdx
   18d90:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   18d94:	48 89 ee             	mov    %rbp,%rsi
   18d97:	41 ff d4             	call   *%r12
   18d9a:	41 89 c4             	mov    %eax,%r12d
   18d9d:	eb 06                	jmp    18da5 <block_read+0x77>
   18d9f:	41 bc 7d df ed c0    	mov    $0xc0eddf7d,%r12d
   18da5:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18daa:	e8 91 09 ff ff       	call   9740 <intf_put>
   18daf:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   18db4:	48 2b 05 b5 11 01 00 	sub    0x111b5(%rip),%rax        # 29f70 <__stack_chk_guard>
   18dbb:	74 05                	je     18dc2 <block_read+0x94>
   18dbd:	e8 9e 9c fe ff       	call   2a60 <__stack_chk_fail>
   18dc2:	48 83 c4 30          	add    $0x30,%rsp
   18dc6:	44 89 e0             	mov    %r12d,%eax
   18dc9:	5d                   	pop    %rbp
   18dca:	41 5c                	pop    %r12
   18dcc:	41 5d                	pop    %r13
   18dce:	c3                   	ret    

0000000000018dcf <block_write>:
   18dcf:	f3 0f 1e fa          	endbr64 
   18dd3:	41 55                	push   %r13
   18dd5:	49 89 d5             	mov    %rdx,%r13
   18dd8:	41 54                	push   %r12
   18dda:	55                   	push   %rbp
   18ddb:	48 89 f5             	mov    %rsi,%rbp
   18dde:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 18dcf <block_write>
   18de5:	48 83 ec 30          	sub    $0x30,%rsp
   18de9:	48 8b 05 80 11 01 00 	mov    0x11180(%rip),%rax        # 29f70 <__stack_chk_guard>
   18df0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   18df5:	31 c0                	xor    %eax,%eax
   18df7:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   18dfc:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
   18e00:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   18e05:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   18e0a:	e8 f6 09 ff ff       	call   9805 <intf_get_dest_op_untyped>
   18e0f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18e14:	49 89 c4             	mov    %rax,%r12
   18e17:	e8 93 09 ff ff       	call   97af <intf_object>
   18e1c:	4d 85 e4             	test   %r12,%r12
   18e1f:	74 1f                	je     18e40 <block_write+0x71>
   18e21:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   18e26:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
   18e2b:	48 89 c7             	mov    %rax,%rdi
   18e2e:	4c 89 ea             	mov    %r13,%rdx
   18e31:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
   18e35:	48 89 ee             	mov    %rbp,%rsi
   18e38:	41 ff d4             	call   *%r12
   18e3b:	41 89 c4             	mov    %eax,%r12d
   18e3e:	eb 06                	jmp    18e46 <block_write+0x77>
   18e40:	41 bc 7d df ed c0    	mov    $0xc0eddf7d,%r12d
   18e46:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   18e4b:	e8 f0 08 ff ff       	call   9740 <intf_put>
   18e50:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   18e55:	48 2b 05 14 11 01 00 	sub    0x11114(%rip),%rax        # 29f70 <__stack_chk_guard>
   18e5c:	74 05                	je     18e63 <block_write+0x94>
   18e5e:	e8 fd 9b fe ff       	call   2a60 <__stack_chk_fail>
   18e63:	48 83 c4 30          	add    $0x30,%rsp
   18e67:	44 89 e0             	mov    %r12d,%eax
   18e6a:	5d                   	pop    %rbp
   18e6b:	41 5c                	pop    %r12
   18e6d:	41 5d                	pop    %r13
   18e6f:	c3                   	ret    

0000000000018e70 <block_read_capacity>:
   18e70:	f3 0f 1e fa          	endbr64 
   18e74:	41 54                	push   %r12
   18e76:	55                   	push   %rbp
   18e77:	48 89 f5             	mov    %rsi,%rbp
   18e7a:	48 8d 35 ef ff ff ff 	lea    -0x11(%rip),%rsi        # 18e70 <block_read_capacity>
   18e81:	48 83 ec 18          	sub    $0x18,%rsp
   18e85:	48 8b 05 e4 10 01 00 	mov    0x110e4(%rip),%rax        # 29f70 <__stack_chk_guard>
   18e8c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18e91:	31 c0                	xor    %eax,%eax
   18e93:	48 89 e2             	mov    %rsp,%rdx
   18e96:	e8 6a 09 ff ff       	call   9805 <intf_get_dest_op_untyped>
   18e9b:	48 8b 3c 24          	mov    (%rsp),%rdi
   18e9f:	49 89 c4             	mov    %rax,%r12
   18ea2:	e8 08 09 ff ff       	call   97af <intf_object>
   18ea7:	4d 85 e4             	test   %r12,%r12
   18eaa:	74 0e                	je     18eba <block_read_capacity+0x4a>
   18eac:	48 89 c7             	mov    %rax,%rdi
   18eaf:	48 89 ee             	mov    %rbp,%rsi
   18eb2:	41 ff d4             	call   *%r12
   18eb5:	41 89 c4             	mov    %eax,%r12d
   18eb8:	eb 06                	jmp    18ec0 <block_read_capacity+0x50>
   18eba:	41 bc 7d df ed c0    	mov    $0xc0eddf7d,%r12d
   18ec0:	48 8b 3c 24          	mov    (%rsp),%rdi
   18ec4:	e8 77 08 ff ff       	call   9740 <intf_put>
   18ec9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18ece:	48 2b 05 9b 10 01 00 	sub    0x1109b(%rip),%rax        # 29f70 <__stack_chk_guard>
   18ed5:	74 05                	je     18edc <block_read_capacity+0x6c>
   18ed7:	e8 84 9b fe ff       	call   2a60 <__stack_chk_fail>
   18edc:	48 83 c4 18          	add    $0x18,%rsp
   18ee0:	44 89 e0             	mov    %r12d,%eax
   18ee3:	5d                   	pop    %rbp
   18ee4:	41 5c                	pop    %r12
   18ee6:	c3                   	ret    

0000000000018ee7 <block_capacity>:
   18ee7:	f3 0f 1e fa          	endbr64 
   18eeb:	55                   	push   %rbp
   18eec:	48 89 f5             	mov    %rsi,%rbp
   18eef:	48 8d 35 f1 ff ff ff 	lea    -0xf(%rip),%rsi        # 18ee7 <block_capacity>
   18ef6:	53                   	push   %rbx
   18ef7:	48 83 ec 18          	sub    $0x18,%rsp
   18efb:	48 8b 05 6e 10 01 00 	mov    0x1106e(%rip),%rax        # 29f70 <__stack_chk_guard>
   18f02:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18f07:	31 c0                	xor    %eax,%eax
   18f09:	48 89 e2             	mov    %rsp,%rdx
   18f0c:	e8 f4 08 ff ff       	call   9805 <intf_get_dest_op_untyped>
   18f11:	48 85 c0             	test   %rax,%rax
   18f14:	74 14                	je     18f2a <block_capacity+0x43>
   18f16:	48 8b 3c 24          	mov    (%rsp),%rdi
   18f1a:	48 89 c3             	mov    %rax,%rbx
   18f1d:	e8 8d 08 ff ff       	call   97af <intf_object>
   18f22:	48 89 ee             	mov    %rbp,%rsi
   18f25:	48 89 c7             	mov    %rax,%rdi
   18f28:	ff d3                	call   *%rbx
   18f2a:	48 8b 3c 24          	mov    (%rsp),%rdi
   18f2e:	e8 0d 08 ff ff       	call   9740 <intf_put>
   18f33:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18f38:	48 2b 05 31 10 01 00 	sub    0x11031(%rip),%rax        # 29f70 <__stack_chk_guard>
   18f3f:	74 05                	je     18f46 <block_capacity+0x5f>
   18f41:	e8 1a 9b fe ff       	call   2a60 <__stack_chk_fail>
   18f46:	48 83 c4 18          	add    $0x18,%rsp
   18f4a:	5b                   	pop    %rbx
   18f4b:	5d                   	pop    %rbp
   18f4c:	c3                   	ret    

0000000000018f4d <blktrans_buffer>:
   18f4d:	f3 0f 1e fa          	endbr64 
   18f51:	48 8d 47 50          	lea    0x50(%rdi),%rax
   18f55:	c3                   	ret    

0000000000018f56 <blktrans_xferbuf_write>:
   18f56:	f3 0f 1e fa          	endbr64 
   18f5a:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   18f5e:	48 89 f0             	mov    %rsi,%rax
   18f61:	48 89 d6             	mov    %rdx,%rsi
   18f64:	48 89 ca             	mov    %rcx,%rdx
   18f67:	48 85 ff             	test   %rdi,%rdi
   18f6a:	74 08                	je     18f74 <blktrans_xferbuf_write+0x1e>
   18f6c:	48 01 c7             	add    %rax,%rdi
   18f6f:	e9 99 e3 ff ff       	jmp    1730d <__memcpy>
   18f74:	c3                   	ret    

0000000000018f75 <blktrans_xferbuf_read>:
   18f75:	f3 0f 1e fa          	endbr64 
   18f79:	49 89 f8             	mov    %rdi,%r8
   18f7c:	48 89 d7             	mov    %rdx,%rdi
   18f7f:	48 89 ca             	mov    %rcx,%rdx
   18f82:	49 8b 40 20          	mov    0x20(%r8),%rax
   18f86:	48 85 c0             	test   %rax,%rax
   18f89:	74 08                	je     18f93 <blktrans_xferbuf_read+0x1e>
   18f8b:	48 01 c6             	add    %rax,%rsi
   18f8e:	e9 7a e3 ff ff       	jmp    1730d <__memcpy>
   18f93:	c3                   	ret    

0000000000018f94 <blktrans_close>:
   18f94:	f3 0f 1e fa          	endbr64 
   18f98:	41 54                	push   %r12
   18f9a:	4c 8d 67 10          	lea    0x10(%rdi),%r12
   18f9e:	55                   	push   %rbp
   18f9f:	89 f5                	mov    %esi,%ebp
   18fa1:	53                   	push   %rbx
   18fa2:	48 89 fb             	mov    %rdi,%rbx
   18fa5:	48 83 ec 20          	sub    $0x20,%rsp
   18fa9:	48 8b 05 c0 0f 01 00 	mov    0x10fc0(%rip),%rax        # 29f70 <__stack_chk_guard>
   18fb0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18fb5:	31 c0                	xor    %eax,%eax
   18fb7:	85 f6                	test   %esi,%esi
   18fb9:	75 2e                	jne    18fe9 <blktrans_close+0x55>
   18fbb:	48 8b 4f 78          	mov    0x78(%rdi),%rcx
   18fbf:	48 85 c9             	test   %rcx,%rcx
   18fc2:	74 25                	je     18fe9 <blktrans_close+0x55>
   18fc4:	48 8b 47 58          	mov    0x58(%rdi),%rax
   18fc8:	31 d2                	xor    %edx,%edx
   18fca:	48 89 e6             	mov    %rsp,%rsi
   18fcd:	4c 89 e7             	mov    %r12,%rdi
   18fd0:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   18fd5:	48 f7 f1             	div    %rcx
   18fd8:	c7 44 24 10 ff ff ff 	movl   $0xffffffff,0x10(%rsp)
   18fdf:	ff 
   18fe0:	48 89 04 24          	mov    %rax,(%rsp)
   18fe4:	e8 fe fe ff ff       	call   18ee7 <block_capacity>
   18fe9:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   18fed:	89 ee                	mov    %ebp,%esi
   18fef:	e8 db 08 ff ff       	call   98cf <intf_shutdown>
   18ff4:	89 ee                	mov    %ebp,%esi
   18ff6:	4c 89 e7             	mov    %r12,%rdi
   18ff9:	e8 d1 08 ff ff       	call   98cf <intf_shutdown>
   18ffe:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   19003:	48 2b 05 66 0f 01 00 	sub    0x10f66(%rip),%rax        # 29f70 <__stack_chk_guard>
   1900a:	74 05                	je     19011 <blktrans_close+0x7d>
   1900c:	e8 4f 9a fe ff       	call   2a60 <__stack_chk_fail>
   19011:	48 83 c4 20          	add    $0x20,%rsp
   19015:	5b                   	pop    %rbx
   19016:	5d                   	pop    %rbp
   19017:	41 5c                	pop    %r12
   19019:	c3                   	ret    

000000000001901a <blktrans_deliver>:
   1901a:	f3 0f 1e fa          	endbr64 
   1901e:	55                   	push   %rbp
   1901f:	48 89 fd             	mov    %rdi,%rbp
   19022:	48 83 c7 50          	add    $0x50,%rdi
   19026:	48 83 ec 10          	sub    $0x10,%rsp
   1902a:	e8 83 e9 ff ff       	call   179b2 <xferbuf_deliver>
   1902f:	85 c0                	test   %eax,%eax
   19031:	74 12                	je     19045 <blktrans_deliver+0x2b>
   19033:	89 c6                	mov    %eax,%esi
   19035:	48 89 ef             	mov    %rbp,%rdi
   19038:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1903c:	e8 53 ff ff ff       	call   18f94 <blktrans_close>
   19041:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   19045:	48 83 c4 10          	add    $0x10,%rsp
   19049:	5d                   	pop    %rbp
   1904a:	c3                   	ret    

000000000001904b <blktrans_xferbuf_realloc>:
   1904b:	f3 0f 1e fa          	endbr64 
   1904f:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
   19054:	74 06                	je     1905c <blktrans_xferbuf_realloc+0x11>
   19056:	b8 7d df df c3       	mov    $0xc3dfdf7d,%eax
   1905b:	c3                   	ret    
   1905c:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   19060:	31 c0                	xor    %eax,%eax
   19062:	c3                   	ret    

0000000000019063 <block_translate>:
   19063:	f3 0f 1e fa          	endbr64 
   19067:	41 56                	push   %r14
   19069:	41 55                	push   %r13
   1906b:	49 89 f5             	mov    %rsi,%r13
   1906e:	41 54                	push   %r12
   19070:	49 89 fc             	mov    %rdi,%r12
   19073:	bf 80 00 00 00       	mov    $0x80,%edi
   19078:	55                   	push   %rbp
   19079:	53                   	push   %rbx
   1907a:	48 89 d3             	mov    %rdx,%rbx
   1907d:	e8 d8 35 ff ff       	call   c65a <zalloc>
   19082:	48 85 c0             	test   %rax,%rax
   19085:	75 07                	jne    1908e <block_translate+0x2b>
   19087:	b8 77 df df ce       	mov    $0xcedfdf77,%eax
   1908c:	eb 7c                	jmp    1910a <block_translate+0xa7>
   1908e:	48 89 c5             	mov    %rax,%rbp
   19091:	4c 8d 70 10          	lea    0x10(%rax),%r14
   19095:	48 8d 05 44 d3 00 00 	lea    0xd344(%rip),%rax        # 263e0 <null_intf>
   1909c:	48 89 45 10          	mov    %rax,0x10(%rbp)
   190a0:	48 8d 15 19 e5 00 00 	lea    0xe519(%rip),%rdx        # 275c0 <blktrans_block_desc>
   190a7:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   190ab:	48 89 45 30          	mov    %rax,0x30(%rbp)
   190af:	48 8d 05 aa e4 00 00 	lea    0xe4aa(%rip),%rax        # 27560 <blktrans_xfer_desc>
   190b6:	48 89 45 40          	mov    %rax,0x40(%rbp)
   190ba:	48 89 45 48          	mov    %rax,0x48(%rbp)
   190be:	48 8d 05 2b e5 00 00 	lea    0xe52b(%rip),%rax        # 275f0 <blktrans_xferbuf_operations>
   190c5:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   190c9:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   190cd:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   190d1:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   190d5:	48 89 45 68          	mov    %rax,0x68(%rbp)
   190d9:	4c 89 6d 70          	mov    %r13,0x70(%rbp)
   190dd:	4d 85 ed             	test   %r13,%r13
   190e0:	74 06                	je     190e8 <block_translate+0x85>
   190e2:	48 89 5d 58          	mov    %rbx,0x58(%rbp)
   190e6:	eb 04                	jmp    190ec <block_translate+0x89>
   190e8:	48 89 5d 78          	mov    %rbx,0x78(%rbp)
   190ec:	49 8b 34 24          	mov    (%r12),%rsi
   190f0:	e8 7c 06 ff ff       	call   9771 <intf_plug_plug>
   190f5:	4c 89 e6             	mov    %r12,%rsi
   190f8:	4c 89 f7             	mov    %r14,%rdi
   190fb:	e8 71 06 ff ff       	call   9771 <intf_plug_plug>
   19100:	48 89 ef             	mov    %rbp,%rdi
   19103:	e8 36 6d ff ff       	call   fe3e <ref_decrement>
   19108:	31 c0                	xor    %eax,%eax
   1910a:	5b                   	pop    %rbx
   1910b:	5d                   	pop    %rbp
   1910c:	41 5c                	pop    %r12
   1910e:	41 5d                	pop    %r13
   19110:	41 5e                	pop    %r14
   19112:	c3                   	ret    

0000000000019113 <chap_init>:
   19113:	f3 0f 1e fa          	endbr64 
   19117:	55                   	push   %rbp
   19118:	48 89 fd             	mov    %rdi,%rbp
   1911b:	53                   	push   %rbx
   1911c:	48 89 f3             	mov    %rsi,%rbx
   1911f:	51                   	push   %rcx
   19120:	48 8b 7e 18          	mov    0x18(%rsi),%rdi
   19124:	48 03 7e 08          	add    0x8(%rsi),%rdi
   19128:	e8 14 35 ff ff       	call   c641 <malloc>
   1912d:	48 85 c0             	test   %rax,%rax
   19130:	75 07                	jne    19139 <chap_init+0x26>
   19132:	b8 77 1f fe ce       	mov    $0xcefe1f77,%eax
   19137:	eb 23                	jmp    1915c <chap_init+0x49>
   19139:	48 89 c7             	mov    %rax,%rdi
   1913c:	48 89 45 08          	mov    %rax,0x8(%rbp)
   19140:	48 8b 43 08          	mov    0x8(%rbx),%rax
   19144:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
   19148:	48 01 f8             	add    %rdi,%rax
   1914b:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1914f:	48 8b 43 18          	mov    0x18(%rbx),%rax
   19153:	48 89 45 18          	mov    %rax,0x18(%rbp)
   19157:	ff 53 20             	call   *0x20(%rbx)
   1915a:	31 c0                	xor    %eax,%eax
   1915c:	5a                   	pop    %rdx
   1915d:	5b                   	pop    %rbx
   1915e:	5d                   	pop    %rbp
   1915f:	c3                   	ret    

0000000000019160 <chap_update>:
   19160:	f3 0f 1e fa          	endbr64 
   19164:	48 8b 07             	mov    (%rdi),%rax
   19167:	48 85 c0             	test   %rax,%rax
   1916a:	74 07                	je     19173 <chap_update+0x13>
   1916c:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   19170:	ff 60 28             	jmp    *0x28(%rax)
   19173:	c3                   	ret    

0000000000019174 <chap_respond>:
   19174:	f3 0f 1e fa          	endbr64 
   19178:	48 8b 07             	mov    (%rdi),%rax
   1917b:	48 85 c0             	test   %rax,%rax
   1917e:	74 0b                	je     1918b <chap_respond+0x17>
   19180:	48 8b 77 10          	mov    0x10(%rdi),%rsi
   19184:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   19188:	ff 60 30             	jmp    *0x30(%rax)
   1918b:	c3                   	ret    

000000000001918c <chap_finish>:
   1918c:	f3 0f 1e fa          	endbr64 
   19190:	53                   	push   %rbx
   19191:	48 89 fb             	mov    %rdi,%rbx
   19194:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   19198:	e8 b2 34 ff ff       	call   c64f <free>
   1919d:	48 89 df             	mov    %rbx,%rdi
   191a0:	b9 20 00 00 00       	mov    $0x20,%ecx
   191a5:	31 c0                	xor    %eax,%eax
   191a7:	f3 aa                	rep stos %al,%es:(%rdi)
   191a9:	5b                   	pop    %rbx
   191aa:	c3                   	ret    

00000000000191ab <wclrtoeol>:
   191ab:	f3 0f 1e fa          	endbr64 
   191af:	41 55                	push   %r13
   191b1:	41 54                	push   %r12
   191b3:	48 83 ec 18          	sub    $0x18,%rsp
   191b7:	44 8b 67 18          	mov    0x18(%rdi),%r12d
   191bb:	44 8b 6f 14          	mov    0x14(%rdi),%r13d
   191bf:	31 d2                	xor    %edx,%edx
   191c1:	be 20 00 00 00       	mov    $0x20,%esi
   191c6:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   191cb:	e8 c0 42 ff ff       	call   d490 <_wputc>
   191d0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   191d5:	44 39 67 18          	cmp    %r12d,0x18(%rdi)
   191d9:	74 e4                	je     191bf <wclrtoeol+0x14>
   191db:	44 89 ea             	mov    %r13d,%edx
   191de:	44 89 e6             	mov    %r12d,%esi
   191e1:	e8 f9 42 ff ff       	call   d4df <wmove>
   191e6:	48 83 c4 18          	add    $0x18,%rsp
   191ea:	31 c0                	xor    %eax,%eax
   191ec:	41 5c                	pop    %r12
   191ee:	41 5d                	pop    %r13
   191f0:	c3                   	ret    

00000000000191f1 <erase>:
   191f1:	f3 0f 1e fa          	endbr64 
   191f5:	50                   	push   %rax
   191f6:	48 8b 05 83 d6 00 00 	mov    0xd683(%rip),%rax        # 26880 <_stdscr>
   191fd:	8b 35 85 d6 00 00    	mov    0xd685(%rip),%esi        # 26888 <_stdscr+0x8>
   19203:	48 89 c7             	mov    %rax,%rdi
   19206:	ff 50 20             	call   *0x20(%rax)
   19209:	31 c0                	xor    %eax,%eax
   1920b:	5a                   	pop    %rdx
   1920c:	c3                   	ret    

000000000001920d <has_input>:
   1920d:	41 54                	push   %r12
   1920f:	4c 8d 25 12 f5 00 00 	lea    0xf512(%rip),%r12        # 28728 <efi_console>
   19216:	53                   	push   %rbx
   19217:	48 8d 1d 3a f5 00 00 	lea    0xf53a(%rip),%rbx        # 28758 <__dhcp_feature_version>
   1921e:	51                   	push   %rcx
   1921f:	49 39 dc             	cmp    %rbx,%r12
   19222:	73 1f                	jae    19243 <has_input+0x36>
   19224:	41 f6 04 24 01       	testb  $0x1,(%r12)
   19229:	74 06                	je     19231 <has_input+0x24>
   1922b:	49 83 c4 30          	add    $0x30,%r12
   1922f:	eb ee                	jmp    1921f <has_input+0x12>
   19231:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   19236:	48 85 c0             	test   %rax,%rax
   19239:	74 f0                	je     1922b <has_input+0x1e>
   1923b:	ff d0                	call   *%rax
   1923d:	85 c0                	test   %eax,%eax
   1923f:	74 ea                	je     1922b <has_input+0x1e>
   19241:	eb 03                	jmp    19246 <has_input+0x39>
   19243:	45 31 e4             	xor    %r12d,%r12d
   19246:	4c 89 e0             	mov    %r12,%rax
   19249:	5a                   	pop    %rdx
   1924a:	5b                   	pop    %rbx
   1924b:	41 5c                	pop    %r12
   1924d:	c3                   	ret    

000000000001924e <putchar>:
   1924e:	f3 0f 1e fa          	endbr64 
   19252:	ba 02 04 00 00       	mov    $0x402,%edx
   19257:	89 f8                	mov    %edi,%eax
   19259:	ee                   	out    %al,(%dx)
   1925a:	c3                   	ret    

000000000001925b <getchar>:
   1925b:	f3 0f 1e fa          	endbr64 
   1925f:	51                   	push   %rcx
   19260:	e8 a8 ff ff ff       	call   1920d <has_input>
   19265:	48 85 c0             	test   %rax,%rax
   19268:	74 17                	je     19281 <getchar+0x26>
   1926a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1926e:	48 85 c0             	test   %rax,%rax
   19271:	74 0e                	je     19281 <getchar+0x26>
   19273:	ff d0                	call   *%rax
   19275:	83 f8 0d             	cmp    $0xd,%eax
   19278:	75 13                	jne    1928d <getchar+0x32>
   1927a:	b8 0a 00 00 00       	mov    $0xa,%eax
   1927f:	eb 0c                	jmp    1928d <getchar+0x32>
   19281:	e8 11 46 00 00       	call   1d897 <cpu_nap>
   19286:	e8 21 67 ff ff       	call   f9ac <step>
   1928b:	eb d3                	jmp    19260 <getchar+0x5>
   1928d:	5a                   	pop    %rdx
   1928e:	c3                   	ret    

000000000001928f <iskey>:
   1928f:	f3 0f 1e fa          	endbr64 
   19293:	50                   	push   %rax
   19294:	e8 74 ff ff ff       	call   1920d <has_input>
   19299:	5a                   	pop    %rdx
   1929a:	48 85 c0             	test   %rax,%rax
   1929d:	0f 95 c0             	setne  %al
   192a0:	0f b6 c0             	movzbl %al,%eax
   192a3:	c3                   	ret    

00000000000192a4 <console_configure>:
   192a4:	f3 0f 1e fa          	endbr64 
   192a8:	41 55                	push   %r13
   192aa:	4c 8d 2d a7 f4 00 00 	lea    0xf4a7(%rip),%r13        # 28758 <__dhcp_feature_version>
   192b1:	41 54                	push   %r12
   192b3:	55                   	push   %rbp
   192b4:	48 89 fd             	mov    %rdi,%rbp
   192b7:	53                   	push   %rbx
   192b8:	48 8d 1d 69 f4 00 00 	lea    0xf469(%rip),%rbx        # 28728 <efi_console>
   192bf:	51                   	push   %rcx
   192c0:	c7 05 ea b2 00 00 50 	movl   $0x50,0xb2ea(%rip)        # 245b4 <console_width>
   192c7:	00 00 00 
   192ca:	c7 05 dc b2 00 00 19 	movl   $0x19,0xb2dc(%rip)        # 245b0 <console_height>
   192d1:	00 00 00 
   192d4:	4c 39 eb             	cmp    %r13,%rbx
   192d7:	73 29                	jae    19302 <console_configure+0x5e>
   192d9:	48 8b 43 20          	mov    0x20(%rbx),%rax
   192dd:	48 85 c0             	test   %rax,%rax
   192e0:	74 1a                	je     192fc <console_configure+0x58>
   192e2:	48 89 ef             	mov    %rbp,%rdi
   192e5:	ff d0                	call   *%rax
   192e7:	41 89 c4             	mov    %eax,%r12d
   192ea:	85 c0                	test   %eax,%eax
   192ec:	74 0e                	je     192fc <console_configure+0x58>
   192ee:	48 85 ed             	test   %rbp,%rbp
   192f1:	74 12                	je     19305 <console_configure+0x61>
   192f3:	31 ff                	xor    %edi,%edi
   192f5:	e8 aa ff ff ff       	call   192a4 <console_configure>
   192fa:	eb 09                	jmp    19305 <console_configure+0x61>
   192fc:	48 83 c3 30          	add    $0x30,%rbx
   19300:	eb d2                	jmp    192d4 <console_configure+0x30>
   19302:	45 31 e4             	xor    %r12d,%r12d
   19305:	5a                   	pop    %rdx
   19306:	44 89 e0             	mov    %r12d,%eax
   19309:	5b                   	pop    %rbx
   1930a:	5d                   	pop    %rbp
   1930b:	41 5c                	pop    %r12
   1930d:	41 5d                	pop    %r13
   1930f:	c3                   	ret    

0000000000019310 <cpuid_supported>:
   19310:	f3 0f 1e fa          	endbr64 
   19314:	9c                   	pushf  
   19315:	9c                   	pushf  
   19316:	58                   	pop    %rax
   19317:	48 89 c2             	mov    %rax,%rdx
   1931a:	48 81 f2 00 00 20 00 	xor    $0x200000,%rdx
   19321:	52                   	push   %rdx
   19322:	9d                   	popf   
   19323:	9c                   	pushf  
   19324:	5a                   	pop    %rdx
   19325:	9d                   	popf   
   19326:	48 31 d0             	xor    %rdx,%rax
   19329:	0f ba e0 15          	bt     $0x15,%eax
   1932d:	73 20                	jae    1934f <cpuid_supported+0x3f>
   1932f:	89 f8                	mov    %edi,%eax
   19331:	31 c9                	xor    %ecx,%ecx
   19333:	53                   	push   %rbx
   19334:	25 00 00 00 80       	and    $0x80000000,%eax
   19339:	0f a2                	cpuid  
   1933b:	89 fa                	mov    %edi,%edx
   1933d:	31 c2                	xor    %eax,%edx
   1933f:	81 e2 00 00 ff ff    	and    $0xffff0000,%edx
   19345:	74 0e                	je     19355 <cpuid_supported+0x45>
   19347:	41 b8 7e df 6e e3    	mov    $0xe36edf7e,%r8d
   1934d:	eb 13                	jmp    19362 <cpuid_supported+0x52>
   1934f:	b8 7d df 6e c3       	mov    $0xc36edf7d,%eax
   19354:	c3                   	ret    
   19355:	45 31 c0             	xor    %r8d,%r8d
   19358:	39 c7                	cmp    %eax,%edi
   1935a:	76 06                	jbe    19362 <cpuid_supported+0x52>
   1935c:	41 b8 7d df 6e c2    	mov    $0xc26edf7d,%r8d
   19362:	44 89 c0             	mov    %r8d,%eax
   19365:	5b                   	pop    %rbx
   19366:	c3                   	ret    

0000000000019367 <x86_features>:
   19367:	f3 0f 1e fa          	endbr64 
   1936b:	53                   	push   %rbx
   1936c:	48 89 fe             	mov    %rdi,%rsi
   1936f:	31 c0                	xor    %eax,%eax
   19371:	ab                   	stos   %eax,%es:(%rdi)
   19372:	ab                   	stos   %eax,%es:(%rdi)
   19373:	ab                   	stos   %eax,%es:(%rdi)
   19374:	ab                   	stos   %eax,%es:(%rdi)
   19375:	bf 01 00 00 00       	mov    $0x1,%edi
   1937a:	e8 91 ff ff ff       	call   19310 <cpuid_supported>
   1937f:	85 c0                	test   %eax,%eax
   19381:	75 0e                	jne    19391 <x86_features+0x2a>
   19383:	89 c1                	mov    %eax,%ecx
   19385:	b8 01 00 00 00       	mov    $0x1,%eax
   1938a:	0f a2                	cpuid  
   1938c:	89 0e                	mov    %ecx,(%rsi)
   1938e:	89 56 04             	mov    %edx,0x4(%rsi)
   19391:	bf 01 00 00 80       	mov    $0x80000001,%edi
   19396:	e8 75 ff ff ff       	call   19310 <cpuid_supported>
   1939b:	89 c1                	mov    %eax,%ecx
   1939d:	85 c0                	test   %eax,%eax
   1939f:	75 0d                	jne    193ae <x86_features+0x47>
   193a1:	b8 01 00 00 80       	mov    $0x80000001,%eax
   193a6:	0f a2                	cpuid  
   193a8:	89 4e 08             	mov    %ecx,0x8(%rsi)
   193ab:	89 56 0c             	mov    %edx,0xc(%rsi)
   193ae:	5b                   	pop    %rbx
   193af:	c3                   	ret    

00000000000193b0 <isspace>:
   193b0:	f3 0f 1e fa          	endbr64 
   193b4:	83 ff 0d             	cmp    $0xd,%edi
   193b7:	7f 08                	jg     193c1 <isspace+0x11>
   193b9:	83 ff 08             	cmp    $0x8,%edi
   193bc:	0f 9f c0             	setg   %al
   193bf:	eb 06                	jmp    193c7 <isspace+0x17>
   193c1:	83 ff 20             	cmp    $0x20,%edi
   193c4:	0f 94 c0             	sete   %al
   193c7:	0f b6 c0             	movzbl %al,%eax
   193ca:	c3                   	ret    

00000000000193cb <churi>:
   193cb:	f3 0f 1e fa          	endbr64 
   193cf:	55                   	push   %rbp
   193d0:	48 89 fd             	mov    %rdi,%rbp
   193d3:	48 85 ff             	test   %rdi,%rdi
   193d6:	74 12                	je     193ea <churi+0x1f>
   193d8:	48 89 fe             	mov    %rdi,%rsi
   193db:	48 8b 3d ae 0a 01 00 	mov    0x10aae(%rip),%rdi        # 29e90 <cwuri>
   193e2:	e8 4f d5 ff ff       	call   16936 <resolve_uri>
   193e7:	48 89 c5             	mov    %rax,%rbp
   193ea:	48 8b 3d 9f 0a 01 00 	mov    0x10a9f(%rip),%rdi        # 29e90 <cwuri>
   193f1:	e8 48 6a ff ff       	call   fe3e <ref_decrement>
   193f6:	48 89 2d 93 0a 01 00 	mov    %rbp,0x10a93(%rip)        # 29e90 <cwuri>
   193fd:	5d                   	pop    %rbp
   193fe:	c3                   	ret    

00000000000193ff <dhcp_discovery_tx>:
   193ff:	f3 0f 1e fa          	endbr64 
   19403:	c7 42 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rdx)
   1940a:	31 c0                	xor    %eax,%eax
   1940c:	66 c7 42 04 00 43    	movw   $0x4300,0x4(%rdx)
   19412:	c3                   	ret    

0000000000019413 <dhcp_proxy_tx>:
   19413:	f3 0f 1e fa          	endbr64 
   19417:	55                   	push   %rbp
   19418:	48 89 fd             	mov    %rdi,%rbp
   1941b:	48 89 f7             	mov    %rsi,%rdi
   1941e:	be 36 00 00 00       	mov    $0x36,%esi
   19423:	53                   	push   %rbx
   19424:	48 89 d3             	mov    %rdx,%rbx
   19427:	48 8d 95 94 00 00 00 	lea    0x94(%rbp),%rdx
   1942e:	51                   	push   %rcx
   1942f:	b9 04 00 00 00       	mov    $0x4,%ecx
   19434:	e8 e3 14 00 00       	call   1a91c <dhcppkt_store>
   19439:	85 c0                	test   %eax,%eax
   1943b:	75 0f                	jne    1944c <dhcp_proxy_tx+0x39>
   1943d:	8b 95 94 00 00 00    	mov    0x94(%rbp),%edx
   19443:	66 c7 43 04 0f ab    	movw   $0xab0f,0x4(%rbx)
   19449:	89 53 08             	mov    %edx,0x8(%rbx)
   1944c:	5a                   	pop    %rdx
   1944d:	5b                   	pop    %rbx
   1944e:	5d                   	pop    %rbp
   1944f:	c3                   	ret    

0000000000019450 <dhcp_pxebs_tx>:
   19450:	f3 0f 1e fa          	endbr64 
   19454:	48 83 ec 18          	sub    $0x18,%rsp
   19458:	48 89 f8             	mov    %rdi,%rax
   1945b:	48 89 f7             	mov    %rsi,%rdi
   1945e:	be 0f ab ff ff       	mov    $0xffffab0f,%esi
   19463:	48 8b 0d 06 0b 01 00 	mov    0x10b06(%rip),%rcx        # 29f70 <__stack_chk_guard>
   1946a:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   1946f:	31 c9                	xor    %ecx,%ecx
   19471:	48 8b 88 a8 00 00 00 	mov    0xa8(%rax),%rcx
   19478:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
   1947f:	8b 09                	mov    (%rcx),%ecx
   19481:	89 4a 08             	mov    %ecx,0x8(%rdx)
   19484:	ff c1                	inc    %ecx
   19486:	b9 00 43 00 00       	mov    $0x4300,%ecx
   1948b:	0f 45 ce             	cmovne %esi,%ecx
   1948e:	be 47 2b 00 00       	mov    $0x2b47,%esi
   19493:	66 89 4a 04          	mov    %cx,0x4(%rdx)
   19497:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1949d:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   194a2:	b9 04 00 00 00       	mov    $0x4,%ecx
   194a7:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
   194ac:	e8 6b 14 00 00       	call   1a91c <dhcppkt_store>
   194b1:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   194b6:	48 2b 15 b3 0a 01 00 	sub    0x10ab3(%rip),%rdx        # 29f70 <__stack_chk_guard>
   194bd:	74 05                	je     194c4 <dhcp_pxebs_tx+0x74>
   194bf:	e8 9c 95 fe ff       	call   2a60 <__stack_chk_fail>
   194c4:	48 83 c4 18          	add    $0x18,%rsp
   194c8:	c3                   	ret    

00000000000194c9 <dhcp_free>:
   194c9:	f3 0f 1e fa          	endbr64 
   194cd:	55                   	push   %rbp
   194ce:	48 89 fd             	mov    %rdi,%rbp
   194d1:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
   194d5:	e8 64 69 ff ff       	call   fe3e <ref_decrement>
   194da:	48 8b bd 98 00 00 00 	mov    0x98(%rbp),%rdi
   194e1:	e8 58 69 ff ff       	call   fe3e <ref_decrement>
   194e6:	48 89 ef             	mov    %rbp,%rdi
   194e9:	5d                   	pop    %rbp
   194ea:	e9 60 31 ff ff       	jmp    c64f <free>

00000000000194ef <dhcp_has_pxeopts>:
   194ef:	48 83 ec 18          	sub    $0x18,%rsp
   194f3:	48 8b 47 10          	mov    0x10(%rdi),%rax
   194f7:	83 78 14 00          	cmpl   $0x0,0x14(%rax)
   194fb:	75 18                	jne    19515 <dhcp_has_pxeopts+0x26>
   194fd:	31 c9                	xor    %ecx,%ecx
   194ff:	31 d2                	xor    %edx,%edx
   19501:	be 09 2b 00 00       	mov    $0x2b09,%esi
   19506:	e8 ac 14 00 00       	call   1a9b7 <dhcppkt_fetch>
   1950b:	85 c0                	test   %eax,%eax
   1950d:	0f 9f c0             	setg   %al
   19510:	0f b6 c0             	movzbl %al,%eax
   19513:	eb 21                	jmp    19536 <dhcp_has_pxeopts+0x47>
   19515:	31 c9                	xor    %ecx,%ecx
   19517:	31 d2                	xor    %edx,%edx
   19519:	be 43 00 00 00       	mov    $0x43,%esi
   1951e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   19523:	e8 8f 14 00 00       	call   1a9b7 <dhcppkt_fetch>
   19528:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1952d:	85 c0                	test   %eax,%eax
   1952f:	7e cc                	jle    194fd <dhcp_has_pxeopts+0xe>
   19531:	b8 01 00 00 00       	mov    $0x1,%eax
   19536:	48 83 c4 18          	add    $0x18,%rsp
   1953a:	c3                   	ret    

000000000001953b <dhcp_deliver>:
   1953b:	f3 0f 1e fa          	endbr64 
   1953f:	41 57                	push   %r15
   19541:	41 56                	push   %r14
   19543:	41 55                	push   %r13
   19545:	49 89 f5             	mov    %rsi,%r13
   19548:	41 54                	push   %r12
   1954a:	55                   	push   %rbp
   1954b:	53                   	push   %rbx
   1954c:	48 83 ec 28          	sub    $0x28,%rsp
   19550:	4c 8b 67 50          	mov    0x50(%rdi),%r12
   19554:	4c 8b 7a 10          	mov    0x10(%rdx),%r15
   19558:	48 8b 05 11 0a 01 00 	mov    0x10a11(%rip),%rax        # 29f70 <__stack_chk_guard>
   1955f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19564:	31 c0                	xor    %eax,%eax
   19566:	c6 44 24 13 00       	movb   $0x0,0x13(%rsp)
   1956b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
   19572:	00 
   19573:	49 8b 5c 24 50       	mov    0x50(%r12),%rbx
   19578:	4d 85 ff             	test   %r15,%r15
   1957b:	75 0b                	jne    19588 <dhcp_deliver+0x4d>
   1957d:	41 bc 7e 9f ef e3    	mov    $0xe3ef9f7e,%r12d
   19583:	e9 07 01 00 00       	jmp    1968f <dhcp_deliver+0x154>
   19588:	48 8b 56 20          	mov    0x20(%rsi),%rdx
   1958c:	48 2b 56 18          	sub    0x18(%rsi),%rdx
   19590:	49 89 fe             	mov    %rdi,%r14
   19593:	48 8d ba 88 00 00 00 	lea    0x88(%rdx),%rdi
   1959a:	48 89 14 24          	mov    %rdx,(%rsp)
   1959e:	e8 b7 30 ff ff       	call   c65a <zalloc>
   195a3:	48 8b 14 24          	mov    (%rsp),%rdx
   195a7:	48 85 c0             	test   %rax,%rax
   195aa:	48 89 c5             	mov    %rax,%rbp
   195ad:	75 0b                	jne    195ba <dhcp_deliver+0x7f>
   195af:	41 bc 77 9f ef ce    	mov    $0xceef9f77,%r12d
   195b5:	e9 d5 00 00 00       	jmp    1968f <dhcp_deliver+0x154>
   195ba:	4c 8d 80 88 00 00 00 	lea    0x88(%rax),%r8
   195c1:	49 8b 75 18          	mov    0x18(%r13),%rsi
   195c5:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   195ca:	4c 89 c7             	mov    %r8,%rdi
   195cd:	4c 89 04 24          	mov    %r8,(%rsp)
   195d1:	e8 37 dd ff ff       	call   1730d <__memcpy>
   195d6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   195db:	48 8b 34 24          	mov    (%rsp),%rsi
   195df:	48 89 ef             	mov    %rbp,%rdi
   195e2:	e8 7b 14 00 00       	call   1aa62 <dhcppkt_init>
   195e7:	48 8d 54 24 13       	lea    0x13(%rsp),%rdx
   195ec:	b9 01 00 00 00       	mov    $0x1,%ecx
   195f1:	48 89 ef             	mov    %rbp,%rdi
   195f4:	be 35 00 00 00       	mov    $0x35,%esi
   195f9:	e8 b9 13 00 00       	call   1a9b7 <dhcppkt_fetch>
   195fe:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
   19603:	b9 04 00 00 00       	mov    $0x4,%ecx
   19608:	48 89 ef             	mov    %rbp,%rdi
   1960b:	be 36 00 00 00       	mov    $0x36,%esi
   19610:	e8 a2 13 00 00       	call   1a9b7 <dhcppkt_fetch>
   19615:	44 8b 4c 24 14       	mov    0x14(%rsp),%r9d
   1961a:	45 85 c9             	test   %r9d,%r9d
   1961d:	75 11                	jne    19630 <dhcp_deliver+0xf5>
   1961f:	48 8b 45 10          	mov    0x10(%rbp),%rax
   19623:	44 8b 48 14          	mov    0x14(%rax),%r9d
   19627:	45 85 c9             	test   %r9d,%r9d
   1962a:	75 04                	jne    19630 <dhcp_deliver+0xf5>
   1962c:	45 8b 4f 08          	mov    0x8(%r15),%r9d
   19630:	41 8b 86 80 00 00 00 	mov    0x80(%r14),%eax
   19637:	39 85 8c 00 00 00    	cmp    %eax,0x8c(%rbp)
   1963d:	74 02                	je     19641 <dhcp_deliver+0x106>
   1963f:	eb 24                	jmp    19665 <dhcp_deliver+0x12a>
   19641:	0f b6 53 43          	movzbl 0x43(%rbx),%edx
   19645:	49 8d 74 24 60       	lea    0x60(%r12),%rsi
   1964a:	48 8d bd a4 00 00 00 	lea    0xa4(%rbp),%rdi
   19651:	44 89 0c 24          	mov    %r9d,(%rsp)
   19655:	e8 fa a1 ff ff       	call   13854 <memcmp>
   1965a:	44 8b 0c 24          	mov    (%rsp),%r9d
   1965e:	85 c0                	test   %eax,%eax
   19660:	41 89 c4             	mov    %eax,%r12d
   19663:	74 08                	je     1966d <dhcp_deliver+0x132>
   19665:	41 bc 7e 9f ef e3    	mov    $0xe3ef9f7e,%r12d
   1966b:	eb 1a                	jmp    19687 <dhcp_deliver+0x14c>
   1966d:	49 8b 46 78          	mov    0x78(%r14),%rax
   19671:	0f b6 4c 24 13       	movzbl 0x13(%rsp),%ecx
   19676:	4c 89 fa             	mov    %r15,%rdx
   19679:	48 89 ee             	mov    %rbp,%rsi
   1967c:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
   19681:	4c 89 f7             	mov    %r14,%rdi
   19684:	ff 50 10             	call   *0x10(%rax)
   19687:	48 89 ef             	mov    %rbp,%rdi
   1968a:	e8 af 67 ff ff       	call   fe3e <ref_decrement>
   1968f:	4c 89 ef             	mov    %r13,%rdi
   19692:	e8 ff 05 ff ff       	call   9c96 <free_iob>
   19697:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1969c:	48 2b 05 cd 08 01 00 	sub    0x108cd(%rip),%rax        # 29f70 <__stack_chk_guard>
   196a3:	74 05                	je     196aa <dhcp_deliver+0x16f>
   196a5:	e8 b6 93 fe ff       	call   2a60 <__stack_chk_fail>
   196aa:	48 83 c4 28          	add    $0x28,%rsp
   196ae:	44 89 e0             	mov    %r12d,%eax
   196b1:	5b                   	pop    %rbx
   196b2:	5d                   	pop    %rbp
   196b3:	41 5c                	pop    %r12
   196b5:	41 5d                	pop    %r13
   196b7:	41 5e                	pop    %r14
   196b9:	41 5f                	pop    %r15
   196bb:	c3                   	ret    

00000000000196bc <dhcp_set_state>:
   196bc:	41 54                	push   %r12
   196be:	55                   	push   %rbp
   196bf:	48 89 f5             	mov    %rsi,%rbp
   196c2:	53                   	push   %rbx
   196c3:	48 89 fb             	mov    %rdi,%rbx
   196c6:	48 89 77 78          	mov    %rsi,0x78(%rdi)
   196ca:	4c 8d a3 b8 00 00 00 	lea    0xb8(%rbx),%r12
   196d1:	e8 fb c5 ff ff       	call   15cd1 <currticks>
   196d6:	4c 89 e7             	mov    %r12,%rdi
   196d9:	48 89 83 10 01 00 00 	mov    %rax,0x110(%rbx)
   196e0:	e8 eb 6b ff ff       	call   102d0 <stop_timer>
   196e5:	0f b6 55 21          	movzbl 0x21(%rbp),%edx
   196e9:	0f b6 45 22          	movzbl 0x22(%rbp),%eax
   196ed:	4c 89 e7             	mov    %r12,%rdi
   196f0:	31 f6                	xor    %esi,%esi
   196f2:	c1 e2 0a             	shl    $0xa,%edx
   196f5:	c1 e0 0a             	shl    $0xa,%eax
   196f8:	89 d1                	mov    %edx,%ecx
   196fa:	48 89 83 e0 00 00 00 	mov    %rax,0xe0(%rbx)
   19701:	48 89 8b d8 00 00 00 	mov    %rcx,0xd8(%rbx)
   19708:	5b                   	pop    %rbx
   19709:	5d                   	pop    %rbp
   1970a:	41 5c                	pop    %r12
   1970c:	e9 51 6b ff ff       	jmp    10262 <start_timer_fixed>

0000000000019711 <dhcp_discovery_rx>:
   19711:	f3 0f 1e fa          	endbr64 
   19715:	41 57                	push   %r15
   19717:	41 56                	push   %r14
   19719:	49 89 d6             	mov    %rdx,%r14
   1971c:	41 55                	push   %r13
   1971e:	49 89 fd             	mov    %rdi,%r13
   19721:	41 54                	push   %r12
   19723:	45 89 c4             	mov    %r8d,%r12d
   19726:	55                   	push   %rbp
   19727:	44 89 cd             	mov    %r9d,%ebp
   1972a:	53                   	push   %rbx
   1972b:	48 89 f3             	mov    %rsi,%rbx
   1972e:	48 89 df             	mov    %rbx,%rdi
   19731:	48 83 ec 38          	sub    $0x38,%rsp
   19735:	48 8b 05 34 08 01 00 	mov    0x10834(%rip),%rax        # 29f70 <__stack_chk_guard>
   1973c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19741:	31 c0                	xor    %eax,%eax
   19743:	4c 8d 4c 24 1f       	lea    0x1f(%rsp),%r9
   19748:	48 8b 46 10          	mov    0x10(%rsi),%rax
   1974c:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
   19750:	4c 89 ca             	mov    %r9,%rdx
   19753:	b9 09 00 00 00       	mov    $0x9,%ecx
   19758:	be 3c 00 00 00       	mov    $0x3c,%esi
   1975d:	c6 44 24 1d 00       	movb   $0x0,0x1d(%rsp)
   19762:	c6 44 24 1e 00       	movb   $0x0,0x1e(%rsp)
   19767:	44 8b 78 10          	mov    0x10(%rax),%r15d
   1976b:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   19770:	e8 42 12 00 00       	call   1a9b7 <dhcppkt_fetch>
   19775:	45 31 c0             	xor    %r8d,%r8d
   19778:	83 f8 08             	cmp    $0x8,%eax
   1977b:	7e 1f                	jle    1979c <dhcp_discovery_rx+0x8b>
   1977d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   19782:	ba 09 00 00 00       	mov    $0x9,%edx
   19787:	48 8d 3d 5d a7 00 00 	lea    0xa75d(%rip),%rdi        # 23eeb <.LC0>
   1978e:	e8 24 a1 ff ff       	call   138b7 <strncmp>
   19793:	45 31 c0             	xor    %r8d,%r8d
   19796:	85 c0                	test   %eax,%eax
   19798:	41 0f 94 c0          	sete   %r8b
   1979c:	48 8d 54 24 1d       	lea    0x1d(%rsp),%rdx
   197a1:	b9 01 00 00 00       	mov    $0x1,%ecx
   197a6:	be 01 af 00 00       	mov    $0xaf01,%esi
   197ab:	48 89 df             	mov    %rbx,%rdi
   197ae:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
   197b3:	e8 ff 11 00 00       	call   1a9b7 <dhcppkt_fetch>
   197b8:	48 8d 54 24 1e       	lea    0x1e(%rsp),%rdx
   197bd:	b9 01 00 00 00       	mov    $0x1,%ecx
   197c2:	48 89 df             	mov    %rbx,%rdi
   197c5:	be b0 af 00 00       	mov    $0xafb0,%esi
   197ca:	e8 e8 11 00 00       	call   1a9b7 <dhcppkt_fetch>
   197cf:	45 85 ff             	test   %r15d,%r15d
   197d2:	44 8b 44 24 08       	mov    0x8(%rsp),%r8d
   197d7:	74 3f                	je     19818 <dhcp_discovery_rx+0x107>
   197d9:	66 41 81 7e 04 00 43 	cmpw   $0x4300,0x4(%r14)
   197e0:	75 36                	jne    19818 <dhcp_discovery_rx+0x107>
   197e2:	f6 44 24 04 fd       	testb  $0xfd,0x4(%rsp)
   197e7:	75 2f                	jne    19818 <dhcp_discovery_rx+0x107>
   197e9:	0f be 44 24 1d       	movsbl 0x1d(%rsp),%eax
   197ee:	41 3b 85 8c 00 00 00 	cmp    0x8c(%r13),%eax
   197f5:	7c 21                	jl     19818 <dhcp_discovery_rx+0x107>
   197f7:	41 89 85 8c 00 00 00 	mov    %eax,0x8c(%r13)
   197fe:	0f b6 44 24 1e       	movzbl 0x1e(%rsp),%eax
   19803:	45 89 bd 84 00 00 00 	mov    %r15d,0x84(%r13)
   1980a:	45 89 a5 88 00 00 00 	mov    %r12d,0x88(%r13)
   19811:	41 89 85 90 00 00 00 	mov    %eax,0x90(%r13)
   19818:	85 ed                	test   %ebp,%ebp
   1981a:	74 41                	je     1985d <dhcp_discovery_rx+0x14c>
   1981c:	45 85 c0             	test   %r8d,%r8d
   1981f:	74 3c                	je     1985d <dhcp_discovery_rx+0x14c>
   19821:	0f be 44 24 1d       	movsbl 0x1d(%rsp),%eax
   19826:	41 3b 85 a0 00 00 00 	cmp    0xa0(%r13),%eax
   1982d:	7c 2e                	jl     1985d <dhcp_discovery_rx+0x14c>
   1982f:	49 8b bd 98 00 00 00 	mov    0x98(%r13),%rdi
   19836:	e8 03 66 ff ff       	call   fe3e <ref_decrement>
   1983b:	41 89 ad 94 00 00 00 	mov    %ebp,0x94(%r13)
   19842:	48 89 df             	mov    %rbx,%rdi
   19845:	e8 e8 65 ff ff       	call   fe32 <ref_increment>
   1984a:	0f be 44 24 1d       	movsbl 0x1d(%rsp),%eax
   1984f:	49 89 9d 98 00 00 00 	mov    %rbx,0x98(%r13)
   19856:	41 89 85 a0 00 00 00 	mov    %eax,0xa0(%r13)
   1985d:	41 83 bd 84 00 00 00 	cmpl   $0x0,0x84(%r13)
   19864:	00 
   19865:	74 3a                	je     198a1 <dhcp_discovery_rx+0x190>
   19867:	e8 65 c4 ff ff       	call   15cd1 <currticks>
   1986c:	41 83 bd 90 00 00 00 	cmpl   $0x0,0x90(%r13)
   19873:	00 
   19874:	49 8b 95 10 01 00 00 	mov    0x110(%r13),%rdx
   1987b:	75 15                	jne    19892 <dhcp_discovery_rx+0x181>
   1987d:	49 83 bd 98 00 00 00 	cmpq   $0x0,0x98(%r13)
   19884:	00 
   19885:	75 0b                	jne    19892 <dhcp_discovery_rx+0x181>
   19887:	48 29 d0             	sub    %rdx,%rax
   1988a:	48 3d 00 08 00 00    	cmp    $0x800,%rax
   19890:	76 0f                	jbe    198a1 <dhcp_discovery_rx+0x190>
   19892:	48 8d 35 87 de 00 00 	lea    0xde87(%rip),%rsi        # 27720 <dhcp_state_request>
   19899:	4c 89 ef             	mov    %r13,%rdi
   1989c:	e8 1b fe ff ff       	call   196bc <dhcp_set_state>
   198a1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   198a6:	48 2b 05 c3 06 01 00 	sub    0x106c3(%rip),%rax        # 29f70 <__stack_chk_guard>
   198ad:	74 05                	je     198b4 <dhcp_discovery_rx+0x1a3>
   198af:	e8 ac 91 fe ff       	call   2a60 <__stack_chk_fail>
   198b4:	48 83 c4 38          	add    $0x38,%rsp
   198b8:	5b                   	pop    %rbx
   198b9:	5d                   	pop    %rbp
   198ba:	41 5c                	pop    %r12
   198bc:	41 5d                	pop    %r13
   198be:	41 5e                	pop    %r14
   198c0:	41 5f                	pop    %r15
   198c2:	c3                   	ret    

00000000000198c3 <dhcp_finished>:
   198c3:	f3 0f 1e fa          	endbr64 
   198c7:	55                   	push   %rbp
   198c8:	89 f5                	mov    %esi,%ebp
   198ca:	53                   	push   %rbx
   198cb:	48 89 fb             	mov    %rdi,%rbx
   198ce:	48 8d bf b8 00 00 00 	lea    0xb8(%rdi),%rdi
   198d5:	50                   	push   %rax
   198d6:	e8 f5 69 ff ff       	call   102d0 <stop_timer>
   198db:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   198df:	89 ee                	mov    %ebp,%esi
   198e1:	e8 e9 ff fe ff       	call   98cf <intf_shutdown>
   198e6:	5a                   	pop    %rdx
   198e7:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   198eb:	89 ee                	mov    %ebp,%esi
   198ed:	5b                   	pop    %rbx
   198ee:	5d                   	pop    %rbp
   198ef:	e9 db ff fe ff       	jmp    98cf <intf_shutdown>

00000000000198f4 <start_dhcp>:
   198f4:	f3 0f 1e fa          	endbr64 
   198f8:	41 55                	push   %r13
   198fa:	49 89 fd             	mov    %rdi,%r13
   198fd:	bf 18 01 00 00       	mov    $0x118,%edi
   19902:	41 54                	push   %r12
   19904:	49 89 f4             	mov    %rsi,%r12
   19907:	55                   	push   %rbp
   19908:	e8 4d 2d ff ff       	call   c65a <zalloc>
   1990d:	48 85 c0             	test   %rax,%rax
   19910:	75 0b                	jne    1991d <start_dhcp+0x29>
   19912:	41 bc 77 9f ef ce    	mov    $0xceef9f77,%r12d
   19918:	e9 d1 00 00 00       	jmp    199ee <start_dhcp+0xfa>
   1991d:	48 89 c5             	mov    %rax,%rbp
   19920:	48 8d 05 a2 fb ff ff 	lea    -0x45e(%rip),%rax        # 194c9 <dhcp_free>
   19927:	48 8d 15 f2 dc 00 00 	lea    0xdcf2(%rip),%rdx        # 27620 <dhcp_job_desc>
   1992e:	4c 89 e7             	mov    %r12,%rdi
   19931:	48 89 45 08          	mov    %rax,0x8(%rbp)
   19935:	48 8d 05 a4 ca 00 00 	lea    0xcaa4(%rip),%rax        # 263e0 <null_intf>
   1993c:	48 89 45 10          	mov    %rax,0x10(%rbp)
   19940:	48 89 45 30          	mov    %rax,0x30(%rbp)
   19944:	48 8d 05 15 dd 00 00 	lea    0xdd15(%rip),%rax        # 27660 <dhcp_xfer_desc>
   1994b:	48 89 45 40          	mov    %rax,0x40(%rbp)
   1994f:	48 89 45 48          	mov    %rax,0x48(%rbp)
   19953:	48 8d 05 e2 01 00 00 	lea    0x1e2(%rip),%rax        # 19b3c <dhcp_timer_expired>
   1995a:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1995e:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   19962:	48 89 85 f8 00 00 00 	mov    %rax,0xf8(%rbp)
   19969:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   1996d:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   19971:	48 89 ad 00 01 00 00 	mov    %rbp,0x100(%rbp)
   19978:	e8 b5 64 ff ff       	call   fe32 <ref_increment>
   1997d:	4c 89 65 50          	mov    %r12,0x50(%rbp)
   19981:	66 c7 45 58 01 00    	movw   $0x1,0x58(%rbp)
   19987:	66 c7 45 5c 00 44    	movw   $0x4400,0x5c(%rbp)
   1998d:	e8 af 60 ff ff       	call   fa41 <random>
   19992:	8b 35 c8 ab 00 00    	mov    0xabc8(%rip),%esi        # 24560 <udp_sock_dgram>
   19998:	48 8d 4d 58          	lea    0x58(%rbp),%rcx
   1999c:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   199a0:	89 85 80 00 00 00    	mov    %eax,0x80(%rbp)
   199a6:	48 8d 15 33 ac 00 00 	lea    0xac33(%rip),%rdx        # 245e0 <dhcp_peer>
   199ad:	89 05 0d 06 01 00    	mov    %eax,0x1060d(%rip)        # 29fc0 <dhcp_last_xid>
   199b3:	e8 02 51 ff ff       	call   eaba <xfer_open_socket>
   199b8:	41 89 c4             	mov    %eax,%r12d
   199bb:	85 c0                	test   %eax,%eax
   199bd:	74 0c                	je     199cb <start_dhcp+0xd7>
   199bf:	89 c6                	mov    %eax,%esi
   199c1:	48 89 ef             	mov    %rbp,%rdi
   199c4:	e8 fa fe ff ff       	call   198c3 <dhcp_finished>
   199c9:	eb 1b                	jmp    199e6 <start_dhcp+0xf2>
   199cb:	48 8d 35 8e dd 00 00 	lea    0xdd8e(%rip),%rsi        # 27760 <dhcp_state_discover>
   199d2:	48 89 ef             	mov    %rbp,%rdi
   199d5:	e8 e2 fc ff ff       	call   196bc <dhcp_set_state>
   199da:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   199de:	4c 89 ee             	mov    %r13,%rsi
   199e1:	e8 8b fd fe ff       	call   9771 <intf_plug_plug>
   199e6:	48 89 ef             	mov    %rbp,%rdi
   199e9:	e8 50 64 ff ff       	call   fe3e <ref_decrement>
   199ee:	44 89 e0             	mov    %r12d,%eax
   199f1:	5d                   	pop    %rbp
   199f2:	41 5c                	pop    %r12
   199f4:	41 5d                	pop    %r13
   199f6:	c3                   	ret    

00000000000199f7 <dhcp_request_rx>:
   199f7:	f3 0f 1e fa          	endbr64 
   199fb:	66 81 7a 04 00 43    	cmpw   $0x4300,0x4(%rdx)
   19a01:	0f 85 b4 00 00 00    	jne    19abb <dhcp_request_rx+0xc4>
   19a07:	55                   	push   %rbp
   19a08:	48 89 fd             	mov    %rdi,%rbp
   19a0b:	84 c9                	test   %cl,%cl
   19a0d:	74 09                	je     19a18 <dhcp_request_rx+0x21>
   19a0f:	80 f9 05             	cmp    $0x5,%cl
   19a12:	0f 85 a1 00 00 00    	jne    19ab9 <dhcp_request_rx+0xc2>
   19a18:	44 3b 85 88 00 00 00 	cmp    0x88(%rbp),%r8d
   19a1f:	0f 85 94 00 00 00    	jne    19ab9 <dhcp_request_rx+0xc2>
   19a25:	48 8b 46 10          	mov    0x10(%rsi),%rax
   19a29:	8b 40 10             	mov    0x10(%rax),%eax
   19a2c:	3b 85 84 00 00 00    	cmp    0x84(%rbp),%eax
   19a32:	0f 85 81 00 00 00    	jne    19ab9 <dhcp_request_rx+0xc2>
   19a38:	89 45 60             	mov    %eax,0x60(%rbp)
   19a3b:	48 8b 45 50          	mov    0x50(%rbp),%rax
   19a3f:	48 8d 7e 38          	lea    0x38(%rsi),%rdi
   19a43:	48 8d 15 9a 8e 00 00 	lea    0x8e9a(%rip),%rdx        # 228e4 <.LC1>
   19a4a:	4c 8d 80 68 01 00 00 	lea    0x168(%rax),%r8
   19a51:	4c 89 c6             	mov    %r8,%rsi
   19a54:	e8 65 85 ff ff       	call   11fbe <register_settings>
   19a59:	89 c6                	mov    %eax,%esi
   19a5b:	85 c0                	test   %eax,%eax
   19a5d:	75 51                	jne    19ab0 <dhcp_request_rx+0xb9>
   19a5f:	48 8b bd 98 00 00 00 	mov    0x98(%rbp),%rdi
   19a66:	48 85 ff             	test   %rdi,%rdi
   19a69:	74 43                	je     19aae <dhcp_request_rx+0xb7>
   19a6b:	83 bd 90 00 00 00 00 	cmpl   $0x0,0x90(%rbp)
   19a72:	75 3a                	jne    19aae <dhcp_request_rx+0xb7>
   19a74:	e8 76 fa ff ff       	call   194ef <dhcp_has_pxeopts>
   19a79:	85 c0                	test   %eax,%eax
   19a7b:	74 21                	je     19a9e <dhcp_request_rx+0xa7>
   19a7d:	48 8b 85 98 00 00 00 	mov    0x98(%rbp),%rax
   19a84:	31 f6                	xor    %esi,%esi
   19a86:	48 8d 15 52 8e 00 00 	lea    0x8e52(%rip),%rdx        # 228df <.LC1>
   19a8d:	48 8d 78 38          	lea    0x38(%rax),%rdi
   19a91:	e8 28 85 ff ff       	call   11fbe <register_settings>
   19a96:	89 c6                	mov    %eax,%esi
   19a98:	85 c0                	test   %eax,%eax
   19a9a:	74 12                	je     19aae <dhcp_request_rx+0xb7>
   19a9c:	eb 12                	jmp    19ab0 <dhcp_request_rx+0xb9>
   19a9e:	48 89 ef             	mov    %rbp,%rdi
   19aa1:	48 8d 35 38 dc 00 00 	lea    0xdc38(%rip),%rsi        # 276e0 <dhcp_state_proxy>
   19aa8:	5d                   	pop    %rbp
   19aa9:	e9 0e fc ff ff       	jmp    196bc <dhcp_set_state>
   19aae:	31 f6                	xor    %esi,%esi
   19ab0:	48 89 ef             	mov    %rbp,%rdi
   19ab3:	5d                   	pop    %rbp
   19ab4:	e9 0a fe ff ff       	jmp    198c3 <dhcp_finished>
   19ab9:	5d                   	pop    %rbp
   19aba:	c3                   	ret    
   19abb:	c3                   	ret    

0000000000019abc <dhcp_proxy_rx>:
   19abc:	f3 0f 1e fa          	endbr64 
   19ac0:	41 56                	push   %r14
   19ac2:	49 89 d6             	mov    %rdx,%r14
   19ac5:	41 55                	push   %r13
   19ac7:	45 89 cd             	mov    %r9d,%r13d
   19aca:	41 54                	push   %r12
   19acc:	41 89 cc             	mov    %ecx,%r12d
   19acf:	55                   	push   %rbp
   19ad0:	48 89 fd             	mov    %rdi,%rbp
   19ad3:	48 89 f7             	mov    %rsi,%rdi
   19ad6:	53                   	push   %rbx
   19ad7:	48 89 f3             	mov    %rsi,%rbx
   19ada:	e8 10 fa ff ff       	call   194ef <dhcp_has_pxeopts>
   19adf:	66 41 81 7e 04 0f ab 	cmpw   $0xab0f,0x4(%r14)
   19ae6:	75 4b                	jne    19b33 <dhcp_proxy_rx+0x77>
   19ae8:	41 80 fc 02          	cmp    $0x2,%r12b
   19aec:	74 06                	je     19af4 <dhcp_proxy_rx+0x38>
   19aee:	41 80 fc 05          	cmp    $0x5,%r12b
   19af2:	75 3f                	jne    19b33 <dhcp_proxy_rx+0x77>
   19af4:	44 3b ad 94 00 00 00 	cmp    0x94(%rbp),%r13d
   19afb:	75 36                	jne    19b33 <dhcp_proxy_rx+0x77>
   19afd:	48 89 df             	mov    %rbx,%rdi
   19b00:	e8 ea f9 ff ff       	call   194ef <dhcp_has_pxeopts>
   19b05:	85 c0                	test   %eax,%eax
   19b07:	74 2a                	je     19b33 <dhcp_proxy_rx+0x77>
   19b09:	31 f6                	xor    %esi,%esi
   19b0b:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   19b0f:	48 8d 15 c9 8d 00 00 	lea    0x8dc9(%rip),%rdx        # 228df <.LC1>
   19b16:	e8 a3 84 ff ff       	call   11fbe <register_settings>
   19b1b:	89 c6                	mov    %eax,%esi
   19b1d:	85 c0                	test   %eax,%eax
   19b1f:	75 02                	jne    19b23 <dhcp_proxy_rx+0x67>
   19b21:	31 f6                	xor    %esi,%esi
   19b23:	5b                   	pop    %rbx
   19b24:	48 89 ef             	mov    %rbp,%rdi
   19b27:	5d                   	pop    %rbp
   19b28:	41 5c                	pop    %r12
   19b2a:	41 5d                	pop    %r13
   19b2c:	41 5e                	pop    %r14
   19b2e:	e9 90 fd ff ff       	jmp    198c3 <dhcp_finished>
   19b33:	5b                   	pop    %rbx
   19b34:	5d                   	pop    %rbp
   19b35:	41 5c                	pop    %r12
   19b37:	41 5d                	pop    %r13
   19b39:	41 5e                	pop    %r14
   19b3b:	c3                   	ret    

0000000000019b3c <dhcp_timer_expired>:
   19b3c:	f3 0f 1e fa          	endbr64 
   19b40:	4c 8d 87 48 ff ff ff 	lea    -0xb8(%rdi),%r8
   19b47:	85 f6                	test   %esi,%esi
   19b49:	74 0d                	je     19b58 <dhcp_timer_expired+0x1c>
   19b4b:	be 6e 9f ef b3       	mov    $0xb3ef9f6e,%esi
   19b50:	4c 89 c7             	mov    %r8,%rdi
   19b53:	e9 6b fd ff ff       	jmp    198c3 <dhcp_finished>
   19b58:	48 8b 47 c0          	mov    -0x40(%rdi),%rax
   19b5c:	ff 47 50             	incl   0x50(%rdi)
   19b5f:	4c 89 c7             	mov    %r8,%rdi
   19b62:	48 8b 40 18          	mov    0x18(%rax),%rax
   19b66:	ff e0                	jmp    *%rax

0000000000019b68 <dhcp_request_tx>:
   19b68:	f3 0f 1e fa          	endbr64 
   19b6c:	41 54                	push   %r12
   19b6e:	49 89 f4             	mov    %rsi,%r12
   19b71:	b9 04 00 00 00       	mov    $0x4,%ecx
   19b76:	be 36 00 00 00       	mov    $0x36,%esi
   19b7b:	55                   	push   %rbp
   19b7c:	48 89 d5             	mov    %rdx,%rbp
   19b7f:	48 8d 97 88 00 00 00 	lea    0x88(%rdi),%rdx
   19b86:	53                   	push   %rbx
   19b87:	48 89 fb             	mov    %rdi,%rbx
   19b8a:	4c 89 e7             	mov    %r12,%rdi
   19b8d:	e8 8a 0d 00 00       	call   1a91c <dhcppkt_store>
   19b92:	85 c0                	test   %eax,%eax
   19b94:	75 2a                	jne    19bc0 <dhcp_request_tx+0x58>
   19b96:	48 8d 93 84 00 00 00 	lea    0x84(%rbx),%rdx
   19b9d:	b9 04 00 00 00       	mov    $0x4,%ecx
   19ba2:	be 32 00 00 00       	mov    $0x32,%esi
   19ba7:	4c 89 e7             	mov    %r12,%rdi
   19baa:	e8 6d 0d 00 00       	call   1a91c <dhcppkt_store>
   19baf:	85 c0                	test   %eax,%eax
   19bb1:	75 0d                	jne    19bc0 <dhcp_request_tx+0x58>
   19bb3:	c7 45 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbp)
   19bba:	66 c7 45 04 00 43    	movw   $0x4300,0x4(%rbp)
   19bc0:	5b                   	pop    %rbx
   19bc1:	5d                   	pop    %rbp
   19bc2:	41 5c                	pop    %r12
   19bc4:	c3                   	ret    

0000000000019bc5 <dhcp_pxebs_rx>:
   19bc5:	f3 0f 1e fa          	endbr64 
   19bc9:	41 56                	push   %r14
   19bcb:	49 89 d6             	mov    %rdx,%r14
   19bce:	41 55                	push   %r13
   19bd0:	41 89 cd             	mov    %ecx,%r13d
   19bd3:	b9 04 00 00 00       	mov    $0x4,%ecx
   19bd8:	41 54                	push   %r12
   19bda:	45 89 cc             	mov    %r9d,%r12d
   19bdd:	55                   	push   %rbp
   19bde:	48 89 fd             	mov    %rdi,%rbp
   19be1:	53                   	push   %rbx
   19be2:	48 89 f3             	mov    %rsi,%rbx
   19be5:	be 47 2b 00 00       	mov    $0x2b47,%esi
   19bea:	48 89 df             	mov    %rbx,%rdi
   19bed:	48 83 ec 10          	sub    $0x10,%rsp
   19bf1:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
   19bf6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   19bfd:	00 
   19bfe:	48 8b 05 6b 03 01 00 	mov    0x1036b(%rip),%rax        # 29f70 <__stack_chk_guard>
   19c05:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   19c0a:	31 c0                	xor    %eax,%eax
   19c0c:	e8 a6 0d 00 00       	call   1a9b7 <dhcppkt_fetch>
   19c11:	66 41 8b 46 04       	mov    0x4(%r14),%ax
   19c16:	8b 54 24 04          	mov    0x4(%rsp),%edx
   19c1a:	66 3d 00 43          	cmp    $0x4300,%ax
   19c1e:	0f 95 c1             	setne  %cl
   19c21:	66 3d 0f ab          	cmp    $0xab0f,%ax
   19c25:	0f 95 c0             	setne  %al
   19c28:	84 c1                	test   %al,%cl
   19c2a:	75 4e                	jne    19c7a <dhcp_pxebs_rx+0xb5>
   19c2c:	41 80 fd 05          	cmp    $0x5,%r13b
   19c30:	75 48                	jne    19c7a <dhcp_pxebs_rx+0xb5>
   19c32:	66 3b 95 a4 00 00 00 	cmp    0xa4(%rbp),%dx
   19c39:	75 3f                	jne    19c7a <dhcp_pxebs_rx+0xb5>
   19c3b:	48 8b 85 b0 00 00 00 	mov    0xb0(%rbp),%rax
   19c42:	48 85 c0             	test   %rax,%rax
   19c45:	74 11                	je     19c58 <dhcp_pxebs_rx+0x93>
   19c47:	8b 10                	mov    (%rax),%edx
   19c49:	85 d2                	test   %edx,%edx
   19c4b:	74 2d                	je     19c7a <dhcp_pxebs_rx+0xb5>
   19c4d:	44 39 e2             	cmp    %r12d,%edx
   19c50:	74 06                	je     19c58 <dhcp_pxebs_rx+0x93>
   19c52:	48 83 c0 04          	add    $0x4,%rax
   19c56:	eb ef                	jmp    19c47 <dhcp_pxebs_rx+0x82>
   19c58:	31 f6                	xor    %esi,%esi
   19c5a:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   19c5e:	48 8d 15 b4 8a 00 00 	lea    0x8ab4(%rip),%rdx        # 22719 <.LC2>
   19c65:	e8 54 83 ff ff       	call   11fbe <register_settings>
   19c6a:	89 c6                	mov    %eax,%esi
   19c6c:	85 c0                	test   %eax,%eax
   19c6e:	75 02                	jne    19c72 <dhcp_pxebs_rx+0xad>
   19c70:	31 f6                	xor    %esi,%esi
   19c72:	48 89 ef             	mov    %rbp,%rdi
   19c75:	e8 49 fc ff ff       	call   198c3 <dhcp_finished>
   19c7a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   19c7f:	48 2b 05 ea 02 01 00 	sub    0x102ea(%rip),%rax        # 29f70 <__stack_chk_guard>
   19c86:	74 05                	je     19c8d <dhcp_pxebs_rx+0xc8>
   19c88:	e8 d3 8d fe ff       	call   2a60 <__stack_chk_fail>
   19c8d:	48 83 c4 10          	add    $0x10,%rsp
   19c91:	5b                   	pop    %rbx
   19c92:	5d                   	pop    %rbp
   19c93:	41 5c                	pop    %r12
   19c95:	41 5d                	pop    %r13
   19c97:	41 5e                	pop    %r14
   19c99:	c3                   	ret    

0000000000019c9a <dhcp_create_packet>:
   19c9a:	f3 0f 1e fa          	endbr64 
   19c9e:	41 57                	push   %r15
   19ca0:	49 8d 81 f0 00 00 00 	lea    0xf0(%r9),%rax
   19ca7:	41 56                	push   %r14
   19ca9:	41 55                	push   %r13
   19cab:	41 54                	push   %r12
   19cad:	55                   	push   %rbp
   19cae:	53                   	push   %rbx
   19caf:	48 83 ec 18          	sub    $0x18,%rsp
   19cb3:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
   19cb8:	48 8b 6c 24 50       	mov    0x50(%rsp),%rbp
   19cbd:	88 54 24 0c          	mov    %dl,0xc(%rsp)
   19cc1:	4c 39 f8             	cmp    %r15,%rax
   19cc4:	76 0a                	jbe    19cd0 <dhcp_create_packet+0x36>
   19cc6:	b8 75 9f ef cb       	mov    $0xcbef9f75,%eax
   19ccb:	e9 bd 00 00 00       	jmp    19d8d <dhcp_create_packet+0xf3>
   19cd0:	49 89 fd             	mov    %rdi,%r13
   19cd3:	89 ca                	mov    %ecx,%edx
   19cd5:	49 89 f4             	mov    %rsi,%r12
   19cd8:	4c 89 c3             	mov    %r8,%rbx
   19cdb:	4d 89 ce             	mov    %r9,%r14
   19cde:	48 89 ef             	mov    %rbp,%rdi
   19ce1:	4c 89 f9             	mov    %r15,%rcx
   19ce4:	31 c0                	xor    %eax,%eax
   19ce6:	f3 aa                	rep stos %al,%es:(%rdi)
   19ce8:	89 55 04             	mov    %edx,0x4(%rbp)
   19ceb:	48 8b 56 50          	mov    0x50(%rsi),%rdx
   19cef:	48 8d 7d 1c          	lea    0x1c(%rbp),%rdi
   19cf3:	48 8d 76 60          	lea    0x60(%rsi),%rsi
   19cf7:	48 8d 0d 02 89 00 00 	lea    0x8902(%rip),%rcx        # 22600 <dhcp_op>
   19cfe:	c7 85 ec 00 00 00 63 	movl   $0x63538263,0xec(%rbp)
   19d05:	82 53 63 
   19d08:	8b 42 40             	mov    0x40(%rdx),%eax
   19d0b:	86 c4                	xchg   %al,%ah
   19d0d:	88 45 01             	mov    %al,0x1(%rbp)
   19d10:	0f b6 44 24 0c       	movzbl 0xc(%rsp),%eax
   19d15:	8a 04 01             	mov    (%rcx,%rax,1),%al
   19d18:	88 45 00             	mov    %al,0x0(%rbp)
   19d1b:	0f b6 52 43          	movzbl 0x43(%rdx),%edx
   19d1f:	88 55 02             	mov    %dl,0x2(%rbp)
   19d22:	e8 e6 d5 ff ff       	call   1730d <__memcpy>
   19d27:	48 8d bd f0 00 00 00 	lea    0xf0(%rbp),%rdi
   19d2e:	4c 89 f2             	mov    %r14,%rdx
   19d31:	48 89 de             	mov    %rbx,%rsi
   19d34:	e8 d4 d5 ff ff       	call   1730d <__memcpy>
   19d39:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   19d3e:	f6 40 48 01          	testb  $0x1,0x48(%rax)
   19d42:	74 06                	je     19d4a <dhcp_create_packet+0xb0>
   19d44:	66 81 4d 0a 80 00    	orw    $0x80,0xa(%rbp)
   19d4a:	4c 89 e7             	mov    %r12,%rdi
   19d4d:	e8 7a 05 ff ff       	call   a2cc <ipv4_has_any_addr>
   19d52:	85 c0                	test   %eax,%eax
   19d54:	74 06                	je     19d5c <dhcp_create_packet+0xc2>
   19d56:	66 81 4d 0a 80 00    	orw    $0x80,0xa(%rbp)
   19d5c:	4c 89 ef             	mov    %r13,%rdi
   19d5f:	b9 88 00 00 00       	mov    $0x88,%ecx
   19d64:	31 c0                	xor    %eax,%eax
   19d66:	f3 aa                	rep stos %al,%es:(%rdi)
   19d68:	4c 89 fa             	mov    %r15,%rdx
   19d6b:	48 89 ee             	mov    %rbp,%rsi
   19d6e:	4c 89 ef             	mov    %r13,%rdi
   19d71:	e8 ec 0c 00 00       	call   1aa62 <dhcppkt_init>
   19d76:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
   19d7b:	b9 01 00 00 00       	mov    $0x1,%ecx
   19d80:	4c 89 ef             	mov    %r13,%rdi
   19d83:	be 35 00 00 00       	mov    $0x35,%esi
   19d88:	e8 8f 0b 00 00       	call   1a91c <dhcppkt_store>
   19d8d:	48 83 c4 18          	add    $0x18,%rsp
   19d91:	5b                   	pop    %rbx
   19d92:	5d                   	pop    %rbp
   19d93:	41 5c                	pop    %r12
   19d95:	41 5d                	pop    %r13
   19d97:	41 5e                	pop    %r14
   19d99:	41 5f                	pop    %r15
   19d9b:	c3                   	ret    

0000000000019d9c <dhcp_create_request>:
   19d9c:	f3 0f 1e fa          	endbr64 
   19da0:	41 55                	push   %r13
   19da2:	0f b6 d2             	movzbl %dl,%edx
   19da5:	45 89 c5             	mov    %r8d,%r13d
   19da8:	4c 8d 05 51 a8 00 00 	lea    0xa851(%rip),%r8        # 24600 <dhcp_request_options_data>
   19daf:	41 54                	push   %r12
   19db1:	55                   	push   %rbp
   19db2:	48 89 fd             	mov    %rdi,%rbp
   19db5:	53                   	push   %rbx
   19db6:	48 89 f3             	mov    %rsi,%rbx
   19db9:	48 83 ec 48          	sub    $0x48,%rsp
   19dbd:	48 8b 05 ac 01 01 00 	mov    0x101ac(%rip),%rax        # 29f70 <__stack_chk_guard>
   19dc4:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   19dc9:	31 c0                	xor    %eax,%eax
   19dcb:	ff 74 24 70          	push   0x70(%rsp)
   19dcf:	41 51                	push   %r9
   19dd1:	41 b9 52 00 00 00    	mov    $0x52,%r9d
   19dd7:	e8 be fe ff ff       	call   19c9a <dhcp_create_packet>
   19ddc:	5a                   	pop    %rdx
   19ddd:	59                   	pop    %rcx
   19dde:	41 89 c4             	mov    %eax,%r12d
   19de1:	85 c0                	test   %eax,%eax
   19de3:	0f 85 9a 01 00 00    	jne    19f83 <dhcp_create_request+0x1e7>
   19de9:	48 8b 45 10          	mov    0x10(%rbp),%rax
   19ded:	48 8d 0d 7e e9 00 00 	lea    0xe97e(%rip),%rcx        # 28772 <__table_entries.2>
   19df4:	be af 00 00 00       	mov    $0xaf,%esi
   19df9:	48 89 ef             	mov    %rbp,%rdi
   19dfc:	48 8d 15 55 e9 00 00 	lea    0xe955(%rip),%rdx        # 28758 <__dhcp_feature_version>
   19e03:	44 89 68 0c          	mov    %r13d,0xc(%rax)
   19e07:	48 8d 05 4a e9 00 00 	lea    0xe94a(%rip),%rax        # 28758 <__dhcp_feature_version>
   19e0e:	29 c1                	sub    %eax,%ecx
   19e10:	e8 07 0b 00 00       	call   1a91c <dhcppkt_store>
   19e15:	41 89 c4             	mov    %eax,%r12d
   19e18:	85 c0                	test   %eax,%eax
   19e1a:	0f 85 63 01 00 00    	jne    19f83 <dhcp_create_request+0x1e7>
   19e20:	4c 8d 64 24 03       	lea    0x3(%rsp),%r12
   19e25:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
   19e2c:	b9 05 00 00 00       	mov    $0x5,%ecx
   19e31:	4c 89 e2             	mov    %r12,%rdx
   19e34:	48 8d 35 8d f3 00 00 	lea    0xf38d(%rip),%rsi        # 291c8 <busid_setting>
   19e3b:	e8 c5 7f ff ff       	call   11e05 <fetch_raw_setting>
   19e40:	4c 89 e2             	mov    %r12,%rdx
   19e43:	b9 05 00 00 00       	mov    $0x5,%ecx
   19e48:	48 89 ef             	mov    %rbp,%rdi
   19e4b:	be b1 af 00 00       	mov    $0xafb1,%esi
   19e50:	e8 c7 0a 00 00       	call   1a91c <dhcppkt_store>
   19e55:	41 89 c4             	mov    %eax,%r12d
   19e58:	85 c0                	test   %eax,%eax
   19e5a:	0f 85 23 01 00 00    	jne    19f83 <dhcp_create_request+0x1e7>
   19e60:	48 8b 53 50          	mov    0x50(%rbx),%rdx
   19e64:	48 8d 73 60          	lea    0x60(%rbx),%rsi
   19e68:	48 8d 7c 24 24       	lea    0x24(%rsp),%rdi
   19e6d:	4c 8d 6c 24 23       	lea    0x23(%rsp),%r13
   19e72:	44 0f b6 62 43       	movzbl 0x43(%rdx),%r12d
   19e77:	8b 42 40             	mov    0x40(%rdx),%eax
   19e7a:	86 c4                	xchg   %al,%ah
   19e7c:	4c 89 e2             	mov    %r12,%rdx
   19e7f:	88 44 24 23          	mov    %al,0x23(%rsp)
   19e83:	e8 85 d4 ff ff       	call   1730d <__memcpy>
   19e88:	49 8d 4c 24 01       	lea    0x1(%r12),%rcx
   19e8d:	4c 89 ea             	mov    %r13,%rdx
   19e90:	48 89 ef             	mov    %rbp,%rdi
   19e93:	be 3d 00 00 00       	mov    $0x3d,%esi
   19e98:	e8 7f 0a 00 00       	call   1a91c <dhcppkt_store>
   19e9d:	41 89 c4             	mov    %eax,%r12d
   19ea0:	85 c0                	test   %eax,%eax
   19ea2:	0f 85 db 00 00 00    	jne    19f83 <dhcp_create_request+0x1e7>
   19ea8:	31 ff                	xor    %edi,%edi
   19eaa:	48 8d 54 24 13       	lea    0x13(%rsp),%rdx
   19eaf:	c6 44 24 12 00       	movb   $0x0,0x12(%rsp)
   19eb4:	48 8d 35 f5 f6 00 00 	lea    0xf6f5(%rip),%rsi        # 295b0 <uuid_setting>
   19ebb:	4c 8d 6c 24 12       	lea    0x12(%rsp),%r13
   19ec0:	e8 a3 82 ff ff       	call   12168 <fetch_uuid_setting>
   19ec5:	85 c0                	test   %eax,%eax
   19ec7:	79 7f                	jns    19f48 <dhcp_create_request+0x1ac>
   19ec9:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
   19ece:	31 ff                	xor    %edi,%edi
   19ed0:	48 8d 35 c9 f7 00 00 	lea    0xf7c9(%rip),%rsi        # 296a0 <user_class_setting>
   19ed7:	4c 89 ea             	mov    %r13,%rdx
   19eda:	e8 ff 7e ff ff       	call   11dde <fetch_raw_setting_copy>
   19edf:	85 c0                	test   %eax,%eax
   19ee1:	78 26                	js     19f09 <dhcp_create_request+0x16d>
   19ee3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   19ee8:	8b 35 ca f7 00 00    	mov    0xf7ca(%rip),%esi        # 296b8 <user_class_setting+0x18>
   19eee:	48 89 ef             	mov    %rbp,%rdi
   19ef1:	48 63 c8             	movslq %eax,%rcx
   19ef4:	e8 23 0a 00 00       	call   1a91c <dhcppkt_store>
   19ef9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19efe:	89 c3                	mov    %eax,%ebx
   19f00:	e8 4a 27 ff ff       	call   c64f <free>
   19f05:	85 db                	test   %ebx,%ebx
   19f07:	75 77                	jne    19f80 <dhcp_create_request+0x1e4>
   19f09:	31 ff                	xor    %edi,%edi
   19f0b:	4c 89 ea             	mov    %r13,%rdx
   19f0e:	48 8d 35 b3 f7 00 00 	lea    0xf7b3(%rip),%rsi        # 296c8 <vendor_class_setting>
   19f15:	e8 c4 7e ff ff       	call   11dde <fetch_raw_setting_copy>
   19f1a:	85 c0                	test   %eax,%eax
   19f1c:	78 65                	js     19f83 <dhcp_create_request+0x1e7>
   19f1e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   19f23:	8b 35 b7 f7 00 00    	mov    0xf7b7(%rip),%esi        # 296e0 <vendor_class_setting+0x18>
   19f29:	48 63 c8             	movslq %eax,%rcx
   19f2c:	48 89 ef             	mov    %rbp,%rdi
   19f2f:	e8 e8 09 00 00       	call   1a91c <dhcppkt_store>
   19f34:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   19f39:	89 c3                	mov    %eax,%ebx
   19f3b:	e8 0f 27 ff ff       	call   c64f <free>
   19f40:	85 db                	test   %ebx,%ebx
   19f42:	44 0f 45 e3          	cmovne %ebx,%r12d
   19f46:	eb 3b                	jmp    19f83 <dhcp_create_request+0x1e7>
   19f48:	b9 11 00 00 00       	mov    $0x11,%ecx
   19f4d:	4c 89 ea             	mov    %r13,%rdx
   19f50:	be 61 00 00 00       	mov    $0x61,%esi
   19f55:	48 89 ef             	mov    %rbp,%rdi
   19f58:	8b 44 24 13          	mov    0x13(%rsp),%eax
   19f5c:	66 c1 4c 24 17 08    	rorw   $0x8,0x17(%rsp)
   19f62:	0f c8                	bswap  %eax
   19f64:	66 c1 4c 24 19 08    	rorw   $0x8,0x19(%rsp)
   19f6a:	89 44 24 13          	mov    %eax,0x13(%rsp)
   19f6e:	e8 a9 09 00 00       	call   1a91c <dhcppkt_store>
   19f73:	85 c0                	test   %eax,%eax
   19f75:	0f 84 4e ff ff ff    	je     19ec9 <dhcp_create_request+0x12d>
   19f7b:	41 89 c4             	mov    %eax,%r12d
   19f7e:	eb 03                	jmp    19f83 <dhcp_create_request+0x1e7>
   19f80:	41 89 dc             	mov    %ebx,%r12d
   19f83:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   19f88:	48 2b 05 e1 ff 00 00 	sub    0xffe1(%rip),%rax        # 29f70 <__stack_chk_guard>
   19f8f:	74 05                	je     19f96 <dhcp_create_request+0x1fa>
   19f91:	e8 ca 8a fe ff       	call   2a60 <__stack_chk_fail>
   19f96:	48 83 c4 48          	add    $0x48,%rsp
   19f9a:	44 89 e0             	mov    %r12d,%eax
   19f9d:	5b                   	pop    %rbx
   19f9e:	5d                   	pop    %rbp
   19f9f:	41 5c                	pop    %r12
   19fa1:	41 5d                	pop    %r13
   19fa3:	c3                   	ret    

0000000000019fa4 <dhcp_tx.isra.0>:
   19fa4:	41 57                	push   %r15
   19fa6:	41 56                	push   %r14
   19fa8:	4c 8d 35 11 a6 00 00 	lea    0xa611(%rip),%r14        # 245c0 <peer.0>
   19faf:	41 55                	push   %r13
   19fb1:	41 54                	push   %r12
   19fb3:	55                   	push   %rbp
   19fb4:	48 89 fd             	mov    %rdi,%rbp
   19fb7:	4c 8d 6d 30          	lea    0x30(%rbp),%r13
   19fbb:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   19fc2:	48 8b 05 a7 ff 00 00 	mov    0xffa7(%rip),%rax        # 29f70 <__stack_chk_guard>
   19fc9:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   19fd0:	00 
   19fd1:	31 c0                	xor    %eax,%eax
   19fd3:	48 8d 47 58          	lea    0x58(%rdi),%rax
   19fd7:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
   19fde:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   19fe5:	00 00 
   19fe7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19fec:	48 8b 47 98          	mov    -0x68(%rdi),%rax
   19ff0:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   19ff7:	00 00 
   19ff9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   19ffe:	48 8b 47 c0          	mov    -0x40(%rdi),%rax
   1a002:	4c 89 74 24 20       	mov    %r14,0x20(%rsp)
   1a007:	44 8a 78 20          	mov    0x20(%rax),%r15b
   1a00b:	e8 92 62 ff ff       	call   102a2 <start_timer>
   1a010:	be 28 02 00 00       	mov    $0x228,%esi
   1a015:	4c 89 ef             	mov    %r13,%rdi
   1a018:	e8 7e d5 ff ff       	call   1759b <xfer_alloc_iob>
   1a01d:	48 85 c0             	test   %rax,%rax
   1a020:	75 05                	jne    1a027 <dhcp_tx.isra.0+0x83>
   1a022:	e9 aa 00 00 00       	jmp    1a0d1 <dhcp_tx.isra.0+0x12d>
   1a027:	49 89 c4             	mov    %rax,%r12
   1a02a:	4c 8b 48 18          	mov    0x18(%rax),%r9
   1a02e:	41 0f b6 d7          	movzbl %r15b,%edx
   1a032:	4c 8d 7c 24 30       	lea    0x30(%rsp),%r15
   1a037:	8b 8d 80 00 00 00    	mov    0x80(%rbp),%ecx
   1a03d:	48 8b 75 50          	mov    0x50(%rbp),%rsi
   1a041:	50                   	push   %rax
   1a042:	4c 89 ff             	mov    %r15,%rdi
   1a045:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   1a04a:	49 2b 44 24 20       	sub    0x20(%r12),%rax
   1a04f:	50                   	push   %rax
   1a050:	44 8b 45 60          	mov    0x60(%rbp),%r8d
   1a054:	e8 43 fd ff ff       	call   19d9c <dhcp_create_request>
   1a059:	5a                   	pop    %rdx
   1a05a:	59                   	pop    %rcx
   1a05b:	85 c0                	test   %eax,%eax
   1a05d:	75 6a                	jne    1a0c9 <dhcp_tx.isra.0+0x125>
   1a05f:	8b 85 08 01 00 00    	mov    0x108(%rbp),%eax
   1a065:	31 d2                	xor    %edx,%edx
   1a067:	4c 89 fe             	mov    %r15,%rsi
   1a06a:	48 89 ef             	mov    %rbp,%rdi
   1a06d:	c1 e0 02             	shl    $0x2,%eax
   1a070:	48 83 bd 98 00 00 00 	cmpq   $0x0,0x98(%rbp)
   1a077:	00 
   1a078:	0f 95 c2             	setne  %dl
   1a07b:	09 d0                	or     %edx,%eax
   1a07d:	31 d2                	xor    %edx,%edx
   1a07f:	83 bd 84 00 00 00 00 	cmpl   $0x0,0x84(%rbp)
   1a086:	0f 95 c2             	setne  %dl
   1a089:	01 d2                	add    %edx,%edx
   1a08b:	09 d0                	or     %edx,%eax
   1a08d:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1a092:	86 c4                	xchg   %al,%ah
   1a094:	66 89 42 08          	mov    %ax,0x8(%rdx)
   1a098:	48 8b 45 78          	mov    0x78(%rbp),%rax
   1a09c:	4c 89 f2             	mov    %r14,%rdx
   1a09f:	ff 50 08             	call   *0x8(%rax)
   1a0a2:	85 c0                	test   %eax,%eax
   1a0a4:	75 23                	jne    1a0c9 <dhcp_tx.isra.0+0x125>
   1a0a6:	8b 44 24 50          	mov    0x50(%rsp),%eax
   1a0aa:	4c 89 e6             	mov    %r12,%rsi
   1a0ad:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1a0b2:	4c 89 ef             	mov    %r13,%rdi
   1a0b5:	05 f0 00 00 00       	add    $0xf0,%eax
   1a0ba:	48 98                	cltq   
   1a0bc:	49 01 44 24 20       	add    %rax,0x20(%r12)
   1a0c1:	45 31 e4             	xor    %r12d,%r12d
   1a0c4:	e8 50 d5 ff ff       	call   17619 <xfer_deliver>
   1a0c9:	4c 89 e7             	mov    %r12,%rdi
   1a0cc:	e8 c5 fb fe ff       	call   9c96 <free_iob>
   1a0d1:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
   1a0d8:	00 
   1a0d9:	48 2b 05 90 fe 00 00 	sub    0xfe90(%rip),%rax        # 29f70 <__stack_chk_guard>
   1a0e0:	74 05                	je     1a0e7 <dhcp_tx.isra.0+0x143>
   1a0e2:	e8 79 89 fe ff       	call   2a60 <__stack_chk_fail>
   1a0e7:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   1a0ee:	5d                   	pop    %rbp
   1a0ef:	41 5c                	pop    %r12
   1a0f1:	41 5d                	pop    %r13
   1a0f3:	41 5e                	pop    %r14
   1a0f5:	41 5f                	pop    %r15
   1a0f7:	c3                   	ret    

000000000001a0f8 <dhcp_pxebs_expired>:
   1a0f8:	f3 0f 1e fa          	endbr64 
   1a0fc:	48 83 ec 18          	sub    $0x18,%rsp
   1a100:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a105:	e8 c7 bb ff ff       	call   15cd1 <currticks>
   1a10a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a10f:	48 2b 87 10 01 00 00 	sub    0x110(%rdi),%rax
   1a116:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
   1a11c:	76 36                	jbe    1a154 <dhcp_pxebs_expired+0x5c>
   1a11e:	48 8b 87 a8 00 00 00 	mov    0xa8(%rdi),%rax
   1a125:	48 8d 50 04          	lea    0x4(%rax),%rdx
   1a129:	83 78 04 00          	cmpl   $0x0,0x4(%rax)
   1a12d:	48 89 97 a8 00 00 00 	mov    %rdx,0xa8(%rdi)
   1a134:	74 10                	je     1a146 <dhcp_pxebs_expired+0x4e>
   1a136:	48 8d 35 63 d5 00 00 	lea    0xd563(%rip),%rsi        # 276a0 <dhcp_state_pxebs>
   1a13d:	48 83 c4 18          	add    $0x18,%rsp
   1a141:	e9 76 f5 ff ff       	jmp    196bc <dhcp_set_state>
   1a146:	be 6e 9f ef b3       	mov    $0xb3ef9f6e,%esi
   1a14b:	48 83 c4 18          	add    $0x18,%rsp
   1a14f:	e9 6f f7 ff ff       	jmp    198c3 <dhcp_finished>
   1a154:	48 83 c4 18          	add    $0x18,%rsp
   1a158:	e9 47 fe ff ff       	jmp    19fa4 <dhcp_tx.isra.0>

000000000001a15d <dhcp_proxy_expired>:
   1a15d:	f3 0f 1e fa          	endbr64 
   1a161:	48 83 ec 18          	sub    $0x18,%rsp
   1a165:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a16a:	e8 62 bb ff ff       	call   15cd1 <currticks>
   1a16f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a174:	48 2b 87 10 01 00 00 	sub    0x110(%rdi),%rax
   1a17b:	48 3d 00 08 00 00    	cmp    $0x800,%rax
   1a181:	76 0b                	jbe    1a18e <dhcp_proxy_expired+0x31>
   1a183:	31 f6                	xor    %esi,%esi
   1a185:	48 83 c4 18          	add    $0x18,%rsp
   1a189:	e9 35 f7 ff ff       	jmp    198c3 <dhcp_finished>
   1a18e:	48 83 c4 18          	add    $0x18,%rsp
   1a192:	e9 0d fe ff ff       	jmp    19fa4 <dhcp_tx.isra.0>

000000000001a197 <dhcp_request_expired>:
   1a197:	f3 0f 1e fa          	endbr64 
   1a19b:	e9 04 fe ff ff       	jmp    19fa4 <dhcp_tx.isra.0>

000000000001a1a0 <dhcp_discovery_expired>:
   1a1a0:	f3 0f 1e fa          	endbr64 
   1a1a4:	48 83 ec 18          	sub    $0x18,%rsp
   1a1a8:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1a1ad:	e8 1f bb ff ff       	call   15cd1 <currticks>
   1a1b2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a1b7:	48 8b 57 50          	mov    0x50(%rdi),%rdx
   1a1bb:	48 2b 87 10 01 00 00 	sub    0x110(%rdi),%rax
   1a1c2:	83 ba 98 00 00 00 00 	cmpl   $0x0,0x98(%rdx)
   1a1c9:	74 2f                	je     1a1fa <dhcp_discovery_expired+0x5a>
   1a1cb:	83 bf 08 01 00 00 3c 	cmpl   $0x3c,0x108(%rdi)
   1a1d2:	77 26                	ja     1a1fa <dhcp_discovery_expired+0x5a>
   1a1d4:	e8 f8 ba ff ff       	call   15cd1 <currticks>
   1a1d9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1a1de:	be 00 04 00 00       	mov    $0x400,%esi
   1a1e3:	48 89 87 10 01 00 00 	mov    %rax,0x110(%rdi)
   1a1ea:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
   1a1f1:	48 83 c4 18          	add    $0x18,%rsp
   1a1f5:	e9 68 60 ff ff       	jmp    10262 <start_timer_fixed>
   1a1fa:	83 bf 84 00 00 00 00 	cmpl   $0x0,0x84(%rdi)
   1a201:	74 18                	je     1a21b <dhcp_discovery_expired+0x7b>
   1a203:	48 3d 00 08 00 00    	cmp    $0x800,%rax
   1a209:	76 10                	jbe    1a21b <dhcp_discovery_expired+0x7b>
   1a20b:	48 8d 35 0e d5 00 00 	lea    0xd50e(%rip),%rsi        # 27720 <dhcp_state_request>
   1a212:	48 83 c4 18          	add    $0x18,%rsp
   1a216:	e9 a1 f4 ff ff       	jmp    196bc <dhcp_set_state>
   1a21b:	48 83 c4 18          	add    $0x18,%rsp
   1a21f:	e9 80 fd ff ff       	jmp    19fa4 <dhcp_tx.isra.0>

000000000001a224 <start_pxebs>:
   1a224:	f3 0f 1e fa          	endbr64 
   1a228:	55                   	push   %rbp
   1a229:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1a22e:	48 89 e5             	mov    %rsp,%rbp
   1a231:	41 57                	push   %r15
   1a233:	41 56                	push   %r14
   1a235:	41 89 d6             	mov    %edx,%r14d
   1a238:	31 d2                	xor    %edx,%edx
   1a23a:	41 55                	push   %r13
   1a23c:	41 54                	push   %r12
   1a23e:	53                   	push   %rbx
   1a23f:	48 89 f3             	mov    %rsi,%rbx
   1a242:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   1a249:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
   1a250:	48 8d bd 50 ff ff ff 	lea    -0xb0(%rbp),%rdi
   1a257:	48 8b 05 12 fd 00 00 	mov    0xfd12(%rip),%rax        # 29f70 <__stack_chk_guard>
   1a25e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1a262:	31 c0                	xor    %eax,%eax
   1a264:	f3 ab                	rep stos %eax,%es:(%rdi)
   1a266:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
   1a26d:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1a272:	48 c7 85 68 ff ff ff 	movq   $0x2b06,-0x98(%rbp)
   1a279:	06 2b 00 00 
   1a27d:	f3 ab                	rep stos %eax,%es:(%rdi)
   1a27f:	48 8d 7d a0          	lea    -0x60(%rbp),%rdi
   1a283:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1a288:	48 c7 45 90 08 2b 00 	movq   $0x2b08,-0x70(%rbp)
   1a28f:	00 
   1a290:	f3 ab                	rep stos %eax,%es:(%rdi)
   1a292:	48 8d 85 78 ff ff ff 	lea    -0x88(%rbp),%rax
   1a299:	31 ff                	xor    %edi,%edi
   1a29b:	48 c7 45 b8 07 2b 00 	movq   $0x2b07,-0x48(%rbp)
   1a2a2:	00 
   1a2a3:	48 89 c6             	mov    %rax,%rsi
   1a2a6:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1a2ad:	e8 53 7b ff ff       	call   11e05 <fetch_raw_setting>
   1a2b2:	4c 63 f8             	movslq %eax,%r15
   1a2b5:	31 c0                	xor    %eax,%eax
   1a2b7:	4d 85 ff             	test   %r15,%r15
   1a2ba:	4d 89 fc             	mov    %r15,%r12
   1a2bd:	4c 0f 48 f8          	cmovs  %rax,%r15
   1a2c1:	49 8d bf 24 01 00 00 	lea    0x124(%r15),%rdi
   1a2c8:	e8 8d 23 ff ff       	call   c65a <zalloc>
   1a2cd:	48 85 c0             	test   %rax,%rax
   1a2d0:	75 0b                	jne    1a2dd <start_pxebs+0xb9>
   1a2d2:	41 bc 77 9f ef ce    	mov    $0xceef9f77,%r12d
   1a2d8:	e9 2a 02 00 00       	jmp    1a507 <start_pxebs+0x2e3>
   1a2dd:	49 89 c5             	mov    %rax,%r13
   1a2e0:	48 8d 05 e2 f1 ff ff 	lea    -0xe1e(%rip),%rax        # 194c9 <dhcp_free>
   1a2e7:	48 8d 15 32 d3 00 00 	lea    0xd332(%rip),%rdx        # 27620 <dhcp_job_desc>
   1a2ee:	48 89 df             	mov    %rbx,%rdi
   1a2f1:	49 89 45 08          	mov    %rax,0x8(%r13)
   1a2f5:	48 8d 05 e4 c0 00 00 	lea    0xc0e4(%rip),%rax        # 263e0 <null_intf>
   1a2fc:	49 89 45 10          	mov    %rax,0x10(%r13)
   1a300:	49 89 45 30          	mov    %rax,0x30(%r13)
   1a304:	48 8d 05 55 d3 00 00 	lea    0xd355(%rip),%rax        # 27660 <dhcp_xfer_desc>
   1a30b:	49 89 45 40          	mov    %rax,0x40(%r13)
   1a30f:	49 89 45 48          	mov    %rax,0x48(%r13)
   1a313:	48 8d 05 22 f8 ff ff 	lea    -0x7de(%rip),%rax        # 19b3c <dhcp_timer_expired>
   1a31a:	49 89 55 20          	mov    %rdx,0x20(%r13)
   1a31e:	49 89 55 28          	mov    %rdx,0x28(%r13)
   1a322:	49 89 85 f8 00 00 00 	mov    %rax,0xf8(%r13)
   1a329:	4d 89 6d 18          	mov    %r13,0x18(%r13)
   1a32d:	4d 89 6d 38          	mov    %r13,0x38(%r13)
   1a331:	4d 89 ad 00 01 00 00 	mov    %r13,0x100(%r13)
   1a338:	e8 f5 5a ff ff       	call   fe32 <ref_increment>
   1a33d:	49 89 5d 50          	mov    %rbx,0x50(%r13)
   1a341:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
   1a348:	49 8d 55 60          	lea    0x60(%r13),%rdx
   1a34c:	66 41 c7 45 58 01 00 	movw   $0x1,0x58(%r13)
   1a353:	48 8d 35 d6 ef 00 00 	lea    0xefd6(%rip),%rsi        # 29330 <ip_setting>
   1a35a:	49 8d 9d 18 01 00 00 	lea    0x118(%r13),%rbx
   1a361:	e8 f6 7a ff ff       	call   11e5c <fetch_ipv4_setting>
   1a366:	66 45 89 b5 a4 00 00 	mov    %r14w,0xa4(%r13)
   1a36d:	00 
   1a36e:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
   1a375:	31 ff                	xor    %edi,%edi
   1a377:	66 41 c7 45 5c 00 44 	movw   $0x4400,0x5c(%r13)
   1a37e:	e8 a9 7d ff ff       	call   1212c <fetch_uintz_setting>
   1a383:	49 89 9d a8 00 00 00 	mov    %rbx,0xa8(%r13)
   1a38a:	49 89 c6             	mov    %rax,%r14
   1a38d:	a8 02                	test   $0x2,%al
   1a38f:	75 1f                	jne    1a3b0 <start_pxebs+0x18c>
   1a391:	31 ff                	xor    %edi,%edi
   1a393:	48 89 da             	mov    %rbx,%rdx
   1a396:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
   1a39a:	e8 bd 7a ff ff       	call   11e5c <fetch_ipv4_setting>
   1a39f:	41 83 bd 18 01 00 00 	cmpl   $0x0,0x118(%r13)
   1a3a6:	00 
   1a3a7:	74 07                	je     1a3b0 <start_pxebs+0x18c>
   1a3a9:	49 8d 9d 1c 01 00 00 	lea    0x11c(%r13),%rbx
   1a3b0:	41 f6 c6 01          	test   $0x1,%r14b
   1a3b4:	75 0a                	jne    1a3c0 <start_pxebs+0x19c>
   1a3b6:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
   1a3bc:	48 83 c3 04          	add    $0x4,%rbx
   1a3c0:	41 80 e6 04          	and    $0x4,%r14b
   1a3c4:	74 07                	je     1a3cd <start_pxebs+0x1a9>
   1a3c6:	49 89 9d b0 00 00 00 	mov    %rbx,0xb0(%r13)
   1a3cd:	45 85 e4             	test   %r12d,%r12d
   1a3d0:	0f 8e a8 00 00 00    	jle    1a47e <start_pxebs+0x25a>
   1a3d6:	49 8d 57 0f          	lea    0xf(%r15),%rdx
   1a3da:	48 89 e6             	mov    %rsp,%rsi
   1a3dd:	49 89 e6             	mov    %rsp,%r14
   1a3e0:	48 89 d0             	mov    %rdx,%rax
   1a3e3:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   1a3ea:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1a3ee:	48 29 d6             	sub    %rdx,%rsi
   1a3f1:	48 39 f4             	cmp    %rsi,%rsp
   1a3f4:	74 12                	je     1a408 <start_pxebs+0x1e4>
   1a3f6:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1a3fd:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1a404:	00 00 
   1a406:	eb e9                	jmp    1a3f1 <start_pxebs+0x1cd>
   1a408:	25 ff 0f 00 00       	and    $0xfff,%eax
   1a40d:	48 29 c4             	sub    %rax,%rsp
   1a410:	48 85 c0             	test   %rax,%rax
   1a413:	74 06                	je     1a41b <start_pxebs+0x1f7>
   1a415:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1a41b:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
   1a422:	4c 89 f9             	mov    %r15,%rcx
   1a425:	48 89 e2             	mov    %rsp,%rdx
   1a428:	31 ff                	xor    %edi,%edi
   1a42a:	49 89 e4             	mov    %rsp,%r12
   1a42d:	e8 d3 79 ff ff       	call   11e05 <fetch_raw_setting>
   1a432:	49 83 ff 02          	cmp    $0x2,%r15
   1a436:	76 43                	jbe    1a47b <start_pxebs+0x257>
   1a438:	41 0f b6 54 24 02    	movzbl 0x2(%r12),%edx
   1a43e:	48 89 d6             	mov    %rdx,%rsi
   1a441:	48 c1 e2 02          	shl    $0x2,%rdx
   1a445:	48 8d 7a 03          	lea    0x3(%rdx),%rdi
   1a449:	49 39 ff             	cmp    %rdi,%r15
   1a44c:	72 2d                	jb     1a47b <start_pxebs+0x257>
   1a44e:	41 8b 85 a4 00 00 00 	mov    0xa4(%r13),%eax
   1a455:	66 41 39 04 24       	cmp    %ax,(%r12)
   1a45a:	75 17                	jne    1a473 <start_pxebs+0x24f>
   1a45c:	31 c0                	xor    %eax,%eax
   1a45e:	39 c6                	cmp    %eax,%esi
   1a460:	76 0e                	jbe    1a470 <start_pxebs+0x24c>
   1a462:	45 8b 4c 84 03       	mov    0x3(%r12,%rax,4),%r9d
   1a467:	44 89 0c 83          	mov    %r9d,(%rbx,%rax,4)
   1a46b:	48 ff c0             	inc    %rax
   1a46e:	eb ee                	jmp    1a45e <start_pxebs+0x23a>
   1a470:	48 01 d3             	add    %rdx,%rbx
   1a473:	49 01 fc             	add    %rdi,%r12
   1a476:	49 29 ff             	sub    %rdi,%r15
   1a479:	eb b7                	jmp    1a432 <start_pxebs+0x20e>
   1a47b:	4c 89 f4             	mov    %r14,%rsp
   1a47e:	49 8b 85 a8 00 00 00 	mov    0xa8(%r13),%rax
   1a485:	83 38 00             	cmpl   $0x0,(%rax)
   1a488:	75 08                	jne    1a492 <start_pxebs+0x26e>
   1a48a:	41 bc 7e 9f ef e3    	mov    $0xe3ef9f7e,%r12d
   1a490:	eb 62                	jmp    1a4f4 <start_pxebs+0x2d0>
   1a492:	48 83 c0 04          	add    $0x4,%rax
   1a496:	83 38 00             	cmpl   $0x0,(%rax)
   1a499:	75 f7                	jne    1a492 <start_pxebs+0x26e>
   1a49b:	49 8b 85 b0 00 00 00 	mov    0xb0(%r13),%rax
   1a4a2:	48 85 c0             	test   %rax,%rax
   1a4a5:	74 0b                	je     1a4b2 <start_pxebs+0x28e>
   1a4a7:	83 38 00             	cmpl   $0x0,(%rax)
   1a4aa:	74 06                	je     1a4b2 <start_pxebs+0x28e>
   1a4ac:	48 83 c0 04          	add    $0x4,%rax
   1a4b0:	eb f5                	jmp    1a4a7 <start_pxebs+0x283>
   1a4b2:	8b 35 a8 a0 00 00    	mov    0xa0a8(%rip),%esi        # 24560 <udp_sock_dgram>
   1a4b8:	49 8d 4d 58          	lea    0x58(%r13),%rcx
   1a4bc:	49 8d 7d 30          	lea    0x30(%r13),%rdi
   1a4c0:	48 8d 15 19 a1 00 00 	lea    0xa119(%rip),%rdx        # 245e0 <dhcp_peer>
   1a4c7:	e8 ee 45 ff ff       	call   eaba <xfer_open_socket>
   1a4cc:	41 89 c4             	mov    %eax,%r12d
   1a4cf:	85 c0                	test   %eax,%eax
   1a4d1:	75 21                	jne    1a4f4 <start_pxebs+0x2d0>
   1a4d3:	4c 89 ef             	mov    %r13,%rdi
   1a4d6:	48 8d 35 c3 d1 00 00 	lea    0xd1c3(%rip),%rsi        # 276a0 <dhcp_state_pxebs>
   1a4dd:	e8 da f1 ff ff       	call   196bc <dhcp_set_state>
   1a4e2:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
   1a4e9:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   1a4ed:	e8 7f f2 fe ff       	call   9771 <intf_plug_plug>
   1a4f2:	eb 0b                	jmp    1a4ff <start_pxebs+0x2db>
   1a4f4:	44 89 e6             	mov    %r12d,%esi
   1a4f7:	4c 89 ef             	mov    %r13,%rdi
   1a4fa:	e8 c4 f3 ff ff       	call   198c3 <dhcp_finished>
   1a4ff:	4c 89 ef             	mov    %r13,%rdi
   1a502:	e8 37 59 ff ff       	call   fe3e <ref_decrement>
   1a507:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1a50b:	48 2b 05 5e fa 00 00 	sub    0xfa5e(%rip),%rax        # 29f70 <__stack_chk_guard>
   1a512:	74 05                	je     1a519 <start_pxebs+0x2f5>
   1a514:	e8 47 85 fe ff       	call   2a60 <__stack_chk_fail>
   1a519:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1a51d:	44 89 e0             	mov    %r12d,%eax
   1a520:	5b                   	pop    %rbx
   1a521:	41 5c                	pop    %r12
   1a523:	41 5d                	pop    %r13
   1a525:	41 5e                	pop    %r14
   1a527:	41 5f                	pop    %r15
   1a529:	5d                   	pop    %rbp
   1a52a:	c3                   	ret    

000000000001a52b <find_dhcp_option_with_encap>:
   1a52b:	49 89 f9             	mov    %rdi,%r9
   1a52e:	89 f1                	mov    %esi,%ecx
   1a530:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1a534:	31 c0                	xor    %eax,%eax
   1a536:	85 f6                	test   %esi,%esi
   1a538:	75 58                	jne    1a592 <find_dhcp_option_with_encap+0x67>
   1a53a:	eb 6c                	jmp    1a5a8 <find_dhcp_option_with_encap+0x7d>
   1a53c:	41 89 c2             	mov    %eax,%r10d
   1a53f:	4d 03 11             	add    (%r9),%r10
   1a542:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1a548:	41 0f b6 32          	movzbl (%r10),%esi
   1a54c:	44 8d 5e ff          	lea    -0x1(%rsi),%r11d
   1a550:	41 80 fb fd          	cmp    $0xfd,%r11b
   1a554:	77 09                	ja     1a55f <find_dhcp_option_with_encap+0x34>
   1a556:	45 0f b6 42 01       	movzbl 0x1(%r10),%r8d
   1a55b:	41 83 c0 02          	add    $0x2,%r8d
   1a55f:	45 89 c2             	mov    %r8d,%r10d
   1a562:	4c 29 d7             	sub    %r10,%rdi
   1a565:	78 41                	js     1a5a8 <find_dhcp_option_with_encap+0x7d>
   1a567:	40 80 fe ff          	cmp    $0xff,%sil
   1a56b:	74 2c                	je     1a599 <find_dhcp_option_with_encap+0x6e>
   1a56d:	39 ce                	cmp    %ecx,%esi
   1a56f:	74 3c                	je     1a5ad <find_dhcp_option_with_encap+0x82>
   1a571:	41 89 cb             	mov    %ecx,%r11d
   1a574:	41 c1 eb 08          	shr    $0x8,%r11d
   1a578:	44 39 de             	cmp    %r11d,%esi
   1a57b:	75 26                	jne    1a5a3 <find_dhcp_option_with_encap+0x78>
   1a57d:	45 85 db             	test   %r11d,%r11d
   1a580:	74 21                	je     1a5a3 <find_dhcp_option_with_encap+0x78>
   1a582:	48 85 d2             	test   %rdx,%rdx
   1a585:	74 02                	je     1a589 <find_dhcp_option_with_encap+0x5e>
   1a587:	89 02                	mov    %eax,(%rdx)
   1a589:	0f b6 c9             	movzbl %cl,%ecx
   1a58c:	83 c0 02             	add    $0x2,%eax
   1a58f:	4c 89 d7             	mov    %r10,%rdi
   1a592:	48 85 ff             	test   %rdi,%rdi
   1a595:	75 a5                	jne    1a53c <find_dhcp_option_with_encap+0x11>
   1a597:	eb 0f                	jmp    1a5a8 <find_dhcp_option_with_encap+0x7d>
   1a599:	81 f9 ff 00 00 00    	cmp    $0xff,%ecx
   1a59f:	74 0c                	je     1a5ad <find_dhcp_option_with_encap+0x82>
   1a5a1:	eb 05                	jmp    1a5a8 <find_dhcp_option_with_encap+0x7d>
   1a5a3:	44 01 c0             	add    %r8d,%eax
   1a5a6:	eb ea                	jmp    1a592 <find_dhcp_option_with_encap+0x67>
   1a5a8:	b8 72 9f fd d2       	mov    $0xd2fd9f72,%eax
   1a5ad:	c3                   	ret    

000000000001a5ae <set_dhcp_option>:
   1a5ae:	41 57                	push   %r15
   1a5b0:	41 56                	push   %r14
   1a5b2:	41 89 f6             	mov    %esi,%r14d
   1a5b5:	41 55                	push   %r13
   1a5b7:	41 c1 ee 08          	shr    $0x8,%r14d
   1a5bb:	4c 8d 69 02          	lea    0x2(%rcx),%r13
   1a5bf:	41 54                	push   %r12
   1a5c1:	49 89 cc             	mov    %rcx,%r12
   1a5c4:	55                   	push   %rbp
   1a5c5:	48 89 fd             	mov    %rdi,%rbp
   1a5c8:	53                   	push   %rbx
   1a5c9:	48 83 ec 48          	sub    $0x48,%rsp
   1a5cd:	48 8b 05 9c f9 00 00 	mov    0xf99c(%rip),%rax        # 29f70 <__stack_chk_guard>
   1a5d4:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1a5d9:	31 c0                	xor    %eax,%eax
   1a5db:	89 74 24 04          	mov    %esi,0x4(%rsp)
   1a5df:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1a5e4:	c7 44 24 34 ff ff ff 	movl   $0xffffffff,0x34(%rsp)
   1a5eb:	ff 
   1a5ec:	48 85 c9             	test   %rcx,%rcx
   1a5ef:	75 03                	jne    1a5f4 <set_dhcp_option+0x46>
   1a5f1:	45 31 ed             	xor    %r13d,%r13d
   1a5f4:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
   1a5f9:	75 0b                	jne    1a606 <set_dhcp_option+0x58>
   1a5fb:	41 bf 7d 9f fd c2    	mov    $0xc2fd9f7d,%r15d
   1a601:	e9 d9 01 00 00       	jmp    1a7df <set_dhcp_option+0x231>
   1a606:	31 d2                	xor    %edx,%edx
   1a608:	be ff 00 00 00       	mov    $0xff,%esi
   1a60d:	48 89 ef             	mov    %rbp,%rdi
   1a610:	e8 16 ff ff ff       	call   1a52b <find_dhcp_option_with_encap>
   1a615:	89 c3                	mov    %eax,%ebx
   1a617:	85 c0                	test   %eax,%eax
   1a619:	79 03                	jns    1a61e <set_dhcp_option+0x70>
   1a61b:	8b 5d 08             	mov    0x8(%rbp),%ebx
   1a61e:	8b 74 24 04          	mov    0x4(%rsp),%esi
   1a622:	48 8d 54 24 34       	lea    0x34(%rsp),%rdx
   1a627:	48 89 ef             	mov    %rbp,%rdi
   1a62a:	e8 fc fe ff ff       	call   1a52b <find_dhcp_option_with_encap>
   1a62f:	41 89 c7             	mov    %eax,%r15d
   1a632:	85 c0                	test   %eax,%eax
   1a634:	78 26                	js     1a65c <set_dhcp_option+0xae>
   1a636:	48 98                	cltq   
   1a638:	48 03 45 00          	add    0x0(%rbp),%rax
   1a63c:	41 ba 01 00 00 00    	mov    $0x1,%r10d
   1a642:	8a 08                	mov    (%rax),%cl
   1a644:	8d 51 ff             	lea    -0x1(%rcx),%edx
   1a647:	80 fa fd             	cmp    $0xfd,%dl
   1a64a:	77 09                	ja     1a655 <set_dhcp_option+0xa7>
   1a64c:	44 0f b6 50 01       	movzbl 0x1(%rax),%r10d
   1a651:	41 83 c2 02          	add    $0x2,%r10d
   1a655:	45 85 f6             	test   %r14d,%r14d
   1a658:	74 4f                	je     1a6a9 <set_dhcp_option+0xfb>
   1a65a:	eb 0c                	jmp    1a668 <set_dhcp_option+0xba>
   1a65c:	45 85 f6             	test   %r14d,%r14d
   1a65f:	0f 84 6f 01 00 00    	je     1a7d4 <set_dhcp_option+0x226>
   1a665:	45 31 d2             	xor    %r10d,%r10d
   1a668:	83 7c 24 34 00       	cmpl   $0x0,0x34(%rsp)
   1a66d:	79 25                	jns    1a694 <set_dhcp_option+0xe6>
   1a66f:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a674:	44 89 f6             	mov    %r14d,%esi
   1a677:	48 89 ef             	mov    %rbp,%rdi
   1a67a:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1a67f:	48 8d 15 83 7f 00 00 	lea    0x7f83(%rip),%rdx        # 22609 <empty_encap.0>
   1a686:	e8 23 ff ff ff       	call   1a5ae <set_dhcp_option>
   1a68b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1a690:	89 44 24 34          	mov    %eax,0x34(%rsp)
   1a694:	8b 44 24 34          	mov    0x34(%rsp),%eax
   1a698:	85 c0                	test   %eax,%eax
   1a69a:	0f 88 2f 01 00 00    	js     1a7cf <set_dhcp_option+0x221>
   1a6a0:	45 85 ff             	test   %r15d,%r15d
   1a6a3:	79 04                	jns    1a6a9 <set_dhcp_option+0xfb>
   1a6a5:	44 8d 78 02          	lea    0x2(%rax),%r15d
   1a6a9:	4c 89 ea             	mov    %r13,%rdx
   1a6ac:	48 63 5c 24 34       	movslq 0x34(%rsp),%rbx
   1a6b1:	4c 29 d2             	sub    %r10,%rdx
   1a6b4:	49 81 fd ff 00 00 00 	cmp    $0xff,%r13
   1a6bb:	76 02                	jbe    1a6bf <set_dhcp_option+0x111>
   1a6bd:	eb 76                	jmp    1a735 <set_dhcp_option+0x187>
   1a6bf:	4c 8b 5d 08          	mov    0x8(%rbp),%r11
   1a6c3:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   1a6c7:	49 01 d3             	add    %rdx,%r11
   1a6ca:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   1a6cf:	49 39 cb             	cmp    %rcx,%r11
   1a6d2:	76 47                	jbe    1a71b <set_dhcp_option+0x16d>
   1a6d4:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1a6d9:	4c 89 de             	mov    %r11,%rsi
   1a6dc:	48 89 ef             	mov    %rbp,%rdi
   1a6df:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1a6e4:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1a6e9:	ff 55 18             	call   *0x18(%rbp)
   1a6ec:	85 c0                	test   %eax,%eax
   1a6ee:	0f 85 db 00 00 00    	jne    1a7cf <set_dhcp_option+0x221>
   1a6f4:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1a6f9:	48 8b 75 10          	mov    0x10(%rbp),%rsi
   1a6fd:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1a701:	48 29 ce             	sub    %rcx,%rsi
   1a704:	48 01 cf             	add    %rcx,%rdi
   1a707:	48 89 f1             	mov    %rsi,%rcx
   1a70a:	f3 aa                	rep stos %al,%es:(%rdi)
   1a70c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1a711:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1a716:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1a71b:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1a71f:	85 db                	test   %ebx,%ebx
   1a721:	78 20                	js     1a743 <set_dhcp_option+0x195>
   1a723:	48 01 fb             	add    %rdi,%rbx
   1a726:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
   1a72a:	48 01 d0             	add    %rdx,%rax
   1a72d:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   1a733:	76 0b                	jbe    1a740 <set_dhcp_option+0x192>
   1a735:	41 bf 75 9f fd cb    	mov    $0xcbfd9f75,%r15d
   1a73b:	e9 9f 00 00 00       	jmp    1a7df <set_dhcp_option+0x231>
   1a740:	88 43 01             	mov    %al,0x1(%rbx)
   1a743:	4c 89 da             	mov    %r11,%rdx
   1a746:	4c 89 5d 08          	mov    %r11,0x8(%rbp)
   1a74a:	49 63 c7             	movslq %r15d,%rax
   1a74d:	44 89 fb             	mov    %r15d,%ebx
   1a750:	48 01 df             	add    %rbx,%rdi
   1a753:	48 29 c2             	sub    %rax,%rdx
   1a756:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   1a75b:	4a 8d 34 17          	lea    (%rdi,%r10,1),%rsi
   1a75f:	4c 29 ea             	sub    %r13,%rdx
   1a762:	4c 01 ef             	add    %r13,%rdi
   1a765:	e8 c5 cb ff ff       	call   1732f <__memmove>
   1a76a:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1a76f:	4c 3b 5d 10          	cmp    0x10(%rbp),%r11
   1a773:	72 26                	jb     1a79b <set_dhcp_option+0x1ed>
   1a775:	4d 85 e4             	test   %r12,%r12
   1a778:	74 30                	je     1a7aa <set_dhcp_option+0x1fc>
   1a77a:	8a 44 24 04          	mov    0x4(%rsp),%al
   1a77e:	48 03 5d 00          	add    0x0(%rbp),%rbx
   1a782:	4c 89 e2             	mov    %r12,%rdx
   1a785:	44 88 63 01          	mov    %r12b,0x1(%rbx)
   1a789:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1a78e:	48 8d 7b 02          	lea    0x2(%rbx),%rdi
   1a792:	88 03                	mov    %al,(%rbx)
   1a794:	e8 74 cb ff ff       	call   1730d <__memcpy>
   1a799:	eb 0f                	jmp    1a7aa <set_dhcp_option+0x1fc>
   1a79b:	4c 89 de             	mov    %r11,%rsi
   1a79e:	48 89 ef             	mov    %rbp,%rdi
   1a7a1:	ff 55 18             	call   *0x18(%rbp)
   1a7a4:	85 c0                	test   %eax,%eax
   1a7a6:	74 cd                	je     1a775 <set_dhcp_option+0x1c7>
   1a7a8:	eb 25                	jmp    1a7cf <set_dhcp_option+0x221>
   1a7aa:	48 63 44 24 34       	movslq 0x34(%rsp),%rax
   1a7af:	85 c0                	test   %eax,%eax
   1a7b1:	78 2c                	js     1a7df <set_dhcp_option+0x231>
   1a7b3:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1a7b7:	80 7c 02 01 01       	cmpb   $0x1,0x1(%rdx,%rax,1)
   1a7bc:	77 21                	ja     1a7df <set_dhcp_option+0x231>
   1a7be:	31 c9                	xor    %ecx,%ecx
   1a7c0:	31 d2                	xor    %edx,%edx
   1a7c2:	44 89 f6             	mov    %r14d,%esi
   1a7c5:	48 89 ef             	mov    %rbp,%rdi
   1a7c8:	e8 e1 fd ff ff       	call   1a5ae <set_dhcp_option>
   1a7cd:	eb 10                	jmp    1a7df <set_dhcp_option+0x231>
   1a7cf:	41 89 c7             	mov    %eax,%r15d
   1a7d2:	eb 0b                	jmp    1a7df <set_dhcp_option+0x231>
   1a7d4:	41 89 df             	mov    %ebx,%r15d
   1a7d7:	45 31 d2             	xor    %r10d,%r10d
   1a7da:	e9 ca fe ff ff       	jmp    1a6a9 <set_dhcp_option+0xfb>
   1a7df:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1a7e4:	48 2b 05 85 f7 00 00 	sub    0xf785(%rip),%rax        # 29f70 <__stack_chk_guard>
   1a7eb:	74 05                	je     1a7f2 <set_dhcp_option+0x244>
   1a7ed:	e8 6e 82 fe ff       	call   2a60 <__stack_chk_fail>
   1a7f2:	48 83 c4 48          	add    $0x48,%rsp
   1a7f6:	44 89 f8             	mov    %r15d,%eax
   1a7f9:	5b                   	pop    %rbx
   1a7fa:	5d                   	pop    %rbp
   1a7fb:	41 5c                	pop    %r12
   1a7fd:	41 5d                	pop    %r13
   1a7ff:	41 5e                	pop    %r14
   1a801:	41 5f                	pop    %r15
   1a803:	c3                   	ret    

000000000001a804 <dhcpopt_no_realloc>:
   1a804:	f3 0f 1e fa          	endbr64 
   1a808:	31 c0                	xor    %eax,%eax
   1a80a:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
   1a80e:	73 05                	jae    1a815 <dhcpopt_no_realloc+0x11>
   1a810:	b8 75 9f fd cb       	mov    $0xcbfd9f75,%eax
   1a815:	c3                   	ret    

000000000001a816 <dhcpopt_applies>:
   1a816:	f3 0f 1e fa          	endbr64 
   1a81a:	ff cf                	dec    %edi
   1a81c:	31 c0                	xor    %eax,%eax
   1a81e:	81 ff fd fe 00 00    	cmp    $0xfefd,%edi
   1a824:	0f 96 c0             	setbe  %al
   1a827:	c3                   	ret    

000000000001a828 <dhcpopt_store>:
   1a828:	f3 0f 1e fa          	endbr64 
   1a82c:	50                   	push   %rax
   1a82d:	e8 7c fd ff ff       	call   1a5ae <set_dhcp_option>
   1a832:	31 d2                	xor    %edx,%edx
   1a834:	85 c0                	test   %eax,%eax
   1a836:	0f 4f c2             	cmovg  %edx,%eax
   1a839:	5a                   	pop    %rdx
   1a83a:	c3                   	ret    

000000000001a83b <dhcpopt_fetch>:
   1a83b:	f3 0f 1e fa          	endbr64 
   1a83f:	41 54                	push   %r12
   1a841:	49 89 fc             	mov    %rdi,%r12
   1a844:	55                   	push   %rbp
   1a845:	48 89 d5             	mov    %rdx,%rbp
   1a848:	31 d2                	xor    %edx,%edx
   1a84a:	53                   	push   %rbx
   1a84b:	48 89 cb             	mov    %rcx,%rbx
   1a84e:	e8 d8 fc ff ff       	call   1a52b <find_dhcp_option_with_encap>
   1a853:	85 c0                	test   %eax,%eax
   1a855:	78 24                	js     1a87b <dhcpopt_fetch+0x40>
   1a857:	48 98                	cltq   
   1a859:	49 03 04 24          	add    (%r12),%rax
   1a85d:	48 89 ef             	mov    %rbp,%rdi
   1a860:	0f b6 50 01          	movzbl 0x1(%rax),%edx
   1a864:	48 8d 70 02          	lea    0x2(%rax),%rsi
   1a868:	48 39 da             	cmp    %rbx,%rdx
   1a86b:	49 89 d4             	mov    %rdx,%r12
   1a86e:	48 0f 47 d3          	cmova  %rbx,%rdx
   1a872:	e8 96 ca ff ff       	call   1730d <__memcpy>
   1a877:	41 0f b6 c4          	movzbl %r12b,%eax
   1a87b:	5b                   	pop    %rbx
   1a87c:	5d                   	pop    %rbp
   1a87d:	41 5c                	pop    %r12
   1a87f:	c3                   	ret    

000000000001a880 <dhcpopt_update_used_len>:
   1a880:	f3 0f 1e fa          	endbr64 
   1a884:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   1a88b:	00 
   1a88c:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   1a890:	31 c9                	xor    %ecx,%ecx
   1a892:	48 85 d2             	test   %rdx,%rdx
   1a895:	74 35                	je     1a8cc <dhcpopt_update_used_len+0x4c>
   1a897:	89 ce                	mov    %ecx,%esi
   1a899:	48 03 37             	add    (%rdi),%rsi
   1a89c:	b8 01 00 00 00       	mov    $0x1,%eax
   1a8a1:	44 8a 06             	mov    (%rsi),%r8b
   1a8a4:	45 8d 48 ff          	lea    -0x1(%r8),%r9d
   1a8a8:	41 80 f9 fd          	cmp    $0xfd,%r9b
   1a8ac:	77 07                	ja     1a8b5 <dhcpopt_update_used_len+0x35>
   1a8ae:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
   1a8b2:	83 c0 02             	add    $0x2,%eax
   1a8b5:	89 c6                	mov    %eax,%esi
   1a8b7:	48 29 f2             	sub    %rsi,%rdx
   1a8ba:	78 10                	js     1a8cc <dhcpopt_update_used_len+0x4c>
   1a8bc:	01 c1                	add    %eax,%ecx
   1a8be:	45 84 c0             	test   %r8b,%r8b
   1a8c1:	74 cf                	je     1a892 <dhcpopt_update_used_len+0x12>
   1a8c3:	48 63 c1             	movslq %ecx,%rax
   1a8c6:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1a8ca:	eb c6                	jmp    1a892 <dhcpopt_update_used_len+0x12>
   1a8cc:	c3                   	ret    

000000000001a8cd <dhcpopt_init>:
   1a8cd:	f3 0f 1e fa          	endbr64 
   1a8d1:	48 89 37             	mov    %rsi,(%rdi)
   1a8d4:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   1a8d8:	48 89 4f 18          	mov    %rcx,0x18(%rdi)
   1a8dc:	e9 9f ff ff ff       	jmp    1a880 <dhcpopt_update_used_len>

000000000001a8e1 <used_len_ipv4>:
   1a8e1:	f3 0f 1e fa          	endbr64 
   1a8e5:	31 c0                	xor    %eax,%eax
   1a8e7:	83 3f 00             	cmpl   $0x0,(%rdi)
   1a8ea:	0f 95 c0             	setne  %al
   1a8ed:	48 c1 e0 02          	shl    $0x2,%rax
   1a8f1:	c3                   	ret    

000000000001a8f2 <used_len_string>:
   1a8f2:	f3 0f 1e fa          	endbr64 
   1a8f6:	e9 28 90 ff ff       	jmp    13923 <strnlen>

000000000001a8fb <dhcppkt_settings_applies>:
   1a8fb:	f3 0f 1e fa          	endbr64 
   1a8ff:	48 83 7e 20 00       	cmpq   $0x0,0x20(%rsi)
   1a904:	75 13                	jne    1a919 <dhcppkt_settings_applies+0x1e>
   1a906:	50                   	push   %rax
   1a907:	8b 7e 18             	mov    0x18(%rsi),%edi
   1a90a:	e8 07 ff ff ff       	call   1a816 <dhcpopt_applies>
   1a90f:	5a                   	pop    %rdx
   1a910:	85 c0                	test   %eax,%eax
   1a912:	0f 95 c0             	setne  %al
   1a915:	0f b6 c0             	movzbl %al,%eax
   1a918:	c3                   	ret    
   1a919:	31 c0                	xor    %eax,%eax
   1a91b:	c3                   	ret    

000000000001a91c <dhcppkt_store>:
   1a91c:	f3 0f 1e fa          	endbr64 
   1a920:	55                   	push   %rbp
   1a921:	89 f5                	mov    %esi,%ebp
   1a923:	48 89 d6             	mov    %rdx,%rsi
   1a926:	48 89 ca             	mov    %rcx,%rdx
   1a929:	53                   	push   %rbx
   1a92a:	48 8d 0d af ce 00 00 	lea    0xceaf(%rip),%rcx        # 277e0 <dhcp_packet_fields>
   1a931:	48 89 fb             	mov    %rdi,%rbx
   1a934:	31 c0                	xor    %eax,%eax
   1a936:	41 51                	push   %r9
   1a938:	49 89 c8             	mov    %rcx,%r8
   1a93b:	3b 29                	cmp    (%rcx),%ebp
   1a93d:	74 20                	je     1a95f <dhcppkt_store+0x43>
   1a93f:	ff c0                	inc    %eax
   1a941:	48 83 c1 10          	add    $0x10,%rcx
   1a945:	83 f8 04             	cmp    $0x4,%eax
   1a948:	75 f1                	jne    1a93b <dhcppkt_store+0x1f>
   1a94a:	41 58                	pop    %r8
   1a94c:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   1a950:	48 89 d1             	mov    %rdx,%rcx
   1a953:	5b                   	pop    %rbx
   1a954:	48 89 f2             	mov    %rsi,%rdx
   1a957:	89 ee                	mov    %ebp,%esi
   1a959:	5d                   	pop    %rbp
   1a95a:	e9 c9 fe ff ff       	jmp    1a828 <dhcpopt_store>
   1a95f:	48 c1 e0 04          	shl    $0x4,%rax
   1a963:	49 01 c0             	add    %rax,%r8
   1a966:	41 0f b7 48 06       	movzwl 0x6(%r8),%ecx
   1a96b:	48 39 d1             	cmp    %rdx,%rcx
   1a96e:	73 07                	jae    1a977 <dhcppkt_store+0x5b>
   1a970:	b8 75 9f ea cb       	mov    $0xcbea9f75,%eax
   1a975:	eb 2c                	jmp    1a9a3 <dhcppkt_store+0x87>
   1a977:	41 0f b7 78 04       	movzwl 0x4(%r8),%edi
   1a97c:	31 c0                	xor    %eax,%eax
   1a97e:	48 03 7b 10          	add    0x10(%rbx),%rdi
   1a982:	f3 aa                	rep stos %al,%es:(%rdi)
   1a984:	41 0f b7 78 04       	movzwl 0x4(%r8),%edi
   1a989:	48 03 7b 10          	add    0x10(%rbx),%rdi
   1a98d:	e8 7b c9 ff ff       	call   1730d <__memcpy>
   1a992:	48 8d 7b 18          	lea    0x18(%rbx),%rdi
   1a996:	31 c9                	xor    %ecx,%ecx
   1a998:	31 d2                	xor    %edx,%edx
   1a99a:	89 ee                	mov    %ebp,%esi
   1a99c:	e8 87 fe ff ff       	call   1a828 <dhcpopt_store>
   1a9a1:	31 c0                	xor    %eax,%eax
   1a9a3:	5a                   	pop    %rdx
   1a9a4:	5b                   	pop    %rbx
   1a9a5:	5d                   	pop    %rbp
   1a9a6:	c3                   	ret    

000000000001a9a7 <dhcppkt_settings_store>:
   1a9a7:	f3 0f 1e fa          	endbr64 
   1a9ab:	8b 76 18             	mov    0x18(%rsi),%esi
   1a9ae:	48 83 ef 38          	sub    $0x38,%rdi
   1a9b2:	e9 65 ff ff ff       	jmp    1a91c <dhcppkt_store>

000000000001a9b7 <dhcppkt_fetch>:
   1a9b7:	f3 0f 1e fa          	endbr64 
   1a9bb:	41 57                	push   %r15
   1a9bd:	31 c0                	xor    %eax,%eax
   1a9bf:	41 56                	push   %r14
   1a9c1:	41 89 f6             	mov    %esi,%r14d
   1a9c4:	41 55                	push   %r13
   1a9c6:	49 89 d5             	mov    %rdx,%r13
   1a9c9:	41 54                	push   %r12
   1a9cb:	49 89 cc             	mov    %rcx,%r12
   1a9ce:	48 8d 0d 0b ce 00 00 	lea    0xce0b(%rip),%rcx        # 277e0 <dhcp_packet_fields>
   1a9d5:	55                   	push   %rbp
   1a9d6:	48 89 ca             	mov    %rcx,%rdx
   1a9d9:	48 89 fd             	mov    %rdi,%rbp
   1a9dc:	53                   	push   %rbx
   1a9dd:	41 51                	push   %r9
   1a9df:	44 3b 31             	cmp    (%rcx),%r14d
   1a9e2:	74 29                	je     1aa0d <dhcppkt_fetch+0x56>
   1a9e4:	ff c0                	inc    %eax
   1a9e6:	48 83 c1 10          	add    $0x10,%rcx
   1a9ea:	83 f8 04             	cmp    $0x4,%eax
   1a9ed:	75 f0                	jne    1a9df <dhcppkt_fetch+0x28>
   1a9ef:	41 58                	pop    %r8
   1a9f1:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   1a9f5:	5b                   	pop    %rbx
   1a9f6:	4c 89 e1             	mov    %r12,%rcx
   1a9f9:	5d                   	pop    %rbp
   1a9fa:	4c 89 ea             	mov    %r13,%rdx
   1a9fd:	41 5c                	pop    %r12
   1a9ff:	44 89 f6             	mov    %r14d,%esi
   1aa02:	41 5d                	pop    %r13
   1aa04:	41 5e                	pop    %r14
   1aa06:	41 5f                	pop    %r15
   1aa08:	e9 2e fe ff ff       	jmp    1a83b <dhcpopt_fetch>
   1aa0d:	48 c1 e0 04          	shl    $0x4,%rax
   1aa11:	48 01 d0             	add    %rdx,%rax
   1aa14:	44 0f b7 78 04       	movzwl 0x4(%rax),%r15d
   1aa19:	4c 03 7d 10          	add    0x10(%rbp),%r15
   1aa1d:	0f b7 70 06          	movzwl 0x6(%rax),%esi
   1aa21:	4c 89 ff             	mov    %r15,%rdi
   1aa24:	ff 50 08             	call   *0x8(%rax)
   1aa27:	48 89 c3             	mov    %rax,%rbx
   1aa2a:	48 85 c0             	test   %rax,%rax
   1aa2d:	74 c0                	je     1a9ef <dhcppkt_fetch+0x38>
   1aa2f:	4c 39 e0             	cmp    %r12,%rax
   1aa32:	4c 89 e2             	mov    %r12,%rdx
   1aa35:	4c 89 fe             	mov    %r15,%rsi
   1aa38:	4c 89 ef             	mov    %r13,%rdi
   1aa3b:	48 0f 46 d0          	cmovbe %rax,%rdx
   1aa3f:	e8 c9 c8 ff ff       	call   1730d <__memcpy>
   1aa44:	5a                   	pop    %rdx
   1aa45:	89 d8                	mov    %ebx,%eax
   1aa47:	5b                   	pop    %rbx
   1aa48:	5d                   	pop    %rbp
   1aa49:	41 5c                	pop    %r12
   1aa4b:	41 5d                	pop    %r13
   1aa4d:	41 5e                	pop    %r14
   1aa4f:	41 5f                	pop    %r15
   1aa51:	c3                   	ret    

000000000001aa52 <dhcppkt_settings_fetch>:
   1aa52:	f3 0f 1e fa          	endbr64 
   1aa56:	8b 76 18             	mov    0x18(%rsi),%esi
   1aa59:	48 83 ef 38          	sub    $0x38,%rdi
   1aa5d:	e9 55 ff ff ff       	jmp    1a9b7 <dhcppkt_fetch>

000000000001aa62 <dhcppkt_init>:
   1aa62:	f3 0f 1e fa          	endbr64 
   1aa66:	53                   	push   %rbx
   1aa67:	48 81 ea f0 00 00 00 	sub    $0xf0,%rdx
   1aa6e:	48 89 fb             	mov    %rdi,%rbx
   1aa71:	48 8d 0d 8c fd ff ff 	lea    -0x274(%rip),%rcx        # 1a804 <dhcpopt_no_realloc>
   1aa78:	48 89 77 10          	mov    %rsi,0x10(%rdi)
   1aa7c:	48 81 c6 f0 00 00 00 	add    $0xf0,%rsi
   1aa83:	48 8d 7f 18          	lea    0x18(%rdi),%rdi
   1aa87:	e8 41 fe ff ff       	call   1a8cd <dhcpopt_init>
   1aa8c:	48 8d 43 50          	lea    0x50(%rbx),%rax
   1aa90:	48 89 5b 38          	mov    %rbx,0x38(%rbx)
   1aa94:	48 89 43 50          	mov    %rax,0x50(%rbx)
   1aa98:	48 89 43 58          	mov    %rax,0x58(%rbx)
   1aa9c:	48 8d 43 60          	lea    0x60(%rbx),%rax
   1aaa0:	48 89 43 60          	mov    %rax,0x60(%rbx)
   1aaa4:	48 89 43 68          	mov    %rax,0x68(%rbx)
   1aaa8:	48 8d 05 f1 cc 00 00 	lea    0xccf1(%rip),%rax        # 277a0 <dhcppkt_settings_operations>
   1aaaf:	48 89 43 70          	mov    %rax,0x70(%rbx)
   1aab3:	48 c7 43 78 00 00 00 	movq   $0x0,0x78(%rbx)
   1aaba:	00 
   1aabb:	5b                   	pop    %rbx
   1aabc:	c3                   	ret    

000000000001aabd <downloader_buffer>:
   1aabd:	f3 0f 1e fa          	endbr64 
   1aac1:	48 8d 47 58          	lea    0x58(%rdi),%rax
   1aac5:	c3                   	ret    

000000000001aac6 <downloader_free>:
   1aac6:	f3 0f 1e fa          	endbr64 
   1aaca:	55                   	push   %rbp
   1aacb:	48 89 fd             	mov    %rdi,%rbp
   1aace:	48 8b 7f 50          	mov    0x50(%rdi),%rdi
   1aad2:	e8 67 53 ff ff       	call   fe3e <ref_decrement>
   1aad7:	48 89 ef             	mov    %rbp,%rdi
   1aada:	5d                   	pop    %rbp
   1aadb:	e9 6f 1b ff ff       	jmp    c64f <free>

000000000001aae0 <downloader_finished>:
   1aae0:	f3 0f 1e fa          	endbr64 
   1aae4:	53                   	push   %rbx
   1aae5:	48 89 fb             	mov    %rdi,%rbx
   1aae8:	48 8d 7f 30          	lea    0x30(%rdi),%rdi
   1aaec:	48 83 ec 10          	sub    $0x10,%rsp
   1aaf0:	48 8b 47 20          	mov    0x20(%rdi),%rax
   1aaf4:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   1aaf8:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1aafc:	48 89 50 48          	mov    %rdx,0x48(%rax)
   1ab00:	e8 ca ed fe ff       	call   98cf <intf_shutdown>
   1ab05:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1ab09:	48 83 c4 10          	add    $0x10,%rsp
   1ab0d:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1ab11:	5b                   	pop    %rbx
   1ab12:	e9 b8 ed fe ff       	jmp    98cf <intf_shutdown>

000000000001ab17 <downloader_vredirect>:
   1ab17:	f3 0f 1e fa          	endbr64 
   1ab1b:	41 55                	push   %r13
   1ab1d:	41 89 f5             	mov    %esi,%r13d
   1ab20:	41 54                	push   %r12
   1ab22:	49 89 d4             	mov    %rdx,%r12
   1ab25:	55                   	push   %rbp
   1ab26:	48 89 fd             	mov    %rdi,%rbp
   1ab29:	48 83 ec 30          	sub    $0x30,%rsp
   1ab2d:	48 8b 05 3c f4 00 00 	mov    0xf43c(%rip),%rax        # 29f70 <__stack_chk_guard>
   1ab34:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ab39:	31 c0                	xor    %eax,%eax
   1ab3b:	ff ce                	dec    %esi
   1ab3d:	74 15                	je     1ab54 <downloader_vredirect+0x3d>
   1ab3f:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   1ab43:	4c 89 e2             	mov    %r12,%rdx
   1ab46:	44 89 ee             	mov    %r13d,%esi
   1ab49:	e8 e6 40 ff ff       	call   ec34 <xfer_vreopen>
   1ab4e:	85 c0                	test   %eax,%eax
   1ab50:	74 5d                	je     1abaf <downloader_vredirect+0x98>
   1ab52:	eb 49                	jmp    1ab9d <downloader_vredirect+0x86>
   1ab54:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1ab59:	48 89 d6             	mov    %rdx,%rsi
   1ab5c:	b9 06 00 00 00       	mov    $0x6,%ecx
   1ab61:	48 89 c7             	mov    %rax,%rdi
   1ab64:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
   1ab66:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1ab6a:	83 fa 2f             	cmp    $0x2f,%edx
   1ab6d:	77 10                	ja     1ab7f <downloader_vredirect+0x68>
   1ab6f:	89 d0                	mov    %edx,%eax
   1ab71:	83 c2 08             	add    $0x8,%edx
   1ab74:	48 03 44 24 20       	add    0x20(%rsp),%rax
   1ab79:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1ab7d:	eb 0e                	jmp    1ab8d <downloader_vredirect+0x76>
   1ab7f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1ab84:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1ab88:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1ab8d:	48 8b 7d 50          	mov    0x50(%rbp),%rdi
   1ab91:	48 8b 30             	mov    (%rax),%rsi
   1ab94:	e8 8c 4d 00 00       	call   1f925 <image_set_uri>
   1ab99:	85 c0                	test   %eax,%eax
   1ab9b:	74 a2                	je     1ab3f <downloader_vredirect+0x28>
   1ab9d:	89 c6                	mov    %eax,%esi
   1ab9f:	48 89 ef             	mov    %rbp,%rdi
   1aba2:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1aba6:	e8 35 ff ff ff       	call   1aae0 <downloader_finished>
   1abab:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1abaf:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1abb4:	48 2b 15 b5 f3 00 00 	sub    0xf3b5(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1abbb:	74 05                	je     1abc2 <downloader_vredirect+0xab>
   1abbd:	e8 9e 7e fe ff       	call   2a60 <__stack_chk_fail>
   1abc2:	48 83 c4 30          	add    $0x30,%rsp
   1abc6:	5d                   	pop    %rbp
   1abc7:	41 5c                	pop    %r12
   1abc9:	41 5d                	pop    %r13
   1abcb:	c3                   	ret    

000000000001abcc <downloader_deliver>:
   1abcc:	f3 0f 1e fa          	endbr64 
   1abd0:	55                   	push   %rbp
   1abd1:	48 89 fd             	mov    %rdi,%rbp
   1abd4:	48 83 c7 58          	add    $0x58,%rdi
   1abd8:	48 83 ec 10          	sub    $0x10,%rsp
   1abdc:	e8 d1 cd ff ff       	call   179b2 <xferbuf_deliver>
   1abe1:	85 c0                	test   %eax,%eax
   1abe3:	74 12                	je     1abf7 <downloader_deliver+0x2b>
   1abe5:	89 c6                	mov    %eax,%esi
   1abe7:	48 89 ef             	mov    %rbp,%rdi
   1abea:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1abee:	e8 ed fe ff ff       	call   1aae0 <downloader_finished>
   1abf3:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   1abf7:	48 83 c4 10          	add    $0x10,%rsp
   1abfb:	5d                   	pop    %rbp
   1abfc:	c3                   	ret    

000000000001abfd <downloader_progress>:
   1abfd:	f3 0f 1e fa          	endbr64 
   1ac01:	55                   	push   %rbp
   1ac02:	48 89 fd             	mov    %rdi,%rbp
   1ac05:	48 83 c7 30          	add    $0x30,%rdi
   1ac09:	53                   	push   %rbx
   1ac0a:	48 89 f3             	mov    %rsi,%rbx
   1ac0d:	51                   	push   %rcx
   1ac0e:	e8 fe 12 ff ff       	call   bf11 <job_progress>
   1ac13:	85 c0                	test   %eax,%eax
   1ac15:	75 16                	jne    1ac2d <downloader_progress+0x30>
   1ac17:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1ac1c:	75 0f                	jne    1ac2d <downloader_progress+0x30>
   1ac1e:	48 8b 55 68          	mov    0x68(%rbp),%rdx
   1ac22:	48 89 13             	mov    %rdx,(%rbx)
   1ac25:	48 8b 55 60          	mov    0x60(%rbp),%rdx
   1ac29:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1ac2d:	5a                   	pop    %rdx
   1ac2e:	5b                   	pop    %rbx
   1ac2f:	5d                   	pop    %rbp
   1ac30:	c3                   	ret    

000000000001ac31 <create_downloader>:
   1ac31:	f3 0f 1e fa          	endbr64 
   1ac35:	41 55                	push   %r13
   1ac37:	49 89 fd             	mov    %rdi,%r13
   1ac3a:	bf 78 00 00 00       	mov    $0x78,%edi
   1ac3f:	41 54                	push   %r12
   1ac41:	49 89 f4             	mov    %rsi,%r12
   1ac44:	55                   	push   %rbp
   1ac45:	e8 10 1a ff ff       	call   c65a <zalloc>
   1ac4a:	48 85 c0             	test   %rax,%rax
   1ac4d:	75 0b                	jne    1ac5a <create_downloader+0x29>
   1ac4f:	41 bc 77 df fe ce    	mov    $0xcefedf77,%r12d
   1ac55:	e9 98 00 00 00       	jmp    1acf2 <create_downloader+0xc1>
   1ac5a:	48 89 c5             	mov    %rax,%rbp
   1ac5d:	48 8d 05 62 fe ff ff 	lea    -0x19e(%rip),%rax        # 1aac6 <downloader_free>
   1ac64:	48 8d 15 b5 cb 00 00 	lea    0xcbb5(%rip),%rdx        # 27820 <downloader_job_desc>
   1ac6b:	4c 89 e7             	mov    %r12,%rdi
   1ac6e:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1ac72:	48 8d 05 67 b7 00 00 	lea    0xb767(%rip),%rax        # 263e0 <null_intf>
   1ac79:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1ac7d:	48 89 45 30          	mov    %rax,0x30(%rbp)
   1ac81:	48 8d 05 d8 cb 00 00 	lea    0xcbd8(%rip),%rax        # 27860 <downloader_xfer_desc>
   1ac88:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   1ac8c:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   1ac90:	48 89 45 40          	mov    %rax,0x40(%rbp)
   1ac94:	48 89 45 48          	mov    %rax,0x48(%rbp)
   1ac98:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   1ac9c:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   1aca0:	e8 8d 51 ff ff       	call   fe32 <ref_increment>
   1aca5:	49 8d 44 24 40       	lea    0x40(%r12),%rax
   1acaa:	4c 89 65 50          	mov    %r12,0x50(%rbp)
   1acae:	49 8b 74 24 20       	mov    0x20(%r12),%rsi
   1acb3:	48 89 45 58          	mov    %rax,0x58(%rbp)
   1acb7:	48 8d 05 b2 c7 00 00 	lea    0xc7b2(%rip),%rax        # 27470 <xferbuf_umalloc_operations>
   1acbe:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   1acc2:	48 89 45 70          	mov    %rax,0x70(%rbp)
   1acc6:	e8 48 3d ff ff       	call   ea13 <xfer_open_uri>
   1accb:	41 89 c4             	mov    %eax,%r12d
   1acce:	85 c0                	test   %eax,%eax
   1acd0:	74 0c                	je     1acde <create_downloader+0xad>
   1acd2:	89 c6                	mov    %eax,%esi
   1acd4:	48 89 ef             	mov    %rbp,%rdi
   1acd7:	e8 04 fe ff ff       	call   1aae0 <downloader_finished>
   1acdc:	eb 0c                	jmp    1acea <create_downloader+0xb9>
   1acde:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   1ace2:	4c 89 ee             	mov    %r13,%rsi
   1ace5:	e8 87 ea fe ff       	call   9771 <intf_plug_plug>
   1acea:	48 89 ef             	mov    %rbp,%rdi
   1aced:	e8 4c 51 ff ff       	call   fe3e <ref_decrement>
   1acf2:	44 89 e0             	mov    %r12d,%eax
   1acf5:	5d                   	pop    %rbp
   1acf6:	41 5c                	pop    %r12
   1acf8:	41 5d                	pop    %r13
   1acfa:	c3                   	ret    

000000000001acfb <init_editbox>:
   1acfb:	f3 0f 1e fa          	endbr64 
   1acff:	41 55                	push   %r13
   1ad01:	45 89 c5             	mov    %r8d,%r13d
   1ad04:	31 c0                	xor    %eax,%eax
   1ad06:	41 54                	push   %r12
   1ad08:	45 89 cc             	mov    %r9d,%r12d
   1ad0b:	55                   	push   %rbp
   1ad0c:	48 89 cd             	mov    %rcx,%rbp
   1ad0f:	b9 40 00 00 00       	mov    $0x40,%ecx
   1ad14:	53                   	push   %rbx
   1ad15:	48 89 fb             	mov    %rdi,%rbx
   1ad18:	41 52                	push   %r10
   1ad1a:	f3 aa                	rep stos %al,%es:(%rdi)
   1ad1c:	48 89 33             	mov    %rsi,(%rbx)
   1ad1f:	48 89 f7             	mov    %rsi,%rdi
   1ad22:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1ad26:	e8 0f 8c ff ff       	call   1393a <strlen>
   1ad2b:	89 43 10             	mov    %eax,0x10(%rbx)
   1ad2e:	48 85 ed             	test   %rbp,%rbp
   1ad31:	75 07                	jne    1ad3a <init_editbox+0x3f>
   1ad33:	48 8d 2d 46 bb 00 00 	lea    0xbb46(%rip),%rbp        # 26880 <_stdscr>
   1ad3a:	8b 44 24 30          	mov    0x30(%rsp),%eax
   1ad3e:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
   1ad42:	44 89 6b 28          	mov    %r13d,0x28(%rbx)
   1ad46:	89 43 30             	mov    %eax,0x30(%rbx)
   1ad49:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1ad4d:	44 89 63 2c          	mov    %r12d,0x2c(%rbx)
   1ad51:	89 43 38             	mov    %eax,0x38(%rbx)
   1ad54:	58                   	pop    %rax
   1ad55:	5b                   	pop    %rbx
   1ad56:	5d                   	pop    %rbp
   1ad57:	41 5c                	pop    %r12
   1ad59:	41 5d                	pop    %r13
   1ad5b:	c3                   	ret    

000000000001ad5c <draw_editbox>:
   1ad5c:	f3 0f 1e fa          	endbr64 
   1ad60:	55                   	push   %rbp
   1ad61:	48 89 e5             	mov    %rsp,%rbp
   1ad64:	41 57                	push   %r15
   1ad66:	41 56                	push   %r14
   1ad68:	41 55                	push   %r13
   1ad6a:	41 54                	push   %r12
   1ad6c:	53                   	push   %rbx
   1ad6d:	48 89 fb             	mov    %rdi,%rbx
   1ad70:	48 83 ec 28          	sub    $0x28,%rsp
   1ad74:	44 8b 7f 30          	mov    0x30(%rdi),%r15d
   1ad78:	48 8b 05 f1 f1 00 00 	mov    0xf1f1(%rip),%rax        # 29f70 <__stack_chk_guard>
   1ad7f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1ad83:	31 c0                	xor    %eax,%eax
   1ad85:	48 89 e2             	mov    %rsp,%rdx
   1ad88:	49 8d 47 10          	lea    0x10(%r15),%rax
   1ad8c:	4c 89 f9             	mov    %r15,%rcx
   1ad8f:	48 c1 e8 04          	shr    $0x4,%rax
   1ad93:	48 c1 e0 04          	shl    $0x4,%rax
   1ad97:	48 89 c6             	mov    %rax,%rsi
   1ad9a:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   1ada1:	48 29 f2             	sub    %rsi,%rdx
   1ada4:	48 39 d4             	cmp    %rdx,%rsp
   1ada7:	74 12                	je     1adbb <draw_editbox+0x5f>
   1ada9:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1adb0:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1adb7:	00 00 
   1adb9:	eb e9                	jmp    1ada4 <draw_editbox+0x48>
   1adbb:	25 ff 0f 00 00       	and    $0xfff,%eax
   1adc0:	48 29 c4             	sub    %rax,%rsp
   1adc3:	48 85 c0             	test   %rax,%rax
   1adc6:	74 06                	je     1adce <draw_editbox+0x72>
   1adc8:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1adce:	44 8b 6b 10          	mov    0x10(%rbx),%r13d
   1add2:	44 8b 63 34          	mov    0x34(%rbx),%r12d
   1add6:	ba 03 00 00 00       	mov    $0x3,%edx
   1addb:	49 89 e6             	mov    %rsp,%r14
   1adde:	44 89 e8             	mov    %r13d,%eax
   1ade1:	44 29 e0             	sub    %r12d,%eax
   1ade4:	29 c2                	sub    %eax,%edx
   1ade6:	85 d2                	test   %edx,%edx
   1ade8:	7e 0e                	jle    1adf8 <draw_editbox+0x9c>
   1adea:	41 29 d4             	sub    %edx,%r12d
   1aded:	b8 00 00 00 00       	mov    $0x0,%eax
   1adf2:	44 0f 48 e0          	cmovs  %eax,%r12d
   1adf6:	eb 0b                	jmp    1ae03 <draw_editbox+0xa7>
   1adf8:	29 c8                	sub    %ecx,%eax
   1adfa:	ff c0                	inc    %eax
   1adfc:	85 c0                	test   %eax,%eax
   1adfe:	7e 03                	jle    1ae03 <draw_editbox+0xa7>
   1ae00:	41 01 c4             	add    %eax,%r12d
   1ae03:	44 89 63 34          	mov    %r12d,0x34(%rbx)
   1ae07:	4c 89 f7             	mov    %r14,%rdi
   1ae0a:	4c 89 f9             	mov    %r15,%rcx
   1ae0d:	b8 5f 00 00 00       	mov    $0x5f,%eax
   1ae12:	f3 aa                	rep stos %al,%es:(%rdi)
   1ae14:	48 8b 33             	mov    (%rbx),%rsi
   1ae17:	43 c6 04 3e 00       	movb   $0x0,(%r14,%r15,1)
   1ae1c:	48 89 f7             	mov    %rsi,%rdi
   1ae1f:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
   1ae23:	e8 12 8b ff ff       	call   1393a <strlen>
   1ae28:	49 63 cc             	movslq %r12d,%rcx
   1ae2b:	4c 89 fa             	mov    %r15,%rdx
   1ae2e:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   1ae32:	48 29 c8             	sub    %rcx,%rax
   1ae35:	4c 39 f8             	cmp    %r15,%rax
   1ae38:	48 0f 46 d0          	cmovbe %rax,%rdx
   1ae3c:	f6 43 38 01          	testb  $0x1,0x38(%rbx)
   1ae40:	74 0f                	je     1ae51 <draw_editbox+0xf5>
   1ae42:	4c 89 f7             	mov    %r14,%rdi
   1ae45:	48 89 d1             	mov    %rdx,%rcx
   1ae48:	b8 2a 00 00 00       	mov    $0x2a,%eax
   1ae4d:	f3 aa                	rep stos %al,%es:(%rdi)
   1ae4f:	eb 0b                	jmp    1ae5c <draw_editbox+0x100>
   1ae51:	48 01 ce             	add    %rcx,%rsi
   1ae54:	4c 89 f7             	mov    %r14,%rdi
   1ae57:	e8 b1 c4 ff ff       	call   1730d <__memcpy>
   1ae5c:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
   1ae61:	75 0b                	jne    1ae6e <draw_editbox+0x112>
   1ae63:	48 8d 05 16 ba 00 00 	lea    0xba16(%rip),%rax        # 26880 <_stdscr>
   1ae6a:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1ae6e:	8b 53 2c             	mov    0x2c(%rbx),%edx
   1ae71:	8b 73 28             	mov    0x28(%rbx),%esi
   1ae74:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1ae78:	e8 62 26 ff ff       	call   d4df <wmove>
   1ae7d:	85 c0                	test   %eax,%eax
   1ae7f:	75 13                	jne    1ae94 <draw_editbox+0x138>
   1ae81:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1ae85:	4c 89 f2             	mov    %r14,%rdx
   1ae88:	48 8d 35 92 87 00 00 	lea    0x8792(%rip),%rsi        # 23621 <.LC0>
   1ae8f:	e8 28 4a ff ff       	call   f8bc <wprintw>
   1ae94:	8b 53 2c             	mov    0x2c(%rbx),%edx
   1ae97:	8b 73 28             	mov    0x28(%rbx),%esi
   1ae9a:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1ae9e:	44 01 ea             	add    %r13d,%edx
   1aea1:	44 29 e2             	sub    %r12d,%edx
   1aea4:	e8 36 26 ff ff       	call   d4df <wmove>
   1aea9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1aead:	48 2b 05 bc f0 00 00 	sub    0xf0bc(%rip),%rax        # 29f70 <__stack_chk_guard>
   1aeb4:	74 05                	je     1aebb <draw_editbox+0x15f>
   1aeb6:	e8 a5 7b fe ff       	call   2a60 <__stack_chk_fail>
   1aebb:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1aebf:	5b                   	pop    %rbx
   1aec0:	41 5c                	pop    %r12
   1aec2:	41 5d                	pop    %r13
   1aec4:	41 5e                	pop    %r14
   1aec6:	41 5f                	pop    %r15
   1aec8:	5d                   	pop    %rbp
   1aec9:	c3                   	ret    

000000000001aeca <insert_delete>:
   1aeca:	41 57                	push   %r15
   1aecc:	41 56                	push   %r14
   1aece:	41 55                	push   %r13
   1aed0:	41 54                	push   %r12
   1aed2:	49 89 d4             	mov    %rdx,%r12
   1aed5:	55                   	push   %rbp
   1aed6:	48 89 fd             	mov    %rdi,%rbp
   1aed9:	53                   	push   %rbx
   1aeda:	48 89 f3             	mov    %rsi,%rbx
   1aedd:	48 83 ec 28          	sub    $0x28,%rsp
   1aee1:	4c 8b 2f             	mov    (%rdi),%r13
   1aee4:	4c 89 ef             	mov    %r13,%rdi
   1aee7:	e8 4e 8a ff ff       	call   1393a <strlen>
   1aeec:	8b 4d 10             	mov    0x10(%rbp),%ecx
   1aeef:	49 89 c7             	mov    %rax,%r15
   1aef2:	48 89 c2             	mov    %rax,%rdx
   1aef5:	49 29 cf             	sub    %rcx,%r15
   1aef8:	49 89 c8             	mov    %rcx,%r8
   1aefb:	49 39 df             	cmp    %rbx,%r15
   1aefe:	49 0f 46 df          	cmovbe %r15,%rbx
   1af02:	31 c0                	xor    %eax,%eax
   1af04:	4d 85 e4             	test   %r12,%r12
   1af07:	74 25                	je     1af2e <insert_delete+0x64>
   1af09:	4c 89 e7             	mov    %r12,%rdi
   1af0c:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1af11:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1af16:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   1af1a:	e8 1b 8a ff ff       	call   1393a <strlen>
   1af1f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1af24:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1af29:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
   1af2e:	49 89 d6             	mov    %rdx,%r14
   1af31:	44 89 45 18          	mov    %r8d,0x18(%rbp)
   1af35:	48 8d 34 19          	lea    (%rcx,%rbx,1),%rsi
   1af39:	49 f7 d6             	not    %r14
   1af3c:	4c 03 75 08          	add    0x8(%rbp),%r14
   1af40:	49 01 de             	add    %rbx,%r14
   1af43:	49 39 c6             	cmp    %rax,%r14
   1af46:	4c 0f 47 f0          	cmova  %rax,%r14
   1af4a:	48 89 d0             	mov    %rdx,%rax
   1af4d:	48 29 d8             	sub    %rbx,%rax
   1af50:	4c 01 f0             	add    %r14,%rax
   1af53:	48 39 d0             	cmp    %rdx,%rax
   1af56:	48 0f 42 c2          	cmovb  %rdx,%rax
   1af5a:	4c 01 f1             	add    %r14,%rcx
   1af5d:	49 8d 57 01          	lea    0x1(%r15),%rdx
   1af61:	4c 01 ee             	add    %r13,%rsi
   1af64:	49 8d 7c 0d 00       	lea    0x0(%r13,%rcx,1),%rdi
   1af69:	48 29 da             	sub    %rbx,%rdx
   1af6c:	89 45 1c             	mov    %eax,0x1c(%rbp)
   1af6f:	e8 bb c3 ff ff       	call   1732f <__memmove>
   1af74:	8b 7d 10             	mov    0x10(%rbp),%edi
   1af77:	4c 89 f2             	mov    %r14,%rdx
   1af7a:	48 03 7d 00          	add    0x0(%rbp),%rdi
   1af7e:	4c 89 e6             	mov    %r12,%rsi
   1af81:	e8 87 c3 ff ff       	call   1730d <__memcpy>
   1af86:	44 01 75 10          	add    %r14d,0x10(%rbp)
   1af8a:	48 83 c4 28          	add    $0x28,%rsp
   1af8e:	5b                   	pop    %rbx
   1af8f:	5d                   	pop    %rbp
   1af90:	41 5c                	pop    %r12
   1af92:	41 5d                	pop    %r13
   1af94:	41 5e                	pop    %r14
   1af96:	41 5f                	pop    %r15
   1af98:	c3                   	ret    

000000000001af99 <replace_string>:
   1af99:	f3 0f 1e fa          	endbr64 
   1af9d:	c7 47 10 00 00 00 00 	movl   $0x0,0x10(%rdi)
   1afa4:	48 89 f2             	mov    %rsi,%rdx
   1afa7:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1afab:	e9 1a ff ff ff       	jmp    1aeca <insert_delete>

000000000001afb0 <edit_string>:
   1afb0:	f3 0f 1e fa          	endbr64 
   1afb4:	41 54                	push   %r12
   1afb6:	41 89 f4             	mov    %esi,%r12d
   1afb9:	55                   	push   %rbp
   1afba:	48 89 fd             	mov    %rdi,%rbp
   1afbd:	48 83 ec 18          	sub    $0x18,%rsp
   1afc1:	48 8b 3f             	mov    (%rdi),%rdi
   1afc4:	48 8b 05 a5 ef 00 00 	mov    0xefa5(%rip),%rax        # 29f70 <__stack_chk_guard>
   1afcb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1afd0:	31 c0                	xor    %eax,%eax
   1afd2:	e8 63 89 ff ff       	call   1393a <strlen>
   1afd7:	8b 75 10             	mov    0x10(%rbp),%esi
   1afda:	41 8d 54 24 e0       	lea    -0x20(%r12),%edx
   1afdf:	89 75 14             	mov    %esi,0x14(%rbp)
   1afe2:	89 75 18             	mov    %esi,0x18(%rbp)
   1afe5:	89 75 1c             	mov    %esi,0x1c(%rbp)
   1afe8:	83 fa 5e             	cmp    $0x5e,%edx
   1afeb:	77 16                	ja     1b003 <edit_string+0x53>
   1afed:	44 88 64 24 06       	mov    %r12b,0x6(%rsp)
   1aff2:	48 8d 54 24 06       	lea    0x6(%rsp),%rdx
   1aff7:	31 f6                	xor    %esi,%esi
   1aff9:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
   1affe:	e9 ee 00 00 00       	jmp    1b0f1 <edit_string+0x141>
   1b003:	41 83 fc 17          	cmp    $0x17,%r12d
   1b007:	7f 28                	jg     1b031 <edit_string+0x81>
   1b009:	45 85 e4             	test   %r12d,%r12d
   1b00c:	0f 8e 25 01 00 00    	jle    1b137 <edit_string+0x187>
   1b012:	41 8d 54 24 ff       	lea    -0x1(%r12),%edx
   1b017:	83 fa 16             	cmp    $0x16,%edx
   1b01a:	0f 87 17 01 00 00    	ja     1b137 <edit_string+0x187>
   1b020:	48 8d 0d e5 75 00 00 	lea    0x75e5(%rip),%rcx        # 2260c <empty_encap.0+0x3>
   1b027:	48 63 14 91          	movslq (%rcx,%rdx,4),%rdx
   1b02b:	48 01 ca             	add    %rcx,%rdx
   1b02e:	3e ff e2             	notrack jmp *%rdx
   1b031:	41 81 fc 46 01 00 00 	cmp    $0x146,%r12d
   1b038:	0f 84 da 00 00 00    	je     1b118 <edit_string+0x168>
   1b03e:	7f 1f                	jg     1b05f <edit_string+0xaf>
   1b040:	41 81 fc 43 01 00 00 	cmp    $0x143,%r12d
   1b047:	0f 84 db 00 00 00    	je     1b128 <edit_string+0x178>
   1b04d:	41 81 fc 44 01 00 00 	cmp    $0x144,%r12d
   1b054:	0f 84 c3 00 00 00    	je     1b11d <edit_string+0x16d>
   1b05a:	e9 d8 00 00 00       	jmp    1b137 <edit_string+0x187>
   1b05f:	41 81 fc 48 01 00 00 	cmp    $0x148,%r12d
   1b066:	0f 84 a3 00 00 00    	je     1b10f <edit_string+0x15f>
   1b06c:	41 81 fc 7e 04 00 00 	cmp    $0x47e,%r12d
   1b073:	74 29                	je     1b09e <edit_string+0xee>
   1b075:	e9 bd 00 00 00       	jmp    1b137 <edit_string+0x187>
   1b07a:	45 31 e4             	xor    %r12d,%r12d
   1b07d:	85 f6                	test   %esi,%esi
   1b07f:	0f 84 b2 00 00 00    	je     1b137 <edit_string+0x187>
   1b085:	ff ce                	dec    %esi
   1b087:	31 d2                	xor    %edx,%edx
   1b089:	48 89 ef             	mov    %rbp,%rdi
   1b08c:	89 75 10             	mov    %esi,0x10(%rbp)
   1b08f:	be 01 00 00 00       	mov    $0x1,%esi
   1b094:	e8 31 fe ff ff       	call   1aeca <insert_delete>
   1b099:	e9 99 00 00 00       	jmp    1b137 <edit_string+0x187>
   1b09e:	31 d2                	xor    %edx,%edx
   1b0a0:	be 01 00 00 00       	mov    $0x1,%esi
   1b0a5:	eb 4a                	jmp    1b0f1 <edit_string+0x141>
   1b0a7:	41 89 f4             	mov    %esi,%r12d
   1b0aa:	8b 45 10             	mov    0x10(%rbp),%eax
   1b0ad:	85 c0                	test   %eax,%eax
   1b0af:	74 2e                	je     1b0df <edit_string+0x12f>
   1b0b1:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1b0b5:	ff c8                	dec    %eax
   1b0b7:	0f be 3c 02          	movsbl (%rdx,%rax,1),%edi
   1b0bb:	e8 f0 e2 ff ff       	call   193b0 <isspace>
   1b0c0:	85 c0                	test   %eax,%eax
   1b0c2:	74 1b                	je     1b0df <edit_string+0x12f>
   1b0c4:	ff 4d 10             	decl   0x10(%rbp)
   1b0c7:	eb e1                	jmp    1b0aa <edit_string+0xfa>
   1b0c9:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1b0cd:	ff c8                	dec    %eax
   1b0cf:	0f be 3c 02          	movsbl (%rdx,%rax,1),%edi
   1b0d3:	e8 d8 e2 ff ff       	call   193b0 <isspace>
   1b0d8:	85 c0                	test   %eax,%eax
   1b0da:	75 0a                	jne    1b0e6 <edit_string+0x136>
   1b0dc:	ff 4d 10             	decl   0x10(%rbp)
   1b0df:	8b 45 10             	mov    0x10(%rbp),%eax
   1b0e2:	85 c0                	test   %eax,%eax
   1b0e4:	75 e3                	jne    1b0c9 <edit_string+0x119>
   1b0e6:	8b 45 10             	mov    0x10(%rbp),%eax
   1b0e9:	4c 89 e6             	mov    %r12,%rsi
   1b0ec:	48 29 c6             	sub    %rax,%rsi
   1b0ef:	31 d2                	xor    %edx,%edx
   1b0f1:	48 89 ef             	mov    %rbp,%rdi
   1b0f4:	e8 d1 fd ff ff       	call   1aeca <insert_delete>
   1b0f9:	45 31 e4             	xor    %r12d,%r12d
   1b0fc:	eb 39                	jmp    1b137 <edit_string+0x187>
   1b0fe:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
   1b105:	eb e8                	jmp    1b0ef <edit_string+0x13f>
   1b107:	31 d2                	xor    %edx,%edx
   1b109:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1b10d:	eb e2                	jmp    1b0f1 <edit_string+0x141>
   1b10f:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%rbp)
   1b116:	eb e1                	jmp    1b0f9 <edit_string+0x149>
   1b118:	89 45 10             	mov    %eax,0x10(%rbp)
   1b11b:	eb dc                	jmp    1b0f9 <edit_string+0x149>
   1b11d:	45 31 e4             	xor    %r12d,%r12d
   1b120:	85 f6                	test   %esi,%esi
   1b122:	74 13                	je     1b137 <edit_string+0x187>
   1b124:	ff ce                	dec    %esi
   1b126:	eb 0c                	jmp    1b134 <edit_string+0x184>
   1b128:	89 f2                	mov    %esi,%edx
   1b12a:	45 31 e4             	xor    %r12d,%r12d
   1b12d:	48 39 c2             	cmp    %rax,%rdx
   1b130:	73 05                	jae    1b137 <edit_string+0x187>
   1b132:	ff c6                	inc    %esi
   1b134:	89 75 10             	mov    %esi,0x10(%rbp)
   1b137:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1b13c:	48 2b 05 2d ee 00 00 	sub    0xee2d(%rip),%rax        # 29f70 <__stack_chk_guard>
   1b143:	74 05                	je     1b14a <edit_string+0x19a>
   1b145:	e8 16 79 fe ff       	call   2a60 <__stack_chk_fail>
   1b14a:	48 83 c4 18          	add    $0x18,%rsp
   1b14e:	44 89 e0             	mov    %r12d,%eax
   1b151:	5d                   	pop    %rbp
   1b152:	41 5c                	pop    %r12
   1b154:	c3                   	ret    

000000000001b155 <efi_block_io_flush>:
   1b155:	f3 0f 1e fa          	endbr64 
   1b159:	31 c0                	xor    %eax,%eax
   1b15b:	c3                   	ret    

000000000001b15c <efi_block_install>:
   1b15c:	f3 0f 1e fa          	endbr64 
   1b160:	41 54                	push   %r12
   1b162:	49 89 fc             	mov    %rdi,%r12
   1b165:	55                   	push   %rbp
   1b166:	53                   	push   %rbx
   1b167:	8b 5f 04             	mov    0x4(%rdi),%ebx
   1b16a:	bf 18 00 00 00       	mov    $0x18,%edi
   1b16f:	e8 e6 14 ff ff       	call   c65a <zalloc>
   1b174:	48 85 c0             	test   %rax,%rax
   1b177:	75 0b                	jne    1b184 <efi_block_install+0x28>
   1b179:	41 bc 77 df dd ce    	mov    $0xcedddf77,%r12d
   1b17f:	e9 8e 00 00 00       	jmp    1b212 <efi_block_install+0xb6>
   1b184:	49 8d 7c 24 0a       	lea    0xa(%r12),%rdi
   1b189:	ba 06 00 00 00       	mov    $0x6,%edx
   1b18e:	48 8d 35 ec 8e 00 00 	lea    0x8eec(%rip),%rsi        # 24081 <.LC0>
   1b195:	48 89 c5             	mov    %rax,%rbp
   1b198:	e8 34 88 ff ff       	call   139d1 <strncpy>
   1b19d:	ba 08 00 00 00       	mov    $0x8,%edx
   1b1a2:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
   1b1a7:	48 8d 35 da 8e 00 00 	lea    0x8eda(%rip),%rsi        # 24088 <.LC1>
   1b1ae:	e8 1e 88 ff ff       	call   139d1 <strncpy>
   1b1b3:	4c 89 e7             	mov    %r12,%rdi
   1b1b6:	e8 ca c8 ff ff       	call   17a85 <acpi_fix_checksum>
   1b1bb:	48 83 ec 20          	sub    $0x20,%rsp
   1b1bf:	4c 8d 4d 10          	lea    0x10(%rbp),%r9
   1b1c3:	49 89 d8             	mov    %rbx,%r8
   1b1c6:	48 8b 05 eb ec 00 00 	mov    0xeceb(%rip),%rax        # 29eb8 <acpi>
   1b1cd:	4c 89 e2             	mov    %r12,%rdx
   1b1d0:	48 89 c1             	mov    %rax,%rcx
   1b1d3:	ff 10                	call   *(%rax)
   1b1d5:	48 83 c4 20          	add    $0x20,%rsp
   1b1d9:	48 85 c0             	test   %rax,%rax
   1b1dc:	74 22                	je     1b200 <efi_block_install+0xa4>
   1b1de:	49 89 c4             	mov    %rax,%r12
   1b1e1:	48 89 ef             	mov    %rbp,%rdi
   1b1e4:	49 c1 ec 38          	shr    $0x38,%r12
   1b1e8:	41 09 c4             	or     %eax,%r12d
   1b1eb:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b1ef:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b1f6:	41 f7 dc             	neg    %r12d
   1b1f9:	e8 51 14 ff ff       	call   c64f <free>
   1b1fe:	eb 12                	jmp    1b212 <efi_block_install+0xb6>
   1b200:	48 8d 35 b9 c6 00 00 	lea    0xc6b9(%rip),%rsi        # 278c0 <efi_acpi_tables>
   1b207:	48 89 ef             	mov    %rbp,%rdi
   1b20a:	45 31 e4             	xor    %r12d,%r12d
   1b20d:	e8 c5 0e ff ff       	call   c0d7 <extern_list_add_tail>
   1b212:	44 89 e0             	mov    %r12d,%eax
   1b215:	5b                   	pop    %rbx
   1b216:	5d                   	pop    %rbp
   1b217:	41 5c                	pop    %r12
   1b219:	c3                   	ret    

000000000001b21a <efi_block_rw>:
   1b21a:	48 8b 87 c0 00 00 00 	mov    0xc0(%rdi),%rax
   1b221:	49 89 d2             	mov    %rdx,%r10
   1b224:	31 d2                	xor    %edx,%edx
   1b226:	49 89 f1             	mov    %rsi,%r9
   1b229:	44 8b 58 1c          	mov    0x1c(%rax),%r11d
   1b22d:	48 89 c8             	mov    %rcx,%rax
   1b230:	49 f7 f3             	div    %r11
   1b233:	4c 89 de             	mov    %r11,%rsi
   1b236:	0f af f0             	imul   %eax,%esi
   1b239:	89 c2                	mov    %eax,%edx
   1b23b:	48 39 ce             	cmp    %rcx,%rsi
   1b23e:	75 09                	jne    1b249 <efi_block_rw+0x2f>
   1b240:	4c 89 d1             	mov    %r10,%rcx
   1b243:	4c 89 ce             	mov    %r9,%rsi
   1b246:	41 ff e0             	jmp    *%r8
   1b249:	b8 7e df dd e3       	mov    $0xe3dddf7e,%eax
   1b24e:	c3                   	ret    

000000000001b24f <efi_block_io_write>:
   1b24f:	f3 0f 1e fa          	endbr64 
   1b253:	41 55                	push   %r13
   1b255:	41 54                	push   %r12
   1b257:	4d 89 cc             	mov    %r9,%r12
   1b25a:	55                   	push   %rbp
   1b25b:	4c 89 c5             	mov    %r8,%rbp
   1b25e:	57                   	push   %rdi
   1b25f:	bf 01 00 00 00       	mov    $0x1,%edi
   1b264:	56                   	push   %rsi
   1b265:	53                   	push   %rbx
   1b266:	50                   	push   %rax
   1b267:	4c 8b 69 c0          	mov    -0x40(%rcx),%r13
   1b26b:	e8 67 a7 fe ff       	call   59d7 <efi_snp_add_claim>
   1b270:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   1b275:	4c 89 e1             	mov    %r12,%rcx
   1b278:	48 89 ee             	mov    %rbp,%rsi
   1b27b:	4c 89 ef             	mov    %r13,%rdi
   1b27e:	4c 8d 05 51 57 00 00 	lea    0x5751(%rip),%r8        # 209d6 <sandev_write>
   1b285:	e8 90 ff ff ff       	call   1b21a <efi_block_rw>
   1b28a:	83 cf ff             	or     $0xffffffff,%edi
   1b28d:	89 c3                	mov    %eax,%ebx
   1b28f:	e8 43 a7 fe ff       	call   59d7 <efi_snp_add_claim>
   1b294:	f7 db                	neg    %ebx
   1b296:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b29b:	89 da                	mov    %ebx,%edx
   1b29d:	48 c1 e1 3f          	shl    $0x3f,%rcx
   1b2a1:	48 89 d0             	mov    %rdx,%rax
   1b2a4:	83 e2 7f             	and    $0x7f,%edx
   1b2a7:	48 c1 e0 38          	shl    $0x38,%rax
   1b2ab:	48 21 c8             	and    %rcx,%rax
   1b2ae:	48 09 d0             	or     %rdx,%rax
   1b2b1:	5a                   	pop    %rdx
   1b2b2:	5b                   	pop    %rbx
   1b2b3:	5e                   	pop    %rsi
   1b2b4:	5f                   	pop    %rdi
   1b2b5:	5d                   	pop    %rbp
   1b2b6:	41 5c                	pop    %r12
   1b2b8:	41 5d                	pop    %r13
   1b2ba:	c3                   	ret    

000000000001b2bb <efi_block_connect.isra.0>:
   1b2bb:	48 83 ec 28          	sub    $0x28,%rsp
   1b2bf:	48 8b 05 d2 ec 00 00 	mov    0xecd2(%rip),%rax        # 29f98 <efi_systab>
   1b2c6:	45 31 c0             	xor    %r8d,%r8d
   1b2c9:	31 d2                	xor    %edx,%edx
   1b2cb:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   1b2cf:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1b2d5:	48 8b 40 60          	mov    0x60(%rax),%rax
   1b2d9:	ff 90 08 01 00 00    	call   *0x108(%rax)
   1b2df:	48 83 c4 20          	add    $0x20,%rsp
   1b2e3:	48 85 c0             	test   %rax,%rax
   1b2e6:	74 00                	je     1b2e8 <efi_block_connect.isra.0+0x2d>
   1b2e8:	58                   	pop    %rax
   1b2e9:	c3                   	ret    

000000000001b2ea <efi_block_io_reset>:
   1b2ea:	f3 0f 1e fa          	endbr64 
   1b2ee:	55                   	push   %rbp
   1b2ef:	57                   	push   %rdi
   1b2f0:	bf 01 00 00 00       	mov    $0x1,%edi
   1b2f5:	56                   	push   %rsi
   1b2f6:	53                   	push   %rbx
   1b2f7:	50                   	push   %rax
   1b2f8:	48 8b 69 c0          	mov    -0x40(%rcx),%rbp
   1b2fc:	e8 d6 a6 fe ff       	call   59d7 <efi_snp_add_claim>
   1b301:	48 89 ef             	mov    %rbp,%rdi
   1b304:	e8 b4 56 00 00       	call   209bd <sandev_reset>
   1b309:	83 cf ff             	or     $0xffffffff,%edi
   1b30c:	89 c3                	mov    %eax,%ebx
   1b30e:	e8 c4 a6 fe ff       	call   59d7 <efi_snp_add_claim>
   1b313:	f7 db                	neg    %ebx
   1b315:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b31a:	89 da                	mov    %ebx,%edx
   1b31c:	48 c1 e1 3f          	shl    $0x3f,%rcx
   1b320:	48 89 d0             	mov    %rdx,%rax
   1b323:	83 e2 7f             	and    $0x7f,%edx
   1b326:	48 c1 e0 38          	shl    $0x38,%rax
   1b32a:	48 21 c8             	and    %rcx,%rax
   1b32d:	48 09 d0             	or     %rdx,%rax
   1b330:	5a                   	pop    %rdx
   1b331:	5b                   	pop    %rbx
   1b332:	5e                   	pop    %rsi
   1b333:	5f                   	pop    %rdi
   1b334:	5d                   	pop    %rbp
   1b335:	c3                   	ret    

000000000001b336 <efi_block_io_read>:
   1b336:	f3 0f 1e fa          	endbr64 
   1b33a:	41 55                	push   %r13
   1b33c:	41 54                	push   %r12
   1b33e:	4d 89 cc             	mov    %r9,%r12
   1b341:	55                   	push   %rbp
   1b342:	4c 89 c5             	mov    %r8,%rbp
   1b345:	57                   	push   %rdi
   1b346:	bf 01 00 00 00       	mov    $0x1,%edi
   1b34b:	56                   	push   %rsi
   1b34c:	53                   	push   %rbx
   1b34d:	50                   	push   %rax
   1b34e:	4c 8b 69 c0          	mov    -0x40(%rcx),%r13
   1b352:	e8 80 a6 fe ff       	call   59d7 <efi_snp_add_claim>
   1b357:	48 8b 54 24 60       	mov    0x60(%rsp),%rdx
   1b35c:	4c 89 e1             	mov    %r12,%rcx
   1b35f:	48 89 ee             	mov    %rbp,%rsi
   1b362:	4c 89 ef             	mov    %r13,%rdi
   1b365:	4c 8d 05 5a 56 00 00 	lea    0x565a(%rip),%r8        # 209c6 <sandev_read>
   1b36c:	e8 a9 fe ff ff       	call   1b21a <efi_block_rw>
   1b371:	83 cf ff             	or     $0xffffffff,%edi
   1b374:	89 c3                	mov    %eax,%ebx
   1b376:	e8 5c a6 fe ff       	call   59d7 <efi_snp_add_claim>
   1b37b:	f7 db                	neg    %ebx
   1b37d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b382:	89 da                	mov    %ebx,%edx
   1b384:	48 c1 e1 3f          	shl    $0x3f,%rcx
   1b388:	48 89 d0             	mov    %rdx,%rax
   1b38b:	83 e2 7f             	and    $0x7f,%edx
   1b38e:	48 c1 e0 38          	shl    $0x38,%rax
   1b392:	48 21 c8             	and    %rcx,%rax
   1b395:	48 09 d0             	or     %rdx,%rax
   1b398:	5a                   	pop    %rdx
   1b399:	5b                   	pop    %rbx
   1b39a:	5e                   	pop    %rsi
   1b39b:	5f                   	pop    %rdi
   1b39c:	5d                   	pop    %rbp
   1b39d:	41 5c                	pop    %r12
   1b39f:	41 5d                	pop    %r13
   1b3a1:	c3                   	ret    

000000000001b3a2 <san_hook>:
   1b3a2:	f3 0f 1e fa          	endbr64 
   1b3a6:	41 57                	push   %r15
   1b3a8:	41 56                	push   %r14
   1b3aa:	41 55                	push   %r13
   1b3ac:	41 54                	push   %r12
   1b3ae:	55                   	push   %rbp
   1b3af:	53                   	push   %rbx
   1b3b0:	48 83 ec 28          	sub    $0x28,%rsp
   1b3b4:	48 8b 05 dd eb 00 00 	mov    0xebdd(%rip),%rax        # 29f98 <efi_systab>
   1b3bb:	89 7c 24 08          	mov    %edi,0x8(%rsp)
   1b3bf:	48 8b 40 60          	mov    0x60(%rax),%rax
   1b3c3:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
   1b3c7:	48 89 04 24          	mov    %rax,(%rsp)
   1b3cb:	85 d2                	test   %edx,%edx
   1b3cd:	75 0b                	jne    1b3da <san_hook+0x38>
   1b3cf:	41 bc 7d df dd c2    	mov    $0xc2dddf7d,%r12d
   1b3d5:	e9 f3 01 00 00       	jmp    1b5cd <san_hook+0x22b>
   1b3da:	49 89 f5             	mov    %rsi,%r13
   1b3dd:	89 d5                	mov    %edx,%ebp
   1b3df:	e8 d7 a5 fe ff       	call   59bb <last_opened_snpdev>
   1b3e4:	48 85 c0             	test   %rax,%rax
   1b3e7:	75 0b                	jne    1b3f4 <san_hook+0x52>
   1b3e9:	41 bc 79 df dd d3    	mov    $0xd3dddf79,%r12d
   1b3ef:	e9 d9 01 00 00       	jmp    1b5cd <san_hook+0x22b>
   1b3f4:	48 8b b8 90 05 00 00 	mov    0x590(%rax),%rdi
   1b3fb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1b400:	e8 b5 b5 fe ff       	call   69ba <efi_devpath_len>
   1b405:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1b409:	31 d2                	xor    %edx,%edx
   1b40b:	31 f6                	xor    %esi,%esi
   1b40d:	48 89 c3             	mov    %rax,%rbx
   1b410:	e8 76 b2 ff ff       	call   1668b <format_uri>
   1b415:	89 ee                	mov    %ebp,%esi
   1b417:	4c 89 ef             	mov    %r13,%rdi
   1b41a:	4c 8d 60 0b          	lea    0xb(%rax),%r12
   1b41e:	48 8d 54 03 7d       	lea    0x7d(%rbx,%rax,1),%rdx
   1b423:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b428:	4d 01 e4             	add    %r12,%r12
   1b42b:	4c 01 e2             	add    %r12,%rdx
   1b42e:	e8 cd 55 00 00       	call   20a00 <alloc_sandev>
   1b433:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   1b438:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1b43d:	48 85 c0             	test   %rax,%rax
   1b440:	49 89 c7             	mov    %rax,%r15
   1b443:	75 0b                	jne    1b450 <san_hook+0xae>
   1b445:	41 bc 77 df dd ce    	mov    $0xcedddf77,%r12d
   1b44b:	e9 7d 01 00 00       	jmp    1b5cd <san_hook+0x22b>
   1b450:	4c 8b b0 c0 00 00 00 	mov    0xc0(%rax),%r14
   1b457:	49 8d 6b 01          	lea    0x1(%r11),%rbp
   1b45b:	48 89 da             	mov    %rbx,%rdx
   1b45e:	49 89 06             	mov    %rax,(%r14)
   1b461:	49 8d 46 10          	lea    0x10(%r14),%rax
   1b465:	49 8d 4e 78          	lea    0x78(%r14),%rcx
   1b469:	49 89 46 48          	mov    %rax,0x48(%r14)
   1b46d:	48 8d 05 76 fe ff ff 	lea    -0x18a(%rip),%rax        # 1b2ea <efi_block_io_reset>
   1b474:	48 8d 3c 29          	lea    (%rcx,%rbp,1),%rdi
   1b478:	49 89 46 50          	mov    %rax,0x50(%r14)
   1b47c:	48 8d 05 b3 fe ff ff 	lea    -0x14d(%rip),%rax        # 1b336 <efi_block_io_read>
   1b483:	49 89 46 58          	mov    %rax,0x58(%r14)
   1b487:	48 8d 05 c1 fd ff ff 	lea    -0x23f(%rip),%rax        # 1b24f <efi_block_io_write>
   1b48e:	49 89 46 60          	mov    %rax,0x60(%r14)
   1b492:	48 8d 05 bc fc ff ff 	lea    -0x344(%rip),%rax        # 1b155 <efi_block_io_flush>
   1b499:	41 c6 46 15 01       	movb   $0x1,0x15(%r14)
   1b49e:	49 8b b1 90 05 00 00 	mov    0x590(%r9),%rsi
   1b4a5:	49 89 7e 70          	mov    %rdi,0x70(%r14)
   1b4a9:	41 c7 46 38 01 00 00 	movl   $0x1,0x38(%r14)
   1b4b0:	00 
   1b4b1:	49 c7 46 40 31 00 02 	movq   $0x20031,0x40(%r14)
   1b4b8:	00 
   1b4b9:	49 89 46 68          	mov    %rax,0x68(%r14)
   1b4bd:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1b4c2:	e8 46 be ff ff       	call   1730d <__memcpy>
   1b4c7:	49 03 5e 70          	add    0x70(%r14),%rbx
   1b4cb:	48 8d 35 8e 91 00 00 	lea    0x918e(%rip),%rsi        # 24660 <ipxe_block_device_path_guid>
   1b4d2:	66 c7 03 01 04       	movw   $0x401,(%rbx)
   1b4d7:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
   1b4db:	66 44 89 63 02       	mov    %r12w,0x2(%rbx)
   1b4e0:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b4e1:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b4e2:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b4e3:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b4e4:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1b4e9:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1b4ed:	48 89 ea             	mov    %rbp,%rdx
   1b4f0:	e8 96 b1 ff ff       	call   1668b <format_uri>
   1b4f5:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1b4fa:	48 8d 7b 14          	lea    0x14(%rbx),%rdi
   1b4fe:	31 c0                	xor    %eax,%eax
   1b500:	4c 01 e3             	add    %r12,%rbx
   1b503:	48 8d 15 17 81 00 00 	lea    0x8117(%rip),%rdx        # 23621 <.LC0>
   1b50a:	48 89 ee             	mov    %rbp,%rsi
   1b50d:	e8 32 b4 fe ff       	call   6944 <efi_snprintf>
   1b512:	c6 43 02 04          	movb   $0x4,0x2(%rbx)
   1b516:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   1b51a:	4c 89 ff             	mov    %r15,%rdi
   1b51d:	66 c7 03 7f ff       	movw   $0xff7f,(%rbx)
   1b522:	8b 74 24 08          	mov    0x8(%rsp),%esi
   1b526:	e8 2a 56 00 00       	call   20b55 <register_sandev>
   1b52b:	41 89 c4             	mov    %eax,%r12d
   1b52e:	85 c0                	test   %eax,%eax
   1b530:	0f 85 8f 00 00 00    	jne    1b5c5 <san_hook+0x223>
   1b536:	41 8b 8f b8 00 00 00 	mov    0xb8(%r15),%ecx
   1b53d:	49 8b 87 a8 00 00 00 	mov    0xa8(%r15),%rax
   1b544:	4d 8d 46 40          	lea    0x40(%r14),%r8
   1b548:	4c 8d 0d 61 94 00 00 	lea    0x9461(%rip),%r9        # 249b0 <efi_device_path_protocol_guid>
   1b54f:	48 8d 15 ba 94 00 00 	lea    0x94ba(%rip),%rdx        # 24a10 <efi_block_io_protocol_guid>
   1b556:	48 d3 e0             	shl    %cl,%rax
   1b559:	41 89 46 1c          	mov    %eax,0x1c(%r14)
   1b55d:	49 8b 87 a0 00 00 00 	mov    0xa0(%r15),%rax
   1b564:	48 d3 e8             	shr    %cl,%rax
   1b567:	49 8d 4e 08          	lea    0x8(%r14),%rcx
   1b56b:	48 ff c8             	dec    %rax
   1b56e:	49 89 46 28          	mov    %rax,0x28(%r14)
   1b572:	6a 00                	push   $0x0
   1b574:	41 ff 76 70          	push   0x70(%r14)
   1b578:	48 83 ec 20          	sub    $0x20,%rsp
   1b57c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1b581:	ff 90 48 01 00 00    	call   *0x148(%rax)
   1b587:	48 83 c4 30          	add    $0x30,%rsp
   1b58b:	48 85 c0             	test   %rax,%rax
   1b58e:	74 22                	je     1b5b2 <san_hook+0x210>
   1b590:	49 89 c4             	mov    %rax,%r12
   1b593:	4c 89 ff             	mov    %r15,%rdi
   1b596:	49 c1 ec 38          	shr    $0x38,%r12
   1b59a:	41 09 c4             	or     %eax,%r12d
   1b59d:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b5a1:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b5a8:	41 f7 dc             	neg    %r12d
   1b5ab:	e8 53 57 00 00       	call   20d03 <unregister_sandev>
   1b5b0:	eb 13                	jmp    1b5c5 <san_hook+0x223>
   1b5b2:	49 8b bf c0 00 00 00 	mov    0xc0(%r15),%rdi
   1b5b9:	e8 fd fc ff ff       	call   1b2bb <efi_block_connect.isra.0>
   1b5be:	44 8b 64 24 08       	mov    0x8(%rsp),%r12d
   1b5c3:	eb 08                	jmp    1b5cd <san_hook+0x22b>
   1b5c5:	4c 89 ff             	mov    %r15,%rdi
   1b5c8:	e8 71 48 ff ff       	call   fe3e <ref_decrement>
   1b5cd:	48 83 c4 28          	add    $0x28,%rsp
   1b5d1:	44 89 e0             	mov    %r12d,%eax
   1b5d4:	5b                   	pop    %rbx
   1b5d5:	5d                   	pop    %rbp
   1b5d6:	41 5c                	pop    %r12
   1b5d8:	41 5d                	pop    %r13
   1b5da:	41 5e                	pop    %r14
   1b5dc:	41 5f                	pop    %r15
   1b5de:	c3                   	ret    

000000000001b5df <san_unhook>:
   1b5df:	f3 0f 1e fa          	endbr64 
   1b5e3:	55                   	push   %rbp
   1b5e4:	53                   	push   %rbx
   1b5e5:	51                   	push   %rcx
   1b5e6:	48 8b 05 ab e9 00 00 	mov    0xe9ab(%rip),%rax        # 29f98 <efi_systab>
   1b5ed:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1b5f1:	e8 42 51 00 00       	call   20738 <sandev_find>
   1b5f6:	48 85 c0             	test   %rax,%rax
   1b5f9:	74 46                	je     1b641 <san_unhook+0x62>
   1b5fb:	48 89 c5             	mov    %rax,%rbp
   1b5fe:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
   1b605:	48 8d 15 04 94 00 00 	lea    0x9404(%rip),%rdx        # 24a10 <efi_block_io_protocol_guid>
   1b60c:	4c 8d 0d 9d 93 00 00 	lea    0x939d(%rip),%r9        # 249b0 <efi_device_path_protocol_guid>
   1b613:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1b617:	6a 00                	push   $0x0
   1b619:	4c 8d 40 40          	lea    0x40(%rax),%r8
   1b61d:	ff 70 70             	push   0x70(%rax)
   1b620:	48 83 ec 20          	sub    $0x20,%rsp
   1b624:	ff 93 50 01 00 00    	call   *0x150(%rbx)
   1b62a:	48 83 c4 30          	add    $0x30,%rsp
   1b62e:	48 89 ef             	mov    %rbp,%rdi
   1b631:	e8 cd 56 00 00       	call   20d03 <unregister_sandev>
   1b636:	5a                   	pop    %rdx
   1b637:	48 89 ef             	mov    %rbp,%rdi
   1b63a:	5b                   	pop    %rbx
   1b63b:	5d                   	pop    %rbp
   1b63c:	e9 fd 47 ff ff       	jmp    fe3e <ref_decrement>
   1b641:	58                   	pop    %rax
   1b642:	5b                   	pop    %rbx
   1b643:	5d                   	pop    %rbp
   1b644:	c3                   	ret    

000000000001b645 <san_describe>:
   1b645:	f3 0f 1e fa          	endbr64 
   1b649:	48 83 3d 67 e8 00 00 	cmpq   $0x0,0xe867(%rip)        # 29eb8 <acpi>
   1b650:	00 
   1b651:	74 68                	je     1b6bb <san_describe+0x76>
   1b653:	41 54                	push   %r12
   1b655:	4c 8d 25 64 c2 00 00 	lea    0xc264(%rip),%r12        # 278c0 <efi_acpi_tables>
   1b65c:	55                   	push   %rbp
   1b65d:	48 8b 2d 5c c2 00 00 	mov    0xc25c(%rip),%rbp        # 278c0 <efi_acpi_tables>
   1b664:	53                   	push   %rbx
   1b665:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
   1b669:	4c 39 e5             	cmp    %r12,%rbp
   1b66c:	74 3d                	je     1b6ab <san_describe+0x66>
   1b66e:	48 8b 05 43 e8 00 00 	mov    0xe843(%rip),%rax        # 29eb8 <acpi>
   1b675:	48 83 ec 20          	sub    $0x20,%rsp
   1b679:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1b67d:	48 89 c1             	mov    %rax,%rcx
   1b680:	ff 50 08             	call   *0x8(%rax)
   1b683:	48 83 c4 20          	add    $0x20,%rsp
   1b687:	48 85 c0             	test   %rax,%rax
   1b68a:	74 00                	je     1b68c <san_describe+0x47>
   1b68c:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1b690:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1b694:	48 89 ef             	mov    %rbp,%rdi
   1b697:	48 89 dd             	mov    %rbx,%rbp
   1b69a:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1b69e:	48 89 10             	mov    %rdx,(%rax)
   1b6a1:	e8 a9 0f ff ff       	call   c64f <free>
   1b6a6:	48 8b 1b             	mov    (%rbx),%rbx
   1b6a9:	eb be                	jmp    1b669 <san_describe+0x24>
   1b6ab:	5b                   	pop    %rbx
   1b6ac:	48 8d 3d a9 fa ff ff 	lea    -0x557(%rip),%rdi        # 1b15c <efi_block_install>
   1b6b3:	5d                   	pop    %rbp
   1b6b4:	41 5c                	pop    %r12
   1b6b6:	e9 1e c4 ff ff       	jmp    17ad9 <acpi_install>
   1b6bb:	b8 7d df dd c3       	mov    $0xc3dddf7d,%eax
   1b6c0:	c3                   	ret    

000000000001b6c1 <san_boot>:
   1b6c1:	f3 0f 1e fa          	endbr64 
   1b6c5:	41 57                	push   %r15
   1b6c7:	41 56                	push   %r14
   1b6c9:	41 55                	push   %r13
   1b6cb:	49 89 f5             	mov    %rsi,%r13
   1b6ce:	41 54                	push   %r12
   1b6d0:	55                   	push   %rbp
   1b6d1:	53                   	push   %rbx
   1b6d2:	48 83 ec 58          	sub    $0x58,%rsp
   1b6d6:	48 8b 05 93 e8 00 00 	mov    0xe893(%rip),%rax        # 29f70 <__stack_chk_guard>
   1b6dd:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1b6e2:	48 8b 05 af e8 00 00 	mov    0xe8af(%rip),%rax        # 29f98 <efi_systab>
   1b6e9:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1b6f0:	00 00 
   1b6f2:	4c 8b 78 60          	mov    0x60(%rax),%r15
   1b6f6:	e8 3d 50 00 00       	call   20738 <sandev_find>
   1b6fb:	48 85 c0             	test   %rax,%rax
   1b6fe:	75 0b                	jne    1b70b <san_boot+0x4a>
   1b700:	41 bc 79 df dd d3    	mov    $0xd3dddf79,%r12d
   1b706:	e9 bf 02 00 00       	jmp    1b9ca <san_boot+0x309>
   1b70b:	49 89 c6             	mov    %rax,%r14
   1b70e:	83 cf ff             	or     $0xffffffff,%edi
   1b711:	e8 c1 a2 fe ff       	call   59d7 <efi_snp_add_claim>
   1b716:	49 8b be c0 00 00 00 	mov    0xc0(%r14),%rdi
   1b71d:	e8 99 fb ff ff       	call   1b2bb <efi_block_connect.isra.0>
   1b722:	45 31 c0             	xor    %r8d,%r8d
   1b725:	b9 02 00 00 00       	mov    $0x2,%ecx
   1b72a:	48 8d 15 ef 90 00 00 	lea    0x90ef(%rip),%rdx        # 24820 <efi_simple_file_system_protocol_guid>
   1b731:	50                   	push   %rax
   1b732:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1b737:	50                   	push   %rax
   1b738:	48 83 ec 20          	sub    $0x20,%rsp
   1b73c:	4c 8d 4c 24 68       	lea    0x68(%rsp),%r9
   1b741:	41 ff 97 38 01 00 00 	call   *0x138(%r15)
   1b748:	48 83 c4 30          	add    $0x30,%rsp
   1b74c:	48 85 c0             	test   %rax,%rax
   1b74f:	74 1d                	je     1b76e <san_boot+0xad>
   1b751:	49 89 c4             	mov    %rax,%r12
   1b754:	49 c1 ec 38          	shr    $0x38,%r12
   1b758:	41 09 c4             	or     %eax,%r12d
   1b75b:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b75f:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b766:	41 f7 dc             	neg    %r12d
   1b769:	e9 52 02 00 00       	jmp    1b9c0 <san_boot+0x2ff>
   1b76e:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
   1b775:	00 
   1b776:	41 bc 72 df dd d2    	mov    $0xd2dddf72,%r12d
   1b77c:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
   1b780:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1b785:	48 3b 44 24 38       	cmp    0x38(%rsp),%rax
   1b78a:	0f 83 1f 02 00 00    	jae    1b9af <san_boot+0x2ee>
   1b790:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
   1b794:	48 8b 05 fd e7 00 00 	mov    0xe7fd(%rip),%rax        # 29f98 <efi_systab>
   1b79b:	48 8d 15 0e 92 00 00 	lea    0x920e(%rip),%rdx        # 249b0 <efi_device_path_protocol_guid>
   1b7a2:	49 8b 9e c0 00 00 00 	mov    0xc0(%r14),%rbx
   1b7a9:	4c 8b 0d d8 e7 00 00 	mov    0xe7d8(%rip),%r9        # 29f88 <efi_image_handle>
   1b7b0:	48 8b 40 60          	mov    0x60(%rax),%rax
   1b7b4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1b7b9:	6a 02                	push   $0x2
   1b7bb:	51                   	push   %rcx
   1b7bc:	48 83 ec 20          	sub    $0x20,%rsp
   1b7c0:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1b7c5:	4c 8d 44 24 70       	lea    0x70(%rsp),%r8
   1b7ca:	ff 90 18 01 00 00    	call   *0x118(%rax)
   1b7d0:	48 83 c4 30          	add    $0x30,%rsp
   1b7d4:	48 85 c0             	test   %rax,%rax
   1b7d7:	74 1d                	je     1b7f6 <san_boot+0x135>
   1b7d9:	49 89 c4             	mov    %rax,%r12
   1b7dc:	49 c1 ec 38          	shr    $0x38,%r12
   1b7e0:	41 09 c4             	or     %eax,%r12d
   1b7e3:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b7e7:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b7ee:	41 f7 dc             	neg    %r12d
   1b7f1:	e9 66 01 00 00       	jmp    1b95c <san_boot+0x29b>
   1b7f6:	48 8b 7b 70          	mov    0x70(%rbx),%rdi
   1b7fa:	e8 bb b1 fe ff       	call   69ba <efi_devpath_len>
   1b7ff:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   1b804:	48 8b 73 70          	mov    0x70(%rbx),%rsi
   1b808:	48 89 c2             	mov    %rax,%rdx
   1b80b:	48 89 ef             	mov    %rbp,%rdi
   1b80e:	e8 41 80 ff ff       	call   13854 <memcmp>
   1b813:	41 89 c4             	mov    %eax,%r12d
   1b816:	85 c0                	test   %eax,%eax
   1b818:	74 0b                	je     1b825 <san_boot+0x164>
   1b81a:	41 bc 7d df dd c2    	mov    $0xc2dddf7d,%r12d
   1b820:	e9 37 01 00 00       	jmp    1b95c <san_boot+0x29b>
   1b825:	48 89 ef             	mov    %rbp,%rdi
   1b828:	e8 77 b1 fe ff       	call   69a4 <efi_devpath_end>
   1b82d:	48 2b 44 24 40       	sub    0x40(%rsp),%rax
   1b832:	48 c7 44 24 08 30 00 	movq   $0x30,0x8(%rsp)
   1b839:	00 00 
   1b83b:	48 89 c3             	mov    %rax,%rbx
   1b83e:	4d 85 ed             	test   %r13,%r13
   1b841:	74 14                	je     1b857 <san_boot+0x196>
   1b843:	4c 89 ef             	mov    %r13,%rdi
   1b846:	e8 ef 80 ff ff       	call   1393a <strlen>
   1b84b:	48 83 c0 03          	add    $0x3,%rax
   1b84f:	48 01 c0             	add    %rax,%rax
   1b852:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b857:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1b85c:	48 8d 7c 03 04       	lea    0x4(%rbx,%rax,1),%rdi
   1b861:	e8 f4 0d ff ff       	call   c65a <zalloc>
   1b866:	48 89 c5             	mov    %rax,%rbp
   1b869:	48 85 c0             	test   %rax,%rax
   1b86c:	75 0b                	jne    1b879 <san_boot+0x1b8>
   1b86e:	41 bc 77 df dd ce    	mov    $0xcedddf77,%r12d
   1b874:	e9 e3 00 00 00       	jmp    1b95c <san_boot+0x29b>
   1b879:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   1b87e:	48 89 da             	mov    %rbx,%rdx
   1b881:	48 89 c7             	mov    %rax,%rdi
   1b884:	48 01 eb             	add    %rbp,%rbx
   1b887:	e8 81 ba ff ff       	call   1730d <__memcpy>
   1b88c:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1b890:	66 c7 03 04 04       	movw   $0x404,(%rbx)
   1b895:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
   1b899:	66 89 43 02          	mov    %ax,0x2(%rbx)
   1b89d:	4d 85 ed             	test   %r13,%r13
   1b8a0:	74 17                	je     1b8b9 <san_boot+0x1f8>
   1b8a2:	4c 89 e9             	mov    %r13,%rcx
   1b8a5:	48 8d 15 75 7d 00 00 	lea    0x7d75(%rip),%rdx        # 23621 <.LC0>
   1b8ac:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1b8b0:	31 c0                	xor    %eax,%eax
   1b8b2:	e8 8d b0 fe ff       	call   6944 <efi_snprintf>
   1b8b7:	eb 11                	jmp    1b8ca <san_boot+0x209>
   1b8b9:	ba 2c 00 00 00       	mov    $0x2c,%edx
   1b8be:	48 8d 35 bb 8d 00 00 	lea    0x8dbb(%rip),%rsi        # 24680 <efi_block_boot_filename>
   1b8c5:	e8 43 ba ff ff       	call   1730d <__memcpy>
   1b8ca:	48 03 5c 24 08       	add    0x8(%rsp),%rbx
   1b8cf:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
   1b8d4:	45 31 c9             	xor    %r9d,%r9d
   1b8d7:	49 89 e8             	mov    %rbp,%r8
   1b8da:	66 c7 03 7f ff       	movw   $0xff7f,(%rbx)
   1b8df:	48 8b 15 a2 e6 00 00 	mov    0xe6a2(%rip),%rdx        # 29f88 <efi_image_handle>
   1b8e6:	31 c9                	xor    %ecx,%ecx
   1b8e8:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1b8ef:	00 00 
   1b8f1:	c6 43 02 04          	movb   $0x4,0x2(%rbx)
   1b8f5:	50                   	push   %rax
   1b8f6:	6a 00                	push   $0x0
   1b8f8:	48 83 ec 20          	sub    $0x20,%rsp
   1b8fc:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1b901:	ff 90 c8 00 00 00    	call   *0xc8(%rax)
   1b907:	48 83 c4 30          	add    $0x30,%rsp
   1b90b:	48 85 c0             	test   %rax,%rax
   1b90e:	74 3f                	je     1b94f <san_boot+0x28e>
   1b910:	48 be 1a 00 00 00 00 	movabs $0x800000000000001a,%rsi
   1b917:	00 00 80 
   1b91a:	49 89 c4             	mov    %rax,%r12
   1b91d:	49 c1 ec 38          	shr    $0x38,%r12
   1b921:	41 09 c4             	or     %eax,%r12d
   1b924:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b928:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b92f:	41 f7 dc             	neg    %r12d
   1b932:	48 39 f0             	cmp    %rsi,%rax
   1b935:	75 18                	jne    1b94f <san_boot+0x28e>
   1b937:	48 83 ec 20          	sub    $0x20,%rsp
   1b93b:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1b940:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1b945:	ff 90 e0 00 00 00    	call   *0xe0(%rax)
   1b94b:	48 83 c4 20          	add    $0x20,%rsp
   1b94f:	48 89 ef             	mov    %rbp,%rdi
   1b952:	e8 f8 0c ff ff       	call   c64f <free>
   1b957:	45 85 e4             	test   %r12d,%r12d
   1b95a:	74 09                	je     1b965 <san_boot+0x2a4>
   1b95c:	ff 44 24 1c          	incl   0x1c(%rsp)
   1b960:	e9 17 fe ff ff       	jmp    1b77c <san_boot+0xbb>
   1b965:	48 83 ec 20          	sub    $0x20,%rsp
   1b969:	45 31 c0             	xor    %r8d,%r8d
   1b96c:	31 d2                	xor    %edx,%edx
   1b96e:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1b973:	41 ff 97 d0 00 00 00 	call   *0xd0(%r15)
   1b97a:	48 83 c4 20          	add    $0x20,%rsp
   1b97e:	48 85 c0             	test   %rax,%rax
   1b981:	74 18                	je     1b99b <san_boot+0x2da>
   1b983:	49 89 c4             	mov    %rax,%r12
   1b986:	49 c1 ec 38          	shr    $0x38,%r12
   1b98a:	41 09 c4             	or     %eax,%r12d
   1b98d:	45 0f b6 e4          	movzbl %r12b,%r12d
   1b991:	41 81 cc 00 20 22 7f 	or     $0x7f222000,%r12d
   1b998:	41 f7 dc             	neg    %r12d
   1b99b:	48 83 ec 20          	sub    $0x20,%rsp
   1b99f:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1b9a4:	41 ff 97 e0 00 00 00 	call   *0xe0(%r15)
   1b9ab:	48 83 c4 20          	add    $0x20,%rsp
   1b9af:	48 83 ec 20          	sub    $0x20,%rsp
   1b9b3:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1b9b8:	41 ff 57 48          	call   *0x48(%r15)
   1b9bc:	48 83 c4 20          	add    $0x20,%rsp
   1b9c0:	bf 01 00 00 00       	mov    $0x1,%edi
   1b9c5:	e8 0d a0 fe ff       	call   59d7 <efi_snp_add_claim>
   1b9ca:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1b9cf:	48 2b 05 9a e5 00 00 	sub    0xe59a(%rip),%rax        # 29f70 <__stack_chk_guard>
   1b9d6:	74 05                	je     1b9dd <san_boot+0x31c>
   1b9d8:	e8 83 70 fe ff       	call   2a60 <__stack_chk_fail>
   1b9dd:	48 83 c4 58          	add    $0x58,%rsp
   1b9e1:	44 89 e0             	mov    %r12d,%eax
   1b9e4:	5b                   	pop    %rbx
   1b9e5:	5d                   	pop    %rbp
   1b9e6:	41 5c                	pop    %r12
   1b9e8:	41 5d                	pop    %r13
   1b9ea:	41 5e                	pop    %r14
   1b9ec:	41 5f                	pop    %r15
   1b9ee:	c3                   	ret    

000000000001b9ef <efi_download_poll>:
   1b9ef:	f3 0f 1e fa          	endbr64 
   1b9f3:	57                   	push   %rdi
   1b9f4:	56                   	push   %rsi
   1b9f5:	50                   	push   %rax
   1b9f6:	e8 b1 3f ff ff       	call   f9ac <step>
   1b9fb:	5a                   	pop    %rdx
   1b9fc:	31 c0                	xor    %eax,%eax
   1b9fe:	5e                   	pop    %rsi
   1b9ff:	5f                   	pop    %rdi
   1ba00:	c3                   	ret    

000000000001ba01 <efi_download_deliver_iob>:
   1ba01:	f3 0f 1e fa          	endbr64 
   1ba05:	41 54                	push   %r12
   1ba07:	49 89 fc             	mov    %rdi,%r12
   1ba0a:	55                   	push   %rbp
   1ba0b:	48 89 f5             	mov    %rsi,%rbp
   1ba0e:	53                   	push   %rbx
   1ba0f:	4c 8b 56 18          	mov    0x18(%rsi),%r10
   1ba13:	48 8b 5e 20          	mov    0x20(%rsi),%rbx
   1ba17:	4c 29 d3             	sub    %r10,%rbx
   1ba1a:	f6 02 01             	testb  $0x1,(%rdx)
   1ba1d:	74 08                	je     1ba27 <efi_download_deliver_iob+0x26>
   1ba1f:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   1ba26:	00 
   1ba27:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
   1ba2b:	4d 03 4c 24 20       	add    0x20(%r12),%r9
   1ba30:	48 83 ec 20          	sub    $0x20,%rsp
   1ba34:	49 89 d8             	mov    %rbx,%r8
   1ba37:	4d 89 4c 24 20       	mov    %r9,0x20(%r12)
   1ba3c:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
   1ba41:	4c 89 d2             	mov    %r10,%rdx
   1ba44:	41 ff 54 24 28       	call   *0x28(%r12)
   1ba49:	48 83 c4 20          	add    $0x20,%rsp
   1ba4d:	48 85 c0             	test   %rax,%rax
   1ba50:	74 1a                	je     1ba6c <efi_download_deliver_iob+0x6b>
   1ba52:	49 89 c4             	mov    %rax,%r12
   1ba55:	49 c1 ec 38          	shr    $0x38,%r12
   1ba59:	41 09 c4             	or     %eax,%r12d
   1ba5c:	45 0f b6 e4          	movzbl %r12b,%r12d
   1ba60:	41 81 cc 00 e0 36 7f 	or     $0x7f36e000,%r12d
   1ba67:	41 f7 dc             	neg    %r12d
   1ba6a:	eb 08                	jmp    1ba74 <efi_download_deliver_iob+0x73>
   1ba6c:	49 01 5c 24 20       	add    %rbx,0x20(%r12)
   1ba71:	45 31 e4             	xor    %r12d,%r12d
   1ba74:	48 89 ef             	mov    %rbp,%rdi
   1ba77:	e8 1a e2 fe ff       	call   9c96 <free_iob>
   1ba7c:	44 89 e0             	mov    %r12d,%eax
   1ba7f:	5b                   	pop    %rbx
   1ba80:	5d                   	pop    %rbp
   1ba81:	41 5c                	pop    %r12
   1ba83:	c3                   	ret    

000000000001ba84 <efi_download_close>:
   1ba84:	f3 0f 1e fa          	endbr64 
   1ba88:	89 f0                	mov    %esi,%eax
   1ba8a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1ba8f:	48 83 ec 38          	sub    $0x38,%rsp
   1ba93:	f7 d8                	neg    %eax
   1ba95:	48 c1 e1 3f          	shl    $0x3f,%rcx
   1ba99:	89 74 24 2c          	mov    %esi,0x2c(%rsp)
   1ba9d:	48 89 c2             	mov    %rax,%rdx
   1baa0:	83 e0 7f             	and    $0x7f,%eax
   1baa3:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   1baa8:	48 c1 e2 38          	shl    $0x38,%rdx
   1baac:	48 21 ca             	and    %rcx,%rdx
   1baaf:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   1bab3:	48 09 c2             	or     %rax,%rdx
   1bab6:	ff 57 30             	call   *0x30(%rdi)
   1bab9:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   1babe:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
   1bac2:	48 83 c4 20          	add    $0x20,%rsp
   1bac6:	e8 04 de fe ff       	call   98cf <intf_shutdown>
   1bacb:	83 cf ff             	or     $0xffffffff,%edi
   1bace:	48 83 c4 18          	add    $0x18,%rsp
   1bad2:	e9 00 9f fe ff       	jmp    59d7 <efi_snp_add_claim>

000000000001bad7 <efi_download_abort>:
   1bad7:	f3 0f 1e fa          	endbr64 
   1badb:	57                   	push   %rdi
   1badc:	48 89 d7             	mov    %rdx,%rdi
   1badf:	56                   	push   %rsi
   1bae0:	50                   	push   %rax
   1bae1:	4c 89 c6             	mov    %r8,%rsi
   1bae4:	48 c1 ee 38          	shr    $0x38,%rsi
   1bae8:	44 09 c6             	or     %r8d,%esi
   1baeb:	40 0f b6 f6          	movzbl %sil,%esi
   1baef:	81 ce 00 e0 36 7f    	or     $0x7f36e000,%esi
   1baf5:	f7 de                	neg    %esi
   1baf7:	e8 88 ff ff ff       	call   1ba84 <efi_download_close>
   1bafc:	5a                   	pop    %rdx
   1bafd:	31 c0                	xor    %eax,%eax
   1baff:	5e                   	pop    %rsi
   1bb00:	5f                   	pop    %rdi
   1bb01:	c3                   	ret    

000000000001bb02 <efi_download_start>:
   1bb02:	f3 0f 1e fa          	endbr64 
   1bb06:	41 55                	push   %r13
   1bb08:	4d 89 c5             	mov    %r8,%r13
   1bb0b:	41 54                	push   %r12
   1bb0d:	4d 89 cc             	mov    %r9,%r12
   1bb10:	55                   	push   %rbp
   1bb11:	57                   	push   %rdi
   1bb12:	bf 01 00 00 00       	mov    $0x1,%edi
   1bb17:	56                   	push   %rsi
   1bb18:	53                   	push   %rbx
   1bb19:	51                   	push   %rcx
   1bb1a:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   1bb1f:	e8 b3 9e fe ff       	call   59d7 <efi_snp_add_claim>
   1bb24:	bf 40 00 00 00       	mov    $0x40,%edi
   1bb29:	e8 13 0b ff ff       	call   c641 <malloc>
   1bb2e:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   1bb33:	48 85 c0             	test   %rax,%rax
   1bb36:	75 17                	jne    1bb4f <efi_download_start+0x4d>
   1bb38:	83 cf ff             	or     $0xffffffff,%edi
   1bb3b:	e8 97 9e fe ff       	call   59d7 <efi_snp_add_claim>
   1bb40:	48 b8 09 00 00 00 00 	movabs $0x8000000000000009,%rax
   1bb47:	00 00 80 
   1bb4a:	e9 8a 00 00 00       	jmp    1bbd9 <efi_download_start+0xd7>
   1bb4f:	48 89 c5             	mov    %rax,%rbp
   1bb52:	48 8d 05 87 a8 00 00 	lea    0xa887(%rip),%rax        # 263e0 <null_intf>
   1bb59:	be 02 00 00 00       	mov    $0x2,%esi
   1bb5e:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1bb62:	48 8d 05 97 bd 00 00 	lea    0xbd97(%rip),%rax        # 27900 <efi_download_file_xfer_desc>
   1bb69:	48 89 ef             	mov    %rbp,%rdi
   1bb6c:	48 89 45 10          	mov    %rax,0x10(%rbp)
   1bb70:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1bb74:	31 c0                	xor    %eax,%eax
   1bb76:	48 c7 45 08 00 00 00 	movq   $0x0,0x8(%rbp)
   1bb7d:	00 
   1bb7e:	e8 4c 30 ff ff       	call   ebcf <xfer_open>
   1bb83:	89 c3                	mov    %eax,%ebx
   1bb85:	85 c0                	test   %eax,%eax
   1bb87:	74 2d                	je     1bbb6 <efi_download_start+0xb4>
   1bb89:	48 89 ef             	mov    %rbp,%rdi
   1bb8c:	f7 db                	neg    %ebx
   1bb8e:	e8 bc 0a ff ff       	call   c64f <free>
   1bb93:	83 cf ff             	or     $0xffffffff,%edi
   1bb96:	e8 3c 9e fe ff       	call   59d7 <efi_snp_add_claim>
   1bb9b:	48 89 d8             	mov    %rbx,%rax
   1bb9e:	ba 01 00 00 00       	mov    $0x1,%edx
   1bba3:	83 e3 7f             	and    $0x7f,%ebx
   1bba6:	48 c1 e0 38          	shl    $0x38,%rax
   1bbaa:	48 c1 e2 3f          	shl    $0x3f,%rdx
   1bbae:	48 21 d0             	and    %rdx,%rax
   1bbb1:	48 09 d8             	or     %rbx,%rax
   1bbb4:	eb 23                	jmp    1bbd9 <efi_download_start+0xd7>
   1bbb6:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   1bbbb:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
   1bbc2:	00 
   1bbc3:	4c 89 6d 28          	mov    %r13,0x28(%rbp)
   1bbc7:	48 89 45 38          	mov    %rax,0x38(%rbp)
   1bbcb:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   1bbd0:	4c 89 65 30          	mov    %r12,0x30(%rbp)
   1bbd4:	48 89 28             	mov    %rbp,(%rax)
   1bbd7:	31 c0                	xor    %eax,%eax
   1bbd9:	5a                   	pop    %rdx
   1bbda:	5b                   	pop    %rbx
   1bbdb:	5e                   	pop    %rsi
   1bbdc:	5f                   	pop    %rdi
   1bbdd:	5d                   	pop    %rbp
   1bbde:	41 5c                	pop    %r12
   1bbe0:	41 5d                	pop    %r13
   1bbe2:	c3                   	ret    

000000000001bbe3 <efi_download_install>:
   1bbe3:	f3 0f 1e fa          	endbr64 
   1bbe7:	48 83 ec 18          	sub    $0x18,%rsp
   1bbeb:	48 8b 05 a6 e3 00 00 	mov    0xe3a6(%rip),%rax        # 29f98 <efi_systab>
   1bbf2:	48 8d 15 b7 8a 00 00 	lea    0x8ab7(%rip),%rdx        # 246b0 <ipxe_download_protocol_guid>
   1bbf9:	45 31 c9             	xor    %r9d,%r9d
   1bbfc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1bc01:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   1bc06:	4c 8d 05 d3 bc 00 00 	lea    0xbcd3(%rip),%r8        # 278e0 <ipxe_download_protocol_interface>
   1bc0d:	48 83 ec 20          	sub    $0x20,%rsp
   1bc11:	48 8b 40 60          	mov    0x60(%rax),%rax
   1bc15:	ff 90 48 01 00 00    	call   *0x148(%rax)
   1bc1b:	48 83 c4 20          	add    $0x20,%rsp
   1bc1f:	48 89 c2             	mov    %rax,%rdx
   1bc22:	31 c0                	xor    %eax,%eax
   1bc24:	48 85 d2             	test   %rdx,%rdx
   1bc27:	74 13                	je     1bc3c <efi_download_install+0x59>
   1bc29:	48 89 d0             	mov    %rdx,%rax
   1bc2c:	48 c1 e8 38          	shr    $0x38,%rax
   1bc30:	09 d0                	or     %edx,%eax
   1bc32:	0f b6 c0             	movzbl %al,%eax
   1bc35:	0d 00 e0 36 7f       	or     $0x7f36e000,%eax
   1bc3a:	f7 d8                	neg    %eax
   1bc3c:	48 83 c4 18          	add    $0x18,%rsp
   1bc40:	c3                   	ret    

000000000001bc41 <efi_download_uninstall>:
   1bc41:	f3 0f 1e fa          	endbr64 
   1bc45:	48 83 ec 28          	sub    $0x28,%rsp
   1bc49:	48 89 f9             	mov    %rdi,%rcx
   1bc4c:	48 8b 05 45 e3 00 00 	mov    0xe345(%rip),%rax        # 29f98 <efi_systab>
   1bc53:	45 31 c9             	xor    %r9d,%r9d
   1bc56:	4c 8d 05 83 bc 00 00 	lea    0xbc83(%rip),%r8        # 278e0 <ipxe_download_protocol_interface>
   1bc5d:	48 8d 15 4c 8a 00 00 	lea    0x8a4c(%rip),%rdx        # 246b0 <ipxe_download_protocol_guid>
   1bc64:	48 8b 40 60          	mov    0x60(%rax),%rax
   1bc68:	ff 90 50 01 00 00    	call   *0x150(%rax)
   1bc6e:	48 83 c4 28          	add    $0x28,%rsp
   1bc72:	c3                   	ret    

000000000001bc73 <efidev_find>:
   1bc73:	48 8b 05 e6 bc 00 00 	mov    0xbce6(%rip),%rax        # 27960 <efi_devices>
   1bc7a:	48 8d 15 df bc 00 00 	lea    0xbcdf(%rip),%rdx        # 27960 <efi_devices>
   1bc81:	48 83 e8 58          	sub    $0x58,%rax
   1bc85:	48 8d 48 58          	lea    0x58(%rax),%rcx
   1bc89:	48 39 d1             	cmp    %rdx,%rcx
   1bc8c:	74 13                	je     1bca1 <efidev_find+0x2e>
   1bc8e:	48 39 b8 80 00 00 00 	cmp    %rdi,0x80(%rax)
   1bc95:	74 0c                	je     1bca3 <efidev_find+0x30>
   1bc97:	48 8b 40 58          	mov    0x58(%rax),%rax
   1bc9b:	48 83 e8 58          	sub    $0x58,%rax
   1bc9f:	eb e4                	jmp    1bc85 <efidev_find+0x12>
   1bca1:	31 c0                	xor    %eax,%eax
   1bca3:	c3                   	ret    

000000000001bca4 <efi_driver_name>:
   1bca4:	f3 0f 1e fa          	endbr64 
   1bca8:	66 83 3d 1a 66 00 00 	cmpw   $0x0,0x661a(%rip)        # 222ca <product_wname>
   1bcaf:	00 
   1bcb0:	48 8d 15 e9 65 00 00 	lea    0x65e9(%rip),%rdx        # 222a0 <build_wname>
   1bcb7:	48 8d 05 0c 66 00 00 	lea    0x660c(%rip),%rax        # 222ca <product_wname>
   1bcbe:	48 0f 44 c2          	cmove  %rdx,%rax
   1bcc2:	49 89 00             	mov    %rax,(%r8)
   1bcc5:	31 c0                	xor    %eax,%eax
   1bcc7:	c3                   	ret    

000000000001bcc8 <efi_driver_controller_name>:
   1bcc8:	f3 0f 1e fa          	endbr64 
   1bccc:	41 54                	push   %r12
   1bcce:	57                   	push   %rdi
   1bccf:	56                   	push   %rsi
   1bcd0:	53                   	push   %rbx
   1bcd1:	48 83 ec 48          	sub    $0x48,%rsp
   1bcd5:	48 8b 05 94 e2 00 00 	mov    0xe294(%rip),%rax        # 29f70 <__stack_chk_guard>
   1bcdc:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1bce1:	48 8b 05 b0 e2 00 00 	mov    0xe2b0(%rip),%rax        # 29f98 <efi_systab>
   1bce8:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   1bcef:	00 
   1bcf0:	48 8b 40 60          	mov    0x60(%rax),%rax
   1bcf4:	4d 85 c0             	test   %r8,%r8
   1bcf7:	75 0c                	jne    1bd05 <efi_driver_controller_name+0x3d>
   1bcf9:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
   1bd00:	00 00 80 
   1bd03:	eb 50                	jmp    1bd55 <efi_driver_controller_name+0x8d>
   1bd05:	4c 89 c3             	mov    %r8,%rbx
   1bd08:	49 89 d4             	mov    %rdx,%r12
   1bd0b:	4c 89 ce             	mov    %r9,%rsi
   1bd0e:	c7 44 24 28 02 00 00 	movl   $0x2,0x28(%rsp)
   1bd15:	00 
   1bd16:	45 31 c9             	xor    %r9d,%r9d
   1bd19:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   1bd1e:	48 89 d9             	mov    %rbx,%rcx
   1bd21:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1bd28:	00 00 
   1bd2a:	48 8d 15 9f 8c 00 00 	lea    0x8c9f(%rip),%rdx        # 249d0 <efi_component_name2_protocol_guid>
   1bd31:	ff 90 18 01 00 00    	call   *0x118(%rax)
   1bd37:	48 85 c0             	test   %rax,%rax
   1bd3a:	75 bd                	jne    1bcf9 <efi_driver_controller_name+0x31>
   1bd3c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1bd41:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   1bd46:	49 89 f1             	mov    %rsi,%r9
   1bd49:	49 89 d8             	mov    %rbx,%r8
   1bd4c:	4c 89 e2             	mov    %r12,%rdx
   1bd4f:	48 89 c1             	mov    %rax,%rcx
   1bd52:	ff 50 08             	call   *0x8(%rax)
   1bd55:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   1bd5a:	48 2b 15 0f e2 00 00 	sub    0xe20f(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1bd61:	74 05                	je     1bd68 <efi_driver_controller_name+0xa0>
   1bd63:	e8 f8 6c fe ff       	call   2a60 <__stack_chk_fail>
   1bd68:	48 83 c4 48          	add    $0x48,%rsp
   1bd6c:	5b                   	pop    %rbx
   1bd6d:	5e                   	pop    %rsi
   1bd6e:	5f                   	pop    %rdi
   1bd6f:	41 5c                	pop    %r12
   1bd71:	c3                   	ret    

000000000001bd72 <efi_driver_disconnect>:
   1bd72:	f3 0f 1e fa          	endbr64 
   1bd76:	48 83 ec 28          	sub    $0x28,%rsp
   1bd7a:	48 8b 05 17 e2 00 00 	mov    0xe217(%rip),%rax        # 29f98 <efi_systab>
   1bd81:	48 89 f9             	mov    %rdi,%rcx
   1bd84:	c7 05 36 e1 00 00 01 	movl   $0x1,0xe136(%rip)        # 29ec4 <efi_driver_disconnecting>
   1bd8b:	00 00 00 
   1bd8e:	48 8b 15 13 bc 00 00 	mov    0xbc13(%rip),%rdx        # 279a8 <efi_driver_binding+0x28>
   1bd95:	45 31 c0             	xor    %r8d,%r8d
   1bd98:	48 8b 40 60          	mov    0x60(%rax),%rax
   1bd9c:	ff 90 10 01 00 00    	call   *0x110(%rax)
   1bda2:	31 c0                	xor    %eax,%eax
   1bda4:	c7 05 16 e1 00 00 00 	movl   $0x0,0xe116(%rip)        # 29ec4 <efi_driver_disconnecting>
   1bdab:	00 00 00 
   1bdae:	48 83 c4 28          	add    $0x28,%rsp
   1bdb2:	c3                   	ret    

000000000001bdb3 <efi_driver_handles>:
   1bdb3:	41 54                	push   %r12
   1bdb5:	45 31 c0             	xor    %r8d,%r8d
   1bdb8:	31 d2                	xor    %edx,%edx
   1bdba:	31 c9                	xor    %ecx,%ecx
   1bdbc:	55                   	push   %rbp
   1bdbd:	48 89 fd             	mov    %rdi,%rbp
   1bdc0:	53                   	push   %rbx
   1bdc1:	48 83 ec 28          	sub    $0x28,%rsp
   1bdc5:	48 8b 05 a4 e1 00 00 	mov    0xe1a4(%rip),%rax        # 29f70 <__stack_chk_guard>
   1bdcc:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1bdd1:	48 8b 05 c0 e1 00 00 	mov    0xe1c0(%rip),%rax        # 29f98 <efi_systab>
   1bdd8:	4c 8b 60 60          	mov    0x60(%rax),%r12
   1bddc:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1bde1:	50                   	push   %rax
   1bde2:	48 83 ec 20          	sub    $0x20,%rsp
   1bde6:	4c 8d 4c 24 40       	lea    0x40(%rsp),%r9
   1bdeb:	41 ff 94 24 38 01 00 	call   *0x138(%r12)
   1bdf2:	00 
   1bdf3:	48 83 c4 30          	add    $0x30,%rsp
   1bdf7:	48 89 c3             	mov    %rax,%rbx
   1bdfa:	48 85 c0             	test   %rax,%rax
   1bdfd:	74 12                	je     1be11 <efi_driver_handles+0x5e>
   1bdff:	48 c1 e8 38          	shr    $0x38,%rax
   1be03:	09 d8                	or     %ebx,%eax
   1be05:	0f b6 c0             	movzbl %al,%eax
   1be08:	0d 00 e0 37 7f       	or     $0x7f37e000,%eax
   1be0d:	f7 d8                	neg    %eax
   1be0f:	eb 26                	jmp    1be37 <efi_driver_handles+0x84>
   1be11:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1be16:	48 3b 5c 24 10       	cmp    0x10(%rsp),%rbx
   1be1b:	73 0b                	jae    1be28 <efi_driver_handles+0x75>
   1be1d:	48 8b 3c d9          	mov    (%rcx,%rbx,8),%rdi
   1be21:	48 ff c3             	inc    %rbx
   1be24:	ff d5                	call   *%rbp
   1be26:	eb e9                	jmp    1be11 <efi_driver_handles+0x5e>
   1be28:	48 83 ec 20          	sub    $0x20,%rsp
   1be2c:	41 ff 54 24 48       	call   *0x48(%r12)
   1be31:	48 83 c4 20          	add    $0x20,%rsp
   1be35:	31 c0                	xor    %eax,%eax
   1be37:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1be3c:	48 2b 15 2d e1 00 00 	sub    0xe12d(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1be43:	74 05                	je     1be4a <efi_driver_handles+0x97>
   1be45:	e8 16 6c fe ff       	call   2a60 <__stack_chk_fail>
   1be4a:	48 83 c4 20          	add    $0x20,%rsp
   1be4e:	5b                   	pop    %rbx
   1be4f:	5d                   	pop    %rbp
   1be50:	41 5c                	pop    %r12
   1be52:	c3                   	ret    

000000000001be53 <efi_driver_start>:
   1be53:	f3 0f 1e fa          	endbr64 
   1be57:	41 57                	push   %r15
   1be59:	41 56                	push   %r14
   1be5b:	41 55                	push   %r13
   1be5d:	49 bd 14 00 00 00 00 	movabs $0x8000000000000014,%r13
   1be64:	00 00 80 
   1be67:	41 54                	push   %r12
   1be69:	49 89 d4             	mov    %rdx,%r12
   1be6c:	55                   	push   %rbp
   1be6d:	57                   	push   %rdi
   1be6e:	48 89 d7             	mov    %rdx,%rdi
   1be71:	56                   	push   %rsi
   1be72:	53                   	push   %rbx
   1be73:	48 83 ec 58          	sub    $0x58,%rsp
   1be77:	48 8b 05 f2 e0 00 00 	mov    0xe0f2(%rip),%rax        # 29f70 <__stack_chk_guard>
   1be7e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1be83:	31 c0                	xor    %eax,%eax
   1be85:	e8 e9 fd ff ff       	call   1bc73 <efidev_find>
   1be8a:	48 85 c0             	test   %rax,%rax
   1be8d:	0f 85 7d 01 00 00    	jne    1c010 <efi_driver_start+0x1bd>
   1be93:	48 8b 05 fe e0 00 00 	mov    0xe0fe(%rip),%rax        # 29f98 <efi_systab>
   1be9a:	b9 08 00 00 00       	mov    $0x8,%ecx
   1be9f:	49 bd 06 00 00 00 00 	movabs $0x8000000000000006,%r13
   1bea6:	00 00 80 
   1bea9:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1bead:	ff 53 18             	call   *0x18(%rbx)
   1beb0:	83 3d 0d e0 00 00 00 	cmpl   $0x0,0xe00d(%rip)        # 29ec4 <efi_driver_disconnecting>
   1beb7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1bebc:	0f 85 46 01 00 00    	jne    1c008 <efi_driver_start+0x1b5>
   1bec2:	4c 8d 3d e7 8a 00 00 	lea    0x8ae7(%rip),%r15        # 249b0 <efi_device_path_protocol_guid>
   1bec9:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   1bece:	4c 89 e1             	mov    %r12,%rcx
   1bed1:	4c 8b 0d b0 e0 00 00 	mov    0xe0b0(%rip),%r9        # 29f88 <efi_image_handle>
   1bed8:	c7 44 24 28 02 00 00 	movl   $0x2,0x28(%rsp)
   1bedf:	00 
   1bee0:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
   1bee5:	4c 89 fa             	mov    %r15,%rdx
   1bee8:	ff 93 18 01 00 00    	call   *0x118(%rbx)
   1beee:	49 89 c5             	mov    %rax,%r13
   1bef1:	48 85 c0             	test   %rax,%rax
   1bef4:	74 05                	je     1befb <efi_driver_start+0xa8>
   1bef6:	e9 0d 01 00 00       	jmp    1c008 <efi_driver_start+0x1b5>
   1befb:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1bf00:	e8 b5 aa fe ff       	call   69ba <efi_devpath_len>
   1bf05:	48 8d b8 a4 00 00 00 	lea    0xa4(%rax),%rdi
   1bf0c:	4c 8d 70 04          	lea    0x4(%rax),%r14
   1bf10:	e8 45 07 ff ff       	call   c65a <zalloc>
   1bf15:	48 89 c5             	mov    %rax,%rbp
   1bf18:	48 85 c0             	test   %rax,%rax
   1bf1b:	0f 84 bf 00 00 00    	je     1bfe0 <efi_driver_start+0x18d>
   1bf21:	48 8d b8 a0 00 00 00 	lea    0xa0(%rax),%rdi
   1bf28:	4c 89 a0 80 00 00 00 	mov    %r12,0x80(%rax)
   1bf2f:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   1bf34:	4c 89 f2             	mov    %r14,%rdx
   1bf37:	48 89 b8 88 00 00 00 	mov    %rdi,0x88(%rax)
   1bf3e:	4c 8d 35 73 c8 00 00 	lea    0xc873(%rip),%r14        # 287b8 <efipci_driver>
   1bf45:	c7 40 30 07 00 00 00 	movl   $0x7,0x30(%rax)
   1bf4c:	e8 bc b3 ff ff       	call   1730d <__memcpy>
   1bf51:	48 8d 45 68          	lea    0x68(%rbp),%rax
   1bf55:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
   1bf59:	48 8d 35 00 ba 00 00 	lea    0xba00(%rip),%rsi        # 27960 <efi_devices>
   1bf60:	48 89 45 68          	mov    %rax,0x68(%rbp)
   1bf64:	48 89 45 70          	mov    %rax,0x70(%rbp)
   1bf68:	e8 54 01 ff ff       	call   c0c1 <extern_list_add>
   1bf6d:	4d 89 e1             	mov    %r12,%r9
   1bf70:	4c 89 fa             	mov    %r15,%rdx
   1bf73:	4c 89 e1             	mov    %r12,%rcx
   1bf76:	4c 8b 05 0b e0 00 00 	mov    0xe00b(%rip),%r8        # 29f88 <efi_image_handle>
   1bf7d:	ff 93 20 01 00 00    	call   *0x120(%rbx)
   1bf83:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1bf8a:	00 00 
   1bf8c:	48 8d 05 45 c8 00 00 	lea    0xc845(%rip),%rax        # 287d8 <__EFI_CONSOLE_CONTROL_PROTOCOL>
   1bf93:	49 39 c6             	cmp    %rax,%r14
   1bf96:	73 25                	jae    1bfbd <efi_driver_start+0x16a>
   1bf98:	4c 89 e7             	mov    %r12,%rdi
   1bf9b:	41 ff 56 08          	call   *0x8(%r14)
   1bf9f:	85 c0                	test   %eax,%eax
   1bfa1:	75 14                	jne    1bfb7 <efi_driver_start+0x164>
   1bfa3:	48 89 ef             	mov    %rbp,%rdi
   1bfa6:	41 ff 56 10          	call   *0x10(%r14)
   1bfaa:	85 c0                	test   %eax,%eax
   1bfac:	75 09                	jne    1bfb7 <efi_driver_start+0x164>
   1bfae:	4c 89 b5 90 00 00 00 	mov    %r14,0x90(%rbp)
   1bfb5:	eb 51                	jmp    1c008 <efi_driver_start+0x1b5>
   1bfb7:	49 83 c6 20          	add    $0x20,%r14
   1bfbb:	eb cf                	jmp    1bf8c <efi_driver_start+0x139>
   1bfbd:	48 8b 55 58          	mov    0x58(%rbp),%rdx
   1bfc1:	48 8b 45 60          	mov    0x60(%rbp),%rax
   1bfc5:	48 89 ef             	mov    %rbp,%rdi
   1bfc8:	49 bd 03 00 00 00 00 	movabs $0x8000000000000003,%r13
   1bfcf:	00 00 80 
   1bfd2:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1bfd6:	48 89 10             	mov    %rdx,(%rax)
   1bfd9:	e8 71 06 ff ff       	call   c64f <free>
   1bfde:	eb 0a                	jmp    1bfea <efi_driver_start+0x197>
   1bfe0:	49 bd 09 00 00 00 00 	movabs $0x8000000000000009,%r13
   1bfe7:	00 00 80 
   1bfea:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   1bff0:	74 16                	je     1c008 <efi_driver_start+0x1b5>
   1bff2:	4c 8b 05 8f df 00 00 	mov    0xdf8f(%rip),%r8        # 29f88 <efi_image_handle>
   1bff9:	4d 89 e1             	mov    %r12,%r9
   1bffc:	4c 89 fa             	mov    %r15,%rdx
   1bfff:	4c 89 e1             	mov    %r12,%rcx
   1c002:	ff 93 20 01 00 00    	call   *0x120(%rbx)
   1c008:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
   1c00d:	ff 53 20             	call   *0x20(%rbx)
   1c010:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   1c015:	48 2b 05 54 df 00 00 	sub    0xdf54(%rip),%rax        # 29f70 <__stack_chk_guard>
   1c01c:	74 05                	je     1c023 <efi_driver_start+0x1d0>
   1c01e:	e8 3d 6a fe ff       	call   2a60 <__stack_chk_fail>
   1c023:	48 83 c4 58          	add    $0x58,%rsp
   1c027:	4c 89 e8             	mov    %r13,%rax
   1c02a:	5b                   	pop    %rbx
   1c02b:	5e                   	pop    %rsi
   1c02c:	5f                   	pop    %rdi
   1c02d:	5d                   	pop    %rbp
   1c02e:	41 5c                	pop    %r12
   1c030:	41 5d                	pop    %r13
   1c032:	41 5e                	pop    %r14
   1c034:	41 5f                	pop    %r15
   1c036:	c3                   	ret    

000000000001c037 <efi_driver_supported>:
   1c037:	f3 0f 1e fa          	endbr64 
   1c03b:	41 54                	push   %r12
   1c03d:	4c 8d 25 94 c7 00 00 	lea    0xc794(%rip),%r12        # 287d8 <__EFI_CONSOLE_CONTROL_PROTOCOL>
   1c044:	55                   	push   %rbp
   1c045:	48 89 d5             	mov    %rdx,%rbp
   1c048:	57                   	push   %rdi
   1c049:	48 89 d7             	mov    %rdx,%rdi
   1c04c:	56                   	push   %rsi
   1c04d:	53                   	push   %rbx
   1c04e:	48 8d 1d 63 c7 00 00 	lea    0xc763(%rip),%rbx        # 287b8 <efipci_driver>
   1c055:	e8 19 fc ff ff       	call   1bc73 <efidev_find>
   1c05a:	49 89 c0             	mov    %rax,%r8
   1c05d:	48 b8 14 00 00 00 00 	movabs $0x8000000000000014,%rax
   1c064:	00 00 80 
   1c067:	4d 85 c0             	test   %r8,%r8
   1c06a:	75 23                	jne    1c08f <efi_driver_supported+0x58>
   1c06c:	4c 39 e3             	cmp    %r12,%rbx
   1c06f:	73 10                	jae    1c081 <efi_driver_supported+0x4a>
   1c071:	48 89 ef             	mov    %rbp,%rdi
   1c074:	ff 53 08             	call   *0x8(%rbx)
   1c077:	85 c0                	test   %eax,%eax
   1c079:	74 12                	je     1c08d <efi_driver_supported+0x56>
   1c07b:	48 83 c3 20          	add    $0x20,%rbx
   1c07f:	eb eb                	jmp    1c06c <efi_driver_supported+0x35>
   1c081:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
   1c088:	00 00 80 
   1c08b:	eb 02                	jmp    1c08f <efi_driver_supported+0x58>
   1c08d:	31 c0                	xor    %eax,%eax
   1c08f:	5b                   	pop    %rbx
   1c090:	5e                   	pop    %rsi
   1c091:	5f                   	pop    %rdi
   1c092:	5d                   	pop    %rbp
   1c093:	41 5c                	pop    %r12
   1c095:	c3                   	ret    

000000000001c096 <efi_driver_stop>:
   1c096:	f3 0f 1e fa          	endbr64 
   1c09a:	41 54                	push   %r12
   1c09c:	55                   	push   %rbp
   1c09d:	57                   	push   %rdi
   1c09e:	48 89 d7             	mov    %rdx,%rdi
   1c0a1:	56                   	push   %rsi
   1c0a2:	53                   	push   %rbx
   1c0a3:	48 83 ec 20          	sub    $0x20,%rsp
   1c0a7:	48 8b 05 ea de 00 00 	mov    0xdeea(%rip),%rax        # 29f98 <efi_systab>
   1c0ae:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1c0b2:	e8 bc fb ff ff       	call   1bc73 <efidev_find>
   1c0b7:	48 89 c5             	mov    %rax,%rbp
   1c0ba:	48 b8 07 00 00 00 00 	movabs $0x8000000000000007,%rax
   1c0c1:	00 00 80 
   1c0c4:	48 85 ed             	test   %rbp,%rbp
   1c0c7:	74 37                	je     1c100 <efi_driver_stop+0x6a>
   1c0c9:	b9 08 00 00 00       	mov    $0x8,%ecx
   1c0ce:	48 89 ef             	mov    %rbp,%rdi
   1c0d1:	ff 53 18             	call   *0x18(%rbx)
   1c0d4:	49 89 c4             	mov    %rax,%r12
   1c0d7:	48 8b 85 90 00 00 00 	mov    0x90(%rbp),%rax
   1c0de:	ff 50 18             	call   *0x18(%rax)
   1c0e1:	48 8b 45 60          	mov    0x60(%rbp),%rax
   1c0e5:	48 8b 55 58          	mov    0x58(%rbp),%rdx
   1c0e9:	48 89 ef             	mov    %rbp,%rdi
   1c0ec:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1c0f0:	48 89 10             	mov    %rdx,(%rax)
   1c0f3:	e8 57 05 ff ff       	call   c64f <free>
   1c0f8:	4c 89 e1             	mov    %r12,%rcx
   1c0fb:	ff 53 20             	call   *0x20(%rbx)
   1c0fe:	31 c0                	xor    %eax,%eax
   1c100:	48 83 c4 20          	add    $0x20,%rsp
   1c104:	5b                   	pop    %rbx
   1c105:	5e                   	pop    %rsi
   1c106:	5f                   	pop    %rdi
   1c107:	5d                   	pop    %rbp
   1c108:	41 5c                	pop    %r12
   1c10a:	c3                   	ret    

000000000001c10b <efidev_parent>:
   1c10b:	f3 0f 1e fa          	endbr64 
   1c10f:	48 8b 05 4a b8 00 00 	mov    0xb84a(%rip),%rax        # 27960 <efi_devices>
   1c116:	48 8d 0d 43 b8 00 00 	lea    0xb843(%rip),%rcx        # 27960 <efi_devices>
   1c11d:	48 8d 50 a8          	lea    -0x58(%rax),%rdx
   1c121:	48 8b 7f 78          	mov    0x78(%rdi),%rdi
   1c125:	48 85 ff             	test   %rdi,%rdi
   1c128:	74 1b                	je     1c145 <efidev_parent+0x3a>
   1c12a:	48 89 d0             	mov    %rdx,%rax
   1c12d:	48 8d 70 58          	lea    0x58(%rax),%rsi
   1c131:	48 39 ce             	cmp    %rcx,%rsi
   1c134:	74 eb                	je     1c121 <efidev_parent+0x16>
   1c136:	48 39 f8             	cmp    %rdi,%rax
   1c139:	74 0c                	je     1c147 <efidev_parent+0x3c>
   1c13b:	48 8b 40 58          	mov    0x58(%rax),%rax
   1c13f:	48 83 e8 58          	sub    $0x58,%rax
   1c143:	eb e8                	jmp    1c12d <efidev_parent+0x22>
   1c145:	31 c0                	xor    %eax,%eax
   1c147:	c3                   	ret    

000000000001c148 <efi_driver_install>:
   1c148:	f3 0f 1e fa          	endbr64 
   1c14c:	51                   	push   %rcx
   1c14d:	48 8b 05 44 de 00 00 	mov    0xde44(%rip),%rax        # 29f98 <efi_systab>
   1c154:	48 8d 15 15 88 00 00 	lea    0x8815(%rip),%rdx        # 24970 <efi_driver_binding_protocol_guid>
   1c15b:	4c 8d 0d 6e 88 00 00 	lea    0x886e(%rip),%r9        # 249d0 <efi_component_name2_protocol_guid>
   1c162:	4c 8d 05 17 b8 00 00 	lea    0xb817(%rip),%r8        # 27980 <efi_driver_binding>
   1c169:	48 8d 0d 18 de 00 00 	lea    0xde18(%rip),%rcx        # 29f88 <efi_image_handle>
   1c170:	48 8b 70 60          	mov    0x60(%rax),%rsi
   1c174:	48 8b 05 0d 89 00 00 	mov    0x890d(%rip),%rax        # 24a88 <build_timestamp>
   1c17b:	6a 00                	push   $0x0
   1c17d:	48 c1 e8 06          	shr    $0x6,%rax
   1c181:	89 05 11 b8 00 00    	mov    %eax,0xb811(%rip)        # 27998 <efi_driver_binding+0x18>
   1c187:	48 8b 05 fa dd 00 00 	mov    0xddfa(%rip),%rax        # 29f88 <efi_image_handle>
   1c18e:	48 89 05 0b b8 00 00 	mov    %rax,0xb80b(%rip)        # 279a0 <efi_driver_binding+0x20>
   1c195:	48 89 05 0c b8 00 00 	mov    %rax,0xb80c(%rip)        # 279a8 <efi_driver_binding+0x28>
   1c19c:	48 8d 05 9d b7 00 00 	lea    0xb79d(%rip),%rax        # 27940 <efi_wtf>
   1c1a3:	50                   	push   %rax
   1c1a4:	48 83 ec 20          	sub    $0x20,%rsp
   1c1a8:	ff 96 48 01 00 00    	call   *0x148(%rsi)
   1c1ae:	48 83 c4 30          	add    $0x30,%rsp
   1c1b2:	48 89 c2             	mov    %rax,%rdx
   1c1b5:	31 c0                	xor    %eax,%eax
   1c1b7:	48 85 d2             	test   %rdx,%rdx
   1c1ba:	74 13                	je     1c1cf <efi_driver_install+0x87>
   1c1bc:	48 89 d0             	mov    %rdx,%rax
   1c1bf:	48 c1 e8 38          	shr    $0x38,%rax
   1c1c3:	09 d0                	or     %edx,%eax
   1c1c5:	0f b6 c0             	movzbl %al,%eax
   1c1c8:	0d 00 e0 37 7f       	or     $0x7f37e000,%eax
   1c1cd:	f7 d8                	neg    %eax
   1c1cf:	5a                   	pop    %rdx
   1c1d0:	c3                   	ret    

000000000001c1d1 <efi_driver_uninstall>:
   1c1d1:	f3 0f 1e fa          	endbr64 
   1c1d5:	50                   	push   %rax
   1c1d6:	48 8b 05 bb dd 00 00 	mov    0xddbb(%rip),%rax        # 29f98 <efi_systab>
   1c1dd:	48 8d 35 5c b7 00 00 	lea    0xb75c(%rip),%rsi        # 27940 <efi_wtf>
   1c1e4:	4c 8d 0d e5 87 00 00 	lea    0x87e5(%rip),%r9        # 249d0 <efi_component_name2_protocol_guid>
   1c1eb:	48 8b 0d 96 dd 00 00 	mov    0xdd96(%rip),%rcx        # 29f88 <efi_image_handle>
   1c1f2:	4c 8d 05 87 b7 00 00 	lea    0xb787(%rip),%r8        # 27980 <efi_driver_binding>
   1c1f9:	48 8d 15 70 87 00 00 	lea    0x8770(%rip),%rdx        # 24970 <efi_driver_binding_protocol_guid>
   1c200:	48 8b 40 60          	mov    0x60(%rax),%rax
   1c204:	6a 00                	push   $0x0
   1c206:	56                   	push   %rsi
   1c207:	48 83 ec 20          	sub    $0x20,%rsp
   1c20b:	ff 90 50 01 00 00    	call   *0x150(%rax)
   1c211:	48 83 c4 38          	add    $0x38,%rsp
   1c215:	c3                   	ret    

000000000001c216 <efi_driver_disconnect_all>:
   1c216:	f3 0f 1e fa          	endbr64 
   1c21a:	48 8d 3d 51 fb ff ff 	lea    -0x4af(%rip),%rdi        # 1bd72 <efi_driver_disconnect>
   1c221:	e9 8d fb ff ff       	jmp    1bdb3 <efi_driver_handles>

000000000001c226 <efi_file_write>:
   1c226:	f3 0f 1e fa          	endbr64 
   1c22a:	48 b8 08 00 00 00 00 	movabs $0x8000000000000008,%rax
   1c231:	00 00 80 
   1c234:	c3                   	ret    

000000000001c235 <efi_file_set_position>:
   1c235:	f3 0f 1e fa          	endbr64 
   1c239:	48 8b 41 78          	mov    0x78(%rcx),%rax
   1c23d:	48 85 c0             	test   %rax,%rax
   1c240:	75 0c                	jne    1c24e <efi_file_set_position+0x19>
   1c242:	48 c7 81 80 00 00 00 	movq   $0x0,0x80(%rcx)
   1c249:	00 00 00 00 
   1c24d:	c3                   	ret    
   1c24e:	4c 8b 40 48          	mov    0x48(%rax),%r8
   1c252:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1c256:	74 10                	je     1c268 <efi_file_set_position+0x33>
   1c258:	48 b8 03 00 00 00 00 	movabs $0x8000000000000003,%rax
   1c25f:	00 00 80 
   1c262:	4c 39 c2             	cmp    %r8,%rdx
   1c265:	76 04                	jbe    1c26b <efi_file_set_position+0x36>
   1c267:	c3                   	ret    
   1c268:	4c 89 c2             	mov    %r8,%rdx
   1c26b:	48 89 91 80 00 00 00 	mov    %rdx,0x80(%rcx)
   1c272:	31 c0                	xor    %eax,%eax
   1c274:	c3                   	ret    

000000000001c275 <efi_file_get_position>:
   1c275:	f3 0f 1e fa          	endbr64 
   1c279:	48 8b 81 80 00 00 00 	mov    0x80(%rcx),%rax
   1c280:	48 89 02             	mov    %rax,(%rdx)
   1c283:	31 c0                	xor    %eax,%eax
   1c285:	c3                   	ret    

000000000001c286 <efi_file_set_info>:
   1c286:	f3 0f 1e fa          	endbr64 
   1c28a:	48 b8 08 00 00 00 00 	movabs $0x8000000000000008,%rax
   1c291:	00 00 80 
   1c294:	c3                   	ret    

000000000001c295 <efi_file_flush>:
   1c295:	f3 0f 1e fa          	endbr64 
   1c299:	31 c0                	xor    %eax,%eax
   1c29b:	c3                   	ret    

000000000001c29c <efi_file_open_volume>:
   1c29c:	f3 0f 1e fa          	endbr64 
   1c2a0:	48 8d 05 79 b7 00 00 	lea    0xb779(%rip),%rax        # 27a20 <efi_file_root>
   1c2a7:	48 89 02             	mov    %rax,(%rdx)
   1c2aa:	31 c0                	xor    %eax,%eax
   1c2ac:	c3                   	ret    

000000000001c2ad <efi_block_io_reset>:
   1c2ad:	f3 0f 1e fa          	endbr64 
   1c2b1:	31 c0                	xor    %eax,%eax
   1c2b3:	c3                   	ret    

000000000001c2b4 <efi_block_io_read_blocks>:
   1c2b4:	f3 0f 1e fa          	endbr64 
   1c2b8:	48 b8 0c 00 00 00 00 	movabs $0x800000000000000c,%rax
   1c2bf:	00 00 80 
   1c2c2:	c3                   	ret    

000000000001c2c3 <efi_file_close>:
   1c2c3:	f3 0f 1e fa          	endbr64 
   1c2c7:	55                   	push   %rbp
   1c2c8:	57                   	push   %rdi
   1c2c9:	48 8b 79 78          	mov    0x78(%rcx),%rdi
   1c2cd:	56                   	push   %rsi
   1c2ce:	48 85 ff             	test   %rdi,%rdi
   1c2d1:	74 10                	je     1c2e3 <efi_file_close+0x20>
   1c2d3:	48 89 cd             	mov    %rcx,%rbp
   1c2d6:	e8 63 3b ff ff       	call   fe3e <ref_decrement>
   1c2db:	48 89 ef             	mov    %rbp,%rdi
   1c2de:	e8 6c 03 ff ff       	call   c64f <free>
   1c2e3:	5e                   	pop    %rsi
   1c2e4:	31 c0                	xor    %eax,%eax
   1c2e6:	5f                   	pop    %rdi
   1c2e7:	5d                   	pop    %rbp
   1c2e8:	c3                   	ret    

000000000001c2e9 <efi_file_delete>:
   1c2e9:	f3 0f 1e fa          	endbr64 
   1c2ed:	48 83 ec 28          	sub    $0x28,%rsp
   1c2f1:	e8 cd ff ff ff       	call   1c2c3 <efi_file_close>
   1c2f6:	b8 02 00 00 00       	mov    $0x2,%eax
   1c2fb:	48 83 c4 28          	add    $0x28,%rsp
   1c2ff:	c3                   	ret    

000000000001c300 <efi_file_open>:
   1c300:	f3 0f 1e fa          	endbr64 
   1c304:	55                   	push   %rbp
   1c305:	48 89 e5             	mov    %rsp,%rbp
   1c308:	41 57                	push   %r15
   1c30a:	41 56                	push   %r14
   1c30c:	4d 89 c6             	mov    %r8,%r14
   1c30f:	41 55                	push   %r13
   1c311:	41 54                	push   %r12
   1c313:	4d 89 cc             	mov    %r9,%r12
   1c316:	57                   	push   %rdi
   1c317:	56                   	push   %rsi
   1c318:	53                   	push   %rbx
   1c319:	48 89 d3             	mov    %rdx,%rbx
   1c31c:	48 8d 15 fd b6 00 00 	lea    0xb6fd(%rip),%rdx        # 27a20 <efi_file_root>
   1c323:	48 83 ec 18          	sub    $0x18,%rsp
   1c327:	48 8b 05 42 dc 00 00 	mov    0xdc42(%rip),%rax        # 29f70 <__stack_chk_guard>
   1c32e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1c332:	31 c0                	xor    %eax,%eax
   1c334:	66 41 8b 06          	mov    (%r14),%ax
   1c338:	66 83 f8 5c          	cmp    $0x5c,%ax
   1c33c:	75 09                	jne    1c347 <efi_file_open+0x47>
   1c33e:	49 83 c6 02          	add    $0x2,%r14
   1c342:	48 89 d1             	mov    %rdx,%rcx
   1c345:	eb ed                	jmp    1c334 <efi_file_open+0x34>
   1c347:	66 85 c0             	test   %ax,%ax
   1c34a:	74 06                	je     1c352 <efi_file_open+0x52>
   1c34c:	66 83 f8 2e          	cmp    $0x2e,%ax
   1c350:	75 0f                	jne    1c361 <efi_file_open+0x61>
   1c352:	48 8d 05 c7 b6 00 00 	lea    0xb6c7(%rip),%rax        # 27a20 <efi_file_root>
   1c359:	48 89 03             	mov    %rax,(%rbx)
   1c35c:	e9 04 01 00 00       	jmp    1c465 <efi_file_open+0x165>
   1c361:	48 83 79 78 00       	cmpq   $0x0,0x78(%rcx)
   1c366:	74 0f                	je     1c377 <efi_file_open+0x77>
   1c368:	48 b8 0e 00 00 00 00 	movabs $0x800000000000000e,%rax
   1c36f:	00 00 80 
   1c372:	e9 f0 00 00 00       	jmp    1c467 <efi_file_open+0x167>
   1c377:	4c 89 f7             	mov    %r14,%rdi
   1c37a:	49 89 e5             	mov    %rsp,%r13
   1c37d:	e8 86 ae ff ff       	call   17208 <wcslen>
   1c382:	48 89 e1             	mov    %rsp,%rcx
   1c385:	48 8d 70 01          	lea    0x1(%rax),%rsi
   1c389:	48 83 c0 10          	add    $0x10,%rax
   1c38d:	48 89 c2             	mov    %rax,%rdx
   1c390:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   1c396:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
   1c39a:	48 29 c1             	sub    %rax,%rcx
   1c39d:	48 39 cc             	cmp    %rcx,%rsp
   1c3a0:	74 12                	je     1c3b4 <efi_file_open+0xb4>
   1c3a2:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1c3a9:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1c3b0:	00 00 
   1c3b2:	eb e9                	jmp    1c39d <efi_file_open+0x9d>
   1c3b4:	48 89 d0             	mov    %rdx,%rax
   1c3b7:	25 ff 0f 00 00       	and    $0xfff,%eax
   1c3bc:	48 29 c4             	sub    %rax,%rsp
   1c3bf:	48 85 c0             	test   %rax,%rax
   1c3c2:	74 06                	je     1c3ca <efi_file_open+0xca>
   1c3c4:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1c3ca:	4c 89 f1             	mov    %r14,%rcx
   1c3cd:	48 8d 15 fb 63 00 00 	lea    0x63fb(%rip),%rdx        # 227cf <.LC0>
   1c3d4:	48 89 e7             	mov    %rsp,%rdi
   1c3d7:	31 c0                	xor    %eax,%eax
   1c3d9:	e8 a3 ac ff ff       	call   17081 <snprintf>
   1c3de:	48 8b 05 0b b9 00 00 	mov    0xb90b(%rip),%rax        # 27cf0 <images>
   1c3e5:	49 89 e7             	mov    %rsp,%r15
   1c3e8:	4c 8d 70 f0          	lea    -0x10(%rax),%r14
   1c3ec:	49 8d 46 10          	lea    0x10(%r14),%rax
   1c3f0:	48 8d 35 f9 b8 00 00 	lea    0xb8f9(%rip),%rsi        # 27cf0 <images>
   1c3f7:	48 39 f0             	cmp    %rsi,%rax
   1c3fa:	74 1a                	je     1c416 <efi_file_open+0x116>
   1c3fc:	49 8b 7e 28          	mov    0x28(%r14),%rdi
   1c400:	4c 89 fe             	mov    %r15,%rsi
   1c403:	e8 e5 74 ff ff       	call   138ed <strcasecmp>
   1c408:	85 c0                	test   %eax,%eax
   1c40a:	74 0d                	je     1c419 <efi_file_open+0x119>
   1c40c:	49 8b 4e 10          	mov    0x10(%r14),%rcx
   1c410:	4c 8d 71 f0          	lea    -0x10(%rcx),%r14
   1c414:	eb d6                	jmp    1c3ec <efi_file_open+0xec>
   1c416:	45 31 f6             	xor    %r14d,%r14d
   1c419:	4c 89 ec             	mov    %r13,%rsp
   1c41c:	4d 85 f6             	test   %r14,%r14
   1c41f:	0f 84 43 ff ff ff    	je     1c368 <efi_file_open+0x68>
   1c425:	48 b8 08 00 00 00 00 	movabs $0x8000000000000008,%rax
   1c42c:	00 00 80 
   1c42f:	49 ff cc             	dec    %r12
   1c432:	75 33                	jne    1c467 <efi_file_open+0x167>
   1c434:	bf 88 00 00 00       	mov    $0x88,%edi
   1c439:	e8 1c 02 ff ff       	call   c65a <zalloc>
   1c43e:	ba 78 00 00 00       	mov    $0x78,%edx
   1c443:	48 8d 35 d6 b5 00 00 	lea    0xb5d6(%rip),%rsi        # 27a20 <efi_file_root>
   1c44a:	48 89 c7             	mov    %rax,%rdi
   1c44d:	49 89 c4             	mov    %rax,%r12
   1c450:	e8 b8 ae ff ff       	call   1730d <__memcpy>
   1c455:	4c 89 f7             	mov    %r14,%rdi
   1c458:	e8 d5 39 ff ff       	call   fe32 <ref_increment>
   1c45d:	4d 89 74 24 78       	mov    %r14,0x78(%r12)
   1c462:	4c 89 23             	mov    %r12,(%rbx)
   1c465:	31 c0                	xor    %eax,%eax
   1c467:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1c46b:	48 2b 15 fe da 00 00 	sub    0xdafe(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1c472:	74 05                	je     1c479 <efi_file_open+0x179>
   1c474:	e8 e7 65 fe ff       	call   2a60 <__stack_chk_fail>
   1c479:	48 8d 65 c8          	lea    -0x38(%rbp),%rsp
   1c47d:	5b                   	pop    %rbx
   1c47e:	5e                   	pop    %rsi
   1c47f:	5f                   	pop    %rdi
   1c480:	41 5c                	pop    %r12
   1c482:	41 5d                	pop    %r13
   1c484:	41 5e                	pop    %r14
   1c486:	41 5f                	pop    %r15
   1c488:	5d                   	pop    %rbp
   1c489:	c3                   	ret    

000000000001c48a <efi_disk_io_write_disk>:
   1c48a:	f3 0f 1e fa          	endbr64 
   1c48e:	48 b8 0c 00 00 00 00 	movabs $0x800000000000000c,%rax
   1c495:	00 00 80 
   1c498:	c3                   	ret    

000000000001c499 <efi_block_io_write_blocks>:
   1c499:	f3 0f 1e fa          	endbr64 
   1c49d:	48 b8 0c 00 00 00 00 	movabs $0x800000000000000c,%rax
   1c4a4:	00 00 80 
   1c4a7:	c3                   	ret    

000000000001c4a8 <efi_disk_io_read_disk>:
   1c4a8:	f3 0f 1e fa          	endbr64 
   1c4ac:	48 b8 0c 00 00 00 00 	movabs $0x800000000000000c,%rax
   1c4b3:	00 00 80 
   1c4b6:	c3                   	ret    

000000000001c4b7 <efi_block_io_flush_blocks>:
   1c4b7:	f3 0f 1e fa          	endbr64 
   1c4bb:	31 c0                	xor    %eax,%eax
   1c4bd:	c3                   	ret    

000000000001c4be <efi_file_info>:
   1c4be:	41 56                	push   %r14
   1c4c0:	49 89 f8             	mov    %rdi,%r8
   1c4c3:	b9 58 00 00 00       	mov    $0x58,%ecx
   1c4c8:	41 55                	push   %r13
   1c4ca:	41 54                	push   %r12
   1c4cc:	49 89 f4             	mov    %rsi,%r12
   1c4cf:	55                   	push   %rbp
   1c4d0:	53                   	push   %rbx
   1c4d1:	48 89 d3             	mov    %rdx,%rbx
   1c4d4:	48 83 ec 60          	sub    $0x60,%rsp
   1c4d8:	48 8b 05 91 da 00 00 	mov    0xda91(%rip),%rax        # 29f70 <__stack_chk_guard>
   1c4df:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1c4e4:	31 c0                	xor    %eax,%eax
   1c4e6:	49 89 e6             	mov    %rsp,%r14
   1c4e9:	4c 89 f7             	mov    %r14,%rdi
   1c4ec:	f3 aa                	rep stos %al,%es:(%rdi)
   1c4ee:	4d 85 c0             	test   %r8,%r8
   1c4f1:	74 1d                	je     1c510 <efi_file_info+0x52>
   1c4f3:	49 8b 40 48          	mov    0x48(%r8),%rax
   1c4f7:	4d 8b 68 28          	mov    0x28(%r8),%r13
   1c4fb:	48 c7 44 24 48 01 00 	movq   $0x1,0x48(%rsp)
   1c502:	00 00 
   1c504:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1c509:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c50e:	eb 10                	jmp    1c520 <efi_file_info+0x62>
   1c510:	48 c7 44 24 48 11 00 	movq   $0x11,0x48(%rsp)
   1c517:	00 00 
   1c519:	4c 8d 2d b4 7e 00 00 	lea    0x7eb4(%rip),%r13        # 243d4 <.LC0>
   1c520:	4c 89 ef             	mov    %r13,%rdi
   1c523:	e8 12 74 ff ff       	call   1393a <strlen>
   1c528:	48 8d 68 01          	lea    0x1(%rax),%rbp
   1c52c:	48 8d 44 2d 00       	lea    0x0(%rbp,%rbp,1),%rax
   1c531:	48 83 c0 50          	add    $0x50,%rax
   1c535:	49 3b 04 24          	cmp    (%r12),%rax
   1c539:	48 89 04 24          	mov    %rax,(%rsp)
   1c53d:	49 89 04 24          	mov    %rax,(%r12)
   1c541:	48 b8 05 00 00 00 00 	movabs $0x8000000000000005,%rax
   1c548:	00 00 80 
   1c54b:	77 2a                	ja     1c577 <efi_file_info+0xb9>
   1c54d:	ba 50 00 00 00       	mov    $0x50,%edx
   1c552:	4c 89 f6             	mov    %r14,%rsi
   1c555:	48 89 df             	mov    %rbx,%rdi
   1c558:	e8 b0 ad ff ff       	call   1730d <__memcpy>
   1c55d:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
   1c561:	4c 89 e9             	mov    %r13,%rcx
   1c564:	48 89 ee             	mov    %rbp,%rsi
   1c567:	48 8d 15 b3 70 00 00 	lea    0x70b3(%rip),%rdx        # 23621 <.LC0>
   1c56e:	31 c0                	xor    %eax,%eax
   1c570:	e8 cf a3 fe ff       	call   6944 <efi_snprintf>
   1c575:	31 c0                	xor    %eax,%eax
   1c577:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
   1c57c:	48 2b 15 ed d9 00 00 	sub    0xd9ed(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1c583:	74 05                	je     1c58a <efi_file_info+0xcc>
   1c585:	e8 d6 64 fe ff       	call   2a60 <__stack_chk_fail>
   1c58a:	48 83 c4 60          	add    $0x60,%rsp
   1c58e:	5b                   	pop    %rbx
   1c58f:	5d                   	pop    %rbp
   1c590:	41 5c                	pop    %r12
   1c592:	41 5d                	pop    %r13
   1c594:	41 5e                	pop    %r14
   1c596:	c3                   	ret    

000000000001c597 <efi_file_read>:
   1c597:	f3 0f 1e fa          	endbr64 
   1c59b:	55                   	push   %rbp
   1c59c:	48 89 d5             	mov    %rdx,%rbp
   1c59f:	57                   	push   %rdi
   1c5a0:	56                   	push   %rsi
   1c5a1:	53                   	push   %rbx
   1c5a2:	48 89 cb             	mov    %rcx,%rbx
   1c5a5:	41 51                	push   %r9
   1c5a7:	48 8b 51 78          	mov    0x78(%rcx),%rdx
   1c5ab:	48 8b b1 80 00 00 00 	mov    0x80(%rcx),%rsi
   1c5b2:	48 85 d2             	test   %rdx,%rdx
   1c5b5:	75 4e                	jne    1c605 <efi_file_read+0x6e>
   1c5b7:	48 8b 05 32 b7 00 00 	mov    0xb732(%rip),%rax        # 27cf0 <images>
   1c5be:	48 8d 78 f0          	lea    -0x10(%rax),%rdi
   1c5c2:	48 8d 05 27 b7 00 00 	lea    0xb727(%rip),%rax        # 27cf0 <images>
   1c5c9:	48 8d 57 10          	lea    0x10(%rdi),%rdx
   1c5cd:	48 39 c2             	cmp    %rax,%rdx
   1c5d0:	74 29                	je     1c5fb <efi_file_read+0x64>
   1c5d2:	85 f6                	test   %esi,%esi
   1c5d4:	75 19                	jne    1c5ef <efi_file_read+0x58>
   1c5d6:	4c 89 c2             	mov    %r8,%rdx
   1c5d9:	48 89 ee             	mov    %rbp,%rsi
   1c5dc:	e8 dd fe ff ff       	call   1c4be <efi_file_info>
   1c5e1:	48 85 c0             	test   %rax,%rax
   1c5e4:	75 4d                	jne    1c633 <efi_file_read+0x9c>
   1c5e6:	48 ff 83 80 00 00 00 	incq   0x80(%rbx)
   1c5ed:	eb 44                	jmp    1c633 <efi_file_read+0x9c>
   1c5ef:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1c5f3:	ff ce                	dec    %esi
   1c5f5:	48 83 ef 10          	sub    $0x10,%rdi
   1c5f9:	eb ce                	jmp    1c5c9 <efi_file_read+0x32>
   1c5fb:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
   1c602:	00 
   1c603:	eb 2c                	jmp    1c631 <efi_file_read+0x9a>
   1c605:	48 8b 42 48          	mov    0x48(%rdx),%rax
   1c609:	48 29 f0             	sub    %rsi,%rax
   1c60c:	48 39 45 00          	cmp    %rax,0x0(%rbp)
   1c610:	76 04                	jbe    1c616 <efi_file_read+0x7f>
   1c612:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1c616:	48 03 72 40          	add    0x40(%rdx),%rsi
   1c61a:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1c61e:	4c 89 c7             	mov    %r8,%rdi
   1c621:	e8 e7 ac ff ff       	call   1730d <__memcpy>
   1c626:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1c62a:	48 01 83 80 00 00 00 	add    %rax,0x80(%rbx)
   1c631:	31 c0                	xor    %eax,%eax
   1c633:	5a                   	pop    %rdx
   1c634:	5b                   	pop    %rbx
   1c635:	5e                   	pop    %rsi
   1c636:	5f                   	pop    %rdi
   1c637:	5d                   	pop    %rbp
   1c638:	c3                   	ret    

000000000001c639 <efi_file_get_info>:
   1c639:	f3 0f 1e fa          	endbr64 
   1c63d:	41 57                	push   %r15
   1c63f:	41 56                	push   %r14
   1c641:	49 89 ce             	mov    %rcx,%r14
   1c644:	41 55                	push   %r13
   1c646:	49 89 d5             	mov    %rdx,%r13
   1c649:	ba 10 00 00 00       	mov    $0x10,%edx
   1c64e:	41 54                	push   %r12
   1c650:	4d 89 cc             	mov    %r9,%r12
   1c653:	55                   	push   %rbp
   1c654:	4c 89 c5             	mov    %r8,%rbp
   1c657:	57                   	push   %rdi
   1c658:	4c 89 ef             	mov    %r13,%rdi
   1c65b:	56                   	push   %rsi
   1c65c:	48 8d 35 9d 80 00 00 	lea    0x809d(%rip),%rsi        # 24700 <efi_file_info_id>
   1c663:	48 83 ec 30          	sub    $0x30,%rsp
   1c667:	48 8b 05 02 d9 00 00 	mov    0xd902(%rip),%rax        # 29f70 <__stack_chk_guard>
   1c66e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1c673:	31 c0                	xor    %eax,%eax
   1c675:	e8 da 71 ff ff       	call   13854 <memcmp>
   1c67a:	85 c0                	test   %eax,%eax
   1c67c:	75 17                	jne    1c695 <efi_file_get_info+0x5c>
   1c67e:	49 8b 7e 78          	mov    0x78(%r14),%rdi
   1c682:	4c 89 e2             	mov    %r12,%rdx
   1c685:	48 89 ee             	mov    %rbp,%rsi
   1c688:	e8 31 fe ff ff       	call   1c4be <efi_file_info>
   1c68d:	49 89 c1             	mov    %rax,%r9
   1c690:	e9 d3 00 00 00       	jmp    1c768 <efi_file_get_info+0x12f>
   1c695:	ba 10 00 00 00       	mov    $0x10,%edx
   1c69a:	48 8d 35 4f 80 00 00 	lea    0x804f(%rip),%rsi        # 246f0 <efi_file_system_info_id>
   1c6a1:	4c 89 ef             	mov    %r13,%rdi
   1c6a4:	e8 ab 71 ff ff       	call   13854 <memcmp>
   1c6a9:	49 b9 03 00 00 00 00 	movabs $0x8000000000000003,%r9
   1c6b0:	00 00 80 
   1c6b3:	85 c0                	test   %eax,%eax
   1c6b5:	0f 85 ad 00 00 00    	jne    1c768 <efi_file_get_info+0x12f>
   1c6bb:	49 89 e7             	mov    %rsp,%r15
   1c6be:	b9 28 00 00 00       	mov    $0x28,%ecx
   1c6c3:	4c 89 ff             	mov    %r15,%rdi
   1c6c6:	f3 aa                	rep stos %al,%es:(%rdi)
   1c6c8:	48 8b 05 21 b6 00 00 	mov    0xb621(%rip),%rax        # 27cf0 <images>
   1c6cf:	c6 44 24 08 01       	movb   $0x1,0x8(%rsp)
   1c6d4:	31 c9                	xor    %ecx,%ecx
   1c6d6:	4c 8d 05 13 b6 00 00 	lea    0xb613(%rip),%r8        # 27cf0 <images>
   1c6dd:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1c6e2:	48 83 e8 10          	sub    $0x10,%rax
   1c6e6:	4c 8d 48 10          	lea    0x10(%rax),%r9
   1c6ea:	4d 39 c1             	cmp    %r8,%r9
   1c6ed:	74 10                	je     1c6ff <efi_file_get_info+0xc6>
   1c6ef:	48 03 50 48          	add    0x48(%rax),%rdx
   1c6f3:	48 8b 40 10          	mov    0x10(%rax),%rax
   1c6f7:	b1 01                	mov    $0x1,%cl
   1c6f9:	48 83 e8 10          	sub    $0x10,%rax
   1c6fd:	eb e7                	jmp    1c6e6 <efi_file_get_info+0xad>
   1c6ff:	84 c9                	test   %cl,%cl
   1c701:	74 05                	je     1c708 <efi_file_get_info+0xcf>
   1c703:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1c708:	4c 8d 35 79 79 00 00 	lea    0x7979(%rip),%r14        # 24088 <.LC1>
   1c70f:	4c 89 f7             	mov    %r14,%rdi
   1c712:	e8 23 72 ff ff       	call   1393a <strlen>
   1c717:	49 b9 05 00 00 00 00 	movabs $0x8000000000000005,%r9
   1c71e:	00 00 80 
   1c721:	4c 8d 68 01          	lea    0x1(%rax),%r13
   1c725:	4b 8d 44 2d 00       	lea    0x0(%r13,%r13,1),%rax
   1c72a:	48 83 c0 24          	add    $0x24,%rax
   1c72e:	48 3b 45 00          	cmp    0x0(%rbp),%rax
   1c732:	48 89 04 24          	mov    %rax,(%rsp)
   1c736:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1c73a:	77 2c                	ja     1c768 <efi_file_get_info+0x12f>
   1c73c:	ba 24 00 00 00       	mov    $0x24,%edx
   1c741:	4c 89 fe             	mov    %r15,%rsi
   1c744:	4c 89 e7             	mov    %r12,%rdi
   1c747:	e8 c1 ab ff ff       	call   1730d <__memcpy>
   1c74c:	49 8d 7c 24 24       	lea    0x24(%r12),%rdi
   1c751:	4c 89 f1             	mov    %r14,%rcx
   1c754:	4c 89 ee             	mov    %r13,%rsi
   1c757:	48 8d 15 c3 6e 00 00 	lea    0x6ec3(%rip),%rdx        # 23621 <.LC0>
   1c75e:	31 c0                	xor    %eax,%eax
   1c760:	e8 df a1 fe ff       	call   6944 <efi_snprintf>
   1c765:	45 31 c9             	xor    %r9d,%r9d
   1c768:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1c76d:	48 2b 05 fc d7 00 00 	sub    0xd7fc(%rip),%rax        # 29f70 <__stack_chk_guard>
   1c774:	74 05                	je     1c77b <efi_file_get_info+0x142>
   1c776:	e8 e5 62 fe ff       	call   2a60 <__stack_chk_fail>
   1c77b:	48 83 c4 30          	add    $0x30,%rsp
   1c77f:	4c 89 c8             	mov    %r9,%rax
   1c782:	5e                   	pop    %rsi
   1c783:	5f                   	pop    %rdi
   1c784:	5d                   	pop    %rbp
   1c785:	41 5c                	pop    %r12
   1c787:	41 5d                	pop    %r13
   1c789:	41 5e                	pop    %r14
   1c78b:	41 5f                	pop    %r15
   1c78d:	c3                   	ret    

000000000001c78e <efi_file_install>:
   1c78e:	f3 0f 1e fa          	endbr64 
   1c792:	41 57                	push   %r15
   1c794:	4c 8d 0d e5 81 00 00 	lea    0x81e5(%rip),%r9        # 24980 <efi_disk_io_protocol_guid>
   1c79b:	4c 8d 05 3e b2 00 00 	lea    0xb23e(%rip),%r8        # 279e0 <efi_block_io_protocol>
   1c7a2:	41 56                	push   %r14
   1c7a4:	4c 8d 35 65 82 00 00 	lea    0x8265(%rip),%r14        # 24a10 <efi_block_io_protocol_guid>
   1c7ab:	41 55                	push   %r13
   1c7ad:	4c 8d 2d 6c 80 00 00 	lea    0x806c(%rip),%r13        # 24820 <efi_simple_file_system_protocol_guid>
   1c7b4:	4c 89 f2             	mov    %r14,%rdx
   1c7b7:	41 54                	push   %r12
   1c7b9:	55                   	push   %rbp
   1c7ba:	48 8d 2d ff b1 00 00 	lea    0xb1ff(%rip),%rbp        # 279c0 <efi_disk_io_protocol>
   1c7c1:	53                   	push   %rbx
   1c7c2:	48 8d 1d 47 b2 00 00 	lea    0xb247(%rip),%rbx        # 27a10 <efi_simple_file_system_protocol>
   1c7c9:	48 83 ec 28          	sub    $0x28,%rsp
   1c7cd:	48 8b 05 9c d7 00 00 	mov    0xd79c(%rip),%rax        # 29f70 <__stack_chk_guard>
   1c7d4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c7d9:	48 8b 05 b8 d7 00 00 	mov    0xd7b8(%rip),%rax        # 29f98 <efi_systab>
   1c7e0:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1c7e5:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
   1c7ea:	4c 8b 78 60          	mov    0x60(%rax),%r15
   1c7ee:	6a 00                	push   $0x0
   1c7f0:	53                   	push   %rbx
   1c7f1:	41 55                	push   %r13
   1c7f3:	55                   	push   %rbp
   1c7f4:	48 c7 05 a1 b2 00 00 	movq   $0x0,0xb2a1(%rip)        # 27aa0 <efi_file_root+0x80>
   1c7fb:	00 00 00 00 
   1c7ff:	48 83 ec 20          	sub    $0x20,%rsp
   1c803:	41 ff 97 48 01 00 00 	call   *0x148(%r15)
   1c80a:	48 83 c4 40          	add    $0x40,%rsp
   1c80e:	48 85 c0             	test   %rax,%rax
   1c811:	74 1a                	je     1c82d <efi_file_install+0x9f>
   1c813:	49 89 c4             	mov    %rax,%r12
   1c816:	49 c1 ec 38          	shr    $0x38,%r12
   1c81a:	41 09 c4             	or     %eax,%r12d
   1c81d:	45 0f b6 e4          	movzbl %r12b,%r12d
   1c821:	41 81 cc 00 e0 38 7f 	or     $0x7f38e000,%r12d
   1c828:	41 f7 dc             	neg    %r12d
   1c82b:	eb 7b                	jmp    1c8a8 <efi_file_install+0x11a>
   1c82d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c832:	6a 10                	push   $0x10
   1c834:	48 8d 15 45 81 00 00 	lea    0x8145(%rip),%rdx        # 24980 <efi_disk_io_protocol_guid>
   1c83b:	45 31 e4             	xor    %r12d,%r12d
   1c83e:	4c 8b 0d 43 d7 00 00 	mov    0xd743(%rip),%r9        # 29f88 <efi_image_handle>
   1c845:	51                   	push   %rcx
   1c846:	48 83 ec 20          	sub    $0x20,%rsp
   1c84a:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
   1c84f:	41 ff 97 18 01 00 00 	call   *0x118(%r15)
   1c856:	48 83 c4 30          	add    $0x30,%rsp
   1c85a:	48 8d 15 1f 81 00 00 	lea    0x811f(%rip),%rdx        # 24980 <efi_disk_io_protocol_guid>
   1c861:	48 85 c0             	test   %rax,%rax
   1c864:	74 42                	je     1c8a8 <efi_file_install+0x11a>
   1c866:	49 89 c4             	mov    %rax,%r12
   1c869:	6a 00                	push   $0x0
   1c86b:	49 89 d1             	mov    %rdx,%r9
   1c86e:	49 89 d8             	mov    %rbx,%r8
   1c871:	49 c1 ec 38          	shr    $0x38,%r12
   1c875:	4c 89 ea             	mov    %r13,%rdx
   1c878:	41 09 c4             	or     %eax,%r12d
   1c87b:	48 8d 05 5e b1 00 00 	lea    0xb15e(%rip),%rax        # 279e0 <efi_block_io_protocol>
   1c882:	50                   	push   %rax
   1c883:	45 0f b6 e4          	movzbl %r12b,%r12d
   1c887:	41 56                	push   %r14
   1c889:	41 81 cc 00 e0 38 7f 	or     $0x7f38e000,%r12d
   1c890:	55                   	push   %rbp
   1c891:	41 f7 dc             	neg    %r12d
   1c894:	48 83 ec 20          	sub    $0x20,%rsp
   1c898:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   1c89d:	41 ff 97 50 01 00 00 	call   *0x150(%r15)
   1c8a4:	48 83 c4 40          	add    $0x40,%rsp
   1c8a8:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1c8ad:	48 2b 05 bc d6 00 00 	sub    0xd6bc(%rip),%rax        # 29f70 <__stack_chk_guard>
   1c8b4:	74 05                	je     1c8bb <efi_file_install+0x12d>
   1c8b6:	e8 a5 61 fe ff       	call   2a60 <__stack_chk_fail>
   1c8bb:	48 83 c4 28          	add    $0x28,%rsp
   1c8bf:	44 89 e0             	mov    %r12d,%eax
   1c8c2:	5b                   	pop    %rbx
   1c8c3:	5d                   	pop    %rbp
   1c8c4:	41 5c                	pop    %r12
   1c8c6:	41 5d                	pop    %r13
   1c8c8:	41 5e                	pop    %r14
   1c8ca:	41 5f                	pop    %r15
   1c8cc:	c3                   	ret    

000000000001c8cd <efi_file_uninstall>:
   1c8cd:	f3 0f 1e fa          	endbr64 
   1c8d1:	41 54                	push   %r12
   1c8d3:	48 8b 05 be d6 00 00 	mov    0xd6be(%rip),%rax        # 29f98 <efi_systab>
   1c8da:	49 89 fc             	mov    %rdi,%r12
   1c8dd:	49 89 f9             	mov    %rdi,%r9
   1c8e0:	55                   	push   %rbp
   1c8e1:	48 8d 2d 98 80 00 00 	lea    0x8098(%rip),%rbp        # 24980 <efi_disk_io_protocol_guid>
   1c8e8:	48 89 f9             	mov    %rdi,%rcx
   1c8eb:	4c 8b 05 96 d6 00 00 	mov    0xd696(%rip),%r8        # 29f88 <efi_image_handle>
   1c8f2:	53                   	push   %rbx
   1c8f3:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1c8f7:	48 89 ea             	mov    %rbp,%rdx
   1c8fa:	48 83 ec 20          	sub    $0x20,%rsp
   1c8fe:	ff 93 20 01 00 00    	call   *0x120(%rbx)
   1c904:	48 83 c4 20          	add    $0x20,%rsp
   1c908:	49 89 e9             	mov    %rbp,%r9
   1c90b:	4c 89 e1             	mov    %r12,%rcx
   1c90e:	48 8d 05 cb b0 00 00 	lea    0xb0cb(%rip),%rax        # 279e0 <efi_block_io_protocol>
   1c915:	6a 00                	push   $0x0
   1c917:	4c 8d 05 f2 b0 00 00 	lea    0xb0f2(%rip),%r8        # 27a10 <efi_simple_file_system_protocol>
   1c91e:	50                   	push   %rax
   1c91f:	48 8d 05 ea 80 00 00 	lea    0x80ea(%rip),%rax        # 24a10 <efi_block_io_protocol_guid>
   1c926:	48 8d 15 f3 7e 00 00 	lea    0x7ef3(%rip),%rdx        # 24820 <efi_simple_file_system_protocol_guid>
   1c92d:	50                   	push   %rax
   1c92e:	48 8d 05 8b b0 00 00 	lea    0xb08b(%rip),%rax        # 279c0 <efi_disk_io_protocol>
   1c935:	50                   	push   %rax
   1c936:	48 83 ec 20          	sub    $0x20,%rsp
   1c93a:	ff 93 50 01 00 00    	call   *0x150(%rbx)
   1c940:	48 83 c4 40          	add    $0x40,%rsp
   1c944:	48 85 c0             	test   %rax,%rax
   1c947:	74 00                	je     1c949 <efi_file_uninstall+0x7c>
   1c949:	5b                   	pop    %rbx
   1c94a:	5d                   	pop    %rbp
   1c94b:	41 5c                	pop    %r12
   1c94d:	c3                   	ret    

000000000001c94e <efi_ifr_op>:
   1c94e:	31 c0                	xor    %eax,%eax
   1c950:	83 7f 2c 00          	cmpl   $0x0,0x2c(%rdi)
   1c954:	75 64                	jne    1c9ba <efi_ifr_op+0x6c>
   1c956:	41 55                	push   %r13
   1c958:	41 54                	push   %r12
   1c95a:	41 89 f4             	mov    %esi,%r12d
   1c95d:	55                   	push   %rbp
   1c95e:	48 89 d5             	mov    %rdx,%rbp
   1c961:	53                   	push   %rbx
   1c962:	48 89 fb             	mov    %rdi,%rbx
   1c965:	51                   	push   %rcx
   1c966:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
   1c96a:	48 8b 3f             	mov    (%rdi),%rdi
   1c96d:	49 01 d5             	add    %rdx,%r13
   1c970:	4c 89 ee             	mov    %r13,%rsi
   1c973:	e8 d2 fb fe ff       	call   c54a <realloc>
   1c978:	48 85 c0             	test   %rax,%rax
   1c97b:	75 09                	jne    1c986 <efi_ifr_op+0x38>
   1c97d:	c7 43 2c 01 00 00 00 	movl   $0x1,0x2c(%rbx)
   1c984:	eb 2c                	jmp    1c9b2 <efi_ifr_op+0x64>
   1c986:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1c98a:	48 89 03             	mov    %rax,(%rbx)
   1c98d:	48 89 e9             	mov    %rbp,%rcx
   1c990:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   1c994:	48 01 c2             	add    %rax,%rdx
   1c997:	31 c0                	xor    %eax,%eax
   1c999:	48 89 d7             	mov    %rdx,%rdi
   1c99c:	f3 aa                	rep stos %al,%es:(%rdi)
   1c99e:	8a 42 01             	mov    0x1(%rdx),%al
   1c9a1:	83 e5 7f             	and    $0x7f,%ebp
   1c9a4:	44 88 22             	mov    %r12b,(%rdx)
   1c9a7:	83 e0 80             	and    $0xffffff80,%eax
   1c9aa:	09 e8                	or     %ebp,%eax
   1c9ac:	88 42 01             	mov    %al,0x1(%rdx)
   1c9af:	48 89 d0             	mov    %rdx,%rax
   1c9b2:	5a                   	pop    %rdx
   1c9b3:	5b                   	pop    %rbx
   1c9b4:	5d                   	pop    %rbp
   1c9b5:	41 5c                	pop    %r12
   1c9b7:	41 5d                	pop    %r13
   1c9b9:	c3                   	ret    
   1c9ba:	c3                   	ret    

000000000001c9bb <efi_ifr_string>:
   1c9bb:	f3 0f 1e fa          	endbr64 
   1c9bf:	41 57                	push   %r15
   1c9c1:	41 56                	push   %r14
   1c9c3:	41 55                	push   %r13
   1c9c5:	41 54                	push   %r12
   1c9c7:	45 31 e4             	xor    %r12d,%r12d
   1c9ca:	55                   	push   %rbp
   1c9cb:	53                   	push   %rbx
   1c9cc:	48 83 ec 58          	sub    $0x58,%rsp
   1c9d0:	48 8b 05 99 d5 00 00 	mov    0xd599(%rip),%rax        # 29f70 <__stack_chk_guard>
   1c9d7:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1c9dc:	31 c0                	xor    %eax,%eax
   1c9de:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1c9e3:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   1c9e8:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1c9ed:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1c9f2:	83 7f 2c 00          	cmpl   $0x0,0x2c(%rdi)
   1c9f6:	0f 85 b0 00 00 00    	jne    1caac <efi_ifr_string+0xf1>
   1c9fc:	49 89 e6             	mov    %rsp,%r14
   1c9ff:	48 89 fb             	mov    %rdi,%rbx
   1ca02:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   1ca09:	00 
   1ca0a:	31 ff                	xor    %edi,%edi
   1ca0c:	48 89 f2             	mov    %rsi,%rdx
   1ca0f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ca14:	49 89 f5             	mov    %rsi,%r13
   1ca17:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1ca1c:	31 f6                	xor    %esi,%esi
   1ca1e:	4c 89 f1             	mov    %r14,%rcx
   1ca21:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ca26:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   1ca2d:	e8 a3 9e fe ff       	call   68d5 <efi_vsnprintf>
   1ca32:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1ca36:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1ca3a:	8d 68 01             	lea    0x1(%rax),%ebp
   1ca3d:	48 63 ed             	movslq %ebp,%rbp
   1ca40:	48 8d 44 2d 00       	lea    0x0(%rbp,%rbp,1),%rax
   1ca45:	4c 8d 7c 02 01       	lea    0x1(%rdx,%rax,1),%r15
   1ca4a:	4c 89 fe             	mov    %r15,%rsi
   1ca4d:	e8 f8 fa fe ff       	call   c54a <realloc>
   1ca52:	48 85 c0             	test   %rax,%rax
   1ca55:	75 09                	jne    1ca60 <efi_ifr_string+0xa5>
   1ca57:	c7 43 2c 01 00 00 00 	movl   $0x1,0x2c(%rbx)
   1ca5e:	eb 4c                	jmp    1caac <efi_ifr_string+0xf1>
   1ca60:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1ca64:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1ca68:	4c 89 f1             	mov    %r14,%rcx
   1ca6b:	4c 89 ea             	mov    %r13,%rdx
   1ca6e:	4c 89 7b 18          	mov    %r15,0x18(%rbx)
   1ca72:	48 89 ee             	mov    %rbp,%rsi
   1ca75:	48 01 c7             	add    %rax,%rdi
   1ca78:	48 8d 84 24 90 00 00 	lea    0x90(%rsp),%rax
   1ca7f:	00 
   1ca80:	c6 07 14             	movb   $0x14,(%rdi)
   1ca83:	48 ff c7             	inc    %rdi
   1ca86:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ca8b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1ca90:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
   1ca97:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ca9c:	e8 34 9e fe ff       	call   68d5 <efi_vsnprintf>
   1caa1:	8b 43 20             	mov    0x20(%rbx),%eax
   1caa4:	44 8d 60 01          	lea    0x1(%rax),%r12d
   1caa8:	44 89 63 20          	mov    %r12d,0x20(%rbx)
   1caac:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1cab1:	48 2b 05 b8 d4 00 00 	sub    0xd4b8(%rip),%rax        # 29f70 <__stack_chk_guard>
   1cab8:	74 05                	je     1cabf <efi_ifr_string+0x104>
   1caba:	e8 a1 5f fe ff       	call   2a60 <__stack_chk_fail>
   1cabf:	48 83 c4 58          	add    $0x58,%rsp
   1cac3:	44 89 e0             	mov    %r12d,%eax
   1cac6:	5b                   	pop    %rbx
   1cac7:	5d                   	pop    %rbp
   1cac8:	41 5c                	pop    %r12
   1caca:	41 5d                	pop    %r13
   1cacc:	41 5e                	pop    %r14
   1cace:	41 5f                	pop    %r15
   1cad0:	c3                   	ret    

000000000001cad1 <efi_ifr_end_op>:
   1cad1:	f3 0f 1e fa          	endbr64 
   1cad5:	ba 02 00 00 00       	mov    $0x2,%edx
   1cada:	be 29 00 00 00       	mov    $0x29,%esi
   1cadf:	e9 6a fe ff ff       	jmp    1c94e <efi_ifr_op>

000000000001cae4 <efi_ifr_form_op>:
   1cae4:	f3 0f 1e fa          	endbr64 
   1cae8:	55                   	push   %rbp
   1cae9:	89 f5                	mov    %esi,%ebp
   1caeb:	ba 06 00 00 00       	mov    $0x6,%edx
   1caf0:	be 01 00 00 00       	mov    $0x1,%esi
   1caf5:	53                   	push   %rbx
   1caf6:	48 89 fb             	mov    %rdi,%rbx
   1caf9:	51                   	push   %rcx
   1cafa:	e8 4f fe ff ff       	call   1c94e <efi_ifr_op>
   1caff:	48 89 c1             	mov    %rax,%rcx
   1cb02:	31 c0                	xor    %eax,%eax
   1cb04:	48 85 c9             	test   %rcx,%rcx
   1cb07:	74 18                	je     1cb21 <efi_ifr_form_op+0x3d>
   1cb09:	8b 43 28             	mov    0x28(%rbx),%eax
   1cb0c:	80 49 01 80          	orb    $0x80,0x1(%rcx)
   1cb10:	8d 50 01             	lea    0x1(%rax),%edx
   1cb13:	89 53 28             	mov    %edx,0x28(%rbx)
   1cb16:	0f b7 c2             	movzwl %dx,%eax
   1cb19:	66 89 51 02          	mov    %dx,0x2(%rcx)
   1cb1d:	66 89 69 04          	mov    %bp,0x4(%rcx)
   1cb21:	5a                   	pop    %rdx
   1cb22:	5b                   	pop    %rbx
   1cb23:	5d                   	pop    %rbp
   1cb24:	c3                   	ret    

000000000001cb25 <efi_ifr_form_set_op>:
   1cb25:	f3 0f 1e fa          	endbr64 
   1cb29:	41 55                	push   %r13
   1cb2b:	41 89 cd             	mov    %ecx,%r13d
   1cb2e:	41 54                	push   %r12
   1cb30:	41 89 d4             	mov    %edx,%r12d
   1cb33:	ba 20 00 00 00       	mov    $0x20,%edx
   1cb38:	55                   	push   %rbp
   1cb39:	31 ed                	xor    %ebp,%ebp
   1cb3b:	53                   	push   %rbx
   1cb3c:	48 89 f3             	mov    %rsi,%rbx
   1cb3f:	48 83 ec 58          	sub    $0x58,%rsp
   1cb43:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1cb48:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1cb4d:	48 8b 05 1c d4 00 00 	mov    0xd41c(%rip),%rax        # 29f70 <__stack_chk_guard>
   1cb54:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1cb59:	31 c0                	xor    %eax,%eax
   1cb5b:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
   1cb60:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1cb67:	00 
   1cb68:	c7 04 24 20 00 00 00 	movl   $0x20,(%rsp)
   1cb6f:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1cb74:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cb79:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1cb80:	00 
   1cb81:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1cb85:	83 fa 2f             	cmp    $0x2f,%edx
   1cb88:	77 0d                	ja     1cb97 <efi_ifr_form_set_op+0x72>
   1cb8a:	41 89 d0             	mov    %edx,%r8d
   1cb8d:	48 89 c1             	mov    %rax,%rcx
   1cb90:	83 c2 08             	add    $0x8,%edx
   1cb93:	4a 8d 04 06          	lea    (%rsi,%r8,1),%rax
   1cb97:	48 83 38 00          	cmpq   $0x0,(%rax)
   1cb9b:	74 07                	je     1cba4 <efi_ifr_form_set_op+0x7f>
   1cb9d:	ff c5                	inc    %ebp
   1cb9f:	48 89 c8             	mov    %rcx,%rax
   1cba2:	eb dd                	jmp    1cb81 <efi_ifr_form_set_op+0x5c>
   1cba4:	89 ea                	mov    %ebp,%edx
   1cba6:	be 0e 00 00 00       	mov    $0xe,%esi
   1cbab:	48 c1 e2 04          	shl    $0x4,%rdx
   1cbaf:	48 83 c2 17          	add    $0x17,%rdx
   1cbb3:	e8 96 fd ff ff       	call   1c94e <efi_ifr_op>
   1cbb8:	48 85 c0             	test   %rax,%rax
   1cbbb:	74 7a                	je     1cc37 <efi_ifr_form_set_op+0x112>
   1cbbd:	80 48 01 80          	orb    $0x80,0x1(%rax)
   1cbc1:	48 8d 78 02          	lea    0x2(%rax),%rdi
   1cbc5:	48 89 de             	mov    %rbx,%rsi
   1cbc8:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cbc9:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cbca:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cbcb:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cbcc:	66 44 89 60 12       	mov    %r12w,0x12(%rax)
   1cbd1:	48 8d 78 17          	lea    0x17(%rax),%rdi
   1cbd5:	66 44 89 68 14       	mov    %r13w,0x14(%rax)
   1cbda:	40 88 68 16          	mov    %bpl,0x16(%rax)
   1cbde:	48 8d 84 24 80 00 00 	lea    0x80(%rsp),%rax
   1cbe5:	00 
   1cbe6:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1cbeb:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
   1cbf0:	c7 04 24 20 00 00 00 	movl   $0x20,(%rsp)
   1cbf7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1cbfc:	85 ed                	test   %ebp,%ebp
   1cbfe:	74 37                	je     1cc37 <efi_ifr_form_set_op+0x112>
   1cc00:	8b 14 24             	mov    (%rsp),%edx
   1cc03:	83 fa 2f             	cmp    $0x2f,%edx
   1cc06:	77 0f                	ja     1cc17 <efi_ifr_form_set_op+0xf2>
   1cc08:	89 d0                	mov    %edx,%eax
   1cc0a:	83 c2 08             	add    $0x8,%edx
   1cc0d:	48 03 44 24 10       	add    0x10(%rsp),%rax
   1cc12:	89 14 24             	mov    %edx,(%rsp)
   1cc15:	eb 0e                	jmp    1cc25 <efi_ifr_form_set_op+0x100>
   1cc17:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1cc1c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1cc20:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1cc25:	48 8b 30             	mov    (%rax),%rsi
   1cc28:	48 8d 57 10          	lea    0x10(%rdi),%rdx
   1cc2c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cc2d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cc2e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cc2f:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cc30:	ff cd                	dec    %ebp
   1cc32:	48 89 d7             	mov    %rdx,%rdi
   1cc35:	eb c5                	jmp    1cbfc <efi_ifr_form_set_op+0xd7>
   1cc37:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1cc3c:	48 2b 05 2d d3 00 00 	sub    0xd32d(%rip),%rax        # 29f70 <__stack_chk_guard>
   1cc43:	74 05                	je     1cc4a <efi_ifr_form_set_op+0x125>
   1cc45:	e8 16 5e fe ff       	call   2a60 <__stack_chk_fail>
   1cc4a:	48 83 c4 58          	add    $0x58,%rsp
   1cc4e:	5b                   	pop    %rbx
   1cc4f:	5d                   	pop    %rbp
   1cc50:	41 5c                	pop    %r12
   1cc52:	41 5d                	pop    %r13
   1cc54:	c3                   	ret    

000000000001cc55 <efi_ifr_guid_class_op>:
   1cc55:	f3 0f 1e fa          	endbr64 
   1cc59:	53                   	push   %rbx
   1cc5a:	ba 15 00 00 00       	mov    $0x15,%edx
   1cc5f:	89 f3                	mov    %esi,%ebx
   1cc61:	be 5f 00 00 00       	mov    $0x5f,%esi
   1cc66:	e8 e3 fc ff ff       	call   1c94e <efi_ifr_op>
   1cc6b:	48 85 c0             	test   %rax,%rax
   1cc6e:	74 17                	je     1cc87 <efi_ifr_guid_class_op+0x32>
   1cc70:	48 8d 78 02          	lea    0x2(%rax),%rdi
   1cc74:	48 8d 35 f5 59 00 00 	lea    0x59f5(%rip),%rsi        # 22670 <tiano_guid>
   1cc7b:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cc7c:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cc7d:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cc7e:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cc7f:	c6 40 12 03          	movb   $0x3,0x12(%rax)
   1cc83:	66 89 58 13          	mov    %bx,0x13(%rax)
   1cc87:	5b                   	pop    %rbx
   1cc88:	c3                   	ret    

000000000001cc89 <efi_ifr_guid_subclass_op>:
   1cc89:	f3 0f 1e fa          	endbr64 
   1cc8d:	53                   	push   %rbx
   1cc8e:	ba 15 00 00 00       	mov    $0x15,%edx
   1cc93:	89 f3                	mov    %esi,%ebx
   1cc95:	be 5f 00 00 00       	mov    $0x5f,%esi
   1cc9a:	e8 af fc ff ff       	call   1c94e <efi_ifr_op>
   1cc9f:	48 85 c0             	test   %rax,%rax
   1cca2:	74 17                	je     1ccbb <efi_ifr_guid_subclass_op+0x32>
   1cca4:	48 8d 78 02          	lea    0x2(%rax),%rdi
   1cca8:	48 8d 35 c1 59 00 00 	lea    0x59c1(%rip),%rsi        # 22670 <tiano_guid>
   1ccaf:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ccb0:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ccb1:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ccb2:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ccb3:	c6 40 12 04          	movb   $0x4,0x12(%rax)
   1ccb7:	66 89 58 13          	mov    %bx,0x13(%rax)
   1ccbb:	5b                   	pop    %rbx
   1ccbc:	c3                   	ret    

000000000001ccbd <efi_ifr_string_op>:
   1ccbd:	f3 0f 1e fa          	endbr64 
   1ccc1:	41 56                	push   %r14
   1ccc3:	41 89 ce             	mov    %ecx,%r14d
   1ccc6:	41 55                	push   %r13
   1ccc8:	41 89 f5             	mov    %esi,%r13d
   1cccb:	be 1c 00 00 00       	mov    $0x1c,%esi
   1ccd0:	41 54                	push   %r12
   1ccd2:	41 89 d4             	mov    %edx,%r12d
   1ccd5:	ba 10 00 00 00       	mov    $0x10,%edx
   1ccda:	55                   	push   %rbp
   1ccdb:	44 89 c5             	mov    %r8d,%ebp
   1ccde:	53                   	push   %rbx
   1ccdf:	44 89 cb             	mov    %r9d,%ebx
   1cce2:	e8 67 fc ff ff       	call   1c94e <efi_ifr_op>
   1cce7:	48 85 c0             	test   %rax,%rax
   1ccea:	74 33                	je     1cd1f <efi_ifr_string_op+0x62>
   1ccec:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1ccf0:	66 44 89 68 02       	mov    %r13w,0x2(%rax)
   1ccf5:	66 44 89 60 04       	mov    %r12w,0x4(%rax)
   1ccfa:	88 50 0c             	mov    %dl,0xc(%rax)
   1ccfd:	8b 54 24 38          	mov    0x38(%rsp),%edx
   1cd01:	66 44 89 70 06       	mov    %r14w,0x6(%rax)
   1cd06:	88 50 0d             	mov    %dl,0xd(%rax)
   1cd09:	8b 54 24 40          	mov    0x40(%rsp),%edx
   1cd0d:	66 89 68 08          	mov    %bp,0x8(%rax)
   1cd11:	88 50 0e             	mov    %dl,0xe(%rax)
   1cd14:	8b 54 24 48          	mov    0x48(%rsp),%edx
   1cd18:	66 89 58 0a          	mov    %bx,0xa(%rax)
   1cd1c:	88 50 0f             	mov    %dl,0xf(%rax)
   1cd1f:	5b                   	pop    %rbx
   1cd20:	5d                   	pop    %rbp
   1cd21:	41 5c                	pop    %r12
   1cd23:	41 5d                	pop    %r13
   1cd25:	41 5e                	pop    %r14
   1cd27:	c3                   	ret    

000000000001cd28 <efi_ifr_text_op>:
   1cd28:	f3 0f 1e fa          	endbr64 
   1cd2c:	41 54                	push   %r12
   1cd2e:	41 89 f4             	mov    %esi,%r12d
   1cd31:	be 03 00 00 00       	mov    $0x3,%esi
   1cd36:	55                   	push   %rbp
   1cd37:	89 d5                	mov    %edx,%ebp
   1cd39:	ba 08 00 00 00       	mov    $0x8,%edx
   1cd3e:	53                   	push   %rbx
   1cd3f:	89 cb                	mov    %ecx,%ebx
   1cd41:	e8 08 fc ff ff       	call   1c94e <efi_ifr_op>
   1cd46:	48 85 c0             	test   %rax,%rax
   1cd49:	74 0d                	je     1cd58 <efi_ifr_text_op+0x30>
   1cd4b:	66 44 89 60 02       	mov    %r12w,0x2(%rax)
   1cd50:	66 89 68 04          	mov    %bp,0x4(%rax)
   1cd54:	66 89 58 06          	mov    %bx,0x6(%rax)
   1cd58:	5b                   	pop    %rbx
   1cd59:	5d                   	pop    %rbp
   1cd5a:	41 5c                	pop    %r12
   1cd5c:	c3                   	ret    

000000000001cd5d <efi_ifr_varstore_name_value_op>:
   1cd5d:	f3 0f 1e fa          	endbr64 
   1cd61:	55                   	push   %rbp
   1cd62:	ba 14 00 00 00       	mov    $0x14,%edx
   1cd67:	48 89 fd             	mov    %rdi,%rbp
   1cd6a:	53                   	push   %rbx
   1cd6b:	48 89 f3             	mov    %rsi,%rbx
   1cd6e:	be 25 00 00 00       	mov    $0x25,%esi
   1cd73:	51                   	push   %rcx
   1cd74:	e8 d5 fb ff ff       	call   1c94e <efi_ifr_op>
   1cd79:	45 31 c0             	xor    %r8d,%r8d
   1cd7c:	48 85 c0             	test   %rax,%rax
   1cd7f:	74 1d                	je     1cd9e <efi_ifr_varstore_name_value_op+0x41>
   1cd81:	8b 4d 24             	mov    0x24(%rbp),%ecx
   1cd84:	48 8d 78 04          	lea    0x4(%rax),%rdi
   1cd88:	48 89 de             	mov    %rbx,%rsi
   1cd8b:	8d 51 01             	lea    0x1(%rcx),%edx
   1cd8e:	89 55 24             	mov    %edx,0x24(%rbp)
   1cd91:	66 89 50 02          	mov    %dx,0x2(%rax)
   1cd95:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd96:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd97:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd98:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1cd99:	44 0f b7 40 02       	movzwl 0x2(%rax),%r8d
   1cd9e:	5a                   	pop    %rdx
   1cd9f:	44 89 c0             	mov    %r8d,%eax
   1cda2:	5b                   	pop    %rbx
   1cda3:	5d                   	pop    %rbp
   1cda4:	c3                   	ret    

000000000001cda5 <efi_ifr_free>:
   1cda5:	f3 0f 1e fa          	endbr64 
   1cda9:	53                   	push   %rbx
   1cdaa:	48 89 fb             	mov    %rdi,%rbx
   1cdad:	48 8b 3f             	mov    (%rdi),%rdi
   1cdb0:	e8 9a f8 fe ff       	call   c64f <free>
   1cdb5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1cdb9:	e8 91 f8 fe ff       	call   c64f <free>
   1cdbe:	48 89 df             	mov    %rbx,%rdi
   1cdc1:	b9 30 00 00 00       	mov    $0x30,%ecx
   1cdc6:	31 c0                	xor    %eax,%eax
   1cdc8:	f3 aa                	rep stos %al,%es:(%rdi)
   1cdca:	5b                   	pop    %rbx
   1cdcb:	c3                   	ret    

000000000001cdcc <efi_ifr_package>:
   1cdcc:	f3 0f 1e fa          	endbr64 
   1cdd0:	41 57                	push   %r15
   1cdd2:	41 56                	push   %r14
   1cdd4:	41 55                	push   %r13
   1cdd6:	41 54                	push   %r12
   1cdd8:	45 31 e4             	xor    %r12d,%r12d
   1cddb:	55                   	push   %rbp
   1cddc:	53                   	push   %rbx
   1cddd:	48 83 ec 38          	sub    $0x38,%rsp
   1cde1:	83 7f 2c 00          	cmpl   $0x0,0x2c(%rdi)
   1cde5:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
   1cdea:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1cdef:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
   1cdf3:	0f 85 17 01 00 00    	jne    1cf10 <efi_ifr_package+0x144>
   1cdf9:	4c 8b 7f 08          	mov    0x8(%rdi),%r15
   1cdfd:	49 89 fd             	mov    %rdi,%r13
   1ce00:	48 89 d7             	mov    %rdx,%rdi
   1ce03:	e8 32 6b ff ff       	call   1393a <strlen>
   1ce08:	4d 8b 75 18          	mov    0x18(%r13),%r14
   1ce0c:	48 8d 68 2f          	lea    0x2f(%rax),%rbp
   1ce10:	b8 2f 00 00 00       	mov    $0x2f,%eax
   1ce15:	48 39 c5             	cmp    %rax,%rbp
   1ce18:	48 0f 42 e8          	cmovb  %rax,%rbp
   1ce1c:	4a 8d 44 35 00       	lea    0x0(%rbp,%r14,1),%rax
   1ce21:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ce26:	4c 01 f8             	add    %r15,%rax
   1ce29:	48 8d 78 1d          	lea    0x1d(%rax),%rdi
   1ce2d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ce32:	e8 23 f8 fe ff       	call   c65a <zalloc>
   1ce37:	49 89 c4             	mov    %rax,%r12
   1ce3a:	48 85 c0             	test   %rax,%rax
   1ce3d:	0f 84 cd 00 00 00    	je     1cf10 <efi_ifr_package+0x144>
   1ce43:	46 8d 5c 35 00       	lea    0x0(%rbp,%r14,1),%r11d
   1ce48:	49 8d 5f 18          	lea    0x18(%r15),%rbx
   1ce4c:	4c 89 e7             	mov    %r12,%rdi
   1ce4f:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1ce54:	43 8d 44 3b 1d       	lea    0x1d(%r11,%r15,1),%eax
   1ce59:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   1ce5e:	41 89 44 24 10       	mov    %eax,0x10(%r12)
   1ce63:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ce64:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ce65:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ce66:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1ce67:	41 8d 47 04          	lea    0x4(%r15),%eax
   1ce6b:	49 8b 75 00          	mov    0x0(%r13),%rsi
   1ce6f:	4c 89 fa             	mov    %r15,%rdx
   1ce72:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   1ce77:	0f b6 cc             	movzbl %ah,%ecx
   1ce7a:	41 88 44 24 14       	mov    %al,0x14(%r12)
   1ce7f:	c1 e8 10             	shr    $0x10,%eax
   1ce82:	41 88 4c 24 15       	mov    %cl,0x15(%r12)
   1ce87:	41 88 44 24 16       	mov    %al,0x16(%r12)
   1ce8c:	41 c6 44 24 17 02    	movb   $0x2,0x17(%r12)
   1ce92:	e8 76 a4 ff ff       	call   1730d <__memcpy>
   1ce97:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
   1ce9c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   1cea1:	4b 8d 7c 3c 46       	lea    0x46(%r12,%r15,1),%rdi
   1cea6:	41 ff c3             	inc    %r11d
   1cea9:	44 89 d8             	mov    %r11d,%eax
   1ceac:	47 88 5c 3c 18       	mov    %r11b,0x18(%r12,%r15,1)
   1ceb1:	41 c1 eb 10          	shr    $0x10,%r11d
   1ceb5:	0f b6 c4             	movzbl %ah,%eax
   1ceb8:	45 88 5c 1c 02       	mov    %r11b,0x2(%r12,%rbx,1)
   1cebd:	41 88 44 1c 01       	mov    %al,0x1(%r12,%rbx,1)
   1cec2:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1cec6:	41 89 6c 1c 04       	mov    %ebp,0x4(%r12,%rbx,1)
   1cecb:	41 89 6c 1c 08       	mov    %ebp,0x8(%r12,%rbx,1)
   1ced0:	41 c6 44 1c 03 04    	movb   $0x4,0x3(%r12,%rbx,1)
   1ced6:	66 41 89 44 1c 2c    	mov    %ax,0x2c(%r12,%rbx,1)
   1cedc:	e8 d9 6a ff ff       	call   139ba <strcpy>
   1cee1:	48 8d 7c 1d 00       	lea    0x0(%rbp,%rbx,1),%rdi
   1cee6:	49 8b 75 10          	mov    0x10(%r13),%rsi
   1ceea:	4c 89 f2             	mov    %r14,%rdx
   1ceed:	4c 01 e7             	add    %r12,%rdi
   1cef0:	e8 18 a4 ff ff       	call   1730d <__memcpy>
   1cef5:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
   1cefa:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1ceff:	4c 01 e5             	add    %r12,%rbp
   1cf02:	c6 44 1d 00 00       	movb   $0x0,0x0(%rbp,%rbx,1)
   1cf07:	41 c7 44 04 19 04 00 	movl   $0xdf000004,0x19(%r12,%rax,1)
   1cf0e:	00 df 
   1cf10:	48 83 c4 38          	add    $0x38,%rsp
   1cf14:	4c 89 e0             	mov    %r12,%rax
   1cf17:	5b                   	pop    %rbx
   1cf18:	5d                   	pop    %rbp
   1cf19:	41 5c                	pop    %r12
   1cf1b:	41 5d                	pop    %r13
   1cf1d:	41 5e                	pop    %r14
   1cf1f:	41 5f                	pop    %r15
   1cf21:	c3                   	ret    

000000000001cf22 <efipci_root>:
   1cf22:	41 57                	push   %r15
   1cf24:	45 31 c0             	xor    %r8d,%r8d
   1cf27:	b9 02 00 00 00       	mov    $0x2,%ecx
   1cf2c:	41 56                	push   %r14
   1cf2e:	4c 8d 35 1b 79 00 00 	lea    0x791b(%rip),%r14        # 24850 <efi_pci_root_bridge_io_protocol_guid>
   1cf35:	41 55                	push   %r13
   1cf37:	49 89 d5             	mov    %rdx,%r13
   1cf3a:	4c 89 f2             	mov    %r14,%rdx
   1cf3d:	41 54                	push   %r12
   1cf3f:	55                   	push   %rbp
   1cf40:	48 89 f5             	mov    %rsi,%rbp
   1cf43:	53                   	push   %rbx
   1cf44:	48 83 ec 40          	sub    $0x40,%rsp
   1cf48:	48 8b 05 21 d0 00 00 	mov    0xd021(%rip),%rax        # 29f70 <__stack_chk_guard>
   1cf4f:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1cf54:	48 8b 05 3d d0 00 00 	mov    0xd03d(%rip),%rax        # 29f98 <efi_systab>
   1cf5b:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1cf60:	4c 8b 60 60          	mov    0x60(%rax),%r12
   1cf64:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
   1cf69:	50                   	push   %rax
   1cf6a:	48 83 ec 20          	sub    $0x20,%rsp
   1cf6e:	4c 8d 4c 24 48       	lea    0x48(%rsp),%r9
   1cf73:	41 ff 94 24 38 01 00 	call   *0x138(%r12)
   1cf7a:	00 
   1cf7b:	48 83 c4 30          	add    $0x30,%rsp
   1cf7f:	48 89 c3             	mov    %rax,%rbx
   1cf82:	4c 8d 7c 24 20       	lea    0x20(%rsp),%r15
   1cf87:	48 85 c0             	test   %rax,%rax
   1cf8a:	74 45                	je     1cfd1 <efipci_root+0xaf>
   1cf8c:	48 c1 e8 38          	shr    $0x38,%rax
   1cf90:	09 d8                	or     %ebx,%eax
   1cf92:	0f b6 c0             	movzbl %al,%eax
   1cf95:	0d 00 e0 10 7f       	or     $0x7f10e000,%eax
   1cf9a:	f7 d8                	neg    %eax
   1cf9c:	e9 a6 00 00 00       	jmp    1d047 <efipci_root+0x125>
   1cfa1:	48 8b 0c d9          	mov    (%rcx,%rbx,8),%rcx
   1cfa5:	6a 02                	push   $0x2
   1cfa7:	4d 89 f8             	mov    %r15,%r8
   1cfaa:	4c 89 f2             	mov    %r14,%rdx
   1cfad:	51                   	push   %rcx
   1cfae:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
   1cfb2:	4c 8b 0d cf cf 00 00 	mov    0xcfcf(%rip),%r9        # 29f88 <efi_image_handle>
   1cfb9:	48 83 ec 20          	sub    $0x20,%rsp
   1cfbd:	41 ff 94 24 18 01 00 	call   *0x118(%r12)
   1cfc4:	00 
   1cfc5:	48 83 c4 30          	add    $0x30,%rsp
   1cfc9:	48 85 c0             	test   %rax,%rax
   1cfcc:	74 11                	je     1cfdf <efipci_root+0xbd>
   1cfce:	48 ff c3             	inc    %rbx
   1cfd1:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1cfd6:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
   1cfdb:	77 c4                	ja     1cfa1 <efipci_root+0x7f>
   1cfdd:	eb 56                	jmp    1d035 <efipci_root+0x113>
   1cfdf:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1cfe4:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1cfe9:	0f b7 96 9e 00 00 00 	movzwl 0x9e(%rsi),%edx
   1cff0:	39 90 90 00 00 00    	cmp    %edx,0x90(%rax)
   1cff6:	75 1a                	jne    1d012 <efipci_root+0xf0>
   1cff8:	48 83 ec 20          	sub    $0x20,%rsp
   1cffc:	49 89 45 00          	mov    %rax,0x0(%r13)
   1d000:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1d005:	41 ff 54 24 48       	call   *0x48(%r12)
   1d00a:	48 83 c4 20          	add    $0x20,%rsp
   1d00e:	31 c0                	xor    %eax,%eax
   1d010:	eb 35                	jmp    1d047 <efipci_root+0x125>
   1d012:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   1d016:	48 83 ec 20          	sub    $0x20,%rsp
   1d01a:	4c 8b 05 67 cf 00 00 	mov    0xcf67(%rip),%r8        # 29f88 <efi_image_handle>
   1d021:	4c 89 f2             	mov    %r14,%rdx
   1d024:	49 89 c9             	mov    %rcx,%r9
   1d027:	41 ff 94 24 20 01 00 	call   *0x120(%r12)
   1d02e:	00 
   1d02f:	48 83 c4 20          	add    $0x20,%rsp
   1d033:	eb 99                	jmp    1cfce <efipci_root+0xac>
   1d035:	48 83 ec 20          	sub    $0x20,%rsp
   1d039:	41 ff 54 24 48       	call   *0x48(%r12)
   1d03e:	48 83 c4 20          	add    $0x20,%rsp
   1d042:	b8 72 1f ef d2       	mov    $0xd2ef1f72,%eax
   1d047:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   1d04c:	48 2b 15 1d cf 00 00 	sub    0xcf1d(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1d053:	74 05                	je     1d05a <efipci_root+0x138>
   1d055:	e8 06 5a fe ff       	call   2a60 <__stack_chk_fail>
   1d05a:	48 83 c4 38          	add    $0x38,%rsp
   1d05e:	5b                   	pop    %rbx
   1d05f:	5d                   	pop    %rbp
   1d060:	41 5c                	pop    %r12
   1d062:	41 5d                	pop    %r13
   1d064:	41 5e                	pop    %r14
   1d066:	41 5f                	pop    %r15
   1d068:	c3                   	ret    

000000000001d069 <efipci_address.isra.0>:
   1d069:	89 f8                	mov    %edi,%eax
   1d06b:	89 fa                	mov    %edi,%edx
   1d06d:	48 c1 e7 08          	shl    $0x8,%rdi
   1d071:	c1 e8 08             	shr    $0x8,%eax
   1d074:	c1 ea 03             	shr    $0x3,%edx
   1d077:	81 e7 00 07 00 00    	and    $0x700,%edi
   1d07d:	48 c1 e0 18          	shl    $0x18,%rax
   1d081:	48 c1 e2 10          	shl    $0x10,%rdx
   1d085:	89 c0                	mov    %eax,%eax
   1d087:	81 e2 00 00 1f 00    	and    $0x1f0000,%edx
   1d08d:	48 09 d0             	or     %rdx,%rax
   1d090:	48 09 f8             	or     %rdi,%rax
   1d093:	f7 c6 00 ff 00 00    	test   $0xff00,%esi
   1d099:	75 05                	jne    1d0a0 <efipci_address.isra.0+0x37>
   1d09b:	0f b7 f6             	movzwl %si,%esi
   1d09e:	eb 10                	jmp    1d0b0 <efipci_address.isra.0+0x47>
   1d0a0:	ba ff ff 00 00       	mov    $0xffff,%edx
   1d0a5:	48 c1 e6 20          	shl    $0x20,%rsi
   1d0a9:	48 c1 e2 20          	shl    $0x20,%rdx
   1d0ad:	48 21 d6             	and    %rdx,%rsi
   1d0b0:	48 09 f0             	or     %rsi,%rax
   1d0b3:	c3                   	ret    

000000000001d0b4 <efipci_read>:
   1d0b4:	f3 0f 1e fa          	endbr64 
   1d0b8:	41 56                	push   %r14
   1d0ba:	49 89 d6             	mov    %rdx,%r14
   1d0bd:	41 55                	push   %r13
   1d0bf:	49 89 fd             	mov    %rdi,%r13
   1d0c2:	41 54                	push   %r12
   1d0c4:	55                   	push   %rbp
   1d0c5:	53                   	push   %rbx
   1d0c6:	48 89 f3             	mov    %rsi,%rbx
   1d0c9:	48 83 ec 20          	sub    $0x20,%rsp
   1d0cd:	48 8b 05 9c ce 00 00 	mov    0xce9c(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d0d4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1d0d9:	48 8b 05 b8 ce 00 00 	mov    0xceb8(%rip),%rax        # 29f98 <efi_systab>
   1d0e0:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1d0e5:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1d0ea:	48 8b 68 60          	mov    0x60(%rax),%rbp
   1d0ee:	e8 2f fe ff ff       	call   1cf22 <efipci_root>
   1d0f3:	41 89 c4             	mov    %eax,%r12d
   1d0f6:	85 c0                	test   %eax,%eax
   1d0f8:	75 72                	jne    1d16c <efipci_read+0xb8>
   1d0fa:	41 8b bd 9c 00 00 00 	mov    0x9c(%r13),%edi
   1d101:	48 89 de             	mov    %rbx,%rsi
   1d104:	48 c1 eb 10          	shr    $0x10,%rbx
   1d108:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1d10d:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1d113:	e8 51 ff ff ff       	call   1d069 <efipci_address.isra.0>
   1d118:	89 da                	mov    %ebx,%edx
   1d11a:	49 89 c0             	mov    %rax,%r8
   1d11d:	50                   	push   %rax
   1d11e:	41 56                	push   %r14
   1d120:	48 83 ec 20          	sub    $0x20,%rsp
   1d124:	ff 51 38             	call   *0x38(%rcx)
   1d127:	48 83 c4 30          	add    $0x30,%rsp
   1d12b:	48 85 c0             	test   %rax,%rax
   1d12e:	74 18                	je     1d148 <efipci_read+0x94>
   1d130:	49 89 c4             	mov    %rax,%r12
   1d133:	49 c1 ec 38          	shr    $0x38,%r12
   1d137:	41 09 c4             	or     %eax,%r12d
   1d13a:	45 0f b6 e4          	movzbl %r12b,%r12d
   1d13e:	41 81 cc 00 e0 10 7f 	or     $0x7f10e000,%r12d
   1d145:	41 f7 dc             	neg    %r12d
   1d148:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1d14d:	48 83 ec 20          	sub    $0x20,%rsp
   1d151:	4c 8b 05 30 ce 00 00 	mov    0xce30(%rip),%r8        # 29f88 <efi_image_handle>
   1d158:	48 8d 15 f1 76 00 00 	lea    0x76f1(%rip),%rdx        # 24850 <efi_pci_root_bridge_io_protocol_guid>
   1d15f:	49 89 c9             	mov    %rcx,%r9
   1d162:	ff 95 20 01 00 00    	call   *0x120(%rbp)
   1d168:	48 83 c4 20          	add    $0x20,%rsp
   1d16c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1d171:	48 2b 05 f8 cd 00 00 	sub    0xcdf8(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d178:	74 05                	je     1d17f <efipci_read+0xcb>
   1d17a:	e8 e1 58 fe ff       	call   2a60 <__stack_chk_fail>
   1d17f:	48 83 c4 20          	add    $0x20,%rsp
   1d183:	44 89 e0             	mov    %r12d,%eax
   1d186:	5b                   	pop    %rbx
   1d187:	5d                   	pop    %rbp
   1d188:	41 5c                	pop    %r12
   1d18a:	41 5d                	pop    %r13
   1d18c:	41 5e                	pop    %r14
   1d18e:	c3                   	ret    

000000000001d18f <efipci_write>:
   1d18f:	f3 0f 1e fa          	endbr64 
   1d193:	41 55                	push   %r13
   1d195:	49 89 fd             	mov    %rdi,%r13
   1d198:	41 54                	push   %r12
   1d19a:	55                   	push   %rbp
   1d19b:	53                   	push   %rbx
   1d19c:	48 89 f3             	mov    %rsi,%rbx
   1d19f:	48 83 ec 38          	sub    $0x38,%rsp
   1d1a3:	48 8b 05 c6 cd 00 00 	mov    0xcdc6(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d1aa:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d1af:	48 8b 05 e2 cd 00 00 	mov    0xcde2(%rip),%rax        # 29f98 <efi_systab>
   1d1b6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1d1bb:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
   1d1c0:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   1d1c5:	48 8b 68 60          	mov    0x60(%rax),%rbp
   1d1c9:	e8 54 fd ff ff       	call   1cf22 <efipci_root>
   1d1ce:	41 89 c4             	mov    %eax,%r12d
   1d1d1:	85 c0                	test   %eax,%eax
   1d1d3:	75 76                	jne    1d24b <efipci_write+0xbc>
   1d1d5:	41 8b bd 9c 00 00 00 	mov    0x9c(%r13),%edi
   1d1dc:	48 89 de             	mov    %rbx,%rsi
   1d1df:	48 c1 eb 10          	shr    $0x10,%rbx
   1d1e3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1d1e8:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1d1ee:	e8 76 fe ff ff       	call   1d069 <efipci_address.isra.0>
   1d1f3:	89 da                	mov    %ebx,%edx
   1d1f5:	49 89 c0             	mov    %rax,%r8
   1d1f8:	50                   	push   %rax
   1d1f9:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
   1d1fe:	50                   	push   %rax
   1d1ff:	48 83 ec 20          	sub    $0x20,%rsp
   1d203:	ff 51 40             	call   *0x40(%rcx)
   1d206:	48 83 c4 30          	add    $0x30,%rsp
   1d20a:	48 85 c0             	test   %rax,%rax
   1d20d:	74 18                	je     1d227 <efipci_write+0x98>
   1d20f:	49 89 c4             	mov    %rax,%r12
   1d212:	49 c1 ec 38          	shr    $0x38,%r12
   1d216:	41 09 c4             	or     %eax,%r12d
   1d219:	45 0f b6 e4          	movzbl %r12b,%r12d
   1d21d:	41 81 cc 00 e0 10 7f 	or     $0x7f10e000,%r12d
   1d224:	41 f7 dc             	neg    %r12d
   1d227:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1d22c:	48 83 ec 20          	sub    $0x20,%rsp
   1d230:	4c 8b 05 51 cd 00 00 	mov    0xcd51(%rip),%r8        # 29f88 <efi_image_handle>
   1d237:	48 8d 15 12 76 00 00 	lea    0x7612(%rip),%rdx        # 24850 <efi_pci_root_bridge_io_protocol_guid>
   1d23e:	49 89 c9             	mov    %rcx,%r9
   1d241:	ff 95 20 01 00 00    	call   *0x120(%rbp)
   1d247:	48 83 c4 20          	add    $0x20,%rsp
   1d24b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d250:	48 2b 05 19 cd 00 00 	sub    0xcd19(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d257:	74 05                	je     1d25e <efipci_write+0xcf>
   1d259:	e8 02 58 fe ff       	call   2a60 <__stack_chk_fail>
   1d25e:	48 83 c4 38          	add    $0x38,%rsp
   1d262:	44 89 e0             	mov    %r12d,%eax
   1d265:	5b                   	pop    %rbx
   1d266:	5d                   	pop    %rbp
   1d267:	41 5c                	pop    %r12
   1d269:	41 5d                	pop    %r13
   1d26b:	c3                   	ret    

000000000001d26c <efipci_open>:
   1d26c:	f3 0f 1e fa          	endbr64 
   1d270:	41 56                	push   %r14
   1d272:	4c 8d 35 e7 75 00 00 	lea    0x75e7(%rip),%r14        # 24860 <efi_pci_io_protocol_guid>
   1d279:	48 89 f9             	mov    %rdi,%rcx
   1d27c:	41 55                	push   %r13
   1d27e:	49 89 fd             	mov    %rdi,%r13
   1d281:	41 54                	push   %r12
   1d283:	49 89 d4             	mov    %rdx,%r12
   1d286:	4c 89 f2             	mov    %r14,%rdx
   1d289:	53                   	push   %rbx
   1d28a:	48 83 ec 38          	sub    $0x38,%rsp
   1d28e:	4c 8b 0d f3 cc 00 00 	mov    0xccf3(%rip),%r9        # 29f88 <efi_image_handle>
   1d295:	48 8b 05 d4 cc 00 00 	mov    0xccd4(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d29c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1d2a1:	48 8b 05 f0 cc 00 00 	mov    0xccf0(%rip),%rax        # 29f98 <efi_systab>
   1d2a8:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1d2ac:	56                   	push   %rsi
   1d2ad:	57                   	push   %rdi
   1d2ae:	48 83 ec 20          	sub    $0x20,%rsp
   1d2b2:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   1d2b7:	ff 93 18 01 00 00    	call   *0x118(%rbx)
   1d2bd:	48 83 c4 30          	add    $0x30,%rsp
   1d2c1:	48 85 c0             	test   %rax,%rax
   1d2c4:	74 1d                	je     1d2e3 <efipci_open+0x77>
   1d2c6:	49 89 c4             	mov    %rax,%r12
   1d2c9:	49 c1 ec 38          	shr    $0x38,%r12
   1d2cd:	41 09 c4             	or     %eax,%r12d
   1d2d0:	45 0f b6 e4          	movzbl %r12b,%r12d
   1d2d4:	41 81 cc 00 e1 10 7f 	or     $0x7f10e100,%r12d
   1d2db:	41 f7 dc             	neg    %r12d
   1d2de:	e9 f3 00 00 00       	jmp    1d3d6 <efipci_open+0x16a>
   1d2e3:	48 8b 04 24          	mov    (%rsp),%rax
   1d2e7:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   1d2ec:	51                   	push   %rcx
   1d2ed:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   1d2f2:	51                   	push   %rcx
   1d2f3:	48 89 c1             	mov    %rax,%rcx
   1d2f6:	48 83 ec 20          	sub    $0x20,%rsp
   1d2fa:	4c 8d 4c 24 48       	lea    0x48(%rsp),%r9
   1d2ff:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
   1d304:	ff 50 70             	call   *0x70(%rax)
   1d307:	48 83 c4 30          	add    $0x30,%rsp
   1d30b:	48 85 c0             	test   %rax,%rax
   1d30e:	74 1d                	je     1d32d <efipci_open+0xc1>
   1d310:	49 89 c4             	mov    %rax,%r12
   1d313:	49 c1 ec 38          	shr    $0x38,%r12
   1d317:	41 09 c4             	or     %eax,%r12d
   1d31a:	45 0f b6 e4          	movzbl %r12b,%r12d
   1d31e:	41 81 cc 00 e0 10 7f 	or     $0x7f10e000,%r12d
   1d325:	41 f7 dc             	neg    %r12d
   1d328:	e9 8b 00 00 00       	jmp    1d3b8 <efipci_open+0x14c>
   1d32d:	8b 44 24 08          	mov    0x8(%rsp),%eax
   1d331:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d335:	48 83 ec 20          	sub    $0x20,%rsp
   1d339:	45 31 c9             	xor    %r9d,%r9d
   1d33c:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1d340:	41 b8 00 01 00 00    	mov    $0x100,%r8d
   1d346:	c1 e2 08             	shl    $0x8,%edx
   1d349:	c1 e0 10             	shl    $0x10,%eax
   1d34c:	09 d0                	or     %edx,%eax
   1d34e:	8d 14 f5 00 00 00 00 	lea    0x0(,%rsi,8),%edx
   1d355:	0b 44 24 40          	or     0x40(%rsp),%eax
   1d359:	09 d0                	or     %edx,%eax
   1d35b:	ba 02 00 00 00       	mov    $0x2,%edx
   1d360:	41 89 84 24 9c 00 00 	mov    %eax,0x9c(%r12)
   1d367:	00 
   1d368:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d36d:	48 89 c1             	mov    %rax,%rcx
   1d370:	ff 50 78             	call   *0x78(%rax)
   1d373:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d378:	45 31 c9             	xor    %r9d,%r9d
   1d37b:	ba 02 00 00 00       	mov    $0x2,%edx
   1d380:	41 b8 00 02 00 00    	mov    $0x200,%r8d
   1d386:	48 89 c1             	mov    %rax,%rcx
   1d389:	ff 50 78             	call   *0x78(%rax)
   1d38c:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1d391:	45 31 c9             	xor    %r9d,%r9d
   1d394:	ba 02 00 00 00       	mov    $0x2,%edx
   1d399:	41 b8 00 04 00 00    	mov    $0x400,%r8d
   1d39f:	48 89 c1             	mov    %rax,%rcx
   1d3a2:	ff 50 78             	call   *0x78(%rax)
   1d3a5:	4c 89 e7             	mov    %r12,%rdi
   1d3a8:	48 83 c4 20          	add    $0x20,%rsp
   1d3ac:	e8 46 1f ff ff       	call   f2f7 <pci_read_config>
   1d3b1:	41 89 c4             	mov    %eax,%r12d
   1d3b4:	85 c0                	test   %eax,%eax
   1d3b6:	74 1e                	je     1d3d6 <efipci_open+0x16a>
   1d3b8:	48 83 ec 20          	sub    $0x20,%rsp
   1d3bc:	4d 89 e9             	mov    %r13,%r9
   1d3bf:	4c 89 f2             	mov    %r14,%rdx
   1d3c2:	4c 89 e9             	mov    %r13,%rcx
   1d3c5:	4c 8b 05 bc cb 00 00 	mov    0xcbbc(%rip),%r8        # 29f88 <efi_image_handle>
   1d3cc:	ff 93 20 01 00 00    	call   *0x120(%rbx)
   1d3d2:	48 83 c4 20          	add    $0x20,%rsp
   1d3d6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d3db:	48 2b 05 8e cb 00 00 	sub    0xcb8e(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d3e2:	74 05                	je     1d3e9 <efipci_open+0x17d>
   1d3e4:	e8 77 56 fe ff       	call   2a60 <__stack_chk_fail>
   1d3e9:	48 83 c4 38          	add    $0x38,%rsp
   1d3ed:	44 89 e0             	mov    %r12d,%eax
   1d3f0:	5b                   	pop    %rbx
   1d3f1:	41 5c                	pop    %r12
   1d3f3:	41 5d                	pop    %r13
   1d3f5:	41 5e                	pop    %r14
   1d3f7:	c3                   	ret    

000000000001d3f8 <efipci_close>:
   1d3f8:	f3 0f 1e fa          	endbr64 
   1d3fc:	48 83 ec 28          	sub    $0x28,%rsp
   1d400:	48 89 f9             	mov    %rdi,%rcx
   1d403:	48 8b 05 8e cb 00 00 	mov    0xcb8e(%rip),%rax        # 29f98 <efi_systab>
   1d40a:	4c 8b 05 77 cb 00 00 	mov    0xcb77(%rip),%r8        # 29f88 <efi_image_handle>
   1d411:	49 89 f9             	mov    %rdi,%r9
   1d414:	48 8d 15 45 74 00 00 	lea    0x7445(%rip),%rdx        # 24860 <efi_pci_io_protocol_guid>
   1d41b:	48 8b 40 60          	mov    0x60(%rax),%rax
   1d41f:	ff 90 20 01 00 00    	call   *0x120(%rax)
   1d425:	48 83 c4 28          	add    $0x28,%rsp
   1d429:	c3                   	ret    

000000000001d42a <efipci_stop>:
   1d42a:	f3 0f 1e fa          	endbr64 
   1d42e:	41 54                	push   %r12
   1d430:	55                   	push   %rbp
   1d431:	50                   	push   %rax
   1d432:	48 8b af 98 00 00 00 	mov    0x98(%rdi),%rbp
   1d439:	4c 8b a7 80 00 00 00 	mov    0x80(%rdi),%r12
   1d440:	48 89 ef             	mov    %rbp,%rdi
   1d443:	e8 68 21 ff ff       	call   f5b0 <pci_remove>
   1d448:	48 8b 55 58          	mov    0x58(%rbp),%rdx
   1d44c:	48 8b 45 60          	mov    0x60(%rbp),%rax
   1d450:	4c 89 e7             	mov    %r12,%rdi
   1d453:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1d457:	48 89 10             	mov    %rdx,(%rax)
   1d45a:	e8 99 ff ff ff       	call   1d3f8 <efipci_close>
   1d45f:	5a                   	pop    %rdx
   1d460:	48 89 ef             	mov    %rbp,%rdi
   1d463:	5d                   	pop    %rbp
   1d464:	41 5c                	pop    %r12
   1d466:	e9 e4 f1 fe ff       	jmp    c64f <free>

000000000001d46b <efipci_start>:
   1d46b:	f3 0f 1e fa          	endbr64 
   1d46f:	41 55                	push   %r13
   1d471:	41 54                	push   %r12
   1d473:	55                   	push   %rbp
   1d474:	53                   	push   %rbx
   1d475:	48 89 fb             	mov    %rdi,%rbx
   1d478:	51                   	push   %rcx
   1d479:	48 8b af 80 00 00 00 	mov    0x80(%rdi),%rbp
   1d480:	bf b8 00 00 00       	mov    $0xb8,%edi
   1d485:	e8 d0 f1 fe ff       	call   c65a <zalloc>
   1d48a:	48 85 c0             	test   %rax,%rax
   1d48d:	75 08                	jne    1d497 <efipci_start+0x2c>
   1d48f:	41 bc 77 1f ef ce    	mov    $0xceef1f77,%r12d
   1d495:	eb 73                	jmp    1d50a <efipci_start+0x9f>
   1d497:	48 89 c2             	mov    %rax,%rdx
   1d49a:	be 30 00 00 00       	mov    $0x30,%esi
   1d49f:	48 89 ef             	mov    %rbp,%rdi
   1d4a2:	49 89 c5             	mov    %rax,%r13
   1d4a5:	e8 c2 fd ff ff       	call   1d26c <efipci_open>
   1d4aa:	41 89 c4             	mov    %eax,%r12d
   1d4ad:	85 c0                	test   %eax,%eax
   1d4af:	75 51                	jne    1d502 <efipci_start+0x97>
   1d4b1:	4c 89 ef             	mov    %r13,%rdi
   1d4b4:	e8 64 20 ff ff       	call   f51d <pci_find_driver>
   1d4b9:	41 89 c4             	mov    %eax,%r12d
   1d4bc:	85 c0                	test   %eax,%eax
   1d4be:	75 3a                	jne    1d4fa <efipci_start+0x8f>
   1d4c0:	49 89 5d 78          	mov    %rbx,0x78(%r13)
   1d4c4:	48 8d 73 68          	lea    0x68(%rbx),%rsi
   1d4c8:	49 8d 7d 58          	lea    0x58(%r13),%rdi
   1d4cc:	e8 f0 eb fe ff       	call   c0c1 <extern_list_add>
   1d4d1:	4c 89 ef             	mov    %r13,%rdi
   1d4d4:	e8 c9 20 ff ff       	call   f5a2 <pci_probe>
   1d4d9:	41 89 c4             	mov    %eax,%r12d
   1d4dc:	85 c0                	test   %eax,%eax
   1d4de:	74 11                	je     1d4f1 <efipci_start+0x86>
   1d4e0:	49 8b 55 58          	mov    0x58(%r13),%rdx
   1d4e4:	49 8b 45 60          	mov    0x60(%r13),%rax
   1d4e8:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1d4ec:	48 89 10             	mov    %rdx,(%rax)
   1d4ef:	eb 09                	jmp    1d4fa <efipci_start+0x8f>
   1d4f1:	4c 89 ab 98 00 00 00 	mov    %r13,0x98(%rbx)
   1d4f8:	eb 10                	jmp    1d50a <efipci_start+0x9f>
   1d4fa:	48 89 ef             	mov    %rbp,%rdi
   1d4fd:	e8 f6 fe ff ff       	call   1d3f8 <efipci_close>
   1d502:	4c 89 ef             	mov    %r13,%rdi
   1d505:	e8 45 f1 fe ff       	call   c64f <free>
   1d50a:	5a                   	pop    %rdx
   1d50b:	44 89 e0             	mov    %r12d,%eax
   1d50e:	5b                   	pop    %rbx
   1d50f:	5d                   	pop    %rbp
   1d510:	41 5c                	pop    %r12
   1d512:	41 5d                	pop    %r13
   1d514:	c3                   	ret    

000000000001d515 <efipci_info>:
   1d515:	f3 0f 1e fa          	endbr64 
   1d519:	48 83 ec 18          	sub    $0x18,%rsp
   1d51d:	48 89 f2             	mov    %rsi,%rdx
   1d520:	be 02 00 00 00       	mov    $0x2,%esi
   1d525:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   1d52a:	e8 3d fd ff ff       	call   1d26c <efipci_open>
   1d52f:	85 c0                	test   %eax,%eax
   1d531:	75 12                	jne    1d545 <efipci_info+0x30>
   1d533:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1d538:	89 44 24 04          	mov    %eax,0x4(%rsp)
   1d53c:	e8 b7 fe ff ff       	call   1d3f8 <efipci_close>
   1d541:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1d545:	48 83 c4 18          	add    $0x18,%rsp
   1d549:	c3                   	ret    

000000000001d54a <efipci_supported>:
   1d54a:	f3 0f 1e fa          	endbr64 
   1d54e:	55                   	push   %rbp
   1d54f:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1d556:	48 8b 05 13 ca 00 00 	mov    0xca13(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d55d:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1d564:	00 
   1d565:	31 c0                	xor    %eax,%eax
   1d567:	48 89 e5             	mov    %rsp,%rbp
   1d56a:	48 89 ee             	mov    %rbp,%rsi
   1d56d:	e8 a3 ff ff ff       	call   1d515 <efipci_info>
   1d572:	85 c0                	test   %eax,%eax
   1d574:	75 08                	jne    1d57e <efipci_supported+0x34>
   1d576:	48 89 ef             	mov    %rbp,%rdi
   1d579:	e8 9f 1f ff ff       	call   f51d <pci_find_driver>
   1d57e:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   1d585:	00 
   1d586:	48 2b 15 e3 c9 00 00 	sub    0xc9e3(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1d58d:	74 05                	je     1d594 <efipci_supported+0x4a>
   1d58f:	e8 cc 54 fe ff       	call   2a60 <__stack_chk_fail>
   1d594:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   1d59b:	5d                   	pop    %rbp
   1d59c:	c3                   	ret    

000000000001d59d <reboot>:
   1d59d:	f3 0f 1e fa          	endbr64 
   1d5a1:	48 83 ec 28          	sub    $0x28,%rsp
   1d5a5:	48 8b 05 ec c9 00 00 	mov    0xc9ec(%rip),%rax        # 29f98 <efi_systab>
   1d5ac:	31 c9                	xor    %ecx,%ecx
   1d5ae:	85 ff                	test   %edi,%edi
   1d5b0:	0f 95 c1             	setne  %cl
   1d5b3:	45 31 c9             	xor    %r9d,%r9d
   1d5b6:	45 31 c0             	xor    %r8d,%r8d
   1d5b9:	31 d2                	xor    %edx,%edx
   1d5bb:	48 8b 40 58          	mov    0x58(%rax),%rax
   1d5bf:	ff 50 68             	call   *0x68(%rax)
   1d5c2:	48 83 c4 28          	add    $0x28,%rsp
   1d5c6:	c3                   	ret    

000000000001d5c7 <time_now>:
   1d5c7:	f3 0f 1e fa          	endbr64 
   1d5cb:	48 83 ec 48          	sub    $0x48,%rsp
   1d5cf:	31 d2                	xor    %edx,%edx
   1d5d1:	48 8b 05 98 c9 00 00 	mov    0xc998(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d5d8:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1d5dd:	31 c0                	xor    %eax,%eax
   1d5df:	48 8b 05 b2 c9 00 00 	mov    0xc9b2(%rip),%rax        # 29f98 <efi_systab>
   1d5e6:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
   1d5eb:	48 83 ec 20          	sub    $0x20,%rsp
   1d5ef:	48 8b 40 58          	mov    0x58(%rax),%rax
   1d5f3:	ff 50 18             	call   *0x18(%rax)
   1d5f6:	48 83 c4 20          	add    $0x20,%rsp
   1d5fa:	48 85 c0             	test   %rax,%rax
   1d5fd:	74 04                	je     1d603 <time_now+0x3c>
   1d5ff:	31 c0                	xor    %eax,%eax
   1d601:	eb 56                	jmp    1d659 <time_now+0x92>
   1d603:	4c 8d 44 24 14       	lea    0x14(%rsp),%r8
   1d608:	b9 24 00 00 00       	mov    $0x24,%ecx
   1d60d:	31 c0                	xor    %eax,%eax
   1d60f:	4c 89 c7             	mov    %r8,%rdi
   1d612:	f3 aa                	rep stos %al,%es:(%rdi)
   1d614:	0f b6 44 24 0a       	movzbl 0xa(%rsp),%eax
   1d619:	4c 89 c7             	mov    %r8,%rdi
   1d61c:	89 44 24 14          	mov    %eax,0x14(%rsp)
   1d620:	0f b6 44 24 09       	movzbl 0x9(%rsp),%eax
   1d625:	89 44 24 18          	mov    %eax,0x18(%rsp)
   1d629:	0f b6 44 24 08       	movzbl 0x8(%rsp),%eax
   1d62e:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   1d632:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
   1d637:	89 44 24 20          	mov    %eax,0x20(%rsp)
   1d63b:	0f b6 44 24 06       	movzbl 0x6(%rsp),%eax
   1d640:	ff c8                	dec    %eax
   1d642:	89 44 24 24          	mov    %eax,0x24(%rsp)
   1d646:	0f b7 44 24 04       	movzwl 0x4(%rsp),%eax
   1d64b:	2d 6c 07 00 00       	sub    $0x76c,%eax
   1d650:	89 44 24 28          	mov    %eax,0x28(%rsp)
   1d654:	e8 00 85 ff ff       	call   15b59 <mktime>
   1d659:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   1d65e:	48 2b 15 0b c9 00 00 	sub    0xc90b(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1d665:	74 05                	je     1d66c <time_now+0xa5>
   1d667:	e8 f4 53 fe ff       	call   2a60 <__stack_chk_fail>
   1d66c:	48 83 c4 48          	add    $0x48,%rsp
   1d670:	c3                   	ret    

000000000001d671 <efi_currticks>:
   1d671:	f3 0f 1e fa          	endbr64 
   1d675:	48 8b 05 1c c9 00 00 	mov    0xc91c(%rip),%rax        # 29f98 <efi_systab>
   1d67c:	83 3d f5 c8 00 00 00 	cmpl   $0x0,0xc8f5(%rip)        # 29f78 <efi_shutdown_in_progress>
   1d683:	53                   	push   %rbx
   1d684:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1d688:	74 09                	je     1d693 <efi_currticks+0x22>
   1d68a:	48 ff 05 47 c8 00 00 	incq   0xc847(%rip)        # 29ed8 <efi_jiffies>
   1d691:	eb 18                	jmp    1d6ab <efi_currticks+0x3a>
   1d693:	48 83 ec 20          	sub    $0x20,%rsp
   1d697:	b9 04 00 00 00       	mov    $0x4,%ecx
   1d69c:	ff 53 20             	call   *0x20(%rbx)
   1d69f:	b9 08 00 00 00       	mov    $0x8,%ecx
   1d6a4:	ff 53 18             	call   *0x18(%rbx)
   1d6a7:	48 83 c4 20          	add    $0x20,%rsp
   1d6ab:	48 8b 05 26 c8 00 00 	mov    0xc826(%rip),%rax        # 29ed8 <efi_jiffies>
   1d6b2:	5b                   	pop    %rbx
   1d6b3:	48 c1 e0 05          	shl    $0x5,%rax
   1d6b7:	c3                   	ret    

000000000001d6b8 <efi_tick>:
   1d6b8:	f3 0f 1e fa          	endbr64 
   1d6bc:	48 ff 05 15 c8 00 00 	incq   0xc815(%rip)        # 29ed8 <efi_jiffies>
   1d6c3:	c3                   	ret    

000000000001d6c4 <efi_tick_startup>:
   1d6c4:	f3 0f 1e fa          	endbr64 
   1d6c8:	48 8b 05 c9 c8 00 00 	mov    0xc8c9(%rip),%rax        # 29f98 <efi_systab>
   1d6cf:	53                   	push   %rbx
   1d6d0:	45 31 c9             	xor    %r9d,%r9d
   1d6d3:	ba 08 00 00 00       	mov    $0x8,%edx
   1d6d8:	4c 8d 05 d9 ff ff ff 	lea    -0x27(%rip),%r8        # 1d6b8 <efi_tick>
   1d6df:	b9 00 02 00 80       	mov    $0x80000200,%ecx
   1d6e4:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1d6e8:	50                   	push   %rax
   1d6e9:	48 8d 05 e0 c7 00 00 	lea    0xc7e0(%rip),%rax        # 29ed0 <efi_tick_event>
   1d6f0:	50                   	push   %rax
   1d6f1:	48 83 ec 20          	sub    $0x20,%rsp
   1d6f5:	ff 53 50             	call   *0x50(%rbx)
   1d6f8:	48 83 c4 30          	add    $0x30,%rsp
   1d6fc:	48 85 c0             	test   %rax,%rax
   1d6ff:	74 02                	je     1d703 <efi_tick_startup+0x3f>
   1d701:	eb 22                	jmp    1d725 <efi_tick_startup+0x61>
   1d703:	48 83 ec 20          	sub    $0x20,%rsp
   1d707:	41 b8 b4 c4 04 00    	mov    $0x4c4b4,%r8d
   1d70d:	ba 01 00 00 00       	mov    $0x1,%edx
   1d712:	48 8b 0d b7 c7 00 00 	mov    0xc7b7(%rip),%rcx        # 29ed0 <efi_tick_event>
   1d719:	ff 53 58             	call   *0x58(%rbx)
   1d71c:	48 83 c4 20          	add    $0x20,%rsp
   1d720:	48 85 c0             	test   %rax,%rax
   1d723:	74 00                	je     1d725 <efi_tick_startup+0x61>
   1d725:	5b                   	pop    %rbx
   1d726:	c3                   	ret    

000000000001d727 <efi_tick_shutdown>:
   1d727:	f3 0f 1e fa          	endbr64 
   1d72b:	48 8b 05 66 c8 00 00 	mov    0xc866(%rip),%rax        # 29f98 <efi_systab>
   1d732:	53                   	push   %rbx
   1d733:	45 31 c0             	xor    %r8d,%r8d
   1d736:	31 d2                	xor    %edx,%edx
   1d738:	48 8b 0d 91 c7 00 00 	mov    0xc791(%rip),%rcx        # 29ed0 <efi_tick_event>
   1d73f:	48 8b 58 60          	mov    0x60(%rax),%rbx
   1d743:	48 83 ec 20          	sub    $0x20,%rsp
   1d747:	ff 53 58             	call   *0x58(%rbx)
   1d74a:	48 83 c4 20          	add    $0x20,%rsp
   1d74e:	48 85 c0             	test   %rax,%rax
   1d751:	74 02                	je     1d755 <efi_tick_shutdown+0x2e>
   1d753:	eb 17                	jmp    1d76c <efi_tick_shutdown+0x45>
   1d755:	48 83 ec 20          	sub    $0x20,%rsp
   1d759:	48 8b 0d 70 c7 00 00 	mov    0xc770(%rip),%rcx        # 29ed0 <efi_tick_event>
   1d760:	ff 53 70             	call   *0x70(%rbx)
   1d763:	48 83 c4 20          	add    $0x20,%rsp
   1d767:	48 85 c0             	test   %rax,%rax
   1d76a:	74 00                	je     1d76c <efi_tick_shutdown+0x45>
   1d76c:	5b                   	pop    %rbx
   1d76d:	c3                   	ret    

000000000001d76e <efi_udelay>:
   1d76e:	f3 0f 1e fa          	endbr64 
   1d772:	48 83 ec 28          	sub    $0x28,%rsp
   1d776:	48 8b 05 1b c8 00 00 	mov    0xc81b(%rip),%rax        # 29f98 <efi_systab>
   1d77d:	48 89 f9             	mov    %rdi,%rcx
   1d780:	48 8b 40 60          	mov    0x60(%rax),%rax
   1d784:	ff 90 f8 00 00 00    	call   *0xf8(%rax)
   1d78a:	48 83 c4 20          	add    $0x20,%rsp
   1d78e:	48 85 c0             	test   %rax,%rax
   1d791:	74 00                	je     1d793 <efi_udelay+0x25>
   1d793:	58                   	pop    %rax
   1d794:	c3                   	ret    

000000000001d795 <urealloc>:
   1d795:	f3 0f 1e fa          	endbr64 
   1d799:	41 57                	push   %r15
   1d79b:	41 56                	push   %r14
   1d79d:	41 55                	push   %r13
   1d79f:	41 54                	push   %r12
   1d7a1:	49 89 fc             	mov    %rdi,%r12
   1d7a4:	55                   	push   %rbp
   1d7a5:	53                   	push   %rbx
   1d7a6:	48 89 f3             	mov    %rsi,%rbx
   1d7a9:	48 83 ec 18          	sub    $0x18,%rsp
   1d7ad:	48 8b 05 bc c7 00 00 	mov    0xc7bc(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d7b4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d7b9:	48 8b 05 d8 c7 00 00 	mov    0xc7d8(%rip),%rax        # 29f98 <efi_systab>
   1d7c0:	4c 8b 68 60          	mov    0x60(%rax),%r13
   1d7c4:	48 85 f6             	test   %rsi,%rsi
   1d7c7:	74 49                	je     1d812 <urealloc+0x7d>
   1d7c9:	48 89 f0             	mov    %rsi,%rax
   1d7cc:	49 89 f0             	mov    %rsi,%r8
   1d7cf:	ba 04 00 00 00       	mov    $0x4,%edx
   1d7d4:	25 ff 0f 00 00       	and    $0xfff,%eax
   1d7d9:	49 c1 e8 0c          	shr    $0xc,%r8
   1d7dd:	48 83 f8 01          	cmp    $0x1,%rax
   1d7e1:	41 83 d8 fe          	sbb    $0xfffffffe,%r8d
   1d7e5:	48 83 ec 20          	sub    $0x20,%rsp
   1d7e9:	31 c9                	xor    %ecx,%ecx
   1d7eb:	4c 8d 4c 24 20       	lea    0x20(%rsp),%r9
   1d7f0:	41 ff 55 28          	call   *0x28(%r13)
   1d7f4:	48 83 c4 20          	add    $0x20,%rsp
   1d7f8:	48 85 c0             	test   %rax,%rax
   1d7fb:	74 05                	je     1d802 <urealloc+0x6d>
   1d7fd:	45 31 f6             	xor    %r14d,%r14d
   1d800:	eb 70                	jmp    1d872 <urealloc+0xdd>
   1d802:	48 8b 04 24          	mov    (%rsp),%rax
   1d806:	48 89 18             	mov    %rbx,(%rax)
   1d809:	4c 8d b0 00 10 00 00 	lea    0x1000(%rax),%r14
   1d810:	eb 04                	jmp    1d816 <urealloc+0x81>
   1d812:	49 83 ce ff          	or     $0xffffffffffffffff,%r14
   1d816:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
   1d81b:	48 83 f8 fd          	cmp    $0xfffffffffffffffd,%rax
   1d81f:	77 51                	ja     1d872 <urealloc+0xdd>
   1d821:	49 8b ac 24 00 f0 ff 	mov    -0x1000(%r12),%rbp
   1d828:	ff 
   1d829:	4c 89 e6             	mov    %r12,%rsi
   1d82c:	4c 89 f7             	mov    %r14,%rdi
   1d82f:	4d 8d bc 24 00 f0 ff 	lea    -0x1000(%r12),%r15
   1d836:	ff 
   1d837:	48 39 eb             	cmp    %rbp,%rbx
   1d83a:	48 0f 47 dd          	cmova  %rbp,%rbx
   1d83e:	48 89 da             	mov    %rbx,%rdx
   1d841:	e8 c7 9a ff ff       	call   1730d <__memcpy>
   1d846:	48 89 ea             	mov    %rbp,%rdx
   1d849:	4c 89 3c 24          	mov    %r15,(%rsp)
   1d84d:	4c 89 f9             	mov    %r15,%rcx
   1d850:	81 e5 ff 0f 00 00    	and    $0xfff,%ebp
   1d856:	48 c1 ea 0c          	shr    $0xc,%rdx
   1d85a:	48 83 fd 01          	cmp    $0x1,%rbp
   1d85e:	83 da fe             	sbb    $0xfffffffe,%edx
   1d861:	48 83 ec 20          	sub    $0x20,%rsp
   1d865:	41 ff 55 30          	call   *0x30(%r13)
   1d869:	48 83 c4 20          	add    $0x20,%rsp
   1d86d:	48 85 c0             	test   %rax,%rax
   1d870:	74 00                	je     1d872 <urealloc+0xdd>
   1d872:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d877:	48 2b 05 f2 c6 00 00 	sub    0xc6f2(%rip),%rax        # 29f70 <__stack_chk_guard>
   1d87e:	74 05                	je     1d885 <urealloc+0xf0>
   1d880:	e8 db 51 fe ff       	call   2a60 <__stack_chk_fail>
   1d885:	48 83 c4 18          	add    $0x18,%rsp
   1d889:	4c 89 f0             	mov    %r14,%rax
   1d88c:	5b                   	pop    %rbx
   1d88d:	5d                   	pop    %rbp
   1d88e:	41 5c                	pop    %r12
   1d890:	41 5d                	pop    %r13
   1d892:	41 5e                	pop    %r14
   1d894:	41 5f                	pop    %r15
   1d896:	c3                   	ret    

000000000001d897 <cpu_nap>:
   1d897:	f3 0f 1e fa          	endbr64 
   1d89b:	f4                   	hlt    
   1d89c:	c3                   	ret    

000000000001d89d <eth_push>:
   1d89d:	f3 0f 1e fa          	endbr64 
   1d8a1:	48 8b 46 18          	mov    0x18(%rsi),%rax
   1d8a5:	48 8d 78 f2          	lea    -0xe(%rax),%rdi
   1d8a9:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
   1d8ad:	8b 32                	mov    (%rdx),%esi
   1d8af:	89 70 f2             	mov    %esi,-0xe(%rax)
   1d8b2:	8b 52 04             	mov    0x4(%rdx),%edx
   1d8b5:	66 89 50 f6          	mov    %dx,-0xa(%rax)
   1d8b9:	8b 11                	mov    (%rcx),%edx
   1d8bb:	89 50 f8             	mov    %edx,-0x8(%rax)
   1d8be:	8b 51 04             	mov    0x4(%rcx),%edx
   1d8c1:	66 44 89 40 fe       	mov    %r8w,-0x2(%rax)
   1d8c6:	66 89 50 fc          	mov    %dx,-0x4(%rax)
   1d8ca:	31 c0                	xor    %eax,%eax
   1d8cc:	c3                   	ret    

000000000001d8cd <eth_pull>:
   1d8cd:	f3 0f 1e fa          	endbr64 
   1d8d1:	48 8b 46 18          	mov    0x18(%rsi),%rax
   1d8d5:	48 8b 7e 20          	mov    0x20(%rsi),%rdi
   1d8d9:	48 29 c7             	sub    %rax,%rdi
   1d8dc:	48 83 ff 0f          	cmp    $0xf,%rdi
   1d8e0:	77 08                	ja     1d8ea <eth_pull+0x1d>
   1d8e2:	41 b9 7e 9f fc e3    	mov    $0xe3fc9f7e,%r9d
   1d8e8:	eb 53                	jmp    1d93d <eth_pull+0x70>
   1d8ea:	48 8d 78 0e          	lea    0xe(%rax),%rdi
   1d8ee:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
   1d8f2:	48 89 02             	mov    %rax,(%rdx)
   1d8f5:	48 8d 50 06          	lea    0x6(%rax),%rdx
   1d8f9:	48 89 11             	mov    %rdx,(%rcx)
   1d8fc:	66 8b 50 0c          	mov    0xc(%rax),%dx
   1d900:	66 41 89 10          	mov    %dx,(%r8)
   1d904:	8a 08                	mov    (%rax),%cl
   1d906:	8a 50 01             	mov    0x1(%rax),%dl
   1d909:	21 ca                	and    %ecx,%edx
   1d90b:	22 50 02             	and    0x2(%rax),%dl
   1d90e:	22 50 03             	and    0x3(%rax),%dl
   1d911:	22 50 04             	and    0x4(%rax),%dl
   1d914:	22 50 05             	and    0x5(%rax),%dl
   1d917:	fe c2                	inc    %dl
   1d919:	0f 94 c2             	sete   %dl
   1d91c:	83 e1 01             	and    $0x1,%ecx
   1d91f:	0f b6 d2             	movzbl %dl,%edx
   1d922:	01 d2                	add    %edx,%edx
   1d924:	09 ca                	or     %ecx,%edx
   1d926:	41 89 11             	mov    %edx,(%r9)
   1d929:	45 31 c9             	xor    %r9d,%r9d
   1d92c:	80 78 0c 05          	cmpb   $0x5,0xc(%rax)
   1d930:	77 0b                	ja     1d93d <eth_pull+0x70>
   1d932:	48 8b 46 18          	mov    0x18(%rsi),%rax
   1d936:	66 8b 00             	mov    (%rax),%ax
   1d939:	66 41 89 00          	mov    %ax,(%r8)
   1d93d:	44 89 c8             	mov    %r9d,%eax
   1d940:	c3                   	ret    

000000000001d941 <eth_init_addr>:
   1d941:	f3 0f 1e fa          	endbr64 
   1d945:	8b 07                	mov    (%rdi),%eax
   1d947:	89 06                	mov    %eax,(%rsi)
   1d949:	8b 47 04             	mov    0x4(%rdi),%eax
   1d94c:	66 89 46 04          	mov    %ax,0x4(%rsi)
   1d950:	c3                   	ret    

000000000001d951 <eth_eth_addr>:
   1d951:	f3 0f 1e fa          	endbr64 
   1d955:	8b 07                	mov    (%rdi),%eax
   1d957:	89 06                	mov    %eax,(%rsi)
   1d959:	8b 47 04             	mov    0x4(%rdi),%eax
   1d95c:	66 89 46 04          	mov    %ax,0x4(%rsi)
   1d960:	31 c0                	xor    %eax,%eax
   1d962:	c3                   	ret    

000000000001d963 <eth_eui64>:
   1d963:	f3 0f 1e fa          	endbr64 
   1d967:	8b 07                	mov    (%rdi),%eax
   1d969:	66 89 06             	mov    %ax,(%rsi)
   1d96c:	8a 47 02             	mov    0x2(%rdi),%al
   1d96f:	88 46 02             	mov    %al,0x2(%rsi)
   1d972:	8b 47 03             	mov    0x3(%rdi),%eax
   1d975:	66 89 46 05          	mov    %ax,0x5(%rsi)
   1d979:	8a 47 05             	mov    0x5(%rdi),%al
   1d97c:	66 c7 46 03 ff fe    	movw   $0xfeff,0x3(%rsi)
   1d982:	88 46 07             	mov    %al,0x7(%rsi)
   1d985:	31 c0                	xor    %eax,%eax
   1d987:	c3                   	ret    

000000000001d988 <eth_ntoa>:
   1d988:	f3 0f 1e fa          	endbr64 
   1d98c:	41 54                	push   %r12
   1d98e:	0f b6 0f             	movzbl (%rdi),%ecx
   1d991:	4c 8d 25 58 c5 00 00 	lea    0xc558(%rip),%r12        # 29ef0 <buf.0>
   1d998:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1d99c:	50                   	push   %rax
   1d99d:	0f b6 47 05          	movzbl 0x5(%rdi),%eax
   1d9a1:	48 8d 15 f6 66 00 00 	lea    0x66f6(%rip),%rdx        # 2409e <.LC0>
   1d9a8:	50                   	push   %rax
   1d9a9:	0f b6 47 04          	movzbl 0x4(%rdi),%eax
   1d9ad:	50                   	push   %rax
   1d9ae:	0f b6 47 03          	movzbl 0x3(%rdi),%eax
   1d9b2:	50                   	push   %rax
   1d9b3:	44 0f b6 4f 02       	movzbl 0x2(%rdi),%r9d
   1d9b8:	31 c0                	xor    %eax,%eax
   1d9ba:	44 0f b6 47 01       	movzbl 0x1(%rdi),%r8d
   1d9bf:	4c 89 e7             	mov    %r12,%rdi
   1d9c2:	e8 ba 96 ff ff       	call   17081 <snprintf>
   1d9c7:	48 83 c4 20          	add    $0x20,%rsp
   1d9cb:	4c 89 e0             	mov    %r12,%rax
   1d9ce:	41 5c                	pop    %r12
   1d9d0:	c3                   	ret    

000000000001d9d1 <eth_mc_hash>:
   1d9d1:	f3 0f 1e fa          	endbr64 
   1d9d5:	83 ff 01             	cmp    $0x1,%edi
   1d9d8:	74 12                	je     1d9ec <eth_mc_hash+0x1b>
   1d9da:	83 ff 02             	cmp    $0x2,%edi
   1d9dd:	75 2e                	jne    1da0d <eth_mc_hash+0x3c>
   1d9df:	66 c7 02 33 33       	movw   $0x3333,(%rdx)
   1d9e4:	8b 46 0c             	mov    0xc(%rsi),%eax
   1d9e7:	89 42 02             	mov    %eax,0x2(%rdx)
   1d9ea:	eb 1e                	jmp    1da0a <eth_mc_hash+0x39>
   1d9ec:	66 c7 02 01 00       	movw   $0x1,(%rdx)
   1d9f1:	c6 42 02 5e          	movb   $0x5e,0x2(%rdx)
   1d9f5:	8a 46 01             	mov    0x1(%rsi),%al
   1d9f8:	83 e0 7f             	and    $0x7f,%eax
   1d9fb:	88 42 03             	mov    %al,0x3(%rdx)
   1d9fe:	8a 46 02             	mov    0x2(%rsi),%al
   1da01:	88 42 04             	mov    %al,0x4(%rdx)
   1da04:	8a 46 03             	mov    0x3(%rsi),%al
   1da07:	88 42 05             	mov    %al,0x5(%rdx)
   1da0a:	31 c0                	xor    %eax,%eax
   1da0c:	c3                   	ret    
   1da0d:	b8 7d 9f fc c3       	mov    $0xc3fc9f7d,%eax
   1da12:	c3                   	ret    

000000000001da13 <alloc_etherdev>:
   1da13:	f3 0f 1e fa          	endbr64 
   1da17:	51                   	push   %rcx
   1da18:	e8 a2 02 ff ff       	call   dcbf <alloc_netdev>
   1da1d:	48 85 c0             	test   %rax,%rax
   1da20:	74 2c                	je     1da4e <alloc_etherdev+0x3b>
   1da22:	48 8d 15 f7 b1 00 00 	lea    0xb1f7(%rip),%rdx        # 28c20 <ethernet_protocol>
   1da29:	48 8d 0d 40 70 00 00 	lea    0x7040(%rip),%rcx        # 24a70 <eth_broadcast>
   1da30:	48 c7 80 d8 00 00 00 	movq   $0x5ea,0xd8(%rax)
   1da37:	ea 05 00 00 
   1da3b:	48 89 50 50          	mov    %rdx,0x50(%rax)
   1da3f:	48 89 48 78          	mov    %rcx,0x78(%rax)
   1da43:	48 c7 80 e0 00 00 00 	movq   $0x5dc,0xe0(%rax)
   1da4a:	dc 05 00 00 
   1da4e:	5a                   	pop    %rdx
   1da4f:	c3                   	ret    

000000000001da50 <process_on_success>:
   1da50:	f3 0f 1e fa          	endbr64 
   1da54:	31 c0                	xor    %eax,%eax
   1da56:	85 ff                	test   %edi,%edi
   1da58:	0f 94 c0             	sete   %al
   1da5b:	c3                   	ret    

000000000001da5c <process_on_failure>:
   1da5c:	f3 0f 1e fa          	endbr64 
   1da60:	31 c0                	xor    %eax,%eax
   1da62:	85 ff                	test   %edi,%edi
   1da64:	0f 95 c0             	setne  %al
   1da67:	c3                   	ret    

000000000001da68 <process_always>:
   1da68:	f3 0f 1e fa          	endbr64 
   1da6c:	b8 01 00 00 00       	mov    $0x1,%eax
   1da71:	c3                   	ret    

000000000001da72 <split_command>:
   1da72:	41 54                	push   %r12
   1da74:	45 31 e4             	xor    %r12d,%r12d
   1da77:	55                   	push   %rbp
   1da78:	48 89 f5             	mov    %rsi,%rbp
   1da7b:	53                   	push   %rbx
   1da7c:	48 89 fb             	mov    %rdi,%rbx
   1da7f:	0f be 3b             	movsbl (%rbx),%edi
   1da82:	e8 29 b9 ff ff       	call   193b0 <isspace>
   1da87:	85 c0                	test   %eax,%eax
   1da89:	74 0d                	je     1da98 <split_command+0x26>
   1da8b:	48 85 ed             	test   %rbp,%rbp
   1da8e:	74 03                	je     1da93 <split_command+0x21>
   1da90:	c6 03 00             	movb   $0x0,(%rbx)
   1da93:	48 ff c3             	inc    %rbx
   1da96:	eb e7                	jmp    1da7f <split_command+0xd>
   1da98:	80 3b 00             	cmpb   $0x0,(%rbx)
   1da9b:	74 26                	je     1dac3 <split_command+0x51>
   1da9d:	48 85 ed             	test   %rbp,%rbp
   1daa0:	74 08                	je     1daaa <split_command+0x38>
   1daa2:	49 63 c4             	movslq %r12d,%rax
   1daa5:	48 89 5c c5 00       	mov    %rbx,0x0(%rbp,%rax,8)
   1daaa:	41 ff c4             	inc    %r12d
   1daad:	0f be 3b             	movsbl (%rbx),%edi
   1dab0:	40 84 ff             	test   %dil,%dil
   1dab3:	74 ca                	je     1da7f <split_command+0xd>
   1dab5:	e8 f6 b8 ff ff       	call   193b0 <isspace>
   1daba:	85 c0                	test   %eax,%eax
   1dabc:	75 c1                	jne    1da7f <split_command+0xd>
   1dabe:	48 ff c3             	inc    %rbx
   1dac1:	eb ea                	jmp    1daad <split_command+0x3b>
   1dac3:	44 89 e0             	mov    %r12d,%eax
   1dac6:	5b                   	pop    %rbx
   1dac7:	5d                   	pop    %rbp
   1dac8:	41 5c                	pop    %r12
   1daca:	c3                   	ret    

000000000001dacb <exit_exec>:
   1dacb:	f3 0f 1e fa          	endbr64 
   1dacf:	55                   	push   %rbp
   1dad0:	48 8d 15 39 a0 00 00 	lea    0xa039(%rip),%rdx        # 27b10 <exit_cmd>
   1dad7:	89 fd                	mov    %edi,%ebp
   1dad9:	53                   	push   %rbx
   1dada:	48 89 f3             	mov    %rsi,%rbx
   1dadd:	48 83 ec 18          	sub    $0x18,%rsp
   1dae1:	48 8d 4c 24 03       	lea    0x3(%rsp),%rcx
   1dae6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   1daed:	00 
   1daee:	48 8b 05 7b c4 00 00 	mov    0xc47b(%rip),%rax        # 29f70 <__stack_chk_guard>
   1daf5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1dafa:	31 c0                	xor    %eax,%eax
   1dafc:	e8 ae 16 ff ff       	call   f1af <parse_options>
   1db01:	85 c0                	test   %eax,%eax
   1db03:	75 2d                	jne    1db32 <exit_exec+0x67>
   1db05:	48 63 05 9c c4 00 00 	movslq 0xc49c(%rip),%rax        # 29fa8 <optind>
   1db0c:	39 e8                	cmp    %ebp,%eax
   1db0e:	75 10                	jne    1db20 <exit_exec+0x55>
   1db10:	c7 05 f6 c3 00 00 02 	movl   $0x2,0xc3f6(%rip)        # 29f10 <stop_state>
   1db17:	00 00 00 
   1db1a:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1db1e:	eb 12                	jmp    1db32 <exit_exec+0x67>
   1db20:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
   1db24:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   1db29:	e8 44 11 ff ff       	call   ec72 <parse_integer>
   1db2e:	85 c0                	test   %eax,%eax
   1db30:	74 de                	je     1db10 <exit_exec+0x45>
   1db32:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1db37:	48 2b 15 32 c4 00 00 	sub    0xc432(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1db3e:	74 05                	je     1db45 <exit_exec+0x7a>
   1db40:	e8 1b 4f fe ff       	call   2a60 <__stack_chk_fail>
   1db45:	48 83 c4 18          	add    $0x18,%rsp
   1db49:	5b                   	pop    %rbx
   1db4a:	5d                   	pop    %rbp
   1db4b:	c3                   	ret    

000000000001db4c <isset_exec>:
   1db4c:	f3 0f 1e fa          	endbr64 
   1db50:	53                   	push   %rbx
   1db51:	48 8d 15 98 9f 00 00 	lea    0x9f98(%rip),%rdx        # 27af0 <isset_cmd>
   1db58:	48 89 f3             	mov    %rsi,%rbx
   1db5b:	48 83 ec 10          	sub    $0x10,%rsp
   1db5f:	48 8b 05 0a c4 00 00 	mov    0xc40a(%rip),%rax        # 29f70 <__stack_chk_guard>
   1db66:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1db6b:	31 c0                	xor    %eax,%eax
   1db6d:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   1db72:	e8 38 16 ff ff       	call   f1af <parse_options>
   1db77:	85 c0                	test   %eax,%eax
   1db79:	75 15                	jne    1db90 <isset_exec+0x44>
   1db7b:	48 63 15 26 c4 00 00 	movslq 0xc426(%rip),%rdx        # 29fa8 <optind>
   1db82:	48 8b 14 d3          	mov    (%rbx,%rdx,8),%rdx
   1db86:	80 3a 00             	cmpb   $0x0,(%rdx)
   1db89:	75 05                	jne    1db90 <isset_exec+0x44>
   1db8b:	b8 72 df fd d2       	mov    $0xd2fddf72,%eax
   1db90:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1db95:	48 2b 15 d4 c3 00 00 	sub    0xc3d4(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1db9c:	74 05                	je     1dba3 <isset_exec+0x57>
   1db9e:	e8 bd 4e fe ff       	call   2a60 <__stack_chk_fail>
   1dba3:	48 83 c4 10          	add    $0x10,%rsp
   1dba7:	5b                   	pop    %rbx
   1dba8:	c3                   	ret    

000000000001dba9 <iseq_exec>:
   1dba9:	f3 0f 1e fa          	endbr64 
   1dbad:	53                   	push   %rbx
   1dbae:	48 8d 15 1b 9f 00 00 	lea    0x9f1b(%rip),%rdx        # 27ad0 <iseq_cmd>
   1dbb5:	48 89 f3             	mov    %rsi,%rbx
   1dbb8:	48 83 ec 10          	sub    $0x10,%rsp
   1dbbc:	48 8b 05 ad c3 00 00 	mov    0xc3ad(%rip),%rax        # 29f70 <__stack_chk_guard>
   1dbc3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1dbc8:	31 c0                	xor    %eax,%eax
   1dbca:	48 8d 4c 24 07       	lea    0x7(%rsp),%rcx
   1dbcf:	e8 db 15 ff ff       	call   f1af <parse_options>
   1dbd4:	85 c0                	test   %eax,%eax
   1dbd6:	75 21                	jne    1dbf9 <iseq_exec+0x50>
   1dbd8:	48 63 05 c9 c3 00 00 	movslq 0xc3c9(%rip),%rax        # 29fa8 <optind>
   1dbdf:	48 ff c0             	inc    %rax
   1dbe2:	48 8b 34 c3          	mov    (%rbx,%rax,8),%rsi
   1dbe6:	48 8b 7c c3 f8       	mov    -0x8(%rbx,%rax,8),%rdi
   1dbeb:	e8 f0 5c ff ff       	call   138e0 <strcmp>
   1dbf0:	85 c0                	test   %eax,%eax
   1dbf2:	74 05                	je     1dbf9 <iseq_exec+0x50>
   1dbf4:	b8 7b df fd b9       	mov    $0xb9fddf7b,%eax
   1dbf9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1dbfe:	48 2b 15 6b c3 00 00 	sub    0xc36b(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1dc05:	74 05                	je     1dc0c <iseq_exec+0x63>
   1dc07:	e8 54 4e fe ff       	call   2a60 <__stack_chk_fail>
   1dc0c:	48 83 c4 10          	add    $0x10,%rsp
   1dc10:	5b                   	pop    %rbx
   1dc11:	c3                   	ret    

000000000001dc12 <sleep_exec>:
   1dc12:	f3 0f 1e fa          	endbr64 
   1dc16:	41 54                	push   %r12
   1dc18:	48 8d 15 91 9e 00 00 	lea    0x9e91(%rip),%rdx        # 27ab0 <sleep_cmd>
   1dc1f:	53                   	push   %rbx
   1dc20:	48 89 f3             	mov    %rsi,%rbx
   1dc23:	48 83 ec 18          	sub    $0x18,%rsp
   1dc27:	48 8b 05 42 c3 00 00 	mov    0xc342(%rip),%rax        # 29f70 <__stack_chk_guard>
   1dc2e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1dc33:	31 c0                	xor    %eax,%eax
   1dc35:	48 8d 4c 24 03       	lea    0x3(%rsp),%rcx
   1dc3a:	e8 70 15 ff ff       	call   f1af <parse_options>
   1dc3f:	41 89 c4             	mov    %eax,%r12d
   1dc42:	85 c0                	test   %eax,%eax
   1dc44:	75 2f                	jne    1dc75 <sleep_exec+0x63>
   1dc46:	48 63 05 5b c3 00 00 	movslq 0xc35b(%rip),%rax        # 29fa8 <optind>
   1dc4d:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   1dc52:	48 8b 3c c3          	mov    (%rbx,%rax,8),%rdi
   1dc56:	e8 17 10 ff ff       	call   ec72 <parse_integer>
   1dc5b:	41 89 c4             	mov    %eax,%r12d
   1dc5e:	85 c0                	test   %eax,%eax
   1dc60:	75 13                	jne    1dc75 <sleep_exec+0x63>
   1dc62:	8b 7c 24 04          	mov    0x4(%rsp),%edi
   1dc66:	e8 b9 80 ff ff       	call   15d24 <sleep>
   1dc6b:	85 c0                	test   %eax,%eax
   1dc6d:	74 06                	je     1dc75 <sleep_exec+0x63>
   1dc6f:	41 bc 6b df fd f4    	mov    $0xf4fddf6b,%r12d
   1dc75:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1dc7a:	48 2b 05 ef c2 00 00 	sub    0xc2ef(%rip),%rax        # 29f70 <__stack_chk_guard>
   1dc81:	74 05                	je     1dc88 <sleep_exec+0x76>
   1dc83:	e8 d8 4d fe ff       	call   2a60 <__stack_chk_fail>
   1dc88:	48 83 c4 18          	add    $0x18,%rsp
   1dc8c:	44 89 e0             	mov    %r12d,%eax
   1dc8f:	5b                   	pop    %rbx
   1dc90:	41 5c                	pop    %r12
   1dc92:	c3                   	ret    

000000000001dc93 <execv>:
   1dc93:	f3 0f 1e fa          	endbr64 
   1dc97:	41 56                	push   %r14
   1dc99:	31 c0                	xor    %eax,%eax
   1dc9b:	41 55                	push   %r13
   1dc9d:	41 54                	push   %r12
   1dc9f:	49 89 f4             	mov    %rsi,%r12
   1dca2:	55                   	push   %rbp
   1dca3:	48 89 fd             	mov    %rdi,%rbp
   1dca6:	53                   	push   %rbx
   1dca7:	41 89 c5             	mov    %eax,%r13d
   1dcaa:	48 ff c0             	inc    %rax
   1dcad:	49 83 7c c4 f8 00    	cmpq   $0x0,-0x8(%r12,%rax,8)
   1dcb3:	75 f2                	jne    1dca7 <execv+0x14>
   1dcb5:	48 85 ed             	test   %rbp,%rbp
   1dcb8:	75 07                	jne    1dcc1 <execv+0x2e>
   1dcba:	31 c0                	xor    %eax,%eax
   1dcbc:	e9 81 00 00 00       	jmp    1dd42 <execv+0xaf>
   1dcc1:	45 85 ed             	test   %r13d,%r13d
   1dcc4:	75 07                	jne    1dccd <execv+0x3a>
   1dcc6:	b8 7e df fd e3       	mov    $0xe3fddf7e,%eax
   1dccb:	eb 6b                	jmp    1dd38 <execv+0xa5>
   1dccd:	48 8d 1d 84 a7 00 00 	lea    0xa784(%rip),%rbx        # 28458 <config_command>
   1dcd4:	4c 8d 35 4d aa 00 00 	lea    0xaa4d(%rip),%r14        # 28728 <efi_console>
   1dcdb:	c7 05 c3 c2 00 00 01 	movl   $0x1,0xc2c3(%rip)        # 29fa8 <optind>
   1dce2:	00 00 00 
   1dce5:	c7 05 bd c2 00 00 00 	movl   $0x0,0xc2bd(%rip)        # 29fac <nextchar>
   1dcec:	00 00 00 
   1dcef:	4c 39 f3             	cmp    %r14,%rbx
   1dcf2:	73 24                	jae    1dd18 <execv+0x85>
   1dcf4:	48 8b 33             	mov    (%rbx),%rsi
   1dcf7:	48 89 ef             	mov    %rbp,%rdi
   1dcfa:	e8 e1 5b ff ff       	call   138e0 <strcmp>
   1dcff:	85 c0                	test   %eax,%eax
   1dd01:	75 0f                	jne    1dd12 <execv+0x7f>
   1dd03:	4c 89 e6             	mov    %r12,%rsi
   1dd06:	44 89 ef             	mov    %r13d,%edi
   1dd09:	ff 53 08             	call   *0x8(%rbx)
   1dd0c:	85 c0                	test   %eax,%eax
   1dd0e:	75 20                	jne    1dd30 <execv+0x9d>
   1dd10:	eb a8                	jmp    1dcba <execv+0x27>
   1dd12:	48 83 c3 10          	add    $0x10,%rbx
   1dd16:	eb d7                	jmp    1dcef <execv+0x5c>
   1dd18:	48 89 ee             	mov    %rbp,%rsi
   1dd1b:	48 8d 3d a3 63 00 00 	lea    0x63a3(%rip),%rdi        # 240c5 <.LC0>
   1dd22:	31 c0                	xor    %eax,%eax
   1dd24:	e8 75 94 ff ff       	call   1719e <printf>
   1dd29:	b8 7f df fd d1       	mov    $0xd1fddf7f,%eax
   1dd2e:	eb 08                	jmp    1dd38 <execv+0xa5>
   1dd30:	89 05 8e c2 00 00    	mov    %eax,0xc28e(%rip)        # 29fc4 <errno>
   1dd36:	79 0a                	jns    1dd42 <execv+0xaf>
   1dd38:	89 c2                	mov    %eax,%edx
   1dd3a:	f7 da                	neg    %edx
   1dd3c:	89 15 82 c2 00 00    	mov    %edx,0xc282(%rip)        # 29fc4 <errno>
   1dd42:	5b                   	pop    %rbx
   1dd43:	5d                   	pop    %rbp
   1dd44:	41 5c                	pop    %r12
   1dd46:	41 5d                	pop    %r13
   1dd48:	41 5e                	pop    %r14
   1dd4a:	c3                   	ret    

000000000001dd4b <shell_stop>:
   1dd4b:	f3 0f 1e fa          	endbr64 
   1dd4f:	89 3d bb c1 00 00    	mov    %edi,0xc1bb(%rip)        # 29f10 <stop_state>
   1dd55:	c3                   	ret    

000000000001dd56 <shell_stopped>:
   1dd56:	f3 0f 1e fa          	endbr64 
   1dd5a:	31 c0                	xor    %eax,%eax
   1dd5c:	39 3d ae c1 00 00    	cmp    %edi,0xc1ae(%rip)        # 29f10 <stop_state>
   1dd62:	0f 9d c0             	setge  %al
   1dd65:	7f 0a                	jg     1dd71 <shell_stopped+0x1b>
   1dd67:	c7 05 9f c1 00 00 00 	movl   $0x0,0xc19f(%rip)        # 29f10 <stop_state>
   1dd6e:	00 00 00 
   1dd71:	c3                   	ret    

000000000001dd72 <system>:
   1dd72:	f3 0f 1e fa          	endbr64 
   1dd76:	55                   	push   %rbp
   1dd77:	31 f6                	xor    %esi,%esi
   1dd79:	48 89 e5             	mov    %rsp,%rbp
   1dd7c:	41 57                	push   %r15
   1dd7e:	41 56                	push   %r14
   1dd80:	41 55                	push   %r13
   1dd82:	41 54                	push   %r12
   1dd84:	53                   	push   %rbx
   1dd85:	48 83 ec 48          	sub    $0x48,%rsp
   1dd89:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1dd8d:	48 8b 05 dc c1 00 00 	mov    0xc1dc(%rip),%rax        # 29f70 <__stack_chk_guard>
   1dd94:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1dd98:	31 c0                	xor    %eax,%eax
   1dd9a:	e8 d3 fc ff ff       	call   1da72 <split_command>
   1dd9f:	48 89 e1             	mov    %rsp,%rcx
   1dda2:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   1dda6:	48 63 d8             	movslq %eax,%rbx
   1dda9:	8d 43 01             	lea    0x1(%rbx),%eax
   1ddac:	48 98                	cltq   
   1ddae:	48 8d 14 c5 0f 00 00 	lea    0xf(,%rax,8),%rdx
   1ddb5:	00 
   1ddb6:	48 89 d0             	mov    %rdx,%rax
   1ddb9:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   1ddc0:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1ddc4:	48 29 d1             	sub    %rdx,%rcx
   1ddc7:	48 39 cc             	cmp    %rcx,%rsp
   1ddca:	74 12                	je     1ddde <system+0x6c>
   1ddcc:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1ddd3:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1ddda:	00 00 
   1dddc:	eb e9                	jmp    1ddc7 <system+0x55>
   1ddde:	25 ff 0f 00 00       	and    $0xfff,%eax
   1dde3:	48 29 c4             	sub    %rax,%rsp
   1dde6:	48 85 c0             	test   %rax,%rax
   1dde9:	74 06                	je     1ddf1 <system+0x7f>
   1ddeb:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1ddf1:	e8 57 5c ff ff       	call   13a4d <strdup>
   1ddf6:	49 89 e5             	mov    %rsp,%r13
   1ddf9:	49 89 c6             	mov    %rax,%r14
   1ddfc:	48 85 c0             	test   %rax,%rax
   1ddff:	75 0b                	jne    1de0c <system+0x9a>
   1de01:	41 bc 77 df fd ce    	mov    $0xcefddf77,%r12d
   1de07:	e9 c0 01 00 00       	jmp    1dfcc <system+0x25a>
   1de0c:	4c 89 ee             	mov    %r13,%rsi
   1de0f:	48 89 c7             	mov    %rax,%rdi
   1de12:	45 31 e4             	xor    %r12d,%r12d
   1de15:	e8 58 fc ff ff       	call   1da72 <split_command>
   1de1a:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
   1de21:	49 c7 44 dd 00 00 00 	movq   $0x0,0x0(%r13,%rbx,8)
   1de28:	00 00 
   1de2a:	31 db                	xor    %ebx,%ebx
   1de2c:	89 d8                	mov    %ebx,%eax
   1de2e:	4d 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%r15
   1de33:	4d 85 ff             	test   %r15,%r15
   1de36:	74 06                	je     1de3e <system+0xcc>
   1de38:	41 80 3f 23          	cmpb   $0x23,(%r15)
   1de3c:	75 05                	jne    1de43 <system+0xd1>
   1de3e:	45 31 ff             	xor    %r15d,%r15d
   1de41:	eb 58                	jmp    1de9b <system+0x129>
   1de43:	48 8d 35 92 62 00 00 	lea    0x6292(%rip),%rsi        # 240dc <.LC1>
   1de4a:	4c 89 ff             	mov    %r15,%rdi
   1de4d:	e8 8e 5a ff ff       	call   138e0 <strcmp>
   1de52:	85 c0                	test   %eax,%eax
   1de54:	75 09                	jne    1de5f <system+0xed>
   1de56:	4c 8d 3d ff fb ff ff 	lea    -0x401(%rip),%r15        # 1da5c <process_on_failure>
   1de5d:	eb 3c                	jmp    1de9b <system+0x129>
   1de5f:	48 8d 35 79 62 00 00 	lea    0x6279(%rip),%rsi        # 240df <.LC2>
   1de66:	4c 89 ff             	mov    %r15,%rdi
   1de69:	e8 72 5a ff ff       	call   138e0 <strcmp>
   1de6e:	85 c0                	test   %eax,%eax
   1de70:	75 09                	jne    1de7b <system+0x109>
   1de72:	4c 8d 3d d7 fb ff ff 	lea    -0x429(%rip),%r15        # 1da50 <process_on_success>
   1de79:	eb 20                	jmp    1de9b <system+0x129>
   1de7b:	48 8d 35 60 62 00 00 	lea    0x6260(%rip),%rsi        # 240e2 <.LC3>
   1de82:	4c 89 ff             	mov    %r15,%rdi
   1de85:	e8 56 5a ff ff       	call   138e0 <strcmp>
   1de8a:	85 c0                	test   %eax,%eax
   1de8c:	75 09                	jne    1de97 <system+0x125>
   1de8e:	4c 8d 3d d3 fb ff ff 	lea    -0x42d(%rip),%r15        # 1da68 <process_always>
   1de95:	eb 04                	jmp    1de9b <system+0x129>
   1de97:	ff c3                	inc    %ebx
   1de99:	eb 91                	jmp    1de2c <system+0xba>
   1de9b:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   1de9f:	0f 84 f6 00 00 00    	je     1df9b <system+0x229>
   1dea5:	8d 43 01             	lea    0x1(%rbx),%eax
   1dea8:	48 89 65 b8          	mov    %rsp,-0x48(%rbp)
   1deac:	48 89 e1             	mov    %rsp,%rcx
   1deaf:	48 98                	cltq   
   1deb1:	48 8d 14 c5 0f 00 00 	lea    0xf(,%rax,8),%rdx
   1deb8:	00 
   1deb9:	48 89 d0             	mov    %rdx,%rax
   1debc:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   1dec3:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1dec7:	48 29 d1             	sub    %rdx,%rcx
   1deca:	48 39 cc             	cmp    %rcx,%rsp
   1decd:	74 12                	je     1dee1 <system+0x16f>
   1decf:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1ded6:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1dedd:	00 00 
   1dedf:	eb e9                	jmp    1deca <system+0x158>
   1dee1:	25 ff 0f 00 00       	and    $0xfff,%eax
   1dee6:	48 29 c4             	sub    %rax,%rsp
   1dee9:	48 85 c0             	test   %rax,%rax
   1deec:	74 06                	je     1def4 <system+0x182>
   1deee:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1def4:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
   1def9:	45 31 e4             	xor    %r12d,%r12d
   1defc:	48 89 f0             	mov    %rsi,%rax
   1deff:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1df03:	48 c1 e8 03          	shr    $0x3,%rax
   1df07:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1df0b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   1df0f:	44 89 65 ac          	mov    %r12d,-0x54(%rbp)
   1df13:	44 39 e3             	cmp    %r12d,%ebx
   1df16:	7e 48                	jle    1df60 <system+0x1ee>
   1df18:	4b 8b 7c e5 00       	mov    0x0(%r13,%r12,8),%rdi
   1df1d:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
   1df21:	e8 73 49 ff ff       	call   12899 <expand_settings>
   1df26:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
   1df2a:	4a 89 04 e6          	mov    %rax,(%rsi,%r12,8)
   1df2e:	49 ff c4             	inc    %r12
   1df31:	48 85 c0             	test   %rax,%rax
   1df34:	75 d9                	jne    1df0f <system+0x19d>
   1df36:	4c 63 65 ac          	movslq -0x54(%rbp),%r12
   1df3a:	4a 8b 3c e6          	mov    (%rsi,%r12,8),%rdi
   1df3e:	49 ff cc             	dec    %r12
   1df41:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   1df45:	e8 05 e7 fe ff       	call   c64f <free>
   1df4a:	41 83 fc ff          	cmp    $0xffffffff,%r12d
   1df4e:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   1df52:	75 e6                	jne    1df3a <system+0x1c8>
   1df54:	41 bc 77 df fd ce    	mov    $0xcefddf77,%r12d
   1df5a:	48 8b 65 b8          	mov    -0x48(%rbp),%rsp
   1df5e:	eb 64                	jmp    1dfc4 <system+0x252>
   1df60:	48 63 c3             	movslq %ebx,%rax
   1df63:	48 c7 04 c6 00 00 00 	movq   $0x0,(%rsi,%rax,8)
   1df6a:	00 
   1df6b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1df6f:	48 8b 3c c5 00 00 00 	mov    0x0(,%rax,8),%rdi
   1df76:	00 
   1df77:	e8 17 fd ff ff       	call   1dc93 <execv>
   1df7c:	41 89 c4             	mov    %eax,%r12d
   1df7f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1df83:	48 8b 38             	mov    (%rax),%rdi
   1df86:	48 85 ff             	test   %rdi,%rdi
   1df89:	74 0c                	je     1df97 <system+0x225>
   1df8b:	48 83 45 b0 08       	addq   $0x8,-0x50(%rbp)
   1df90:	e8 ba e6 fe ff       	call   c64f <free>
   1df95:	eb e8                	jmp    1df7f <system+0x20d>
   1df97:	48 8b 65 b8          	mov    -0x48(%rbp),%rsp
   1df9b:	bf 01 00 00 00       	mov    $0x1,%edi
   1dfa0:	e8 b1 fd ff ff       	call   1dd56 <shell_stopped>
   1dfa5:	85 c0                	test   %eax,%eax
   1dfa7:	75 1b                	jne    1dfc4 <system+0x252>
   1dfa9:	4d 85 ff             	test   %r15,%r15
   1dfac:	74 16                	je     1dfc4 <system+0x252>
   1dfae:	44 89 e7             	mov    %r12d,%edi
   1dfb1:	48 63 db             	movslq %ebx,%rbx
   1dfb4:	41 ff d7             	call   *%r15
   1dfb7:	4d 8d 6c dd 08       	lea    0x8(%r13,%rbx,8),%r13
   1dfbc:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1dfbf:	e9 66 fe ff ff       	jmp    1de2a <system+0xb8>
   1dfc4:	4c 89 f7             	mov    %r14,%rdi
   1dfc7:	e8 83 e6 fe ff       	call   c64f <free>
   1dfcc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1dfd0:	48 2b 05 99 bf 00 00 	sub    0xbf99(%rip),%rax        # 29f70 <__stack_chk_guard>
   1dfd7:	74 05                	je     1dfde <system+0x26c>
   1dfd9:	e8 82 4a fe ff       	call   2a60 <__stack_chk_fail>
   1dfde:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1dfe2:	44 89 e0             	mov    %r12d,%eax
   1dfe5:	5b                   	pop    %rbx
   1dfe6:	41 5c                	pop    %r12
   1dfe8:	41 5d                	pop    %r13
   1dfea:	41 5e                	pop    %r14
   1dfec:	41 5f                	pop    %r15
   1dfee:	5d                   	pop    %rbp
   1dfef:	c3                   	ret    

000000000001dff0 <concat_args>:
   1dff0:	f3 0f 1e fa          	endbr64 
   1dff4:	41 56                	push   %r14
   1dff6:	41 55                	push   %r13
   1dff8:	41 54                	push   %r12
   1dffa:	49 89 fc             	mov    %rdi,%r12
   1dffd:	55                   	push   %rbp
   1dffe:	bd 01 00 00 00       	mov    $0x1,%ebp
   1e003:	53                   	push   %rbx
   1e004:	48 89 fb             	mov    %rdi,%rbx
   1e007:	49 8b 3c 24          	mov    (%r12),%rdi
   1e00b:	48 85 ff             	test   %rdi,%rdi
   1e00e:	74 10                	je     1e020 <concat_args+0x30>
   1e010:	e8 25 59 ff ff       	call   1393a <strlen>
   1e015:	49 83 c4 08          	add    $0x8,%r12
   1e019:	48 8d 6c 05 01       	lea    0x1(%rbp,%rax,1),%rbp
   1e01e:	eb e7                	jmp    1e007 <concat_args+0x17>
   1e020:	48 89 ef             	mov    %rbp,%rdi
   1e023:	e8 32 e6 fe ff       	call   c65a <zalloc>
   1e028:	49 89 c4             	mov    %rax,%r12
   1e02b:	48 85 c0             	test   %rax,%rax
   1e02e:	74 44                	je     1e074 <concat_args+0x84>
   1e030:	49 89 c5             	mov    %rax,%r13
   1e033:	48 89 dd             	mov    %rbx,%rbp
   1e036:	4c 8d 35 97 63 00 00 	lea    0x6397(%rip),%r14        # 243d4 <.LC0>
   1e03d:	4c 8b 45 00          	mov    0x0(%rbp),%r8
   1e041:	4d 85 c0             	test   %r8,%r8
   1e044:	74 2e                	je     1e074 <concat_args+0x84>
   1e046:	48 39 dd             	cmp    %rbx,%rbp
   1e049:	48 8d 0d 06 59 00 00 	lea    0x5906(%rip),%rcx        # 23956 <.LC1>
   1e050:	4c 89 ef             	mov    %r13,%rdi
   1e053:	49 0f 44 ce          	cmove  %r14,%rcx
   1e057:	48 83 ce ff          	or     $0xffffffffffffffff,%rsi
   1e05b:	31 c0                	xor    %eax,%eax
   1e05d:	48 83 c5 08          	add    $0x8,%rbp
   1e061:	48 8d 15 5e 47 00 00 	lea    0x475e(%rip),%rdx        # 227c6 <.LC4>
   1e068:	e8 14 90 ff ff       	call   17081 <snprintf>
   1e06d:	48 98                	cltq   
   1e06f:	49 01 c5             	add    %rax,%r13
   1e072:	eb c9                	jmp    1e03d <concat_args+0x4d>
   1e074:	5b                   	pop    %rbx
   1e075:	4c 89 e0             	mov    %r12,%rax
   1e078:	5d                   	pop    %rbp
   1e079:	41 5c                	pop    %r12
   1e07b:	41 5d                	pop    %r13
   1e07d:	41 5e                	pop    %r14
   1e07f:	c3                   	ret    

000000000001e080 <echo_exec>:
   1e080:	f3 0f 1e fa          	endbr64 
   1e084:	41 54                	push   %r12
   1e086:	48 8d 15 a3 9a 00 00 	lea    0x9aa3(%rip),%rdx        # 27b30 <echo_cmd>
   1e08d:	55                   	push   %rbp
   1e08e:	48 89 f5             	mov    %rsi,%rbp
   1e091:	48 83 ec 18          	sub    $0x18,%rsp
   1e095:	48 8b 05 d4 be 00 00 	mov    0xbed4(%rip),%rax        # 29f70 <__stack_chk_guard>
   1e09c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e0a1:	31 c0                	xor    %eax,%eax
   1e0a3:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
   1e0a8:	e8 02 11 ff ff       	call   f1af <parse_options>
   1e0ad:	41 89 c4             	mov    %eax,%r12d
   1e0b0:	85 c0                	test   %eax,%eax
   1e0b2:	75 51                	jne    1e105 <echo_exec+0x85>
   1e0b4:	48 63 05 ed be 00 00 	movslq 0xbeed(%rip),%rax        # 29fa8 <optind>
   1e0bb:	48 8d 7c c5 00       	lea    0x0(%rbp,%rax,8),%rdi
   1e0c0:	e8 2b ff ff ff       	call   1dff0 <concat_args>
   1e0c5:	48 89 c5             	mov    %rax,%rbp
   1e0c8:	48 85 c0             	test   %rax,%rax
   1e0cb:	75 08                	jne    1e0d5 <echo_exec+0x55>
   1e0cd:	41 bc 77 df fd ce    	mov    $0xcefddf77,%r12d
   1e0d3:	eb 30                	jmp    1e105 <echo_exec+0x85>
   1e0d5:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
   1e0da:	48 8d 05 ee 58 00 00 	lea    0x58ee(%rip),%rax        # 239cf <.LC0>
   1e0e1:	48 89 ee             	mov    %rbp,%rsi
   1e0e4:	48 8d 15 e9 62 00 00 	lea    0x62e9(%rip),%rdx        # 243d4 <.LC0>
   1e0eb:	48 8d 3d d4 46 00 00 	lea    0x46d4(%rip),%rdi        # 227c6 <.LC4>
   1e0f2:	48 0f 44 d0          	cmove  %rax,%rdx
   1e0f6:	31 c0                	xor    %eax,%eax
   1e0f8:	e8 a1 90 ff ff       	call   1719e <printf>
   1e0fd:	48 89 ef             	mov    %rbp,%rdi
   1e100:	e8 4a e5 fe ff       	call   c64f <free>
   1e105:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1e10a:	48 2b 05 5f be 00 00 	sub    0xbe5f(%rip),%rax        # 29f70 <__stack_chk_guard>
   1e111:	74 05                	je     1e118 <echo_exec+0x98>
   1e113:	e8 48 49 fe ff       	call   2a60 <__stack_chk_fail>
   1e118:	48 83 c4 18          	add    $0x18,%rsp
   1e11c:	44 89 e0             	mov    %r12d,%eax
   1e11f:	5d                   	pop    %rbp
   1e120:	41 5c                	pop    %r12
   1e122:	c3                   	ret    

000000000001e123 <fragment_expired>:
   1e123:	f3 0f 1e fa          	endbr64 
   1e127:	53                   	push   %rbx
   1e128:	48 89 fb             	mov    %rdi,%rbx
   1e12b:	48 8b 7f f0          	mov    -0x10(%rdi),%rdi
   1e12f:	e8 62 bb fe ff       	call   9c96 <free_iob>
   1e134:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
   1e138:	48 8b 53 e0          	mov    -0x20(%rbx),%rdx
   1e13c:	48 8d 7b e0          	lea    -0x20(%rbx),%rdi
   1e140:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1e144:	48 89 10             	mov    %rdx,(%rax)
   1e147:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1e14b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e14f:	48 ff 40 40          	incq   0x40(%rax)
   1e153:	5b                   	pop    %rbx
   1e154:	e9 f6 e4 fe ff       	jmp    c64f <free>

000000000001e159 <fragment_reassemble>:
   1e159:	f3 0f 1e fa          	endbr64 
   1e15d:	41 57                	push   %r15
   1e15f:	41 56                	push   %r14
   1e161:	49 89 d6             	mov    %rdx,%r14
   1e164:	41 55                	push   %r13
   1e166:	41 54                	push   %r12
   1e168:	49 89 f4             	mov    %rsi,%r12
   1e16b:	55                   	push   %rbp
   1e16c:	53                   	push   %rbx
   1e16d:	48 89 fb             	mov    %rdi,%rbx
   1e170:	51                   	push   %rcx
   1e171:	48 8b 47 28          	mov    0x28(%rdi),%rax
   1e175:	48 8b 2f             	mov    (%rdi),%rbp
   1e178:	48 ff 40 30          	incq   0x30(%rax)
   1e17c:	4c 8b 2a             	mov    (%rdx),%r13
   1e17f:	48 39 eb             	cmp    %rbp,%rbx
   1e182:	74 16                	je     1e19a <fragment_reassemble+0x41>
   1e184:	4c 89 ea             	mov    %r13,%rdx
   1e187:	4c 89 e6             	mov    %r12,%rsi
   1e18a:	48 89 ef             	mov    %rbp,%rdi
   1e18d:	ff 53 10             	call   *0x10(%rbx)
   1e190:	85 c0                	test   %eax,%eax
   1e192:	75 08                	jne    1e19c <fragment_reassemble+0x43>
   1e194:	48 8b 6d 00          	mov    0x0(%rbp),%rbp
   1e198:	eb e5                	jmp    1e17f <fragment_reassemble+0x26>
   1e19a:	31 ed                	xor    %ebp,%ebp
   1e19c:	49 8b 36             	mov    (%r14),%rsi
   1e19f:	4c 89 e7             	mov    %r12,%rdi
   1e1a2:	ff 53 18             	call   *0x18(%rbx)
   1e1a5:	48 85 ed             	test   %rbp,%rbp
   1e1a8:	0f 84 f7 00 00 00    	je     1e2a5 <fragment_reassemble+0x14c>
   1e1ae:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   1e1b2:	48 8b 51 20          	mov    0x20(%rcx),%rdx
   1e1b6:	48 2b 51 18          	sub    0x18(%rcx),%rdx
   1e1ba:	48 2b 55 18          	sub    0x18(%rbp),%rdx
   1e1be:	48 39 c2             	cmp    %rax,%rdx
   1e1c1:	0f 85 32 01 00 00    	jne    1e2f9 <fragment_reassemble+0x1a0>
   1e1c7:	49 8b 36             	mov    (%r14),%rsi
   1e1ca:	4c 89 e7             	mov    %r12,%rdi
   1e1cd:	ff 53 20             	call   *0x20(%rbx)
   1e1d0:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   1e1d4:	41 89 c7             	mov    %eax,%r15d
   1e1d7:	49 8b 06             	mov    (%r14),%rax
   1e1da:	49 03 44 24 18       	add    0x18(%r12),%rax
   1e1df:	48 8b 7a 20          	mov    0x20(%rdx),%rdi
   1e1e3:	48 2b 7a 10          	sub    0x10(%rdx),%rdi
   1e1e7:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   1e1ec:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
   1e1f1:	48 29 c2             	sub    %rax,%rdx
   1e1f4:	48 01 d7             	add    %rdx,%rdi
   1e1f7:	e8 80 ba fe ff       	call   9c7c <alloc_iob>
   1e1fc:	49 89 c5             	mov    %rax,%r13
   1e1ff:	48 85 c0             	test   %rax,%rax
   1e202:	0f 84 f1 00 00 00    	je     1e2f9 <fragment_reassemble+0x1a0>
   1e208:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1e20c:	48 8b 78 18          	mov    0x18(%rax),%rdi
   1e210:	48 2b 78 10          	sub    0x10(%rax),%rdi
   1e214:	49 01 7d 18          	add    %rdi,0x18(%r13)
   1e218:	49 03 7d 20          	add    0x20(%r13),%rdi
   1e21c:	48 8b 70 18          	mov    0x18(%rax),%rsi
   1e220:	49 89 7d 20          	mov    %rdi,0x20(%r13)
   1e224:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1e228:	48 29 f2             	sub    %rsi,%rdx
   1e22b:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   1e22f:	49 89 45 20          	mov    %rax,0x20(%r13)
   1e233:	e8 d5 90 ff ff       	call   1730d <__memcpy>
   1e238:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   1e23d:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
   1e242:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   1e246:	48 29 f2             	sub    %rsi,%rdx
   1e249:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   1e24d:	49 89 45 20          	mov    %rax,0x20(%r13)
   1e251:	e8 b7 90 ff ff       	call   1730d <__memcpy>
   1e256:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1e25a:	e8 37 ba fe ff       	call   9c96 <free_iob>
   1e25f:	4c 89 6d 10          	mov    %r13,0x10(%rbp)
   1e263:	4c 89 e7             	mov    %r12,%rdi
   1e266:	e8 2b ba fe ff       	call   9c96 <free_iob>
   1e26b:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e26f:	e8 5c 20 ff ff       	call   102d0 <stop_timer>
   1e274:	45 85 ff             	test   %r15d,%r15d
   1e277:	75 70                	jne    1e2e9 <fragment_reassemble+0x190>
   1e279:	48 8b 45 18          	mov    0x18(%rbp),%rax
   1e27d:	4c 8b 65 10          	mov    0x10(%rbp),%r12
   1e281:	48 89 ef             	mov    %rbp,%rdi
   1e284:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1e288:	49 89 06             	mov    %rax,(%r14)
   1e28b:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1e28f:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1e293:	48 89 10             	mov    %rdx,(%rax)
   1e296:	e8 b4 e3 fe ff       	call   c64f <free>
   1e29b:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1e29f:	48 ff 40 38          	incq   0x38(%rax)
   1e2a3:	eb 67                	jmp    1e30c <fragment_reassemble+0x1b3>
   1e2a5:	48 85 c0             	test   %rax,%rax
   1e2a8:	75 4f                	jne    1e2f9 <fragment_reassemble+0x1a0>
   1e2aa:	bf 78 00 00 00       	mov    $0x78,%edi
   1e2af:	e8 a6 e3 fe ff       	call   c65a <zalloc>
   1e2b4:	48 89 c5             	mov    %rax,%rbp
   1e2b7:	48 85 c0             	test   %rax,%rax
   1e2ba:	74 3d                	je     1e2f9 <fragment_reassemble+0x1a0>
   1e2bc:	48 89 c7             	mov    %rax,%rdi
   1e2bf:	48 89 de             	mov    %rbx,%rsi
   1e2c2:	e8 fa dd fe ff       	call   c0c1 <extern_list_add>
   1e2c7:	49 8b 06             	mov    (%r14),%rax
   1e2ca:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   1e2ce:	48 c7 45 68 00 00 00 	movq   $0x0,0x68(%rbp)
   1e2d5:	00 
   1e2d6:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1e2da:	48 8d 05 42 fe ff ff 	lea    -0x1be(%rip),%rax        # 1e123 <fragment_expired>
   1e2e1:	48 89 45 60          	mov    %rax,0x60(%rbp)
   1e2e5:	48 89 5d 70          	mov    %rbx,0x70(%rbp)
   1e2e9:	48 8d 7d 20          	lea    0x20(%rbp),%rdi
   1e2ed:	be 00 02 00 00       	mov    $0x200,%esi
   1e2f2:	e8 6b 1f ff ff       	call   10262 <start_timer_fixed>
   1e2f7:	eb 10                	jmp    1e309 <fragment_reassemble+0x1b0>
   1e2f9:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1e2fd:	4c 89 e7             	mov    %r12,%rdi
   1e300:	48 ff 40 40          	incq   0x40(%rax)
   1e304:	e8 8d b9 fe ff       	call   9c96 <free_iob>
   1e309:	45 31 e4             	xor    %r12d,%r12d
   1e30c:	5a                   	pop    %rdx
   1e30d:	4c 89 e0             	mov    %r12,%rax
   1e310:	5b                   	pop    %rbx
   1e311:	5d                   	pop    %rbp
   1e312:	41 5c                	pop    %r12
   1e314:	41 5d                	pop    %r13
   1e316:	41 5e                	pop    %r14
   1e318:	41 5f                	pop    %r15
   1e31a:	c3                   	ret    

000000000001e31b <getchar_timeout>:
   1e31b:	55                   	push   %rbp
   1e31c:	53                   	push   %rbx
   1e31d:	48 89 fb             	mov    %rdi,%rbx
   1e320:	56                   	push   %rsi
   1e321:	e8 ab 79 ff ff       	call   15cd1 <currticks>
   1e326:	48 89 c5             	mov    %rax,%rbp
   1e329:	48 85 db             	test   %rbx,%rbx
   1e32c:	75 1d                	jne    1e34b <getchar_timeout+0x30>
   1e32e:	e8 79 16 ff ff       	call   f9ac <step>
   1e333:	e8 57 af ff ff       	call   1928f <iskey>
   1e338:	85 c0                	test   %eax,%eax
   1e33a:	74 08                	je     1e344 <getchar_timeout+0x29>
   1e33c:	59                   	pop    %rcx
   1e33d:	5b                   	pop    %rbx
   1e33e:	5d                   	pop    %rbp
   1e33f:	e9 17 af ff ff       	jmp    1925b <getchar>
   1e344:	e8 4e f5 ff ff       	call   1d897 <cpu_nap>
   1e349:	eb de                	jmp    1e329 <getchar_timeout+0xe>
   1e34b:	e8 81 79 ff ff       	call   15cd1 <currticks>
   1e350:	48 29 e8             	sub    %rbp,%rax
   1e353:	48 39 d8             	cmp    %rbx,%rax
   1e356:	72 d6                	jb     1e32e <getchar_timeout+0x13>
   1e358:	5a                   	pop    %rdx
   1e359:	83 c8 ff             	or     $0xffffffff,%eax
   1e35c:	5b                   	pop    %rbx
   1e35d:	5d                   	pop    %rbp
   1e35e:	c3                   	ret    

000000000001e35f <getkey>:
   1e35f:	f3 0f 1e fa          	endbr64 
   1e363:	41 54                	push   %r12
   1e365:	53                   	push   %rbx
   1e366:	51                   	push   %rcx
   1e367:	e8 af ff ff ff       	call   1e31b <getchar_timeout>
   1e36c:	41 89 c4             	mov    %eax,%r12d
   1e36f:	83 f8 1b             	cmp    $0x1b,%eax
   1e372:	75 5d                	jne    1e3d1 <getkey+0x72>
   1e374:	bf 00 01 00 00       	mov    $0x100,%edi
   1e379:	e8 9d ff ff ff       	call   1e31b <getchar_timeout>
   1e37e:	85 c0                	test   %eax,%eax
   1e380:	78 4f                	js     1e3d1 <getkey+0x72>
   1e382:	8d 48 bf             	lea    -0x41(%rax),%ecx
   1e385:	8d 50 9f             	lea    -0x61(%rax),%edx
   1e388:	83 f9 19             	cmp    $0x19,%ecx
   1e38b:	76 09                	jbe    1e396 <getkey+0x37>
   1e38d:	31 db                	xor    %ebx,%ebx
   1e38f:	83 fa 19             	cmp    $0x19,%edx
   1e392:	77 1f                	ja     1e3b3 <getkey+0x54>
   1e394:	eb 05                	jmp    1e39b <getkey+0x3c>
   1e396:	83 fa 19             	cmp    $0x19,%edx
   1e399:	77 03                	ja     1e39e <getkey+0x3f>
   1e39b:	83 e8 20             	sub    $0x20,%eax
   1e39e:	44 8d 60 c0          	lea    -0x40(%rax),%r12d
   1e3a2:	eb 2d                	jmp    1e3d1 <getkey+0x72>
   1e3a4:	8d 50 d0             	lea    -0x30(%rax),%edx
   1e3a7:	83 fa 09             	cmp    $0x9,%edx
   1e3aa:	77 17                	ja     1e3c3 <getkey+0x64>
   1e3ac:	6b db 0a             	imul   $0xa,%ebx,%ebx
   1e3af:	8d 5c 18 d0          	lea    -0x30(%rax,%rbx,1),%ebx
   1e3b3:	bf 00 01 00 00       	mov    $0x100,%edi
   1e3b8:	e8 5e ff ff ff       	call   1e31b <getchar_timeout>
   1e3bd:	85 c0                	test   %eax,%eax
   1e3bf:	79 e3                	jns    1e3a4 <getkey+0x45>
   1e3c1:	eb 0e                	jmp    1e3d1 <getkey+0x72>
   1e3c3:	83 f8 3f             	cmp    $0x3f,%eax
   1e3c6:	7e eb                	jle    1e3b3 <getkey+0x54>
   1e3c8:	ff c3                	inc    %ebx
   1e3ca:	c1 e3 08             	shl    $0x8,%ebx
   1e3cd:	44 8d 24 03          	lea    (%rbx,%rax,1),%r12d
   1e3d1:	44 89 e0             	mov    %r12d,%eax
   1e3d4:	5a                   	pop    %rdx
   1e3d5:	5b                   	pop    %rbx
   1e3d6:	41 5c                	pop    %r12
   1e3d8:	c3                   	ret    

000000000001e3d9 <http_parse_basic_auth>:
   1e3d9:	f3 0f 1e fa          	endbr64 
   1e3dd:	48 83 bf 48 01 00 00 	cmpq   $0x0,0x148(%rdi)
   1e3e4:	00 
   1e3e5:	75 07                	jne    1e3ee <http_parse_basic_auth+0x15>
   1e3e7:	83 8f 1c 02 00 00 04 	orl    $0x4,0x21c(%rdi)
   1e3ee:	31 c0                	xor    %eax,%eax
   1e3f0:	c3                   	ret    

000000000001e3f1 <http_format_basic_auth>:
   1e3f1:	f3 0f 1e fa          	endbr64 
   1e3f5:	55                   	push   %rbp
   1e3f6:	48 89 e5             	mov    %rsp,%rbp
   1e3f9:	41 57                	push   %r15
   1e3fb:	41 56                	push   %r14
   1e3fd:	41 55                	push   %r13
   1e3ff:	49 89 d5             	mov    %rdx,%r13
   1e402:	41 54                	push   %r12
   1e404:	49 89 f4             	mov    %rsi,%r12
   1e407:	53                   	push   %rbx
   1e408:	48 89 fb             	mov    %rdi,%rbx
   1e40b:	48 83 ec 28          	sub    $0x28,%rsp
   1e40f:	4c 8b b7 50 01 00 00 	mov    0x150(%rdi),%r14
   1e416:	48 8b 05 53 bb 00 00 	mov    0xbb53(%rip),%rax        # 29f70 <__stack_chk_guard>
   1e41d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1e421:	31 c0                	xor    %eax,%eax
   1e423:	4c 89 f7             	mov    %r14,%rdi
   1e426:	e8 0f 55 ff ff       	call   1393a <strlen>
   1e42b:	4c 8b 83 58 01 00 00 	mov    0x158(%rbx),%r8
   1e432:	49 89 c7             	mov    %rax,%r15
   1e435:	4c 89 c7             	mov    %r8,%rdi
   1e438:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   1e43c:	e8 f9 54 ff ff       	call   1393a <strlen>
   1e441:	48 89 e1             	mov    %rsp,%rcx
   1e444:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
   1e448:	49 01 c7             	add    %rax,%r15
   1e44b:	49 8d 57 11          	lea    0x11(%r15),%rdx
   1e44f:	49 8d 77 02          	lea    0x2(%r15),%rsi
   1e453:	48 89 d0             	mov    %rdx,%rax
   1e456:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   1e45d:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1e461:	48 29 d1             	sub    %rdx,%rcx
   1e464:	48 39 cc             	cmp    %rcx,%rsp
   1e467:	74 12                	je     1e47b <http_format_basic_auth+0x8a>
   1e469:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1e470:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1e477:	00 00 
   1e479:	eb e9                	jmp    1e464 <http_format_basic_auth+0x73>
   1e47b:	25 ff 0f 00 00       	and    $0xfff,%eax
   1e480:	48 29 c4             	sub    %rax,%rsp
   1e483:	48 85 c0             	test   %rax,%rax
   1e486:	74 06                	je     1e48e <http_format_basic_auth+0x9d>
   1e488:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1e48e:	4c 89 f1             	mov    %r14,%rcx
   1e491:	48 8d 15 ef 52 00 00 	lea    0x52ef(%rip),%rdx        # 23787 <.LC0>
   1e498:	48 89 e7             	mov    %rsp,%rdi
   1e49b:	31 c0                	xor    %eax,%eax
   1e49d:	e8 df 8b ff ff       	call   17081 <snprintf>
   1e4a2:	4c 89 e2             	mov    %r12,%rdx
   1e4a5:	49 8d 77 01          	lea    0x1(%r15),%rsi
   1e4a9:	4c 89 e9             	mov    %r13,%rcx
   1e4ac:	48 89 e7             	mov    %rsp,%rdi
   1e4af:	e8 b4 a5 ff ff       	call   18a68 <base64_encode>
   1e4b4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1e4b8:	48 2b 15 b1 ba 00 00 	sub    0xbab1(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1e4bf:	74 05                	je     1e4c6 <http_format_basic_auth+0xd5>
   1e4c1:	e8 9a 45 fe ff       	call   2a60 <__stack_chk_fail>
   1e4c6:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1e4ca:	5b                   	pop    %rbx
   1e4cb:	41 5c                	pop    %r12
   1e4cd:	41 5d                	pop    %r13
   1e4cf:	41 5e                	pop    %r14
   1e4d1:	41 5f                	pop    %r15
   1e4d3:	5d                   	pop    %rbp
   1e4d4:	c3                   	ret    

000000000001e4d5 <http_basic_authenticate>:
   1e4d5:	f3 0f 1e fa          	endbr64 
   1e4d9:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   1e4e0:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1e4e4:	48 85 d2             	test   %rdx,%rdx
   1e4e7:	75 06                	jne    1e4ef <http_basic_authenticate+0x1a>
   1e4e9:	b8 71 9e bc fd       	mov    $0xfdbc9e71,%eax
   1e4ee:	c3                   	ret    
   1e4ef:	48 8b 40 28          	mov    0x28(%rax),%rax
   1e4f3:	48 89 97 50 01 00 00 	mov    %rdx,0x150(%rdi)
   1e4fa:	48 85 c0             	test   %rax,%rax
   1e4fd:	75 07                	jne    1e506 <http_basic_authenticate+0x31>
   1e4ff:	48 8d 05 ce 5e 00 00 	lea    0x5ece(%rip),%rax        # 243d4 <.LC0>
   1e506:	48 89 87 58 01 00 00 	mov    %rax,0x158(%rdi)
   1e50d:	31 c0                	xor    %eax,%eax
   1e50f:	c3                   	ret    

000000000001e510 <http_conn_xfer_recycle>:
   1e510:	f3 0f 1e fa          	endbr64 
   1e514:	83 8f c8 00 00 00 01 	orl    $0x1,0xc8(%rdi)
   1e51b:	c3                   	ret    

000000000001e51c <http_conn_socket_deliver>:
   1e51c:	f3 0f 1e fa          	endbr64 
   1e520:	83 8f c8 00 00 00 04 	orl    $0x4,0xc8(%rdi)
   1e527:	48 83 c7 40          	add    $0x40,%rdi
   1e52b:	e9 e9 90 ff ff       	jmp    17619 <xfer_deliver>

000000000001e530 <http_conn_free>:
   1e530:	f3 0f 1e fa          	endbr64 
   1e534:	55                   	push   %rbp
   1e535:	48 89 fd             	mov    %rdi,%rbp
   1e538:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1e53c:	e8 fd 18 ff ff       	call   fe3e <ref_decrement>
   1e541:	48 89 ef             	mov    %rbp,%rdi
   1e544:	5d                   	pop    %rbp
   1e545:	e9 05 e1 fe ff       	jmp    c64f <free>

000000000001e54a <http_conn_close>:
   1e54a:	55                   	push   %rbp
   1e54b:	89 f5                	mov    %esi,%ebp
   1e54d:	53                   	push   %rbx
   1e54e:	48 89 fb             	mov    %rdi,%rbx
   1e551:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
   1e555:	50                   	push   %rax
   1e556:	e8 9e 12 ff ff       	call   f7f9 <pool_del>
   1e55b:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   1e55f:	89 ee                	mov    %ebp,%esi
   1e561:	e8 69 b3 fe ff       	call   98cf <intf_shutdown>
   1e566:	5a                   	pop    %rdx
   1e567:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   1e56b:	89 ee                	mov    %ebp,%esi
   1e56d:	5b                   	pop    %rbx
   1e56e:	5d                   	pop    %rbp
   1e56f:	e9 5b b3 fe ff       	jmp    98cf <intf_shutdown>

000000000001e574 <http_conn_expired>:
   1e574:	f3 0f 1e fa          	endbr64 
   1e578:	48 83 ef 60          	sub    $0x60,%rdi
   1e57c:	31 f6                	xor    %esi,%esi
   1e57e:	e9 c7 ff ff ff       	jmp    1e54a <http_conn_close>

000000000001e583 <http_conn_socket_close>:
   1e583:	f3 0f 1e fa          	endbr64 
   1e587:	55                   	push   %rbp
   1e588:	48 89 fd             	mov    %rdi,%rbp
   1e58b:	48 83 ec 10          	sub    $0x10,%rsp
   1e58f:	8b 87 c8 00 00 00    	mov    0xc8(%rdi),%eax
   1e595:	83 e0 06             	and    $0x6,%eax
   1e598:	83 f8 02             	cmp    $0x2,%eax
   1e59b:	75 11                	jne    1e5ae <http_conn_socket_close+0x2b>
   1e59d:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1e5a1:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1e5a5:	e8 1e 12 ff ff       	call   f7c8 <pool_reopen>
   1e5aa:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1e5ae:	48 83 c4 10          	add    $0x10,%rsp
   1e5b2:	48 89 ef             	mov    %rbp,%rdi
   1e5b5:	5d                   	pop    %rbp
   1e5b6:	e9 8f ff ff ff       	jmp    1e54a <http_conn_close>

000000000001e5bb <http_conn_xfer_close>:
   1e5bb:	f3 0f 1e fa          	endbr64 
   1e5bf:	55                   	push   %rbp
   1e5c0:	48 89 fd             	mov    %rdi,%rbp
   1e5c3:	85 f6                	test   %esi,%esi
   1e5c5:	75 28                	jne    1e5ef <http_conn_xfer_close+0x34>
   1e5c7:	f6 87 c8 00 00 00 01 	testb  $0x1,0xc8(%rdi)
   1e5ce:	74 1f                	je     1e5ef <http_conn_xfer_close+0x34>
   1e5d0:	48 8d 7f 40          	lea    0x40(%rdi),%rdi
   1e5d4:	e8 6f b2 fe ff       	call   9848 <intf_restart>
   1e5d9:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   1e5dd:	5d                   	pop    %rbp
   1e5de:	ba 00 28 00 00       	mov    $0x2800,%edx
   1e5e3:	48 8d 35 16 96 00 00 	lea    0x9616(%rip),%rsi        # 27c00 <http_connection_pool>
   1e5ea:	e9 e9 11 ff ff       	jmp    f7d8 <pool_add>
   1e5ef:	48 89 ef             	mov    %rbp,%rdi
   1e5f2:	5d                   	pop    %rbp
   1e5f3:	e9 52 ff ff ff       	jmp    1e54a <http_conn_close>

000000000001e5f8 <http_connect>:
   1e5f8:	f3 0f 1e fa          	endbr64 
   1e5fc:	41 57                	push   %r15
   1e5fe:	41 56                	push   %r14
   1e600:	41 55                	push   %r13
   1e602:	41 54                	push   %r12
   1e604:	55                   	push   %rbp
   1e605:	53                   	push   %rbx
   1e606:	48 83 ec 48          	sub    $0x48,%rsp
   1e60a:	48 8b 6e 10          	mov    0x10(%rsi),%rbp
   1e60e:	48 8b 05 5b b9 00 00 	mov    0xb95b(%rip),%rax        # 29f70 <__stack_chk_guard>
   1e615:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1e61a:	31 c0                	xor    %eax,%eax
   1e61c:	48 85 ed             	test   %rbp,%rbp
   1e61f:	74 2f                	je     1e650 <http_connect+0x58>
   1e621:	49 89 fe             	mov    %rdi,%r14
   1e624:	48 89 f3             	mov    %rsi,%rbx
   1e627:	4c 8d 25 f2 a4 00 00 	lea    0xa4f2(%rip),%r12        # 28b20 <http_scheme>
   1e62e:	4c 8d 2d 03 a5 00 00 	lea    0xa503(%rip),%r13        # 28b38 <http_transfer_chunked>
   1e635:	4d 39 ec             	cmp    %r13,%r12
   1e638:	73 16                	jae    1e650 <http_connect+0x58>
   1e63a:	49 8b 34 24          	mov    (%r12),%rsi
   1e63e:	48 89 ef             	mov    %rbp,%rdi
   1e641:	e8 9a 52 ff ff       	call   138e0 <strcmp>
   1e646:	85 c0                	test   %eax,%eax
   1e648:	74 11                	je     1e65b <http_connect+0x63>
   1e64a:	49 83 c4 18          	add    $0x18,%r12
   1e64e:	eb e5                	jmp    1e635 <http_connect+0x3d>
   1e650:	41 bd 7d 9f be c3    	mov    $0xc3be9f7d,%r13d
   1e656:	e9 be 01 00 00       	jmp    1e819 <http_connect+0x221>
   1e65b:	48 83 7b 30 00       	cmpq   $0x0,0x30(%rbx)
   1e660:	75 0b                	jne    1e66d <http_connect+0x75>
   1e662:	41 bd 7e 9f be e3    	mov    $0xe3be9f7e,%r13d
   1e668:	e9 ac 01 00 00       	jmp    1e819 <http_connect+0x221>
   1e66d:	41 8b 74 24 08       	mov    0x8(%r12),%esi
   1e672:	48 89 df             	mov    %rbx,%rdi
   1e675:	e8 f0 7f ff ff       	call   1666a <uri_port>
   1e67a:	89 44 24 04          	mov    %eax,0x4(%rsp)
   1e67e:	48 8b 05 83 95 00 00 	mov    0x9583(%rip),%rax        # 27c08 <http_connection_pool+0x8>
   1e685:	4c 8d 78 a0          	lea    -0x60(%rax),%r15
   1e689:	49 8d 6f 60          	lea    0x60(%r15),%rbp
   1e68d:	48 8d 05 6c 95 00 00 	lea    0x956c(%rip),%rax        # 27c00 <http_connection_pool>
   1e694:	48 39 c5             	cmp    %rax,%rbp
   1e697:	74 5e                	je     1e6f7 <http_connect+0xff>
   1e699:	4d 39 67 18          	cmp    %r12,0x18(%r15)
   1e69d:	75 4e                	jne    1e6ed <http_connect+0xf5>
   1e69f:	4d 8b 4f 10          	mov    0x10(%r15),%r9
   1e6a3:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   1e6a7:	49 8b 71 30          	mov    0x30(%r9),%rsi
   1e6ab:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1e6b0:	e8 2b 52 ff ff       	call   138e0 <strcmp>
   1e6b5:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1e6ba:	85 c0                	test   %eax,%eax
   1e6bc:	41 89 c5             	mov    %eax,%r13d
   1e6bf:	75 2c                	jne    1e6ed <http_connect+0xf5>
   1e6c1:	41 8b 74 24 08       	mov    0x8(%r12),%esi
   1e6c6:	4c 89 cf             	mov    %r9,%rdi
   1e6c9:	e8 9c 7f ff ff       	call   1666a <uri_port>
   1e6ce:	3b 44 24 04          	cmp    0x4(%rsp),%eax
   1e6d2:	75 19                	jne    1e6ed <http_connect+0xf5>
   1e6d4:	48 89 ef             	mov    %rbp,%rdi
   1e6d7:	e8 1d 11 ff ff       	call   f7f9 <pool_del>
   1e6dc:	49 8d 7f 40          	lea    0x40(%r15),%rdi
   1e6e0:	4c 89 f6             	mov    %r14,%rsi
   1e6e3:	e8 89 b0 fe ff       	call   9771 <intf_plug_plug>
   1e6e8:	e9 2c 01 00 00       	jmp    1e819 <http_connect+0x221>
   1e6ed:	49 8b 57 68          	mov    0x68(%r15),%rdx
   1e6f1:	4c 8d 7a a0          	lea    -0x60(%rdx),%r15
   1e6f5:	eb 92                	jmp    1e689 <http_connect+0x91>
   1e6f7:	bf d0 00 00 00       	mov    $0xd0,%edi
   1e6fc:	e8 59 df fe ff       	call   c65a <zalloc>
   1e701:	48 89 c5             	mov    %rax,%rbp
   1e704:	48 85 c0             	test   %rax,%rax
   1e707:	75 0b                	jne    1e714 <http_connect+0x11c>
   1e709:	41 bd 77 9f be ce    	mov    $0xcebe9f77,%r13d
   1e70f:	e9 05 01 00 00       	jmp    1e819 <http_connect+0x221>
   1e714:	48 8d 05 15 fe ff ff 	lea    -0x1eb(%rip),%rax        # 1e530 <http_conn_free>
   1e71b:	48 89 df             	mov    %rbx,%rdi
   1e71e:	4c 8d 7c 24 18       	lea    0x18(%rsp),%r15
   1e723:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1e727:	e8 06 17 ff ff       	call   fe32 <ref_increment>
   1e72c:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
   1e730:	4c 8d 45 20          	lea    0x20(%rbp),%r8
   1e734:	4c 89 ff             	mov    %r15,%rdi
   1e737:	48 8d 05 a2 7c 00 00 	lea    0x7ca2(%rip),%rax        # 263e0 <null_intf>
   1e73e:	48 8d 15 7b 94 00 00 	lea    0x947b(%rip),%rdx        # 27bc0 <http_conn_socket_desc>
   1e745:	4c 89 65 18          	mov    %r12,0x18(%rbp)
   1e749:	b9 20 00 00 00       	mov    $0x20,%ecx
   1e74e:	48 89 45 20          	mov    %rax,0x20(%rbp)
   1e752:	48 89 45 40          	mov    %rax,0x40(%rbp)
   1e756:	48 8d 05 23 94 00 00 	lea    0x9423(%rip),%rax        # 27b80 <http_conn_xfer_desc>
   1e75d:	48 89 45 50          	mov    %rax,0x50(%rbp)
   1e761:	48 89 45 58          	mov    %rax,0x58(%rbp)
   1e765:	48 8d 45 60          	lea    0x60(%rbp),%rax
   1e769:	48 89 45 60          	mov    %rax,0x60(%rbp)
   1e76d:	48 89 45 68          	mov    %rax,0x68(%rbp)
   1e771:	48 8d 05 b0 10 ff ff 	lea    -0xef50(%rip),%rax        # f828 <pool_expired>
   1e778:	48 89 85 b0 00 00 00 	mov    %rax,0xb0(%rbp)
   1e77f:	48 8d 05 ee fd ff ff 	lea    -0x212(%rip),%rax        # 1e574 <http_conn_expired>
   1e786:	48 89 85 c0 00 00 00 	mov    %rax,0xc0(%rbp)
   1e78d:	31 c0                	xor    %eax,%eax
   1e78f:	48 89 6d 28          	mov    %rbp,0x28(%rbp)
   1e793:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   1e797:	48 89 55 38          	mov    %rdx,0x38(%rbp)
   1e79b:	48 89 6d 48          	mov    %rbp,0x48(%rbp)
   1e79f:	48 89 ad b8 00 00 00 	mov    %rbp,0xb8(%rbp)
   1e7a6:	f3 aa                	rep stos %al,%es:(%rdi)
   1e7a8:	8b 44 24 04          	mov    0x4(%rsp),%eax
   1e7ac:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   1e7b1:	86 c4                	xchg   %al,%ah
   1e7b3:	66 89 44 24 1c       	mov    %ax,0x1c(%rsp)
   1e7b8:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1e7bd:	48 85 c0             	test   %rax,%rax
   1e7c0:	75 2f                	jne    1e7f1 <http_connect+0x1f9>
   1e7c2:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
   1e7c6:	8b 35 60 5d 00 00    	mov    0x5d60(%rip),%esi        # 2452c <tcp_sock_stream>
   1e7cc:	45 31 c0             	xor    %r8d,%r8d
   1e7cf:	4c 89 fa             	mov    %r15,%rdx
   1e7d2:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1e7d7:	e8 ab 19 ff ff       	call   10187 <xfer_open_named_socket>
   1e7dc:	41 89 c5             	mov    %eax,%r13d
   1e7df:	85 c0                	test   %eax,%eax
   1e7e1:	75 23                	jne    1e806 <http_connect+0x20e>
   1e7e3:	48 8d 7d 40          	lea    0x40(%rbp),%rdi
   1e7e7:	4c 89 f6             	mov    %r14,%rsi
   1e7ea:	e8 82 af fe ff       	call   9771 <intf_plug_plug>
   1e7ef:	eb 20                	jmp    1e811 <http_connect+0x219>
   1e7f1:	48 8b 73 30          	mov    0x30(%rbx),%rsi
   1e7f5:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1e7fa:	4c 89 c7             	mov    %r8,%rdi
   1e7fd:	ff d0                	call   *%rax
   1e7ff:	41 89 c5             	mov    %eax,%r13d
   1e802:	85 c0                	test   %eax,%eax
   1e804:	74 bc                	je     1e7c2 <http_connect+0x1ca>
   1e806:	44 89 ee             	mov    %r13d,%esi
   1e809:	48 89 ef             	mov    %rbp,%rdi
   1e80c:	e8 39 fd ff ff       	call   1e54a <http_conn_close>
   1e811:	48 89 ef             	mov    %rbp,%rdi
   1e814:	e8 25 16 ff ff       	call   fe3e <ref_decrement>
   1e819:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1e81e:	48 2b 05 4b b7 00 00 	sub    0xb74b(%rip),%rax        # 29f70 <__stack_chk_guard>
   1e825:	74 05                	je     1e82c <http_connect+0x234>
   1e827:	e8 34 42 fe ff       	call   2a60 <__stack_chk_fail>
   1e82c:	48 83 c4 48          	add    $0x48,%rsp
   1e830:	44 89 e8             	mov    %r13d,%eax
   1e833:	5b                   	pop    %rbx
   1e834:	5d                   	pop    %rbp
   1e835:	41 5c                	pop    %r12
   1e837:	41 5d                	pop    %r13
   1e839:	41 5e                	pop    %r14
   1e83b:	41 5f                	pop    %r15
   1e83d:	c3                   	ret    

000000000001e83e <http_format_digest_auth>:
   1e83e:	f3 0f 1e fa          	endbr64 
   1e842:	41 55                	push   %r13
   1e844:	49 89 d5             	mov    %rdx,%r13
   1e847:	31 c0                	xor    %eax,%eax
   1e849:	48 8d 15 e2 58 00 00 	lea    0x58e2(%rip),%rdx        # 24132 <.LC0>
   1e850:	41 54                	push   %r12
   1e852:	49 89 f4             	mov    %rsi,%r12
   1e855:	4c 89 ee             	mov    %r13,%rsi
   1e858:	55                   	push   %rbp
   1e859:	48 89 fd             	mov    %rdi,%rbp
   1e85c:	53                   	push   %rbx
   1e85d:	48 83 ec 10          	sub    $0x10,%rsp
   1e861:	48 8b 8f f0 01 00 00 	mov    0x1f0(%rdi),%rcx
   1e868:	ff b7 50 01 00 00    	push   0x150(%rdi)
   1e86e:	4c 8b 8f 10 01 00 00 	mov    0x110(%rdi),%r9
   1e875:	4c 8b 87 08 02 00 00 	mov    0x208(%rdi),%r8
   1e87c:	4c 89 e7             	mov    %r12,%rdi
   1e87f:	e8 6f 88 ff ff       	call   170f3 <ssnprintf>
   1e884:	48 8b 8d 10 02 00 00 	mov    0x210(%rbp),%rcx
   1e88b:	5e                   	pop    %rsi
   1e88c:	48 63 d8             	movslq %eax,%rbx
   1e88f:	5f                   	pop    %rdi
   1e890:	48 85 c9             	test   %rcx,%rcx
   1e893:	74 1d                	je     1e8b2 <http_format_digest_auth+0x74>
   1e895:	4c 89 ee             	mov    %r13,%rsi
   1e898:	49 8d 3c 1c          	lea    (%r12,%rbx,1),%rdi
   1e89c:	48 8d 15 bf 58 00 00 	lea    0x58bf(%rip),%rdx        # 24162 <.LC1>
   1e8a3:	31 c0                	xor    %eax,%eax
   1e8a5:	48 29 de             	sub    %rbx,%rsi
   1e8a8:	e8 46 88 ff ff       	call   170f3 <ssnprintf>
   1e8ad:	48 98                	cltq   
   1e8af:	48 01 c3             	add    %rax,%rbx
   1e8b2:	48 8b 8d 58 01 00 00 	mov    0x158(%rbp),%rcx
   1e8b9:	48 85 c9             	test   %rcx,%rcx
   1e8bc:	74 2b                	je     1e8e9 <http_format_digest_auth+0xab>
   1e8be:	4c 8b 85 60 01 00 00 	mov    0x160(%rbp),%r8
   1e8c5:	4c 89 ee             	mov    %r13,%rsi
   1e8c8:	49 8d 3c 1c          	lea    (%r12,%rbx,1),%rdi
   1e8cc:	31 c0                	xor    %eax,%eax
   1e8ce:	48 29 de             	sub    %rbx,%rsi
   1e8d1:	4c 8d 8d 68 01 00 00 	lea    0x168(%rbp),%r9
   1e8d8:	48 8d 15 91 58 00 00 	lea    0x5891(%rip),%rdx        # 24170 <.LC2>
   1e8df:	e8 0f 88 ff ff       	call   170f3 <ssnprintf>
   1e8e4:	48 98                	cltq   
   1e8e6:	48 01 c3             	add    %rax,%rbx
   1e8e9:	4c 89 ee             	mov    %r13,%rsi
   1e8ec:	49 8d 3c 1c          	lea    (%r12,%rbx,1),%rdi
   1e8f0:	48 8d 8d 71 01 00 00 	lea    0x171(%rbp),%rcx
   1e8f7:	31 c0                	xor    %eax,%eax
   1e8f9:	48 29 de             	sub    %rbx,%rsi
   1e8fc:	48 8d 15 9e 58 00 00 	lea    0x589e(%rip),%rdx        # 241a1 <.LC3>
   1e903:	e8 eb 87 ff ff       	call   170f3 <ssnprintf>
   1e908:	5a                   	pop    %rdx
   1e909:	01 d8                	add    %ebx,%eax
   1e90b:	5b                   	pop    %rbx
   1e90c:	5d                   	pop    %rbp
   1e90d:	41 5c                	pop    %r12
   1e90f:	41 5d                	pop    %r13
   1e911:	c3                   	ret    

000000000001e912 <http_parse_digest_auth>:
   1e912:	f3 0f 1e fa          	endbr64 
   1e916:	41 56                	push   %r14
   1e918:	41 55                	push   %r13
   1e91a:	4c 8d 2d 4f 93 00 00 	lea    0x934f(%rip),%r13        # 27c70 <http_digest_fields+0x50>
   1e921:	41 54                	push   %r12
   1e923:	55                   	push   %rbp
   1e924:	53                   	push   %rbx
   1e925:	48 89 fb             	mov    %rdi,%rbx
   1e928:	48 83 ec 20          	sub    $0x20,%rsp
   1e92c:	48 8b 05 3d b6 00 00 	mov    0xb63d(%rip),%rax        # 29f70 <__stack_chk_guard>
   1e933:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1e938:	31 c0                	xor    %eax,%eax
   1e93a:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1e93f:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1e944:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   1e949:	e8 ce 94 fe ff       	call   7e1c <http_token>
   1e94e:	49 89 c4             	mov    %rax,%r12
   1e951:	48 85 c0             	test   %rax,%rax
   1e954:	74 2f                	je     1e985 <http_parse_digest_auth+0x73>
   1e956:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
   1e95b:	48 8d 2d be 92 00 00 	lea    0x92be(%rip),%rbp        # 27c20 <http_digest_fields>
   1e962:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   1e966:	4c 89 e7             	mov    %r12,%rdi
   1e969:	e8 7f 4f ff ff       	call   138ed <strcasecmp>
   1e96e:	85 c0                	test   %eax,%eax
   1e970:	75 08                	jne    1e97a <http_parse_digest_auth+0x68>
   1e972:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1e976:	4c 89 34 03          	mov    %r14,(%rbx,%rax,1)
   1e97a:	48 83 c5 10          	add    $0x10,%rbp
   1e97e:	4c 39 ed             	cmp    %r13,%rbp
   1e981:	75 df                	jne    1e962 <http_parse_digest_auth+0x50>
   1e983:	eb ba                	jmp    1e93f <http_parse_digest_auth+0x2d>
   1e985:	48 83 bb 48 01 00 00 	cmpq   $0x0,0x148(%rbx)
   1e98c:	00 
   1e98d:	75 07                	jne    1e996 <http_parse_digest_auth+0x84>
   1e98f:	83 8b 1c 02 00 00 04 	orl    $0x4,0x21c(%rbx)
   1e996:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1e99b:	48 2b 05 ce b5 00 00 	sub    0xb5ce(%rip),%rax        # 29f70 <__stack_chk_guard>
   1e9a2:	74 05                	je     1e9a9 <http_parse_digest_auth+0x97>
   1e9a4:	e8 b7 40 fe ff       	call   2a60 <__stack_chk_fail>
   1e9a9:	48 83 c4 20          	add    $0x20,%rsp
   1e9ad:	31 c0                	xor    %eax,%eax
   1e9af:	5b                   	pop    %rbx
   1e9b0:	5d                   	pop    %rbp
   1e9b1:	41 5c                	pop    %r12
   1e9b3:	41 5d                	pop    %r13
   1e9b5:	41 5e                	pop    %r14
   1e9b7:	c3                   	ret    

000000000001e9b8 <http_digest_final.constprop.0>:
   1e9b8:	41 54                	push   %r12
   1e9ba:	49 89 f4             	mov    %rsi,%r12
   1e9bd:	55                   	push   %rbp
   1e9be:	48 83 ec 28          	sub    $0x28,%rsp
   1e9c2:	48 8b 05 a7 b5 00 00 	mov    0xb5a7(%rip),%rax        # 29f70 <__stack_chk_guard>
   1e9c9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1e9ce:	31 c0                	xor    %eax,%eax
   1e9d0:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
   1e9d5:	48 89 ee             	mov    %rbp,%rsi
   1e9d8:	ff 15 92 7c 00 00    	call   *0x7c92(%rip)        # 26670 <md5_algorithm+0x30>
   1e9de:	31 ff                	xor    %edi,%edi
   1e9e0:	41 b8 21 00 00 00    	mov    $0x21,%r8d
   1e9e6:	4c 89 e1             	mov    %r12,%rcx
   1e9e9:	ba 10 00 00 00       	mov    $0x10,%edx
   1e9ee:	48 89 ee             	mov    %rbp,%rsi
   1e9f1:	e8 2e 9f ff ff       	call   18924 <hex_encode>
   1e9f6:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1e9fb:	48 2b 05 6e b5 00 00 	sub    0xb56e(%rip),%rax        # 29f70 <__stack_chk_guard>
   1ea02:	74 05                	je     1ea09 <http_digest_final.constprop.0+0x51>
   1ea04:	e8 57 40 fe ff       	call   2a60 <__stack_chk_fail>
   1ea09:	48 83 c4 28          	add    $0x28,%rsp
   1ea0d:	5d                   	pop    %rbp
   1ea0e:	41 5c                	pop    %r12
   1ea10:	c3                   	ret    

000000000001ea11 <http_digest_init>:
   1ea11:	ff 25 49 7c 00 00    	jmp    *0x7c49(%rip)        # 26660 <md5_algorithm+0x20>

000000000001ea17 <http_digest_update>:
   1ea17:	41 54                	push   %r12
   1ea19:	49 89 f4             	mov    %rsi,%r12
   1ea1c:	55                   	push   %rbp
   1ea1d:	48 89 fd             	mov    %rdi,%rbp
   1ea20:	52                   	push   %rdx
   1ea21:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1ea25:	74 12                	je     1ea39 <http_digest_update+0x22>
   1ea27:	ba 01 00 00 00       	mov    $0x1,%edx
   1ea2c:	48 8d 35 4d 3c 00 00 	lea    0x3c4d(%rip),%rsi        # 22680 <colon.0>
   1ea33:	ff 15 2f 7c 00 00    	call   *0x7c2f(%rip)        # 26668 <md5_algorithm+0x28>
   1ea39:	4c 89 e7             	mov    %r12,%rdi
   1ea3c:	e8 f9 4e ff ff       	call   1393a <strlen>
   1ea41:	4c 89 e6             	mov    %r12,%rsi
   1ea44:	48 89 ef             	mov    %rbp,%rdi
   1ea47:	48 89 c2             	mov    %rax,%rdx
   1ea4a:	58                   	pop    %rax
   1ea4b:	5d                   	pop    %rbp
   1ea4c:	41 5c                	pop    %r12
   1ea4e:	ff 25 14 7c 00 00    	jmp    *0x7c14(%rip)        # 26668 <md5_algorithm+0x28>

000000000001ea54 <http_digest_authenticate>:
   1ea54:	f3 0f 1e fa          	endbr64 
   1ea58:	41 55                	push   %r13
   1ea5a:	41 54                	push   %r12
   1ea5c:	55                   	push   %rbp
   1ea5d:	53                   	push   %rbx
   1ea5e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   1ea65:	48 8b 05 04 b5 00 00 	mov    0xb504(%rip),%rax        # 29f70 <__stack_chk_guard>
   1ea6c:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   1ea73:	00 
   1ea74:	31 c0                	xor    %eax,%eax
   1ea76:	48 83 bf f0 01 00 00 	cmpq   $0x0,0x1f0(%rdi)
   1ea7d:	00 
   1ea7e:	75 02                	jne    1ea82 <http_digest_authenticate+0x2e>
   1ea80:	eb 0d                	jmp    1ea8f <http_digest_authenticate+0x3b>
   1ea82:	48 83 bf 08 02 00 00 	cmpq   $0x0,0x208(%rdi)
   1ea89:	00 
   1ea8a:	48 89 fb             	mov    %rdi,%rbx
   1ea8d:	75 0a                	jne    1ea99 <http_digest_authenticate+0x45>
   1ea8f:	b8 7e 9f bb e3       	mov    $0xe3bb9f7e,%eax
   1ea94:	e9 d8 01 00 00       	jmp    1ec71 <http_digest_authenticate+0x21d>
   1ea99:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
   1eaa0:	48 8b 50 20          	mov    0x20(%rax),%rdx
   1eaa4:	48 85 d2             	test   %rdx,%rdx
   1eaa7:	75 0a                	jne    1eab3 <http_digest_authenticate+0x5f>
   1eaa9:	b8 71 9e bb fd       	mov    $0xfdbb9e71,%eax
   1eaae:	e9 be 01 00 00       	jmp    1ec71 <http_digest_authenticate+0x21d>
   1eab3:	4c 8b 60 28          	mov    0x28(%rax),%r12
   1eab7:	48 89 97 50 01 00 00 	mov    %rdx,0x150(%rdi)
   1eabe:	4d 85 e4             	test   %r12,%r12
   1eac1:	75 07                	jne    1eaca <http_digest_authenticate+0x76>
   1eac3:	4c 8d 25 0a 59 00 00 	lea    0x590a(%rip),%r12        # 243d4 <.LC0>
   1eaca:	48 83 bb f8 01 00 00 	cmpq   $0x0,0x1f8(%rbx)
   1ead1:	00 
   1ead2:	4c 8d 2d af 3b 00 00 	lea    0x3baf(%rip),%r13        # 22688 <md5sess.1>
   1ead9:	74 5d                	je     1eb38 <http_digest_authenticate+0xe4>
   1eadb:	48 8d 05 cf 56 00 00 	lea    0x56cf(%rip),%rax        # 241b1 <.LC5>
   1eae2:	48 89 83 58 01 00 00 	mov    %rax,0x158(%rbx)
   1eae9:	e8 53 0f ff ff       	call   fa41 <random>
   1eaee:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
   1eaf5:	be 09 00 00 00       	mov    $0x9,%esi
   1eafa:	48 8d 15 b5 56 00 00 	lea    0x56b5(%rip),%rdx        # 241b6 <.LC6>
   1eb01:	48 89 c1             	mov    %rax,%rcx
   1eb04:	31 c0                	xor    %eax,%eax
   1eb06:	e8 76 85 ff ff       	call   17081 <snprintf>
   1eb0b:	48 8b bb 00 02 00 00 	mov    0x200(%rbx),%rdi
   1eb12:	48 8d 05 78 3b 00 00 	lea    0x3b78(%rip),%rax        # 22691 <md5.2>
   1eb19:	48 89 83 60 01 00 00 	mov    %rax,0x160(%rbx)
   1eb20:	48 85 ff             	test   %rdi,%rdi
   1eb23:	74 13                	je     1eb38 <http_digest_authenticate+0xe4>
   1eb25:	4c 89 ee             	mov    %r13,%rsi
   1eb28:	e8 c0 4d ff ff       	call   138ed <strcasecmp>
   1eb2d:	85 c0                	test   %eax,%eax
   1eb2f:	75 07                	jne    1eb38 <http_digest_authenticate+0xe4>
   1eb31:	4c 89 ab 60 01 00 00 	mov    %r13,0x160(%rbx)
   1eb38:	48 8d 6c 24 50       	lea    0x50(%rsp),%rbp
   1eb3d:	48 89 ef             	mov    %rbp,%rdi
   1eb40:	e8 cc fe ff ff       	call   1ea11 <http_digest_init>
   1eb45:	48 8b b3 50 01 00 00 	mov    0x150(%rbx),%rsi
   1eb4c:	48 89 ef             	mov    %rbp,%rdi
   1eb4f:	e8 c3 fe ff ff       	call   1ea17 <http_digest_update>
   1eb54:	48 8b b3 f0 01 00 00 	mov    0x1f0(%rbx),%rsi
   1eb5b:	48 89 ef             	mov    %rbp,%rdi
   1eb5e:	e8 b4 fe ff ff       	call   1ea17 <http_digest_update>
   1eb63:	4c 89 e6             	mov    %r12,%rsi
   1eb66:	48 89 ef             	mov    %rbp,%rdi
   1eb69:	4c 8d 64 24 0e       	lea    0xe(%rsp),%r12
   1eb6e:	e8 a4 fe ff ff       	call   1ea17 <http_digest_update>
   1eb73:	4c 89 e6             	mov    %r12,%rsi
   1eb76:	48 89 ef             	mov    %rbp,%rdi
   1eb79:	e8 3a fe ff ff       	call   1e9b8 <http_digest_final.constprop.0>
   1eb7e:	4c 39 ab 60 01 00 00 	cmp    %r13,0x160(%rbx)
   1eb85:	75 3c                	jne    1ebc3 <http_digest_authenticate+0x16f>
   1eb87:	48 89 ef             	mov    %rbp,%rdi
   1eb8a:	e8 82 fe ff ff       	call   1ea11 <http_digest_init>
   1eb8f:	4c 89 e6             	mov    %r12,%rsi
   1eb92:	48 89 ef             	mov    %rbp,%rdi
   1eb95:	e8 7d fe ff ff       	call   1ea17 <http_digest_update>
   1eb9a:	48 8b b3 08 02 00 00 	mov    0x208(%rbx),%rsi
   1eba1:	48 89 ef             	mov    %rbp,%rdi
   1eba4:	e8 6e fe ff ff       	call   1ea17 <http_digest_update>
   1eba9:	48 8d b3 68 01 00 00 	lea    0x168(%rbx),%rsi
   1ebb0:	48 89 ef             	mov    %rbp,%rdi
   1ebb3:	e8 5f fe ff ff       	call   1ea17 <http_digest_update>
   1ebb8:	4c 89 e6             	mov    %r12,%rsi
   1ebbb:	48 89 ef             	mov    %rbp,%rdi
   1ebbe:	e8 f5 fd ff ff       	call   1e9b8 <http_digest_final.constprop.0>
   1ebc3:	48 89 ef             	mov    %rbp,%rdi
   1ebc6:	4c 8d 6c 24 2f       	lea    0x2f(%rsp),%r13
   1ebcb:	e8 41 fe ff ff       	call   1ea11 <http_digest_init>
   1ebd0:	48 8b 83 08 01 00 00 	mov    0x108(%rbx),%rax
   1ebd7:	48 89 ef             	mov    %rbp,%rdi
   1ebda:	48 8b 30             	mov    (%rax),%rsi
   1ebdd:	e8 35 fe ff ff       	call   1ea17 <http_digest_update>
   1ebe2:	48 8b b3 10 01 00 00 	mov    0x110(%rbx),%rsi
   1ebe9:	48 89 ef             	mov    %rbp,%rdi
   1ebec:	e8 26 fe ff ff       	call   1ea17 <http_digest_update>
   1ebf1:	4c 89 ee             	mov    %r13,%rsi
   1ebf4:	48 89 ef             	mov    %rbp,%rdi
   1ebf7:	e8 bc fd ff ff       	call   1e9b8 <http_digest_final.constprop.0>
   1ebfc:	48 89 ef             	mov    %rbp,%rdi
   1ebff:	e8 0d fe ff ff       	call   1ea11 <http_digest_init>
   1ec04:	4c 89 e6             	mov    %r12,%rsi
   1ec07:	48 89 ef             	mov    %rbp,%rdi
   1ec0a:	e8 08 fe ff ff       	call   1ea17 <http_digest_update>
   1ec0f:	48 8b b3 08 02 00 00 	mov    0x208(%rbx),%rsi
   1ec16:	48 89 ef             	mov    %rbp,%rdi
   1ec19:	e8 f9 fd ff ff       	call   1ea17 <http_digest_update>
   1ec1e:	48 83 bb 58 01 00 00 	cmpq   $0x0,0x158(%rbx)
   1ec25:	00 
   1ec26:	74 2d                	je     1ec55 <http_digest_authenticate+0x201>
   1ec28:	48 8d 35 69 55 00 00 	lea    0x5569(%rip),%rsi        # 24198 <.LC7>
   1ec2f:	48 89 ef             	mov    %rbp,%rdi
   1ec32:	e8 e0 fd ff ff       	call   1ea17 <http_digest_update>
   1ec37:	48 8d b3 68 01 00 00 	lea    0x168(%rbx),%rsi
   1ec3e:	48 89 ef             	mov    %rbp,%rdi
   1ec41:	e8 d1 fd ff ff       	call   1ea17 <http_digest_update>
   1ec46:	48 8b b3 58 01 00 00 	mov    0x158(%rbx),%rsi
   1ec4d:	48 89 ef             	mov    %rbp,%rdi
   1ec50:	e8 c2 fd ff ff       	call   1ea17 <http_digest_update>
   1ec55:	4c 89 ee             	mov    %r13,%rsi
   1ec58:	48 89 ef             	mov    %rbp,%rdi
   1ec5b:	e8 b7 fd ff ff       	call   1ea17 <http_digest_update>
   1ec60:	48 8d b3 71 01 00 00 	lea    0x171(%rbx),%rsi
   1ec67:	48 89 ef             	mov    %rbp,%rdi
   1ec6a:	e8 49 fd ff ff       	call   1e9b8 <http_digest_final.constprop.0>
   1ec6f:	31 c0                	xor    %eax,%eax
   1ec71:	48 8b 94 24 a8 00 00 	mov    0xa8(%rsp),%rdx
   1ec78:	00 
   1ec79:	48 2b 15 f0 b2 00 00 	sub    0xb2f0(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1ec80:	74 05                	je     1ec87 <http_digest_authenticate+0x233>
   1ec82:	e8 d9 3d fe ff       	call   2a60 <__stack_chk_fail>
   1ec87:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1ec8e:	5b                   	pop    %rbx
   1ec8f:	5d                   	pop    %rbp
   1ec90:	41 5c                	pop    %r12
   1ec92:	41 5d                	pop    %r13
   1ec94:	c3                   	ret    

000000000001ec95 <ibft_set_ipaddr>:
   1ec95:	48 89 fa             	mov    %rdi,%rdx
   1ec98:	31 c0                	xor    %eax,%eax
   1ec9a:	ab                   	stos   %eax,%es:(%rdi)
   1ec9b:	ab                   	stos   %eax,%es:(%rdi)
   1ec9c:	ab                   	stos   %eax,%es:(%rdi)
   1ec9d:	ab                   	stos   %eax,%es:(%rdi)
   1ec9e:	85 f6                	test   %esi,%esi
   1eca0:	74 09                	je     1ecab <ibft_set_ipaddr+0x16>
   1eca2:	89 72 0c             	mov    %esi,0xc(%rdx)
   1eca5:	66 c7 42 0a ff ff    	movw   $0xffff,0xa(%rdx)
   1ecab:	c3                   	ret    

000000000001ecac <ibft_alloc_string>:
   1ecac:	41 56                	push   %r14
   1ecae:	41 55                	push   %r13
   1ecb0:	49 89 d5             	mov    %rdx,%r13
   1ecb3:	41 54                	push   %r12
   1ecb5:	49 89 f4             	mov    %rsi,%r12
   1ecb8:	55                   	push   %rbp
   1ecb9:	48 8d 6a 01          	lea    0x1(%rdx),%rbp
   1ecbd:	53                   	push   %rbx
   1ecbe:	4c 8b 77 10          	mov    0x10(%rdi),%r14
   1ecc2:	48 89 fb             	mov    %rdi,%rbx
   1ecc5:	48 8b 3f             	mov    (%rdi),%rdi
   1ecc8:	49 01 ee             	add    %rbp,%r14
   1eccb:	4c 89 f6             	mov    %r14,%rsi
   1ecce:	e8 77 d8 fe ff       	call   c54a <realloc>
   1ecd3:	49 89 c0             	mov    %rax,%r8
   1ecd6:	48 85 c0             	test   %rax,%rax
   1ecd9:	74 28                	je     1ed03 <ibft_alloc_string+0x57>
   1ecdb:	48 89 03             	mov    %rax,(%rbx)
   1ecde:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1ece2:	48 89 e9             	mov    %rbp,%rcx
   1ece5:	49 01 c0             	add    %rax,%r8
   1ece8:	89 c2                	mov    %eax,%edx
   1ecea:	03 53 08             	add    0x8(%rbx),%edx
   1eced:	31 c0                	xor    %eax,%eax
   1ecef:	66 41 89 54 24 02    	mov    %dx,0x2(%r12)
   1ecf5:	4c 89 c7             	mov    %r8,%rdi
   1ecf8:	66 45 89 2c 24       	mov    %r13w,(%r12)
   1ecfd:	f3 aa                	rep stos %al,%es:(%rdi)
   1ecff:	4c 89 73 10          	mov    %r14,0x10(%rbx)
   1ed03:	5b                   	pop    %rbx
   1ed04:	4c 89 c0             	mov    %r8,%rax
   1ed07:	5d                   	pop    %rbp
   1ed08:	41 5c                	pop    %r12
   1ed0a:	41 5d                	pop    %r13
   1ed0c:	41 5e                	pop    %r14
   1ed0e:	c3                   	ret    

000000000001ed0f <ibft_netdev_is_required>:
   1ed0f:	48 8b 05 8a 96 00 00 	mov    0x968a(%rip),%rax        # 283a0 <ibft_model>
   1ed16:	41 54                	push   %r12
   1ed18:	4c 8d 25 81 96 00 00 	lea    0x9681(%rip),%r12        # 283a0 <ibft_model>
   1ed1f:	55                   	push   %rbp
   1ed20:	48 89 fd             	mov    %rdi,%rbp
   1ed23:	53                   	push   %rbx
   1ed24:	48 8d 98 10 fe ff ff 	lea    -0x1f0(%rax),%rbx
   1ed2b:	48 8d 83 f0 01 00 00 	lea    0x1f0(%rbx),%rax
   1ed32:	4c 39 e0             	cmp    %r12,%rax
   1ed35:	74 21                	je     1ed58 <ibft_netdev_is_required+0x49>
   1ed37:	48 8d bb b8 01 00 00 	lea    0x1b8(%rbx),%rdi
   1ed3e:	e8 4f 61 ff ff       	call   14e92 <tcpip_netdev>
   1ed43:	48 39 c5             	cmp    %rax,%rbp
   1ed46:	74 14                	je     1ed5c <ibft_netdev_is_required+0x4d>
   1ed48:	48 8b 9b f0 01 00 00 	mov    0x1f0(%rbx),%rbx
   1ed4f:	48 81 eb f0 01 00 00 	sub    $0x1f0,%rbx
   1ed56:	eb d3                	jmp    1ed2b <ibft_netdev_is_required+0x1c>
   1ed58:	31 c0                	xor    %eax,%eax
   1ed5a:	eb 05                	jmp    1ed61 <ibft_netdev_is_required+0x52>
   1ed5c:	b8 01 00 00 00       	mov    $0x1,%eax
   1ed61:	5b                   	pop    %rbx
   1ed62:	5d                   	pop    %rbp
   1ed63:	41 5c                	pop    %r12
   1ed65:	c3                   	ret    

000000000001ed66 <ibft_set_ipaddr_setting>:
   1ed66:	55                   	push   %rbp
   1ed67:	48 89 e5             	mov    %rsp,%rbp
   1ed6a:	41 55                	push   %r13
   1ed6c:	41 54                	push   %r12
   1ed6e:	41 89 cc             	mov    %ecx,%r12d
   1ed71:	53                   	push   %rbx
   1ed72:	48 89 f3             	mov    %rsi,%rbx
   1ed75:	48 89 d6             	mov    %rdx,%rsi
   1ed78:	48 83 ec 18          	sub    $0x18,%rsp
   1ed7c:	48 8b 05 ed b1 00 00 	mov    0xb1ed(%rip),%rax        # 29f70 <__stack_chk_guard>
   1ed83:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1ed87:	31 c0                	xor    %eax,%eax
   1ed89:	89 c8                	mov    %ecx,%eax
   1ed8b:	48 89 e2             	mov    %rsp,%rdx
   1ed8e:	48 8d 04 85 0f 00 00 	lea    0xf(,%rax,4),%rax
   1ed95:	00 
   1ed96:	48 c1 e8 04          	shr    $0x4,%rax
   1ed9a:	48 c1 e0 04          	shl    $0x4,%rax
   1ed9e:	48 89 c1             	mov    %rax,%rcx
   1eda1:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
   1eda8:	48 29 ca             	sub    %rcx,%rdx
   1edab:	48 39 d4             	cmp    %rdx,%rsp
   1edae:	74 12                	je     1edc2 <ibft_set_ipaddr_setting+0x5c>
   1edb0:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   1edb7:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
   1edbe:	00 00 
   1edc0:	eb e9                	jmp    1edab <ibft_set_ipaddr_setting+0x45>
   1edc2:	25 ff 0f 00 00       	and    $0xfff,%eax
   1edc7:	48 29 c4             	sub    %rax,%rsp
   1edca:	48 85 c0             	test   %rax,%rax
   1edcd:	74 06                	je     1edd5 <ibft_set_ipaddr_setting+0x6f>
   1edcf:	48 83 4c 04 f8 00    	orq    $0x0,-0x8(%rsp,%rax,1)
   1edd5:	48 8d 54 24 03       	lea    0x3(%rsp),%rdx
   1edda:	44 89 e1             	mov    %r12d,%ecx
   1eddd:	49 89 d5             	mov    %rdx,%r13
   1ede0:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
   1ede4:	e8 53 30 ff ff       	call   11e3c <fetch_ipv4_array_setting>
   1ede9:	49 c1 ed 02          	shr    $0x2,%r13
   1eded:	48 89 df             	mov    %rbx,%rdi
   1edf0:	42 8b 34 ad 00 00 00 	mov    0x0(,%r13,4),%esi
   1edf7:	00 
   1edf8:	e8 98 fe ff ff       	call   1ec95 <ibft_set_ipaddr>
   1edfd:	41 83 fc 02          	cmp    $0x2,%r12d
   1ee01:	75 11                	jne    1ee14 <ibft_set_ipaddr_setting+0xae>
   1ee03:	42 8b 34 ad 04 00 00 	mov    0x4(,%r13,4),%esi
   1ee0a:	00 
   1ee0b:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1ee0f:	e8 81 fe ff ff       	call   1ec95 <ibft_set_ipaddr>
   1ee14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ee18:	48 2b 05 51 b1 00 00 	sub    0xb151(%rip),%rax        # 29f70 <__stack_chk_guard>
   1ee1f:	74 05                	je     1ee26 <ibft_set_ipaddr_setting+0xc0>
   1ee21:	e8 3a 3c fe ff       	call   2a60 <__stack_chk_fail>
   1ee26:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
   1ee2a:	5b                   	pop    %rbx
   1ee2b:	41 5c                	pop    %r12
   1ee2d:	41 5d                	pop    %r13
   1ee2f:	5d                   	pop    %rbp
   1ee30:	c3                   	ret    

000000000001ee31 <ibft_complete>:
   1ee31:	f3 0f 1e fa          	endbr64 
   1ee35:	31 c0                	xor    %eax,%eax
   1ee37:	66 83 7f d8 00       	cmpw   $0x0,-0x28(%rdi)
   1ee3c:	75 05                	jne    1ee43 <ibft_complete+0x12>
   1ee3e:	b8 7a 1f f3 f9       	mov    $0xf9f31f7a,%eax
   1ee43:	c3                   	ret    

000000000001ee44 <ibft_set_string>:
   1ee44:	41 54                	push   %r12
   1ee46:	31 c0                	xor    %eax,%eax
   1ee48:	55                   	push   %rbp
   1ee49:	48 83 ec 18          	sub    $0x18,%rsp
   1ee4d:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1ee52:	48 85 d2             	test   %rdx,%rdx
   1ee55:	74 37                	je     1ee8e <ibft_set_string+0x4a>
   1ee57:	49 89 fc             	mov    %rdi,%r12
   1ee5a:	48 89 d7             	mov    %rdx,%rdi
   1ee5d:	48 89 d5             	mov    %rdx,%rbp
   1ee60:	e8 d5 4a ff ff       	call   1393a <strlen>
   1ee65:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1ee6a:	4c 89 e7             	mov    %r12,%rdi
   1ee6d:	48 89 c2             	mov    %rax,%rdx
   1ee70:	e8 37 fe ff ff       	call   1ecac <ibft_alloc_string>
   1ee75:	48 89 c7             	mov    %rax,%rdi
   1ee78:	48 85 c0             	test   %rax,%rax
   1ee7b:	75 07                	jne    1ee84 <ibft_set_string+0x40>
   1ee7d:	b8 77 1f f3 d5       	mov    $0xd5f31f77,%eax
   1ee82:	eb 0a                	jmp    1ee8e <ibft_set_string+0x4a>
   1ee84:	48 89 ee             	mov    %rbp,%rsi
   1ee87:	e8 2e 4b ff ff       	call   139ba <strcpy>
   1ee8c:	31 c0                	xor    %eax,%eax
   1ee8e:	48 83 c4 18          	add    $0x18,%rsp
   1ee92:	5d                   	pop    %rbp
   1ee93:	41 5c                	pop    %r12
   1ee95:	c3                   	ret    

000000000001ee96 <ibft_install>:
   1ee96:	f3 0f 1e fa          	endbr64 
   1ee9a:	41 57                	push   %r15
   1ee9c:	31 d2                	xor    %edx,%edx
   1ee9e:	41 56                	push   %r14
   1eea0:	41 55                	push   %r13
   1eea2:	4c 8d 2d f7 94 00 00 	lea    0x94f7(%rip),%r13        # 283a0 <ibft_model>
   1eea9:	41 54                	push   %r12
   1eeab:	55                   	push   %rbp
   1eeac:	53                   	push   %rbx
   1eead:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1eeb4:	48 8b 05 b5 b0 00 00 	mov    0xb0b5(%rip),%rax        # 29f70 <__stack_chk_guard>
   1eebb:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   1eec2:	00 
   1eec3:	48 8b 05 d6 94 00 00 	mov    0x94d6(%rip),%rax        # 283a0 <ibft_model>
   1eeca:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   1eecf:	48 2d f0 01 00 00    	sub    $0x1f0,%rax
   1eed5:	48 8d 88 f0 01 00 00 	lea    0x1f0(%rax),%rcx
   1eedc:	4c 39 e9             	cmp    %r13,%rcx
   1eedf:	74 11                	je     1eef2 <ibft_install+0x5c>
   1eee1:	48 8b 80 f0 01 00 00 	mov    0x1f0(%rax),%rax
   1eee8:	ff c2                	inc    %edx
   1eeea:	48 2d f0 01 00 00    	sub    $0x1f0,%rax
   1eef0:	eb e3                	jmp    1eed5 <ibft_install+0x3f>
   1eef2:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   1eef9:	00 00 
   1eefb:	b8 02 00 00 00       	mov    $0x2,%eax
   1ef00:	48 c7 44 24 68 00 00 	movq   $0x0,0x68(%rsp)
   1ef07:	00 00 
   1ef09:	39 c2                	cmp    %eax,%edx
   1ef0b:	48 0f 43 c2          	cmovae %rdx,%rax
   1ef0f:	45 31 e4             	xor    %r12d,%r12d
   1ef12:	4c 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%r14
   1ef19:	00 
   1ef1a:	49 8d 5e 49          	lea    0x49(%r14),%rbx
   1ef1e:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   1ef22:	48 8d 4b 50          	lea    0x50(%rbx),%rcx
   1ef26:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   1ef2b:	48 6b c8 70          	imul   $0x70,%rax,%rcx
   1ef2f:	48 c1 e0 06          	shl    $0x6,%rax
   1ef33:	48 03 4c 24 10       	add    0x10(%rsp),%rcx
   1ef38:	48 01 c8             	add    %rcx,%rax
   1ef3b:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
   1ef40:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1ef45:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   1ef4a:	85 d2                	test   %edx,%edx
   1ef4c:	0f 84 93 04 00 00    	je     1f3e5 <ibft_install+0x54f>
   1ef52:	48 89 c7             	mov    %rax,%rdi
   1ef55:	e8 00 d7 fe ff       	call   c65a <zalloc>
   1ef5a:	48 89 c5             	mov    %rax,%rbp
   1ef5d:	48 85 c0             	test   %rax,%rax
   1ef60:	75 0b                	jne    1ef6d <ibft_install+0xd7>
   1ef62:	41 bc 77 1f f3 ce    	mov    $0xcef31f77,%r12d
   1ef68:	e9 78 04 00 00       	jmp    1f3e5 <ibft_install+0x54f>
   1ef6d:	49 83 c6 0a          	add    $0xa,%r14
   1ef71:	66 c7 40 30 01 01    	movw   $0x101,0x30(%rax)
   1ef77:	66 44 89 70 32       	mov    %r14w,0x32(%rax)
   1ef7c:	66 89 58 38          	mov    %bx,0x38(%rax)
   1ef80:	49 8b 45 00          	mov    0x0(%r13),%rax
   1ef84:	4c 39 e8             	cmp    %r13,%rax
   1ef87:	0f 84 78 04 00 00    	je     1f405 <ibft_install+0x56f>
   1ef8d:	48 01 eb             	add    %rbp,%rbx
   1ef90:	48 8b 90 80 fe ff ff 	mov    -0x180(%rax),%rdx
   1ef97:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1ef9c:	c7 03 02 01 4a 00    	movl   $0x4a0102,(%rbx)
   1efa2:	48 8d 73 46          	lea    0x46(%rbx),%rsi
   1efa6:	c6 43 05 03          	movb   $0x3,0x5(%rbx)
   1efaa:	e8 95 fe ff ff       	call   1ee44 <ibft_set_string>
   1efaf:	41 89 c4             	mov    %eax,%r12d
   1efb2:	85 c0                	test   %eax,%eax
   1efb4:	0f 85 23 04 00 00    	jne    1f3dd <ibft_install+0x547>
   1efba:	48 8b 05 5f 79 00 00 	mov    0x795f(%rip),%rax        # 26920 <net_devices>
   1efc1:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%rsp)
   1efc8:	00 
   1efc9:	4c 8d 68 f0          	lea    -0x10(%rax),%r13
   1efcd:	49 8d 45 10          	lea    0x10(%r13),%rax
   1efd1:	48 8d 0d 48 79 00 00 	lea    0x7948(%rip),%rcx        # 26920 <net_devices>
   1efd8:	48 39 c8             	cmp    %rcx,%rax
   1efdb:	0f 84 ca 01 00 00    	je     1f1ab <ibft_install+0x315>
   1efe1:	4c 89 ef             	mov    %r13,%rdi
   1efe4:	e8 26 fd ff ff       	call   1ed0f <ibft_netdev_is_required>
   1efe9:	85 c0                	test   %eax,%eax
   1efeb:	0f 84 ad 01 00 00    	je     1f19e <ibft_install+0x308>
   1eff1:	8b 44 24 18          	mov    0x18(%rsp),%eax
   1eff5:	8b 5c 24 10          	mov    0x10(%rsp),%ebx
   1eff9:	45 31 c9             	xor    %r9d,%r9d
   1effc:	45 31 c0             	xor    %r8d,%r8d
   1efff:	4d 8d b5 68 01 00 00 	lea    0x168(%r13),%r14
   1f006:	4c 8d 3d 23 a3 00 00 	lea    0xa323(%rip),%r15        # 29330 <ip_setting>
   1f00d:	31 c9                	xor    %ecx,%ecx
   1f00f:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   1f016:	00 
   1f017:	66 89 5c 85 3a       	mov    %bx,0x3a(%rbp,%rax,4)
   1f01c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1f021:	4c 89 fe             	mov    %r15,%rsi
   1f024:	4c 89 f7             	mov    %r14,%rdi
   1f027:	48 8d 54 24 48       	lea    0x48(%rsp),%rdx
   1f02c:	48 8d 5c 05 00       	lea    0x0(%rbp,%rax,1),%rbx
   1f031:	8a 44 24 18          	mov    0x18(%rsp),%al
   1f035:	88 43 04             	mov    %al,0x4(%rbx)
   1f038:	49 8b 45 50          	mov    0x50(%r13),%rax
   1f03c:	c7 03 03 01 66 00    	movl   $0x660103,(%rbx)
   1f042:	c6 43 05 03          	movb   $0x3,0x5(%rbx)
   1f046:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1f04b:	e8 1d 2b ff ff       	call   11b6d <fetch_setting>
   1f050:	4c 3b 74 24 48       	cmp    0x48(%rsp),%r14
   1f055:	4c 89 fa             	mov    %r15,%rdx
   1f058:	4c 89 f7             	mov    %r14,%rdi
   1f05b:	0f 95 c0             	setne  %al
   1f05e:	48 8d 73 06          	lea    0x6(%rbx),%rsi
   1f062:	b9 01 00 00 00       	mov    $0x1,%ecx
   1f067:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
   1f06b:	4c 8d 7c 24 70       	lea    0x70(%rsp),%r15
   1f070:	88 43 17             	mov    %al,0x17(%rbx)
   1f073:	e8 ee fc ff ff       	call   1ed66 <ibft_set_ipaddr_setting>
   1f078:	48 8d 73 18          	lea    0x18(%rbx),%rsi
   1f07c:	b9 01 00 00 00       	mov    $0x1,%ecx
   1f081:	4c 89 f7             	mov    %r14,%rdi
   1f084:	48 8d 15 7d a2 00 00 	lea    0xa27d(%rip),%rdx        # 29308 <gateway_setting>
   1f08b:	e8 d6 fc ff ff       	call   1ed66 <ibft_set_ipaddr_setting>
   1f090:	31 ff                	xor    %edi,%edi
   1f092:	48 8d 73 28          	lea    0x28(%rbx),%rsi
   1f096:	b9 02 00 00 00       	mov    $0x2,%ecx
   1f09b:	48 8d 15 de a2 00 00 	lea    0xa2de(%rip),%rdx        # 29380 <dns_setting>
   1f0a2:	e8 bf fc ff ff       	call   1ed66 <ibft_set_ipaddr_setting>
   1f0a7:	48 8d 73 48          	lea    0x48(%rbx),%rsi
   1f0ab:	b9 01 00 00 00       	mov    $0x1,%ecx
   1f0b0:	4c 89 f7             	mov    %r14,%rdi
   1f0b3:	48 8d 15 fe a6 00 00 	lea    0xa6fe(%rip),%rdx        # 297b8 <dhcp_server_setting>
   1f0ba:	e8 a7 fc ff ff       	call   1ed66 <ibft_set_ipaddr_setting>
   1f0bf:	45 31 c9             	xor    %r9d,%r9d
   1f0c2:	45 31 c0             	xor    %r8d,%r8d
   1f0c5:	31 ff                	xor    %edi,%edi
   1f0c7:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   1f0cc:	4c 89 f9             	mov    %r15,%rcx
   1f0cf:	48 8d 35 b2 a4 00 00 	lea    0xa4b2(%rip),%rsi        # 29588 <hostname_setting>
   1f0d6:	e8 92 2a ff ff       	call   11b6d <fetch_setting>
   1f0db:	85 c0                	test   %eax,%eax
   1f0dd:	79 09                	jns    1f0e8 <ibft_install+0x252>
   1f0df:	c7 43 62 00 00 00 00 	movl   $0x0,0x62(%rbx)
   1f0e6:	eb 3d                	jmp    1f125 <ibft_install+0x28f>
   1f0e8:	48 63 d0             	movslq %eax,%rdx
   1f0eb:	48 8d 73 62          	lea    0x62(%rbx),%rsi
   1f0ef:	48 8d 7c 24 58       	lea    0x58(%rsp),%rdi
   1f0f4:	89 44 24 3c          	mov    %eax,0x3c(%rsp)
   1f0f8:	e8 af fb ff ff       	call   1ecac <ibft_alloc_string>
   1f0fd:	8b 4c 24 3c          	mov    0x3c(%rsp),%ecx
   1f101:	48 85 c0             	test   %rax,%rax
   1f104:	48 89 c2             	mov    %rax,%rdx
   1f107:	75 0a                	jne    1f113 <ibft_install+0x27d>
   1f109:	b8 77 1f f3 d5       	mov    $0xd5f31f77,%eax
   1f10e:	e9 c7 02 00 00       	jmp    1f3da <ibft_install+0x544>
   1f113:	ff c1                	inc    %ecx
   1f115:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1f11a:	4c 89 fe             	mov    %r15,%rsi
   1f11d:	48 63 c9             	movslq %ecx,%rcx
   1f120:	e8 f3 2c ff ff       	call   11e18 <fetch_string_setting>
   1f125:	48 8d 54 24 44       	lea    0x44(%rsp),%rdx
   1f12a:	48 8d 35 27 a2 00 00 	lea    0xa227(%rip),%rsi        # 29358 <netmask_setting>
   1f131:	4c 89 f7             	mov    %r14,%rdi
   1f134:	e8 23 2d ff ff       	call   11e5c <fetch_ipv4_setting>
   1f139:	8b 44 24 44          	mov    0x44(%rsp),%eax
   1f13d:	31 c9                	xor    %ecx,%ecx
   1f13f:	31 d2                	xor    %edx,%edx
   1f141:	85 c0                	test   %eax,%eax
   1f143:	74 11                	je     1f156 <ibft_install+0x2c0>
   1f145:	89 c1                	mov    %eax,%ecx
   1f147:	83 e1 01             	and    $0x1,%ecx
   1f14a:	83 f9 01             	cmp    $0x1,%ecx
   1f14d:	b1 01                	mov    $0x1,%cl
   1f14f:	83 da ff             	sbb    $0xffffffff,%edx
   1f152:	d1 e8                	shr    %eax
   1f154:	eb eb                	jmp    1f141 <ibft_install+0x2ab>
   1f156:	84 c9                	test   %cl,%cl
   1f158:	74 08                	je     1f162 <ibft_install+0x2cc>
   1f15a:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   1f161:	00 
   1f162:	88 53 16             	mov    %dl,0x16(%rbx)
   1f165:	4c 89 ef             	mov    %r13,%rdi
   1f168:	e8 1d f2 fe ff       	call   e38a <vlan_tag>
   1f16d:	48 8d 73 5a          	lea    0x5a(%rbx),%rsi
   1f171:	49 8d 7d 60          	lea    0x60(%r13),%rdi
   1f175:	66 89 43 58          	mov    %ax,0x58(%rbx)
   1f179:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1f17e:	ff 50 30             	call   *0x30(%rax)
   1f181:	85 c0                	test   %eax,%eax
   1f183:	0f 85 51 02 00 00    	jne    1f3da <ibft_install+0x544>
   1f189:	49 8b 45 40          	mov    0x40(%r13),%rax
   1f18d:	ff 44 24 18          	incl   0x18(%rsp)
   1f191:	48 83 44 24 10 70    	addq   $0x70,0x10(%rsp)
   1f197:	8b 40 34             	mov    0x34(%rax),%eax
   1f19a:	66 89 43 60          	mov    %ax,0x60(%rbx)
   1f19e:	4d 8b 6d 10          	mov    0x10(%r13),%r13
   1f1a2:	49 83 ed 10          	sub    $0x10,%r13
   1f1a6:	e9 22 fe ff ff       	jmp    1efcd <ibft_install+0x137>
   1f1ab:	48 8b 05 ee 91 00 00 	mov    0x91ee(%rip),%rax        # 283a0 <ibft_model>
   1f1b2:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   1f1b7:	31 db                	xor    %ebx,%ebx
   1f1b9:	4c 8d b0 10 fe ff ff 	lea    -0x1f0(%rax),%r14
   1f1c0:	49 01 ef             	add    %rbp,%r15
   1f1c3:	49 8d 86 f0 01 00 00 	lea    0x1f0(%r14),%rax
   1f1ca:	48 8d 0d cf 91 00 00 	lea    0x91cf(%rip),%rcx        # 283a0 <ibft_model>
   1f1d1:	48 39 c8             	cmp    %rcx,%rax
   1f1d4:	0f 84 a6 01 00 00    	je     1f380 <ibft_install+0x4ea>
   1f1da:	44 89 fa             	mov    %r15d,%edx
   1f1dd:	49 8d 7f 06          	lea    0x6(%r15),%rdi
   1f1e1:	4d 8d 86 b8 01 00 00 	lea    0x1b8(%r14),%r8
   1f1e8:	89 d8                	mov    %ebx,%eax
   1f1ea:	29 ea                	sub    %ebp,%edx
   1f1ec:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
   1f1f1:	4c 8d 6c 24 58       	lea    0x58(%rsp),%r13
   1f1f6:	66 89 54 85 3c       	mov    %dx,0x3c(%rbp,%rax,4)
   1f1fb:	41 88 5f 04          	mov    %bl,0x4(%r15)
   1f1ff:	41 c6 07 04          	movb   $0x4,(%r15)
   1f203:	41 c6 47 01 01       	movb   $0x1,0x1(%r15)
   1f208:	66 41 c7 47 02 36 00 	movw   $0x36,0x2(%r15)
   1f20f:	41 c6 47 05 03       	movb   $0x3,0x5(%r15)
   1f214:	41 8b b6 c0 01 00 00 	mov    0x1c0(%r14),%esi
   1f21b:	e8 75 fa ff ff       	call   1ec95 <ibft_set_ipaddr>
   1f220:	66 41 8b 86 bc 01 00 	mov    0x1bc(%r14),%ax
   1f227:	00 
   1f228:	49 8d 77 22          	lea    0x22(%r15),%rsi
   1f22c:	4c 89 ef             	mov    %r13,%rdi
   1f22f:	86 c4                	xchg   %al,%ah
   1f231:	66 41 89 47 16       	mov    %ax,0x16(%r15)
   1f236:	41 8b 86 d8 01 00 00 	mov    0x1d8(%r14),%eax
   1f23d:	41 89 47 18          	mov    %eax,0x18(%r15)
   1f241:	41 8b 86 dc 01 00 00 	mov    0x1dc(%r14),%eax
   1f248:	41 89 47 1c          	mov    %eax,0x1c(%r15)
   1f24c:	49 8b 96 88 00 00 00 	mov    0x88(%r14),%rdx
   1f253:	e8 ec fb ff ff       	call   1ee44 <ibft_set_string>
   1f258:	85 c0                	test   %eax,%eax
   1f25a:	0f 85 7a 01 00 00    	jne    1f3da <ibft_install+0x544>
   1f260:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1f265:	e8 28 5c ff ff       	call   14e92 <tcpip_netdev>
   1f26a:	48 89 c6             	mov    %rax,%rsi
   1f26d:	48 85 c0             	test   %rax,%rax
   1f270:	75 0b                	jne    1f27d <ibft_install+0x3e7>
   1f272:	41 bc 70 1f f3 e8    	mov    $0xe8f31f70,%r12d
   1f278:	e9 60 01 00 00       	jmp    1f3dd <ibft_install+0x547>
   1f27d:	48 8d 05 9c 76 00 00 	lea    0x769c(%rip),%rax        # 26920 <net_devices>
   1f284:	48 8b 00             	mov    (%rax),%rax
   1f287:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1f28c:	48 8d 50 f0          	lea    -0x10(%rax),%rdx
   1f290:	48 8d 42 10          	lea    0x10(%rdx),%rax
   1f294:	48 8d 0d 85 76 00 00 	lea    0x7685(%rip),%rcx        # 26920 <net_devices>
   1f29b:	48 39 c8             	cmp    %rcx,%rax
   1f29e:	74 33                	je     1f2d3 <ibft_install+0x43d>
   1f2a0:	48 39 d6             	cmp    %rdx,%rsi
   1f2a3:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1f2a8:	74 34                	je     1f2de <ibft_install+0x448>
   1f2aa:	48 89 d7             	mov    %rdx,%rdi
   1f2ad:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1f2b2:	e8 58 fa ff ff       	call   1ed0f <ibft_netdev_is_required>
   1f2b7:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1f2bc:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1f2c1:	85 c0                	test   %eax,%eax
   1f2c3:	74 04                	je     1f2c9 <ibft_install+0x433>
   1f2c5:	41 fe 47 21          	incb   0x21(%r15)
   1f2c9:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1f2cd:	48 83 ea 10          	sub    $0x10,%rdx
   1f2d1:	eb bd                	jmp    1f290 <ibft_install+0x3fa>
   1f2d3:	41 bc 7e 1f f3 e3    	mov    $0xe3f31f7e,%r12d
   1f2d9:	e9 ff 00 00 00       	jmp    1f3dd <ibft_install+0x547>
   1f2de:	41 f6 86 92 00 00 00 	testb  $0x1,0x92(%r14)
   1f2e5:	01 
   1f2e6:	75 0c                	jne    1f2f4 <ibft_install+0x45e>
   1f2e8:	41 f6 86 92 00 00 00 	testb  $0x2,0x92(%r14)
   1f2ef:	02 
   1f2f0:	74 75                	je     1f367 <ibft_install+0x4d1>
   1f2f2:	eb 3c                	jmp    1f330 <ibft_install+0x49a>
   1f2f4:	41 c6 47 20 01       	movb   $0x1,0x20(%r15)
   1f2f9:	49 8b 96 98 00 00 00 	mov    0x98(%r14),%rdx
   1f300:	49 8d 77 26          	lea    0x26(%r15),%rsi
   1f304:	4c 89 ef             	mov    %r13,%rdi
   1f307:	e8 38 fb ff ff       	call   1ee44 <ibft_set_string>
   1f30c:	85 c0                	test   %eax,%eax
   1f30e:	0f 85 c6 00 00 00    	jne    1f3da <ibft_install+0x544>
   1f314:	49 8b 96 a0 00 00 00 	mov    0xa0(%r14),%rdx
   1f31b:	49 8d 77 2a          	lea    0x2a(%r15),%rsi
   1f31f:	4c 89 ef             	mov    %r13,%rdi
   1f322:	e8 1d fb ff ff       	call   1ee44 <ibft_set_string>
   1f327:	85 c0                	test   %eax,%eax
   1f329:	74 bd                	je     1f2e8 <ibft_install+0x452>
   1f32b:	e9 aa 00 00 00       	jmp    1f3da <ibft_install+0x544>
   1f330:	41 c6 47 20 02       	movb   $0x2,0x20(%r15)
   1f335:	49 8b 96 a8 00 00 00 	mov    0xa8(%r14),%rdx
   1f33c:	49 8d 77 2e          	lea    0x2e(%r15),%rsi
   1f340:	4c 89 ef             	mov    %r13,%rdi
   1f343:	e8 fc fa ff ff       	call   1ee44 <ibft_set_string>
   1f348:	85 c0                	test   %eax,%eax
   1f34a:	0f 85 8a 00 00 00    	jne    1f3da <ibft_install+0x544>
   1f350:	49 8b 96 b0 00 00 00 	mov    0xb0(%r14),%rdx
   1f357:	49 8d 77 32          	lea    0x32(%r15),%rsi
   1f35b:	4c 89 ef             	mov    %r13,%rdi
   1f35e:	e8 e1 fa ff ff       	call   1ee44 <ibft_set_string>
   1f363:	85 c0                	test   %eax,%eax
   1f365:	75 73                	jne    1f3da <ibft_install+0x544>
   1f367:	49 8b 8e f0 01 00 00 	mov    0x1f0(%r14),%rcx
   1f36e:	ff c3                	inc    %ebx
   1f370:	49 83 c7 40          	add    $0x40,%r15
   1f374:	4c 8d b1 10 fe ff ff 	lea    -0x1f0(%rcx),%r14
   1f37b:	e9 43 fe ff ff       	jmp    1f1c3 <ibft_install+0x32d>
   1f380:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   1f385:	48 03 5c 24 68       	add    0x68(%rsp),%rbx
   1f38a:	48 89 ef             	mov    %rbp,%rdi
   1f38d:	48 89 de             	mov    %rbx,%rsi
   1f390:	e8 b5 d1 fe ff       	call   c54a <realloc>
   1f395:	49 89 c5             	mov    %rax,%r13
   1f398:	48 85 c0             	test   %rax,%rax
   1f39b:	74 40                	je     1f3dd <ibft_install+0x547>
   1f39d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1f3a2:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
   1f3a7:	c6 40 08 01          	movb   $0x1,0x8(%rax)
   1f3ab:	31 ed                	xor    %ebp,%ebp
   1f3ad:	c7 00 69 42 46 54    	movl   $0x54464269,(%rax)
   1f3b3:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
   1f3b8:	89 58 04             	mov    %ebx,0x4(%rax)
   1f3bb:	48 01 c7             	add    %rax,%rdi
   1f3be:	e8 4a 7f ff ff       	call   1730d <__memcpy>
   1f3c3:	4c 89 ef             	mov    %r13,%rdi
   1f3c6:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1f3cb:	ff d0                	call   *%rax
   1f3cd:	4c 89 ef             	mov    %r13,%rdi
   1f3d0:	41 89 c4             	mov    %eax,%r12d
   1f3d3:	e8 77 d2 fe ff       	call   c64f <free>
   1f3d8:	eb 03                	jmp    1f3dd <ibft_install+0x547>
   1f3da:	41 89 c4             	mov    %eax,%r12d
   1f3dd:	48 89 ef             	mov    %rbp,%rdi
   1f3e0:	e8 6a d2 fe ff       	call   c64f <free>
   1f3e5:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1f3ea:	e8 60 d2 fe ff       	call   c64f <free>
   1f3ef:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
   1f3f6:	00 
   1f3f7:	48 2b 05 72 ab 00 00 	sub    0xab72(%rip),%rax        # 29f70 <__stack_chk_guard>
   1f3fe:	74 0f                	je     1f40f <ibft_install+0x579>
   1f400:	e8 5b 36 fe ff       	call   2a60 <__stack_chk_fail>
   1f405:	48 8b 04 25 70 00 00 	mov    0x70,%rax
   1f40c:	00 
   1f40d:	0f 0b                	ud2    
   1f40f:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1f416:	44 89 e0             	mov    %r12d,%eax
   1f419:	5b                   	pop    %rbx
   1f41a:	5d                   	pop    %rbp
   1f41b:	41 5c                	pop    %r12
   1f41d:	41 5d                	pop    %r13
   1f41f:	41 5e                	pop    %r14
   1f421:	41 5f                	pop    %r15
   1f423:	c3                   	ret    

000000000001f424 <icmpv4_rx>:
   1f424:	f3 0f 1e fa          	endbr64 
   1f428:	41 54                	push   %r12
   1f42a:	55                   	push   %rbp
   1f42b:	48 89 fd             	mov    %rdi,%rbp
   1f42e:	53                   	push   %rbx
   1f42f:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   1f433:	48 8b 77 20          	mov    0x20(%rdi),%rsi
   1f437:	48 29 de             	sub    %rbx,%rsi
   1f43a:	48 83 fe 03          	cmp    $0x3,%rsi
   1f43e:	77 02                	ja     1f442 <icmpv4_rx+0x1e>
   1f440:	eb 10                	jmp    1f452 <icmpv4_rx+0x2e>
   1f442:	48 89 df             	mov    %rbx,%rdi
   1f445:	49 89 d4             	mov    %rdx,%r12
   1f448:	e8 9c 5a ff ff       	call   14ee9 <tcpip_chksum>
   1f44d:	66 85 c0             	test   %ax,%ax
   1f450:	74 08                	je     1f45a <icmpv4_rx+0x36>
   1f452:	41 bc 7e 9f e6 e3    	mov    $0xe3e69f7e,%r12d
   1f458:	eb 32                	jmp    1f48c <icmpv4_rx+0x68>
   1f45a:	8a 03                	mov    (%rbx),%al
   1f45c:	84 c0                	test   %al,%al
   1f45e:	74 1a                	je     1f47a <icmpv4_rx+0x56>
   1f460:	3c 08                	cmp    $0x8,%al
   1f462:	75 25                	jne    1f489 <icmpv4_rx+0x65>
   1f464:	5b                   	pop    %rbx
   1f465:	4c 89 e6             	mov    %r12,%rsi
   1f468:	48 8d 15 f1 96 00 00 	lea    0x96f1(%rip),%rdx        # 28b60 <icmpv4_echo_protocol>
   1f46f:	48 89 ef             	mov    %rbp,%rdi
   1f472:	5d                   	pop    %rbp
   1f473:	41 5c                	pop    %r12
   1f475:	e9 bf 1d 00 00       	jmp    21239 <icmp_rx_echo_request>
   1f47a:	5b                   	pop    %rbx
   1f47b:	4c 89 e6             	mov    %r12,%rsi
   1f47e:	48 89 ef             	mov    %rbp,%rdi
   1f481:	5d                   	pop    %rbp
   1f482:	41 5c                	pop    %r12
   1f484:	e9 ea 1d 00 00       	jmp    21273 <icmp_rx_echo_reply>
   1f489:	45 31 e4             	xor    %r12d,%r12d
   1f48c:	48 89 ef             	mov    %rbp,%rdi
   1f48f:	e8 02 a8 fe ff       	call   9c96 <free_iob>
   1f494:	44 89 e0             	mov    %r12d,%eax
   1f497:	5b                   	pop    %rbx
   1f498:	5d                   	pop    %rbp
   1f499:	41 5c                	pop    %r12
   1f49b:	c3                   	ret    

000000000001f49c <ifpoller_progress>:
   1f49c:	f3 0f 1e fa          	endbr64 
   1f4a0:	ff 67 30             	jmp    *0x30(%rdi)

000000000001f4a3 <ifstat_errors>:
   1f4a3:	41 56                	push   %r14
   1f4a5:	41 55                	push   %r13
   1f4a7:	4c 8d 2d 3d 4d 00 00 	lea    0x4d3d(%rip),%r13        # 241eb <.LC0>
   1f4ae:	41 54                	push   %r12
   1f4b0:	49 89 f4             	mov    %rsi,%r12
   1f4b3:	55                   	push   %rbp
   1f4b4:	48 89 fd             	mov    %rdi,%rbp
   1f4b7:	53                   	push   %rbx
   1f4b8:	31 db                	xor    %ebx,%ebx
   1f4ba:	44 8b 74 1d 0c       	mov    0xc(%rbp,%rbx,1),%r14d
   1f4bf:	45 85 f6             	test   %r14d,%r14d
   1f4c2:	74 1c                	je     1f4e0 <ifstat_errors+0x3d>
   1f4c4:	8b 7c 1d 08          	mov    0x8(%rbp,%rbx,1),%edi
   1f4c8:	e8 cf 42 ff ff       	call   1379c <strerror>
   1f4cd:	44 89 f2             	mov    %r14d,%edx
   1f4d0:	4c 89 e6             	mov    %r12,%rsi
   1f4d3:	4c 89 ef             	mov    %r13,%rdi
   1f4d6:	48 89 c1             	mov    %rax,%rcx
   1f4d9:	31 c0                	xor    %eax,%eax
   1f4db:	e8 be 7c ff ff       	call   1719e <printf>
   1f4e0:	48 83 c3 08          	add    $0x8,%rbx
   1f4e4:	48 83 fb 20          	cmp    $0x20,%rbx
   1f4e8:	75 d0                	jne    1f4ba <ifstat_errors+0x17>
   1f4ea:	5b                   	pop    %rbx
   1f4eb:	5d                   	pop    %rbp
   1f4ec:	41 5c                	pop    %r12
   1f4ee:	41 5d                	pop    %r13
   1f4f0:	41 5e                	pop    %r14
   1f4f2:	c3                   	ret    

000000000001f4f3 <iflinkwait_progress>:
   1f4f3:	f3 0f 1e fa          	endbr64 
   1f4f7:	48 8b 47 20          	mov    0x20(%rdi),%rax
   1f4fb:	41 54                	push   %r12
   1f4fd:	44 8b a0 84 00 00 00 	mov    0x84(%rax),%r12d
   1f504:	45 85 e4             	test   %r12d,%r12d
   1f507:	75 07                	jne    1f510 <iflinkwait_progress+0x1d>
   1f509:	31 f6                	xor    %esi,%esi
   1f50b:	e8 4f a3 fe ff       	call   985f <intf_close>
   1f510:	44 89 e0             	mov    %r12d,%eax
   1f513:	41 5c                	pop    %r12
   1f515:	c3                   	ret    

000000000001f516 <ifconf_progress>:
   1f516:	f3 0f 1e fa          	endbr64 
   1f51a:	41 55                	push   %r13
   1f51c:	41 54                	push   %r12
   1f51e:	45 31 e4             	xor    %r12d,%r12d
   1f521:	55                   	push   %rbp
   1f522:	48 89 fd             	mov    %rdi,%rbp
   1f525:	53                   	push   %rbx
   1f526:	51                   	push   %rcx
   1f527:	4c 8b 6f 20          	mov    0x20(%rdi),%r13
   1f52b:	48 8b 5f 28          	mov    0x28(%rdi),%rbx
   1f52f:	4c 89 ef             	mov    %r13,%rdi
   1f532:	e8 70 ef fe ff       	call   e4a7 <netdev_configuration_in_progress>
   1f537:	85 c0                	test   %eax,%eax
   1f539:	75 47                	jne    1f582 <ifconf_progress+0x6c>
   1f53b:	48 85 db             	test   %rbx,%rbx
   1f53e:	74 22                	je     1f562 <ifconf_progress+0x4c>
   1f540:	48 8d 05 29 97 00 00 	lea    0x9729(%rip),%rax        # 28c70 <dhcp_configurator>
   1f547:	48 29 c3             	sub    %rax,%rbx
   1f54a:	48 c1 fb 03          	sar    $0x3,%rbx
   1f54e:	69 db ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%ebx
   1f554:	48 6b db 38          	imul   $0x38,%rbx,%rbx
   1f558:	45 8b a4 1d e0 01 00 	mov    0x1e0(%r13,%rbx,1),%r12d
   1f55f:	00 
   1f560:	eb 15                	jmp    1f577 <ifconf_progress+0x61>
   1f562:	4c 89 ef             	mov    %r13,%rdi
   1f565:	41 89 c4             	mov    %eax,%r12d
   1f568:	e8 7c ef fe ff       	call   e4e9 <netdev_configuration_ok>
   1f56d:	85 c0                	test   %eax,%eax
   1f56f:	75 06                	jne    1f577 <ifconf_progress+0x61>
   1f571:	41 bc 7a 1e f1 fb    	mov    $0xfbf11e7a,%r12d
   1f577:	44 89 e6             	mov    %r12d,%esi
   1f57a:	48 89 ef             	mov    %rbp,%rdi
   1f57d:	e8 dd a2 fe ff       	call   985f <intf_close>
   1f582:	5a                   	pop    %rdx
   1f583:	44 89 e0             	mov    %r12d,%eax
   1f586:	5b                   	pop    %rbx
   1f587:	5d                   	pop    %rbp
   1f588:	41 5c                	pop    %r12
   1f58a:	41 5d                	pop    %r13
   1f58c:	c3                   	ret    

000000000001f58d <ifopen>:
   1f58d:	f3 0f 1e fa          	endbr64 
   1f591:	41 54                	push   %r12
   1f593:	53                   	push   %rbx
   1f594:	48 89 fb             	mov    %rdi,%rbx
   1f597:	51                   	push   %rcx
   1f598:	e8 85 e8 fe ff       	call   de22 <netdev_open>
   1f59d:	41 89 c4             	mov    %eax,%r12d
   1f5a0:	85 c0                	test   %eax,%eax
   1f5a2:	74 1c                	je     1f5c0 <ifopen+0x33>
   1f5a4:	89 c7                	mov    %eax,%edi
   1f5a6:	e8 f1 41 ff ff       	call   1379c <strerror>
   1f5ab:	48 8d 73 34          	lea    0x34(%rbx),%rsi
   1f5af:	48 8d 3d 48 4c 00 00 	lea    0x4c48(%rip),%rdi        # 241fe <.LC1>
   1f5b6:	48 89 c2             	mov    %rax,%rdx
   1f5b9:	31 c0                	xor    %eax,%eax
   1f5bb:	e8 de 7b ff ff       	call   1719e <printf>
   1f5c0:	44 89 e0             	mov    %r12d,%eax
   1f5c3:	5a                   	pop    %rdx
   1f5c4:	5b                   	pop    %rbx
   1f5c5:	41 5c                	pop    %r12
   1f5c7:	c3                   	ret    

000000000001f5c8 <ifclose>:
   1f5c8:	f3 0f 1e fa          	endbr64 
   1f5cc:	e9 a8 e8 fe ff       	jmp    de79 <netdev_close>

000000000001f5d1 <ifstat>:
   1f5d1:	f3 0f 1e fa          	endbr64 
   1f5d5:	41 57                	push   %r15
   1f5d7:	48 8d 05 f6 4d 00 00 	lea    0x4df6(%rip),%rax        # 243d4 <.LC0>
   1f5de:	4c 8d 0d eb 34 00 00 	lea    0x34eb(%rip),%r9        # 22ad0 <.LC6>
   1f5e5:	41 56                	push   %r14
   1f5e7:	41 55                	push   %r13
   1f5e9:	41 54                	push   %r12
   1f5eb:	4c 8d 25 23 4c 00 00 	lea    0x4c23(%rip),%r12        # 24215 <.LC2>
   1f5f2:	55                   	push   %rbp
   1f5f3:	48 8d 2d 26 4c 00 00 	lea    0x4c26(%rip),%rbp        # 24220 <.LC4>
   1f5fa:	53                   	push   %rbx
   1f5fb:	48 89 fb             	mov    %rdi,%rbx
   1f5fe:	48 83 ec 28          	sub    $0x28,%rsp
   1f602:	83 bf 98 00 00 00 00 	cmpl   $0x0,0x98(%rdi)
   1f609:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   1f60d:	4c 0f 44 e0          	cmove  %rax,%r12
   1f611:	83 bf 84 00 00 00 00 	cmpl   $0x0,0x84(%rdi)
   1f618:	48 8d 05 04 4c 00 00 	lea    0x4c04(%rip),%rax        # 24223 <.LC5>
   1f61f:	44 8b 97 44 01 00 00 	mov    0x144(%rdi),%r10d
   1f626:	48 0f 45 e8          	cmovne %rax,%rbp
   1f62a:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1f62f:	4d 8b 68 28          	mov    0x28(%r8),%r13
   1f633:	48 8d 05 ee 4b 00 00 	lea    0x4bee(%rip),%rax        # 24228 <.LC7>
   1f63a:	f6 87 80 00 00 00 01 	testb  $0x1,0x80(%rdi)
   1f641:	8b 8f 40 01 00 00    	mov    0x140(%rdi),%ecx
   1f647:	44 89 54 24 1c       	mov    %r10d,0x1c(%rsp)
   1f64c:	4c 0f 44 c8          	cmove  %rax,%r9
   1f650:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1f654:	48 83 c7 60          	add    $0x60,%rdi
   1f658:	44 8b bf bc 00 00 00 	mov    0xbc(%rdi),%r15d
   1f65f:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
   1f663:	44 8b b7 b8 00 00 00 	mov    0xb8(%rdi),%r14d
   1f66a:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   1f66f:	ff 50 20             	call   *0x20(%rax)
   1f672:	44 8b 54 24 1c       	mov    0x1c(%rsp),%r10d
   1f677:	48 8d 3d b1 4b 00 00 	lea    0x4bb1(%rip),%rdi        # 2422f <.LC8>
   1f67e:	48 8d 73 34          	lea    0x34(%rbx),%rsi
   1f682:	48 89 c2             	mov    %rax,%rdx
   1f685:	31 c0                	xor    %eax,%eax
   1f687:	41 52                	push   %r10
   1f689:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   1f68d:	51                   	push   %rcx
   1f68e:	4c 89 e9             	mov    %r13,%rcx
   1f691:	41 57                	push   %r15
   1f693:	41 56                	push   %r14
   1f695:	41 54                	push   %r12
   1f697:	55                   	push   %rbp
   1f698:	4c 8b 4c 24 40       	mov    0x40(%rsp),%r9
   1f69d:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   1f6a2:	e8 f7 7a ff ff       	call   1719e <printf>
   1f6a7:	8b bb 84 00 00 00    	mov    0x84(%rbx),%edi
   1f6ad:	48 83 c4 30          	add    $0x30,%rsp
   1f6b1:	85 ff                	test   %edi,%edi
   1f6b3:	74 16                	je     1f6cb <ifstat+0xfa>
   1f6b5:	e8 e2 40 ff ff       	call   1379c <strerror>
   1f6ba:	48 8d 3d b3 4b 00 00 	lea    0x4bb3(%rip),%rdi        # 24274 <.LC9>
   1f6c1:	48 89 c6             	mov    %rax,%rsi
   1f6c4:	31 c0                	xor    %eax,%eax
   1f6c6:	e8 d3 7a ff ff       	call   1719e <printf>
   1f6cb:	48 8d bb 18 01 00 00 	lea    0x118(%rbx),%rdi
   1f6d2:	48 8d 35 b0 4b 00 00 	lea    0x4bb0(%rip),%rsi        # 24289 <.LC10>
   1f6d9:	e8 c5 fd ff ff       	call   1f4a3 <ifstat_errors>
   1f6de:	48 83 c4 28          	add    $0x28,%rsp
   1f6e2:	48 8d bb 40 01 00 00 	lea    0x140(%rbx),%rdi
   1f6e9:	48 8d 35 9d 4b 00 00 	lea    0x4b9d(%rip),%rsi        # 2428d <.LC11>
   1f6f0:	5b                   	pop    %rbx
   1f6f1:	5d                   	pop    %rbp
   1f6f2:	41 5c                	pop    %r12
   1f6f4:	41 5d                	pop    %r13
   1f6f6:	41 5e                	pop    %r14
   1f6f8:	41 5f                	pop    %r15
   1f6fa:	e9 a4 fd ff ff       	jmp    1f4a3 <ifstat_errors>

000000000001f6ff <iflinkwait>:
   1f6ff:	f3 0f 1e fa          	endbr64 
   1f703:	55                   	push   %rbp
   1f704:	48 89 f5             	mov    %rsi,%rbp
   1f707:	53                   	push   %rbx
   1f708:	48 89 fb             	mov    %rdi,%rbx
   1f70b:	41 50                	push   %r8
   1f70d:	e8 7b fe ff ff       	call   1f58d <ifopen>
   1f712:	85 c0                	test   %eax,%eax
   1f714:	75 69                	jne    1f77f <iflinkwait+0x80>
   1f716:	48 89 df             	mov    %rbx,%rdi
   1f719:	e8 01 e5 fe ff       	call   dc1f <netdev_poll>
   1f71e:	8b 83 84 00 00 00    	mov    0x84(%rbx),%eax
   1f724:	85 c0                	test   %eax,%eax
   1f726:	74 57                	je     1f77f <iflinkwait+0x80>
   1f728:	48 8d 73 34          	lea    0x34(%rbx),%rsi
   1f72c:	48 8d 3d 5e 4b 00 00 	lea    0x4b5e(%rip),%rdi        # 24291 <.LC12>
   1f733:	31 c0                	xor    %eax,%eax
   1f735:	e8 64 7a ff ff       	call   1719e <printf>
   1f73a:	48 8d 05 b2 fd ff ff 	lea    -0x24e(%rip),%rax        # 1f4f3 <iflinkwait_progress>
   1f741:	48 8d 35 38 85 00 00 	lea    0x8538(%rip),%rsi        # 27c80 <ifpoller.0>
   1f748:	48 89 1d 51 85 00 00 	mov    %rbx,0x8551(%rip)        # 27ca0 <ifpoller.0+0x20>
   1f74f:	48 8d 3d ca 70 00 00 	lea    0x70ca(%rip),%rdi        # 26820 <monojob>
   1f756:	48 89 05 53 85 00 00 	mov    %rax,0x8553(%rip)        # 27cb0 <ifpoller.0+0x30>
   1f75d:	48 c7 05 40 85 00 00 	movq   $0x0,0x8540(%rip)        # 27ca8 <ifpoller.0+0x28>
   1f764:	00 00 00 00 
   1f768:	e8 04 a0 fe ff       	call   9771 <intf_plug_plug>
   1f76d:	59                   	pop    %rcx
   1f76e:	48 89 ee             	mov    %rbp,%rsi
   1f771:	5b                   	pop    %rbx
   1f772:	48 8d 3d 5b 4c 00 00 	lea    0x4c5b(%rip),%rdi        # 243d4 <.LC0>
   1f779:	5d                   	pop    %rbp
   1f77a:	e9 ac da fe ff       	jmp    d22b <monojob_wait>
   1f77f:	5a                   	pop    %rdx
   1f780:	5b                   	pop    %rbx
   1f781:	5d                   	pop    %rbp
   1f782:	c3                   	ret    

000000000001f783 <ifconf>:
   1f783:	f3 0f 1e fa          	endbr64 
   1f787:	41 56                	push   %r14
   1f789:	49 89 d6             	mov    %rdx,%r14
   1f78c:	41 55                	push   %r13
   1f78e:	41 54                	push   %r12
   1f790:	55                   	push   %rbp
   1f791:	48 89 f5             	mov    %rsi,%rbp
   1f794:	be 00 3c 00 00       	mov    $0x3c00,%esi
   1f799:	53                   	push   %rbx
   1f79a:	48 89 fb             	mov    %rdi,%rbx
   1f79d:	e8 5d ff ff ff       	call   1f6ff <iflinkwait>
   1f7a2:	41 89 c4             	mov    %eax,%r12d
   1f7a5:	85 c0                	test   %eax,%eax
   1f7a7:	0f 85 f8 00 00 00    	jne    1f8a5 <ifconf+0x122>
   1f7ad:	4c 8d 6b 34          	lea    0x34(%rbx),%r13
   1f7b1:	48 85 ed             	test   %rbp,%rbp
   1f7b4:	74 36                	je     1f7ec <ifconf+0x69>
   1f7b6:	48 89 ee             	mov    %rbp,%rsi
   1f7b9:	48 89 df             	mov    %rbx,%rdi
   1f7bc:	e8 0f ec fe ff       	call   e3d0 <netdev_configure>
   1f7c1:	41 89 c4             	mov    %eax,%r12d
   1f7c4:	85 c0                	test   %eax,%eax
   1f7c6:	74 53                	je     1f81b <ifconf+0x98>
   1f7c8:	89 c7                	mov    %eax,%edi
   1f7ca:	e8 cd 3f ff ff       	call   1379c <strerror>
   1f7cf:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1f7d3:	4c 89 ee             	mov    %r13,%rsi
   1f7d6:	48 8d 3d d1 4a 00 00 	lea    0x4ad1(%rip),%rdi        # 242ae <.LC15>
   1f7dd:	48 89 c1             	mov    %rax,%rcx
   1f7e0:	31 c0                	xor    %eax,%eax
   1f7e2:	e8 b7 79 ff ff       	call   1719e <printf>
   1f7e7:	e9 b9 00 00 00       	jmp    1f8a5 <ifconf+0x122>
   1f7ec:	48 89 df             	mov    %rbx,%rdi
   1f7ef:	e8 65 ec fe ff       	call   e459 <netdev_configure_all>
   1f7f4:	41 89 c4             	mov    %eax,%r12d
   1f7f7:	85 c0                	test   %eax,%eax
   1f7f9:	74 20                	je     1f81b <ifconf+0x98>
   1f7fb:	89 c7                	mov    %eax,%edi
   1f7fd:	e8 9a 3f ff ff       	call   1379c <strerror>
   1f802:	4c 89 ee             	mov    %r13,%rsi
   1f805:	48 8d 3d c5 4a 00 00 	lea    0x4ac5(%rip),%rdi        # 242d1 <.LC16>
   1f80c:	48 89 c2             	mov    %rax,%rdx
   1f80f:	31 c0                	xor    %eax,%eax
   1f811:	e8 88 79 ff ff       	call   1719e <printf>
   1f816:	e9 8a 00 00 00       	jmp    1f8a5 <ifconf+0x122>
   1f81b:	48 8b 43 50          	mov    0x50(%rbx),%rax
   1f81f:	48 8d 7b 60          	lea    0x60(%rbx),%rdi
   1f823:	4c 8d 25 aa 4b 00 00 	lea    0x4baa(%rip),%r12        # 243d4 <.LC0>
   1f82a:	ff 50 20             	call   *0x20(%rax)
   1f82d:	48 85 ed             	test   %rbp,%rbp
   1f830:	49 89 c1             	mov    %rax,%r9
   1f833:	75 5c                	jne    1f891 <ifconf+0x10e>
   1f835:	4c 89 e2             	mov    %r12,%rdx
   1f838:	4c 89 e1             	mov    %r12,%rcx
   1f83b:	4c 89 e6             	mov    %r12,%rsi
   1f83e:	4d 89 e8             	mov    %r13,%r8
   1f841:	48 8d 3d a5 4a 00 00 	lea    0x4aa5(%rip),%rdi        # 242ed <.LC17>
   1f848:	31 c0                	xor    %eax,%eax
   1f84a:	e8 4f 79 ff ff       	call   1719e <printf>
   1f84f:	48 8d 05 c0 fc ff ff 	lea    -0x340(%rip),%rax        # 1f516 <ifconf_progress>
   1f856:	48 8d 35 23 84 00 00 	lea    0x8423(%rip),%rsi        # 27c80 <ifpoller.0>
   1f85d:	48 89 1d 3c 84 00 00 	mov    %rbx,0x843c(%rip)        # 27ca0 <ifpoller.0+0x20>
   1f864:	48 8d 3d b5 6f 00 00 	lea    0x6fb5(%rip),%rdi        # 26820 <monojob>
   1f86b:	48 89 2d 36 84 00 00 	mov    %rbp,0x8436(%rip)        # 27ca8 <ifpoller.0+0x28>
   1f872:	48 89 05 37 84 00 00 	mov    %rax,0x8437(%rip)        # 27cb0 <ifpoller.0+0x30>
   1f879:	e8 f3 9e fe ff       	call   9771 <intf_plug_plug>
   1f87e:	5b                   	pop    %rbx
   1f87f:	4c 89 f6             	mov    %r14,%rsi
   1f882:	5d                   	pop    %rbp
   1f883:	4c 89 e7             	mov    %r12,%rdi
   1f886:	41 5c                	pop    %r12
   1f888:	41 5d                	pop    %r13
   1f88a:	41 5e                	pop    %r14
   1f88c:	e9 9a d9 fe ff       	jmp    d22b <monojob_wait>
   1f891:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1f895:	48 8d 0d 0f 4a 00 00 	lea    0x4a0f(%rip),%rcx        # 242ab <.LC13>
   1f89c:	48 8d 35 72 3d 00 00 	lea    0x3d72(%rip),%rsi        # 23615 <.LC11>
   1f8a3:	eb 99                	jmp    1f83e <ifconf+0xbb>
   1f8a5:	5b                   	pop    %rbx
   1f8a6:	44 89 e0             	mov    %r12d,%eax
   1f8a9:	5d                   	pop    %rbp
   1f8aa:	41 5c                	pop    %r12
   1f8ac:	41 5d                	pop    %r13
   1f8ae:	41 5e                	pop    %r14
   1f8b0:	c3                   	ret    

000000000001f8b1 <free_image>:
   1f8b1:	f3 0f 1e fa          	endbr64 
   1f8b5:	55                   	push   %rbp
   1f8b6:	48 89 fd             	mov    %rdi,%rbp
   1f8b9:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
   1f8bd:	e8 8d cd fe ff       	call   c64f <free>
   1f8c2:	48 8b 7d 38          	mov    0x38(%rbp),%rdi
   1f8c6:	e8 84 cd fe ff       	call   c64f <free>
   1f8cb:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   1f8cf:	e8 6a 05 ff ff       	call   fe3e <ref_decrement>
   1f8d4:	48 8b 7d 40          	mov    0x40(%rbp),%rdi
   1f8d8:	31 f6                	xor    %esi,%esi
   1f8da:	e8 b6 de ff ff       	call   1d795 <urealloc>
   1f8df:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
   1f8e3:	e8 56 05 ff ff       	call   fe3e <ref_decrement>
   1f8e8:	48 89 ef             	mov    %rbp,%rdi
   1f8eb:	5d                   	pop    %rbp
   1f8ec:	e9 5e cd fe ff       	jmp    c64f <free>

000000000001f8f1 <image_set_name>:
   1f8f1:	f3 0f 1e fa          	endbr64 
   1f8f5:	55                   	push   %rbp
   1f8f6:	53                   	push   %rbx
   1f8f7:	48 89 fb             	mov    %rdi,%rbx
   1f8fa:	48 89 f7             	mov    %rsi,%rdi
   1f8fd:	51                   	push   %rcx
   1f8fe:	e8 4a 41 ff ff       	call   13a4d <strdup>
   1f903:	48 85 c0             	test   %rax,%rax
   1f906:	75 07                	jne    1f90f <image_set_name+0x1e>
   1f908:	b8 77 7f ff ce       	mov    $0xceff7f77,%eax
   1f90d:	eb 12                	jmp    1f921 <image_set_name+0x30>
   1f90f:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   1f913:	48 89 c5             	mov    %rax,%rbp
   1f916:	e8 34 cd fe ff       	call   c64f <free>
   1f91b:	48 89 6b 28          	mov    %rbp,0x28(%rbx)
   1f91f:	31 c0                	xor    %eax,%eax
   1f921:	5a                   	pop    %rdx
   1f922:	5b                   	pop    %rbx
   1f923:	5d                   	pop    %rbp
   1f924:	c3                   	ret    

000000000001f925 <image_set_uri>:
   1f925:	f3 0f 1e fa          	endbr64 
   1f929:	55                   	push   %rbp
   1f92a:	48 89 f5             	mov    %rsi,%rbp
   1f92d:	53                   	push   %rbx
   1f92e:	48 89 fb             	mov    %rdi,%rbx
   1f931:	51                   	push   %rcx
   1f932:	48 8b 7e 40          	mov    0x40(%rsi),%rdi
   1f936:	48 85 ff             	test   %rdi,%rdi
   1f939:	75 19                	jne    1f954 <image_set_uri+0x2f>
   1f93b:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1f93f:	e8 fa 04 ff ff       	call   fe3e <ref_decrement>
   1f944:	48 89 ef             	mov    %rbp,%rdi
   1f947:	e8 e6 04 ff ff       	call   fe32 <ref_increment>
   1f94c:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
   1f950:	31 c0                	xor    %eax,%eax
   1f952:	eb 22                	jmp    1f976 <image_set_uri+0x51>
   1f954:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1f958:	48 85 c0             	test   %rax,%rax
   1f95b:	74 05                	je     1f962 <image_set_uri+0x3d>
   1f95d:	80 38 00             	cmpb   $0x0,(%rax)
   1f960:	75 d9                	jne    1f93b <image_set_uri+0x16>
   1f962:	e8 97 92 ff ff       	call   18bfe <basename>
   1f967:	48 89 df             	mov    %rbx,%rdi
   1f96a:	48 89 c6             	mov    %rax,%rsi
   1f96d:	e8 7f ff ff ff       	call   1f8f1 <image_set_name>
   1f972:	85 c0                	test   %eax,%eax
   1f974:	74 c5                	je     1f93b <image_set_uri+0x16>
   1f976:	5a                   	pop    %rdx
   1f977:	5b                   	pop    %rbx
   1f978:	5d                   	pop    %rbp
   1f979:	c3                   	ret    

000000000001f97a <alloc_image>:
   1f97a:	f3 0f 1e fa          	endbr64 
   1f97e:	41 54                	push   %r12
   1f980:	55                   	push   %rbp
   1f981:	48 89 fd             	mov    %rdi,%rbp
   1f984:	bf 60 00 00 00       	mov    $0x60,%edi
   1f989:	51                   	push   %rcx
   1f98a:	e8 cb cc fe ff       	call   c65a <zalloc>
   1f98f:	49 89 c4             	mov    %rax,%r12
   1f992:	48 85 c0             	test   %rax,%rax
   1f995:	74 2b                	je     1f9c2 <alloc_image+0x48>
   1f997:	48 8d 05 13 ff ff ff 	lea    -0xed(%rip),%rax        # 1f8b1 <free_image>
   1f99e:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1f9a3:	48 85 ed             	test   %rbp,%rbp
   1f9a6:	74 1a                	je     1f9c2 <alloc_image+0x48>
   1f9a8:	48 89 ee             	mov    %rbp,%rsi
   1f9ab:	4c 89 e7             	mov    %r12,%rdi
   1f9ae:	e8 72 ff ff ff       	call   1f925 <image_set_uri>
   1f9b3:	85 c0                	test   %eax,%eax
   1f9b5:	74 0b                	je     1f9c2 <alloc_image+0x48>
   1f9b7:	4c 89 e7             	mov    %r12,%rdi
   1f9ba:	45 31 e4             	xor    %r12d,%r12d
   1f9bd:	e8 7c 04 ff ff       	call   fe3e <ref_decrement>
   1f9c2:	4c 89 e0             	mov    %r12,%rax
   1f9c5:	5a                   	pop    %rdx
   1f9c6:	5d                   	pop    %rbp
   1f9c7:	41 5c                	pop    %r12
   1f9c9:	c3                   	ret    

000000000001f9ca <image_set_cmdline>:
   1f9ca:	f3 0f 1e fa          	endbr64 
   1f9ce:	55                   	push   %rbp
   1f9cf:	48 89 f5             	mov    %rsi,%rbp
   1f9d2:	53                   	push   %rbx
   1f9d3:	48 89 fb             	mov    %rdi,%rbx
   1f9d6:	51                   	push   %rcx
   1f9d7:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   1f9db:	e8 6f cc fe ff       	call   c64f <free>
   1f9e0:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
   1f9e7:	00 
   1f9e8:	48 85 ed             	test   %rbp,%rbp
   1f9eb:	75 04                	jne    1f9f1 <image_set_cmdline+0x27>
   1f9ed:	31 c0                	xor    %eax,%eax
   1f9ef:	eb 16                	jmp    1fa07 <image_set_cmdline+0x3d>
   1f9f1:	48 89 ef             	mov    %rbp,%rdi
   1f9f4:	e8 54 40 ff ff       	call   13a4d <strdup>
   1f9f9:	48 89 43 38          	mov    %rax,0x38(%rbx)
   1f9fd:	48 85 c0             	test   %rax,%rax
   1fa00:	75 eb                	jne    1f9ed <image_set_cmdline+0x23>
   1fa02:	b8 77 7f ff ce       	mov    $0xceff7f77,%eax
   1fa07:	5a                   	pop    %rdx
   1fa08:	5b                   	pop    %rbx
   1fa09:	5d                   	pop    %rbp
   1fa0a:	c3                   	ret    

000000000001fa0b <unregister_image>:
   1fa0b:	f3 0f 1e fa          	endbr64 
   1fa0f:	8b 47 30             	mov    0x30(%rdi),%eax
   1fa12:	a8 01                	test   $0x1,%al
   1fa14:	74 1a                	je     1fa30 <unregister_image+0x25>
   1fa16:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   1fa1a:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   1fa1e:	83 e0 fe             	and    $0xfffffffe,%eax
   1fa21:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   1fa25:	48 89 0a             	mov    %rcx,(%rdx)
   1fa28:	89 47 30             	mov    %eax,0x30(%rdi)
   1fa2b:	e9 0e 04 ff ff       	jmp    fe3e <ref_decrement>
   1fa30:	c3                   	ret    

000000000001fa31 <find_image>:
   1fa31:	f3 0f 1e fa          	endbr64 
   1fa35:	48 8b 05 b4 82 00 00 	mov    0x82b4(%rip),%rax        # 27cf0 <images>
   1fa3c:	41 54                	push   %r12
   1fa3e:	55                   	push   %rbp
   1fa3f:	48 8d 2d aa 82 00 00 	lea    0x82aa(%rip),%rbp        # 27cf0 <images>
   1fa46:	53                   	push   %rbx
   1fa47:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
   1fa4b:	48 89 fb             	mov    %rdi,%rbx
   1fa4e:	49 8d 44 24 10       	lea    0x10(%r12),%rax
   1fa53:	48 39 e8             	cmp    %rbp,%rax
   1fa56:	74 1c                	je     1fa74 <find_image+0x43>
   1fa58:	49 8b 7c 24 28       	mov    0x28(%r12),%rdi
   1fa5d:	48 89 de             	mov    %rbx,%rsi
   1fa60:	e8 7b 3e ff ff       	call   138e0 <strcmp>
   1fa65:	85 c0                	test   %eax,%eax
   1fa67:	74 0e                	je     1fa77 <find_image+0x46>
   1fa69:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
   1fa6e:	49 83 ec 10          	sub    $0x10,%r12
   1fa72:	eb da                	jmp    1fa4e <find_image+0x1d>
   1fa74:	45 31 e4             	xor    %r12d,%r12d
   1fa77:	4c 89 e0             	mov    %r12,%rax
   1fa7a:	5b                   	pop    %rbx
   1fa7b:	5d                   	pop    %rbp
   1fa7c:	41 5c                	pop    %r12
   1fa7e:	c3                   	ret    

000000000001fa7f <image_exec>:
   1fa7f:	f3 0f 1e fa          	endbr64 
   1fa83:	41 56                	push   %r14
   1fa85:	41 55                	push   %r13
   1fa87:	41 54                	push   %r12
   1fa89:	55                   	push   %rbp
   1fa8a:	48 89 fd             	mov    %rdi,%rbp
   1fa8d:	53                   	push   %rbx
   1fa8e:	4c 8b 2d fb a3 00 00 	mov    0xa3fb(%rip),%r13        # 29e90 <cwuri>
   1fa95:	4c 89 ef             	mov    %r13,%rdi
   1fa98:	e8 95 03 ff ff       	call   fe32 <ref_increment>
   1fa9d:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
   1faa1:	e8 25 99 ff ff       	call   193cb <churi>
   1faa6:	48 89 ef             	mov    %rbp,%rdi
   1faa9:	4c 8b 35 18 a5 00 00 	mov    0xa518(%rip),%r14        # 29fc8 <current_image>
   1fab0:	e8 7d 03 ff ff       	call   fe32 <ref_increment>
   1fab5:	48 8b 45 50          	mov    0x50(%rbp),%rax
   1fab9:	48 89 2d 08 a5 00 00 	mov    %rbp,0xa508(%rip)        # 29fc8 <current_image>
   1fac0:	48 85 c0             	test   %rax,%rax
   1fac3:	74 09                	je     1face <image_exec+0x4f>
   1fac5:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fac9:	48 85 c0             	test   %rax,%rax
   1facc:	75 08                	jne    1fad6 <image_exec+0x57>
   1face:	41 bc 7f 7f ff d1    	mov    $0xd1ff7f7f,%r12d
   1fad4:	eb 15                	jmp    1faeb <image_exec+0x6c>
   1fad6:	83 3d 43 a4 00 00 00 	cmpl   $0x0,0xa443(%rip)        # 29f20 <require_trusted_images>
   1fadd:	74 10                	je     1faef <image_exec+0x70>
   1fadf:	f6 45 30 04          	testb  $0x4,0x30(%rbp)
   1fae3:	75 0a                	jne    1faef <image_exec+0x70>
   1fae5:	41 bc 71 7e ff fd    	mov    $0xfdff7e71,%r12d
   1faeb:	31 db                	xor    %ebx,%ebx
   1faed:	eb 0c                	jmp    1fafb <image_exec+0x7c>
   1faef:	48 89 ef             	mov    %rbp,%rdi
   1faf2:	ff d0                	call   *%rax
   1faf4:	48 8b 5d 58          	mov    0x58(%rbp),%rbx
   1faf8:	41 89 c4             	mov    %eax,%r12d
   1fafb:	f6 45 30 08          	testb  $0x8,0x30(%rbp)
   1faff:	74 08                	je     1fb09 <image_exec+0x8a>
   1fb01:	48 89 ef             	mov    %rbp,%rdi
   1fb04:	e8 02 ff ff ff       	call   1fa0b <unregister_image>
   1fb09:	48 89 ef             	mov    %rbp,%rdi
   1fb0c:	e8 2d 03 ff ff       	call   fe3e <ref_decrement>
   1fb11:	4c 89 ef             	mov    %r13,%rdi
   1fb14:	4c 89 35 ad a4 00 00 	mov    %r14,0xa4ad(%rip)        # 29fc8 <current_image>
   1fb1b:	e8 ab 98 ff ff       	call   193cb <churi>
   1fb20:	4c 89 ef             	mov    %r13,%rdi
   1fb23:	e8 16 03 ff ff       	call   fe3e <ref_decrement>
   1fb28:	48 85 db             	test   %rbx,%rbx
   1fb2b:	74 08                	je     1fb35 <image_exec+0xb6>
   1fb2d:	48 89 dd             	mov    %rbx,%rbp
   1fb30:	e9 59 ff ff ff       	jmp    1fa8e <image_exec+0xf>
   1fb35:	5b                   	pop    %rbx
   1fb36:	44 89 e0             	mov    %r12d,%eax
   1fb39:	5d                   	pop    %rbp
   1fb3a:	41 5c                	pop    %r12
   1fb3c:	41 5d                	pop    %r13
   1fb3e:	41 5e                	pop    %r14
   1fb40:	c3                   	ret    

000000000001fb41 <image_replace>:
   1fb41:	f3 0f 1e fa          	endbr64 
   1fb45:	55                   	push   %rbp
   1fb46:	53                   	push   %rbx
   1fb47:	51                   	push   %rcx
   1fb48:	48 8b 2d 79 a4 00 00 	mov    0xa479(%rip),%rbp        # 29fc8 <current_image>
   1fb4f:	48 85 ed             	test   %rbp,%rbp
   1fb52:	75 07                	jne    1fb5b <image_replace+0x1a>
   1fb54:	b8 7d 7f ff c2       	mov    $0xc2ff7f7d,%eax
   1fb59:	eb 31                	jmp    1fb8c <image_replace+0x4b>
   1fb5b:	48 8b 47 50          	mov    0x50(%rdi),%rax
   1fb5f:	48 89 fb             	mov    %rdi,%rbx
   1fb62:	48 85 c0             	test   %rax,%rax
   1fb65:	74 07                	je     1fb6e <image_replace+0x2d>
   1fb67:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   1fb6c:	75 07                	jne    1fb75 <image_replace+0x34>
   1fb6e:	b8 7f 7f ff d1       	mov    $0xd1ff7f7f,%eax
   1fb73:	eb 17                	jmp    1fb8c <image_replace+0x4b>
   1fb75:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
   1fb79:	e8 c0 02 ff ff       	call   fe3e <ref_decrement>
   1fb7e:	48 89 df             	mov    %rbx,%rdi
   1fb81:	e8 ac 02 ff ff       	call   fe32 <ref_increment>
   1fb86:	48 89 5d 58          	mov    %rbx,0x58(%rbp)
   1fb8a:	31 c0                	xor    %eax,%eax
   1fb8c:	5a                   	pop    %rdx
   1fb8d:	5b                   	pop    %rbx
   1fb8e:	5d                   	pop    %rbp
   1fb8f:	c3                   	ret    

000000000001fb90 <image_select>:
   1fb90:	f3 0f 1e fa          	endbr64 
   1fb94:	48 8b 05 55 81 00 00 	mov    0x8155(%rip),%rax        # 27cf0 <images>
   1fb9b:	48 8d 15 4e 81 00 00 	lea    0x814e(%rip),%rdx        # 27cf0 <images>
   1fba2:	48 83 e8 10          	sub    $0x10,%rax
   1fba6:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1fbaa:	48 39 d1             	cmp    %rdx,%rcx
   1fbad:	74 0e                	je     1fbbd <image_select+0x2d>
   1fbaf:	83 60 30 fd          	andl   $0xfffffffd,0x30(%rax)
   1fbb3:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fbb7:	48 83 e8 10          	sub    $0x10,%rax
   1fbbb:	eb e9                	jmp    1fba6 <image_select+0x16>
   1fbbd:	48 8b 47 50          	mov    0x50(%rdi),%rax
   1fbc1:	48 85 c0             	test   %rax,%rax
   1fbc4:	74 07                	je     1fbcd <image_select+0x3d>
   1fbc6:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   1fbcb:	75 06                	jne    1fbd3 <image_select+0x43>
   1fbcd:	b8 7f 7f ff d1       	mov    $0xd1ff7f7f,%eax
   1fbd2:	c3                   	ret    
   1fbd3:	83 4f 30 02          	orl    $0x2,0x30(%rdi)
   1fbd7:	31 c0                	xor    %eax,%eax
   1fbd9:	c3                   	ret    

000000000001fbda <image_find_selected>:
   1fbda:	f3 0f 1e fa          	endbr64 
   1fbde:	48 8b 05 0b 81 00 00 	mov    0x810b(%rip),%rax        # 27cf0 <images>
   1fbe5:	48 8d 15 04 81 00 00 	lea    0x8104(%rip),%rdx        # 27cf0 <images>
   1fbec:	48 83 e8 10          	sub    $0x10,%rax
   1fbf0:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1fbf4:	48 39 d1             	cmp    %rdx,%rcx
   1fbf7:	74 10                	je     1fc09 <image_find_selected+0x2f>
   1fbf9:	f6 40 30 02          	testb  $0x2,0x30(%rax)
   1fbfd:	75 0c                	jne    1fc0b <image_find_selected+0x31>
   1fbff:	48 8b 40 10          	mov    0x10(%rax),%rax
   1fc03:	48 83 e8 10          	sub    $0x10,%rax
   1fc07:	eb e7                	jmp    1fbf0 <image_find_selected+0x16>
   1fc09:	31 c0                	xor    %eax,%eax
   1fc0b:	c3                   	ret    

000000000001fc0c <register_image>:
   1fc0c:	f3 0f 1e fa          	endbr64 
   1fc10:	41 54                	push   %r12
   1fc12:	55                   	push   %rbp
   1fc13:	53                   	push   %rbx
   1fc14:	48 89 fb             	mov    %rdi,%rbx
   1fc17:	48 83 ec 10          	sub    $0x10,%rsp
   1fc1b:	48 8b 05 4e a3 00 00 	mov    0xa34e(%rip),%rax        # 29f70 <__stack_chk_guard>
   1fc22:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1fc27:	31 c0                	xor    %eax,%eax
   1fc29:	48 83 7f 28 00       	cmpq   $0x0,0x28(%rdi)
   1fc2e:	74 10                	je     1fc40 <register_image+0x34>
   1fc30:	e8 a5 ff ff ff       	call   1fbda <image_find_selected>
   1fc35:	48 85 c0             	test   %rax,%rax
   1fc38:	74 3f                	je     1fc79 <register_image+0x6d>
   1fc3a:	83 63 30 fd          	andl   $0xfffffffd,0x30(%rbx)
   1fc3e:	eb 39                	jmp    1fc79 <register_image+0x6d>
   1fc40:	8b 0d d2 a2 00 00    	mov    0xa2d2(%rip),%ecx        # 29f18 <imgindex.0>
   1fc46:	48 89 e5             	mov    %rsp,%rbp
   1fc49:	be 08 00 00 00       	mov    $0x8,%esi
   1fc4e:	48 8d 15 d5 46 00 00 	lea    0x46d5(%rip),%rdx        # 2432a <.LC0>
   1fc55:	48 89 ef             	mov    %rbp,%rdi
   1fc58:	8d 41 01             	lea    0x1(%rcx),%eax
   1fc5b:	89 05 b7 a2 00 00    	mov    %eax,0xa2b7(%rip)        # 29f18 <imgindex.0>
   1fc61:	31 c0                	xor    %eax,%eax
   1fc63:	e8 19 74 ff ff       	call   17081 <snprintf>
   1fc68:	48 89 ee             	mov    %rbp,%rsi
   1fc6b:	48 89 df             	mov    %rbx,%rdi
   1fc6e:	e8 7e fc ff ff       	call   1f8f1 <image_set_name>
   1fc73:	85 c0                	test   %eax,%eax
   1fc75:	74 b9                	je     1fc30 <register_image+0x24>
   1fc77:	eb 4e                	jmp    1fcc7 <register_image+0xbb>
   1fc79:	48 89 df             	mov    %rbx,%rdi
   1fc7c:	e8 b1 01 ff ff       	call   fe32 <ref_increment>
   1fc81:	83 4b 30 01          	orl    $0x1,0x30(%rbx)
   1fc85:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1fc89:	48 8d 35 60 80 00 00 	lea    0x8060(%rip),%rsi        # 27cf0 <images>
   1fc90:	e8 42 c4 fe ff       	call   c0d7 <extern_list_add_tail>
   1fc95:	48 83 7b 50 00       	cmpq   $0x0,0x50(%rbx)
   1fc9a:	75 29                	jne    1fcc5 <register_image+0xb9>
   1fc9c:	48 8d 2d d5 8e 00 00 	lea    0x8ed5(%rip),%rbp        # 28b78 <efi_image_type>
   1fca3:	4c 8d 25 1e 8f 00 00 	lea    0x8f1e(%rip),%r12        # 28bc8 <efi_console_init_fn>
   1fcaa:	4c 39 e5             	cmp    %r12,%rbp
   1fcad:	73 16                	jae    1fcc5 <register_image+0xb9>
   1fcaf:	48 89 df             	mov    %rbx,%rdi
   1fcb2:	ff 55 08             	call   *0x8(%rbp)
   1fcb5:	85 c0                	test   %eax,%eax
   1fcb7:	75 06                	jne    1fcbf <register_image+0xb3>
   1fcb9:	48 89 6b 50          	mov    %rbp,0x50(%rbx)
   1fcbd:	eb 08                	jmp    1fcc7 <register_image+0xbb>
   1fcbf:	48 83 c5 28          	add    $0x28,%rbp
   1fcc3:	eb e5                	jmp    1fcaa <register_image+0x9e>
   1fcc5:	31 c0                	xor    %eax,%eax
   1fcc7:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1fccc:	48 2b 15 9d a2 00 00 	sub    0xa29d(%rip),%rdx        # 29f70 <__stack_chk_guard>
   1fcd3:	74 05                	je     1fcda <register_image+0xce>
   1fcd5:	e8 86 2d fe ff       	call   2a60 <__stack_chk_fail>
   1fcda:	48 83 c4 10          	add    $0x10,%rsp
   1fcde:	5b                   	pop    %rbx
   1fcdf:	5d                   	pop    %rbp
   1fce0:	41 5c                	pop    %r12
   1fce2:	c3                   	ret    

000000000001fce3 <jump_scroll_key>:
   1fce3:	f3 0f 1e fa          	endbr64 
   1fce7:	81 fe 48 01 00 00    	cmp    $0x148,%esi
   1fced:	74 47                	je     1fd36 <jump_scroll_key+0x53>
   1fcef:	7f 22                	jg     1fd13 <jump_scroll_key+0x30>
   1fcf1:	b8 01 00 00 00       	mov    $0x1,%eax
   1fcf6:	81 fe 42 01 00 00    	cmp    $0x142,%esi
   1fcfc:	74 41                	je     1fd3f <jump_scroll_key+0x5c>
   1fcfe:	81 fe 46 01 00 00    	cmp    $0x146,%esi
   1fd04:	74 36                	je     1fd3c <jump_scroll_key+0x59>
   1fd06:	31 c0                	xor    %eax,%eax
   1fd08:	81 fe 41 01 00 00    	cmp    $0x141,%esi
   1fd0e:	0f 94 c0             	sete   %al
   1fd11:	eb 26                	jmp    1fd39 <jump_scroll_key+0x56>
   1fd13:	81 fe 7e 06 00 00    	cmp    $0x67e,%esi
   1fd19:	74 0b                	je     1fd26 <jump_scroll_key+0x43>
   1fd1b:	81 fe 7e 07 00 00    	cmp    $0x77e,%esi
   1fd21:	74 0a                	je     1fd2d <jump_scroll_key+0x4a>
   1fd23:	31 c0                	xor    %eax,%eax
   1fd25:	c3                   	ret    
   1fd26:	8b 47 0c             	mov    0xc(%rdi),%eax
   1fd29:	ff c8                	dec    %eax
   1fd2b:	eb 05                	jmp    1fd32 <jump_scroll_key+0x4f>
   1fd2d:	8b 07                	mov    (%rdi),%eax
   1fd2f:	03 47 0c             	add    0xc(%rdi),%eax
   1fd32:	2b 47 08             	sub    0x8(%rdi),%eax
   1fd35:	c3                   	ret    
   1fd36:	8b 47 04             	mov    0x4(%rdi),%eax
   1fd39:	f7 d8                	neg    %eax
   1fd3b:	c3                   	ret    
   1fd3c:	8b 47 04             	mov    0x4(%rdi),%eax
   1fd3f:	c3                   	ret    

000000000001fd40 <jump_scroll_move>:
   1fd40:	f3 0f 1e fa          	endbr64 
   1fd44:	89 f2                	mov    %esi,%edx
   1fd46:	03 57 08             	add    0x8(%rdi),%edx
   1fd49:	78 1f                	js     1fd6a <jump_scroll_move+0x2a>
   1fd4b:	8b 47 04             	mov    0x4(%rdi),%eax
   1fd4e:	41 83 c8 ff          	or     $0xffffffff,%r8d
   1fd52:	ff c8                	dec    %eax
   1fd54:	39 d0                	cmp    %edx,%eax
   1fd56:	7c 1a                	jl     1fd72 <jump_scroll_move+0x32>
   1fd58:	45 31 c0             	xor    %r8d,%r8d
   1fd5b:	85 f6                	test   %esi,%esi
   1fd5d:	89 d0                	mov    %edx,%eax
   1fd5f:	41 0f 9f c0          	setg   %r8b
   1fd63:	47 8d 44 00 ff       	lea    -0x1(%r8,%r8,1),%r8d
   1fd68:	eb 08                	jmp    1fd72 <jump_scroll_move+0x32>
   1fd6a:	31 c0                	xor    %eax,%eax
   1fd6c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1fd72:	89 47 08             	mov    %eax,0x8(%rdi)
   1fd75:	44 89 c0             	mov    %r8d,%eax
   1fd78:	c3                   	ret    

000000000001fd79 <jump_scroll>:
   1fd79:	f3 0f 1e fa          	endbr64 
   1fd7d:	8b 57 08             	mov    0x8(%rdi),%edx
   1fd80:	8b 0f                	mov    (%rdi),%ecx
   1fd82:	31 c0                	xor    %eax,%eax
   1fd84:	89 d6                	mov    %edx,%esi
   1fd86:	2b 77 0c             	sub    0xc(%rdi),%esi
   1fd89:	39 ce                	cmp    %ecx,%esi
   1fd8b:	73 01                	jae    1fd8e <jump_scroll+0x15>
   1fd8d:	c3                   	ret    
   1fd8e:	8b 47 0c             	mov    0xc(%rdi),%eax
   1fd91:	39 c2                	cmp    %eax,%edx
   1fd93:	76 07                	jbe    1fd9c <jump_scroll+0x23>
   1fd95:	01 c8                	add    %ecx,%eax
   1fd97:	89 47 0c             	mov    %eax,0xc(%rdi)
   1fd9a:	eb f2                	jmp    1fd8e <jump_scroll+0x15>
   1fd9c:	8b 47 0c             	mov    0xc(%rdi),%eax
   1fd9f:	39 c2                	cmp    %eax,%edx
   1fda1:	73 07                	jae    1fdaa <jump_scroll+0x31>
   1fda3:	29 c8                	sub    %ecx,%eax
   1fda5:	89 47 0c             	mov    %eax,0xc(%rdi)
   1fda8:	eb f2                	jmp    1fd9c <jump_scroll+0x23>
   1fdaa:	b8 01 00 00 00       	mov    $0x1,%eax
   1fdaf:	c3                   	ret    

000000000001fdb0 <add_menu_item>:
   1fdb0:	f3 0f 1e fa          	endbr64 
   1fdb4:	41 57                	push   %r15
   1fdb6:	41 89 cf             	mov    %ecx,%r15d
   1fdb9:	41 56                	push   %r14
   1fdbb:	45 89 c6             	mov    %r8d,%r14d
   1fdbe:	41 55                	push   %r13
   1fdc0:	41 54                	push   %r12
   1fdc2:	55                   	push   %rbp
   1fdc3:	48 8d 2d 0a 46 00 00 	lea    0x460a(%rip),%rbp        # 243d4 <.LC0>
   1fdca:	53                   	push   %rbx
   1fdcb:	48 83 ec 18          	sub    $0x18,%rsp
   1fdcf:	48 89 3c 24          	mov    %rdi,(%rsp)
   1fdd3:	48 85 d2             	test   %rdx,%rdx
   1fdd6:	74 03                	je     1fddb <add_menu_item+0x2b>
   1fdd8:	48 89 d5             	mov    %rdx,%rbp
   1fddb:	31 db                	xor    %ebx,%ebx
   1fddd:	48 85 f6             	test   %rsi,%rsi
   1fde0:	74 16                	je     1fdf8 <add_menu_item+0x48>
   1fde2:	48 89 f7             	mov    %rsi,%rdi
   1fde5:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1fdea:	e8 4b 3b ff ff       	call   1393a <strlen>
   1fdef:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1fdf4:	48 8d 58 01          	lea    0x1(%rax),%rbx
   1fdf8:	48 89 ef             	mov    %rbp,%rdi
   1fdfb:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1fe00:	e8 35 3b ff ff       	call   1393a <strlen>
   1fe05:	48 8d 7c 03 29       	lea    0x29(%rbx,%rax,1),%rdi
   1fe0a:	e8 4b c8 fe ff       	call   c65a <zalloc>
   1fe0f:	49 89 c4             	mov    %rax,%r12
   1fe12:	48 85 c0             	test   %rax,%rax
   1fe15:	74 48                	je     1fe5f <add_menu_item+0xaf>
   1fe17:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1fe1c:	4c 8d 68 28          	lea    0x28(%rax),%r13
   1fe20:	4c 01 eb             	add    %r13,%rbx
   1fe23:	48 85 f6             	test   %rsi,%rsi
   1fe26:	74 0d                	je     1fe35 <add_menu_item+0x85>
   1fe28:	4c 89 ef             	mov    %r13,%rdi
   1fe2b:	e8 8a 3b ff ff       	call   139ba <strcpy>
   1fe30:	4d 89 6c 24 10       	mov    %r13,0x10(%r12)
   1fe35:	48 89 ee             	mov    %rbp,%rsi
   1fe38:	48 89 df             	mov    %rbx,%rdi
   1fe3b:	e8 7a 3b ff ff       	call   139ba <strcpy>
   1fe40:	48 8b 34 24          	mov    (%rsp),%rsi
   1fe44:	4c 89 e7             	mov    %r12,%rdi
   1fe47:	49 89 5c 24 18       	mov    %rbx,0x18(%r12)
   1fe4c:	45 89 7c 24 20       	mov    %r15d,0x20(%r12)
   1fe51:	48 83 c6 20          	add    $0x20,%rsi
   1fe55:	45 89 74 24 24       	mov    %r14d,0x24(%r12)
   1fe5a:	e8 78 c2 fe ff       	call   c0d7 <extern_list_add_tail>
   1fe5f:	48 83 c4 18          	add    $0x18,%rsp
   1fe63:	4c 89 e0             	mov    %r12,%rax
   1fe66:	5b                   	pop    %rbx
   1fe67:	5d                   	pop    %rbp
   1fe68:	41 5c                	pop    %r12
   1fe6a:	41 5d                	pop    %r13
   1fe6c:	41 5e                	pop    %r14
   1fe6e:	41 5f                	pop    %r15
   1fe70:	c3                   	ret    

000000000001fe71 <destroy_menu>:
   1fe71:	f3 0f 1e fa          	endbr64 
   1fe75:	41 54                	push   %r12
   1fe77:	55                   	push   %rbp
   1fe78:	48 89 fd             	mov    %rdi,%rbp
   1fe7b:	53                   	push   %rbx
   1fe7c:	48 8b 17             	mov    (%rdi),%rdx
   1fe7f:	4c 8d 65 20          	lea    0x20(%rbp),%r12
   1fe83:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1fe87:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1fe8b:	48 89 10             	mov    %rdx,(%rax)
   1fe8e:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
   1fe92:	48 8b 1f             	mov    (%rdi),%rbx
   1fe95:	4c 39 e7             	cmp    %r12,%rdi
   1fe98:	74 1b                	je     1feb5 <destroy_menu+0x44>
   1fe9a:	48 8b 17             	mov    (%rdi),%rdx
   1fe9d:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1fea1:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1fea5:	48 89 10             	mov    %rdx,(%rax)
   1fea8:	e8 a2 c7 fe ff       	call   c64f <free>
   1fead:	48 89 df             	mov    %rbx,%rdi
   1feb0:	48 8b 1b             	mov    (%rbx),%rbx
   1feb3:	eb e0                	jmp    1fe95 <destroy_menu+0x24>
   1feb5:	5b                   	pop    %rbx
   1feb6:	48 89 ef             	mov    %rbp,%rdi
   1feb9:	5d                   	pop    %rbp
   1feba:	41 5c                	pop    %r12
   1febc:	e9 8e c7 fe ff       	jmp    c64f <free>

000000000001fec1 <find_menu>:
   1fec1:	f3 0f 1e fa          	endbr64 
   1fec5:	41 54                	push   %r12
   1fec7:	4c 8b 25 32 7e 00 00 	mov    0x7e32(%rip),%r12        # 27d00 <menus>
   1fece:	55                   	push   %rbp
   1fecf:	48 8d 2d 2a 7e 00 00 	lea    0x7e2a(%rip),%rbp        # 27d00 <menus>
   1fed6:	53                   	push   %rbx
   1fed7:	48 89 fb             	mov    %rdi,%rbx
   1feda:	49 39 ec             	cmp    %rbp,%r12
   1fedd:	74 1c                	je     1fefb <find_menu+0x3a>
   1fedf:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   1fee4:	48 39 df             	cmp    %rbx,%rdi
   1fee7:	74 15                	je     1fefe <find_menu+0x3d>
   1fee9:	48 89 de             	mov    %rbx,%rsi
   1feec:	e8 ef 39 ff ff       	call   138e0 <strcmp>
   1fef1:	85 c0                	test   %eax,%eax
   1fef3:	74 09                	je     1fefe <find_menu+0x3d>
   1fef5:	4d 8b 24 24          	mov    (%r12),%r12
   1fef9:	eb df                	jmp    1feda <find_menu+0x19>
   1fefb:	45 31 e4             	xor    %r12d,%r12d
   1fefe:	4c 89 e0             	mov    %r12,%rax
   1ff01:	5b                   	pop    %rbx
   1ff02:	5d                   	pop    %rbp
   1ff03:	41 5c                	pop    %r12
   1ff05:	c3                   	ret    

000000000001ff06 <create_menu>:
   1ff06:	f3 0f 1e fa          	endbr64 
   1ff0a:	41 56                	push   %r14
   1ff0c:	41 55                	push   %r13
   1ff0e:	49 89 f5             	mov    %rsi,%r13
   1ff11:	41 54                	push   %r12
   1ff13:	55                   	push   %rbp
   1ff14:	48 89 fd             	mov    %rdi,%rbp
   1ff17:	53                   	push   %rbx
   1ff18:	e8 a4 ff ff ff       	call   1fec1 <find_menu>
   1ff1d:	48 85 c0             	test   %rax,%rax
   1ff20:	74 08                	je     1ff2a <create_menu+0x24>
   1ff22:	48 89 c7             	mov    %rax,%rdi
   1ff25:	e8 47 ff ff ff       	call   1fe71 <destroy_menu>
   1ff2a:	4d 85 ed             	test   %r13,%r13
   1ff2d:	75 07                	jne    1ff36 <create_menu+0x30>
   1ff2f:	4c 8d 2d 9e 44 00 00 	lea    0x449e(%rip),%r13        # 243d4 <.LC0>
   1ff36:	31 db                	xor    %ebx,%ebx
   1ff38:	48 85 ed             	test   %rbp,%rbp
   1ff3b:	74 0c                	je     1ff49 <create_menu+0x43>
   1ff3d:	48 89 ef             	mov    %rbp,%rdi
   1ff40:	e8 f5 39 ff ff       	call   1393a <strlen>
   1ff45:	48 8d 58 01          	lea    0x1(%rax),%rbx
   1ff49:	4c 89 ef             	mov    %r13,%rdi
   1ff4c:	e8 e9 39 ff ff       	call   1393a <strlen>
   1ff51:	48 8d 7c 03 31       	lea    0x31(%rbx,%rax,1),%rdi
   1ff56:	e8 ff c6 fe ff       	call   c65a <zalloc>
   1ff5b:	49 89 c4             	mov    %rax,%r12
   1ff5e:	48 85 c0             	test   %rax,%rax
   1ff61:	74 4a                	je     1ffad <create_menu+0xa7>
   1ff63:	4c 8d 70 30          	lea    0x30(%rax),%r14
   1ff67:	4c 01 f3             	add    %r14,%rbx
   1ff6a:	48 85 ed             	test   %rbp,%rbp
   1ff6d:	74 10                	je     1ff7f <create_menu+0x79>
   1ff6f:	48 89 ee             	mov    %rbp,%rsi
   1ff72:	4c 89 f7             	mov    %r14,%rdi
   1ff75:	e8 40 3a ff ff       	call   139ba <strcpy>
   1ff7a:	4d 89 74 24 10       	mov    %r14,0x10(%r12)
   1ff7f:	4c 89 ee             	mov    %r13,%rsi
   1ff82:	48 89 df             	mov    %rbx,%rdi
   1ff85:	e8 30 3a ff ff       	call   139ba <strcpy>
   1ff8a:	49 8d 44 24 20       	lea    0x20(%r12),%rax
   1ff8f:	4c 89 e7             	mov    %r12,%rdi
   1ff92:	48 8d 35 67 7d 00 00 	lea    0x7d67(%rip),%rsi        # 27d00 <menus>
   1ff99:	49 89 5c 24 18       	mov    %rbx,0x18(%r12)
   1ff9e:	49 89 44 24 20       	mov    %rax,0x20(%r12)
   1ffa3:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   1ffa8:	e8 2a c1 fe ff       	call   c0d7 <extern_list_add_tail>
   1ffad:	5b                   	pop    %rbx
   1ffae:	4c 89 e0             	mov    %r12,%rax
   1ffb1:	5d                   	pop    %rbp
   1ffb2:	41 5c                	pop    %r12
   1ffb4:	41 5d                	pop    %r13
   1ffb6:	41 5e                	pop    %r14
   1ffb8:	c3                   	ret    

000000000001ffb9 <netdev_clear>:
   1ffb9:	f3 0f 1e fa          	endbr64 
   1ffbd:	e9 de 15 ff ff       	jmp    115a0 <generic_settings_clear>

000000000001ffc2 <netdev_fetch>:
   1ffc2:	f3 0f 1e fa          	endbr64 
   1ffc6:	41 57                	push   %r15
   1ffc8:	4c 8d 3d b1 7d 00 00 	lea    0x7db1(%rip),%r15        # 27d80 <netdev_setting_operations>
   1ffcf:	41 56                	push   %r14
   1ffd1:	49 89 ce             	mov    %rcx,%r14
   1ffd4:	41 55                	push   %r13
   1ffd6:	49 89 d5             	mov    %rdx,%r13
   1ffd9:	41 54                	push   %r12
   1ffdb:	49 89 f4             	mov    %rsi,%r12
   1ffde:	55                   	push   %rbp
   1ffdf:	48 89 fd             	mov    %rdi,%rbp
   1ffe2:	53                   	push   %rbx
   1ffe3:	31 db                	xor    %ebx,%ebx
   1ffe5:	41 50                	push   %r8
   1ffe7:	49 8b 37             	mov    (%r15),%rsi
   1ffea:	4c 89 e7             	mov    %r12,%rdi
   1ffed:	e8 28 1a ff ff       	call   11a1a <setting_cmp>
   1fff2:	48 8d 15 87 7d 00 00 	lea    0x7d87(%rip),%rdx        # 27d80 <netdev_setting_operations>
   1fff9:	85 c0                	test   %eax,%eax
   1fffb:	75 23                	jne    20020 <netdev_fetch+0x5e>
   1fffd:	48 6b db 18          	imul   $0x18,%rbx,%rbx
   20001:	48 8d bd 98 fe ff ff 	lea    -0x168(%rbp),%rdi
   20008:	4c 89 ee             	mov    %r13,%rsi
   2000b:	48 8b 44 1a 10       	mov    0x10(%rdx,%rbx,1),%rax
   20010:	59                   	pop    %rcx
   20011:	4c 89 f2             	mov    %r14,%rdx
   20014:	5b                   	pop    %rbx
   20015:	5d                   	pop    %rbp
   20016:	41 5c                	pop    %r12
   20018:	41 5d                	pop    %r13
   2001a:	41 5e                	pop    %r14
   2001c:	41 5f                	pop    %r15
   2001e:	ff e0                	jmp    *%rax
   20020:	ff c3                	inc    %ebx
   20022:	49 83 c7 18          	add    $0x18,%r15
   20026:	83 fb 07             	cmp    $0x7,%ebx
   20029:	75 bc                	jne    1ffe7 <netdev_fetch+0x25>
   2002b:	58                   	pop    %rax
   2002c:	4c 89 f1             	mov    %r14,%rcx
   2002f:	5b                   	pop    %rbx
   20030:	4c 89 ea             	mov    %r13,%rdx
   20033:	4c 89 e6             	mov    %r12,%rsi
   20036:	48 89 ef             	mov    %rbp,%rdi
   20039:	5d                   	pop    %rbp
   2003a:	41 5c                	pop    %r12
   2003c:	41 5d                	pop    %r13
   2003e:	41 5e                	pop    %r14
   20040:	41 5f                	pop    %r15
   20042:	e9 4c 22 ff ff       	jmp    12293 <generic_settings_fetch>

0000000000020047 <netdev_fetch_ifname>:
   20047:	f3 0f 1e fa          	endbr64 
   2004b:	55                   	push   %rbp
   2004c:	49 89 f0             	mov    %rsi,%r8
   2004f:	48 8d 6f 34          	lea    0x34(%rdi),%rbp
   20053:	48 89 ee             	mov    %rbp,%rsi
   20056:	4c 89 c7             	mov    %r8,%rdi
   20059:	e8 73 39 ff ff       	call   139d1 <strncpy>
   2005e:	48 89 ef             	mov    %rbp,%rdi
   20061:	e8 d4 38 ff ff       	call   1393a <strlen>
   20066:	5d                   	pop    %rbp
   20067:	c3                   	ret    

0000000000020068 <netdev_fetch_chip>:
   20068:	f3 0f 1e fa          	endbr64 
   2006c:	49 89 f8             	mov    %rdi,%r8
   2006f:	55                   	push   %rbp
   20070:	48 89 f7             	mov    %rsi,%rdi
   20073:	49 8b 40 40          	mov    0x40(%r8),%rax
   20077:	48 8b 68 28          	mov    0x28(%rax),%rbp
   2007b:	48 89 ee             	mov    %rbp,%rsi
   2007e:	e8 4e 39 ff ff       	call   139d1 <strncpy>
   20083:	48 89 ef             	mov    %rbp,%rdi
   20086:	e8 af 38 ff ff       	call   1393a <strlen>
   2008b:	5d                   	pop    %rbp
   2008c:	c3                   	ret    

000000000002008d <netdev_store_mac>:
   2008d:	f3 0f 1e fa          	endbr64 
   20091:	51                   	push   %rcx
   20092:	48 8b 47 50          	mov    0x50(%rdi),%rax
   20096:	48 85 f6             	test   %rsi,%rsi
   20099:	74 1f                	je     200ba <netdev_store_mac+0x2d>
   2009b:	44 0f b6 40 43       	movzbl 0x43(%rax),%r8d
   200a0:	49 39 d0             	cmp    %rdx,%r8
   200a3:	74 07                	je     200ac <netdev_store_mac+0x1f>
   200a5:	b8 7e 9f eb e3       	mov    $0xe3eb9f7e,%eax
   200aa:	eb 1b                	jmp    200c7 <netdev_store_mac+0x3a>
   200ac:	48 83 c7 60          	add    $0x60,%rdi
   200b0:	4c 89 c2             	mov    %r8,%rdx
   200b3:	e8 55 72 ff ff       	call   1730d <__memcpy>
   200b8:	eb 0b                	jmp    200c5 <netdev_store_mac+0x38>
   200ba:	48 8d 77 60          	lea    0x60(%rdi),%rsi
   200be:	48 83 c7 58          	add    $0x58,%rdi
   200c2:	ff 50 18             	call   *0x18(%rax)
   200c5:	31 c0                	xor    %eax,%eax
   200c7:	5a                   	pop    %rdx
   200c8:	c3                   	ret    

00000000000200c9 <netdev_fetch_mac>:
   200c9:	f3 0f 1e fa          	endbr64 
   200cd:	48 89 f8             	mov    %rdi,%rax
   200d0:	53                   	push   %rbx
   200d1:	49 89 d0             	mov    %rdx,%r8
   200d4:	48 89 f7             	mov    %rsi,%rdi
   200d7:	48 8b 50 50          	mov    0x50(%rax),%rdx
   200db:	48 8d 70 60          	lea    0x60(%rax),%rsi
   200df:	0f b6 52 43          	movzbl 0x43(%rdx),%edx
   200e3:	4c 39 c2             	cmp    %r8,%rdx
   200e6:	48 89 d3             	mov    %rdx,%rbx
   200e9:	49 0f 47 d0          	cmova  %r8,%rdx
   200ed:	e8 1b 72 ff ff       	call   1730d <__memcpy>
   200f2:	0f b6 c3             	movzbl %bl,%eax
   200f5:	5b                   	pop    %rbx
   200f6:	c3                   	ret    

00000000000200f7 <netdev_fetch_hwaddr>:
   200f7:	f3 0f 1e fa          	endbr64 
   200fb:	48 89 f8             	mov    %rdi,%rax
   200fe:	53                   	push   %rbx
   200ff:	49 89 d0             	mov    %rdx,%r8
   20102:	48 89 f7             	mov    %rsi,%rdi
   20105:	48 8b 50 50          	mov    0x50(%rax),%rdx
   20109:	48 8d 70 58          	lea    0x58(%rax),%rsi
   2010d:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
   20111:	4c 39 c2             	cmp    %r8,%rdx
   20114:	48 89 d3             	mov    %rdx,%rbx
   20117:	49 0f 47 d0          	cmova  %r8,%rdx
   2011b:	e8 ed 71 ff ff       	call   1730d <__memcpy>
   20120:	0f b6 c3             	movzbl %bl,%eax
   20123:	5b                   	pop    %rbx
   20124:	c3                   	ret    

0000000000020125 <netdev_fetch_busid>:
   20125:	f3 0f 1e fa          	endbr64 
   20129:	49 89 f8             	mov    %rdi,%r8
   2012c:	48 83 ec 18          	sub    $0x18,%rsp
   20130:	48 89 f7             	mov    %rsi,%rdi
   20133:	48 8b 05 36 9e 00 00 	mov    0x9e36(%rip),%rax        # 29f70 <__stack_chk_guard>
   2013a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2013f:	31 c0                	xor    %eax,%eax
   20141:	49 8b 48 40          	mov    0x40(%r8),%rcx
   20145:	48 8d 74 24 03       	lea    0x3(%rsp),%rsi
   2014a:	8b 41 30             	mov    0x30(%rcx),%eax
   2014d:	88 44 24 03          	mov    %al,0x3(%rsp)
   20151:	8b 41 38             	mov    0x38(%rcx),%eax
   20154:	86 c4                	xchg   %al,%ah
   20156:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
   2015b:	8b 41 3c             	mov    0x3c(%rcx),%eax
   2015e:	86 c4                	xchg   %al,%ah
   20160:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
   20165:	b8 05 00 00 00       	mov    $0x5,%eax
   2016a:	48 39 c2             	cmp    %rax,%rdx
   2016d:	48 0f 47 d0          	cmova  %rax,%rdx
   20171:	e8 97 71 ff ff       	call   1730d <__memcpy>
   20176:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   2017b:	48 2b 05 ee 9d 00 00 	sub    0x9dee(%rip),%rax        # 29f70 <__stack_chk_guard>
   20182:	74 05                	je     20189 <netdev_fetch_busid+0x64>
   20184:	e8 d7 28 fe ff       	call   2a60 <__stack_chk_fail>
   20189:	b8 05 00 00 00       	mov    $0x5,%eax
   2018e:	48 83 c4 18          	add    $0x18,%rsp
   20192:	c3                   	ret    

0000000000020193 <netdev_fetch_busloc>:
   20193:	f3 0f 1e fa          	endbr64 
   20197:	48 83 ec 18          	sub    $0x18,%rsp
   2019b:	49 89 f8             	mov    %rdi,%r8
   2019e:	48 89 f7             	mov    %rsi,%rdi
   201a1:	48 8b 05 c8 9d 00 00 	mov    0x9dc8(%rip),%rax        # 29f70 <__stack_chk_guard>
   201a8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   201ad:	49 8b 40 40          	mov    0x40(%r8),%rax
   201b1:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
   201b6:	8b 40 34             	mov    0x34(%rax),%eax
   201b9:	0f c8                	bswap  %eax
   201bb:	89 44 24 04          	mov    %eax,0x4(%rsp)
   201bf:	b8 04 00 00 00       	mov    $0x4,%eax
   201c4:	48 39 c2             	cmp    %rax,%rdx
   201c7:	48 0f 47 d0          	cmova  %rax,%rdx
   201cb:	e8 3d 71 ff ff       	call   1730d <__memcpy>
   201d0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   201d5:	48 2b 05 94 9d 00 00 	sub    0x9d94(%rip),%rax        # 29f70 <__stack_chk_guard>
   201dc:	74 05                	je     201e3 <netdev_fetch_busloc+0x50>
   201de:	e8 7d 28 fe ff       	call   2a60 <__stack_chk_fail>
   201e3:	b8 04 00 00 00       	mov    $0x4,%eax
   201e8:	48 83 c4 18          	add    $0x18,%rsp
   201ec:	c3                   	ret    

00000000000201ed <netdev_store>:
   201ed:	f3 0f 1e fa          	endbr64 
   201f1:	41 57                	push   %r15
   201f3:	4c 8d 3d 86 7b 00 00 	lea    0x7b86(%rip),%r15        # 27d80 <netdev_setting_operations>
   201fa:	41 56                	push   %r14
   201fc:	49 89 ce             	mov    %rcx,%r14
   201ff:	41 55                	push   %r13
   20201:	49 89 d5             	mov    %rdx,%r13
   20204:	41 54                	push   %r12
   20206:	49 89 f4             	mov    %rsi,%r12
   20209:	55                   	push   %rbp
   2020a:	48 89 fd             	mov    %rdi,%rbp
   2020d:	53                   	push   %rbx
   2020e:	31 db                	xor    %ebx,%ebx
   20210:	41 52                	push   %r10
   20212:	49 8b 37             	mov    (%r15),%rsi
   20215:	4c 89 e7             	mov    %r12,%rdi
   20218:	e8 fd 17 ff ff       	call   11a1a <setting_cmp>
   2021d:	48 8d 15 5c 7b 00 00 	lea    0x7b5c(%rip),%rdx        # 27d80 <netdev_setting_operations>
   20224:	85 c0                	test   %eax,%eax
   20226:	75 29                	jne    20251 <netdev_store+0x64>
   20228:	48 6b db 18          	imul   $0x18,%rbx,%rbx
   2022c:	48 8b 44 1a 08       	mov    0x8(%rdx,%rbx,1),%rax
   20231:	48 85 c0             	test   %rax,%rax
   20234:	74 43                	je     20279 <netdev_store+0x8c>
   20236:	41 59                	pop    %r9
   20238:	48 8d bd 98 fe ff ff 	lea    -0x168(%rbp),%rdi
   2023f:	5b                   	pop    %rbx
   20240:	4c 89 f2             	mov    %r14,%rdx
   20243:	5d                   	pop    %rbp
   20244:	4c 89 ee             	mov    %r13,%rsi
   20247:	41 5c                	pop    %r12
   20249:	41 5d                	pop    %r13
   2024b:	41 5e                	pop    %r14
   2024d:	41 5f                	pop    %r15
   2024f:	ff e0                	jmp    *%rax
   20251:	ff c3                	inc    %ebx
   20253:	49 83 c7 18          	add    $0x18,%r15
   20257:	83 fb 07             	cmp    $0x7,%ebx
   2025a:	75 b6                	jne    20212 <netdev_store+0x25>
   2025c:	41 58                	pop    %r8
   2025e:	4c 89 f1             	mov    %r14,%rcx
   20261:	5b                   	pop    %rbx
   20262:	4c 89 ea             	mov    %r13,%rdx
   20265:	4c 89 e6             	mov    %r12,%rsi
   20268:	48 89 ef             	mov    %rbp,%rdi
   2026b:	5d                   	pop    %rbp
   2026c:	41 5c                	pop    %r12
   2026e:	41 5d                	pop    %r13
   20270:	41 5e                	pop    %r14
   20272:	41 5f                	pop    %r15
   20274:	e9 e7 17 ff ff       	jmp    11a60 <generic_settings_store>
   20279:	b8 7d 9f eb c3       	mov    $0xc3eb9f7d,%eax
   2027e:	5a                   	pop    %rdx
   2027f:	5b                   	pop    %rbx
   20280:	5d                   	pop    %rbp
   20281:	41 5c                	pop    %r12
   20283:	41 5d                	pop    %r13
   20285:	41 5e                	pop    %r14
   20287:	41 5f                	pop    %r15
   20289:	c3                   	ret    

000000000002028a <netdev_redirect_settings_init>:
   2028a:	f3 0f 1e fa          	endbr64 
   2028e:	48 8d 15 0c 32 00 00 	lea    0x320c(%rip),%rdx        # 234a1 <.LC0>
   20295:	31 f6                	xor    %esi,%esi
   20297:	48 8d 3d a2 7b 00 00 	lea    0x7ba2(%rip),%rdi        # 27e40 <netdev_redirect_settings>
   2029e:	e9 1b 1d ff ff       	jmp    11fbe <register_settings>

00000000000202a3 <netdev_redirect>:
   202a3:	f3 0f 1e fa          	endbr64 
   202a7:	41 54                	push   %r12
   202a9:	49 89 fc             	mov    %rdi,%r12
   202ac:	e8 39 dd fe ff       	call   dfea <last_opened_netdev>
   202b1:	48 85 c0             	test   %rax,%rax
   202b4:	74 07                	je     202bd <netdev_redirect+0x1a>
   202b6:	4c 8d a0 68 01 00 00 	lea    0x168(%rax),%r12
   202bd:	4c 89 e0             	mov    %r12,%rax
   202c0:	41 5c                	pop    %r12
   202c2:	c3                   	ret    

00000000000202c3 <apply_netdev_settings>:
   202c3:	f3 0f 1e fa          	endbr64 
   202c7:	55                   	push   %rbp
   202c8:	48 8d 2d 51 66 00 00 	lea    0x6651(%rip),%rbp        # 26920 <net_devices>
   202cf:	53                   	push   %rbx
   202d0:	51                   	push   %rcx
   202d1:	48 8b 05 48 66 00 00 	mov    0x6648(%rip),%rax        # 26920 <net_devices>
   202d8:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
   202dc:	48 8d 43 10          	lea    0x10(%rbx),%rax
   202e0:	48 39 e8             	cmp    %rbp,%rax
   202e3:	74 6d                	je     20352 <apply_netdev_settings+0x8f>
   202e5:	48 8d bb 68 01 00 00 	lea    0x168(%rbx),%rdi
   202ec:	48 8d 35 ed 8f 00 00 	lea    0x8fed(%rip),%rsi        # 292e0 <mtu_setting>
   202f3:	e8 34 1e ff ff       	call   1212c <fetch_uintz_setting>
   202f8:	48 85 c0             	test   %rax,%rax
   202fb:	75 0a                	jne    20307 <apply_netdev_settings+0x44>
   202fd:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   20301:	48 83 eb 10          	sub    $0x10,%rbx
   20305:	eb d5                	jmp    202dc <apply_netdev_settings+0x19>
   20307:	48 8b 53 50          	mov    0x50(%rbx),%rdx
   2030b:	0f b6 4a 44          	movzbl 0x44(%rdx),%ecx
   2030f:	48 8b 93 d8 00 00 00 	mov    0xd8(%rbx),%rdx
   20316:	48 29 ca             	sub    %rcx,%rdx
   20319:	48 39 c2             	cmp    %rax,%rdx
   2031c:	48 0f 46 c2          	cmovbe %rdx,%rax
   20320:	48 8b 93 e0 00 00 00 	mov    0xe0(%rbx),%rdx
   20327:	48 89 83 e0 00 00 00 	mov    %rax,0xe0(%rbx)
   2032e:	48 39 c2             	cmp    %rax,%rdx
   20331:	73 ca                	jae    202fd <apply_netdev_settings+0x3a>
   20333:	f6 83 80 00 00 00 01 	testb  $0x1,0x80(%rbx)
   2033a:	74 c1                	je     202fd <apply_netdev_settings+0x3a>
   2033c:	48 89 df             	mov    %rbx,%rdi
   2033f:	e8 35 db fe ff       	call   de79 <netdev_close>
   20344:	48 89 df             	mov    %rbx,%rdi
   20347:	e8 d6 da fe ff       	call   de22 <netdev_open>
   2034c:	85 c0                	test   %eax,%eax
   2034e:	74 ad                	je     202fd <apply_netdev_settings+0x3a>
   20350:	eb 02                	jmp    20354 <apply_netdev_settings+0x91>
   20352:	31 c0                	xor    %eax,%eax
   20354:	5a                   	pop    %rdx
   20355:	5b                   	pop    %rbx
   20356:	5d                   	pop    %rbp
   20357:	c3                   	ret    

0000000000020358 <netdev_fetch_bustype>:
   20358:	f3 0f 1e fa          	endbr64 
   2035c:	55                   	push   %rbp
   2035d:	48 8b 47 40          	mov    0x40(%rdi),%rax
   20361:	8b 48 30             	mov    0x30(%rax),%ecx
   20364:	48 8d 05 b5 79 00 00 	lea    0x79b5(%rip),%rax        # 27d20 <bustypes.0>
   2036b:	48 8b 2c c8          	mov    (%rax,%rcx,8),%rbp
   2036f:	48 85 ed             	test   %rbp,%rbp
   20372:	75 07                	jne    2037b <netdev_fetch_bustype+0x23>
   20374:	b8 72 9f eb d2       	mov    $0xd2eb9f72,%eax
   20379:	eb 13                	jmp    2038e <netdev_fetch_bustype+0x36>
   2037b:	48 89 f7             	mov    %rsi,%rdi
   2037e:	48 89 ee             	mov    %rbp,%rsi
   20381:	e8 4b 36 ff ff       	call   139d1 <strncpy>
   20386:	48 89 ef             	mov    %rbp,%rdi
   20389:	e8 ac 35 ff ff       	call   1393a <strlen>
   2038e:	5d                   	pop    %rbp
   2038f:	c3                   	ret    

0000000000020390 <find_parameters>:
   20390:	f3 0f 1e fa          	endbr64 
   20394:	48 8b 05 75 7b 00 00 	mov    0x7b75(%rip),%rax        # 27f10 <parameters>
   2039b:	41 54                	push   %r12
   2039d:	55                   	push   %rbp
   2039e:	48 8d 2d 6b 7b 00 00 	lea    0x7b6b(%rip),%rbp        # 27f10 <parameters>
   203a5:	53                   	push   %rbx
   203a6:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
   203aa:	48 89 fb             	mov    %rdi,%rbx
   203ad:	49 8d 44 24 10       	lea    0x10(%r12),%rax
   203b2:	48 39 e8             	cmp    %rbp,%rax
   203b5:	74 21                	je     203d8 <find_parameters+0x48>
   203b7:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   203bc:	48 39 df             	cmp    %rbx,%rdi
   203bf:	74 1a                	je     203db <find_parameters+0x4b>
   203c1:	48 89 de             	mov    %rbx,%rsi
   203c4:	e8 17 35 ff ff       	call   138e0 <strcmp>
   203c9:	85 c0                	test   %eax,%eax
   203cb:	74 0e                	je     203db <find_parameters+0x4b>
   203cd:	4d 8b 64 24 10       	mov    0x10(%r12),%r12
   203d2:	49 83 ec 10          	sub    $0x10,%r12
   203d6:	eb d5                	jmp    203ad <find_parameters+0x1d>
   203d8:	45 31 e4             	xor    %r12d,%r12d
   203db:	4c 89 e0             	mov    %r12,%rax
   203de:	5b                   	pop    %rbx
   203df:	5d                   	pop    %rbp
   203e0:	41 5c                	pop    %r12
   203e2:	c3                   	ret    

00000000000203e3 <pending_get>:
   203e3:	f3 0f 1e fa          	endbr64 
   203e7:	ff 07                	incl   (%rdi)
   203e9:	ff 05 e1 9b 00 00    	incl   0x9be1(%rip)        # 29fd0 <pending_total>
   203ef:	c3                   	ret    

00000000000203f0 <pending_put>:
   203f0:	f3 0f 1e fa          	endbr64 
   203f4:	83 3f 00             	cmpl   $0x0,(%rdi)
   203f7:	74 08                	je     20401 <pending_put+0x11>
   203f9:	ff 0d d1 9b 00 00    	decl   0x9bd1(%rip)        # 29fd0 <pending_total>
   203ff:	ff 0f                	decl   (%rdi)
   20401:	c3                   	ret    

0000000000020402 <prompt>:
   20402:	f3 0f 1e fa          	endbr64 
   20406:	41 55                	push   %r13
   20408:	31 c0                	xor    %eax,%eax
   2040a:	4c 8d 2d c0 3f 00 00 	lea    0x3fc0(%rip),%r13        # 243d1 <.LC1>
   20411:	41 54                	push   %r12
   20413:	49 89 f4             	mov    %rsi,%r12
   20416:	48 89 fe             	mov    %rdi,%rsi
   20419:	55                   	push   %rbp
   2041a:	89 d5                	mov    %edx,%ebp
   2041c:	53                   	push   %rbx
   2041d:	48 89 fb             	mov    %rdi,%rbx
   20420:	48 8d 3d fa 31 00 00 	lea    0x31fa(%rip),%rdi        # 23621 <.LC0>
   20427:	51                   	push   %rcx
   20428:	e8 71 6d ff ff       	call   1719e <printf>
   2042d:	4c 89 e7             	mov    %r12,%rdi
   20430:	e8 2a df ff ff       	call   1e35f <getkey>
   20435:	41 89 c4             	mov    %eax,%r12d
   20438:	48 ff c3             	inc    %rbx
   2043b:	80 7b ff 00          	cmpb   $0x0,-0x1(%rbx)
   2043f:	74 0c                	je     2044d <prompt+0x4b>
   20441:	4c 89 ef             	mov    %r13,%rdi
   20444:	31 c0                	xor    %eax,%eax
   20446:	e8 53 6d ff ff       	call   1719e <printf>
   2044b:	eb eb                	jmp    20438 <prompt+0x36>
   2044d:	45 85 e4             	test   %r12d,%r12d
   20450:	79 07                	jns    20459 <prompt+0x57>
   20452:	b8 6e 1f dd b3       	mov    $0xb3dd1f6e,%eax
   20457:	eb 12                	jmp    2046b <prompt+0x69>
   20459:	85 ed                	test   %ebp,%ebp
   2045b:	74 0c                	je     20469 <prompt+0x67>
   2045d:	41 39 ec             	cmp    %ebp,%r12d
   20460:	74 07                	je     20469 <prompt+0x67>
   20462:	b8 6b 1f dd f4       	mov    $0xf4dd1f6b,%eax
   20467:	eb 02                	jmp    2046b <prompt+0x69>
   20469:	31 c0                	xor    %eax,%eax
   2046b:	5a                   	pop    %rdx
   2046c:	5b                   	pop    %rbx
   2046d:	5d                   	pop    %rbp
   2046e:	41 5c                	pop    %r12
   20470:	41 5d                	pop    %r13
   20472:	c3                   	ret    

0000000000020473 <route>:
   20473:	f3 0f 1e fa          	endbr64 
   20477:	41 55                	push   %r13
   20479:	41 54                	push   %r12
   2047b:	4c 8d 25 9e 64 00 00 	lea    0x649e(%rip),%r12        # 26920 <net_devices>
   20482:	55                   	push   %rbp
   20483:	53                   	push   %rbx
   20484:	52                   	push   %rdx
   20485:	48 8b 05 94 64 00 00 	mov    0x6494(%rip),%rax        # 26920 <net_devices>
   2048c:	48 8d 58 f0          	lea    -0x10(%rax),%rbx
   20490:	48 8d 43 10          	lea    0x10(%rbx),%rax
   20494:	4c 39 e0             	cmp    %r12,%rax
   20497:	74 29                	je     204c2 <route+0x4f>
   20499:	48 8d 2d 78 8a 00 00 	lea    0x8a78(%rip),%rbp        # 28f18 <ipv4_routing_family>
   204a0:	4c 8d 2d 79 8a 00 00 	lea    0x8a79(%rip),%r13        # 28f20 <setting_type_dnssl>
   204a7:	4c 39 ed             	cmp    %r13,%rbp
   204aa:	73 0c                	jae    204b8 <route+0x45>
   204ac:	48 89 df             	mov    %rbx,%rdi
   204af:	ff 55 00             	call   *0x0(%rbp)
   204b2:	48 83 c5 08          	add    $0x8,%rbp
   204b6:	eb ef                	jmp    204a7 <route+0x34>
   204b8:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
   204bc:	48 83 eb 10          	sub    $0x10,%rbx
   204c0:	eb ce                	jmp    20490 <route+0x1d>
   204c2:	58                   	pop    %rax
   204c3:	5b                   	pop    %rbx
   204c4:	5d                   	pop    %rbp
   204c5:	41 5c                	pop    %r12
   204c7:	41 5d                	pop    %r13
   204c9:	c3                   	ret    

00000000000204ca <sandev_command_capacity>:
   204ca:	f3 0f 1e fa          	endbr64 
   204ce:	48 81 c7 a0 00 00 00 	add    $0xa0,%rdi
   204d5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   204d6:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   204d7:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   204d8:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   204d9:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   204da:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   204db:	c3                   	ret    

00000000000204dc <sanpath_block_window>:
   204dc:	f3 0f 1e fa          	endbr64 
   204e0:	31 c0                	xor    %eax,%eax
   204e2:	c3                   	ret    

00000000000204e3 <sandev_command_rw>:
   204e3:	f3 0f 1e fa          	endbr64 
   204e7:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
   204ee:	44 8b 4e 18          	mov    0x18(%rsi),%r9d
   204f2:	4c 8d 5f 28          	lea    0x28(%rdi),%r11
   204f6:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   204fa:	4c 8b 46 08          	mov    0x8(%rsi),%r8
   204fe:	4c 8d 50 28          	lea    0x28(%rax),%r10
   20502:	4c 89 c9             	mov    %r9,%rcx
   20505:	48 8b 06             	mov    (%rsi),%rax
   20508:	4c 89 de             	mov    %r11,%rsi
   2050b:	4c 0f af 8f a8 00 00 	imul   0xa8(%rdi),%r9
   20512:	00 
   20513:	4c 89 d7             	mov    %r10,%rdi
   20516:	ff e0                	jmp    *%rax

0000000000020518 <sandev_undescribe>:
   20518:	41 54                	push   %r12
   2051a:	49 89 fc             	mov    %rdi,%r12
   2051d:	55                   	push   %rbp
   2051e:	31 ed                	xor    %ebp,%ebp
   20520:	53                   	push   %rbx
   20521:	41 39 ac 24 c8 00 00 	cmp    %ebp,0xc8(%r12)
   20528:	00 
   20529:	76 29                	jbe    20554 <sandev_undescribe+0x3c>
   2052b:	89 eb                	mov    %ebp,%ebx
   2052d:	48 6b db 78          	imul   $0x78,%rbx,%rbx
   20531:	4c 01 e3             	add    %r12,%rbx
   20534:	48 8b bb 68 01 00 00 	mov    0x168(%rbx),%rdi
   2053b:	48 85 ff             	test   %rdi,%rdi
   2053e:	74 10                	je     20550 <sandev_undescribe+0x38>
   20540:	e8 79 75 ff ff       	call   17abe <acpi_del>
   20545:	48 c7 83 68 01 00 00 	movq   $0x0,0x168(%rbx)
   2054c:	00 00 00 00 
   20550:	ff c5                	inc    %ebp
   20552:	eb cd                	jmp    20521 <sandev_undescribe+0x9>
   20554:	5b                   	pop    %rbx
   20555:	5d                   	pop    %rbp
   20556:	41 5c                	pop    %r12
   20558:	c3                   	ret    

0000000000020559 <sandev_command_close>:
   20559:	f3 0f 1e fa          	endbr64 
   2055d:	55                   	push   %rbp
   2055e:	89 f5                	mov    %esi,%ebp
   20560:	53                   	push   %rbx
   20561:	48 89 fb             	mov    %rdi,%rbx
   20564:	48 8d 7f 48          	lea    0x48(%rdi),%rdi
   20568:	50                   	push   %rax
   20569:	e8 62 fd fe ff       	call   102d0 <stop_timer>
   2056e:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   20572:	89 ee                	mov    %ebp,%esi
   20574:	e8 cf 92 fe ff       	call   9848 <intf_restart>
   20579:	89 ab 98 00 00 00    	mov    %ebp,0x98(%rbx)
   2057f:	5a                   	pop    %rdx
   20580:	5b                   	pop    %rbx
   20581:	5d                   	pop    %rbp
   20582:	c3                   	ret    

0000000000020583 <sandev_command_expired>:
   20583:	f3 0f 1e fa          	endbr64 
   20587:	be 6e df dc b3       	mov    $0xb3dcdf6e,%esi
   2058c:	48 83 ef 48          	sub    $0x48,%rdi
   20590:	e9 c4 ff ff ff       	jmp    20559 <sandev_command_close>

0000000000020595 <sandev_free>:
   20595:	f3 0f 1e fa          	endbr64 
   20599:	55                   	push   %rbp
   2059a:	48 89 fd             	mov    %rdi,%rbp
   2059d:	53                   	push   %rbx
   2059e:	31 db                	xor    %ebx,%ebx
   205a0:	52                   	push   %rdx
   205a1:	3b 9d c8 00 00 00    	cmp    0xc8(%rbp),%ebx
   205a7:	73 17                	jae    205c0 <sandev_free+0x2b>
   205a9:	89 d8                	mov    %ebx,%eax
   205ab:	ff c3                	inc    %ebx
   205ad:	48 6b c0 78          	imul   $0x78,%rax,%rax
   205b1:	48 8b bc 05 08 01 00 	mov    0x108(%rbp,%rax,1),%rdi
   205b8:	00 
   205b9:	e8 80 f8 fe ff       	call   fe3e <ref_decrement>
   205be:	eb e1                	jmp    205a1 <sandev_free+0xc>
   205c0:	58                   	pop    %rax
   205c1:	48 89 ef             	mov    %rbp,%rdi
   205c4:	5b                   	pop    %rbx
   205c5:	5d                   	pop    %rbp
   205c6:	e9 84 c0 fe ff       	jmp    c64f <free>

00000000000205cb <sandev_command_read_capacity>:
   205cb:	f3 0f 1e fa          	endbr64 
   205cf:	48 8d 77 28          	lea    0x28(%rdi),%rsi
   205d3:	48 8b bf d0 00 00 00 	mov    0xd0(%rdi),%rdi
   205da:	48 83 c7 28          	add    $0x28,%rdi
   205de:	e9 8d 88 ff ff       	jmp    18e70 <block_read_capacity>

00000000000205e3 <sandev_apply>:
   205e3:	f3 0f 1e fa          	endbr64 
   205e7:	51                   	push   %rcx
   205e8:	31 ff                	xor    %edi,%edi
   205ea:	48 8d 15 87 44 00 00 	lea    0x4487(%rip),%rdx        # 24a78 <san_retries>
   205f1:	48 8d 35 40 8f 00 00 	lea    0x8f40(%rip),%rsi        # 29538 <san_retries_setting>
   205f8:	e8 d5 18 ff ff       	call   11ed2 <fetch_uint_setting>
   205fd:	85 c0                	test   %eax,%eax
   205ff:	79 0b                	jns    2060c <sandev_apply+0x29>
   20601:	48 c7 05 6c 44 00 00 	movq   $0xa,0x446c(%rip)        # 24a78 <san_retries>
   20608:	0a 00 00 00 
   2060c:	31 c0                	xor    %eax,%eax
   2060e:	5a                   	pop    %rdx
   2060f:	c3                   	ret    

0000000000020610 <sanpath_close>:
   20610:	41 54                	push   %r12
   20612:	55                   	push   %rbp
   20613:	89 f5                	mov    %esi,%ebp
   20615:	53                   	push   %rbx
   20616:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   2061a:	48 89 fb             	mov    %rdi,%rbx
   2061d:	48 83 c7 18          	add    $0x18,%rdi
   20621:	48 8b 47 08          	mov    0x8(%rdi),%rax
   20625:	4c 8b 67 e8          	mov    -0x18(%rdi),%r12
   20629:	89 77 50             	mov    %esi,0x50(%rdi)
   2062c:	48 89 42 08          	mov    %rax,0x8(%rdx)
   20630:	49 8d b4 24 e8 00 00 	lea    0xe8(%r12),%rsi
   20637:	00 
   20638:	48 89 10             	mov    %rdx,(%rax)
   2063b:	e8 97 ba fe ff       	call   c0d7 <extern_list_add_tail>
   20640:	48 8d 7b 48          	lea    0x48(%rbx),%rdi
   20644:	e8 3b f3 fe ff       	call   f984 <process_del>
   20649:	48 8d 53 28          	lea    0x28(%rbx),%rdx
   2064d:	49 3b 9c 24 d0 00 00 	cmp    0xd0(%r12),%rbx
   20654:	00 
   20655:	75 2a                	jne    20681 <sanpath_close+0x71>
   20657:	49 8d 74 24 28       	lea    0x28(%r12),%rsi
   2065c:	89 ef                	mov    %ebp,%edi
   2065e:	31 c9                	xor    %ecx,%ecx
   20660:	31 c0                	xor    %eax,%eax
   20662:	e8 6c 94 fe ff       	call   9ad3 <intfs_restart>
   20667:	89 ee                	mov    %ebp,%esi
   20669:	4c 89 e7             	mov    %r12,%rdi
   2066c:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
   20673:	00 00 00 00 00 
   20678:	5b                   	pop    %rbx
   20679:	5d                   	pop    %rbp
   2067a:	41 5c                	pop    %r12
   2067c:	e9 d8 fe ff ff       	jmp    20559 <sandev_command_close>
   20681:	5b                   	pop    %rbx
   20682:	89 ee                	mov    %ebp,%esi
   20684:	48 89 d7             	mov    %rdx,%rdi
   20687:	5d                   	pop    %rbp
   20688:	41 5c                	pop    %r12
   2068a:	e9 b9 91 fe ff       	jmp    9848 <intf_restart>

000000000002068f <sanpath_block_close>:
   2068f:	f3 0f 1e fa          	endbr64 
   20693:	85 f6                	test   %esi,%esi
   20695:	75 05                	jne    2069c <sanpath_block_close+0xd>
   20697:	be 6d df dc c7       	mov    $0xc7dcdf6d,%esi
   2069c:	e9 6f ff ff ff       	jmp    20610 <sanpath_close>

00000000000206a1 <sandev_restart>:
   206a1:	55                   	push   %rbp
   206a2:	48 89 fd             	mov    %rdi,%rbp
   206a5:	53                   	push   %rbx
   206a6:	48 8d 9f d8 00 00 00 	lea    0xd8(%rdi),%rbx
   206ad:	48 83 ec 18          	sub    $0x18,%rsp
   206b1:	48 8b bd d8 00 00 00 	mov    0xd8(%rbp),%rdi
   206b8:	48 39 df             	cmp    %rbx,%rdi
   206bb:	74 13                	je     206d0 <sandev_restart+0x2f>
   206bd:	48 83 ef 18          	sub    $0x18,%rdi
   206c1:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   206c5:	e8 46 ff ff ff       	call   20610 <sanpath_close>
   206ca:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   206ce:	eb e1                	jmp    206b1 <sandev_restart+0x10>
   206d0:	48 c7 85 d0 00 00 00 	movq   $0x0,0xd0(%rbp)
   206d7:	00 00 00 00 
   206db:	48 83 c4 18          	add    $0x18,%rsp
   206df:	48 89 ef             	mov    %rbp,%rdi
   206e2:	5b                   	pop    %rbx
   206e3:	5d                   	pop    %rbp
   206e4:	e9 70 fe ff ff       	jmp    20559 <sandev_command_close>

00000000000206e9 <sanpath_step>:
   206e9:	f3 0f 1e fa          	endbr64 
   206ed:	55                   	push   %rbp
   206ee:	53                   	push   %rbx
   206ef:	51                   	push   %rcx
   206f0:	48 8b 1f             	mov    (%rdi),%rbx
   206f3:	48 39 bb d0 00 00 00 	cmp    %rdi,0xd0(%rbx)
   206fa:	74 38                	je     20734 <sanpath_step+0x4b>
   206fc:	48 89 fd             	mov    %rdi,%rbp
   206ff:	48 8d 7f 28          	lea    0x28(%rdi),%rdi
   20703:	e8 30 6d ff ff       	call   17438 <xfer_window>
   20708:	48 85 c0             	test   %rax,%rax
   2070b:	74 27                	je     20734 <sanpath_step+0x4b>
   2070d:	48 83 bb d0 00 00 00 	cmpq   $0x0,0xd0(%rbx)
   20714:	00 
   20715:	c7 45 68 00 00 00 00 	movl   $0x0,0x68(%rbp)
   2071c:	75 09                	jne    20727 <sanpath_step+0x3e>
   2071e:	48 89 ab d0 00 00 00 	mov    %rbp,0xd0(%rbx)
   20725:	eb 0d                	jmp    20734 <sanpath_step+0x4b>
   20727:	5a                   	pop    %rdx
   20728:	48 89 ef             	mov    %rbp,%rdi
   2072b:	5b                   	pop    %rbx
   2072c:	31 f6                	xor    %esi,%esi
   2072e:	5d                   	pop    %rbp
   2072f:	e9 dc fe ff ff       	jmp    20610 <sanpath_close>
   20734:	58                   	pop    %rax
   20735:	5b                   	pop    %rbx
   20736:	5d                   	pop    %rbp
   20737:	c3                   	ret    

0000000000020738 <sandev_find>:
   20738:	f3 0f 1e fa          	endbr64 
   2073c:	48 8b 05 9d 78 00 00 	mov    0x789d(%rip),%rax        # 27fe0 <san_devices>
   20743:	48 8d 15 96 78 00 00 	lea    0x7896(%rip),%rdx        # 27fe0 <san_devices>
   2074a:	48 83 e8 10          	sub    $0x10,%rax
   2074e:	48 8d 48 10          	lea    0x10(%rax),%rcx
   20752:	48 39 d1             	cmp    %rdx,%rcx
   20755:	74 0f                	je     20766 <sandev_find+0x2e>
   20757:	39 78 20             	cmp    %edi,0x20(%rax)
   2075a:	74 0c                	je     20768 <sandev_find+0x30>
   2075c:	48 8b 40 10          	mov    0x10(%rax),%rax
   20760:	48 83 e8 10          	sub    $0x10,%rax
   20764:	eb e8                	jmp    2074e <sandev_find+0x16>
   20766:	31 c0                	xor    %eax,%eax
   20768:	c3                   	ret    

0000000000020769 <sandev_reopen>:
   20769:	f3 0f 1e fa          	endbr64 
   2076d:	41 57                	push   %r15
   2076f:	41 56                	push   %r14
   20771:	41 55                	push   %r13
   20773:	41 54                	push   %r12
   20775:	55                   	push   %rbp
   20776:	48 89 fd             	mov    %rdi,%rbp
   20779:	53                   	push   %rbx
   2077a:	51                   	push   %rcx
   2077b:	e8 3d 0b 00 00       	call   212bd <unquiesce>
   20780:	be 6b df dc f0       	mov    $0xf0dcdf6b,%esi
   20785:	48 89 ef             	mov    %rbp,%rdi
   20788:	4c 8d bd e8 00 00 00 	lea    0xe8(%rbp),%r15
   2078f:	e8 0d ff ff ff       	call   206a1 <sandev_restart>
   20794:	48 8b 9d e8 00 00 00 	mov    0xe8(%rbp),%rbx
   2079b:	4c 39 fb             	cmp    %r15,%rbx
   2079e:	75 0c                	jne    207ac <sandev_reopen+0x43>
   207a0:	4c 8d a5 d8 00 00 00 	lea    0xd8(%rbp),%r12
   207a7:	e9 8d 00 00 00       	jmp    20839 <sandev_reopen+0xd0>
   207ac:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
   207b0:	4c 8d 73 10          	lea    0x10(%rbx),%r14
   207b4:	4c 8b 6b e8          	mov    -0x18(%rbx),%r13
   207b8:	4c 89 f7             	mov    %r14,%rdi
   207bb:	e8 53 e2 fe ff       	call   ea13 <xfer_open_uri>
   207c0:	41 89 c4             	mov    %eax,%r12d
   207c3:	85 c0                	test   %eax,%eax
   207c5:	0f 85 97 00 00 00    	jne    20862 <sandev_reopen+0xf9>
   207cb:	41 f6 45 24 01       	testb  $0x1,0x24(%r13)
   207d0:	75 27                	jne    207f9 <sandev_reopen+0x90>
   207d2:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
   207d6:	48 85 ff             	test   %rdi,%rdi
   207d9:	74 05                	je     207e0 <sandev_reopen+0x77>
   207db:	e8 de 72 ff ff       	call   17abe <acpi_del>
   207e0:	4c 89 f7             	mov    %r14,%rdi
   207e3:	e8 32 72 ff ff       	call   17a1a <acpi_describe>
   207e8:	48 89 43 58          	mov    %rax,0x58(%rbx)
   207ec:	48 89 c7             	mov    %rax,%rdi
   207ef:	48 85 c0             	test   %rax,%rax
   207f2:	74 05                	je     207f9 <sandev_reopen+0x90>
   207f4:	e8 a7 72 ff ff       	call   17aa0 <acpi_add>
   207f9:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   207fd:	e8 2f f1 fe ff       	call   f931 <process_add>
   20802:	48 8b 13             	mov    (%rbx),%rdx
   20805:	48 8b 43 08          	mov    0x8(%rbx),%rax
   20809:	48 89 df             	mov    %rbx,%rdi
   2080c:	49 8d b5 d8 00 00 00 	lea    0xd8(%r13),%rsi
   20813:	48 89 42 08          	mov    %rax,0x8(%rdx)
   20817:	48 89 10             	mov    %rdx,(%rax)
   2081a:	e8 b8 b8 fe ff       	call   c0d7 <extern_list_add_tail>
   2081f:	c7 43 50 6c df dc e5 	movl   $0xe5dcdf6c,0x50(%rbx)
   20826:	e9 69 ff ff ff       	jmp    20794 <sandev_reopen+0x2b>
   2082b:	e8 7c f1 fe ff       	call   f9ac <step>
   20830:	4c 39 a5 d8 00 00 00 	cmp    %r12,0xd8(%rbp)
   20837:	74 0c                	je     20845 <sandev_reopen+0xdc>
   20839:	48 83 bd d0 00 00 00 	cmpq   $0x0,0xd0(%rbp)
   20840:	00 
   20841:	74 e8                	je     2082b <sandev_reopen+0xc2>
   20843:	eb 18                	jmp    2085d <sandev_reopen+0xf4>
   20845:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
   2084c:	41 bc 79 df dc d3    	mov    $0xd3dcdf79,%r12d
   20852:	48 39 c3             	cmp    %rax,%rbx
   20855:	74 0b                	je     20862 <sandev_reopen+0xf9>
   20857:	44 8b 60 50          	mov    0x50(%rax),%r12d
   2085b:	eb 05                	jmp    20862 <sandev_reopen+0xf9>
   2085d:	45 31 e4             	xor    %r12d,%r12d
   20860:	eb 0b                	jmp    2086d <sandev_reopen+0x104>
   20862:	44 89 e6             	mov    %r12d,%esi
   20865:	48 89 ef             	mov    %rbp,%rdi
   20868:	e8 34 fe ff ff       	call   206a1 <sandev_restart>
   2086d:	5a                   	pop    %rdx
   2086e:	44 89 e0             	mov    %r12d,%eax
   20871:	5b                   	pop    %rbx
   20872:	5d                   	pop    %rbp
   20873:	41 5c                	pop    %r12
   20875:	41 5d                	pop    %r13
   20877:	41 5e                	pop    %r14
   20879:	41 5f                	pop    %r15
   2087b:	c3                   	ret    

000000000002087c <sandev_command>:
   2087c:	41 56                	push   %r14
   2087e:	41 55                	push   %r13
   20880:	49 89 d5             	mov    %rdx,%r13
   20883:	41 54                	push   %r12
   20885:	49 89 f4             	mov    %rsi,%r12
   20888:	55                   	push   %rbp
   20889:	31 ed                	xor    %ebp,%ebp
   2088b:	53                   	push   %rbx
   2088c:	48 89 fb             	mov    %rdi,%rbx
   2088f:	4c 8d 73 48          	lea    0x48(%rbx),%r14
   20893:	48 83 ec 10          	sub    $0x10,%rsp
   20897:	e8 21 0a 00 00       	call   212bd <unquiesce>
   2089c:	48 83 bb d0 00 00 00 	cmpq   $0x0,0xd0(%rbx)
   208a3:	00 
   208a4:	75 29                	jne    208cf <sandev_command+0x53>
   208a6:	48 89 df             	mov    %rbx,%rdi
   208a9:	e8 bb fe ff ff       	call   20769 <sandev_reopen>
   208ae:	85 c0                	test   %eax,%eax
   208b0:	74 1d                	je     208cf <sandev_command+0x53>
   208b2:	bf 05 00 00 00       	mov    $0x5,%edi
   208b7:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   208bb:	e8 b2 54 ff ff       	call   15d72 <sleep_fixed>
   208c0:	83 bb c8 00 00 00 01 	cmpl   $0x1,0xc8(%rbx)
   208c7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   208cb:	77 35                	ja     20902 <sandev_command+0x86>
   208cd:	eb 31                	jmp    20900 <sandev_command+0x84>
   208cf:	4c 89 ee             	mov    %r13,%rsi
   208d2:	48 89 df             	mov    %rbx,%rdi
   208d5:	41 ff d4             	call   *%r12
   208d8:	85 c0                	test   %eax,%eax
   208da:	75 24                	jne    20900 <sandev_command+0x84>
   208dc:	be 00 3c 00 00       	mov    $0x3c00,%esi
   208e1:	4c 89 f7             	mov    %r14,%rdi
   208e4:	e8 79 f9 fe ff       	call   10262 <start_timer_fixed>
   208e9:	83 7b 58 00          	cmpl   $0x0,0x58(%rbx)
   208ed:	74 07                	je     208f6 <sandev_command+0x7a>
   208ef:	e8 b8 f0 fe ff       	call   f9ac <step>
   208f4:	eb f3                	jmp    208e9 <sandev_command+0x6d>
   208f6:	8b 83 98 00 00 00    	mov    0x98(%rbx),%eax
   208fc:	85 c0                	test   %eax,%eax
   208fe:	74 0d                	je     2090d <sandev_command+0x91>
   20900:	ff c5                	inc    %ebp
   20902:	89 ea                	mov    %ebp,%edx
   20904:	48 3b 15 6d 41 00 00 	cmp    0x416d(%rip),%rdx        # 24a78 <san_retries>
   2090b:	76 8f                	jbe    2089c <sandev_command+0x20>
   2090d:	48 83 c4 10          	add    $0x10,%rsp
   20911:	5b                   	pop    %rbx
   20912:	5d                   	pop    %rbp
   20913:	41 5c                	pop    %r12
   20915:	41 5d                	pop    %r13
   20917:	41 5e                	pop    %r14
   20919:	c3                   	ret    

000000000002091a <sandev_rw>:
   2091a:	41 54                	push   %r12
   2091c:	4c 8d 25 c0 fb ff ff 	lea    -0x440(%rip),%r12        # 204e3 <sandev_command_rw>
   20923:	55                   	push   %rbp
   20924:	48 89 fd             	mov    %rdi,%rbp
   20927:	53                   	push   %rbx
   20928:	89 d3                	mov    %edx,%ebx
   2092a:	48 83 ec 30          	sub    $0x30,%rsp
   2092e:	48 8b 05 3b 96 00 00 	mov    0x963b(%rip),%rax        # 29f70 <__stack_chk_guard>
   20935:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   2093a:	31 c0                	xor    %eax,%eax
   2093c:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   20941:	8b 8f b8 00 00 00    	mov    0xb8(%rdi),%ecx
   20947:	8b 87 b0 00 00 00    	mov    0xb0(%rdi),%eax
   2094d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   20952:	48 d3 e6             	shl    %cl,%rsi
   20955:	d3 e3                	shl    %cl,%ebx
   20957:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   2095c:	89 44 24 20          	mov    %eax,0x20(%rsp)
   20960:	85 db                	test   %ebx,%ebx
   20962:	74 3b                	je     2099f <sandev_rw+0x85>
   20964:	39 5c 24 20          	cmp    %ebx,0x20(%rsp)
   20968:	76 04                	jbe    2096e <sandev_rw+0x54>
   2096a:	89 5c 24 20          	mov    %ebx,0x20(%rsp)
   2096e:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   20973:	4c 89 e6             	mov    %r12,%rsi
   20976:	48 89 ef             	mov    %rbp,%rdi
   20979:	e8 fe fe ff ff       	call   2087c <sandev_command>
   2097e:	85 c0                	test   %eax,%eax
   20980:	75 1f                	jne    209a1 <sandev_rw+0x87>
   20982:	8b 54 24 20          	mov    0x20(%rsp),%edx
   20986:	48 8b 8d a8 00 00 00 	mov    0xa8(%rbp),%rcx
   2098d:	48 01 54 24 18       	add    %rdx,0x18(%rsp)
   20992:	48 0f af ca          	imul   %rdx,%rcx
   20996:	29 d3                	sub    %edx,%ebx
   20998:	48 01 4c 24 10       	add    %rcx,0x10(%rsp)
   2099d:	eb c1                	jmp    20960 <sandev_rw+0x46>
   2099f:	31 c0                	xor    %eax,%eax
   209a1:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   209a6:	48 2b 15 c3 95 00 00 	sub    0x95c3(%rip),%rdx        # 29f70 <__stack_chk_guard>
   209ad:	74 05                	je     209b4 <sandev_rw+0x9a>
   209af:	e8 ac 20 fe ff       	call   2a60 <__stack_chk_fail>
   209b4:	48 83 c4 30          	add    $0x30,%rsp
   209b8:	5b                   	pop    %rbx
   209b9:	5d                   	pop    %rbp
   209ba:	41 5c                	pop    %r12
   209bc:	c3                   	ret    

00000000000209bd <sandev_reset>:
   209bd:	f3 0f 1e fa          	endbr64 
   209c1:	e9 a3 fd ff ff       	jmp    20769 <sandev_reopen>

00000000000209c6 <sandev_read>:
   209c6:	f3 0f 1e fa          	endbr64 
   209ca:	4c 8d 05 5d 83 ff ff 	lea    -0x7ca3(%rip),%r8        # 18d2e <block_read>
   209d1:	e9 44 ff ff ff       	jmp    2091a <sandev_rw>

00000000000209d6 <sandev_write>:
   209d6:	f3 0f 1e fa          	endbr64 
   209da:	48 83 ec 18          	sub    $0x18,%rsp
   209de:	4c 8d 05 ea 83 ff ff 	lea    -0x7c16(%rip),%r8        # 18dcf <block_write>
   209e5:	e8 30 ff ff ff       	call   2091a <sandev_rw>
   209ea:	85 c0                	test   %eax,%eax
   209ec:	75 0d                	jne    209fb <sandev_write+0x25>
   209ee:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   209f2:	e8 a0 08 00 00       	call   21297 <quiesce>
   209f7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   209fb:	48 83 c4 18          	add    $0x18,%rsp
   209ff:	c3                   	ret    

0000000000020a00 <alloc_sandev>:
   20a00:	f3 0f 1e fa          	endbr64 
   20a04:	41 57                	push   %r15
   20a06:	41 56                	push   %r14
   20a08:	41 55                	push   %r13
   20a0a:	41 89 f5             	mov    %esi,%r13d
   20a0d:	41 54                	push   %r12
   20a0f:	55                   	push   %rbp
   20a10:	48 89 fd             	mov    %rdi,%rbp
   20a13:	53                   	push   %rbx
   20a14:	49 6b dd 78          	imul   $0x78,%r13,%rbx
   20a18:	48 81 c3 f8 00 00 00 	add    $0xf8,%rbx
   20a1f:	48 83 ec 18          	sub    $0x18,%rsp
   20a23:	48 8d 3c 1a          	lea    (%rdx,%rbx,1),%rdi
   20a27:	e8 2e bc fe ff       	call   c65a <zalloc>
   20a2c:	49 89 c4             	mov    %rax,%r12
   20a2f:	48 85 c0             	test   %rax,%rax
   20a32:	0f 84 0b 01 00 00    	je     20b43 <alloc_sandev+0x143>
   20a38:	48 8d 15 61 75 00 00 	lea    0x7561(%rip),%rdx        # 27fa0 <sandev_command_desc>
   20a3f:	4d 89 64 24 30       	mov    %r12,0x30(%r12)
   20a44:	4c 01 e3             	add    %r12,%rbx
   20a47:	48 8d 05 47 fb ff ff 	lea    -0x4b9(%rip),%rax        # 20595 <sandev_free>
   20a4e:	4d 8d bc 24 e8 00 00 	lea    0xe8(%r12),%r15
   20a55:	00 
   20a56:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   20a5b:	45 31 f6             	xor    %r14d,%r14d
   20a5e:	48 8d 05 7b 59 00 00 	lea    0x597b(%rip),%rax        # 263e0 <null_intf>
   20a65:	49 89 54 24 38       	mov    %rdx,0x38(%r12)
   20a6a:	48 8d 35 12 fb ff ff 	lea    -0x4ee(%rip),%rsi        # 20583 <sandev_command_expired>
   20a71:	49 89 54 24 40       	mov    %rdx,0x40(%r12)
   20a76:	49 8d 94 24 d8 00 00 	lea    0xd8(%r12),%rdx
   20a7d:	00 
   20a7e:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   20a83:	49 89 b4 24 88 00 00 	mov    %rsi,0x88(%r12)
   20a8a:	00 
   20a8b:	4d 89 a4 24 90 00 00 	mov    %r12,0x90(%r12)
   20a92:	00 
   20a93:	45 89 ac 24 c8 00 00 	mov    %r13d,0xc8(%r12)
   20a9a:	00 
   20a9b:	49 89 94 24 d8 00 00 	mov    %rdx,0xd8(%r12)
   20aa2:	00 
   20aa3:	49 89 94 24 e0 00 00 	mov    %rdx,0xe0(%r12)
   20aaa:	00 
   20aab:	4d 89 bc 24 e8 00 00 	mov    %r15,0xe8(%r12)
   20ab2:	00 
   20ab3:	4d 89 bc 24 f0 00 00 	mov    %r15,0xf0(%r12)
   20aba:	00 
   20abb:	49 89 9c 24 c0 00 00 	mov    %rbx,0xc0(%r12)
   20ac2:	00 
   20ac3:	49 8d 9c 24 40 01 00 	lea    0x140(%r12),%rbx
   20aca:	00 
   20acb:	4d 39 f5             	cmp    %r14,%r13
   20ace:	74 73                	je     20b43 <alloc_sandev+0x143>
   20ad0:	4a 8b 4c f5 00       	mov    0x0(%rbp,%r14,8),%rcx
   20ad5:	4c 89 63 b8          	mov    %r12,-0x48(%rbx)
   20ad9:	44 89 73 c0          	mov    %r14d,-0x40(%rbx)
   20add:	48 89 cf             	mov    %rcx,%rdi
   20ae0:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   20ae5:	e8 48 f3 fe ff       	call   fe32 <ref_increment>
   20aea:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   20aef:	48 8d 7b d0          	lea    -0x30(%rbx),%rdi
   20af3:	4c 89 fe             	mov    %r15,%rsi
   20af6:	48 89 4b c8          	mov    %rcx,-0x38(%rbx)
   20afa:	e8 d8 b5 fe ff       	call   c0d7 <extern_list_add_tail>
   20aff:	48 8d 15 3a 74 00 00 	lea    0x743a(%rip),%rdx        # 27f40 <sanpath_block_desc>
   20b06:	48 8d 05 d3 58 00 00 	lea    0x58d3(%rip),%rax        # 263e0 <null_intf>
   20b0d:	4c 89 63 e8          	mov    %r12,-0x18(%rbx)
   20b11:	48 8d 0d 08 74 00 00 	lea    0x7408(%rip),%rcx        # 27f20 <sanpath_process_desc>
   20b18:	48 89 43 e0          	mov    %rax,-0x20(%rbx)
   20b1c:	48 89 53 f0          	mov    %rdx,-0x10(%rbx)
   20b20:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
   20b24:	48 89 1b             	mov    %rbx,(%rbx)
   20b27:	48 89 5b 08          	mov    %rbx,0x8(%rbx)
   20b2b:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
   20b2f:	4c 89 63 18          	mov    %r12,0x18(%rbx)
   20b33:	c7 43 20 6c df dc e5 	movl   $0xe5dcdf6c,0x20(%rbx)
   20b3a:	49 ff c6             	inc    %r14
   20b3d:	48 83 c3 78          	add    $0x78,%rbx
   20b41:	eb 88                	jmp    20acb <alloc_sandev+0xcb>
   20b43:	48 83 c4 18          	add    $0x18,%rsp
   20b47:	4c 89 e0             	mov    %r12,%rax
   20b4a:	5b                   	pop    %rbx
   20b4b:	5d                   	pop    %rbp
   20b4c:	41 5c                	pop    %r12
   20b4e:	41 5d                	pop    %r13
   20b50:	41 5e                	pop    %r14
   20b52:	41 5f                	pop    %r15
   20b54:	c3                   	ret    

0000000000020b55 <register_sandev>:
   20b55:	f3 0f 1e fa          	endbr64 
   20b59:	41 56                	push   %r14
   20b5b:	41 89 d0             	mov    %edx,%r8d
   20b5e:	41 55                	push   %r13
   20b60:	41 54                	push   %r12
   20b62:	55                   	push   %rbp
   20b63:	48 89 fd             	mov    %rdi,%rbp
   20b66:	89 f7                	mov    %esi,%edi
   20b68:	53                   	push   %rbx
   20b69:	e8 ca fb ff ff       	call   20738 <sandev_find>
   20b6e:	48 85 c0             	test   %rax,%rax
   20b71:	74 0b                	je     20b7e <register_sandev+0x29>
   20b73:	41 bc 6c df dc fc    	mov    $0xfcdcdf6c,%r12d
   20b79:	e9 79 01 00 00       	jmp    20cf7 <register_sandev+0x1a2>
   20b7e:	89 75 20             	mov    %esi,0x20(%rbp)
   20b81:	48 89 ef             	mov    %rbp,%rdi
   20b84:	44 89 45 24          	mov    %r8d,0x24(%rbp)
   20b88:	e8 dc fb ff ff       	call   20769 <sandev_reopen>
   20b8d:	41 89 c4             	mov    %eax,%r12d
   20b90:	85 c0                	test   %eax,%eax
   20b92:	0f 85 b6 00 00 00    	jne    20c4e <register_sandev+0xf9>
   20b98:	48 8d 9d e8 00 00 00 	lea    0xe8(%rbp),%rbx
   20b9f:	e8 08 ee fe ff       	call   f9ac <step>
   20ba4:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
   20bab:	4c 8d 68 e8          	lea    -0x18(%rax),%r13
   20baf:	49 8d 45 18          	lea    0x18(%r13),%rax
   20bb3:	48 39 d8             	cmp    %rbx,%rax
   20bb6:	74 23                	je     20bdb <register_sandev+0x86>
   20bb8:	49 8b 7d 70          	mov    0x70(%r13),%rdi
   20bbc:	48 85 ff             	test   %rdi,%rdi
   20bbf:	75 0a                	jne    20bcb <register_sandev+0x76>
   20bc1:	4d 8b 6d 18          	mov    0x18(%r13),%r13
   20bc5:	49 83 ed 18          	sub    $0x18,%r13
   20bc9:	eb e4                	jmp    20baf <register_sandev+0x5a>
   20bcb:	48 8b 47 08          	mov    0x8(%rdi),%rax
   20bcf:	ff 50 10             	call   *0x10(%rax)
   20bd2:	41 89 c4             	mov    %eax,%r12d
   20bd5:	85 c0                	test   %eax,%eax
   20bd7:	74 e8                	je     20bc1 <register_sandev+0x6c>
   20bd9:	eb 73                	jmp    20c4e <register_sandev+0xf9>
   20bdb:	48 8b 85 d8 00 00 00 	mov    0xd8(%rbp),%rax
   20be2:	4c 8d ad d8 00 00 00 	lea    0xd8(%rbp),%r13
   20be9:	4c 8d 60 e8          	lea    -0x18(%rax),%r12
   20bed:	49 8d 44 24 18       	lea    0x18(%r12),%rax
   20bf2:	4c 39 e8             	cmp    %r13,%rax
   20bf5:	74 6f                	je     20c66 <register_sandev+0x111>
   20bf7:	49 8b 7c 24 70       	mov    0x70(%r12),%rdi
   20bfc:	48 85 ff             	test   %rdi,%rdi
   20bff:	74 0b                	je     20c0c <register_sandev+0xb7>
   20c01:	48 8b 47 08          	mov    0x8(%rdi),%rax
   20c05:	ff 50 10             	call   *0x10(%rax)
   20c08:	85 c0                	test   %eax,%eax
   20c0a:	75 93                	jne    20b9f <register_sandev+0x4a>
   20c0c:	4d 8b 64 24 18       	mov    0x18(%r12),%r12
   20c11:	49 83 ec 18          	sub    $0x18,%r12
   20c15:	eb d6                	jmp    20bed <register_sandev+0x98>
   20c17:	3d 00 08 00 00       	cmp    $0x800,%eax
   20c1c:	0f 85 96 00 00 00    	jne    20cb8 <register_sandev+0x163>
   20c22:	89 d9                	mov    %ebx,%ecx
   20c24:	41 bc 10 00 00 00    	mov    $0x10,%r12d
   20c2a:	41 be 01 00 00 00    	mov    $0x1,%r14d
   20c30:	bf 00 08 00 00       	mov    $0x800,%edi
   20c35:	41 d3 e4             	shl    %cl,%r12d
   20c38:	41 d3 e6             	shl    %cl,%r14d
   20c3b:	e8 01 ba fe ff       	call   c641 <malloc>
   20c40:	49 89 c5             	mov    %rax,%r13
   20c43:	48 85 c0             	test   %rax,%rax
   20c46:	75 4b                	jne    20c93 <register_sandev+0x13e>
   20c48:	41 bc 77 df dc ce    	mov    $0xcedcdf77,%r12d
   20c4e:	48 89 ef             	mov    %rbp,%rdi
   20c51:	44 89 e6             	mov    %r12d,%esi
   20c54:	e8 48 fa ff ff       	call   206a1 <sandev_restart>
   20c59:	48 89 ef             	mov    %rbp,%rdi
   20c5c:	e8 b7 f8 ff ff       	call   20518 <sandev_undescribe>
   20c61:	e9 91 00 00 00       	jmp    20cf7 <register_sandev+0x1a2>
   20c66:	31 d2                	xor    %edx,%edx
   20c68:	48 8d 35 5c f9 ff ff 	lea    -0x6a4(%rip),%rsi        # 205cb <sandev_command_read_capacity>
   20c6f:	48 89 ef             	mov    %rbp,%rdi
   20c72:	e8 05 fc ff ff       	call   2087c <sandev_command>
   20c77:	41 89 c4             	mov    %eax,%r12d
   20c7a:	85 c0                	test   %eax,%eax
   20c7c:	75 d0                	jne    20c4e <register_sandev+0xf9>
   20c7e:	8b 85 a8 00 00 00    	mov    0xa8(%rbp),%eax
   20c84:	31 db                	xor    %ebx,%ebx
   20c86:	3d ff 07 00 00       	cmp    $0x7ff,%eax
   20c8b:	77 8a                	ja     20c17 <register_sandev+0xc2>
   20c8d:	01 c0                	add    %eax,%eax
   20c8f:	ff c3                	inc    %ebx
   20c91:	eb f3                	jmp    20c86 <register_sandev+0x131>
   20c93:	44 89 e6             	mov    %r12d,%esi
   20c96:	48 89 c1             	mov    %rax,%rcx
   20c99:	44 89 f2             	mov    %r14d,%edx
   20c9c:	48 89 ef             	mov    %rbp,%rdi
   20c9f:	e8 22 fd ff ff       	call   209c6 <sandev_read>
   20ca4:	41 89 c4             	mov    %eax,%r12d
   20ca7:	85 c0                	test   %eax,%eax
   20ca9:	74 22                	je     20ccd <register_sandev+0x178>
   20cab:	4c 89 ef             	mov    %r13,%rdi
   20cae:	e8 9c b9 fe ff       	call   c64f <free>
   20cb3:	45 85 e4             	test   %r12d,%r12d
   20cb6:	75 96                	jne    20c4e <register_sandev+0xf9>
   20cb8:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   20cbc:	48 8d 35 1d 73 00 00 	lea    0x731d(%rip),%rsi        # 27fe0 <san_devices>
   20cc3:	45 31 e4             	xor    %r12d,%r12d
   20cc6:	e8 0c b4 fe ff       	call   c0d7 <extern_list_add_tail>
   20ccb:	eb 2a                	jmp    20cf7 <register_sandev+0x1a2>
   20ccd:	ba 06 00 00 00       	mov    $0x6,%edx
   20cd2:	48 8d 35 bc 19 00 00 	lea    0x19bc(%rip),%rsi        # 22695 <primary_check.0>
   20cd9:	4c 89 ef             	mov    %r13,%rdi
   20cdc:	e8 73 2b ff ff       	call   13854 <memcmp>
   20ce1:	85 c0                	test   %eax,%eax
   20ce3:	75 c6                	jne    20cab <register_sandev+0x156>
   20ce5:	89 9d b8 00 00 00    	mov    %ebx,0xb8(%rbp)
   20ceb:	c7 85 bc 00 00 00 01 	movl   $0x1,0xbc(%rbp)
   20cf2:	00 00 00 
   20cf5:	eb b4                	jmp    20cab <register_sandev+0x156>
   20cf7:	5b                   	pop    %rbx
   20cf8:	44 89 e0             	mov    %r12d,%eax
   20cfb:	5d                   	pop    %rbp
   20cfc:	41 5c                	pop    %r12
   20cfe:	41 5d                	pop    %r13
   20d00:	41 5e                	pop    %r14
   20d02:	c3                   	ret    

0000000000020d03 <unregister_sandev>:
   20d03:	f3 0f 1e fa          	endbr64 
   20d07:	48 83 ec 18          	sub    $0x18,%rsp
   20d0b:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   20d0f:	48 8b 47 18          	mov    0x18(%rdi),%rax
   20d13:	31 f6                	xor    %esi,%esi
   20d15:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   20d1a:	48 89 42 08          	mov    %rax,0x8(%rdx)
   20d1e:	48 89 10             	mov    %rdx,(%rax)
   20d21:	e8 7b f9 ff ff       	call   206a1 <sandev_restart>
   20d26:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   20d2b:	48 83 c4 18          	add    $0x18,%rsp
   20d2f:	e9 e4 f7 ff ff       	jmp    20518 <sandev_undescribe>

0000000000020d34 <san_default_drive>:
   20d34:	f3 0f 1e fa          	endbr64 
   20d38:	48 83 ec 18          	sub    $0x18,%rsp
   20d3c:	48 8d 35 cd 87 00 00 	lea    0x87cd(%rip),%rsi        # 29510 <san_drive_setting>
   20d43:	31 ff                	xor    %edi,%edi
   20d45:	48 8b 05 24 92 00 00 	mov    0x9224(%rip),%rax        # 29f70 <__stack_chk_guard>
   20d4c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20d51:	31 c0                	xor    %eax,%eax
   20d53:	48 89 e2             	mov    %rsp,%rdx
   20d56:	e8 77 11 ff ff       	call   11ed2 <fetch_uint_setting>
   20d5b:	41 89 c0             	mov    %eax,%r8d
   20d5e:	8b 04 24             	mov    (%rsp),%eax
   20d61:	45 85 c0             	test   %r8d,%r8d
   20d64:	79 05                	jns    20d6b <san_default_drive+0x37>
   20d66:	b8 80 00 00 00       	mov    $0x80,%eax
   20d6b:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   20d70:	48 2b 15 f9 91 00 00 	sub    0x91f9(%rip),%rdx        # 29f70 <__stack_chk_guard>
   20d77:	74 05                	je     20d7e <san_default_drive+0x4a>
   20d79:	e8 e2 1c fe ff       	call   2a60 <__stack_chk_fail>
   20d7e:	48 83 c4 18          	add    $0x18,%rsp
   20d82:	c3                   	ret    

0000000000020d83 <find_smbios_structure>:
   20d83:	f3 0f 1e fa          	endbr64 
   20d87:	41 55                	push   %r13
   20d89:	4c 8d 2d b0 91 00 00 	lea    0x91b0(%rip),%r13        # 29f40 <smbios>
   20d90:	41 54                	push   %r12
   20d92:	49 89 d4             	mov    %rdx,%r12
   20d95:	55                   	push   %rbp
   20d96:	89 f5                	mov    %esi,%ebp
   20d98:	53                   	push   %rbx
   20d99:	89 fb                	mov    %edi,%ebx
   20d9b:	51                   	push   %rcx
   20d9c:	48 83 3d 9c 91 00 00 	cmpq   $0x0,0x919c(%rip)        # 29f40 <smbios>
   20da3:	00 
   20da4:	74 07                	je     20dad <find_smbios_structure+0x2a>
   20da6:	31 d2                	xor    %edx,%edx
   20da8:	45 31 c0             	xor    %r8d,%r8d
   20dab:	eb 49                	jmp    20df6 <find_smbios_structure+0x73>
   20dad:	4c 89 ef             	mov    %r13,%rdi
   20db0:	e8 d2 01 00 00       	call   20f87 <find_smbios>
   20db5:	85 c0                	test   %eax,%eax
   20db7:	74 ed                	je     20da6 <find_smbios_structure+0x23>
   20db9:	e9 92 00 00 00       	jmp    20e50 <find_smbios_structure+0xcd>
   20dbe:	4d 8b 55 00          	mov    0x0(%r13),%r10
   20dc2:	4c 8d 49 fe          	lea    -0x2(%rcx),%r9
   20dc6:	48 89 c1             	mov    %rax,%rcx
   20dc9:	49 39 c9             	cmp    %rcx,%r9
   20dcc:	72 67                	jb     20e35 <find_smbios_structure+0xb2>
   20dce:	66 41 83 3c 0a 00    	cmpw   $0x0,(%r10,%rcx,1)
   20dd4:	48 8d 79 01          	lea    0x1(%rcx),%rdi
   20dd8:	75 56                	jne    20e30 <find_smbios_structure+0xad>
   20dda:	48 85 ff             	test   %rdi,%rdi
   20ddd:	74 56                	je     20e35 <find_smbios_structure+0xb2>
   20ddf:	48 29 c7             	sub    %rax,%rdi
   20de2:	40 0f b6 f6          	movzbl %sil,%esi
   20de6:	49 89 7c 24 10       	mov    %rdi,0x10(%r12)
   20deb:	39 de                	cmp    %ebx,%esi
   20ded:	74 48                	je     20e37 <find_smbios_structure+0xb4>
   20def:	48 8d 51 02          	lea    0x2(%rcx),%rdx
   20df3:	41 ff c0             	inc    %r8d
   20df6:	48 8d 42 04          	lea    0x4(%rdx),%rax
   20dfa:	48 3b 05 47 91 00 00 	cmp    0x9147(%rip),%rax        # 29f48 <smbios+0x8>
   20e01:	73 48                	jae    20e4b <find_smbios_structure+0xc8>
   20e03:	44 3b 05 46 91 00 00 	cmp    0x9146(%rip),%r8d        # 29f50 <smbios+0x10>
   20e0a:	73 3f                	jae    20e4b <find_smbios_structure+0xc8>
   20e0c:	49 8b 45 00          	mov    0x0(%r13),%rax
   20e10:	8b 34 10             	mov    (%rax,%rdx,1),%esi
   20e13:	89 f0                	mov    %esi,%eax
   20e15:	41 89 34 24          	mov    %esi,(%r12)
   20e19:	48 8b 0d 28 91 00 00 	mov    0x9128(%rip),%rcx        # 29f48 <smbios+0x8>
   20e20:	0f b6 c4             	movzbl %ah,%eax
   20e23:	0f b6 c0             	movzbl %al,%eax
   20e26:	48 01 d0             	add    %rdx,%rax
   20e29:	48 39 c1             	cmp    %rax,%rcx
   20e2c:	73 90                	jae    20dbe <find_smbios_structure+0x3b>
   20e2e:	eb 1b                	jmp    20e4b <find_smbios_structure+0xc8>
   20e30:	48 89 f9             	mov    %rdi,%rcx
   20e33:	eb 94                	jmp    20dc9 <find_smbios_structure+0x46>
   20e35:	eb 14                	jmp    20e4b <find_smbios_structure+0xc8>
   20e37:	8d 45 ff             	lea    -0x1(%rbp),%eax
   20e3a:	85 ed                	test   %ebp,%ebp
   20e3c:	75 09                	jne    20e47 <find_smbios_structure+0xc4>
   20e3e:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
   20e43:	31 c0                	xor    %eax,%eax
   20e45:	eb 09                	jmp    20e50 <find_smbios_structure+0xcd>
   20e47:	89 c5                	mov    %eax,%ebp
   20e49:	eb a4                	jmp    20def <find_smbios_structure+0x6c>
   20e4b:	b8 72 1f ed d2       	mov    $0xd2ed1f72,%eax
   20e50:	5a                   	pop    %rdx
   20e51:	5b                   	pop    %rbx
   20e52:	5d                   	pop    %rbp
   20e53:	41 5c                	pop    %r12
   20e55:	41 5d                	pop    %r13
   20e57:	c3                   	ret    

0000000000020e58 <read_smbios_structure>:
   20e58:	f3 0f 1e fa          	endbr64 
   20e5c:	50                   	push   %rax
   20e5d:	48 89 f8             	mov    %rdi,%rax
   20e60:	49 89 d0             	mov    %rdx,%r8
   20e63:	48 89 f7             	mov    %rsi,%rdi
   20e66:	0f b6 50 01          	movzbl 0x1(%rax),%edx
   20e6a:	48 8b 35 cf 90 00 00 	mov    0x90cf(%rip),%rsi        # 29f40 <smbios>
   20e71:	4c 39 c2             	cmp    %r8,%rdx
   20e74:	49 0f 47 d0          	cmova  %r8,%rdx
   20e78:	48 03 70 08          	add    0x8(%rax),%rsi
   20e7c:	e8 8c 64 ff ff       	call   1730d <__memcpy>
   20e81:	31 c0                	xor    %eax,%eax
   20e83:	5a                   	pop    %rdx
   20e84:	c3                   	ret    

0000000000020e85 <read_smbios_string>:
   20e85:	f3 0f 1e fa          	endbr64 
   20e89:	41 57                	push   %r15
   20e8b:	41 56                	push   %r14
   20e8d:	41 55                	push   %r13
   20e8f:	41 54                	push   %r12
   20e91:	55                   	push   %rbp
   20e92:	53                   	push   %rbx
   20e93:	48 83 ec 18          	sub    $0x18,%rsp
   20e97:	48 8b 47 10          	mov    0x10(%rdi),%rax
   20e9b:	0f b6 6f 01          	movzbl 0x1(%rdi),%ebp
   20e9f:	48 03 6f 08          	add    0x8(%rdi),%rbp
   20ea3:	48 01 e8             	add    %rbp,%rax
   20ea6:	48 89 04 24          	mov    %rax,(%rsp)
   20eaa:	85 f6                	test   %esi,%esi
   20eac:	74 12                	je     20ec0 <read_smbios_string+0x3b>
   20eae:	4c 8b 35 8b 90 00 00 	mov    0x908b(%rip),%r14        # 29f40 <smbios>
   20eb5:	41 89 f4             	mov    %esi,%r12d
   20eb8:	49 89 d7             	mov    %rdx,%r15
   20ebb:	49 89 cd             	mov    %rcx,%r13
   20ebe:	eb 07                	jmp    20ec7 <read_smbios_string+0x42>
   20ec0:	eb 3f                	jmp    20f01 <read_smbios_string+0x7c>
   20ec2:	48 8d 6c 05 01       	lea    0x1(%rbp,%rax,1),%rbp
   20ec7:	48 3b 2c 24          	cmp    (%rsp),%rbp
   20ecb:	73 34                	jae    20f01 <read_smbios_string+0x7c>
   20ecd:	49 8d 34 2e          	lea    (%r14,%rbp,1),%rsi
   20ed1:	48 89 f7             	mov    %rsi,%rdi
   20ed4:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   20ed9:	e8 5c 2a ff ff       	call   1393a <strlen>
   20ede:	41 ff cc             	dec    %r12d
   20ee1:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   20ee6:	48 89 c3             	mov    %rax,%rbx
   20ee9:	75 d7                	jne    20ec2 <read_smbios_string+0x3d>
   20eeb:	49 39 c5             	cmp    %rax,%r13
   20eee:	4c 89 ea             	mov    %r13,%rdx
   20ef1:	4c 89 ff             	mov    %r15,%rdi
   20ef4:	48 0f 47 d0          	cmova  %rax,%rdx
   20ef8:	e8 10 64 ff ff       	call   1730d <__memcpy>
   20efd:	89 d8                	mov    %ebx,%eax
   20eff:	eb 05                	jmp    20f06 <read_smbios_string+0x81>
   20f01:	b8 72 1f ed d2       	mov    $0xd2ed1f72,%eax
   20f06:	48 83 c4 18          	add    $0x18,%rsp
   20f0a:	5b                   	pop    %rbx
   20f0b:	5d                   	pop    %rbp
   20f0c:	41 5c                	pop    %r12
   20f0e:	41 5d                	pop    %r13
   20f10:	41 5e                	pop    %r14
   20f12:	41 5f                	pop    %r15
   20f14:	c3                   	ret    

0000000000020f15 <smbios_version>:
   20f15:	f3 0f 1e fa          	endbr64 
   20f19:	48 83 3d 1f 90 00 00 	cmpq   $0x0,0x901f(%rip)        # 29f40 <smbios>
   20f20:	00 
   20f21:	75 1a                	jne    20f3d <smbios_version+0x28>
   20f23:	51                   	push   %rcx
   20f24:	48 8d 3d 15 90 00 00 	lea    0x9015(%rip),%rdi        # 29f40 <smbios>
   20f2b:	e8 57 00 00 00       	call   20f87 <find_smbios>
   20f30:	85 c0                	test   %eax,%eax
   20f32:	75 07                	jne    20f3b <smbios_version+0x26>
   20f34:	0f b7 05 19 90 00 00 	movzwl 0x9019(%rip),%eax        # 29f54 <smbios+0x14>
   20f3b:	5a                   	pop    %rdx
   20f3c:	c3                   	ret    
   20f3d:	0f b7 05 10 90 00 00 	movzwl 0x9010(%rip),%eax        # 29f54 <smbios+0x14>
   20f44:	c3                   	ret    

0000000000020f45 <sync_progress>:
   20f45:	f3 0f 1e fa          	endbr64 
   20f49:	83 3d 80 90 00 00 00 	cmpl   $0x0,0x9080(%rip)        # 29fd0 <pending_total>
   20f50:	75 0c                	jne    20f5e <sync_progress+0x19>
   20f52:	50                   	push   %rax
   20f53:	31 f6                	xor    %esi,%esi
   20f55:	e8 05 89 fe ff       	call   985f <intf_close>
   20f5a:	31 c0                	xor    %eax,%eax
   20f5c:	5a                   	pop    %rdx
   20f5d:	c3                   	ret    
   20f5e:	31 c0                	xor    %eax,%eax
   20f60:	c3                   	ret    

0000000000020f61 <sync>:
   20f61:	f3 0f 1e fa          	endbr64 
   20f65:	55                   	push   %rbp
   20f66:	48 8d 35 93 70 00 00 	lea    0x7093(%rip),%rsi        # 28000 <sync_intf>
   20f6d:	48 89 fd             	mov    %rdi,%rbp
   20f70:	48 8d 3d a9 58 00 00 	lea    0x58a9(%rip),%rdi        # 26820 <monojob>
   20f77:	e8 f5 87 fe ff       	call   9771 <intf_plug_plug>
   20f7c:	48 89 ee             	mov    %rbp,%rsi
   20f7f:	31 ff                	xor    %edi,%edi
   20f81:	5d                   	pop    %rbp
   20f82:	e9 a4 c2 fe ff       	jmp    d22b <monojob_wait>

0000000000020f87 <find_smbios>:
   20f87:	f3 0f 1e fa          	endbr64 
   20f8b:	48 8b 05 ce 8f 00 00 	mov    0x8fce(%rip),%rax        # 29f60 <smbios_entry>
   20f92:	48 85 c0             	test   %rax,%rax
   20f95:	75 02                	jne    20f99 <find_smbios+0x12>
   20f97:	eb 08                	jmp    20fa1 <find_smbios+0x1a>
   20f99:	81 38 5f 53 4d 5f    	cmpl   $0x5f4d535f,(%rax)
   20f9f:	74 06                	je     20fa7 <find_smbios+0x20>
   20fa1:	b8 79 1f eb d3       	mov    $0xd3eb1f79,%eax
   20fa6:	c3                   	ret    
   20fa7:	0f b7 50 16          	movzwl 0x16(%rax),%edx
   20fab:	8b 48 18             	mov    0x18(%rax),%ecx
   20fae:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   20fb2:	0f b7 50 1c          	movzwl 0x1c(%rax),%edx
   20fb6:	48 89 0f             	mov    %rcx,(%rdi)
   20fb9:	89 57 10             	mov    %edx,0x10(%rdi)
   20fbc:	66 8b 40 06          	mov    0x6(%rax),%ax
   20fc0:	86 e0                	xchg   %ah,%al
   20fc2:	66 89 47 14          	mov    %ax,0x14(%rdi)
   20fc6:	31 c0                	xor    %eax,%eax
   20fc8:	c3                   	ret    

0000000000020fc9 <eth_slow_rx>:
   20fc9:	f3 0f 1e fa          	endbr64 
   20fcd:	41 54                	push   %r12
   20fcf:	49 89 fc             	mov    %rdi,%r12
   20fd2:	55                   	push   %rbp
   20fd3:	53                   	push   %rbx
   20fd4:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   20fd8:	48 8b 47 20          	mov    0x20(%rdi),%rax
   20fdc:	48 29 d8             	sub    %rbx,%rax
   20fdf:	48 83 f8 6d          	cmp    $0x6d,%rax
   20fe3:	77 0a                	ja     20fef <eth_slow_rx+0x26>
   20fe5:	e8 ac 8c fe ff       	call   9c96 <free_iob>
   20fea:	e9 fd 00 00 00       	jmp    210ec <eth_slow_rx+0x123>
   20fef:	8a 03                	mov    (%rbx),%al
   20ff1:	48 89 f5             	mov    %rsi,%rbp
   20ff4:	3c 01                	cmp    $0x1,%al
   20ff6:	74 0d                	je     21005 <eth_slow_rx+0x3c>
   20ff8:	3c 02                	cmp    $0x2,%al
   20ffa:	0f 84 b5 00 00 00    	je     210b5 <eth_slow_rx+0xec>
   21000:	e9 e2 00 00 00       	jmp    210e7 <eth_slow_rx+0x11e>
   21005:	8a 43 12             	mov    0x12(%rbx),%al
   21008:	89 c2                	mov    %eax,%edx
   2100a:	f7 d2                	not    %edx
   2100c:	80 e2 38             	and    $0x38,%dl
   2100f:	74 1c                	je     2102d <eth_slow_rx+0x64>
   21011:	83 e0 02             	and    $0x2,%eax
   21014:	48 89 ef             	mov    %rbp,%rdi
   21017:	3c 01                	cmp    $0x1,%al
   21019:	19 c0                	sbb    %eax,%eax
   2101b:	25 00 74 00 00       	and    $0x7400,%eax
   21020:	8d b0 00 08 00 00    	lea    0x800(%rax),%esi
   21026:	e8 46 ca fe ff       	call   da71 <netdev_link_block>
   2102b:	eb 08                	jmp    21035 <eth_slow_rx+0x6c>
   2102d:	48 89 f7             	mov    %rsi,%rdi
   21030:	e8 4c ca fe ff       	call   da81 <netdev_link_unblock>
   21035:	31 d2                	xor    %edx,%edx
   21037:	48 8d 7b 3c          	lea    0x3c(%rbx),%rdi
   2103b:	b9 32 00 00 00       	mov    $0x32,%ecx
   21040:	89 d0                	mov    %edx,%eax
   21042:	f3 aa                	rep stos %al,%es:(%rdi)
   21044:	66 c7 43 3a 00 00    	movw   $0x0,0x3a(%rbx)
   2104a:	48 8d 7b 2a          	lea    0x2a(%rbx),%rdi
   2104e:	ab                   	stos   %eax,%es:(%rdi)
   2104f:	ab                   	stos   %eax,%es:(%rdi)
   21050:	ab                   	stos   %eax,%es:(%rdi)
   21051:	ab                   	stos   %eax,%es:(%rdi)
   21052:	48 8d 43 02          	lea    0x2(%rbx),%rax
   21056:	66 c7 43 2a 03 10    	movw   $0x1003,0x2a(%rbx)
   2105c:	48 8d 7b 16          	lea    0x16(%rbx),%rdi
   21060:	48 89 c6             	mov    %rax,%rsi
   21063:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21064:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21065:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21066:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21067:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   21068:	48 89 c7             	mov    %rax,%rdi
   2106b:	66 c7 43 16 02 14    	movw   $0x1402,0x16(%rbx)
   21071:	89 d0                	mov    %edx,%eax
   21073:	66 c7 43 27 00 00    	movw   $0x0,0x27(%rbx)
   21079:	c6 43 29 00          	movb   $0x0,0x29(%rbx)
   2107d:	ab                   	stos   %eax,%es:(%rdi)
   2107e:	ab                   	stos   %eax,%es:(%rdi)
   2107f:	ab                   	stos   %eax,%es:(%rdi)
   21080:	ab                   	stos   %eax,%es:(%rdi)
   21081:	ab                   	stos   %eax,%es:(%rdi)
   21082:	c7 43 02 01 14 ff ff 	movl   $0xffff1401,0x2(%rbx)
   21089:	8b 45 60             	mov    0x60(%rbp),%eax
   2108c:	89 43 06             	mov    %eax,0x6(%rbx)
   2108f:	8b 45 64             	mov    0x64(%rbp),%eax
   21092:	c7 43 0c 00 01 00 ff 	movl   $0xff000100,0xc(%rbx)
   21099:	66 89 43 0a          	mov    %ax,0xa(%rbx)
   2109d:	8a 43 26             	mov    0x26(%rbx),%al
   210a0:	66 c7 43 10 00 01    	movw   $0x100,0x10(%rbx)
   210a6:	83 e0 02             	and    $0x2,%eax
   210a9:	c6 43 01 01          	movb   $0x1,0x1(%rbx)
   210ad:	83 c8 3c             	or     $0x3c,%eax
   210b0:	88 43 12             	mov    %al,0x12(%rbx)
   210b3:	eb 0a                	jmp    210bf <eth_slow_rx+0xf6>
   210b5:	80 7b 02 01          	cmpb   $0x1,0x2(%rbx)
   210b9:	75 25                	jne    210e0 <eth_slow_rx+0x117>
   210bb:	c6 43 02 02          	movb   $0x2,0x2(%rbx)
   210bf:	5b                   	pop    %rbx
   210c0:	4c 8d 45 60          	lea    0x60(%rbp),%r8
   210c4:	48 89 ee             	mov    %rbp,%rsi
   210c7:	4c 89 e7             	mov    %r12,%rdi
   210ca:	5d                   	pop    %rbp
   210cb:	48 8d 0d c9 15 00 00 	lea    0x15c9(%rip),%rcx        # 2269b <eth_slow_address>
   210d2:	48 8d 15 2f 7c 00 00 	lea    0x7c2f(%rip),%rdx        # 28d08 <eth_slow_protocol>
   210d9:	41 5c                	pop    %r12
   210db:	e9 20 d1 fe ff       	jmp    e200 <net_tx>
   210e0:	e8 b1 8b fe ff       	call   9c96 <free_iob>
   210e5:	eb 05                	jmp    210ec <eth_slow_rx+0x123>
   210e7:	e8 aa 8b fe ff       	call   9c96 <free_iob>
   210ec:	5b                   	pop    %rbx
   210ed:	b8 7e 9f d5 e3       	mov    $0xe3d59f7e,%eax
   210f2:	5d                   	pop    %rbp
   210f3:	41 5c                	pop    %r12
   210f5:	c3                   	ret    

00000000000210f6 <http_parse_www_authenticate>:
   210f6:	f3 0f 1e fa          	endbr64 
   210fa:	41 55                	push   %r13
   210fc:	4c 8d 2d 2d 79 00 00 	lea    0x792d(%rip),%r13        # 28a30 <http_request_accept_encoding>
   21103:	41 54                	push   %r12
   21105:	55                   	push   %rbp
   21106:	48 89 fd             	mov    %rdi,%rbp
   21109:	53                   	push   %rbx
   2110a:	48 8d 1d df 78 00 00 	lea    0x78df(%rip),%rbx        # 289f0 <http_basic_auth>
   21111:	48 83 ec 18          	sub    $0x18,%rsp
   21115:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   2111a:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   2111f:	31 f6                	xor    %esi,%esi
   21121:	e8 f6 6c fe ff       	call   7e1c <http_token>
   21126:	49 89 c4             	mov    %rax,%r12
   21129:	48 85 c0             	test   %rax,%rax
   2112c:	75 1a                	jne    21148 <http_parse_www_authenticate+0x52>
   2112e:	b8 68 9f bd bc       	mov    $0xbcbd9f68,%eax
   21133:	eb 3a                	jmp    2116f <http_parse_www_authenticate+0x79>
   21135:	48 8b 33             	mov    (%rbx),%rsi
   21138:	4c 89 e7             	mov    %r12,%rdi
   2113b:	e8 ad 27 ff ff       	call   138ed <strcasecmp>
   21140:	85 c0                	test   %eax,%eax
   21142:	74 0b                	je     2114f <http_parse_www_authenticate+0x59>
   21144:	48 83 c3 20          	add    $0x20,%rbx
   21148:	4c 39 eb             	cmp    %r13,%rbx
   2114b:	72 e8                	jb     21135 <http_parse_www_authenticate+0x3f>
   2114d:	eb 1e                	jmp    2116d <http_parse_www_authenticate+0x77>
   2114f:	48 83 bd e8 01 00 00 	cmpq   $0x0,0x1e8(%rbp)
   21156:	00 
   21157:	75 16                	jne    2116f <http_parse_www_authenticate+0x79>
   21159:	48 89 9d e8 01 00 00 	mov    %rbx,0x1e8(%rbp)
   21160:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   21165:	48 89 ef             	mov    %rbp,%rdi
   21168:	ff 53 08             	call   *0x8(%rbx)
   2116b:	eb 02                	jmp    2116f <http_parse_www_authenticate+0x79>
   2116d:	31 c0                	xor    %eax,%eax
   2116f:	48 83 c4 18          	add    $0x18,%rsp
   21173:	5b                   	pop    %rbx
   21174:	5d                   	pop    %rbp
   21175:	41 5c                	pop    %r12
   21177:	41 5d                	pop    %r13
   21179:	c3                   	ret    

000000000002117a <http_format_authorization>:
   2117a:	f3 0f 1e fa          	endbr64 
   2117e:	41 56                	push   %r14
   21180:	31 c0                	xor    %eax,%eax
   21182:	41 55                	push   %r13
   21184:	41 54                	push   %r12
   21186:	55                   	push   %rbp
   21187:	53                   	push   %rbx
   21188:	4c 8b b7 48 01 00 00 	mov    0x148(%rdi),%r14
   2118f:	4d 85 f6             	test   %r14,%r14
   21192:	74 44                	je     211d8 <http_format_authorization+0x5e>
   21194:	49 8b 0e             	mov    (%r14),%rcx
   21197:	48 89 f3             	mov    %rsi,%rbx
   2119a:	48 89 d5             	mov    %rdx,%rbp
   2119d:	49 89 fd             	mov    %rdi,%r13
   211a0:	48 8d 15 6c 27 00 00 	lea    0x276c(%rip),%rdx        # 23913 <.LC0>
   211a7:	48 89 ee             	mov    %rbp,%rsi
   211aa:	48 89 df             	mov    %rbx,%rdi
   211ad:	e8 cf 5e ff ff       	call   17081 <snprintf>
   211b2:	49 8b 4e 18          	mov    0x18(%r14),%rcx
   211b6:	31 d2                	xor    %edx,%edx
   211b8:	41 89 c4             	mov    %eax,%r12d
   211bb:	48 98                	cltq   
   211bd:	48 39 c5             	cmp    %rax,%rbp
   211c0:	76 06                	jbe    211c8 <http_format_authorization+0x4e>
   211c2:	48 89 ea             	mov    %rbp,%rdx
   211c5:	48 29 c2             	sub    %rax,%rdx
   211c8:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
   211cc:	4c 89 ef             	mov    %r13,%rdi
   211cf:	ff d1                	call   *%rcx
   211d1:	85 c0                	test   %eax,%eax
   211d3:	78 03                	js     211d8 <http_format_authorization+0x5e>
   211d5:	44 01 e0             	add    %r12d,%eax
   211d8:	5b                   	pop    %rbx
   211d9:	5d                   	pop    %rbp
   211da:	41 5c                	pop    %r12
   211dc:	41 5d                	pop    %r13
   211de:	41 5e                	pop    %r14
   211e0:	c3                   	ret    

00000000000211e1 <icmp_tx_echo>:
   211e1:	41 55                	push   %r13
   211e3:	49 89 f5             	mov    %rsi,%r13
   211e6:	41 54                	push   %r12
   211e8:	49 89 d4             	mov    %rdx,%r12
   211eb:	55                   	push   %rbp
   211ec:	48 89 fd             	mov    %rdi,%rbp
   211ef:	53                   	push   %rbx
   211f0:	51                   	push   %rcx
   211f1:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   211f5:	48 8b 77 20          	mov    0x20(%rdi),%rsi
   211f9:	66 c7 43 02 00 00    	movw   $0x0,0x2(%rbx)
   211ff:	48 89 df             	mov    %rbx,%rdi
   21202:	48 29 de             	sub    %rbx,%rsi
   21205:	e8 df 3c ff ff       	call   14ee9 <tcpip_chksum>
   2120a:	41 83 7c 24 10 00    	cmpl   $0x0,0x10(%r12)
   21210:	4c 8d 4b 02          	lea    0x2(%rbx),%r9
   21214:	66 89 43 02          	mov    %ax,0x2(%rbx)
   21218:	75 03                	jne    2121d <icmp_tx_echo+0x3c>
   2121a:	45 31 c9             	xor    %r9d,%r9d
   2121d:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   21222:	4c 89 e9             	mov    %r13,%rcx
   21225:	58                   	pop    %rax
   21226:	48 89 ef             	mov    %rbp,%rdi
   21229:	5b                   	pop    %rbx
   2122a:	45 31 c0             	xor    %r8d,%r8d
   2122d:	5d                   	pop    %rbp
   2122e:	31 d2                	xor    %edx,%edx
   21230:	41 5c                	pop    %r12
   21232:	41 5d                	pop    %r13
   21234:	e9 18 3c ff ff       	jmp    14e51 <tcpip_tx>

0000000000021239 <icmp_rx_echo_request>:
   21239:	f3 0f 1e fa          	endbr64 
   2123d:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
   21241:	48 8b 47 20          	mov    0x20(%rdi),%rax
   21245:	48 29 c8             	sub    %rcx,%rax
   21248:	48 83 f8 07          	cmp    $0x7,%rax
   2124c:	76 0a                	jbe    21258 <icmp_rx_echo_request+0x1f>
   2124e:	8a 42 03             	mov    0x3(%rdx),%al
   21251:	88 01                	mov    %al,(%rcx)
   21253:	e9 89 ff ff ff       	jmp    211e1 <icmp_tx_echo>
   21258:	50                   	push   %rax
   21259:	e8 38 8a fe ff       	call   9c96 <free_iob>
   2125e:	b8 7e 9f c6 e3       	mov    $0xe3c69f7e,%eax
   21263:	5a                   	pop    %rdx
   21264:	c3                   	ret    

0000000000021265 <ping_rx>:
   21265:	f3 0f 1e fa          	endbr64 
   21269:	50                   	push   %rax
   2126a:	e8 27 8a fe ff       	call   9c96 <free_iob>
   2126f:	31 c0                	xor    %eax,%eax
   21271:	5a                   	pop    %rdx
   21272:	c3                   	ret    

0000000000021273 <icmp_rx_echo_reply>:
   21273:	f3 0f 1e fa          	endbr64 
   21277:	48 8b 47 20          	mov    0x20(%rdi),%rax
   2127b:	48 2b 47 18          	sub    0x18(%rdi),%rax
   2127f:	48 83 f8 07          	cmp    $0x7,%rax
   21283:	76 05                	jbe    2128a <icmp_rx_echo_reply+0x17>
   21285:	e9 db ff ff ff       	jmp    21265 <ping_rx>
   2128a:	50                   	push   %rax
   2128b:	e8 06 8a fe ff       	call   9c96 <free_iob>
   21290:	b8 7e 9f c6 e3       	mov    $0xe3c69f7e,%eax
   21295:	5a                   	pop    %rdx
   21296:	c3                   	ret    

0000000000021297 <quiesce>:
   21297:	f3 0f 1e fa          	endbr64 
   2129b:	55                   	push   %rbp
   2129c:	48 8d 2d 2d 7b 00 00 	lea    0x7b2d(%rip),%rbp        # 28dd0 <__table_entries.0>
   212a3:	53                   	push   %rbx
   212a4:	48 8d 1d 25 7b 00 00 	lea    0x7b25(%rip),%rbx        # 28dd0 <__table_entries.0>
   212ab:	52                   	push   %rdx
   212ac:	48 39 eb             	cmp    %rbp,%rbx
   212af:	73 08                	jae    212b9 <quiesce+0x22>
   212b1:	ff 13                	call   *(%rbx)
   212b3:	48 83 c3 10          	add    $0x10,%rbx
   212b7:	eb f3                	jmp    212ac <quiesce+0x15>
   212b9:	58                   	pop    %rax
   212ba:	5b                   	pop    %rbx
   212bb:	5d                   	pop    %rbp
   212bc:	c3                   	ret    

00000000000212bd <unquiesce>:
   212bd:	f3 0f 1e fa          	endbr64 
   212c1:	55                   	push   %rbp
   212c2:	48 8d 2d 07 7b 00 00 	lea    0x7b07(%rip),%rbp        # 28dd0 <__table_entries.0>
   212c9:	53                   	push   %rbx
   212ca:	48 8d 1d ff 7a 00 00 	lea    0x7aff(%rip),%rbx        # 28dd0 <__table_entries.0>
   212d1:	52                   	push   %rdx
   212d2:	48 39 eb             	cmp    %rbp,%rbx
   212d5:	73 09                	jae    212e0 <unquiesce+0x23>
   212d7:	ff 53 08             	call   *0x8(%rbx)
   212da:	48 83 c3 10          	add    $0x10,%rbx
   212de:	eb f2                	jmp    212d2 <unquiesce+0x15>
   212e0:	58                   	pop    %rax
   212e1:	5b                   	pop    %rbx
   212e2:	5d                   	pop    %rbp
   212e3:	c3                   	ret    

00000000000212e4 <route_ipv4_print>:
   212e4:	f3 0f 1e fa          	endbr64 
   212e8:	41 54                	push   %r12
   212ea:	4c 8d 25 7f 51 00 00 	lea    0x517f(%rip),%r12        # 26470 <ipv4_miniroutes>
   212f1:	55                   	push   %rbp
   212f2:	48 89 fd             	mov    %rdi,%rbp
   212f5:	53                   	push   %rbx
   212f6:	48 8b 1d 73 51 00 00 	mov    0x5173(%rip),%rbx        # 26470 <ipv4_miniroutes>
   212fd:	4c 39 e3             	cmp    %r12,%rbx
   21300:	0f 84 8c 00 00 00    	je     21392 <route_ipv4_print+0xae>
   21306:	48 3b 6b 10          	cmp    0x10(%rbx),%rbp
   2130a:	75 7e                	jne    2138a <route_ipv4_print+0xa6>
   2130c:	8b 7b 18             	mov    0x18(%rbx),%edi
   2130f:	e8 ab 92 fe ff       	call   a5bf <inet_ntoa>
   21314:	48 8d 75 34          	lea    0x34(%rbp),%rsi
   21318:	48 8d 3d 1e 31 00 00 	lea    0x311e(%rip),%rdi        # 2443d <.LC0>
   2131f:	48 89 c2             	mov    %rax,%rdx
   21322:	31 c0                	xor    %eax,%eax
   21324:	e8 75 5e ff ff       	call   1719e <printf>
   21329:	8b 7b 1c             	mov    0x1c(%rbx),%edi
   2132c:	e8 8e 92 fe ff       	call   a5bf <inet_ntoa>
   21331:	48 8d 3d e9 22 00 00 	lea    0x22e9(%rip),%rdi        # 23621 <.LC0>
   21338:	48 89 c6             	mov    %rax,%rsi
   2133b:	31 c0                	xor    %eax,%eax
   2133d:	e8 5c 5e ff ff       	call   1719e <printf>
   21342:	83 7b 20 00          	cmpl   $0x0,0x20(%rbx)
   21346:	74 19                	je     21361 <route_ipv4_print+0x7d>
   21348:	8b 7b 20             	mov    0x20(%rbx),%edi
   2134b:	e8 6f 92 fe ff       	call   a5bf <inet_ntoa>
   21350:	48 8d 3d ee 30 00 00 	lea    0x30ee(%rip),%rdi        # 24445 <.LC2>
   21357:	48 89 c6             	mov    %rax,%rsi
   2135a:	31 c0                	xor    %eax,%eax
   2135c:	e8 3d 5e ff ff       	call   1719e <printf>
   21361:	48 8b 43 10          	mov    0x10(%rbx),%rax
   21365:	f6 80 80 00 00 00 01 	testb  $0x1,0x80(%rax)
   2136c:	75 0e                	jne    2137c <route_ipv4_print+0x98>
   2136e:	48 8d 3d d7 30 00 00 	lea    0x30d7(%rip),%rdi        # 2444c <.LC3>
   21375:	31 c0                	xor    %eax,%eax
   21377:	e8 22 5e ff ff       	call   1719e <printf>
   2137c:	48 8d 3d 4c 26 00 00 	lea    0x264c(%rip),%rdi        # 239cf <.LC0>
   21383:	31 c0                	xor    %eax,%eax
   21385:	e8 14 5e ff ff       	call   1719e <printf>
   2138a:	48 8b 1b             	mov    (%rbx),%rbx
   2138d:	e9 6b ff ff ff       	jmp    212fd <route_ipv4_print+0x19>
   21392:	5b                   	pop    %rbx
   21393:	5d                   	pop    %rbp
   21394:	41 5c                	pop    %r12
   21396:	c3                   	ret    

0000000000021397 <stp_ntoa>:
   21397:	f3 0f 1e fa          	endbr64 
   2139b:	48 8d 05 ba 30 00 00 	lea    0x30ba(%rip),%rax        # 2445c <.LC0>
   213a2:	c3                   	ret    

00000000000213a3 <stp_rx>:
   213a3:	f3 0f 1e fa          	endbr64 
   213a7:	41 54                	push   %r12
   213a9:	55                   	push   %rbp
   213aa:	48 89 fd             	mov    %rdi,%rbp
   213ad:	51                   	push   %rcx
   213ae:	48 8b 47 18          	mov    0x18(%rdi),%rax
   213b2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   213b6:	48 29 c2             	sub    %rax,%rdx
   213b9:	48 83 fa 25          	cmp    $0x25,%rdx
   213bd:	77 08                	ja     213c7 <stp_rx+0x24>
   213bf:	41 bc 7e 9f c0 e3    	mov    $0xe3c09f7e,%r12d
   213c5:	eb 5d                	jmp    21424 <stp_rx+0x81>
   213c7:	66 83 78 03 00       	cmpw   $0x0,0x3(%rax)
   213cc:	74 08                	je     213d6 <stp_rx+0x33>
   213ce:	41 bc 7d 9d c0 c3    	mov    $0xc3c09d7d,%r12d
   213d4:	eb 4e                	jmp    21424 <stp_rx+0x81>
   213d6:	80 78 05 01          	cmpb   $0x1,0x5(%rax)
   213da:	77 08                	ja     213e4 <stp_rx+0x41>
   213dc:	41 bc 7d 9c c0 c3    	mov    $0xc3c09c7d,%r12d
   213e2:	eb 40                	jmp    21424 <stp_rx+0x81>
   213e4:	80 78 06 02          	cmpb   $0x2,0x6(%rax)
   213e8:	74 08                	je     213f2 <stp_rx+0x4f>
   213ea:	41 bc 7d 9b c0 c3    	mov    $0xc3c09b7d,%r12d
   213f0:	eb 32                	jmp    21424 <stp_rx+0x81>
   213f2:	48 89 f7             	mov    %rsi,%rdi
   213f5:	f6 40 07 20          	testb  $0x20,0x7(%rax)
   213f9:	75 21                	jne    2141c <stp_rx+0x79>
   213fb:	66 8b 40 22          	mov    0x22(%rax),%ax
   213ff:	86 c4                	xchg   %al,%ah
   21401:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   21408:	00 
   21409:	81 e6 f8 ff 07 00    	and    $0x7fff8,%esi
   2140f:	e8 5d c6 fe ff       	call   da71 <netdev_link_block>
   21414:	41 bc 70 9f c0 d7    	mov    $0xd7c09f70,%r12d
   2141a:	eb 08                	jmp    21424 <stp_rx+0x81>
   2141c:	e8 60 c6 fe ff       	call   da81 <netdev_link_unblock>
   21421:	45 31 e4             	xor    %r12d,%r12d
   21424:	48 89 ef             	mov    %rbp,%rdi
   21427:	e8 6a 88 fe ff       	call   9c96 <free_iob>
   2142c:	44 89 e0             	mov    %r12d,%eax
   2142f:	5a                   	pop    %rdx
   21430:	5d                   	pop    %rbp
   21431:	41 5c                	pop    %r12
   21433:	c3                   	ret    

0000000000021434 <aoecmd_ata_cmd_len>:
   21434:	f3 0f 1e fa          	endbr64 
   21438:	48 8b 47 68          	mov    0x68(%rdi),%rax
   2143c:	48 83 c0 16          	add    $0x16,%rax
   21440:	c3                   	ret    

0000000000021441 <aoecmd_cfg_cmd_len>:
   21441:	f3 0f 1e fa          	endbr64 
   21445:	b8 12 00 00 00       	mov    $0x12,%eax
   2144a:	c3                   	ret    

000000000002144b <aoecmd_cfg_cmd>:
   2144b:	f3 0f 1e fa          	endbr64 
   2144f:	c6 46 05 01          	movb   $0x1,0x5(%rsi)
   21453:	48 c7 46 0a 00 00 00 	movq   $0x0,0xa(%rsi)
   2145a:	00 
   2145b:	c3                   	ret    

000000000002145c <aoedev_window>:
   2145c:	f3 0f 1e fa          	endbr64 
   21460:	8b 47 78             	mov    0x78(%rdi),%eax
   21463:	f7 d8                	neg    %eax
   21465:	48 19 c0             	sbb    %rax,%rax
   21468:	c3                   	ret    

0000000000021469 <aoedev_identify_device>:
   21469:	f3 0f 1e fa          	endbr64 
   2146d:	48 8b 47 10          	mov    0x10(%rdi),%rax
   21471:	48 8b 40 40          	mov    0x40(%rax),%rax
   21475:	c3                   	ret    

0000000000021476 <aoedev_describe>:
   21476:	f3 0f 1e fa          	endbr64 
   2147a:	48 8d 87 80 00 00 00 	lea    0x80(%rdi),%rax
   21481:	c3                   	ret    

0000000000021482 <abft_complete>:
   21482:	f3 0f 1e fa          	endbr64 
   21486:	31 c0                	xor    %eax,%eax
   21488:	c3                   	ret    

0000000000021489 <abft_install>:
   21489:	f3 0f 1e fa          	endbr64 
   2148d:	41 54                	push   %r12
   2148f:	49 89 fc             	mov    %rdi,%r12
   21492:	55                   	push   %rbp
   21493:	48 8d 2d 26 6f 00 00 	lea    0x6f26(%rip),%rbp        # 283c0 <abft_model>
   2149a:	53                   	push   %rbx
   2149b:	48 83 ec 40          	sub    $0x40,%rsp
   2149f:	48 8b 05 ca 8a 00 00 	mov    0x8aca(%rip),%rax        # 29f70 <__stack_chk_guard>
   214a6:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   214ab:	48 8b 05 0e 6f 00 00 	mov    0x6f0e(%rip),%rax        # 283c0 <abft_model>
   214b2:	48 8d 98 70 ff ff ff 	lea    -0x90(%rax),%rbx
   214b9:	48 8d 83 90 00 00 00 	lea    0x90(%rbx),%rax
   214c0:	48 39 e8             	cmp    %rbp,%rax
   214c3:	74 61                	je     21526 <abft_install+0x9d>
   214c5:	4c 8d 44 24 0a       	lea    0xa(%rsp),%r8
   214ca:	b9 2e 00 00 00       	mov    $0x2e,%ecx
   214cf:	31 c0                	xor    %eax,%eax
   214d1:	4c 89 c7             	mov    %r8,%rdi
   214d4:	f3 aa                	rep stos %al,%es:(%rdi)
   214d6:	48 b8 61 42 46 54 2e 	movabs $0x2e54464261,%rax
   214dd:	00 00 00 
   214e0:	c6 44 24 12 01       	movb   $0x1,0x12(%rsp)
   214e5:	4c 89 c7             	mov    %r8,%rdi
   214e8:	48 89 44 24 0a       	mov    %rax,0xa(%rsp)
   214ed:	8b 43 38             	mov    0x38(%rbx),%eax
   214f0:	66 89 44 24 2e       	mov    %ax,0x2e(%rsp)
   214f5:	8a 43 3a             	mov    0x3a(%rbx),%al
   214f8:	88 44 24 30          	mov    %al,0x30(%rsp)
   214fc:	48 8b 43 10          	mov    0x10(%rbx),%rax
   21500:	8b 50 60             	mov    0x60(%rax),%edx
   21503:	8b 40 64             	mov    0x64(%rax),%eax
   21506:	89 54 24 32          	mov    %edx,0x32(%rsp)
   2150a:	66 89 44 24 36       	mov    %ax,0x36(%rsp)
   2150f:	41 ff d4             	call   *%r12
   21512:	85 c0                	test   %eax,%eax
   21514:	75 12                	jne    21528 <abft_install+0x9f>
   21516:	48 8b 9b 90 00 00 00 	mov    0x90(%rbx),%rbx
   2151d:	48 81 eb 90 00 00 00 	sub    $0x90,%rbx
   21524:	eb 93                	jmp    214b9 <abft_install+0x30>
   21526:	31 c0                	xor    %eax,%eax
   21528:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   2152d:	48 2b 15 3c 8a 00 00 	sub    0x8a3c(%rip),%rdx        # 29f70 <__stack_chk_guard>
   21534:	74 05                	je     2153b <abft_install+0xb2>
   21536:	e8 25 15 fe ff       	call   2a60 <__stack_chk_fail>
   2153b:	48 83 c4 40          	add    $0x40,%rsp
   2153f:	5b                   	pop    %rbx
   21540:	5d                   	pop    %rbp
   21541:	41 5c                	pop    %r12
   21543:	c3                   	ret    

0000000000021544 <aoecmd_close>:
   21544:	f3 0f 1e fa          	endbr64 
   21548:	41 54                	push   %r12
   2154a:	55                   	push   %rbp
   2154b:	89 f5                	mov    %esi,%ebp
   2154d:	53                   	push   %rbx
   2154e:	48 89 fb             	mov    %rdi,%rbx
   21551:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   21555:	48 81 c7 90 00 00 00 	add    $0x90,%rdi
   2155c:	e8 6f ed fe ff       	call   102d0 <stop_timer>
   21561:	48 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%rax
   21568:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   2156c:	49 89 44 24 50       	mov    %rax,0x50(%r12)
   21571:	48 8d 43 18          	lea    0x18(%rbx),%rax
   21575:	48 39 c2             	cmp    %rax,%rdx
   21578:	74 1b                	je     21595 <aoecmd_close+0x51>
   2157a:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
   2157e:	48 89 df             	mov    %rbx,%rdi
   21581:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   21585:	48 89 11             	mov    %rdx,(%rcx)
   21588:	48 89 43 18          	mov    %rax,0x18(%rbx)
   2158c:	48 89 43 20          	mov    %rax,0x20(%rbx)
   21590:	e8 a9 e8 fe ff       	call   fe3e <ref_decrement>
   21595:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   21599:	89 ee                	mov    %ebp,%esi
   2159b:	5b                   	pop    %rbx
   2159c:	5d                   	pop    %rbp
   2159d:	41 5c                	pop    %r12
   2159f:	e9 2b 83 fe ff       	jmp    98cf <intf_shutdown>

00000000000215a4 <aoedev_close>:
   215a4:	f3 0f 1e fa          	endbr64 
   215a8:	41 56                	push   %r14
   215aa:	4c 8d 35 df 6b 00 00 	lea    0x6bdf(%rip),%r14        # 28190 <aoe_commands>
   215b1:	41 55                	push   %r13
   215b3:	41 89 f5             	mov    %esi,%r13d
   215b6:	41 54                	push   %r12
   215b8:	49 89 fc             	mov    %rdi,%r12
   215bb:	48 83 c7 18          	add    $0x18,%rdi
   215bf:	55                   	push   %rbp
   215c0:	53                   	push   %rbx
   215c1:	e8 09 83 fe ff       	call   98cf <intf_shutdown>
   215c6:	49 8d 7c 24 58       	lea    0x58(%r12),%rdi
   215cb:	44 89 ee             	mov    %r13d,%esi
   215ce:	e8 fc 82 fe ff       	call   98cf <intf_shutdown>
   215d3:	48 8b 05 b6 6b 00 00 	mov    0x6bb6(%rip),%rax        # 28190 <aoe_commands>
   215da:	48 8b 18             	mov    (%rax),%rbx
   215dd:	48 8d 68 e8          	lea    -0x18(%rax),%rbp
   215e1:	48 83 eb 18          	sub    $0x18,%rbx
   215e5:	48 8d 45 18          	lea    0x18(%rbp),%rax
   215e9:	4c 39 f0             	cmp    %r14,%rax
   215ec:	74 2e                	je     2161c <aoedev_close+0x78>
   215ee:	4c 39 65 10          	cmp    %r12,0x10(%rbp)
   215f2:	75 1b                	jne    2160f <aoedev_close+0x6b>
   215f4:	48 89 ef             	mov    %rbp,%rdi
   215f7:	e8 36 e8 fe ff       	call   fe32 <ref_increment>
   215fc:	48 89 ef             	mov    %rbp,%rdi
   215ff:	44 89 ee             	mov    %r13d,%esi
   21602:	e8 3d ff ff ff       	call   21544 <aoecmd_close>
   21607:	48 89 ef             	mov    %rbp,%rdi
   2160a:	e8 2f e8 fe ff       	call   fe3e <ref_decrement>
   2160f:	48 8b 43 18          	mov    0x18(%rbx),%rax
   21613:	48 89 dd             	mov    %rbx,%rbp
   21616:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
   2161a:	eb c9                	jmp    215e5 <aoedev_close+0x41>
   2161c:	5b                   	pop    %rbx
   2161d:	5d                   	pop    %rbp
   2161e:	41 5c                	pop    %r12
   21620:	41 5d                	pop    %r13
   21622:	41 5e                	pop    %r14
   21624:	c3                   	ret    

0000000000021625 <aoecmd_ata_cmd>:
   21625:	f3 0f 1e fa          	endbr64 
   21629:	48 89 f9             	mov    %rdi,%rcx
   2162c:	c6 46 05 00          	movb   $0x0,0x5(%rsi)
   21630:	48 89 f2             	mov    %rsi,%rdx
   21633:	48 8d 7e 0a          	lea    0xa(%rsi),%rdi
   21637:	31 c0                	xor    %eax,%eax
   21639:	ab                   	stos   %eax,%es:(%rdi)
   2163a:	ab                   	stos   %eax,%es:(%rdi)
   2163b:	ab                   	stos   %eax,%es:(%rdi)
   2163c:	8a 41 54             	mov    0x54(%rcx),%al
   2163f:	4c 8b 41 68          	mov    0x68(%rcx),%r8
   21643:	44 8b 49 58          	mov    0x58(%rcx),%r9d
   21647:	89 c6                	mov    %eax,%esi
   21649:	83 e6 10             	and    $0x10,%esi
   2164c:	4d 85 c0             	test   %r8,%r8
   2164f:	40 0f 95 c7          	setne  %dil
   21653:	09 fe                	or     %edi,%esi
   21655:	45 85 c9             	test   %r9d,%r9d
   21658:	40 0f 95 c7          	setne  %dil
   2165c:	c1 e7 06             	shl    $0x6,%edi
   2165f:	09 fe                	or     %edi,%esi
   21661:	40 88 72 0a          	mov    %sil,0xa(%rdx)
   21665:	40 8a 71 52          	mov    0x52(%rcx),%sil
   21669:	40 88 72 0b          	mov    %sil,0xb(%rdx)
   2166d:	8b 71 50             	mov    0x50(%rcx),%esi
   21670:	40 88 72 0c          	mov    %sil,0xc(%rdx)
   21674:	40 8a 71 55          	mov    0x55(%rcx),%sil
   21678:	40 88 72 0d          	mov    %sil,0xd(%rdx)
   2167c:	48 8b 71 48          	mov    0x48(%rcx),%rsi
   21680:	48 89 72 0e          	mov    %rsi,0xe(%rdx)
   21684:	45 85 c9             	test   %r9d,%r9d
   21687:	75 0c                	jne    21695 <aoecmd_ata_cmd+0x70>
   21689:	83 e0 f0             	and    $0xfffffff0,%eax
   2168c:	48 c1 ee 18          	shr    $0x18,%rsi
   21690:	09 f0                	or     %esi,%eax
   21692:	88 42 11             	mov    %al,0x11(%rdx)
   21695:	48 8b 71 60          	mov    0x60(%rcx),%rsi
   21699:	48 8d 7a 16          	lea    0x16(%rdx),%rdi
   2169d:	4c 89 c2             	mov    %r8,%rdx
   216a0:	e9 68 5c ff ff       	jmp    1730d <__memcpy>

00000000000216a5 <aoecmd_ata_rsp>:
   216a5:	f3 0f 1e fa          	endbr64 
   216a9:	48 83 fa 15          	cmp    $0x15,%rdx
   216ad:	77 06                	ja     216b5 <aoecmd_ata_rsp+0x10>
   216af:	b8 7e 9f ff e3       	mov    $0xe3ff9f7e,%eax
   216b4:	c3                   	ret    
   216b5:	48 8d 42 ea          	lea    -0x16(%rdx),%rax
   216b9:	f6 46 0d 01          	testb  $0x1,0xd(%rsi)
   216bd:	74 06                	je     216c5 <aoecmd_ata_rsp+0x20>
   216bf:	b8 68 9f ff e2       	mov    $0xe2ff9f68,%eax
   216c4:	c3                   	ret    
   216c5:	48 8b 57 78          	mov    0x78(%rdi),%rdx
   216c9:	48 39 d0             	cmp    %rdx,%rax
   216cc:	73 06                	jae    216d4 <aoecmd_ata_rsp+0x2f>
   216ce:	b8 7b 9f ff b9       	mov    $0xb9ff9f7b,%eax
   216d3:	c3                   	ret    
   216d4:	50                   	push   %rax
   216d5:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
   216d9:	48 83 c6 16          	add    $0x16,%rsi
   216dd:	e8 2b 5c ff ff       	call   1730d <__memcpy>
   216e2:	31 c0                	xor    %eax,%eax
   216e4:	5a                   	pop    %rdx
   216e5:	c3                   	ret    

00000000000216e6 <aoecmd_cfg_rsp>:
   216e6:	f3 0f 1e fa          	endbr64 
   216ea:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   216ee:	48 8b 47 10          	mov    0x10(%rdi),%rax
   216f2:	48 8b 40 50          	mov    0x50(%rax),%rax
   216f6:	48 83 fa 11          	cmp    $0x11,%rdx
   216fa:	77 06                	ja     21702 <aoecmd_cfg_rsp+0x1c>
   216fc:	b8 7e 9f ff e3       	mov    $0xe3ff9f7e,%eax
   21701:	c3                   	ret    
   21702:	52                   	push   %rdx
   21703:	0f b6 50 43          	movzbl 0x43(%rax),%edx
   21707:	48 89 ce             	mov    %rcx,%rsi
   2170a:	48 83 c7 3b          	add    $0x3b,%rdi
   2170e:	e8 fa 5b ff ff       	call   1730d <__memcpy>
   21713:	31 c0                	xor    %eax,%eax
   21715:	59                   	pop    %rcx
   21716:	c3                   	ret    

0000000000021717 <aoedev_config_done>:
   21717:	f3 0f 1e fa          	endbr64 
   2171b:	55                   	push   %rbp
   2171c:	48 89 fd             	mov    %rdi,%rbp
   2171f:	48 83 c7 58          	add    $0x58,%rdi
   21723:	48 83 ec 10          	sub    $0x10,%rsp
   21727:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   2172b:	e8 9f 81 fe ff       	call   98cf <intf_shutdown>
   21730:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   21734:	85 f6                	test   %esi,%esi
   21736:	74 0d                	je     21745 <aoedev_config_done+0x2e>
   21738:	48 83 c4 10          	add    $0x10,%rsp
   2173c:	48 89 ef             	mov    %rbp,%rdi
   2173f:	5d                   	pop    %rbp
   21740:	e9 5f fe ff ff       	jmp    215a4 <aoedev_close>
   21745:	c7 45 78 01 00 00 00 	movl   $0x1,0x78(%rbp)
   2174c:	48 83 c4 10          	add    $0x10,%rsp
   21750:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
   21754:	5d                   	pop    %rbp
   21755:	e9 4a 5d ff ff       	jmp    174a4 <xfer_window_changed>

000000000002175a <aoecmd_create>:
   2175a:	48 8b 05 2f 6a 00 00 	mov    0x6a2f(%rip),%rax        # 28190 <aoe_commands>
   21761:	66 44 8b 05 01 88 00 	mov    0x8801(%rip),%r8w        # 29f6a <tag_idx.0>
   21768:	00 
   21769:	41 56                	push   %r14
   2176b:	ba 01 00 00 00       	mov    $0x1,%edx
   21770:	41 55                	push   %r13
   21772:	4c 8d 2d 17 6a 00 00 	lea    0x6a17(%rip),%r13        # 28190 <aoe_commands>
   21779:	41 54                	push   %r12
   2177b:	55                   	push   %rbp
   2177c:	48 89 f5             	mov    %rsi,%rbp
   2177f:	48 8d 70 e8          	lea    -0x18(%rax),%rsi
   21783:	53                   	push   %rbx
   21784:	48 89 fb             	mov    %rdi,%rbx
   21787:	41 8d 0c 10          	lea    (%r8,%rdx,1),%ecx
   2178b:	48 89 f0             	mov    %rsi,%rax
   2178e:	0f b7 f9             	movzwl %cx,%edi
   21791:	4c 8d 48 18          	lea    0x18(%rax),%r9
   21795:	4d 39 e9             	cmp    %r13,%r9
   21798:	74 16                	je     217b0 <aoecmd_create+0x56>
   2179a:	3b b8 88 00 00 00    	cmp    0x88(%rax),%edi
   217a0:	0f 84 ad 00 00 00    	je     21853 <aoecmd_create+0xf9>
   217a6:	48 8b 40 18          	mov    0x18(%rax),%rax
   217aa:	48 83 e8 18          	sub    $0x18,%rax
   217ae:	eb e1                	jmp    21791 <aoecmd_create+0x37>
   217b0:	81 cf 00 00 ae 18    	or     $0x18ae0000,%edi
   217b6:	66 89 0d ad 87 00 00 	mov    %cx,0x87ad(%rip)        # 29f6a <tag_idx.0>
   217bd:	41 89 fe             	mov    %edi,%r14d
   217c0:	bf e0 00 00 00       	mov    $0xe0,%edi
   217c5:	e8 90 ae fe ff       	call   c65a <zalloc>
   217ca:	49 89 c4             	mov    %rax,%r12
   217cd:	48 85 c0             	test   %rax,%rax
   217d0:	0f 84 95 00 00 00    	je     2186b <aoecmd_create+0x111>
   217d6:	48 8d 05 9a 00 00 00 	lea    0x9a(%rip),%rax        # 21877 <aoecmd_free>
   217dd:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   217e2:	4c 89 ee             	mov    %r13,%rsi
   217e5:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   217ea:	e8 d2 a8 fe ff       	call   c0c1 <extern_list_add>
   217ef:	48 8d 05 ea 4b 00 00 	lea    0x4bea(%rip),%rax        # 263e0 <null_intf>
   217f6:	4d 89 64 24 30       	mov    %r12,0x30(%r12)
   217fb:	48 89 df             	mov    %rbx,%rdi
   217fe:	49 89 44 24 28       	mov    %rax,0x28(%r12)
   21803:	48 8d 05 16 69 00 00 	lea    0x6916(%rip),%rax        # 28120 <aoecmd_ata_desc>
   2180a:	49 89 44 24 38       	mov    %rax,0x38(%r12)
   2180f:	49 89 44 24 40       	mov    %rax,0x40(%r12)
   21814:	48 8d 05 2e 03 00 00 	lea    0x32e(%rip),%rax        # 21b49 <aoecmd_expired>
   2181b:	49 89 84 24 d0 00 00 	mov    %rax,0xd0(%r12)
   21822:	00 
   21823:	4d 89 a4 24 d8 00 00 	mov    %r12,0xd8(%r12)
   2182a:	00 
   2182b:	e8 02 e6 fe ff       	call   fe32 <ref_increment>
   21830:	48 8b 43 50          	mov    0x50(%rbx),%rax
   21834:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
   21839:	49 89 ac 24 80 00 00 	mov    %rbp,0x80(%r12)
   21840:	00 
   21841:	45 89 b4 24 88 00 00 	mov    %r14d,0x88(%r12)
   21848:	00 
   21849:	49 89 84 24 a8 00 00 	mov    %rax,0xa8(%r12)
   21850:	00 
   21851:	eb 18                	jmp    2186b <aoecmd_create+0x111>
   21853:	ff c2                	inc    %edx
   21855:	81 fa 01 00 01 00    	cmp    $0x10001,%edx
   2185b:	0f 85 26 ff ff ff    	jne    21787 <aoecmd_create+0x2d>
   21861:	66 89 0d 02 87 00 00 	mov    %cx,0x8702(%rip)        # 29f6a <tag_idx.0>
   21868:	45 31 e4             	xor    %r12d,%r12d
   2186b:	5b                   	pop    %rbx
   2186c:	4c 89 e0             	mov    %r12,%rax
   2186f:	5d                   	pop    %rbp
   21870:	41 5c                	pop    %r12
   21872:	41 5d                	pop    %r13
   21874:	41 5e                	pop    %r14
   21876:	c3                   	ret    

0000000000021877 <aoecmd_free>:
   21877:	f3 0f 1e fa          	endbr64 
   2187b:	55                   	push   %rbp
   2187c:	48 89 fd             	mov    %rdi,%rbp
   2187f:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   21883:	e8 b6 e5 fe ff       	call   fe3e <ref_decrement>
   21888:	48 89 ef             	mov    %rbp,%rdi
   2188b:	5d                   	pop    %rbp
   2188c:	e9 be ad fe ff       	jmp    c64f <free>

0000000000021891 <aoedev_free>:
   21891:	f3 0f 1e fa          	endbr64 
   21895:	55                   	push   %rbp
   21896:	48 89 fd             	mov    %rdi,%rbp
   21899:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   2189d:	e8 9c e5 fe ff       	call   fe3e <ref_decrement>
   218a2:	48 89 ef             	mov    %rbp,%rdi
   218a5:	5d                   	pop    %rbp
   218a6:	e9 a4 ad fe ff       	jmp    c64f <free>

00000000000218ab <aoecmd_tx.isra.0>:
   218ab:	41 56                	push   %r14
   218ad:	41 55                	push   %r13
   218af:	49 89 fd             	mov    %rdi,%r13
   218b2:	48 81 c7 90 00 00 00 	add    $0x90,%rdi
   218b9:	41 54                	push   %r12
   218bb:	55                   	push   %rbp
   218bc:	53                   	push   %rbx
   218bd:	48 8b 5f 80          	mov    -0x80(%rdi),%rbx
   218c1:	48 8b 6b 10          	mov    0x10(%rbx),%rbp
   218c5:	e8 d8 e9 fe ff       	call   102a2 <start_timer>
   218ca:	49 8b 85 80 00 00 00 	mov    0x80(%r13),%rax
   218d1:	4c 89 ef             	mov    %r13,%rdi
   218d4:	ff 10                	call   *(%rax)
   218d6:	48 8d 78 40          	lea    0x40(%rax),%rdi
   218da:	49 89 c6             	mov    %rax,%r14
   218dd:	e8 9a 83 fe ff       	call   9c7c <alloc_iob>
   218e2:	48 85 c0             	test   %rax,%rax
   218e5:	75 09                	jne    218f0 <aoecmd_tx.isra.0+0x45>
   218e7:	5b                   	pop    %rbx
   218e8:	5d                   	pop    %rbp
   218e9:	41 5c                	pop    %r12
   218eb:	41 5d                	pop    %r13
   218ed:	41 5e                	pop    %r14
   218ef:	c3                   	ret    
   218f0:	48 8b 50 20          	mov    0x20(%rax),%rdx
   218f4:	48 83 40 18 40       	addq   $0x40,0x18(%rax)
   218f9:	49 89 c4             	mov    %rax,%r12
   218fc:	48 8d 7a 40          	lea    0x40(%rdx),%rdi
   21900:	49 01 fe             	add    %rdi,%r14
   21903:	4c 89 70 20          	mov    %r14,0x20(%rax)
   21907:	31 c0                	xor    %eax,%eax
   21909:	ab                   	stos   %eax,%es:(%rdi)
   2190a:	ab                   	stos   %eax,%es:(%rdi)
   2190b:	66 ab                	stos   %ax,%es:(%rdi)
   2190d:	c6 42 40 10          	movb   $0x10,0x40(%rdx)
   21911:	8b 43 38             	mov    0x38(%rbx),%eax
   21914:	4c 89 ef             	mov    %r13,%rdi
   21917:	86 c4                	xchg   %al,%ah
   21919:	66 89 42 42          	mov    %ax,0x42(%rdx)
   2191d:	8a 43 3a             	mov    0x3a(%rbx),%al
   21920:	88 42 44             	mov    %al,0x44(%rdx)
   21923:	41 8b 85 88 00 00 00 	mov    0x88(%r13),%eax
   2192a:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   2192f:	0f c8                	bswap  %eax
   21931:	89 42 46             	mov    %eax,0x46(%rdx)
   21934:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
   21939:	49 8b 85 80 00 00 00 	mov    0x80(%r13),%rax
   21940:	48 29 f2             	sub    %rsi,%rdx
   21943:	ff 50 08             	call   *0x8(%rax)
   21946:	48 8d 4b 3b          	lea    0x3b(%rbx),%rcx
   2194a:	4c 8d 45 60          	lea    0x60(%rbp),%r8
   2194e:	5b                   	pop    %rbx
   2194f:	48 89 ee             	mov    %rbp,%rsi
   21952:	4c 89 e7             	mov    %r12,%rdi
   21955:	48 8d 15 ec 73 00 00 	lea    0x73ec(%rip),%rdx        # 28d48 <aoe_protocol>
   2195c:	5d                   	pop    %rbp
   2195d:	41 5c                	pop    %r12
   2195f:	41 5d                	pop    %r13
   21961:	41 5e                	pop    %r14
   21963:	e9 98 c8 fe ff       	jmp    e200 <net_tx>

0000000000021968 <aoe_open>:
   21968:	f3 0f 1e fa          	endbr64 
   2196c:	41 57                	push   %r15
   2196e:	41 56                	push   %r14
   21970:	41 55                	push   %r13
   21972:	49 89 fd             	mov    %rdi,%r13
   21975:	41 54                	push   %r12
   21977:	55                   	push   %rbp
   21978:	53                   	push   %rbx
   21979:	48 89 f3             	mov    %rsi,%rbx
   2197c:	48 83 ec 18          	sub    $0x18,%rsp
   21980:	48 8b 05 e9 85 00 00 	mov    0x85e9(%rip),%rax        # 29f70 <__stack_chk_guard>
   21987:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2198c:	31 c0                	xor    %eax,%eax
   2198e:	e8 57 c6 fe ff       	call   dfea <last_opened_netdev>
   21993:	48 85 c0             	test   %rax,%rax
   21996:	75 0b                	jne    219a3 <aoe_open+0x3b>
   21998:	41 bc 79 9f ff d3    	mov    $0xd3ff9f79,%r12d
   2199e:	e9 81 01 00 00       	jmp    21b24 <aoe_open+0x1bc>
   219a3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   219a7:	48 85 ff             	test   %rdi,%rdi
   219aa:	75 02                	jne    219ae <aoe_open+0x46>
   219ac:	eb 47                	jmp    219f5 <aoe_open+0x8d>
   219ae:	80 3f 65             	cmpb   $0x65,(%rdi)
   219b1:	74 02                	je     219b5 <aoe_open+0x4d>
   219b3:	eb 40                	jmp    219f5 <aoe_open+0x8d>
   219b5:	48 89 e5             	mov    %rsp,%rbp
   219b8:	48 ff c7             	inc    %rdi
   219bb:	ba 0a 00 00 00       	mov    $0xa,%edx
   219c0:	49 89 c4             	mov    %rax,%r12
   219c3:	48 89 ee             	mov    %rbp,%rsi
   219c6:	e8 b0 20 ff ff       	call   13a7b <strtoul>
   219cb:	48 8b 3c 24          	mov    (%rsp),%rdi
   219cf:	48 89 c3             	mov    %rax,%rbx
   219d2:	80 3f 2e             	cmpb   $0x2e,(%rdi)
   219d5:	74 02                	je     219d9 <aoe_open+0x71>
   219d7:	eb 1c                	jmp    219f5 <aoe_open+0x8d>
   219d9:	48 ff c7             	inc    %rdi
   219dc:	ba 0a 00 00 00       	mov    $0xa,%edx
   219e1:	48 89 ee             	mov    %rbp,%rsi
   219e4:	e8 92 20 ff ff       	call   13a7b <strtoul>
   219e9:	49 89 c7             	mov    %rax,%r15
   219ec:	48 8b 04 24          	mov    (%rsp),%rax
   219f0:	80 38 00             	cmpb   $0x0,(%rax)
   219f3:	74 0b                	je     21a00 <aoe_open+0x98>
   219f5:	41 bc 7e 9f ff e3    	mov    $0xe3ff9f7e,%r12d
   219fb:	e9 24 01 00 00       	jmp    21b24 <aoe_open+0x1bc>
   21a00:	bf a0 00 00 00       	mov    $0xa0,%edi
   21a05:	e8 50 ac fe ff       	call   c65a <zalloc>
   21a0a:	48 89 c5             	mov    %rax,%rbp
   21a0d:	48 85 c0             	test   %rax,%rax
   21a10:	75 0b                	jne    21a1d <aoe_open+0xb5>
   21a12:	41 bc 77 9f ff ce    	mov    $0xceff9f77,%r12d
   21a18:	e9 07 01 00 00       	jmp    21b24 <aoe_open+0x1bc>
   21a1d:	48 8d 05 6d fe ff ff 	lea    -0x193(%rip),%rax        # 21891 <aoedev_free>
   21a24:	48 89 6d 20          	mov    %rbp,0x20(%rbp)
   21a28:	4c 89 e7             	mov    %r12,%rdi
   21a2b:	4c 8d 75 58          	lea    0x58(%rbp),%r14
   21a2f:	48 89 45 08          	mov    %rax,0x8(%rbp)
   21a33:	48 8d 05 a6 49 00 00 	lea    0x49a6(%rip),%rax        # 263e0 <null_intf>
   21a3a:	48 8d 15 5f 66 00 00 	lea    0x665f(%rip),%rdx        # 280a0 <aoedev_ata_desc>
   21a41:	48 89 45 18          	mov    %rax,0x18(%rbp)
   21a45:	48 89 45 58          	mov    %rax,0x58(%rbp)
   21a49:	48 8d 05 10 66 00 00 	lea    0x6610(%rip),%rax        # 28060 <aoedev_config_desc>
   21a50:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   21a54:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   21a58:	48 89 45 68          	mov    %rax,0x68(%rbp)
   21a5c:	48 89 45 70          	mov    %rax,0x70(%rbp)
   21a60:	48 89 6d 60          	mov    %rbp,0x60(%rbp)
   21a64:	e8 c9 e3 fe ff       	call   fe32 <ref_increment>
   21a69:	44 88 7d 3a          	mov    %r15b,0x3a(%rbp)
   21a6d:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   21a72:	48 8d 7d 3b          	lea    0x3b(%rbp),%rdi
   21a76:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   21a7a:	49 8b 74 24 78       	mov    0x78(%r12),%rsi
   21a7f:	66 89 5d 38          	mov    %bx,0x38(%rbp)
   21a83:	0f b6 50 43          	movzbl 0x43(%rax),%edx
   21a87:	e8 81 58 ff ff       	call   1730d <__memcpy>
   21a8c:	48 8d 05 2d 69 00 00 	lea    0x692d(%rip),%rax        # 283c0 <abft_model>
   21a93:	48 89 ad 80 00 00 00 	mov    %rbp,0x80(%rbp)
   21a9a:	48 89 ef             	mov    %rbp,%rdi
   21a9d:	48 89 85 88 00 00 00 	mov    %rax,0x88(%rbp)
   21aa4:	48 8d 85 90 00 00 00 	lea    0x90(%rbp),%rax
   21aab:	48 8d 35 9e 66 00 00 	lea    0x669e(%rip),%rsi        # 28150 <aoecmd_cfg>
   21ab2:	48 89 85 90 00 00 00 	mov    %rax,0x90(%rbp)
   21ab9:	48 89 85 98 00 00 00 	mov    %rax,0x98(%rbp)
   21ac0:	e8 95 fc ff ff       	call   2175a <aoecmd_create>
   21ac5:	49 89 c4             	mov    %rax,%r12
   21ac8:	48 85 c0             	test   %rax,%rax
   21acb:	75 08                	jne    21ad5 <aoe_open+0x16d>
   21acd:	41 bc 77 9f ff ce    	mov    $0xceff9f77,%r12d
   21ad3:	eb 3c                	jmp    21b11 <aoe_open+0x1a9>
   21ad5:	48 89 c7             	mov    %rax,%rdi
   21ad8:	e8 ce fd ff ff       	call   218ab <aoecmd_tx.isra.0>
   21add:	49 8d 7c 24 28       	lea    0x28(%r12),%rdi
   21ae2:	4c 89 f6             	mov    %r14,%rsi
   21ae5:	e8 87 7c fe ff       	call   9771 <intf_plug_plug>
   21aea:	45 8b a4 24 88 00 00 	mov    0x88(%r12),%r12d
   21af1:	00 
   21af2:	45 85 e4             	test   %r12d,%r12d
   21af5:	78 1a                	js     21b11 <aoe_open+0x1a9>
   21af7:	48 8d 75 18          	lea    0x18(%rbp),%rsi
   21afb:	b9 02 00 00 00       	mov    $0x2,%ecx
   21b00:	31 d2                	xor    %edx,%edx
   21b02:	4c 89 ef             	mov    %r13,%rdi
   21b05:	e8 64 06 00 00       	call   2216e <ata_open>
   21b0a:	41 89 c4             	mov    %eax,%r12d
   21b0d:	85 c0                	test   %eax,%eax
   21b0f:	74 0b                	je     21b1c <aoe_open+0x1b4>
   21b11:	44 89 e6             	mov    %r12d,%esi
   21b14:	48 89 ef             	mov    %rbp,%rdi
   21b17:	e8 88 fa ff ff       	call   215a4 <aoedev_close>
   21b1c:	48 89 ef             	mov    %rbp,%rdi
   21b1f:	e8 1a e3 fe ff       	call   fe3e <ref_decrement>
   21b24:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   21b29:	48 2b 05 40 84 00 00 	sub    0x8440(%rip),%rax        # 29f70 <__stack_chk_guard>
   21b30:	74 05                	je     21b37 <aoe_open+0x1cf>
   21b32:	e8 29 0f fe ff       	call   2a60 <__stack_chk_fail>
   21b37:	48 83 c4 18          	add    $0x18,%rsp
   21b3b:	44 89 e0             	mov    %r12d,%eax
   21b3e:	5b                   	pop    %rbx
   21b3f:	5d                   	pop    %rbp
   21b40:	41 5c                	pop    %r12
   21b42:	41 5d                	pop    %r13
   21b44:	41 5e                	pop    %r14
   21b46:	41 5f                	pop    %r15
   21b48:	c3                   	ret    

0000000000021b49 <aoecmd_expired>:
   21b49:	f3 0f 1e fa          	endbr64 
   21b4d:	48 81 ef 90 00 00 00 	sub    $0x90,%rdi
   21b54:	85 f6                	test   %esi,%esi
   21b56:	74 0a                	je     21b62 <aoecmd_expired+0x19>
   21b58:	be 6e 9f ff b3       	mov    $0xb3ff9f6e,%esi
   21b5d:	e9 e2 f9 ff ff       	jmp    21544 <aoecmd_close>
   21b62:	e9 44 fd ff ff       	jmp    218ab <aoecmd_tx.isra.0>

0000000000021b67 <aoedev_ata_command>:
   21b67:	f3 0f 1e fa          	endbr64 
   21b6b:	48 8b 47 10          	mov    0x10(%rdi),%rax
   21b6f:	f6 80 80 00 00 00 01 	testb  $0x1,0x80(%rax)
   21b76:	75 06                	jne    21b7e <aoedev_ata_command+0x17>
   21b78:	b8 7a 9f ff b1       	mov    $0xb1ff9f7a,%eax
   21b7d:	c3                   	ret    
   21b7e:	41 54                	push   %r12
   21b80:	49 89 d4             	mov    %rdx,%r12
   21b83:	55                   	push   %rbp
   21b84:	48 89 f5             	mov    %rsi,%rbp
   21b87:	48 8d 35 e2 65 00 00 	lea    0x65e2(%rip),%rsi        # 28170 <aoecmd_ata>
   21b8e:	53                   	push   %rbx
   21b8f:	e8 c6 fb ff ff       	call   2175a <aoecmd_create>
   21b94:	48 89 c3             	mov    %rax,%rbx
   21b97:	48 85 c0             	test   %rax,%rax
   21b9a:	75 07                	jne    21ba3 <aoedev_ata_command+0x3c>
   21b9c:	b8 77 9f ff ce       	mov    $0xceff9f77,%eax
   21ba1:	eb 2b                	jmp    21bce <aoedev_ata_command+0x67>
   21ba3:	ba 38 00 00 00       	mov    $0x38,%edx
   21ba8:	4c 89 e6             	mov    %r12,%rsi
   21bab:	48 8d 78 48          	lea    0x48(%rax),%rdi
   21baf:	e8 59 57 ff ff       	call   1730d <__memcpy>
   21bb4:	48 89 df             	mov    %rbx,%rdi
   21bb7:	e8 ef fc ff ff       	call   218ab <aoecmd_tx.isra.0>
   21bbc:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   21bc0:	48 89 ee             	mov    %rbp,%rsi
   21bc3:	e8 a9 7b fe ff       	call   9771 <intf_plug_plug>
   21bc8:	8b 83 88 00 00 00    	mov    0x88(%rbx),%eax
   21bce:	5b                   	pop    %rbx
   21bcf:	5d                   	pop    %rbp
   21bd0:	41 5c                	pop    %r12
   21bd2:	c3                   	ret    

0000000000021bd3 <aoe_rx>:
   21bd3:	f3 0f 1e fa          	endbr64 
   21bd7:	41 55                	push   %r13
   21bd9:	49 89 fd             	mov    %rdi,%r13
   21bdc:	41 54                	push   %r12
   21bde:	55                   	push   %rbp
   21bdf:	48 8b 47 18          	mov    0x18(%rdi),%rax
   21be3:	48 8b 57 20          	mov    0x20(%rdi),%rdx
   21be7:	48 29 c2             	sub    %rax,%rdx
   21bea:	48 83 fa 09          	cmp    $0x9,%rdx
   21bee:	77 0b                	ja     21bfb <aoe_rx+0x28>
   21bf0:	41 bc 7e 9f ff e3    	mov    $0xe3ff9f7e,%r12d
   21bf6:	e9 ee 00 00 00       	jmp    21ce9 <aoe_rx+0x116>
   21bfb:	8a 10                	mov    (%rax),%dl
   21bfd:	49 89 cc             	mov    %rcx,%r12
   21c00:	89 d1                	mov    %edx,%ecx
   21c02:	83 e1 f0             	and    $0xfffffff0,%ecx
   21c05:	80 f9 10             	cmp    $0x10,%cl
   21c08:	74 0b                	je     21c15 <aoe_rx+0x42>
   21c0a:	41 bc 7d 9f ff bb    	mov    $0xbbff9f7d,%r12d
   21c10:	e9 d4 00 00 00       	jmp    21ce9 <aoe_rx+0x116>
   21c15:	80 e2 08             	and    $0x8,%dl
   21c18:	75 0b                	jne    21c25 <aoe_rx+0x52>
   21c1a:	41 bc 7d 9f ff c0    	mov    $0xc0ff9f7d,%r12d
   21c20:	e9 c4 00 00 00       	jmp    21ce9 <aoe_rx+0x116>
   21c25:	48 8b 35 64 65 00 00 	mov    0x6564(%rip),%rsi        # 28190 <aoe_commands>
   21c2c:	48 8d 15 5d 65 00 00 	lea    0x655d(%rip),%rdx        # 28190 <aoe_commands>
   21c33:	8b 40 06             	mov    0x6(%rax),%eax
   21c36:	0f c8                	bswap  %eax
   21c38:	48 8d 6e e8          	lea    -0x18(%rsi),%rbp
   21c3c:	48 8d 4d 18          	lea    0x18(%rbp),%rcx
   21c40:	48 39 d1             	cmp    %rdx,%rcx
   21c43:	0f 84 9a 00 00 00    	je     21ce3 <aoe_rx+0x110>
   21c49:	3b 85 88 00 00 00    	cmp    0x88(%rbp),%eax
   21c4f:	75 1f                	jne    21c70 <aoe_rx+0x9d>
   21c51:	48 89 ef             	mov    %rbp,%rdi
   21c54:	e8 d9 e1 fe ff       	call   fe32 <ref_increment>
   21c59:	49 8b 75 18          	mov    0x18(%r13),%rsi
   21c5d:	49 8b 55 20          	mov    0x20(%r13),%rdx
   21c61:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   21c65:	48 29 f2             	sub    %rsi,%rdx
   21c68:	48 83 fa 09          	cmp    $0x9,%rdx
   21c6c:	77 0c                	ja     21c7a <aoe_rx+0xa7>
   21c6e:	eb 1e                	jmp    21c8e <aoe_rx+0xbb>
   21c70:	48 8b 6d 18          	mov    0x18(%rbp),%rbp
   21c74:	48 83 ed 18          	sub    $0x18,%rbp
   21c78:	eb c2                	jmp    21c3c <aoe_rx+0x69>
   21c7a:	66 8b 46 02          	mov    0x2(%rsi),%ax
   21c7e:	86 c4                	xchg   %al,%ah
   21c80:	66 3b 41 38          	cmp    0x38(%rcx),%ax
   21c84:	75 08                	jne    21c8e <aoe_rx+0xbb>
   21c86:	8a 41 3a             	mov    0x3a(%rcx),%al
   21c89:	38 46 04             	cmp    %al,0x4(%rsi)
   21c8c:	74 08                	je     21c96 <aoe_rx+0xc3>
   21c8e:	41 bc 7e 9f ff e3    	mov    $0xe3ff9f7e,%r12d
   21c94:	eb 2d                	jmp    21cc3 <aoe_rx+0xf0>
   21c96:	f6 06 04             	testb  $0x4,(%rsi)
   21c99:	74 15                	je     21cb0 <aoe_rx+0xdd>
   21c9b:	be 68 9f ff e2       	mov    $0xe2ff9f68,%esi
   21ca0:	48 89 ef             	mov    %rbp,%rdi
   21ca3:	e8 9c f8 ff ff       	call   21544 <aoecmd_close>
   21ca8:	41 bc 68 9f ff e2    	mov    $0xe2ff9f68,%r12d
   21cae:	eb 13                	jmp    21cc3 <aoe_rx+0xf0>
   21cb0:	48 8b 85 80 00 00 00 	mov    0x80(%rbp),%rax
   21cb7:	4c 89 e1             	mov    %r12,%rcx
   21cba:	48 89 ef             	mov    %rbp,%rdi
   21cbd:	ff 50 10             	call   *0x10(%rax)
   21cc0:	41 89 c4             	mov    %eax,%r12d
   21cc3:	4c 89 ef             	mov    %r13,%rdi
   21cc6:	45 31 ed             	xor    %r13d,%r13d
   21cc9:	e8 c8 7f fe ff       	call   9c96 <free_iob>
   21cce:	44 89 e6             	mov    %r12d,%esi
   21cd1:	48 89 ef             	mov    %rbp,%rdi
   21cd4:	e8 6b f8 ff ff       	call   21544 <aoecmd_close>
   21cd9:	48 89 ef             	mov    %rbp,%rdi
   21cdc:	e8 5d e1 fe ff       	call   fe3e <ref_decrement>
   21ce1:	eb 06                	jmp    21ce9 <aoe_rx+0x116>
   21ce3:	41 bc 72 9f ff d2    	mov    $0xd2ff9f72,%r12d
   21ce9:	4c 89 ef             	mov    %r13,%rdi
   21cec:	e8 a5 7f fe ff       	call   9c96 <free_iob>
   21cf1:	44 89 e0             	mov    %r12d,%eax
   21cf4:	5d                   	pop    %rbp
   21cf5:	41 5c                	pop    %r12
   21cf7:	41 5d                	pop    %r13
   21cf9:	c3                   	ret    

0000000000021cfa <atacmd_done>:
   21cfa:	f3 0f 1e fa          	endbr64 
   21cfe:	48 8b 47 68          	mov    0x68(%rdi),%rax
   21d02:	ff 60 28             	jmp    *0x28(%rax)

0000000000021d05 <atacmd_data_buffer>:
   21d05:	f3 0f 1e fa          	endbr64 
   21d09:	48 89 31             	mov    %rsi,(%rcx)
   21d0c:	49 89 10             	mov    %rdx,(%r8)
   21d0f:	c3                   	ret    

0000000000021d10 <atacmd_data_none>:
   21d10:	f3 0f 1e fa          	endbr64 
   21d14:	c3                   	ret    

0000000000021d15 <atacmd_data_priv>:
   21d15:	f3 0f 1e fa          	endbr64 
   21d19:	48 8d 47 74          	lea    0x74(%rdi),%rax
   21d1d:	48 89 01             	mov    %rax,(%rcx)
   21d20:	48 8b 47 68          	mov    0x68(%rdi),%rax
   21d24:	48 8b 40 08          	mov    0x8(%rax),%rax
   21d28:	49 89 00             	mov    %rax,(%r8)
   21d2b:	c3                   	ret    

0000000000021d2c <atadev_edd_describe>:
   21d2c:	f3 0f 1e fa          	endbr64 
   21d30:	48 b8 41 54 41 20 20 	movabs $0x2020202020415441,%rax
   21d37:	20 20 20 
   21d3a:	83 7f 50 10          	cmpl   $0x10,0x50(%rdi)
   21d3e:	48 89 06             	mov    %rax,(%rsi)
   21d41:	0f 94 02             	sete   (%rdx)
   21d44:	31 c0                	xor    %eax,%eax
   21d46:	c3                   	ret    

0000000000021d47 <ata_command>:
   21d47:	f3 0f 1e fa          	endbr64 
   21d4b:	41 55                	push   %r13
   21d4d:	49 89 d5             	mov    %rdx,%r13
   21d50:	41 54                	push   %r12
   21d52:	55                   	push   %rbp
   21d53:	48 89 f5             	mov    %rsi,%rbp
   21d56:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 21d47 <ata_command>
   21d5d:	48 83 ec 10          	sub    $0x10,%rsp
   21d61:	48 8b 05 08 82 00 00 	mov    0x8208(%rip),%rax        # 29f70 <__stack_chk_guard>
   21d68:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21d6d:	31 c0                	xor    %eax,%eax
   21d6f:	48 89 e2             	mov    %rsp,%rdx
   21d72:	e8 8e 7a fe ff       	call   9805 <intf_get_dest_op_untyped>
   21d77:	48 8b 3c 24          	mov    (%rsp),%rdi
   21d7b:	49 89 c4             	mov    %rax,%r12
   21d7e:	e8 2c 7a fe ff       	call   97af <intf_object>
   21d83:	4d 85 e4             	test   %r12,%r12
   21d86:	74 11                	je     21d99 <ata_command+0x52>
   21d88:	48 89 c7             	mov    %rax,%rdi
   21d8b:	4c 89 ea             	mov    %r13,%rdx
   21d8e:	48 89 ee             	mov    %rbp,%rsi
   21d91:	41 ff d4             	call   *%r12
   21d94:	41 89 c4             	mov    %eax,%r12d
   21d97:	eb 06                	jmp    21d9f <ata_command+0x58>
   21d99:	41 bc 7d bf 8b c0    	mov    $0xc08bbf7d,%r12d
   21d9f:	48 8b 3c 24          	mov    (%rsp),%rdi
   21da3:	e8 98 79 fe ff       	call   9740 <intf_put>
   21da8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   21dad:	48 2b 05 bc 81 00 00 	sub    0x81bc(%rip),%rax        # 29f70 <__stack_chk_guard>
   21db4:	74 05                	je     21dbb <ata_command+0x74>
   21db6:	e8 a5 0c fe ff       	call   2a60 <__stack_chk_fail>
   21dbb:	48 83 c4 10          	add    $0x10,%rsp
   21dbf:	44 89 e0             	mov    %r12d,%eax
   21dc2:	5d                   	pop    %rbp
   21dc3:	41 5c                	pop    %r12
   21dc5:	41 5d                	pop    %r13
   21dc7:	c3                   	ret    

0000000000021dc8 <atacmd_close>:
   21dc8:	f3 0f 1e fa          	endbr64 
   21dcc:	53                   	push   %rbx
   21dcd:	48 89 fb             	mov    %rdi,%rbx
   21dd0:	48 8d 7f 48          	lea    0x48(%rdi),%rdi
   21dd4:	48 83 ec 10          	sub    $0x10,%rsp
   21dd8:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   21ddc:	e8 ee 7a fe ff       	call   98cf <intf_shutdown>
   21de1:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   21de5:	48 83 c4 10          	add    $0x10,%rsp
   21de9:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   21ded:	5b                   	pop    %rbx
   21dee:	e9 dc 7a fe ff       	jmp    98cf <intf_shutdown>

0000000000021df3 <atadev_close>:
   21df3:	f3 0f 1e fa          	endbr64 
   21df7:	41 56                	push   %r14
   21df9:	4c 8d 35 90 65 00 00 	lea    0x6590(%rip),%r14        # 28390 <ata_commands>
   21e00:	41 55                	push   %r13
   21e02:	41 89 f5             	mov    %esi,%r13d
   21e05:	41 54                	push   %r12
   21e07:	49 89 fc             	mov    %rdi,%r12
   21e0a:	48 83 c7 10          	add    $0x10,%rdi
   21e0e:	55                   	push   %rbp
   21e0f:	53                   	push   %rbx
   21e10:	e8 ba 7a fe ff       	call   98cf <intf_shutdown>
   21e15:	49 8d 7c 24 30       	lea    0x30(%r12),%rdi
   21e1a:	44 89 ee             	mov    %r13d,%esi
   21e1d:	e8 ad 7a fe ff       	call   98cf <intf_shutdown>
   21e22:	48 8b 05 67 65 00 00 	mov    0x6567(%rip),%rax        # 28390 <ata_commands>
   21e29:	48 8b 18             	mov    (%rax),%rbx
   21e2c:	48 8d 68 e8          	lea    -0x18(%rax),%rbp
   21e30:	48 83 eb 18          	sub    $0x18,%rbx
   21e34:	48 8d 45 18          	lea    0x18(%rbp),%rax
   21e38:	4c 39 f0             	cmp    %r14,%rax
   21e3b:	74 2e                	je     21e6b <atadev_close+0x78>
   21e3d:	4c 39 65 10          	cmp    %r12,0x10(%rbp)
   21e41:	75 1b                	jne    21e5e <atadev_close+0x6b>
   21e43:	48 89 ef             	mov    %rbp,%rdi
   21e46:	e8 e7 df fe ff       	call   fe32 <ref_increment>
   21e4b:	48 89 ef             	mov    %rbp,%rdi
   21e4e:	44 89 ee             	mov    %r13d,%esi
   21e51:	e8 72 ff ff ff       	call   21dc8 <atacmd_close>
   21e56:	48 89 ef             	mov    %rbp,%rdi
   21e59:	e8 e0 df fe ff       	call   fe3e <ref_decrement>
   21e5e:	48 8b 43 18          	mov    0x18(%rbx),%rax
   21e62:	48 89 dd             	mov    %rbx,%rbp
   21e65:	48 8d 58 e8          	lea    -0x18(%rax),%rbx
   21e69:	eb c9                	jmp    21e34 <atadev_close+0x41>
   21e6b:	5b                   	pop    %rbx
   21e6c:	5d                   	pop    %rbp
   21e6d:	41 5c                	pop    %r12
   21e6f:	41 5d                	pop    %r13
   21e71:	41 5e                	pop    %r14
   21e73:	c3                   	ret    

0000000000021e74 <atacmd_identify_done>:
   21e74:	f3 0f 1e fa          	endbr64 
   21e78:	55                   	push   %rbp
   21e79:	48 89 fd             	mov    %rdi,%rbp
   21e7c:	48 83 ec 20          	sub    $0x20,%rsp
   21e80:	48 8b 05 e9 80 00 00 	mov    0x80e9(%rip),%rax        # 29f70 <__stack_chk_guard>
   21e87:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   21e8c:	48 8b 47 10          	mov    0x10(%rdi),%rax
   21e90:	85 f6                	test   %esi,%esi
   21e92:	74 18                	je     21eac <atacmd_identify_done+0x38>
   21e94:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   21e99:	48 2b 05 d0 80 00 00 	sub    0x80d0(%rip),%rax        # 29f70 <__stack_chk_guard>
   21ea0:	75 61                	jne    21f03 <atacmd_identify_done+0x8f>
   21ea2:	48 83 c4 20          	add    $0x20,%rsp
   21ea6:	5d                   	pop    %rbp
   21ea7:	e9 1c ff ff ff       	jmp    21dc8 <atacmd_close>
   21eac:	f6 87 1b 01 00 00 04 	testb  $0x4,0x11b(%rdi)
   21eb3:	74 10                	je     21ec5 <atacmd_identify_done+0x51>
   21eb5:	c7 40 58 01 00 00 00 	movl   $0x1,0x58(%rax)
   21ebc:	48 8b 97 3c 01 00 00 	mov    0x13c(%rdi),%rdx
   21ec3:	eb 06                	jmp    21ecb <atacmd_identify_done+0x57>
   21ec5:	8b 97 ec 00 00 00    	mov    0xec(%rdi),%edx
   21ecb:	8b 40 54             	mov    0x54(%rax),%eax
   21ece:	48 89 e6             	mov    %rsp,%rsi
   21ed1:	48 8d 7d 28          	lea    0x28(%rbp),%rdi
   21ed5:	48 89 14 24          	mov    %rdx,(%rsp)
   21ed9:	48 c7 44 24 08 00 02 	movq   $0x200,0x8(%rsp)
   21ee0:	00 00 
   21ee2:	89 44 24 10          	mov    %eax,0x10(%rsp)
   21ee6:	e8 fc 6f ff ff       	call   18ee7 <block_capacity>
   21eeb:	31 f6                	xor    %esi,%esi
   21eed:	48 89 ef             	mov    %rbp,%rdi
   21ef0:	e8 d3 fe ff ff       	call   21dc8 <atacmd_close>
   21ef5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   21efa:	48 2b 05 6f 80 00 00 	sub    0x806f(%rip),%rax        # 29f70 <__stack_chk_guard>
   21f01:	74 05                	je     21f08 <atacmd_identify_done+0x94>
   21f03:	e8 58 0b fe ff       	call   2a60 <__stack_chk_fail>
   21f08:	48 83 c4 20          	add    $0x20,%rsp
   21f0c:	5d                   	pop    %rbp
   21f0d:	c3                   	ret    

0000000000021f0e <atadev_command>:
   21f0e:	41 57                	push   %r15
   21f10:	41 56                	push   %r14
   21f12:	45 89 c6             	mov    %r8d,%r14d
   21f15:	41 55                	push   %r13
   21f17:	49 89 d5             	mov    %rdx,%r13
   21f1a:	41 54                	push   %r12
   21f1c:	4d 89 cc             	mov    %r9,%r12
   21f1f:	55                   	push   %rbp
   21f20:	48 89 cd             	mov    %rcx,%rbp
   21f23:	53                   	push   %rbx
   21f24:	48 89 fb             	mov    %rdi,%rbx
   21f27:	48 83 ec 58          	sub    $0x58,%rsp
   21f2b:	48 8b 05 3e 80 00 00 	mov    0x803e(%rip),%rax        # 29f70 <__stack_chk_guard>
   21f32:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21f37:	48 8b 42 08          	mov    0x8(%rdx),%rax
   21f3b:	48 89 34 24          	mov    %rsi,(%rsp)
   21f3f:	48 8d 78 78          	lea    0x78(%rax),%rdi
   21f43:	e8 12 a7 fe ff       	call   c65a <zalloc>
   21f48:	48 85 c0             	test   %rax,%rax
   21f4b:	75 0b                	jne    21f58 <atadev_command+0x4a>
   21f4d:	41 bc 77 bf 8b ce    	mov    $0xce8bbf77,%r12d
   21f53:	e9 57 01 00 00       	jmp    220af <atadev_command+0x1a1>
   21f58:	49 89 c7             	mov    %rax,%r15
   21f5b:	48 8d 05 e3 01 00 00 	lea    0x1e3(%rip),%rax        # 22145 <atacmd_free>
   21f62:	48 8d 15 37 63 00 00 	lea    0x6337(%rip),%rdx        # 282a0 <atacmd_block_desc>
   21f69:	48 89 df             	mov    %rbx,%rdi
   21f6c:	49 89 47 08          	mov    %rax,0x8(%r15)
   21f70:	48 8d 05 69 44 00 00 	lea    0x4469(%rip),%rax        # 263e0 <null_intf>
   21f77:	49 89 47 28          	mov    %rax,0x28(%r15)
   21f7b:	49 89 47 48          	mov    %rax,0x48(%r15)
   21f7f:	48 8d 05 da 62 00 00 	lea    0x62da(%rip),%rax        # 28260 <atacmd_ata_desc>
   21f86:	49 89 47 58          	mov    %rax,0x58(%r15)
   21f8a:	49 89 47 60          	mov    %rax,0x60(%r15)
   21f8e:	49 89 57 38          	mov    %rdx,0x38(%r15)
   21f92:	49 89 57 40          	mov    %rdx,0x40(%r15)
   21f96:	4d 89 7f 30          	mov    %r15,0x30(%r15)
   21f9a:	4d 89 7f 50          	mov    %r15,0x50(%r15)
   21f9e:	e8 8f de fe ff       	call   fe32 <ref_increment>
   21fa3:	49 89 5f 10          	mov    %rbx,0x10(%r15)
   21fa7:	49 8d 7f 18          	lea    0x18(%r15),%rdi
   21fab:	48 8d 35 de 63 00 00 	lea    0x63de(%rip),%rsi        # 28390 <ata_commands>
   21fb2:	e8 0a a1 fe ff       	call   c0c1 <extern_list_add>
   21fb7:	44 89 f0             	mov    %r14d,%eax
   21fba:	4d 89 6f 68          	mov    %r13,0x68(%r15)
   21fbe:	c1 e0 09             	shl    $0x9,%eax
   21fc1:	48 39 84 24 90 00 00 	cmp    %rax,0x90(%rsp)
   21fc8:	00 
   21fc9:	74 0b                	je     21fd6 <atadev_command+0xc8>
   21fcb:	41 bc 7e bf 8b e3    	mov    $0xe38bbf7e,%r12d
   21fd1:	e9 bb 00 00 00       	jmp    22091 <atadev_command+0x183>
   21fd6:	4c 8d 5c 24 10       	lea    0x10(%rsp),%r11
   21fdb:	b9 38 00 00 00       	mov    $0x38,%ecx
   21fe0:	31 c0                	xor    %eax,%eax
   21fe2:	4c 89 df             	mov    %r11,%rdi
   21fe5:	f3 aa                	rep stos %al,%es:(%rdi)
   21fe7:	8a 43 50             	mov    0x50(%rbx),%al
   21fea:	8b 53 58             	mov    0x58(%rbx),%edx
   21fed:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
   21ff2:	66 44 89 74 24 18    	mov    %r14w,0x18(%rsp)
   21ff8:	83 c8 e0             	or     $0xffffffe0,%eax
   21ffb:	89 54 24 20          	mov    %edx,0x20(%rsp)
   21fff:	88 44 24 1c          	mov    %al,0x1c(%rsp)
   22003:	85 d2                	test   %edx,%edx
   22005:	0f 85 9b 00 00 00    	jne    220a6 <atadev_command+0x198>
   2200b:	48 c1 ed 18          	shr    $0x18,%rbp
   2200f:	09 e8                	or     %ebp,%eax
   22011:	88 44 24 1c          	mov    %al,0x1c(%rsp)
   22015:	41 8a 45 10          	mov    0x10(%r13),%al
   22019:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   2201e:	4c 89 e6             	mov    %r12,%rsi
   22021:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   22026:	4c 89 ff             	mov    %r15,%rdi
   22029:	88 44 24 1d          	mov    %al,0x1d(%rsp)
   2202d:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
   22034:	00 
   22035:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
   2203a:	41 ff 55 18          	call   *0x18(%r13)
   2203e:	4c 89 e6             	mov    %r12,%rsi
   22041:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   22046:	4c 89 ff             	mov    %r15,%rdi
   22049:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
   22050:	00 
   22051:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
   22056:	41 ff 55 20          	call   *0x20(%r13)
   2205a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2205f:	49 8d 77 48          	lea    0x48(%r15),%rsi
   22063:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
   22067:	e8 db fc ff ff       	call   21d47 <ata_command>
   2206c:	41 89 c4             	mov    %eax,%r12d
   2206f:	85 c0                	test   %eax,%eax
   22071:	78 1e                	js     22091 <atadev_command+0x183>
   22073:	41 89 47 70          	mov    %eax,0x70(%r15)
   22077:	48 8b 34 24          	mov    (%rsp),%rsi
   2207b:	49 8d 7f 28          	lea    0x28(%r15),%rdi
   2207f:	45 31 e4             	xor    %r12d,%r12d
   22082:	e8 ea 76 fe ff       	call   9771 <intf_plug_plug>
   22087:	4c 89 ff             	mov    %r15,%rdi
   2208a:	e8 af dd fe ff       	call   fe3e <ref_decrement>
   2208f:	eb 1e                	jmp    220af <atadev_command+0x1a1>
   22091:	4c 89 ff             	mov    %r15,%rdi
   22094:	44 89 e6             	mov    %r12d,%esi
   22097:	e8 2c fd ff ff       	call   21dc8 <atacmd_close>
   2209c:	4c 89 ff             	mov    %r15,%rdi
   2209f:	e8 9a dd fe ff       	call   fe3e <ref_decrement>
   220a4:	eb 09                	jmp    220af <atadev_command+0x1a1>
   220a6:	41 8a 45 11          	mov    0x11(%r13),%al
   220aa:	e9 6a ff ff ff       	jmp    22019 <atadev_command+0x10b>
   220af:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
   220b4:	48 2b 05 b5 7e 00 00 	sub    0x7eb5(%rip),%rax        # 29f70 <__stack_chk_guard>
   220bb:	74 05                	je     220c2 <atadev_command+0x1b4>
   220bd:	e8 9e 09 fe ff       	call   2a60 <__stack_chk_fail>
   220c2:	48 83 c4 58          	add    $0x58,%rsp
   220c6:	44 89 e0             	mov    %r12d,%eax
   220c9:	5b                   	pop    %rbx
   220ca:	5d                   	pop    %rbp
   220cb:	41 5c                	pop    %r12
   220cd:	41 5d                	pop    %r13
   220cf:	41 5e                	pop    %r14
   220d1:	41 5f                	pop    %r15
   220d3:	c3                   	ret    

00000000000220d4 <atadev_read_capacity>:
   220d4:	f3 0f 1e fa          	endbr64 
   220d8:	48 83 ec 10          	sub    $0x10,%rsp
   220dc:	45 31 c9             	xor    %r9d,%r9d
   220df:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   220e5:	31 c9                	xor    %ecx,%ecx
   220e7:	68 00 02 00 00       	push   $0x200
   220ec:	48 8d 15 ed 61 00 00 	lea    0x61ed(%rip),%rdx        # 282e0 <atacmd_identify>
   220f3:	e8 16 fe ff ff       	call   21f0e <atadev_command>
   220f8:	48 83 c4 18          	add    $0x18,%rsp
   220fc:	c3                   	ret    

00000000000220fd <atadev_write>:
   220fd:	f3 0f 1e fa          	endbr64 
   22101:	48 83 ec 10          	sub    $0x10,%rsp
   22105:	41 51                	push   %r9
   22107:	4d 89 c1             	mov    %r8,%r9
   2210a:	41 89 c8             	mov    %ecx,%r8d
   2210d:	48 89 d1             	mov    %rdx,%rcx
   22110:	48 8d 15 09 62 00 00 	lea    0x6209(%rip),%rdx        # 28320 <atacmd_write>
   22117:	e8 f2 fd ff ff       	call   21f0e <atadev_command>
   2211c:	48 83 c4 18          	add    $0x18,%rsp
   22120:	c3                   	ret    

0000000000022121 <atadev_read>:
   22121:	f3 0f 1e fa          	endbr64 
   22125:	48 83 ec 10          	sub    $0x10,%rsp
   22129:	41 51                	push   %r9
   2212b:	4d 89 c1             	mov    %r8,%r9
   2212e:	41 89 c8             	mov    %ecx,%r8d
   22131:	48 89 d1             	mov    %rdx,%rcx
   22134:	48 8d 15 25 62 00 00 	lea    0x6225(%rip),%rdx        # 28360 <atacmd_read>
   2213b:	e8 ce fd ff ff       	call   21f0e <atadev_command>
   22140:	48 83 c4 18          	add    $0x18,%rsp
   22144:	c3                   	ret    

0000000000022145 <atacmd_free>:
   22145:	f3 0f 1e fa          	endbr64 
   22149:	55                   	push   %rbp
   2214a:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   2214e:	48 89 fd             	mov    %rdi,%rbp
   22151:	48 8b 47 20          	mov    0x20(%rdi),%rax
   22155:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   22159:	48 89 42 08          	mov    %rax,0x8(%rdx)
   2215d:	48 89 10             	mov    %rdx,(%rax)
   22160:	e8 d9 dc fe ff       	call   fe3e <ref_decrement>
   22165:	48 89 ef             	mov    %rbp,%rdi
   22168:	5d                   	pop    %rbp
   22169:	e9 e1 a4 fe ff       	jmp    c64f <free>

000000000002216e <ata_open>:
   2216e:	f3 0f 1e fa          	endbr64 
   22172:	41 56                	push   %r14
   22174:	41 89 d6             	mov    %edx,%r14d
   22177:	41 54                	push   %r12
   22179:	49 89 fc             	mov    %rdi,%r12
   2217c:	bf 60 00 00 00       	mov    $0x60,%edi
   22181:	55                   	push   %rbp
   22182:	53                   	push   %rbx
   22183:	89 cb                	mov    %ecx,%ebx
   22185:	48 83 ec 18          	sub    $0x18,%rsp
   22189:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   2218e:	e8 c7 a4 fe ff       	call   c65a <zalloc>
   22193:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   22198:	48 85 c0             	test   %rax,%rax
   2219b:	75 07                	jne    221a4 <ata_open+0x36>
   2219d:	b8 77 bf 8b ce       	mov    $0xce8bbf77,%eax
   221a2:	eb 5e                	jmp    22202 <ata_open+0x94>
   221a4:	48 89 c5             	mov    %rax,%rbp
   221a7:	48 8d 05 32 42 00 00 	lea    0x4232(%rip),%rax        # 263e0 <null_intf>
   221ae:	48 8d 15 2b 60 00 00 	lea    0x602b(%rip),%rdx        # 281e0 <atadev_block_desc>
   221b5:	48 89 45 10          	mov    %rax,0x10(%rbp)
   221b9:	48 8d 7d 30          	lea    0x30(%rbp),%rdi
   221bd:	48 89 45 30          	mov    %rax,0x30(%rbp)
   221c1:	48 8d 05 d8 5f 00 00 	lea    0x5fd8(%rip),%rax        # 281a0 <atadev_ata_desc>
   221c8:	48 89 45 40          	mov    %rax,0x40(%rbp)
   221cc:	48 89 45 48          	mov    %rax,0x48(%rbp)
   221d0:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   221d4:	48 89 55 28          	mov    %rdx,0x28(%rbp)
   221d8:	48 89 6d 18          	mov    %rbp,0x18(%rbp)
   221dc:	48 89 6d 38          	mov    %rbp,0x38(%rbp)
   221e0:	44 89 75 50          	mov    %r14d,0x50(%rbp)
   221e4:	89 5d 54             	mov    %ebx,0x54(%rbp)
   221e7:	e8 85 75 fe ff       	call   9771 <intf_plug_plug>
   221ec:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
   221f0:	4c 89 e6             	mov    %r12,%rsi
   221f3:	e8 79 75 fe ff       	call   9771 <intf_plug_plug>
   221f8:	48 89 ef             	mov    %rbp,%rdi
   221fb:	e8 3e dc fe ff       	call   fe3e <ref_decrement>
   22200:	31 c0                	xor    %eax,%eax
   22202:	48 83 c4 18          	add    $0x18,%rsp
   22206:	5b                   	pop    %rbx
   22207:	5d                   	pop    %rbp
   22208:	41 5c                	pop    %r12
   2220a:	41 5e                	pop    %r14
   2220c:	c3                   	ret    

000000000002220d <edd_describe>:
   2220d:	f3 0f 1e fa          	endbr64 
   22211:	41 55                	push   %r13
   22213:	49 89 d5             	mov    %rdx,%r13
   22216:	41 54                	push   %r12
   22218:	55                   	push   %rbp
   22219:	48 89 f5             	mov    %rsi,%rbp
   2221c:	48 8d 35 ea ff ff ff 	lea    -0x16(%rip),%rsi        # 2220d <edd_describe>
   22223:	48 83 ec 10          	sub    $0x10,%rsp
   22227:	48 8b 05 42 7d 00 00 	mov    0x7d42(%rip),%rax        # 29f70 <__stack_chk_guard>
   2222e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   22233:	31 c0                	xor    %eax,%eax
   22235:	48 89 e2             	mov    %rsp,%rdx
   22238:	e8 c8 75 fe ff       	call   9805 <intf_get_dest_op_untyped>
   2223d:	48 8b 3c 24          	mov    (%rsp),%rdi
   22241:	49 89 c4             	mov    %rax,%r12
   22244:	e8 66 75 fe ff       	call   97af <intf_object>
   22249:	4d 85 e4             	test   %r12,%r12
   2224c:	74 11                	je     2225f <edd_describe+0x52>
   2224e:	48 89 c7             	mov    %rax,%rdi
   22251:	4c 89 ea             	mov    %r13,%rdx
   22254:	48 89 ee             	mov    %rbp,%rsi
   22257:	41 ff d4             	call   *%r12
   2225a:	41 89 c4             	mov    %eax,%r12d
   2225d:	eb 06                	jmp    22265 <edd_describe+0x58>
   2225f:	41 bc 7d df ea c3    	mov    $0xc3eadf7d,%r12d
   22265:	48 8b 3c 24          	mov    (%rsp),%rdi
   22269:	e8 d2 74 fe ff       	call   9740 <intf_put>
   2226e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   22273:	48 2b 05 f6 7c 00 00 	sub    0x7cf6(%rip),%rax        # 29f70 <__stack_chk_guard>
   2227a:	74 05                	je     22281 <edd_describe+0x74>
   2227c:	e8 df 07 fe ff       	call   2a60 <__stack_chk_fail>
   22281:	48 83 c4 10          	add    $0x10,%rsp
   22285:	44 89 e0             	mov    %r12d,%eax
   22288:	5d                   	pop    %rbp
   22289:	41 5c                	pop    %r12
   2228b:	41 5d                	pop    %r13
   2228d:	c3                   	ret    
